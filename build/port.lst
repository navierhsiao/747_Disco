ARM GAS  /tmp/ccqMaEIS.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"port.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.prvPortStartFirstTask,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	prvPortStartFirstTask:
  26              	.LFB7:
  27              		.file 1 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c"
   1:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
   2:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * FreeRTOS Kernel V10.3.1
   3:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *
   5:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * the Software without restriction, including without limitation the rights to
   8:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * subject to the following conditions:
  11:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *
  12:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * The above copyright notice and this permission notice shall be included in all
  13:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * copies or substantial portions of the Software.
  14:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *
  15:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *
  22:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * http://www.FreeRTOS.org
  23:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * http://aws.amazon.com/freertos
  24:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *
  25:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * 1 tab == 4 spaces!
  26:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
  27:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  28:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------
  29:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Implementation of functions defined in portable.h for the ARM CM4F port.
  30:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *----------------------------------------------------------*/
  31:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
ARM GAS  /tmp/ccqMaEIS.s 			page 2


  32:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Scheduler includes. */
  33:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #include "FreeRTOS.h"
  34:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #include "task.h"
  35:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  36:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #ifndef __VFP_FP__
  37:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#error This port can only be used when the project options are configured to enable hardware float
  38:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif
  39:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  40:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #ifndef configSYSTICK_CLOCK_HZ
  41:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#define configSYSTICK_CLOCK_HZ configCPU_CLOCK_HZ
  42:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Ensure the SysTick is clocked at the same frequency as the core. */
  43:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#define portNVIC_SYSTICK_CLK_BIT	( 1UL << 2UL )
  44:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #else
  45:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* The way the SysTick is clocked is not modified in case it is not the same
  46:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	as the core. */
  47:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#define portNVIC_SYSTICK_CLK_BIT	( 0 )
  48:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif
  49:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  50:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Constants required to manipulate the core.  Registers first... */
  51:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_CTRL_REG			( * ( ( volatile uint32_t * ) 0xe000e010 ) )
  52:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_LOAD_REG			( * ( ( volatile uint32_t * ) 0xe000e014 ) )
  53:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_CURRENT_VALUE_REG	( * ( ( volatile uint32_t * ) 0xe000e018 ) )
  54:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSPRI2_REG				( * ( ( volatile uint32_t * ) 0xe000ed20 ) )
  55:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* ...then bits in the registers. */
  56:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_INT_BIT			( 1UL << 1UL )
  57:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_ENABLE_BIT			( 1UL << 0UL )
  58:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_COUNT_FLAG_BIT		( 1UL << 16UL )
  59:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_PENDSVCLEAR_BIT 			( 1UL << 27UL )
  60:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_PEND_SYSTICK_CLEAR_BIT		( 1UL << 25UL )
  61:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  62:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Constants used to detect a Cortex-M7 r0p1 core, which should use the ARM_CM7
  63:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** r0p1 port. */
  64:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portCPUID							( * ( ( volatile uint32_t * ) 0xE000ed00 ) )
  65:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portCORTEX_M7_r0p1_ID				( 0x410FC271UL )
  66:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portCORTEX_M7_r0p0_ID				( 0x410FC270UL )
  67:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  68:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_PENDSV_PRI					( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 16UL )
  69:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_PRI				( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 24UL )
  70:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  71:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Constants required to check the validity of an interrupt priority. */
  72:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portFIRST_USER_INTERRUPT_NUMBER		( 16 )
  73:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_IP_REGISTERS_OFFSET_16 	( 0xE000E3F0 )
  74:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portAIRCR_REG						( * ( ( volatile uint32_t * ) 0xE000ED0C ) )
  75:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portMAX_8_BIT_VALUE					( ( uint8_t ) 0xff )
  76:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portTOP_BIT_OF_BYTE					( ( uint8_t ) 0x80 )
  77:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portMAX_PRIGROUP_BITS				( ( uint8_t ) 7 )
  78:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portPRIORITY_GROUP_MASK				( 0x07UL << 8UL )
  79:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portPRIGROUP_SHIFT					( 8UL )
  80:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  81:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Masks off all bits but the VECTACTIVE bits in the ICSR register. */
  82:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portVECTACTIVE_MASK					( 0xFFUL )
  83:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  84:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Constants required to manipulate the VFP. */
  85:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portFPCCR							( ( volatile uint32_t * ) 0xe000ef34 ) /* Floating point context control re
  86:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portASPEN_AND_LSPEN_BITS			( 0x3UL << 30UL )
  87:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  88:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Constants required to set up the initial stack. */
ARM GAS  /tmp/ccqMaEIS.s 			page 3


  89:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portINITIAL_XPSR					( 0x01000000 )
  90:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portINITIAL_EXC_RETURN				( 0xfffffffd )
  91:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  92:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* The systick is a 24-bit counter. */
  93:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portMAX_24_BIT_NUMBER				( 0xffffffUL )
  94:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  95:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* For strict compliance with the Cortex-M spec the task start address should
  96:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** have bit-0 clear, as it is loaded into the PC on exit from an ISR. */
  97:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portSTART_ADDRESS_MASK		( ( StackType_t ) 0xfffffffeUL )
  98:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  99:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* A fiddle factor to estimate the number of SysTick counts that would have
 100:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** occurred while the SysTick counter is stopped during tickless idle
 101:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** calculations. */
 102:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portMISSED_COUNTS_FACTOR			( 45UL )
 103:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 104:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Let the user override the pre-loading of the initial LR with the address of
 105:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** prvTaskExitError() in case it messes up unwinding of the stack in the
 106:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** debugger. */
 107:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #ifdef configTASK_RETURN_ADDRESS
 108:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#define portTASK_RETURN_ADDRESS	configTASK_RETURN_ADDRESS
 109:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #else
 110:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#define portTASK_RETURN_ADDRESS	prvTaskExitError
 111:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif
 112:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 113:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 114:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Setup the timer to generate the tick interrupts.  The implementation in this
 115:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * file is weak to allow application writers to change the timer used to
 116:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * generate the tick interrupt.
 117:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 118:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortSetupTimerInterrupt( void );
 119:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 120:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 121:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Exception handlers.
 122:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 123:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void xPortPendSVHandler( void ) __attribute__ (( naked ));
 124:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void xPortSysTickHandler( void );
 125:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortSVCHandler( void ) __attribute__ (( naked ));
 126:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 127:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 128:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Start first task is a separate function so it can be tested in isolation.
 129:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 130:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void prvPortStartFirstTask( void ) __attribute__ (( naked ));
 131:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 132:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 133:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Function to enable the VFP.
 134:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 135:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void vPortEnableVFP( void ) __attribute__ (( naked ));
 136:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 137:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 138:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Used to catch tasks that attempt to return from their implementing function.
 139:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 140:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void prvTaskExitError( void );
 141:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 142:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 143:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 144:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Each task maintains its own interrupt status in the critical nesting
 145:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** variable. */
ARM GAS  /tmp/ccqMaEIS.s 			page 4


 146:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;
 147:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 148:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 149:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * The number of SysTick increments that make up one tick period.
 150:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 151:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 152:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	static uint32_t ulTimerCountsForOneTick = 0;
 153:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 154:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 155:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 156:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * The maximum number of tick periods that can be suppressed is limited by the
 157:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * 24 bit resolution of the SysTick timer.
 158:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 159:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 160:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	static uint32_t xMaximumPossibleSuppressedTicks = 0;
 161:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 162:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 163:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 164:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Compensate for the CPU cycles that pass while the SysTick is stopped (low
 165:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * power functionality only.
 166:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 167:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 168:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	static uint32_t ulStoppedTimerCompensation = 0;
 169:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 170:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 171:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 172:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Used by the portASSERT_IF_INTERRUPT_PRIORITY_INVALID() macro to ensure
 173:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * FreeRTOS API functions are not called from interrupts that have been assigned
 174:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * a priority above configMAX_SYSCALL_INTERRUPT_PRIORITY.
 175:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 176:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if( configASSERT_DEFINED == 1 )
 177:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	 static uint8_t ucMaxSysCallPriority = 0;
 178:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	 static uint32_t ulMaxPRIGROUPValue = 0;
 179:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	 static const volatile uint8_t * const pcInterruptPriorityRegisters = ( const volatile uint8_t * c
 180:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif /* configASSERT_DEFINED */
 181:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 182:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 183:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 184:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 185:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * See header file for description.
 186:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 187:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParam
 188:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 189:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 190:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	interrupt. */
 191:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 192:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Offset added to account for the way the MCU uses the stack on entry/exit
 193:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	of interrupts, and to ensure alignment. */
 194:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 196:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 197:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 198:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 199:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 200:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 201:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 202:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Save code space by skipping register initialisation. */
ARM GAS  /tmp/ccqMaEIS.s 			page 5


 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 204:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 205:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 206:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* A save method is being used that requires each task to maintain its
 207:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	own exec return value. */
 208:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 209:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = portINITIAL_EXC_RETURN;
 210:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 211:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
 212:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 213:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	return pxTopOfStack;
 214:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 215:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 216:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 217:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void prvTaskExitError( void )
 218:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 219:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** volatile uint32_t ulDummy = 0;
 220:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 221:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* A function that implements a task must not exit or attempt to return to
 222:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	its caller as there is nothing to return to.  If a task wants to exit it
 223:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	should instead call vTaskDelete( NULL ).
 224:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 225:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	Artificially force an assert() to be triggered if configASSERT() is
 226:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	defined, then stop here so application writers can catch the error. */
 227:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( uxCriticalNesting == ~0UL );
 228:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 229:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	while( ulDummy == 0 )
 230:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 231:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* This file calls prvTaskExitError() after the scheduler has been
 232:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		started to remove a compiler warning about the function being defined
 233:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		but never called.  ulDummy is used purely to quieten other warnings
 234:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		about code appearing after this function is called - making ulDummy
 235:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		volatile makes the compiler think the function could return and
 236:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		therefore not output an 'unreachable code' warning for code that appears
 237:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		after it. */
 238:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 239:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 240:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 241:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 242:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortSVCHandler( void )
 243:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 244:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	__asm volatile (
 245:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	ldr	r3, pxCurrentTCBConst2		\n" /* Restore the context. */
 246:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	ldr r1, [r3]					\n" /* Use pxCurrentTCBConst to get the pxCurrentTCB address. */
 247:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	ldr r0, [r1]					\n" /* The first item in pxCurrentTCB is the task top of stack. */
 248:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	ldmia r0!, {r4-r11, r14}		\n" /* Pop the registers that are not automatically saved on excep
 249:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	msr psp, r0						\n" /* Restore the task stack pointer. */
 250:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	isb								\n"
 251:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	mov r0, #0 						\n"
 252:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	msr	basepri, r0					\n"
 253:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	bx r14							\n"
 254:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"									\n"
 255:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	.align 4						\n"
 256:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"pxCurrentTCBConst2: .word pxCurrentTCB				\n"
 257:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				);
 258:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 259:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccqMaEIS.s 			page 6


 260:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 261:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void prvPortStartFirstTask( void )
 262:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
  28              		.loc 1 262 1 view -0
  29              		.cfi_startproc
  30              		@ Naked Function: prologue and epilogue provided by programmer.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 263:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Start the first task.  This also clears the bit that indicates the FPU is
 264:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	in use in case the FPU was used before the scheduler was started - which
 265:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	would otherwise result in the unnecessary leaving of space in the SVC stack
 266:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	for lazy saving of FPU registers. */
 267:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	__asm volatile(
  33              		.loc 1 267 2 view .LVU1
  34              		.syntax unified
  35              	@ 267 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c" 1
  36 0000 0848     		 ldr r0, =0xE000ED08 	
  37 0002 0068     	 ldr r0, [r0] 			
  38 0004 0068     	 ldr r0, [r0] 			
  39 0006 80F30888 	 msr msp, r0			
  40 000a 4FF00000 	 mov r0, #0			
  41 000e 80F31488 	 msr control, r0		
  42 0012 62B6     	 cpsie i				
  43 0014 61B6     	 cpsie f				
  44 0016 BFF34F8F 	 dsb					
  45 001a BFF36F8F 	 isb					
  46 001e 00DF     	 svc 0					
  47 0020 00BF     	 nop					
  48              	
  49              	@ 0 "" 2
 268:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" ldr r0, =0xE000ED08 	\n" /* Use the NVIC offset register to locate the stack. */
 269:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" ldr r0, [r0] 			\n"
 270:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" ldr r0, [r0] 			\n"
 271:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" msr msp, r0			\n" /* Set the msp back to the start of the stack. */
 272:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" mov r0, #0			\n" /* Clear the bit that indicates the FPU is in use, see comment above. */
 273:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" msr control, r0		\n"
 274:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" cpsie i				\n" /* Globally enable interrupts. */
 275:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" cpsie f				\n"
 276:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" dsb					\n"
 277:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" isb					\n"
 278:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" svc 0					\n" /* System call to start first task. */
 279:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" nop					\n"
 280:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				);
 281:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
  50              		.loc 1 281 1 is_stmt 0 view .LVU2
  51              		.thumb
  52              		.syntax unified
  53              		.cfi_endproc
  54              	.LFE7:
  56 0022 0000     		.section	.text.vPortEnableVFP,"ax",%progbits
  57              		.align	1
  58              		.p2align 2,,3
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu fpv5-d16
  64              	vPortEnableVFP:
ARM GAS  /tmp/ccqMaEIS.s 			page 7


  65              	.LFB15:
 282:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 283:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 284:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 285:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * See header file for description.
 286:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 287:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** BaseType_t xPortStartScheduler( void )
 288:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 289:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 290:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	See http://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
 291:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( configMAX_SYSCALL_INTERRUPT_PRIORITY );
 292:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 293:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* This port can be used on all revisions of the Cortex-M7 core other than
 294:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	the r0p1 parts.  r0p1 parts should use the port from the
 295:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/source/portable/GCC/ARM_CM7/r0p1 directory. */
 296:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 297:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 298:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 299:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#if( configASSERT_DEFINED == 1 )
 300:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 301:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		volatile uint32_t ulOriginalPriority;
 302:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( portNVIC_I
 303:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		volatile uint8_t ucMaxPriorityValue;
 304:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 305:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Determine the maximum priority from which ISR safe FreeRTOS API
 306:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		functions can be called.  ISR safe functions are those that end in
 307:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		"FromISR".  FreeRTOS maintains separate thread and ISR API functions to
 308:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ensure interrupt entry is as fast and simple as possible.
 309:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 310:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		Save the interrupt priority value that is about to be clobbered. */
 311:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulOriginalPriority = *pucFirstUserPriorityRegister;
 312:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 313:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Determine the number of priority bits available.  First write to all
 314:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		possible bits. */
 315:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 316:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 317:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Read the value back to see how many bits stuck. */
 318:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 319:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 320:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Use the same mask on the maximum system call priority. */
 321:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 322:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 323:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Calculate the maximum acceptable priority group value for the number
 324:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		of bits read back. */
 325:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 326:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 327:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 328:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			ulMaxPRIGROUPValue--;
 329:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 330:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 331:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 332:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		#ifdef __NVIC_PRIO_BITS
 333:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 334:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Check the CMSIS configuration that defines the number of
 335:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			priority bits matches the number of priority bits actually queried
 336:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			from the hardware. */
 337:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BITS );
ARM GAS  /tmp/ccqMaEIS.s 			page 8


 338:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 339:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		#endif
 340:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 341:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		#ifdef configPRIO_BITS
 342:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 343:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Check the FreeRTOS configuration that defines the number of
 344:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			priority bits matches the number of priority bits actually queried
 345:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			from the hardware. */
 346:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 347:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 348:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		#endif
 349:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 350:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Shift the priority group value back to its position within the AIRCR
 351:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		register. */
 352:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 353:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 354:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 355:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Restore the clobbered interrupt priority register to its original
 356:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		value. */
 357:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		*pucFirstUserPriorityRegister = ulOriginalPriority;
 358:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 359:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#endif /* conifgASSERT_DEFINED */
 360:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 361:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Make PendSV and SysTick the lowest priority interrupts. */
 362:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 363:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 364:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 365:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Start the timer that generates the tick ISR.  Interrupts are disabled
 366:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	here already. */
 367:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	vPortSetupTimerInterrupt();
 368:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 369:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Initialise the critical nesting count ready for the first task. */
 370:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting = 0;
 371:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 372:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Ensure the VFP is enabled - it should be anyway. */
 373:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	vPortEnableVFP();
 374:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 375:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Lazy save always. */
 376:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 377:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 378:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Start the first task. */
 379:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	prvPortStartFirstTask();
 380:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 381:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Should never get here as the tasks will now be executing!  Call the task
 382:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	exit error function to prevent compiler warnings about a static function
 383:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	not being called in the case that the application writer overrides this
 384:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	functionality by defining configTASK_RETURN_ADDRESS.  Call
 385:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	vTaskSwitchContext() so link time optimisation does not remove the
 386:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	symbol. */
 387:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	vTaskSwitchContext();
 388:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	prvTaskExitError();
 389:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 390:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Should not get here! */
 391:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	return 0;
 392:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 393:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 394:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
ARM GAS  /tmp/ccqMaEIS.s 			page 9


 395:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortEndScheduler( void )
 396:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 397:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Not implemented in ports where there is nothing to return to.
 398:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	Artificially force an assert. */
 399:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( uxCriticalNesting == 1000UL );
 400:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 401:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 402:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 403:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortEnterCritical( void )
 404:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 405:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 406:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting++;
 407:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 408:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* This is not the interrupt safe version of the enter critical function so
 409:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	assert() if it is being called from an interrupt context.  Only API
 410:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	functions that end in "FromISR" can be used in an interrupt.  Only assert if
 411:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	the critical nesting count is 1 to protect against recursive calls if the
 412:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	assert function also uses a critical section. */
 413:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	if( uxCriticalNesting == 1 )
 414:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 415:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 416:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 417:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 418:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 419:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 420:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortExitCritical( void )
 421:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 422:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( uxCriticalNesting );
 423:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 424:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	if( uxCriticalNesting == 0 )
 425:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 426:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		portENABLE_INTERRUPTS();
 427:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 428:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 429:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 430:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 431:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void xPortPendSVHandler( void )
 432:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 433:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* This is a naked function. */
 434:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 435:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	__asm volatile
 436:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	(
 437:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	mrs r0, psp							\n"
 438:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	isb									\n"
 439:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 440:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	ldr	r3, pxCurrentTCBConst			\n" /* Get the location of the current TCB. */
 441:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	ldr	r2, [r3]						\n"
 442:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 443:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	tst r14, #0x10						\n" /* Is the task using the FPU context?  If so, push high vfp registers. *
 444:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	it eq								\n"
 445:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	vstmdbeq r0!, {s16-s31}				\n"
 446:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 447:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	stmdb r0!, {r4-r11, r14}			\n" /* Save the core registers. */
 448:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	str r0, [r2]						\n" /* Save the new top of stack into the first member of the TCB. */
 449:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 450:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	stmdb sp!, {r0, r3}					\n"
 451:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	mov r0, %0 							\n"
ARM GAS  /tmp/ccqMaEIS.s 			page 10


 452:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	msr basepri, r0						\n"
 453:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	dsb									\n"
 454:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	isb									\n"
 455:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	bl vTaskSwitchContext				\n"
 456:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	mov r0, #0							\n"
 457:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	msr basepri, r0						\n"
 458:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	ldmia sp!, {r0, r3}					\n"
 459:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 460:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	ldr r1, [r3]						\n" /* The first item in pxCurrentTCB is the task top of stack. */
 461:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	ldr r0, [r1]						\n"
 462:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 463:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	ldmia r0!, {r4-r11, r14}			\n" /* Pop the core registers. */
 464:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 465:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	tst r14, #0x10						\n" /* Is the task using the FPU context?  If so, pop the high vfp registers
 466:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	it eq								\n"
 467:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	vldmiaeq r0!, {s16-s31}				\n"
 468:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 469:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	msr psp, r0							\n"
 470:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	isb									\n"
 471:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 472:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#ifdef WORKAROUND_PMU_CM001 /* XMC4000 specific errata workaround. */
 473:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		#if WORKAROUND_PMU_CM001 == 1
 474:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"			push { r14 }				\n"
 475:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"			pop { pc }					\n"
 476:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		#endif
 477:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#endif
 478:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 479:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	bx r14								\n"
 480:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 481:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	.align 4							\n"
 482:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"pxCurrentTCBConst: .word pxCurrentTCB	\n"
 483:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	::"i"(configMAX_SYSCALL_INTERRUPT_PRIORITY)
 484:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	);
 485:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 486:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 487:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 488:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void xPortSysTickHandler( void )
 489:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 490:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
 491:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	executes all interrupts must be unmasked.  There is therefore no need to
 492:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	save and then restore the interrupt mask value as its value is already
 493:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	known. */
 494:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 495:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 496:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Increment the RTOS tick. */
 497:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		if( xTaskIncrementTick() != pdFALSE )
 498:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 499:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* A context switch is required.  Context switching is performed in
 500:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			the PendSV interrupt.  Pend the PendSV interrupt. */
 501:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 502:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 503:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 504:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portENABLE_INTERRUPTS();
 505:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 506:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 507:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 508:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
ARM GAS  /tmp/ccqMaEIS.s 			page 11


 509:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 510:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	__attribute__((weak)) void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )
 511:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 512:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements;
 513:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	TickType_t xModifiableIdleTime;
 514:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 515:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Make sure the SysTick reload value does not overflow the counter. */
 516:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
 517:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 518:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			xExpectedIdleTime = xMaximumPossibleSuppressedTicks;
 519:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 520:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 521:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Stop the SysTick momentarily.  The time the SysTick is stopped for
 522:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		is accounted for as best it can be, but using the tickless mode will
 523:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		inevitably result in some tiny drift of the time maintained by the
 524:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		kernel with respect to calendar time. */
 525:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		portNVIC_SYSTICK_CTRL_REG &= ~portNVIC_SYSTICK_ENABLE_BIT;
 526:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 527:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Calculate the reload value required to wait xExpectedIdleTime
 528:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		tick periods.  -1 is used because this code will execute part way
 529:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		through one of the tick periods. */
 530:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulReloadValue = portNVIC_SYSTICK_CURRENT_VALUE_REG + ( ulTimerCountsForOneTick * ( xExpectedIdleT
 531:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		if( ulReloadValue > ulStoppedTimerCompensation )
 532:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 533:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			ulReloadValue -= ulStoppedTimerCompensation;
 534:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 535:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 536:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Enter a critical section but don't use the taskENTER_CRITICAL()
 537:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		method as that will mask interrupts that should exit sleep mode. */
 538:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		__asm volatile( "cpsid i" ::: "memory" );
 539:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		__asm volatile( "dsb" );
 540:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		__asm volatile( "isb" );
 541:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 542:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* If a context switch is pending or a task is waiting for the scheduler
 543:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		to be unsuspended then abandon the low power entry. */
 544:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		if( eTaskConfirmSleepModeStatus() == eAbortSleep )
 545:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 546:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Restart from whatever is left in the count register to complete
 547:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			this tick period. */
 548:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_LOAD_REG = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 549:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 550:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Restart SysTick. */
 551:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 552:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 553:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Reset the reload register to the value required for normal tick
 554:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			periods. */
 555:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 556:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 557:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Re-enable interrupts - see comments above the cpsid instruction()
 558:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			above. */
 559:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 560:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 561:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		else
 562:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 563:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Set the new reload value. */
 564:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
 565:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
ARM GAS  /tmp/ccqMaEIS.s 			page 12


 566:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Clear the SysTick count flag and set the count value back to
 567:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			zero. */
 568:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 569:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 570:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Restart SysTick. */
 571:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 572:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 573:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Sleep until something happens.  configPRE_SLEEP_PROCESSING() can
 574:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			set its parameter to 0 to indicate that its implementation contains
 575:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			its own wait for interrupt or wait for event instruction, and so wfi
 576:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			should not be executed again.  However, the original expected idle
 577:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			time variable must remain unmodified, so a copy is taken. */
 578:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			xModifiableIdleTime = xExpectedIdleTime;
 579:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			configPRE_SLEEP_PROCESSING( xModifiableIdleTime );
 580:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			if( xModifiableIdleTime > 0 )
 581:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			{
 582:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				__asm volatile( "dsb" ::: "memory" );
 583:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				__asm volatile( "wfi" );
 584:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				__asm volatile( "isb" );
 585:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			}
 586:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			configPOST_SLEEP_PROCESSING( xExpectedIdleTime );
 587:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 588:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Re-enable interrupts to allow the interrupt that brought the MCU
 589:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			out of sleep mode to execute immediately.  see comments above
 590:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__disable_interrupt() call above. */
 591:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 592:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "dsb" );
 593:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "isb" );
 594:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 595:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Disable interrupts again because the clock is about to be stopped
 596:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			and interrupts that execute while the clock is stopped will increase
 597:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			any slippage between the time maintained by the RTOS and calendar
 598:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			time. */
 599:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "cpsid i" ::: "memory" );
 600:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "dsb" );
 601:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "isb" );
 602:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 603:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Disable the SysTick clock without reading the
 604:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CTRL_REG register to ensure the
 605:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_COUNT_FLAG_BIT is not cleared if it is set.  Again,
 606:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			the time the SysTick is stopped for is accounted for as best it can
 607:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			be, but using the tickless mode will inevitably result in some tiny
 608:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			drift of the time maintained by the kernel with respect to calendar
 609:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			time*/
 610:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT );
 611:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 612:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Determine if the SysTick clock has already counted to zero and
 613:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			been set back to the current reload value (the reload back being
 614:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			correct for the entire expected idle time) or if the SysTick is yet
 615:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			to count to zero (in which case an interrupt other than the SysTick
 616:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			must have brought the system out of sleep mode). */
 617:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
 618:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			{
 619:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				uint32_t ulCalculatedLoadValue;
 620:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 621:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				/* The tick interrupt is already pending, and the SysTick count
 622:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				reloaded with ulReloadValue.  Reset the
ARM GAS  /tmp/ccqMaEIS.s 			page 13


 623:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				portNVIC_SYSTICK_LOAD_REG with whatever remains of this tick
 624:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				period. */
 625:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_
 626:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 627:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				/* Don't allow a tiny value, or values that have somehow
 628:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				underflowed because the post sleep hook did something
 629:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				that took too long. */
 630:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				if( ( ulCalculatedLoadValue < ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimer
 631:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				{
 632:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
 633:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				}
 634:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 635:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
 636:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 637:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				/* As the pending tick will be processed as soon as this
 638:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				function exits, the tick value maintained by the tick is stepped
 639:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				forward by one less than the time spent waiting. */
 640:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				ulCompleteTickPeriods = xExpectedIdleTime - 1UL;
 641:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			}
 642:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			else
 643:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			{
 644:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				/* Something other than the tick interrupt ended the sleep.
 645:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				Work out how long the sleep lasted rounded to complete tick
 646:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				periods (not the ulReload value which accounted for part
 647:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				ticks). */
 648:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - portNVIC_SYSTI
 649:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 650:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				/* How many complete tick periods passed while the processor
 651:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				was waiting? */
 652:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
 653:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 654:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				/* The reload value is set to whatever fraction of a single tick
 655:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				period remains. */
 656:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOneTick ) - ulC
 657:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			}
 658:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 659:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Restart SysTick so it runs from portNVIC_SYSTICK_LOAD_REG
 660:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			again, then set portNVIC_SYSTICK_LOAD_REG back to its standard
 661:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			value. */
 662:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 663:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 664:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			vTaskStepTick( ulCompleteTickPeriods );
 665:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 666:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 667:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Exit with interrupts enabled. */
 668:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 669:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 670:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 671:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 672:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif /* #if configUSE_TICKLESS_IDLE */
 673:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 674:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 675:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 676:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Setup the systick timer to generate the tick interrupts at the required
 677:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * frequency.
 678:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 679:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** __attribute__(( weak )) void vPortSetupTimerInterrupt( void )
ARM GAS  /tmp/ccqMaEIS.s 			page 14


 680:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 681:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Calculate the constants required to configure the tick interrupt. */
 682:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#if( configUSE_TICKLESS_IDLE == 1 )
 683:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 684:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
 685:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
 686:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOC
 687:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 688:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#endif /* configUSE_TICKLESS_IDLE */
 689:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 690:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Stop and clear the SysTick. */
 691:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = 0UL;
 692:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 693:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 694:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Configure SysTick to interrupt at the requested rate. */
 695:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 696:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 697:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 698:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 699:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 700:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* This is a naked function. */
 701:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void vPortEnableVFP( void )
 702:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
  66              		.loc 1 702 1 is_stmt 1 view -0
  67              		.cfi_startproc
  68              		@ Naked Function: prologue and epilogue provided by programmer.
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
 703:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	__asm volatile
  71              		.loc 1 703 2 view .LVU4
  72              		.syntax unified
  73              	@ 703 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c" 1
  74 0000 DFF80C00 			ldr.w r0, =0xE000ED88		
  75 0004 0168     		ldr r1, [r0]				
  76              									
  77 0006 41F47001 		orr r1, r1, #( 0xf << 20 )	
  78 000a 0160     		str r1, [r0]				
  79 000c 7047     		bx r14						
  80              	@ 0 "" 2
 704:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	(
 705:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		"	ldr.w r0, =0xE000ED88		\n" /* The FPU enable bits are in the CPACR. */
 706:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		"	ldr r1, [r0]				\n"
 707:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		"								\n"
 708:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
 709:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		"	str r1, [r0]				\n"
 710:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		"	bx r14						"
 711:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	);
 712:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
  81              		.loc 1 712 1 is_stmt 0 view .LVU5
  82              		.thumb
  83              		.syntax unified
  84              		.cfi_endproc
  85              	.LFE15:
  87 000e 0000     		.section	.text.prvTaskExitError,"ax",%progbits
  88              		.align	1
  89              		.p2align 2,,3
  90              		.syntax unified
ARM GAS  /tmp/ccqMaEIS.s 			page 15


  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv5-d16
  95              	prvTaskExitError:
  96              	.LFB5:
 218:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** volatile uint32_t ulDummy = 0;
  97              		.loc 1 218 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 8
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 219:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 102              		.loc 1 219 1 view .LVU7
 227:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 103              		.loc 1 227 2 is_stmt 0 view .LVU8
 104 0000 0E4B     		ldr	r3, .L11
 218:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** volatile uint32_t ulDummy = 0;
 105              		.loc 1 218 1 view .LVU9
 106 0002 82B0     		sub	sp, sp, #8
 107              	.LCFI0:
 108              		.cfi_def_cfa_offset 8
 219:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 109              		.loc 1 219 19 view .LVU10
 110 0004 0022     		movs	r2, #0
 227:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 111              		.loc 1 227 2 view .LVU11
 112 0006 1B68     		ldr	r3, [r3]
 219:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 113              		.loc 1 219 19 view .LVU12
 114 0008 0192     		str	r2, [sp, #4]
 227:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 115              		.loc 1 227 2 is_stmt 1 view .LVU13
 116 000a 0133     		adds	r3, r3, #1
 117 000c 08D0     		beq	.L5
 118              	.LBB43:
 119              	.LBI43:
 217:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 120              		.loc 1 217 13 view .LVU14
 121              	.LBB44:
 227:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 122              		.loc 1 227 2 view .LVU15
 123              	.LBB45:
 124              	.LBI45:
 125              		.file 2 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
ARM GAS  /tmp/ccqMaEIS.s 			page 16


  14:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccqMaEIS.s 			page 17


  71:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
ARM GAS  /tmp/ccqMaEIS.s 			page 18


 128:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
ARM GAS  /tmp/ccqMaEIS.s 			page 19


 185:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 126              		.loc 2 191 30 view .LVU16
 127              	.LBB46:
 192:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 128              		.loc 2 193 1 view .LVU17
 194:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 129              		.loc 2 195 2 view .LVU18
 130              		.syntax unified
 131              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 132 000e 4FF05003 			mov r3, #80												
 133 0012 83F31188 		msr basepri, r3											
 134 0016 BFF36F8F 		isb														
 135 001a BFF34F8F 		dsb														
 136              	
 137              	@ 0 "" 2
 138              	.LVL0:
 139              		.thumb
 140              		.syntax unified
 141              	.L6:
 142              		.loc 2 195 2 is_stmt 0 view .LVU19
 143              	.LBE46:
 144              	.LBE45:
 227:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 145              		.loc 1 227 2 is_stmt 1 view .LVU20
 227:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 146              		.loc 1 227 2 view .LVU21
 227:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 147              		.loc 1 227 2 view .LVU22
 227:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 148              		.loc 1 227 2 view .LVU23
 227:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 149              		.loc 1 227 2 view .LVU24
 227:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 150              		.loc 1 227 2 view .LVU25
 151 001e FEE7     		b	.L6
 152              	.L5:
 153              	.LBE44:
 154              	.LBE43:
 227:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 155              		.loc 1 227 43 view .LVU26
 228:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	while( ulDummy == 0 )
 156              		.loc 1 228 2 view .LVU27
 157              	.LBB47:
 158              	.LBI47:
 191:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 159              		.loc 2 191 30 view .LVU28
 160              	.LBB48:
 193:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 161              		.loc 2 193 1 view .LVU29
ARM GAS  /tmp/ccqMaEIS.s 			page 20


 162              		.loc 2 195 2 view .LVU30
 163              		.syntax unified
 164              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 165 0020 4FF05003 			mov r3, #80												
 166 0024 83F31188 		msr basepri, r3											
 167 0028 BFF36F8F 		isb														
 168 002c BFF34F8F 		dsb														
 169              	
 170              	@ 0 "" 2
 171              	.LVL1:
 172              		.thumb
 173              		.syntax unified
 174              	.L7:
 175              		.loc 2 195 2 is_stmt 0 view .LVU31
 176              	.LBE48:
 177              	.LBE47:
 238:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 178              		.loc 1 238 2 is_stmt 1 discriminator 1 view .LVU32
 229:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 179              		.loc 1 229 7 discriminator 1 view .LVU33
 229:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 180              		.loc 1 229 17 is_stmt 0 discriminator 1 view .LVU34
 181 0030 019B     		ldr	r3, [sp, #4]
 229:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 182              		.loc 1 229 7 discriminator 1 view .LVU35
 183 0032 002B     		cmp	r3, #0
 184 0034 FCD0     		beq	.L7
 239:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 185              		.loc 1 239 1 view .LVU36
 186 0036 02B0     		add	sp, sp, #8
 187              	.LCFI1:
 188              		.cfi_def_cfa_offset 0
 189              		@ sp needed
 190 0038 7047     		bx	lr
 191              	.L12:
 192 003a 00BF     		.align	2
 193              	.L11:
 194 003c 00000000 		.word	.LANCHOR0
 195              		.cfi_endproc
 196              	.LFE5:
 198              		.section	.text.pxPortInitialiseStack,"ax",%progbits
 199              		.align	1
 200              		.p2align 2,,3
 201              		.global	pxPortInitialiseStack
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv5-d16
 207              	pxPortInitialiseStack:
 208              	.LVL2:
 209              	.LFB4:
 188:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 210              		.loc 1 188 1 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
ARM GAS  /tmp/ccqMaEIS.s 			page 21


 194:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 215              		.loc 1 194 2 view .LVU38
 188:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 216              		.loc 1 188 1 is_stmt 0 view .LVU39
 217 0000 70B4     		push	{r4, r5, r6}
 218              	.LCFI2:
 219              		.cfi_def_cfa_offset 12
 220              		.cfi_offset 4, -12
 221              		.cfi_offset 5, -8
 222              		.cfi_offset 6, -4
 188:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 223              		.loc 1 188 1 view .LVU40
 224 0002 0346     		mov	r3, r0
 225              	.LVL3:
 196:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 226              		.loc 1 196 2 is_stmt 1 view .LVU41
 196:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 227              		.loc 1 196 16 is_stmt 0 view .LVU42
 228 0004 4FF08076 		mov	r6, #16777216
 200:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 229              		.loc 1 200 16 view .LVU43
 230 0008 084D     		ldr	r5, .L15
 209:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 231              		.loc 1 209 16 view .LVU44
 232 000a 6FF00204 		mvn	r4, #2
 198:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 233              		.loc 1 198 45 view .LVU45
 234 000e 21F00101 		bic	r1, r1, #1
 235              	.LVL4:
 214:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 236              		.loc 1 214 1 view .LVU46
 237 0012 4438     		subs	r0, r0, #68
 238              	.LVL5:
 198:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 239              		.loc 1 198 16 view .LVU47
 240 0014 C163     		str	r1, [r0, #60]
 196:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 241              		.loc 1 196 16 view .LVU48
 242 0016 43F8046C 		str	r6, [r3, #-4]
 197:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 243              		.loc 1 197 2 is_stmt 1 view .LVU49
 244              	.LVL6:
 198:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 245              		.loc 1 198 2 view .LVU50
 199:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 246              		.loc 1 199 2 view .LVU51
 200:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 247              		.loc 1 200 2 view .LVU52
 200:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 248              		.loc 1 200 16 is_stmt 0 view .LVU53
 249 001a 43F80C5C 		str	r5, [r3, #-12]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 250              		.loc 1 203 2 is_stmt 1 view .LVU54
 251              	.LVL7:
 204:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 252              		.loc 1 204 2 view .LVU55
 208:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = portINITIAL_EXC_RETURN;
ARM GAS  /tmp/ccqMaEIS.s 			page 22


 253              		.loc 1 208 2 view .LVU56
 209:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 254              		.loc 1 209 2 view .LVU57
 209:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 255              		.loc 1 209 16 is_stmt 0 view .LVU58
 256 001e 43F8244C 		str	r4, [r3, #-36]
 211:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 257              		.loc 1 211 2 is_stmt 1 view .LVU59
 258              	.LVL8:
 213:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 259              		.loc 1 213 2 view .LVU60
 204:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 260              		.loc 1 204 16 is_stmt 0 view .LVU61
 261 0022 43F8202C 		str	r2, [r3, #-32]
 214:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 262              		.loc 1 214 1 view .LVU62
 263 0026 70BC     		pop	{r4, r5, r6}
 264              	.LCFI3:
 265              		.cfi_restore 6
 266              		.cfi_restore 5
 267              		.cfi_restore 4
 268              		.cfi_def_cfa_offset 0
 269 0028 7047     		bx	lr
 270              	.L16:
 271 002a 00BF     		.align	2
 272              	.L15:
 273 002c 00000000 		.word	prvTaskExitError
 274              		.cfi_endproc
 275              	.LFE4:
 277              		.section	.text.SVC_Handler,"ax",%progbits
 278              		.align	1
 279              		.p2align 2,,3
 280              		.global	SVC_Handler
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 284              		.fpu fpv5-d16
 286              	SVC_Handler:
 287              	.LFB6:
 243:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	__asm volatile (
 288              		.loc 1 243 1 is_stmt 1 view -0
 289              		.cfi_startproc
 290              		@ Naked Function: prologue and epilogue provided by programmer.
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 244:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	ldr	r3, pxCurrentTCBConst2		\n" /* Restore the context. */
 293              		.loc 1 244 2 view .LVU64
 294              		.syntax unified
 295              	@ 244 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c" 1
 296 0000 074B     			ldr	r3, pxCurrentTCBConst2		
 297 0002 1968     		ldr r1, [r3]					
 298 0004 0868     		ldr r0, [r1]					
 299 0006 B0E8F04F 		ldmia r0!, {r4-r11, r14}		
 300 000a 80F30988 		msr psp, r0						
 301 000e BFF36F8F 		isb								
 302 0012 4FF00000 		mov r0, #0 						
 303 0016 80F31188 		msr	basepri, r0					
ARM GAS  /tmp/ccqMaEIS.s 			page 23


 304 001a 7047     		bx r14							
 305              										
 306 001c AFF30080 		.align 4						
 307 0020 00000000 	pxCurrentTCBConst2: .word pxCurrentTCB				
 308              	
 309              	@ 0 "" 2
 258:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 310              		.loc 1 258 1 is_stmt 0 view .LVU65
 311              		.thumb
 312              		.syntax unified
 313              		.cfi_endproc
 314              	.LFE6:
 316              		.section	.text.vPortEndScheduler,"ax",%progbits
 317              		.align	1
 318              		.p2align 2,,3
 319              		.global	vPortEndScheduler
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu fpv5-d16
 325              	vPortEndScheduler:
 326              	.LFB9:
 396:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Not implemented in ports where there is nothing to return to.
 327              		.loc 1 396 1 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              		@ link register save eliminated.
 399:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 332              		.loc 1 399 2 view .LVU67
 333 0000 074B     		ldr	r3, .L21
 334 0002 1B68     		ldr	r3, [r3]
 335 0004 B3F57A7F 		cmp	r3, #1000
 336 0008 08D0     		beq	.L18
 399:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 337              		.loc 1 399 2 view .LVU68
 338              	.LBB49:
 339              	.LBI49:
 191:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 340              		.loc 2 191 30 view .LVU69
 341              	.LBB50:
 193:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 342              		.loc 2 193 1 view .LVU70
 343              		.loc 2 195 2 view .LVU71
 344              		.syntax unified
 345              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 346 000a 4FF05003 			mov r3, #80												
 347 000e 83F31188 		msr basepri, r3											
 348 0012 BFF36F8F 		isb														
 349 0016 BFF34F8F 		dsb														
 350              	
 351              	@ 0 "" 2
 352              	.LVL9:
 353              		.thumb
 354              		.syntax unified
 355              	.L20:
 356              		.loc 2 195 2 is_stmt 0 view .LVU72
ARM GAS  /tmp/ccqMaEIS.s 			page 24


 357              	.LBE50:
 358              	.LBE49:
 399:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 359              		.loc 1 399 2 is_stmt 1 discriminator 1 view .LVU73
 399:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 360              		.loc 1 399 2 discriminator 1 view .LVU74
 399:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 361              		.loc 1 399 2 discriminator 1 view .LVU75
 399:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 362              		.loc 1 399 2 discriminator 1 view .LVU76
 399:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 363              		.loc 1 399 2 discriminator 1 view .LVU77
 399:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 364              		.loc 1 399 2 discriminator 1 view .LVU78
 365 001a FEE7     		b	.L20
 366              	.L18:
 400:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 367              		.loc 1 400 1 is_stmt 0 view .LVU79
 368 001c 7047     		bx	lr
 369              	.L22:
 370 001e 00BF     		.align	2
 371              	.L21:
 372 0020 00000000 		.word	.LANCHOR0
 373              		.cfi_endproc
 374              	.LFE9:
 376              		.section	.text.vPortEnterCritical,"ax",%progbits
 377              		.align	1
 378              		.p2align 2,,3
 379              		.global	vPortEnterCritical
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	vPortEnterCritical:
 386              	.LFB10:
 404:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 387              		.loc 1 404 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 405:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting++;
 392              		.loc 1 405 2 view .LVU81
 393              	.LBB51:
 394              	.LBI51:
 191:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 395              		.loc 2 191 30 view .LVU82
 396              	.LBB52:
 193:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 397              		.loc 2 193 1 view .LVU83
 398              		.loc 2 195 2 view .LVU84
 399              		.syntax unified
 400              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 401 0000 4FF05003 			mov r3, #80												
 402 0004 83F31188 		msr basepri, r3											
 403 0008 BFF36F8F 		isb														
 404 000c BFF34F8F 		dsb														
ARM GAS  /tmp/ccqMaEIS.s 			page 25


 405              	
 406              	@ 0 "" 2
 407              		.thumb
 408              		.syntax unified
 409              	.LBE52:
 410              	.LBE51:
 406:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 411              		.loc 1 406 2 view .LVU85
 406:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 412              		.loc 1 406 19 is_stmt 0 view .LVU86
 413 0010 0A4A     		ldr	r2, .L30
 414 0012 1368     		ldr	r3, [r2]
 415 0014 0133     		adds	r3, r3, #1
 413:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 416              		.loc 1 413 4 view .LVU87
 417 0016 012B     		cmp	r3, #1
 406:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 418              		.loc 1 406 19 view .LVU88
 419 0018 1360     		str	r3, [r2]
 413:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 420              		.loc 1 413 2 is_stmt 1 view .LVU89
 413:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 421              		.loc 1 413 4 is_stmt 0 view .LVU90
 422 001a 00D0     		beq	.L29
 423              	.L23:
 417:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 424              		.loc 1 417 1 view .LVU91
 425 001c 7047     		bx	lr
 426              	.L29:
 415:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 427              		.loc 1 415 3 is_stmt 1 view .LVU92
 428 001e 084B     		ldr	r3, .L30+4
 429 0020 1B68     		ldr	r3, [r3]
 430 0022 13F0FF0F 		tst	r3, #255
 431 0026 F9D0     		beq	.L23
 415:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 432              		.loc 1 415 3 view .LVU93
 433              	.LBB53:
 434              	.LBI53:
 191:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 435              		.loc 2 191 30 view .LVU94
 436              	.LBB54:
 193:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 437              		.loc 2 193 1 view .LVU95
 438              		.loc 2 195 2 view .LVU96
 439              		.syntax unified
 440              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 441 0028 4FF05003 			mov r3, #80												
 442 002c 83F31188 		msr basepri, r3											
 443 0030 BFF36F8F 		isb														
 444 0034 BFF34F8F 		dsb														
 445              	
 446              	@ 0 "" 2
 447              	.LVL10:
 448              		.thumb
 449              		.syntax unified
 450              	.L25:
ARM GAS  /tmp/ccqMaEIS.s 			page 26


 451              		.loc 2 195 2 is_stmt 0 view .LVU97
 452              	.LBE54:
 453              	.LBE53:
 415:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 454              		.loc 1 415 3 is_stmt 1 discriminator 1 view .LVU98
 415:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 455              		.loc 1 415 3 discriminator 1 view .LVU99
 415:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 456              		.loc 1 415 3 discriminator 1 view .LVU100
 415:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 457              		.loc 1 415 3 discriminator 1 view .LVU101
 415:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 458              		.loc 1 415 3 discriminator 1 view .LVU102
 415:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 459              		.loc 1 415 3 discriminator 1 view .LVU103
 460 0038 FEE7     		b	.L25
 461              	.L31:
 462 003a 00BF     		.align	2
 463              	.L30:
 464 003c 00000000 		.word	.LANCHOR0
 465 0040 04ED00E0 		.word	-536810236
 466              		.cfi_endproc
 467              	.LFE10:
 469              		.section	.text.vPortExitCritical,"ax",%progbits
 470              		.align	1
 471              		.p2align 2,,3
 472              		.global	vPortExitCritical
 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 476              		.fpu fpv5-d16
 478              	vPortExitCritical:
 479              	.LFB11:
 421:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( uxCriticalNesting );
 480              		.loc 1 421 1 view -0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 422:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 485              		.loc 1 422 2 view .LVU105
 486 0000 084A     		ldr	r2, .L36
 487 0002 1368     		ldr	r3, [r2]
 488 0004 43B9     		cbnz	r3, .L33
 422:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 489              		.loc 1 422 2 view .LVU106
 490              	.LBB55:
 491              	.LBI55:
 191:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 492              		.loc 2 191 30 view .LVU107
 493              	.LBB56:
 193:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 494              		.loc 2 193 1 view .LVU108
 495              		.loc 2 195 2 view .LVU109
 496              		.syntax unified
 497              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 498 0006 4FF05003 			mov r3, #80												
ARM GAS  /tmp/ccqMaEIS.s 			page 27


 499 000a 83F31188 		msr basepri, r3											
 500 000e BFF36F8F 		isb														
 501 0012 BFF34F8F 		dsb														
 502              	
 503              	@ 0 "" 2
 504              	.LVL11:
 505              		.thumb
 506              		.syntax unified
 507              	.L34:
 508              		.loc 2 195 2 is_stmt 0 view .LVU110
 509              	.LBE56:
 510              	.LBE55:
 422:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 511              		.loc 1 422 2 is_stmt 1 discriminator 1 view .LVU111
 422:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 512              		.loc 1 422 2 discriminator 1 view .LVU112
 422:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 513              		.loc 1 422 2 discriminator 1 view .LVU113
 422:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 514              		.loc 1 422 2 discriminator 1 view .LVU114
 422:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 515              		.loc 1 422 2 discriminator 1 view .LVU115
 422:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 516              		.loc 1 422 2 discriminator 1 view .LVU116
 517 0016 FEE7     		b	.L34
 518              	.L33:
 422:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 519              		.loc 1 422 35 discriminator 2 view .LVU117
 423:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	if( uxCriticalNesting == 0 )
 520              		.loc 1 423 2 discriminator 2 view .LVU118
 423:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	if( uxCriticalNesting == 0 )
 521              		.loc 1 423 19 is_stmt 0 discriminator 2 view .LVU119
 522 0018 013B     		subs	r3, r3, #1
 523 001a 1360     		str	r3, [r2]
 424:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 524              		.loc 1 424 2 is_stmt 1 discriminator 2 view .LVU120
 424:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 525              		.loc 1 424 4 is_stmt 0 discriminator 2 view .LVU121
 526 001c 0BB9     		cbnz	r3, .L32
 426:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 527              		.loc 1 426 3 is_stmt 1 view .LVU122
 528              	.LVL12:
 529              	.LBB57:
 530              	.LBI57:
 196:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
ARM GAS  /tmp/ccqMaEIS.s 			page 28


 209:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 212:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 224:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 531              		.loc 2 227 30 view .LVU123
 532              	.LBB58:
 228:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 533              		.loc 2 229 2 view .LVU124
 534              		.syntax unified
 535              	@ 229 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 536 001e 83F31188 			msr basepri, r3	
 537              	@ 0 "" 2
 538              	.LVL13:
 539              		.thumb
 540              		.syntax unified
 541              	.L32:
 542              		.loc 2 229 2 is_stmt 0 view .LVU125
 543              	.LBE58:
 544              	.LBE57:
 428:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 545              		.loc 1 428 1 view .LVU126
 546 0022 7047     		bx	lr
 547              	.L37:
 548              		.align	2
 549              	.L36:
 550 0024 00000000 		.word	.LANCHOR0
 551              		.cfi_endproc
 552              	.LFE11:
 554              		.section	.text.PendSV_Handler,"ax",%progbits
 555              		.align	1
 556              		.p2align 2,,3
 557              		.global	PendSV_Handler
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu fpv5-d16
 563              	PendSV_Handler:
 564              	.LFB12:
 432:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* This is a naked function. */
 565              		.loc 1 432 1 is_stmt 1 view -0
 566              		.cfi_startproc
ARM GAS  /tmp/ccqMaEIS.s 			page 29


 567              		@ Naked Function: prologue and epilogue provided by programmer.
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 435:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	(
 570              		.loc 1 435 2 view .LVU128
 571              		.syntax unified
 572              	@ 435 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c" 1
 573 0000 EFF30980 			mrs r0, psp							
 574 0004 BFF36F8F 		isb									
 575              											
 576 0008 154B     		ldr	r3, pxCurrentTCBConst			
 577 000a 1A68     		ldr	r2, [r3]						
 578              											
 579 000c 1EF0100F 		tst r14, #0x10						
 580 0010 08BF     		it eq								
 581 0012 20ED108A 		vstmdbeq r0!, {s16-s31}				
 582              											
 583 0016 20E9F04F 		stmdb r0!, {r4-r11, r14}			
 584 001a 1060     		str r0, [r2]						
 585              											
 586 001c 2DE90900 		stmdb sp!, {r0, r3}					
 587 0020 4FF05000 		mov r0, #80 							
 588 0024 80F31188 		msr basepri, r0						
 589 0028 BFF34F8F 		dsb									
 590 002c BFF36F8F 		isb									
 591 0030 FFF7FEFF 		bl vTaskSwitchContext				
 592 0034 4FF00000 		mov r0, #0							
 593 0038 80F31188 		msr basepri, r0						
 594 003c 09BC     		ldmia sp!, {r0, r3}					
 595              											
 596 003e 1968     		ldr r1, [r3]						
 597 0040 0868     		ldr r0, [r1]						
 598              											
 599 0042 B0E8F04F 		ldmia r0!, {r4-r11, r14}			
 600              											
 601 0046 1EF0100F 		tst r14, #0x10						
 602 004a 08BF     		it eq								
 603 004c B0EC108A 		vldmiaeq r0!, {s16-s31}				
 604              											
 605 0050 80F30988 		msr psp, r0							
 606 0054 BFF36F8F 		isb									
 607              											
 608              											
 609 0058 7047     		bx r14								
 610              											
 611 005a 00BFAFF3 		.align 4							
 611      0080
 612 0060 00000000 	pxCurrentTCBConst: .word pxCurrentTCB	
 613              	
 614              	@ 0 "" 2
 485:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 615              		.loc 1 485 1 is_stmt 0 view .LVU129
 616              		.thumb
 617              		.syntax unified
 618              		.cfi_endproc
 619              	.LFE12:
 621              		.section	.text.xPortSysTickHandler,"ax",%progbits
ARM GAS  /tmp/ccqMaEIS.s 			page 30


 622              		.align	1
 623              		.p2align 2,,3
 624              		.global	xPortSysTickHandler
 625              		.syntax unified
 626              		.thumb
 627              		.thumb_func
 628              		.fpu fpv5-d16
 630              	xPortSysTickHandler:
 631              	.LFB13:
 489:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
 632              		.loc 1 489 1 is_stmt 1 view -0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 494:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 636              		.loc 1 494 2 view .LVU131
 637              	.LBB59:
 638              	.LBI59:
 191:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 639              		.loc 2 191 30 view .LVU132
 640              	.LBB60:
 193:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 641              		.loc 2 193 1 view .LVU133
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 642              		.loc 2 195 2 view .LVU134
 643              	.LBE60:
 644              	.LBE59:
 489:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
 645              		.loc 1 489 1 is_stmt 0 view .LVU135
 646 0000 08B5     		push	{r3, lr}
 647              	.LCFI4:
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 3, -8
 650              		.cfi_offset 14, -4
 651              	.LBB62:
 652              	.LBB61:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 653              		.loc 2 195 2 view .LVU136
 654              		.syntax unified
 655              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 656 0002 4FF05003 			mov r3, #80												
 657 0006 83F31188 		msr basepri, r3											
 658 000a BFF36F8F 		isb														
 659 000e BFF34F8F 		dsb														
 660              	
 661              	@ 0 "" 2
 662              		.thumb
 663              		.syntax unified
 664              	.LBE61:
 665              	.LBE62:
 497:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 666              		.loc 1 497 3 is_stmt 1 view .LVU137
 497:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 667              		.loc 1 497 7 is_stmt 0 view .LVU138
 668 0012 FFF7FEFF 		bl	xTaskIncrementTick
 669              	.LVL14:
 497:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
ARM GAS  /tmp/ccqMaEIS.s 			page 31


 670              		.loc 1 497 5 view .LVU139
 671 0016 18B1     		cbz	r0, .L40
 501:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 672              		.loc 1 501 4 is_stmt 1 view .LVU140
 501:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 673              		.loc 1 501 26 is_stmt 0 view .LVU141
 674 0018 034B     		ldr	r3, .L45
 675 001a 4FF08052 		mov	r2, #268435456
 676 001e 1A60     		str	r2, [r3]
 677              	.L40:
 504:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 678              		.loc 1 504 2 is_stmt 1 view .LVU142
 679              	.LVL15:
 680              	.LBB63:
 681              	.LBI63:
 227:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 682              		.loc 2 227 30 view .LVU143
 683              	.LBB64:
 684              		.loc 2 229 2 view .LVU144
 685 0020 0023     		movs	r3, #0
 686              		.syntax unified
 687              	@ 229 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 688 0022 83F31188 			msr basepri, r3	
 689              	@ 0 "" 2
 690              	.LVL16:
 691              		.loc 2 229 2 is_stmt 0 view .LVU145
 692              		.thumb
 693              		.syntax unified
 694              	.LBE64:
 695              	.LBE63:
 505:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 696              		.loc 1 505 1 view .LVU146
 697 0026 08BD     		pop	{r3, pc}
 698              	.L46:
 699              		.align	2
 700              	.L45:
 701 0028 04ED00E0 		.word	-536810236
 702              		.cfi_endproc
 703              	.LFE13:
 705              		.section	.text.vPortSetupTimerInterrupt,"ax",%progbits
 706              		.align	1
 707              		.p2align 2,,3
 708              		.weak	vPortSetupTimerInterrupt
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 712              		.fpu fpv5-d16
 714              	vPortSetupTimerInterrupt:
 715              	.LFB14:
 680:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Calculate the constants required to configure the tick interrupt. */
 716              		.loc 1 680 1 is_stmt 1 view -0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 691:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 721              		.loc 1 691 2 view .LVU148
ARM GAS  /tmp/ccqMaEIS.s 			page 32


 680:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Calculate the constants required to configure the tick interrupt. */
 722              		.loc 1 680 1 is_stmt 0 view .LVU149
 723 0000 10B4     		push	{r4}
 724              	.LCFI5:
 725              		.cfi_def_cfa_offset 4
 726              		.cfi_offset 4, -4
 691:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 727              		.loc 1 691 28 view .LVU150
 728 0002 0023     		movs	r3, #0
 729 0004 084A     		ldr	r2, .L49
 692:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 730              		.loc 1 692 37 view .LVU151
 731 0006 094C     		ldr	r4, .L49+4
 696:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 732              		.loc 1 696 28 view .LVU152
 733 0008 0721     		movs	r1, #7
 695:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 734              		.loc 1 695 55 view .LVU153
 735 000a 0948     		ldr	r0, .L49+8
 691:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 736              		.loc 1 691 28 view .LVU154
 737 000c 1360     		str	r3, [r2]
 692:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 738              		.loc 1 692 2 is_stmt 1 view .LVU155
 692:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 739              		.loc 1 692 37 is_stmt 0 view .LVU156
 740 000e 2360     		str	r3, [r4]
 695:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 741              		.loc 1 695 2 is_stmt 1 view .LVU157
 695:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 742              		.loc 1 695 55 is_stmt 0 view .LVU158
 743 0010 084C     		ldr	r4, .L49+12
 744 0012 0368     		ldr	r3, [r0]
 695:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 745              		.loc 1 695 28 view .LVU159
 746 0014 0848     		ldr	r0, .L49+16
 695:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 747              		.loc 1 695 55 view .LVU160
 748 0016 A4FB0343 		umull	r4, r3, r4, r3
 697:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 749              		.loc 1 697 1 view .LVU161
 750 001a 5DF8044B 		ldr	r4, [sp], #4
 751              	.LCFI6:
 752              		.cfi_restore 4
 753              		.cfi_def_cfa_offset 0
 695:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 754              		.loc 1 695 55 view .LVU162
 755 001e 9B09     		lsrs	r3, r3, #6
 695:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 756              		.loc 1 695 78 view .LVU163
 757 0020 013B     		subs	r3, r3, #1
 695:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 758              		.loc 1 695 28 view .LVU164
 759 0022 0360     		str	r3, [r0]
 696:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 760              		.loc 1 696 2 is_stmt 1 view .LVU165
 696:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
ARM GAS  /tmp/ccqMaEIS.s 			page 33


 761              		.loc 1 696 28 is_stmt 0 view .LVU166
 762 0024 1160     		str	r1, [r2]
 697:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 763              		.loc 1 697 1 view .LVU167
 764 0026 7047     		bx	lr
 765              	.L50:
 766              		.align	2
 767              	.L49:
 768 0028 10E000E0 		.word	-536813552
 769 002c 18E000E0 		.word	-536813544
 770 0030 00000000 		.word	SystemCoreClock
 771 0034 D34D6210 		.word	274877907
 772 0038 14E000E0 		.word	-536813548
 773              		.cfi_endproc
 774              	.LFE14:
 776              		.section	.text.xPortStartScheduler,"ax",%progbits
 777              		.align	1
 778              		.p2align 2,,3
 779              		.global	xPortStartScheduler
 780              		.syntax unified
 781              		.thumb
 782              		.thumb_func
 783              		.fpu fpv5-d16
 785              	xPortStartScheduler:
 786              	.LFB8:
 288:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 787              		.loc 1 288 1 is_stmt 1 view -0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 8
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 291:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 791              		.loc 1 291 2 view .LVU169
 291:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 792              		.loc 1 291 54 view .LVU170
 296:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 793              		.loc 1 296 2 view .LVU171
 794 0000 384B     		ldr	r3, .L66
 795 0002 394A     		ldr	r2, .L66+4
 796 0004 1968     		ldr	r1, [r3]
 797 0006 9142     		cmp	r1, r2
 798 0008 3ED0     		beq	.L64
 296:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 799              		.loc 1 296 52 discriminator 2 view .LVU172
 297:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 800              		.loc 1 297 2 discriminator 2 view .LVU173
 801 000a 1A68     		ldr	r2, [r3]
 802 000c 374B     		ldr	r3, .L66+8
 803 000e 9A42     		cmp	r2, r3
 804 0010 31D0     		beq	.L65
 297:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 805              		.loc 1 297 52 discriminator 2 view .LVU174
 806              	.LBB65:
 301:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( portNVIC_I
 807              		.loc 1 301 3 discriminator 2 view .LVU175
 302:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		volatile uint8_t ucMaxPriorityValue;
 808              		.loc 1 302 3 discriminator 2 view .LVU176
 809              	.LVL17:
ARM GAS  /tmp/ccqMaEIS.s 			page 34


 303:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 810              		.loc 1 303 3 discriminator 2 view .LVU177
 311:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 811              		.loc 1 311 3 discriminator 2 view .LVU178
 311:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 812              		.loc 1 311 24 is_stmt 0 discriminator 2 view .LVU179
 813 0012 374B     		ldr	r3, .L66+12
 321:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 814              		.loc 1 321 24 discriminator 2 view .LVU180
 815 0014 3748     		ldr	r0, .L66+16
 325:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 816              		.loc 1 325 22 discriminator 2 view .LVU181
 817 0016 3849     		ldr	r1, .L66+20
 818              	.LBE65:
 288:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 819              		.loc 1 288 1 discriminator 2 view .LVU182
 820 0018 30B5     		push	{r4, r5, lr}
 821              	.LCFI7:
 822              		.cfi_def_cfa_offset 12
 823              		.cfi_offset 4, -12
 824              		.cfi_offset 5, -8
 825              		.cfi_offset 14, -4
 826              	.LBB68:
 311:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 827              		.loc 1 311 24 discriminator 2 view .LVU183
 828 001a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 829              	.LBE68:
 288:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 830              		.loc 1 288 1 discriminator 2 view .LVU184
 831 001c 83B0     		sub	sp, sp, #12
 832              	.LCFI8:
 833              		.cfi_def_cfa_offset 24
 834              	.LBB69:
 315:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 835              		.loc 1 315 33 discriminator 2 view .LVU185
 836 001e FF25     		movs	r5, #255
 325:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 837              		.loc 1 325 22 discriminator 2 view .LVU186
 838 0020 0724     		movs	r4, #7
 311:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 839              		.loc 1 311 24 discriminator 2 view .LVU187
 840 0022 D2B2     		uxtb	r2, r2
 311:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 841              		.loc 1 311 22 discriminator 2 view .LVU188
 842 0024 0192     		str	r2, [sp, #4]
 315:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 843              		.loc 1 315 3 is_stmt 1 discriminator 2 view .LVU189
 315:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 844              		.loc 1 315 33 is_stmt 0 discriminator 2 view .LVU190
 845 0026 1D70     		strb	r5, [r3]
 318:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 846              		.loc 1 318 3 is_stmt 1 discriminator 2 view .LVU191
 318:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 847              		.loc 1 318 24 is_stmt 0 discriminator 2 view .LVU192
 848 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 325:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 849              		.loc 1 325 22 discriminator 2 view .LVU193
ARM GAS  /tmp/ccqMaEIS.s 			page 35


 850 002a 0C60     		str	r4, [r1]
 318:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 851              		.loc 1 318 24 discriminator 2 view .LVU194
 852 002c DBB2     		uxtb	r3, r3
 318:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 853              		.loc 1 318 22 discriminator 2 view .LVU195
 854 002e 8DF80330 		strb	r3, [sp, #3]
 321:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 855              		.loc 1 321 3 is_stmt 1 discriminator 2 view .LVU196
 321:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 856              		.loc 1 321 63 is_stmt 0 discriminator 2 view .LVU197
 857 0032 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 326:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 858              		.loc 1 326 31 discriminator 2 view .LVU198
 859 0036 9DF80320 		ldrb	r2, [sp, #3]	@ zero_extendqisi2
 321:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 860              		.loc 1 321 63 discriminator 2 view .LVU199
 861 003a 03F05003 		and	r3, r3, #80
 326:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 862              		.loc 1 326 8 discriminator 2 view .LVU200
 863 003e 1206     		lsls	r2, r2, #24
 321:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 864              		.loc 1 321 24 discriminator 2 view .LVU201
 865 0040 0370     		strb	r3, [r0]
 325:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 866              		.loc 1 325 3 is_stmt 1 discriminator 2 view .LVU202
 326:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 867              		.loc 1 326 3 discriminator 2 view .LVU203
 326:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 868              		.loc 1 326 8 discriminator 2 view .LVU204
 869 0042 0FD5     		bpl	.L59
 326:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 870              		.loc 1 326 8 is_stmt 0 view .LVU205
 871 0044 0622     		movs	r2, #6
 872              	.L56:
 328:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 873              		.loc 1 328 4 is_stmt 1 view .LVU206
 329:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 874              		.loc 1 329 4 view .LVU207
 329:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 875              		.loc 1 329 23 is_stmt 0 view .LVU208
 876 0046 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 877 004a 1046     		mov	r0, r2
 878 004c 013A     		subs	r2, r2, #1
 879 004e 5B00     		lsls	r3, r3, #1
 880 0050 DBB2     		uxtb	r3, r3
 881 0052 8DF80330 		strb	r3, [sp, #3]
 326:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 882              		.loc 1 326 8 is_stmt 1 view .LVU209
 326:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 883              		.loc 1 326 31 is_stmt 0 view .LVU210
 884 0056 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 326:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 885              		.loc 1 326 8 view .LVU211
 886 005a 1B06     		lsls	r3, r3, #24
 887 005c F3D4     		bmi	.L56
 346:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
ARM GAS  /tmp/ccqMaEIS.s 			page 36


 888              		.loc 1 346 4 is_stmt 1 view .LVU212
 889 005e 0328     		cmp	r0, #3
 890 0060 1BD0     		beq	.L58
 891 0062 0860     		str	r0, [r1]
 892              	.L59:
 346:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 893              		.loc 1 346 4 view .LVU213
 894              	.LBB66:
 895              	.LBI66:
 191:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 896              		.loc 2 191 30 view .LVU214
 897              	.LBB67:
 193:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 898              		.loc 2 193 1 view .LVU215
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 899              		.loc 2 195 2 view .LVU216
 900              		.syntax unified
 901              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 902 0064 4FF05003 			mov r3, #80												
 903 0068 83F31188 		msr basepri, r3											
 904 006c BFF36F8F 		isb														
 905 0070 BFF34F8F 		dsb														
 906              	
 907              	@ 0 "" 2
 908              	.LVL18:
 909              		.thumb
 910              		.syntax unified
 911              	.L57:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 912              		.loc 2 195 2 is_stmt 0 view .LVU217
 913              	.LBE67:
 914              	.LBE66:
 346:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 915              		.loc 1 346 4 is_stmt 1 discriminator 4 view .LVU218
 346:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 916              		.loc 1 346 4 discriminator 4 view .LVU219
 346:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 917              		.loc 1 346 4 discriminator 4 view .LVU220
 346:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 918              		.loc 1 346 4 discriminator 4 view .LVU221
 346:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 919              		.loc 1 346 4 discriminator 4 view .LVU222
 346:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 920              		.loc 1 346 4 discriminator 4 view .LVU223
 921 0074 FEE7     		b	.L57
 922              	.LVL19:
 923              	.L65:
 924              	.LCFI9:
 925              		.cfi_def_cfa_offset 0
 926              		.cfi_restore 4
 927              		.cfi_restore 5
 928              		.cfi_restore 14
 346:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 929              		.loc 1 346 4 is_stmt 0 discriminator 4 view .LVU224
 930              	.LBE69:
 297:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 931              		.loc 1 297 2 is_stmt 1 view .LVU225
ARM GAS  /tmp/ccqMaEIS.s 			page 37


 932              	.LBB70:
 933              	.LBI70:
 191:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 934              		.loc 2 191 30 view .LVU226
 935              	.LBB71:
 193:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 936              		.loc 2 193 1 view .LVU227
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 937              		.loc 2 195 2 view .LVU228
 938              		.syntax unified
 939              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 940 0076 4FF05003 			mov r3, #80												
 941 007a 83F31188 		msr basepri, r3											
 942 007e BFF36F8F 		isb														
 943 0082 BFF34F8F 		dsb														
 944              	
 945              	@ 0 "" 2
 946              	.LVL20:
 947              		.thumb
 948              		.syntax unified
 949              	.L55:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 950              		.loc 2 195 2 is_stmt 0 view .LVU229
 951              	.LBE71:
 952              	.LBE70:
 297:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 953              		.loc 1 297 2 is_stmt 1 discriminator 3 view .LVU230
 297:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 954              		.loc 1 297 2 discriminator 3 view .LVU231
 297:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 955              		.loc 1 297 2 discriminator 3 view .LVU232
 297:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 956              		.loc 1 297 2 discriminator 3 view .LVU233
 297:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 957              		.loc 1 297 2 discriminator 3 view .LVU234
 297:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 958              		.loc 1 297 2 discriminator 3 view .LVU235
 959 0086 FEE7     		b	.L55
 960              	.L64:
 296:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 961              		.loc 1 296 2 view .LVU236
 962              	.LBB72:
 963              	.LBI72:
 191:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 964              		.loc 2 191 30 view .LVU237
 965              	.LBB73:
 193:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 966              		.loc 2 193 1 view .LVU238
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 967              		.loc 2 195 2 view .LVU239
 968              		.syntax unified
 969              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 970 0088 4FF05003 			mov r3, #80												
 971 008c 83F31188 		msr basepri, r3											
 972 0090 BFF36F8F 		isb														
 973 0094 BFF34F8F 		dsb														
 974              	
ARM GAS  /tmp/ccqMaEIS.s 			page 38


 975              	@ 0 "" 2
 976              	.LVL21:
 977              		.thumb
 978              		.syntax unified
 979              	.L53:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 980              		.loc 2 195 2 is_stmt 0 view .LVU240
 981              	.LBE73:
 982              	.LBE72:
 296:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 983              		.loc 1 296 2 is_stmt 1 discriminator 2 view .LVU241
 296:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 984              		.loc 1 296 2 discriminator 2 view .LVU242
 296:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 985              		.loc 1 296 2 discriminator 2 view .LVU243
 296:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 986              		.loc 1 296 2 discriminator 2 view .LVU244
 296:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 987              		.loc 1 296 2 discriminator 2 view .LVU245
 296:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 988              		.loc 1 296 2 discriminator 2 view .LVU246
 989 0098 FEE7     		b	.L53
 990              	.LVL22:
 991              	.L58:
 992              	.LCFI10:
 993              		.cfi_def_cfa_offset 24
 994              		.cfi_offset 4, -12
 995              		.cfi_offset 5, -8
 996              		.cfi_offset 14, -4
 997              	.LBB74:
 346:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 998              		.loc 1 346 85 discriminator 2 view .LVU247
 352:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 999              		.loc 1 352 3 discriminator 2 view .LVU248
 353:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 1000              		.loc 1 353 3 discriminator 2 view .LVU249
 357:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 1001              		.loc 1 357 33 is_stmt 0 discriminator 2 view .LVU250
 1002 009a 019A     		ldr	r2, [sp, #4]
 353:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 1003              		.loc 1 353 22 discriminator 2 view .LVU251
 1004 009c 4FF44075 		mov	r5, #768
 357:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 1005              		.loc 1 357 33 discriminator 2 view .LVU252
 1006 00a0 1348     		ldr	r0, .L66+12
 1007              	.LBE74:
 370:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 1008              		.loc 1 370 20 discriminator 2 view .LVU253
 1009 00a2 0024     		movs	r4, #0
 362:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 1010              		.loc 1 362 23 discriminator 2 view .LVU254
 1011 00a4 154B     		ldr	r3, .L66+24
 1012              	.LBB75:
 357:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 1013              		.loc 1 357 33 discriminator 2 view .LVU255
 1014 00a6 D2B2     		uxtb	r2, r2
 353:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
ARM GAS  /tmp/ccqMaEIS.s 			page 39


 1015              		.loc 1 353 22 discriminator 2 view .LVU256
 1016 00a8 0D60     		str	r5, [r1]
 357:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 1017              		.loc 1 357 3 is_stmt 1 discriminator 2 view .LVU257
 357:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 1018              		.loc 1 357 33 is_stmt 0 discriminator 2 view .LVU258
 1019 00aa 0270     		strb	r2, [r0]
 1020              	.LBE75:
 362:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 1021              		.loc 1 362 2 is_stmt 1 discriminator 2 view .LVU259
 362:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 1022              		.loc 1 362 23 is_stmt 0 discriminator 2 view .LVU260
 1023 00ac 1A68     		ldr	r2, [r3]
 1024 00ae 42F47002 		orr	r2, r2, #15728640
 1025 00b2 1A60     		str	r2, [r3]
 363:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 1026              		.loc 1 363 2 is_stmt 1 discriminator 2 view .LVU261
 363:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 1027              		.loc 1 363 23 is_stmt 0 discriminator 2 view .LVU262
 1028 00b4 1A68     		ldr	r2, [r3]
 1029 00b6 42F07042 		orr	r2, r2, #-268435456
 1030 00ba 1A60     		str	r2, [r3]
 367:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 1031              		.loc 1 367 2 is_stmt 1 discriminator 2 view .LVU263
 1032 00bc FFF7FEFF 		bl	vPortSetupTimerInterrupt
 1033              	.LVL23:
 370:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 1034              		.loc 1 370 2 discriminator 2 view .LVU264
 370:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 1035              		.loc 1 370 20 is_stmt 0 discriminator 2 view .LVU265
 1036 00c0 0F4B     		ldr	r3, .L66+28
 1037 00c2 1C60     		str	r4, [r3]
 373:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 1038              		.loc 1 373 2 is_stmt 1 discriminator 2 view .LVU266
 1039 00c4 FFF7FEFF 		bl	vPortEnableVFP
 1040              	.LVL24:
 376:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 1041              		.loc 1 376 2 discriminator 2 view .LVU267
 376:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 1042              		.loc 1 376 17 is_stmt 0 discriminator 2 view .LVU268
 1043 00c8 0E4A     		ldr	r2, .L66+32
 1044 00ca 1368     		ldr	r3, [r2]
 1045 00cc 43F04043 		orr	r3, r3, #-1073741824
 1046 00d0 1360     		str	r3, [r2]
 379:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 1047              		.loc 1 379 2 is_stmt 1 discriminator 2 view .LVU269
 1048 00d2 FFF7FEFF 		bl	prvPortStartFirstTask
 1049              	.LVL25:
 387:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	prvTaskExitError();
 1050              		.loc 1 387 2 discriminator 2 view .LVU270
 1051 00d6 FFF7FEFF 		bl	vTaskSwitchContext
 1052              	.LVL26:
 388:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 1053              		.loc 1 388 2 discriminator 2 view .LVU271
 1054 00da FFF7FEFF 		bl	prvTaskExitError
 1055              	.LVL27:
 391:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
ARM GAS  /tmp/ccqMaEIS.s 			page 40


 1056              		.loc 1 391 2 discriminator 2 view .LVU272
 392:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 1057              		.loc 1 392 1 is_stmt 0 discriminator 2 view .LVU273
 1058 00de 2046     		mov	r0, r4
 1059 00e0 03B0     		add	sp, sp, #12
 1060              	.LCFI11:
 1061              		.cfi_def_cfa_offset 12
 1062              		@ sp needed
 1063 00e2 30BD     		pop	{r4, r5, pc}
 1064              	.L67:
 1065              		.align	2
 1066              	.L66:
 1067 00e4 00ED00E0 		.word	-536810240
 1068 00e8 71C20F41 		.word	1091551857
 1069 00ec 70C20F41 		.word	1091551856
 1070 00f0 00E400E0 		.word	-536812544
 1071 00f4 00000000 		.word	.LANCHOR1
 1072 00f8 00000000 		.word	.LANCHOR2
 1073 00fc 20ED00E0 		.word	-536810208
 1074 0100 00000000 		.word	.LANCHOR0
 1075 0104 34EF00E0 		.word	-536809676
 1076              		.cfi_endproc
 1077              	.LFE8:
 1079              		.section	.text.vPortValidateInterruptPriority,"ax",%progbits
 1080              		.align	1
 1081              		.p2align 2,,3
 1082              		.global	vPortValidateInterruptPriority
 1083              		.syntax unified
 1084              		.thumb
 1085              		.thumb_func
 1086              		.fpu fpv5-d16
 1088              	vPortValidateInterruptPriority:
 1089              	.LFB16:
 713:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 714:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 715:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if( configASSERT_DEFINED == 1 )
 716:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 717:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	void vPortValidateInterruptPriority( void )
 718:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 1090              		.loc 1 718 2 is_stmt 1 view -0
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 0
 1093              		@ frame_needed = 0, uses_anonymous_args = 0
 1094              		@ link register save eliminated.
 719:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uint32_t ulCurrentInterrupt;
 1095              		.loc 1 719 2 view .LVU275
 720:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uint8_t ucCurrentPriority;
 1096              		.loc 1 720 2 view .LVU276
 721:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 722:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Obtain the number of the currently executing interrupt. */
 723:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 1097              		.loc 1 723 3 view .LVU277
 1098              		.syntax unified
 1099              	@ 723 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c" 1
 1100 0000 EFF30583 		mrs r3, ipsr
 1101              	@ 0 "" 2
 1102              	.LVL28:
ARM GAS  /tmp/ccqMaEIS.s 			page 41


 724:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 725:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Is the interrupt number a user defined interrupt? */
 726:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 1103              		.loc 1 726 3 view .LVU278
 1104              		.loc 1 726 5 is_stmt 0 view .LVU279
 1105              		.thumb
 1106              		.syntax unified
 1107 0004 0F2B     		cmp	r3, #15
 1108 0006 0ED9     		bls	.L69
 727:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 728:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Look up the interrupt's priority. */
 729:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 1109              		.loc 1 729 4 is_stmt 1 view .LVU280
 1110              		.loc 1 729 52 is_stmt 0 view .LVU281
 1111 0008 1049     		ldr	r1, .L73
 730:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 731:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* The following assertion will fail if a service routine (ISR) for
 732:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			an interrupt that has been assigned a priority above
 733:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY calls an ISR safe FreeRTOS API
 734:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			function.  ISR safe FreeRTOS API functions must *only* be called
 735:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			from interrupts that have been assigned a priority at or below
 736:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY.
 737:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 738:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			Numerically low interrupt priority numbers represent logically high
 739:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			interrupt priorities, therefore the priority of the interrupt must
 740:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			be set to a value equal to or numerically *higher* than
 741:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY.
 742:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 743:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			Interrupts that	use the FreeRTOS API must not be left at their
 744:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			default priority of	zero as that is the highest possible priority,
 745:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			which is guaranteed to be above configMAX_SYSCALL_INTERRUPT_PRIORITY,
 746:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			and	therefore also guaranteed to be invalid.
 747:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 748:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			FreeRTOS maintains separate thread and ISR API functions to ensure
 749:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			interrupt entry is as fast and simple as possible.
 750:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 751:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			The following links provide detailed information:
 752:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			http://www.freertos.org/RTOS-Cortex-M3-M4.html
 753:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			http://www.freertos.org/FAQHelp.html */
 754:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 1112              		.loc 1 754 4 view .LVU282
 1113 000a 114A     		ldr	r2, .L73+4
 729:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 1114              		.loc 1 729 22 view .LVU283
 1115 000c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 1116              	.LVL29:
 1117              		.loc 1 754 4 is_stmt 1 view .LVU284
 1118 000e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1119 0010 9A42     		cmp	r2, r3
 1120 0012 08D9     		bls	.L69
 1121              		.loc 1 754 4 view .LVU285
 1122              	.LBB76:
 1123              	.LBI76:
 191:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1124              		.loc 2 191 30 view .LVU286
 1125              	.LBB77:
 193:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccqMaEIS.s 			page 42


 1126              		.loc 2 193 1 view .LVU287
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1127              		.loc 2 195 2 view .LVU288
 1128              		.syntax unified
 1129              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1130 0014 4FF05003 			mov r3, #80												
 1131 0018 83F31188 		msr basepri, r3											
 1132 001c BFF36F8F 		isb														
 1133 0020 BFF34F8F 		dsb														
 1134              	
 1135              	@ 0 "" 2
 1136              	.LVL30:
 1137              		.thumb
 1138              		.syntax unified
 1139              	.L70:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1140              		.loc 2 195 2 is_stmt 0 view .LVU289
 1141              	.LBE77:
 1142              	.LBE76:
 1143              		.loc 1 754 4 is_stmt 1 discriminator 1 view .LVU290
 1144              		.loc 1 754 4 discriminator 1 view .LVU291
 1145              		.loc 1 754 4 discriminator 1 view .LVU292
 1146              		.loc 1 754 4 discriminator 1 view .LVU293
 1147              		.loc 1 754 4 discriminator 1 view .LVU294
 1148              		.loc 1 754 4 discriminator 1 view .LVU295
 1149 0024 FEE7     		b	.L70
 1150              	.L69:
 1151              		.loc 1 754 61 discriminator 2 view .LVU296
 755:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 756:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 757:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Priority grouping:  The interrupt controller (NVIC) allows the bits
 758:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		that define each interrupt's priority to be split between bits that
 759:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		define the interrupt's pre-emption priority bits and bits that define
 760:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		the interrupt's sub-priority.  For simplicity all bits must be defined
 761:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		to be pre-emption priority bits.  The following assertion will fail if
 762:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		this is not the case (if some bits represent a sub-priority).
 763:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 764:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		If the application only uses CMSIS libraries for interrupt
 765:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		configuration then the correct setting can be achieved on all Cortex-M
 766:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
 767:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		scheduler.  Note however that some vendor specific peripheral libraries
 768:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		assume a non-zero priority group setting, in which cases using a value
 769:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		of zero will result in unpredictable behaviour. */
 770:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 1152              		.loc 1 770 3 discriminator 2 view .LVU297
 1153 0026 0B4B     		ldr	r3, .L73+8
 1154 0028 0B4A     		ldr	r2, .L73+12
 1155 002a 1B68     		ldr	r3, [r3]
 1156 002c 1268     		ldr	r2, [r2]
 1157 002e 03F4E063 		and	r3, r3, #1792
 1158 0032 9342     		cmp	r3, r2
 1159 0034 08D9     		bls	.L68
 1160              		.loc 1 770 3 view .LVU298
 1161              	.LBB78:
 1162              	.LBI78:
 191:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1163              		.loc 2 191 30 view .LVU299
ARM GAS  /tmp/ccqMaEIS.s 			page 43


 1164              	.LBB79:
 193:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1165              		.loc 2 193 1 view .LVU300
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1166              		.loc 2 195 2 view .LVU301
 1167              		.syntax unified
 1168              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1169 0036 4FF05003 			mov r3, #80												
 1170 003a 83F31188 		msr basepri, r3											
 1171 003e BFF36F8F 		isb														
 1172 0042 BFF34F8F 		dsb														
 1173              	
 1174              	@ 0 "" 2
 1175              	.LVL31:
 1176              		.thumb
 1177              		.syntax unified
 1178              	.L72:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1179              		.loc 2 195 2 is_stmt 0 view .LVU302
 1180              	.LBE79:
 1181              	.LBE78:
 1182              		.loc 1 770 3 is_stmt 1 discriminator 2 view .LVU303
 1183              		.loc 1 770 3 discriminator 2 view .LVU304
 1184              		.loc 1 770 3 discriminator 2 view .LVU305
 1185              		.loc 1 770 3 discriminator 2 view .LVU306
 1186              		.loc 1 770 3 discriminator 2 view .LVU307
 1187              		.loc 1 770 3 discriminator 2 view .LVU308
 1188 0046 FEE7     		b	.L72
 1189              	.L68:
 771:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 1190              		.loc 1 771 2 is_stmt 0 view .LVU309
 1191 0048 7047     		bx	lr
 1192              	.L74:
 1193 004a 00BF     		.align	2
 1194              	.L73:
 1195 004c F0E300E0 		.word	-536812560
 1196 0050 00000000 		.word	.LANCHOR1
 1197 0054 0CED00E0 		.word	-536810228
 1198 0058 00000000 		.word	.LANCHOR2
 1199              		.cfi_endproc
 1200              	.LFE16:
 1202              		.section	.bss.ucMaxSysCallPriority,"aw",%nobits
 1203              		.set	.LANCHOR1,. + 0
 1206              	ucMaxSysCallPriority:
 1207 0000 00       		.space	1
 1208              		.section	.bss.ulMaxPRIGROUPValue,"aw",%nobits
 1209              		.align	2
 1210              		.set	.LANCHOR2,. + 0
 1213              	ulMaxPRIGROUPValue:
 1214 0000 00000000 		.space	4
 1215              		.section	.data.uxCriticalNesting,"aw"
 1216              		.align	2
 1217              		.set	.LANCHOR0,. + 0
 1220              	uxCriticalNesting:
 1221 0000 AAAAAAAA 		.word	-1431655766
 1222              		.text
 1223              	.Letext0:
ARM GAS  /tmp/ccqMaEIS.s 			page 44


 1224              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1225              		.file 4 "./Libraries/FreeRTOS/Source/include/projdefs.h"
 1226              		.file 5 "./User/code/Inc/FreeRTOSConfig.h"
 1227              		.file 6 "./Libraries/FreeRTOS/Source/include/task.h"
ARM GAS  /tmp/ccqMaEIS.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 port.c
     /tmp/ccqMaEIS.s:17     .text.prvPortStartFirstTask:0000000000000000 $t
     /tmp/ccqMaEIS.s:25     .text.prvPortStartFirstTask:0000000000000000 prvPortStartFirstTask
     /tmp/ccqMaEIS.s:57     .text.vPortEnableVFP:0000000000000000 $t
     /tmp/ccqMaEIS.s:64     .text.vPortEnableVFP:0000000000000000 vPortEnableVFP
     /tmp/ccqMaEIS.s:88     .text.prvTaskExitError:0000000000000000 $t
     /tmp/ccqMaEIS.s:95     .text.prvTaskExitError:0000000000000000 prvTaskExitError
     /tmp/ccqMaEIS.s:194    .text.prvTaskExitError:000000000000003c $d
     /tmp/ccqMaEIS.s:199    .text.pxPortInitialiseStack:0000000000000000 $t
     /tmp/ccqMaEIS.s:207    .text.pxPortInitialiseStack:0000000000000000 pxPortInitialiseStack
     /tmp/ccqMaEIS.s:273    .text.pxPortInitialiseStack:000000000000002c $d
     /tmp/ccqMaEIS.s:278    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccqMaEIS.s:286    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccqMaEIS.s:307    .text.SVC_Handler:0000000000000020 pxCurrentTCBConst2
     /tmp/ccqMaEIS.s:307    .text.SVC_Handler:0000000000000020 $d
     /tmp/ccqMaEIS.s:317    .text.vPortEndScheduler:0000000000000000 $t
     /tmp/ccqMaEIS.s:325    .text.vPortEndScheduler:0000000000000000 vPortEndScheduler
     /tmp/ccqMaEIS.s:372    .text.vPortEndScheduler:0000000000000020 $d
     /tmp/ccqMaEIS.s:377    .text.vPortEnterCritical:0000000000000000 $t
     /tmp/ccqMaEIS.s:385    .text.vPortEnterCritical:0000000000000000 vPortEnterCritical
     /tmp/ccqMaEIS.s:464    .text.vPortEnterCritical:000000000000003c $d
     /tmp/ccqMaEIS.s:470    .text.vPortExitCritical:0000000000000000 $t
     /tmp/ccqMaEIS.s:478    .text.vPortExitCritical:0000000000000000 vPortExitCritical
     /tmp/ccqMaEIS.s:550    .text.vPortExitCritical:0000000000000024 $d
     /tmp/ccqMaEIS.s:555    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccqMaEIS.s:563    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccqMaEIS.s:612    .text.PendSV_Handler:0000000000000060 pxCurrentTCBConst
     /tmp/ccqMaEIS.s:612    .text.PendSV_Handler:0000000000000060 $d
     /tmp/ccqMaEIS.s:622    .text.xPortSysTickHandler:0000000000000000 $t
     /tmp/ccqMaEIS.s:630    .text.xPortSysTickHandler:0000000000000000 xPortSysTickHandler
     /tmp/ccqMaEIS.s:701    .text.xPortSysTickHandler:0000000000000028 $d
     /tmp/ccqMaEIS.s:706    .text.vPortSetupTimerInterrupt:0000000000000000 $t
     /tmp/ccqMaEIS.s:714    .text.vPortSetupTimerInterrupt:0000000000000000 vPortSetupTimerInterrupt
     /tmp/ccqMaEIS.s:768    .text.vPortSetupTimerInterrupt:0000000000000028 $d
     /tmp/ccqMaEIS.s:777    .text.xPortStartScheduler:0000000000000000 $t
     /tmp/ccqMaEIS.s:785    .text.xPortStartScheduler:0000000000000000 xPortStartScheduler
     /tmp/ccqMaEIS.s:1067   .text.xPortStartScheduler:00000000000000e4 $d
     /tmp/ccqMaEIS.s:1080   .text.vPortValidateInterruptPriority:0000000000000000 $t
     /tmp/ccqMaEIS.s:1088   .text.vPortValidateInterruptPriority:0000000000000000 vPortValidateInterruptPriority
     /tmp/ccqMaEIS.s:1195   .text.vPortValidateInterruptPriority:000000000000004c $d
     /tmp/ccqMaEIS.s:1206   .bss.ucMaxSysCallPriority:0000000000000000 ucMaxSysCallPriority
     /tmp/ccqMaEIS.s:1207   .bss.ucMaxSysCallPriority:0000000000000000 $d
     /tmp/ccqMaEIS.s:1209   .bss.ulMaxPRIGROUPValue:0000000000000000 $d
     /tmp/ccqMaEIS.s:1213   .bss.ulMaxPRIGROUPValue:0000000000000000 ulMaxPRIGROUPValue
     /tmp/ccqMaEIS.s:1216   .data.uxCriticalNesting:0000000000000000 $d
     /tmp/ccqMaEIS.s:1220   .data.uxCriticalNesting:0000000000000000 uxCriticalNesting
     /tmp/ccqMaEIS.s:87     .text.vPortEnableVFP:000000000000000e $d
     /tmp/ccqMaEIS.s:3062   .text.vPortEnableVFP:0000000000000010 $d
     /tmp/ccqMaEIS.s:56     .text.prvPortStartFirstTask:0000000000000022 $d
     /tmp/ccqMaEIS.s:3062   .text.prvPortStartFirstTask:0000000000000024 $d

UNDEFINED SYMBOLS
pxCurrentTCB
vTaskSwitchContext
xTaskIncrementTick
SystemCoreClock
ARM GAS  /tmp/ccqMaEIS.s 			page 46


