ARM GAS  /tmp/cc0wCm8A.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_nand.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_NAND_Init,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_NAND_Init
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_NAND_Init:
  26              	.LFB331:
  27              		.file 1 "./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c"
   1:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
   2:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   ******************************************************************************
   3:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @file    stm32h7xx_hal_nand.c
   4:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @author  MCD Application Team
   5:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief   NAND HAL module driver.
   6:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *          This file provides a generic firmware to drive NAND memories mounted
   7:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *          as external device.
   8:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *
   9:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   @verbatim
  10:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   ==============================================================================
  11:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****                          ##### How to use this driver #####
  12:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   ==============================================================================
  13:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     [..]
  14:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       This driver is a generic layered driver which contains a set of APIs used to
  15:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       control NAND flash memories. It uses the FMC layer functions to interface
  16:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       with NAND devices. This driver is used as follows:
  17:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
  18:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       (+) NAND flash memory configuration sequence using the function HAL_NAND_Init()
  19:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           with control and timing parameters for both common and attribute spaces.
  20:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
  21:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       (+) Read NAND flash memory maker and device IDs using the function
  22:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           HAL_NAND_Read_ID(). The read information is stored in the NAND_ID_TypeDef
  23:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           structure declared by the function caller.
  24:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
  25:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       (+) Access NAND flash memory by read/write operations using the functions
  26:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           HAL_NAND_Read_Page_8b()/HAL_NAND_Read_SpareArea_8b(),
  27:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           HAL_NAND_Write_Page_8b()/HAL_NAND_Write_SpareArea_8b(),
  28:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           HAL_NAND_Read_Page_16b()/HAL_NAND_Read_SpareArea_16b(),
  29:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           HAL_NAND_Write_Page_16b()/HAL_NAND_Write_SpareArea_16b()
  30:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           to read/write page(s)/spare area(s). These functions use specific device
  31:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           information (Block, page size..) predefined by the user in the NAND_DeviceConfigTypeDef
ARM GAS  /tmp/cc0wCm8A.s 			page 2


  32:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           structure. The read/write address information is contained by the Nand_Address_Typedef
  33:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           structure passed as parameter.
  34:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
  35:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       (+) Perform NAND flash Reset chip operation using the function HAL_NAND_Reset().
  36:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
  37:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       (+) Perform NAND flash erase block operation using the function HAL_NAND_Erase_Block().
  38:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           The erase block address information is contained in the Nand_Address_Typedef
  39:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           structure passed as parameter.
  40:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
  41:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       (+) Read the NAND flash status operation using the function HAL_NAND_Read_Status().
  42:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
  43:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       (+) You can also control the NAND device by calling the control APIs HAL_NAND_ECC_Enable()/
  44:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           HAL_NAND_ECC_Disable() to respectively enable/disable the ECC code correction
  45:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           feature or the function HAL_NAND_GetECC() to get the ECC correction code.
  46:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
  47:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       (+) You can monitor the NAND device HAL state by calling the function
  48:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           HAL_NAND_GetState()
  49:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
  50:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     [..]
  51:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       (@) This driver is a set of generic APIs which handle standard NAND flash operations.
  52:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           If a NAND flash device contains different operations and/or implementations,
  53:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           it should be implemented separately.
  54:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
  55:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     *** Callback registration ***
  56:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     =============================================
  57:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     [..]
  58:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       The compilation define  USE_HAL_NAND_REGISTER_CALLBACKS when set to 1
  59:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       allows the user to configure dynamically the driver callbacks.
  60:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
  61:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       Use Functions @ref HAL_NAND_RegisterCallback() to register a user callback,
  62:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       it allows to register following callbacks:
  63:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         (+) MspInitCallback    : NAND MspInit.
  64:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         (+) MspDeInitCallback  : NAND MspDeInit.
  65:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       This function takes as parameters the HAL peripheral handle, the Callback ID
  66:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       and a pointer to the user callback function.
  67:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
  68:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       Use function @ref HAL_NAND_UnRegisterCallback() to reset a callback to the default
  69:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       weak (surcharged) function. It allows to reset following callbacks:
  70:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         (+) MspInitCallback    : NAND MspInit.
  71:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         (+) MspDeInitCallback  : NAND MspDeInit.
  72:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       This function) takes as parameters the HAL peripheral handle and the Callback ID.
  73:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
  74:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       By default, after the @ref HAL_NAND_Init and if the state is HAL_NAND_STATE_RESET
  75:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       all callbacks are reset to the corresponding legacy weak (surcharged) functions.
  76:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       Exception done for MspInit and MspDeInit callbacks that are respectively
  77:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       reset to the legacy weak (surcharged) functions in the @ref HAL_NAND_Init
  78:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       and @ref  HAL_NAND_DeInit only when these callbacks are null (not registered beforehand).
  79:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       If not, MspInit or MspDeInit are not null, the @ref HAL_NAND_Init and @ref HAL_NAND_DeInit
  80:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
  81:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
  82:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       Callbacks can be registered/unregistered in READY state only.
  83:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       Exception done for MspInit/MspDeInit callbacks that can be registered/unregistered
  84:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       in READY or RESET state, thus registered (user) MspInit/DeInit callbacks can be used
  85:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       during the Init/DeInit.
  86:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       In that case first register the MspInit/MspDeInit user callbacks
  87:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       using @ref HAL_NAND_RegisterCallback before calling @ref HAL_NAND_DeInit
  88:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       or @ref HAL_NAND_Init function.
ARM GAS  /tmp/cc0wCm8A.s 			page 3


  89:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
  90:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       When The compilation define USE_HAL_NAND_REGISTER_CALLBACKS is set to 0 or
  91:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       not defined, the callback registering feature is not available
  92:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       and weak (surcharged) callbacks are used.
  93:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
  94:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   @endverbatim
  95:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   ******************************************************************************
  96:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @attention
  97:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *
  98:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  99:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * All rights reserved.</center></h2>
 100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *
 101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * the "License"; You may not use this file except in compliance with the
 103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * License. You may obtain a copy of the License at:
 104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                       opensource.org/licenses/BSD-3-Clause
 105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *
 106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   ******************************************************************************
 107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /* Includes ------------------------------------------------------------------*/
 110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #include "stm32h7xx_hal.h"
 111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /** @addtogroup STM32H7xx_HAL_Driver
 114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @{
 115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #ifdef HAL_NAND_MODULE_ENABLED
 118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /** @defgroup NAND NAND
 120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief NAND HAL module driver
 121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @{
 122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /* Private typedef -----------------------------------------------------------*/
 125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /* Private Constants ------------------------------------------------------------*/
 126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /* Private macro -------------------------------------------------------------*/
 127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /* Private variables ---------------------------------------------------------*/
 128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /* Private function prototypes -----------------------------------------------*/
 129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /* Exported functions ---------------------------------------------------------*/
 130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /** @defgroup NAND_Exported_Functions NAND Exported Functions
 132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @{
 133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /** @defgroup NAND_Exported_Functions_Group1 Initialization and de-initialization functions
 136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief    Initialization and Configuration functions
 137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *
 138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   @verbatim
 139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   ==============================================================================
 140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             ##### NAND Initialization and de-initialization functions #####
 141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   ==============================================================================
 142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   [..]
 143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     This section provides functions allowing to initialize/de-initialize
 144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     the NAND memory
 145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
ARM GAS  /tmp/cc0wCm8A.s 			page 4


 146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** @endverbatim
 147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @{
 148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
 151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Perform NAND memory Initialization sequence
 152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
 154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  ComSpace_Timing pointer to Common space timing structure
 155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  AttSpace_Timing pointer to Attribute space timing structure
 156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
 157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef  HAL_NAND_Init(NAND_HandleTypeDef *hnand, FMC_NAND_PCC_TimingTypeDef *ComSpace_Ti
 159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****                                  FMC_NAND_PCC_TimingTypeDef *AttSpace_Timing)
 160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
  28              		.loc 1 160 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 84B0     		sub	sp, sp, #16
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
 161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check the NAND handle state */
 162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand == NULL)
  46              		.loc 1 162 6
  47 000c FB68     		ldr	r3, [r7, #12]
  48 000e 002B     		cmp	r3, #0
  49 0010 01D1     		bne	.L2
 163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_ERROR;
  50              		.loc 1 164 12
  51 0012 0123     		movs	r3, #1
  52 0014 37E0     		b	.L3
  53              	.L2:
 165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_RESET)
  54              		.loc 1 167 12
  55 0016 FB68     		ldr	r3, [r7, #12]
  56 0018 93F82130 		ldrb	r3, [r3, #33]
  57 001c DBB2     		uxtb	r3, r3
  58              		.loc 1 167 6
  59 001e 002B     		cmp	r3, #0
  60 0020 06D1     		bne	.L4
 168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Allocate lock resource and initialize it */
ARM GAS  /tmp/cc0wCm8A.s 			page 5


 170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->Lock = HAL_UNLOCKED;
  61              		.loc 1 170 17
  62 0022 FB68     		ldr	r3, [r7, #12]
  63 0024 0022     		movs	r2, #0
  64 0026 83F82020 		strb	r2, [r3, #32]
 171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #if (USE_HAL_NAND_REGISTER_CALLBACKS == 1)
 173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     if (hnand->MspInitCallback == NULL)
 174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       hnand->MspInitCallback = HAL_NAND_MspInit;
 176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     }
 177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->ItCallback = HAL_NAND_ITCallback;
 178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Init the low level hardware */
 180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->MspInitCallback(hnand);
 181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #else
 182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Initialize the low level hardware (MSP) */
 183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     HAL_NAND_MspInit(hnand);
  65              		.loc 1 183 5
  66 002a F868     		ldr	r0, [r7, #12]
  67 002c FFF7FEFF 		bl	HAL_NAND_MspInit
  68              	.L4:
 184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #endif /* (USE_HAL_NAND_REGISTER_CALLBACKS) */
 185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Initialize NAND control Interface */
 188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   (void)FMC_NAND_Init(hnand->Instance, &(hnand->Init));
  69              		.loc 1 188 9
  70 0030 FB68     		ldr	r3, [r7, #12]
  71 0032 1A68     		ldr	r2, [r3]
  72 0034 FB68     		ldr	r3, [r7, #12]
  73 0036 0433     		adds	r3, r3, #4
  74 0038 1946     		mov	r1, r3
  75 003a 1046     		mov	r0, r2
  76 003c FFF7FEFF 		bl	FMC_NAND_Init
 189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Initialize NAND common space timing Interface */
 191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   (void)FMC_NAND_CommonSpace_Timing_Init(hnand->Instance, ComSpace_Timing, hnand->Init.NandBank);
  77              		.loc 1 191 9
  78 0040 FB68     		ldr	r3, [r7, #12]
  79 0042 1868     		ldr	r0, [r3]
  80 0044 FB68     		ldr	r3, [r7, #12]
  81 0046 5B68     		ldr	r3, [r3, #4]
  82 0048 1A46     		mov	r2, r3
  83 004a B968     		ldr	r1, [r7, #8]
  84 004c FFF7FEFF 		bl	FMC_NAND_CommonSpace_Timing_Init
 192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Initialize NAND attribute space timing Interface */
 194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   (void)FMC_NAND_AttributeSpace_Timing_Init(hnand->Instance, AttSpace_Timing, hnand->Init.NandBank)
  85              		.loc 1 194 9
  86 0050 FB68     		ldr	r3, [r7, #12]
  87 0052 1868     		ldr	r0, [r3]
  88 0054 FB68     		ldr	r3, [r7, #12]
  89 0056 5B68     		ldr	r3, [r3, #4]
  90 0058 1A46     		mov	r2, r3
  91 005a 7968     		ldr	r1, [r7, #4]
  92 005c FFF7FEFF 		bl	FMC_NAND_AttributeSpace_Timing_Init
ARM GAS  /tmp/cc0wCm8A.s 			page 6


 195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Enable the NAND device */
 197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   __FMC_NAND_ENABLE(hnand->Instance);
  93              		.loc 1 197 3
  94 0060 FB68     		ldr	r3, [r7, #12]
  95 0062 1B68     		ldr	r3, [r3]
  96 0064 1A68     		ldr	r2, [r3]
  97 0066 FB68     		ldr	r3, [r7, #12]
  98 0068 1B68     		ldr	r3, [r3]
  99 006a 42F00402 		orr	r2, r2, #4
 100 006e 1A60     		str	r2, [r3]
 198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Enable FMC Peripheral */
 200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   __FMC_ENABLE();
 101              		.loc 1 200 3
 102 0070 074B     		ldr	r3, .L5
 103 0072 1B68     		ldr	r3, [r3]
 104 0074 064A     		ldr	r2, .L5
 105 0076 43F00043 		orr	r3, r3, #-2147483648
 106 007a 1360     		str	r3, [r2]
 201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Update the NAND controller state */
 202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 107              		.loc 1 202 16
 108 007c FB68     		ldr	r3, [r7, #12]
 109 007e 0122     		movs	r2, #1
 110 0080 83F82120 		strb	r2, [r3, #33]
 203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return HAL_OK;
 111              		.loc 1 204 10
 112 0084 0023     		movs	r3, #0
 113              	.L3:
 205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 114              		.loc 1 205 1
 115 0086 1846     		mov	r0, r3
 116 0088 1037     		adds	r7, r7, #16
 117              	.LCFI3:
 118              		.cfi_def_cfa_offset 8
 119 008a BD46     		mov	sp, r7
 120              	.LCFI4:
 121              		.cfi_def_cfa_register 13
 122              		@ sp needed
 123 008c 80BD     		pop	{r7, pc}
 124              	.L6:
 125 008e 00BF     		.align	2
 126              	.L5:
 127 0090 00400052 		.word	1375748096
 128              		.cfi_endproc
 129              	.LFE331:
 131              		.section	.text.HAL_NAND_DeInit,"ax",%progbits
 132              		.align	1
 133              		.global	HAL_NAND_DeInit
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv5-d16
 139              	HAL_NAND_DeInit:
 140              	.LFB332:
ARM GAS  /tmp/cc0wCm8A.s 			page 7


 206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
 208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Perform NAND memory De-Initialization sequence
 209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
 211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
 212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_DeInit(NAND_HandleTypeDef *hnand)
 214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 141              		.loc 1 214 1
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 8
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145 0000 80B5     		push	{r7, lr}
 146              	.LCFI5:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 82B0     		sub	sp, sp, #8
 151              	.LCFI6:
 152              		.cfi_def_cfa_offset 16
 153 0004 00AF     		add	r7, sp, #0
 154              	.LCFI7:
 155              		.cfi_def_cfa_register 7
 156 0006 7860     		str	r0, [r7, #4]
 215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #if (USE_HAL_NAND_REGISTER_CALLBACKS == 1)
 216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->MspDeInitCallback == NULL)
 217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->MspDeInitCallback = HAL_NAND_MspDeInit;
 219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* DeInit the low level hardware */
 222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   hnand->MspDeInitCallback(hnand);
 223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #else
 224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Initialize the low level hardware (MSP) */
 225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   HAL_NAND_MspDeInit(hnand);
 157              		.loc 1 225 3
 158 0008 7868     		ldr	r0, [r7, #4]
 159 000a FFF7FEFF 		bl	HAL_NAND_MspDeInit
 226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #endif /* (USE_HAL_NAND_REGISTER_CALLBACKS) */
 227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Configure the NAND registers with their reset values */
 229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   (void)FMC_NAND_DeInit(hnand->Instance, hnand->Init.NandBank);
 160              		.loc 1 229 9
 161 000e 7B68     		ldr	r3, [r7, #4]
 162 0010 1A68     		ldr	r2, [r3]
 163 0012 7B68     		ldr	r3, [r7, #4]
 164 0014 5B68     		ldr	r3, [r3, #4]
 165 0016 1946     		mov	r1, r3
 166 0018 1046     		mov	r0, r2
 167 001a FFF7FEFF 		bl	FMC_NAND_DeInit
 230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Reset the NAND controller state */
 232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_RESET;
 168              		.loc 1 232 16
 169 001e 7B68     		ldr	r3, [r7, #4]
 170 0020 0022     		movs	r2, #0
ARM GAS  /tmp/cc0wCm8A.s 			page 8


 171 0022 83F82120 		strb	r2, [r3, #33]
 233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Release Lock */
 235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
 172              		.loc 1 235 3
 173 0026 7B68     		ldr	r3, [r7, #4]
 174 0028 0022     		movs	r2, #0
 175 002a 83F82020 		strb	r2, [r3, #32]
 236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return HAL_OK;
 176              		.loc 1 237 10
 177 002e 0023     		movs	r3, #0
 238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 178              		.loc 1 238 1
 179 0030 1846     		mov	r0, r3
 180 0032 0837     		adds	r7, r7, #8
 181              	.LCFI8:
 182              		.cfi_def_cfa_offset 8
 183 0034 BD46     		mov	sp, r7
 184              	.LCFI9:
 185              		.cfi_def_cfa_register 13
 186              		@ sp needed
 187 0036 80BD     		pop	{r7, pc}
 188              		.cfi_endproc
 189              	.LFE332:
 191              		.section	.text.HAL_NAND_MspInit,"ax",%progbits
 192              		.align	1
 193              		.weak	HAL_NAND_MspInit
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv5-d16
 199              	HAL_NAND_MspInit:
 200              	.LFB333:
 239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
 241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  NAND MSP Init
 242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
 244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval None
 245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** __weak void HAL_NAND_MspInit(NAND_HandleTypeDef *hnand)
 247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 201              		.loc 1 247 1
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 8
 204              		@ frame_needed = 1, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206 0000 80B4     		push	{r7}
 207              	.LCFI10:
 208              		.cfi_def_cfa_offset 4
 209              		.cfi_offset 7, -4
 210 0002 83B0     		sub	sp, sp, #12
 211              	.LCFI11:
 212              		.cfi_def_cfa_offset 16
 213 0004 00AF     		add	r7, sp, #0
 214              	.LCFI12:
ARM GAS  /tmp/cc0wCm8A.s 			page 9


 215              		.cfi_def_cfa_register 7
 216 0006 7860     		str	r0, [r7, #4]
 248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Prevent unused argument(s) compilation warning */
 249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   UNUSED(hnand);
 250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             the HAL_NAND_MspInit could be implemented in the user file
 253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****    */
 254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 217              		.loc 1 254 1
 218 0008 00BF     		nop
 219 000a 0C37     		adds	r7, r7, #12
 220              	.LCFI13:
 221              		.cfi_def_cfa_offset 4
 222 000c BD46     		mov	sp, r7
 223              	.LCFI14:
 224              		.cfi_def_cfa_register 13
 225              		@ sp needed
 226 000e 5DF8047B 		ldr	r7, [sp], #4
 227              	.LCFI15:
 228              		.cfi_restore 7
 229              		.cfi_def_cfa_offset 0
 230 0012 7047     		bx	lr
 231              		.cfi_endproc
 232              	.LFE333:
 234              		.section	.text.HAL_NAND_MspDeInit,"ax",%progbits
 235              		.align	1
 236              		.weak	HAL_NAND_MspDeInit
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv5-d16
 242              	HAL_NAND_MspDeInit:
 243              	.LFB334:
 255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
 257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  NAND MSP DeInit
 258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
 260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval None
 261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** __weak void HAL_NAND_MspDeInit(NAND_HandleTypeDef *hnand)
 263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 244              		.loc 1 263 1
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 8
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249 0000 80B4     		push	{r7}
 250              	.LCFI16:
 251              		.cfi_def_cfa_offset 4
 252              		.cfi_offset 7, -4
 253 0002 83B0     		sub	sp, sp, #12
 254              	.LCFI17:
 255              		.cfi_def_cfa_offset 16
 256 0004 00AF     		add	r7, sp, #0
 257              	.LCFI18:
ARM GAS  /tmp/cc0wCm8A.s 			page 10


 258              		.cfi_def_cfa_register 7
 259 0006 7860     		str	r0, [r7, #4]
 264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Prevent unused argument(s) compilation warning */
 265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   UNUSED(hnand);
 266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             the HAL_NAND_MspDeInit could be implemented in the user file
 269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****    */
 270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 260              		.loc 1 270 1
 261 0008 00BF     		nop
 262 000a 0C37     		adds	r7, r7, #12
 263              	.LCFI19:
 264              		.cfi_def_cfa_offset 4
 265 000c BD46     		mov	sp, r7
 266              	.LCFI20:
 267              		.cfi_def_cfa_register 13
 268              		@ sp needed
 269 000e 5DF8047B 		ldr	r7, [sp], #4
 270              	.LCFI21:
 271              		.cfi_restore 7
 272              		.cfi_def_cfa_offset 0
 273 0012 7047     		bx	lr
 274              		.cfi_endproc
 275              	.LFE334:
 277              		.section	.text.HAL_NAND_IRQHandler,"ax",%progbits
 278              		.align	1
 279              		.global	HAL_NAND_IRQHandler
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv5-d16
 285              	HAL_NAND_IRQHandler:
 286              	.LFB335:
 271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
 274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  This function handles NAND device interrupt request.
 275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
 277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
 278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** void HAL_NAND_IRQHandler(NAND_HandleTypeDef *hnand)
 280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 287              		.loc 1 280 1
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 8
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291 0000 80B5     		push	{r7, lr}
 292              	.LCFI22:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 7, -8
 295              		.cfi_offset 14, -4
 296 0002 82B0     		sub	sp, sp, #8
 297              	.LCFI23:
 298              		.cfi_def_cfa_offset 16
 299 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cc0wCm8A.s 			page 11


 300              	.LCFI24:
 301              		.cfi_def_cfa_register 7
 302 0006 7860     		str	r0, [r7, #4]
 281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check NAND interrupt Rising edge flag */
 282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (__FMC_NAND_GET_FLAG(hnand->Instance, hnand->Init.NandBank, FMC_FLAG_RISING_EDGE))
 303              		.loc 1 282 7
 304 0008 7B68     		ldr	r3, [r7, #4]
 305 000a 1B68     		ldr	r3, [r3]
 306 000c 5B68     		ldr	r3, [r3, #4]
 307 000e 03F00103 		and	r3, r3, #1
 308              		.loc 1 282 6
 309 0012 012B     		cmp	r3, #1
 310 0014 0AD1     		bne	.L12
 283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* NAND interrupt callback*/
 285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #if (USE_HAL_NAND_REGISTER_CALLBACKS == 1)
 286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->ItCallback(hnand);
 287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #else
 288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     HAL_NAND_ITCallback(hnand);
 311              		.loc 1 288 5
 312 0016 7868     		ldr	r0, [r7, #4]
 313 0018 FFF7FEFF 		bl	HAL_NAND_ITCallback
 289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #endif /* (USE_HAL_NAND_REGISTER_CALLBACKS) */
 290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Clear NAND interrupt Rising edge pending bit */
 292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __FMC_NAND_CLEAR_FLAG(hnand->Instance, FMC_FLAG_RISING_EDGE);
 314              		.loc 1 292 5
 315 001c 7B68     		ldr	r3, [r7, #4]
 316 001e 1B68     		ldr	r3, [r3]
 317 0020 5A68     		ldr	r2, [r3, #4]
 318 0022 7B68     		ldr	r3, [r7, #4]
 319 0024 1B68     		ldr	r3, [r3]
 320 0026 22F00102 		bic	r2, r2, #1
 321 002a 5A60     		str	r2, [r3, #4]
 322              	.L12:
 293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check NAND interrupt Level flag */
 296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (__FMC_NAND_GET_FLAG(hnand->Instance, hnand->Init.NandBank, FMC_FLAG_LEVEL))
 323              		.loc 1 296 7
 324 002c 7B68     		ldr	r3, [r7, #4]
 325 002e 1B68     		ldr	r3, [r3]
 326 0030 5B68     		ldr	r3, [r3, #4]
 327 0032 03F00203 		and	r3, r3, #2
 328              		.loc 1 296 6
 329 0036 022B     		cmp	r3, #2
 330 0038 0AD1     		bne	.L13
 297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* NAND interrupt callback*/
 299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #if (USE_HAL_NAND_REGISTER_CALLBACKS == 1)
 300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->ItCallback(hnand);
 301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #else
 302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     HAL_NAND_ITCallback(hnand);
 331              		.loc 1 302 5
 332 003a 7868     		ldr	r0, [r7, #4]
 333 003c FFF7FEFF 		bl	HAL_NAND_ITCallback
 303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #endif /* (USE_HAL_NAND_REGISTER_CALLBACKS) */
ARM GAS  /tmp/cc0wCm8A.s 			page 12


 304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Clear NAND interrupt Level pending bit */
 306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __FMC_NAND_CLEAR_FLAG(hnand->Instance, FMC_FLAG_LEVEL);
 334              		.loc 1 306 5
 335 0040 7B68     		ldr	r3, [r7, #4]
 336 0042 1B68     		ldr	r3, [r3]
 337 0044 5A68     		ldr	r2, [r3, #4]
 338 0046 7B68     		ldr	r3, [r7, #4]
 339 0048 1B68     		ldr	r3, [r3]
 340 004a 22F00202 		bic	r2, r2, #2
 341 004e 5A60     		str	r2, [r3, #4]
 342              	.L13:
 307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check NAND interrupt Falling edge flag */
 310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (__FMC_NAND_GET_FLAG(hnand->Instance, hnand->Init.NandBank, FMC_FLAG_FALLING_EDGE))
 343              		.loc 1 310 7
 344 0050 7B68     		ldr	r3, [r7, #4]
 345 0052 1B68     		ldr	r3, [r3]
 346 0054 5B68     		ldr	r3, [r3, #4]
 347 0056 03F00403 		and	r3, r3, #4
 348              		.loc 1 310 6
 349 005a 042B     		cmp	r3, #4
 350 005c 0AD1     		bne	.L14
 311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* NAND interrupt callback*/
 313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #if (USE_HAL_NAND_REGISTER_CALLBACKS == 1)
 314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->ItCallback(hnand);
 315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #else
 316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     HAL_NAND_ITCallback(hnand);
 351              		.loc 1 316 5
 352 005e 7868     		ldr	r0, [r7, #4]
 353 0060 FFF7FEFF 		bl	HAL_NAND_ITCallback
 317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #endif /* (USE_HAL_NAND_REGISTER_CALLBACKS) */
 318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Clear NAND interrupt Falling edge pending bit */
 320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __FMC_NAND_CLEAR_FLAG(hnand->Instance, FMC_FLAG_FALLING_EDGE);
 354              		.loc 1 320 5
 355 0064 7B68     		ldr	r3, [r7, #4]
 356 0066 1B68     		ldr	r3, [r3]
 357 0068 5A68     		ldr	r2, [r3, #4]
 358 006a 7B68     		ldr	r3, [r7, #4]
 359 006c 1B68     		ldr	r3, [r3]
 360 006e 22F00402 		bic	r2, r2, #4
 361 0072 5A60     		str	r2, [r3, #4]
 362              	.L14:
 321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check NAND interrupt FIFO empty flag */
 324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (__FMC_NAND_GET_FLAG(hnand->Instance, hnand->Init.NandBank, FMC_FLAG_FEMPT))
 363              		.loc 1 324 7
 364 0074 7B68     		ldr	r3, [r7, #4]
 365 0076 1B68     		ldr	r3, [r3]
 366 0078 5B68     		ldr	r3, [r3, #4]
 367 007a 03F04003 		and	r3, r3, #64
 368              		.loc 1 324 6
 369 007e 402B     		cmp	r3, #64
ARM GAS  /tmp/cc0wCm8A.s 			page 13


 370 0080 0AD1     		bne	.L16
 325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* NAND interrupt callback*/
 327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #if (USE_HAL_NAND_REGISTER_CALLBACKS == 1)
 328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->ItCallback(hnand);
 329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #else
 330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     HAL_NAND_ITCallback(hnand);
 371              		.loc 1 330 5
 372 0082 7868     		ldr	r0, [r7, #4]
 373 0084 FFF7FEFF 		bl	HAL_NAND_ITCallback
 331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #endif /* (USE_HAL_NAND_REGISTER_CALLBACKS) */
 332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Clear NAND interrupt FIFO empty pending bit */
 334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __FMC_NAND_CLEAR_FLAG(hnand->Instance, FMC_FLAG_FEMPT);
 374              		.loc 1 334 5
 375 0088 7B68     		ldr	r3, [r7, #4]
 376 008a 1B68     		ldr	r3, [r3]
 377 008c 5A68     		ldr	r2, [r3, #4]
 378 008e 7B68     		ldr	r3, [r7, #4]
 379 0090 1B68     		ldr	r3, [r3]
 380 0092 22F04002 		bic	r2, r2, #64
 381 0096 5A60     		str	r2, [r3, #4]
 382              	.L16:
 335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 383              		.loc 1 337 1
 384 0098 00BF     		nop
 385 009a 0837     		adds	r7, r7, #8
 386              	.LCFI25:
 387              		.cfi_def_cfa_offset 8
 388 009c BD46     		mov	sp, r7
 389              	.LCFI26:
 390              		.cfi_def_cfa_register 13
 391              		@ sp needed
 392 009e 80BD     		pop	{r7, pc}
 393              		.cfi_endproc
 394              	.LFE335:
 396              		.section	.text.HAL_NAND_ITCallback,"ax",%progbits
 397              		.align	1
 398              		.weak	HAL_NAND_ITCallback
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 402              		.fpu fpv5-d16
 404              	HAL_NAND_ITCallback:
 405              	.LFB336:
 338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
 340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  NAND interrupt feature callback
 341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
 343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval None
 344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** __weak void HAL_NAND_ITCallback(NAND_HandleTypeDef *hnand)
 346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 406              		.loc 1 346 1
ARM GAS  /tmp/cc0wCm8A.s 			page 14


 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 8
 409              		@ frame_needed = 1, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 411 0000 80B4     		push	{r7}
 412              	.LCFI27:
 413              		.cfi_def_cfa_offset 4
 414              		.cfi_offset 7, -4
 415 0002 83B0     		sub	sp, sp, #12
 416              	.LCFI28:
 417              		.cfi_def_cfa_offset 16
 418 0004 00AF     		add	r7, sp, #0
 419              	.LCFI29:
 420              		.cfi_def_cfa_register 7
 421 0006 7860     		str	r0, [r7, #4]
 347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Prevent unused argument(s) compilation warning */
 348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   UNUSED(hnand);
 349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             the HAL_NAND_ITCallback could be implemented in the user file
 352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****    */
 353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 422              		.loc 1 353 1
 423 0008 00BF     		nop
 424 000a 0C37     		adds	r7, r7, #12
 425              	.LCFI30:
 426              		.cfi_def_cfa_offset 4
 427 000c BD46     		mov	sp, r7
 428              	.LCFI31:
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 000e 5DF8047B 		ldr	r7, [sp], #4
 432              	.LCFI32:
 433              		.cfi_restore 7
 434              		.cfi_def_cfa_offset 0
 435 0012 7047     		bx	lr
 436              		.cfi_endproc
 437              	.LFE336:
 439              		.section	.text.HAL_NAND_Read_ID,"ax",%progbits
 440              		.align	1
 441              		.global	HAL_NAND_Read_ID
 442              		.syntax unified
 443              		.thumb
 444              		.thumb_func
 445              		.fpu fpv5-d16
 447              	HAL_NAND_Read_ID:
 448              	.LFB337:
 354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
 356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @}
 357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /** @defgroup NAND_Exported_Functions_Group2 Input and Output functions
 360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief    Input Output and memory control functions
 361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *
 362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   @verbatim
 363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   ==============================================================================
ARM GAS  /tmp/cc0wCm8A.s 			page 15


 364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****                     ##### NAND Input and Output functions #####
 365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   ==============================================================================
 366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   [..]
 367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     This section provides functions allowing to use and control the NAND
 368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     memory
 369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** @endverbatim
 371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @{
 372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
 375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Read the NAND memory electronic signature
 376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
 378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pNAND_ID NAND ID structure
 379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
 380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Read_ID(NAND_HandleTypeDef *hnand, NAND_IDTypeDef *pNAND_ID)
 382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 449              		.loc 1 382 1
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 24
 452              		@ frame_needed = 1, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 454 0000 80B4     		push	{r7}
 455              	.LCFI33:
 456              		.cfi_def_cfa_offset 4
 457              		.cfi_offset 7, -4
 458 0002 87B0     		sub	sp, sp, #28
 459              	.LCFI34:
 460              		.cfi_def_cfa_offset 32
 461 0004 00AF     		add	r7, sp, #0
 462              	.LCFI35:
 463              		.cfi_def_cfa_register 7
 464 0006 7860     		str	r0, [r7, #4]
 465 0008 3960     		str	r1, [r7]
 383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   __IO uint32_t data = 0;
 466              		.loc 1 383 17
 467 000a 0023     		movs	r3, #0
 468 000c 3B61     		str	r3, [r7, #16]
 384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   __IO uint32_t data1 = 0;
 469              		.loc 1 384 17
 470 000e 0023     		movs	r3, #0
 471 0010 FB60     		str	r3, [r7, #12]
 385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t deviceaddress;
 386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check the NAND controller state */
 388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_BUSY)
 472              		.loc 1 388 12
 473 0012 7B68     		ldr	r3, [r7, #4]
 474 0014 93F82130 		ldrb	r3, [r3, #33]
 475 0018 DBB2     		uxtb	r3, r3
 476              		.loc 1 388 6
 477 001a 022B     		cmp	r3, #2
 478 001c 01D1     		bne	.L19
 389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_BUSY;
ARM GAS  /tmp/cc0wCm8A.s 			page 16


 479              		.loc 1 390 12
 480 001e 0223     		movs	r3, #2
 481 0020 66E0     		b	.L20
 482              	.L19:
 391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if (hnand->State == HAL_NAND_STATE_READY)
 483              		.loc 1 392 17
 484 0022 7B68     		ldr	r3, [r7, #4]
 485 0024 93F82130 		ldrb	r3, [r3, #33]
 486 0028 DBB2     		uxtb	r3, r3
 487              		.loc 1 392 11
 488 002a 012B     		cmp	r3, #1
 489 002c 5FD1     		bne	.L21
 393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process Locked */
 395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_LOCK(hnand);
 490              		.loc 1 395 5
 491 002e 7B68     		ldr	r3, [r7, #4]
 492 0030 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 493 0034 012B     		cmp	r3, #1
 494 0036 01D1     		bne	.L22
 495              		.loc 1 395 5 is_stmt 0 discriminator 1
 496 0038 0223     		movs	r3, #2
 497 003a 59E0     		b	.L20
 498              	.L22:
 499              		.loc 1 395 5 discriminator 2
 500 003c 7B68     		ldr	r3, [r7, #4]
 501 003e 0122     		movs	r2, #1
 502 0040 83F82020 		strb	r2, [r3, #32]
 396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
 398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_BUSY;
 503              		.loc 1 398 18 is_stmt 1 discriminator 2
 504 0044 7B68     		ldr	r3, [r7, #4]
 505 0046 0222     		movs	r2, #2
 506 0048 83F82120 		strb	r2, [r3, #33]
 399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Identify the device address */
 401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     deviceaddress = NAND_DEVICE;
 507              		.loc 1 401 19 discriminator 2
 508 004c 4FF00043 		mov	r3, #-2147483648
 509 0050 7B61     		str	r3, [r7, #20]
 402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Send Read ID command sequence */
 404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA))  = NAND_CMD_READID;
 510              		.loc 1 404 23 discriminator 2
 511 0052 7B69     		ldr	r3, [r7, #20]
 512 0054 43F48033 		orr	r3, r3, #65536
 513              		.loc 1 404 62 discriminator 2
 514 0058 9022     		movs	r2, #144
 515 005a 1A70     		strb	r2, [r3]
 516              	.LBB340:
 517              	.LBB341:
 518              		.file 2 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
ARM GAS  /tmp/cc0wCm8A.s 			page 17


   4:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc0wCm8A.s 			page 18


  61:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
ARM GAS  /tmp/cc0wCm8A.s 			page 19


 118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
ARM GAS  /tmp/cc0wCm8A.s 			page 20


 175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
ARM GAS  /tmp/cc0wCm8A.s 			page 21


 232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/cc0wCm8A.s 			page 22


 289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc0wCm8A.s 			page 23


 346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc0wCm8A.s 			page 24


 403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc0wCm8A.s 			page 25


 460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc0wCm8A.s 			page 26


 517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc0wCm8A.s 			page 27


 574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  /tmp/cc0wCm8A.s 			page 28


 631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/cc0wCm8A.s 			page 29


 688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
ARM GAS  /tmp/cc0wCm8A.s 			page 30


 745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc0wCm8A.s 			page 31


 802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc0wCm8A.s 			page 32


 859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
ARM GAS  /tmp/cc0wCm8A.s 			page 33


 916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 519              		.loc 2 946 3 discriminator 2
 520              		.syntax unified
 521              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 522 005c BFF34F8F 		dsb 0xF
 523              	@ 0 "" 2
 947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 524              		.loc 2 947 1 discriminator 2
 525              		.thumb
 526              		.syntax unified
 527 0060 00BF     		nop
 528              	.LBE341:
 529              	.LBE340:
 405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __DSB();
 406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 530              		.loc 1 406 23 discriminator 2
 531 0062 7B69     		ldr	r3, [r7, #20]
 532 0064 43F40033 		orr	r3, r3, #131072
 533              		.loc 1 406 62 discriminator 2
 534 0068 0022     		movs	r2, #0
 535 006a 1A70     		strb	r2, [r3]
 536              	.LBB342:
 537              	.LBB343:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 538              		.loc 2 946 3 discriminator 2
 539              		.syntax unified
 540              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/cc0wCm8A.s 			page 34


 541 006c BFF34F8F 		dsb 0xF
 542              	@ 0 "" 2
 543              		.loc 2 947 1 discriminator 2
 544              		.thumb
 545              		.syntax unified
 546 0070 00BF     		nop
 547              	.LBE343:
 548              	.LBE342:
 407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __DSB();
 408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Read the electronic signature from NAND flash */
 410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     if (hnand->Init.MemoryDataWidth == FMC_NAND_MEM_BUS_WIDTH_8)
 549              		.loc 1 410 20 discriminator 2
 550 0072 7B68     		ldr	r3, [r7, #4]
 551 0074 DB68     		ldr	r3, [r3, #12]
 552              		.loc 1 410 8 discriminator 2
 553 0076 002B     		cmp	r3, #0
 554 0078 16D1     		bne	.L23
 411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       data = *(__IO uint32_t *)deviceaddress;
 555              		.loc 1 412 15
 556 007a 7B69     		ldr	r3, [r7, #20]
 557              		.loc 1 412 14
 558 007c 1B68     		ldr	r3, [r3]
 559              		.loc 1 412 12
 560 007e 3B61     		str	r3, [r7, #16]
 413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Return the data read */
 415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       pNAND_ID->Maker_Id   = ADDR_1ST_CYCLE(data);
 561              		.loc 1 415 30
 562 0080 3B69     		ldr	r3, [r7, #16]
 563 0082 DAB2     		uxtb	r2, r3
 564              		.loc 1 415 28
 565 0084 3B68     		ldr	r3, [r7]
 566 0086 1A70     		strb	r2, [r3]
 416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       pNAND_ID->Device_Id  = ADDR_2ND_CYCLE(data);
 567              		.loc 1 416 30
 568 0088 3B69     		ldr	r3, [r7, #16]
 569 008a 1B0A     		lsrs	r3, r3, #8
 570 008c DAB2     		uxtb	r2, r3
 571              		.loc 1 416 28
 572 008e 3B68     		ldr	r3, [r7]
 573 0090 5A70     		strb	r2, [r3, #1]
 417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       pNAND_ID->Third_Id   = ADDR_3RD_CYCLE(data);
 574              		.loc 1 417 30
 575 0092 3B69     		ldr	r3, [r7, #16]
 576 0094 1B0C     		lsrs	r3, r3, #16
 577 0096 DAB2     		uxtb	r2, r3
 578              		.loc 1 417 28
 579 0098 3B68     		ldr	r3, [r7]
 580 009a 9A70     		strb	r2, [r3, #2]
 418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       pNAND_ID->Fourth_Id  = ADDR_4TH_CYCLE(data);
 581              		.loc 1 418 30
 582 009c 3B69     		ldr	r3, [r7, #16]
 583 009e 1B0E     		lsrs	r3, r3, #24
 584 00a0 DAB2     		uxtb	r2, r3
 585              		.loc 1 418 28
ARM GAS  /tmp/cc0wCm8A.s 			page 35


 586 00a2 3B68     		ldr	r3, [r7]
 587 00a4 DA70     		strb	r2, [r3, #3]
 588 00a6 18E0     		b	.L24
 589              	.L23:
 419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     }
 420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     else
 421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       data = *(__IO uint32_t *)deviceaddress;
 590              		.loc 1 422 15
 591 00a8 7B69     		ldr	r3, [r7, #20]
 592              		.loc 1 422 14
 593 00aa 1B68     		ldr	r3, [r3]
 594              		.loc 1 422 12
 595 00ac 3B61     		str	r3, [r7, #16]
 423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       data1 = *((__IO uint32_t *)deviceaddress + 4);
 596              		.loc 1 423 48
 597 00ae 7B69     		ldr	r3, [r7, #20]
 598 00b0 1033     		adds	r3, r3, #16
 599              		.loc 1 423 15
 600 00b2 1B68     		ldr	r3, [r3]
 601              		.loc 1 423 13
 602 00b4 FB60     		str	r3, [r7, #12]
 424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Return the data read */
 426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       pNAND_ID->Maker_Id   = ADDR_1ST_CYCLE(data);
 603              		.loc 1 426 30
 604 00b6 3B69     		ldr	r3, [r7, #16]
 605 00b8 DAB2     		uxtb	r2, r3
 606              		.loc 1 426 28
 607 00ba 3B68     		ldr	r3, [r7]
 608 00bc 1A70     		strb	r2, [r3]
 427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       pNAND_ID->Device_Id  = ADDR_3RD_CYCLE(data);
 609              		.loc 1 427 30
 610 00be 3B69     		ldr	r3, [r7, #16]
 611 00c0 1B0C     		lsrs	r3, r3, #16
 612 00c2 DAB2     		uxtb	r2, r3
 613              		.loc 1 427 28
 614 00c4 3B68     		ldr	r3, [r7]
 615 00c6 5A70     		strb	r2, [r3, #1]
 428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       pNAND_ID->Third_Id   = ADDR_1ST_CYCLE(data1);
 616              		.loc 1 428 30
 617 00c8 FB68     		ldr	r3, [r7, #12]
 618 00ca DAB2     		uxtb	r2, r3
 619              		.loc 1 428 28
 620 00cc 3B68     		ldr	r3, [r7]
 621 00ce 9A70     		strb	r2, [r3, #2]
 429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       pNAND_ID->Fourth_Id  = ADDR_3RD_CYCLE(data1);
 622              		.loc 1 429 30
 623 00d0 FB68     		ldr	r3, [r7, #12]
 624 00d2 1B0C     		lsrs	r3, r3, #16
 625 00d4 DAB2     		uxtb	r2, r3
 626              		.loc 1 429 28
 627 00d6 3B68     		ldr	r3, [r7]
 628 00d8 DA70     		strb	r2, [r3, #3]
 629              	.L24:
 430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     }
 431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
ARM GAS  /tmp/cc0wCm8A.s 			page 36


 432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
 433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_READY;
 630              		.loc 1 433 18
 631 00da 7B68     		ldr	r3, [r7, #4]
 632 00dc 0122     		movs	r2, #1
 633 00de 83F82120 		strb	r2, [r3, #33]
 434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process unlocked */
 436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_UNLOCK(hnand);
 634              		.loc 1 436 5
 635 00e2 7B68     		ldr	r3, [r7, #4]
 636 00e4 0022     		movs	r2, #0
 637 00e6 83F82020 		strb	r2, [r3, #32]
 437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
 439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_ERROR;
 441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return HAL_OK;
 638              		.loc 1 443 10
 639 00ea 0023     		movs	r3, #0
 640 00ec 00E0     		b	.L20
 641              	.L21:
 440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 642              		.loc 1 440 12
 643 00ee 0123     		movs	r3, #1
 644              	.L20:
 444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 645              		.loc 1 444 1
 646 00f0 1846     		mov	r0, r3
 647 00f2 1C37     		adds	r7, r7, #28
 648              	.LCFI36:
 649              		.cfi_def_cfa_offset 4
 650 00f4 BD46     		mov	sp, r7
 651              	.LCFI37:
 652              		.cfi_def_cfa_register 13
 653              		@ sp needed
 654 00f6 5DF8047B 		ldr	r7, [sp], #4
 655              	.LCFI38:
 656              		.cfi_restore 7
 657              		.cfi_def_cfa_offset 0
 658 00fa 7047     		bx	lr
 659              		.cfi_endproc
 660              	.LFE337:
 662              		.section	.text.HAL_NAND_Reset,"ax",%progbits
 663              		.align	1
 664              		.global	HAL_NAND_Reset
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu fpv5-d16
 670              	HAL_NAND_Reset:
 671              	.LFB338:
 445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
 447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  NAND memory reset
ARM GAS  /tmp/cc0wCm8A.s 			page 37


 448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
 450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
 451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Reset(NAND_HandleTypeDef *hnand)
 453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 672              		.loc 1 453 1
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 16
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677 0000 80B4     		push	{r7}
 678              	.LCFI39:
 679              		.cfi_def_cfa_offset 4
 680              		.cfi_offset 7, -4
 681 0002 85B0     		sub	sp, sp, #20
 682              	.LCFI40:
 683              		.cfi_def_cfa_offset 24
 684 0004 00AF     		add	r7, sp, #0
 685              	.LCFI41:
 686              		.cfi_def_cfa_register 7
 687 0006 7860     		str	r0, [r7, #4]
 454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t deviceaddress;
 455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check the NAND controller state */
 457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_BUSY)
 688              		.loc 1 457 12
 689 0008 7B68     		ldr	r3, [r7, #4]
 690 000a 93F82130 		ldrb	r3, [r3, #33]
 691 000e DBB2     		uxtb	r3, r3
 692              		.loc 1 457 6
 693 0010 022B     		cmp	r3, #2
 694 0012 01D1     		bne	.L27
 458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_BUSY;
 695              		.loc 1 459 12
 696 0014 0223     		movs	r3, #2
 697 0016 27E0     		b	.L28
 698              	.L27:
 460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if (hnand->State == HAL_NAND_STATE_READY)
 699              		.loc 1 461 17
 700 0018 7B68     		ldr	r3, [r7, #4]
 701 001a 93F82130 		ldrb	r3, [r3, #33]
 702 001e DBB2     		uxtb	r3, r3
 703              		.loc 1 461 11
 704 0020 012B     		cmp	r3, #1
 705 0022 20D1     		bne	.L29
 462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process Locked */
 464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_LOCK(hnand);
 706              		.loc 1 464 5
 707 0024 7B68     		ldr	r3, [r7, #4]
 708 0026 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 709 002a 012B     		cmp	r3, #1
 710 002c 01D1     		bne	.L30
 711              		.loc 1 464 5 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc0wCm8A.s 			page 38


 712 002e 0223     		movs	r3, #2
 713 0030 1AE0     		b	.L28
 714              	.L30:
 715              		.loc 1 464 5 discriminator 2
 716 0032 7B68     		ldr	r3, [r7, #4]
 717 0034 0122     		movs	r2, #1
 718 0036 83F82020 		strb	r2, [r3, #32]
 465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
 467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_BUSY;
 719              		.loc 1 467 18 is_stmt 1 discriminator 2
 720 003a 7B68     		ldr	r3, [r7, #4]
 721 003c 0222     		movs	r2, #2
 722 003e 83F82120 		strb	r2, [r3, #33]
 468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Identify the device address */
 470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     deviceaddress = NAND_DEVICE;
 723              		.loc 1 470 19 discriminator 2
 724 0042 4FF00043 		mov	r3, #-2147483648
 725 0046 FB60     		str	r3, [r7, #12]
 471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Send NAND reset command */
 473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = 0xFF;
 726              		.loc 1 473 23 discriminator 2
 727 0048 FB68     		ldr	r3, [r7, #12]
 728 004a 43F48033 		orr	r3, r3, #65536
 729              		.loc 1 473 61 discriminator 2
 730 004e FF22     		movs	r2, #255
 731 0050 1A70     		strb	r2, [r3]
 474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
 476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_READY;
 732              		.loc 1 476 18 discriminator 2
 733 0052 7B68     		ldr	r3, [r7, #4]
 734 0054 0122     		movs	r2, #1
 735 0056 83F82120 		strb	r2, [r3, #33]
 477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process unlocked */
 479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_UNLOCK(hnand);
 736              		.loc 1 479 5 discriminator 2
 737 005a 7B68     		ldr	r3, [r7, #4]
 738 005c 0022     		movs	r2, #0
 739 005e 83F82020 		strb	r2, [r3, #32]
 480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
 482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_ERROR;
 484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return HAL_OK;
 740              		.loc 1 486 10 discriminator 2
 741 0062 0023     		movs	r3, #0
 742 0064 00E0     		b	.L28
 743              	.L29:
 483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 744              		.loc 1 483 12
 745 0066 0123     		movs	r3, #1
ARM GAS  /tmp/cc0wCm8A.s 			page 39


 746              	.L28:
 487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 747              		.loc 1 488 1
 748 0068 1846     		mov	r0, r3
 749 006a 1437     		adds	r7, r7, #20
 750              	.LCFI42:
 751              		.cfi_def_cfa_offset 4
 752 006c BD46     		mov	sp, r7
 753              	.LCFI43:
 754              		.cfi_def_cfa_register 13
 755              		@ sp needed
 756 006e 5DF8047B 		ldr	r7, [sp], #4
 757              	.LCFI44:
 758              		.cfi_restore 7
 759              		.cfi_def_cfa_offset 0
 760 0072 7047     		bx	lr
 761              		.cfi_endproc
 762              	.LFE338:
 764              		.section	.text.HAL_NAND_ConfigDevice,"ax",%progbits
 765              		.align	1
 766              		.global	HAL_NAND_ConfigDevice
 767              		.syntax unified
 768              		.thumb
 769              		.thumb_func
 770              		.fpu fpv5-d16
 772              	HAL_NAND_ConfigDevice:
 773              	.LFB339:
 489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
 491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Configure the device: Enter the physical parameters of the device
 492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
 494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pDeviceConfig  pointer to NAND_DeviceConfigTypeDef structure
 495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
 496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef  HAL_NAND_ConfigDevice(NAND_HandleTypeDef *hnand, NAND_DeviceConfigTypeDef *pDevi
 498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 774              		.loc 1 498 1
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 8
 777              		@ frame_needed = 1, uses_anonymous_args = 0
 778              		@ link register save eliminated.
 779 0000 80B4     		push	{r7}
 780              	.LCFI45:
 781              		.cfi_def_cfa_offset 4
 782              		.cfi_offset 7, -4
 783 0002 83B0     		sub	sp, sp, #12
 784              	.LCFI46:
 785              		.cfi_def_cfa_offset 16
 786 0004 00AF     		add	r7, sp, #0
 787              	.LCFI47:
 788              		.cfi_def_cfa_register 7
 789 0006 7860     		str	r0, [r7, #4]
 790 0008 3960     		str	r1, [r7]
 499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   hnand->Config.PageSize           = pDeviceConfig->PageSize;
 791              		.loc 1 499 51
ARM GAS  /tmp/cc0wCm8A.s 			page 40


 792 000a 3B68     		ldr	r3, [r7]
 793 000c 1A68     		ldr	r2, [r3]
 794              		.loc 1 499 36
 795 000e 7B68     		ldr	r3, [r7, #4]
 796 0010 5A62     		str	r2, [r3, #36]
 500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   hnand->Config.SpareAreaSize      = pDeviceConfig->SpareAreaSize;
 797              		.loc 1 500 51
 798 0012 3B68     		ldr	r3, [r7]
 799 0014 5A68     		ldr	r2, [r3, #4]
 800              		.loc 1 500 36
 801 0016 7B68     		ldr	r3, [r7, #4]
 802 0018 9A62     		str	r2, [r3, #40]
 501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   hnand->Config.BlockSize          = pDeviceConfig->BlockSize;
 803              		.loc 1 501 51
 804 001a 3B68     		ldr	r3, [r7]
 805 001c 9A68     		ldr	r2, [r3, #8]
 806              		.loc 1 501 36
 807 001e 7B68     		ldr	r3, [r7, #4]
 808 0020 DA62     		str	r2, [r3, #44]
 502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   hnand->Config.BlockNbr           = pDeviceConfig->BlockNbr;
 809              		.loc 1 502 51
 810 0022 3B68     		ldr	r3, [r7]
 811 0024 DA68     		ldr	r2, [r3, #12]
 812              		.loc 1 502 36
 813 0026 7B68     		ldr	r3, [r7, #4]
 814 0028 1A63     		str	r2, [r3, #48]
 503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   hnand->Config.PlaneSize          = pDeviceConfig->PlaneSize;
 815              		.loc 1 503 51
 816 002a 3B68     		ldr	r3, [r7]
 817 002c 5A69     		ldr	r2, [r3, #20]
 818              		.loc 1 503 36
 819 002e 7B68     		ldr	r3, [r7, #4]
 820 0030 9A63     		str	r2, [r3, #56]
 504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   hnand->Config.PlaneNbr           = pDeviceConfig->PlaneNbr;
 821              		.loc 1 504 51
 822 0032 3B68     		ldr	r3, [r7]
 823 0034 1A69     		ldr	r2, [r3, #16]
 824              		.loc 1 504 36
 825 0036 7B68     		ldr	r3, [r7, #4]
 826 0038 5A63     		str	r2, [r3, #52]
 505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   hnand->Config.ExtraCommandEnable = pDeviceConfig->ExtraCommandEnable;
 827              		.loc 1 505 51
 828 003a 3B68     		ldr	r3, [r7]
 829 003c 1A7E     		ldrb	r2, [r3, #24]	@ zero_extendqisi2
 830              		.loc 1 505 36
 831 003e 7B68     		ldr	r3, [r7, #4]
 832 0040 83F83C20 		strb	r2, [r3, #60]
 506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return HAL_OK;
 833              		.loc 1 507 10
 834 0044 0023     		movs	r3, #0
 508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 835              		.loc 1 508 1
 836 0046 1846     		mov	r0, r3
 837 0048 0C37     		adds	r7, r7, #12
 838              	.LCFI48:
 839              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cc0wCm8A.s 			page 41


 840 004a BD46     		mov	sp, r7
 841              	.LCFI49:
 842              		.cfi_def_cfa_register 13
 843              		@ sp needed
 844 004c 5DF8047B 		ldr	r7, [sp], #4
 845              	.LCFI50:
 846              		.cfi_restore 7
 847              		.cfi_def_cfa_offset 0
 848 0050 7047     		bx	lr
 849              		.cfi_endproc
 850              	.LFE339:
 852              		.section	.text.HAL_NAND_Read_Page_8b,"ax",%progbits
 853              		.align	1
 854              		.global	HAL_NAND_Read_Page_8b
 855              		.syntax unified
 856              		.thumb
 857              		.thumb_func
 858              		.fpu fpv5-d16
 860              	HAL_NAND_Read_Page_8b:
 861              	.LFB340:
 509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
 511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Read Page(s) from NAND memory block (8-bits addressing)
 512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
 515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pBuffer  pointer to destination read buffer
 516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  NumPageToRead  number of pages to read from block
 517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
 518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Read_Page_8b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress, u
 520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****                                         uint32_t NumPageToRead)
 521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 862              		.loc 1 521 1
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 48
 865              		@ frame_needed = 1, uses_anonymous_args = 0
 866 0000 80B5     		push	{r7, lr}
 867              	.LCFI51:
 868              		.cfi_def_cfa_offset 8
 869              		.cfi_offset 7, -8
 870              		.cfi_offset 14, -4
 871 0002 8CB0     		sub	sp, sp, #48
 872              	.LCFI52:
 873              		.cfi_def_cfa_offset 56
 874 0004 00AF     		add	r7, sp, #0
 875              	.LCFI53:
 876              		.cfi_def_cfa_register 7
 877 0006 F860     		str	r0, [r7, #12]
 878 0008 B960     		str	r1, [r7, #8]
 879 000a 7A60     		str	r2, [r7, #4]
 880 000c 3B60     		str	r3, [r7]
 522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t index;
 523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t tickstart;
 524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t deviceaddress;
 525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t numpagesread = 0U;
 881              		.loc 1 525 12
ARM GAS  /tmp/cc0wCm8A.s 			page 42


 882 000e 0023     		movs	r3, #0
 883 0010 BB62     		str	r3, [r7, #40]
 526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t nandaddress;
 527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t nbpages = NumPageToRead;
 884              		.loc 1 527 12
 885 0012 3B68     		ldr	r3, [r7]
 886 0014 3B62     		str	r3, [r7, #32]
 528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint8_t *buff = pBuffer;
 887              		.loc 1 528 12
 888 0016 7B68     		ldr	r3, [r7, #4]
 889 0018 FB61     		str	r3, [r7, #28]
 529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check the NAND controller state */
 531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_BUSY)
 890              		.loc 1 531 12
 891 001a FB68     		ldr	r3, [r7, #12]
 892 001c 93F82130 		ldrb	r3, [r3, #33]
 893 0020 DBB2     		uxtb	r3, r3
 894              		.loc 1 531 6
 895 0022 022B     		cmp	r3, #2
 896 0024 01D1     		bne	.L35
 532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_BUSY;
 897              		.loc 1 533 12
 898 0026 0223     		movs	r3, #2
 899 0028 40E1     		b	.L36
 900              	.L35:
 534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if (hnand->State == HAL_NAND_STATE_READY)
 901              		.loc 1 535 17
 902 002a FB68     		ldr	r3, [r7, #12]
 903 002c 93F82130 		ldrb	r3, [r3, #33]
 904 0030 DBB2     		uxtb	r3, r3
 905              		.loc 1 535 11
 906 0032 012B     		cmp	r3, #1
 907 0034 40F03981 		bne	.L37
 536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process Locked */
 538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_LOCK(hnand);
 908              		.loc 1 538 5
 909 0038 FB68     		ldr	r3, [r7, #12]
 910 003a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 911 003e 012B     		cmp	r3, #1
 912 0040 01D1     		bne	.L38
 913              		.loc 1 538 5 is_stmt 0 discriminator 1
 914 0042 0223     		movs	r3, #2
 915 0044 32E1     		b	.L36
 916              	.L38:
 917              		.loc 1 538 5 discriminator 2
 918 0046 FB68     		ldr	r3, [r7, #12]
 919 0048 0122     		movs	r2, #1
 920 004a 83F82020 		strb	r2, [r3, #32]
 539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
 541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_BUSY;
 921              		.loc 1 541 18 is_stmt 1 discriminator 2
 922 004e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc0wCm8A.s 			page 43


 923 0050 0222     		movs	r2, #2
 924 0052 83F82120 		strb	r2, [r3, #33]
 542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Identify the device address */
 544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     deviceaddress = NAND_DEVICE;
 925              		.loc 1 544 19 discriminator 2
 926 0056 4FF00043 		mov	r3, #-2147483648
 927 005a BB61     		str	r3, [r7, #24]
 545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* NAND raw address calculation */
 547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     nandaddress = ARRAY_ADDRESS(pAddress, hnand);
 928              		.loc 1 547 19 discriminator 2
 929 005c BB68     		ldr	r3, [r7, #8]
 930 005e 1B88     		ldrh	r3, [r3]
 931 0060 1946     		mov	r1, r3
 932 0062 BB68     		ldr	r3, [r7, #8]
 933 0064 9B88     		ldrh	r3, [r3, #4]
 934 0066 1A46     		mov	r2, r3
 935 0068 BB68     		ldr	r3, [r7, #8]
 936 006a 5B88     		ldrh	r3, [r3, #2]
 937 006c 1846     		mov	r0, r3
 938 006e FB68     		ldr	r3, [r7, #12]
 939 0070 9B6B     		ldr	r3, [r3, #56]
 940 0072 03FB00F3 		mul	r3, r3, r0
 941 0076 1344     		add	r3, r3, r2
 942 0078 FA68     		ldr	r2, [r7, #12]
 943 007a D26A     		ldr	r2, [r2, #44]
 944 007c 02FB03F3 		mul	r3, r2, r3
 945              		.loc 1 547 17 discriminator 2
 946 0080 0B44     		add	r3, r3, r1
 947 0082 7B62     		str	r3, [r7, #36]
 548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Page(s) read loop */
 550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     while ((nbpages != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.BlockNbr))
 948              		.loc 1 550 11 discriminator 2
 949 0084 FAE0     		b	.L39
 950              	.L50:
 551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Send read page command sequence */
 553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
 951              		.loc 1 553 25
 952 0086 BB69     		ldr	r3, [r7, #24]
 953 0088 43F48033 		orr	r3, r3, #65536
 954              		.loc 1 553 63
 955 008c 0022     		movs	r2, #0
 956 008e 1A70     		strb	r2, [r3]
 957              	.LBB344:
 958              	.LBB345:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 959              		.loc 2 946 3
 960              		.syntax unified
 961              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 962 0090 BFF34F8F 		dsb 0xF
 963              	@ 0 "" 2
 964              		.loc 2 947 1
 965              		.thumb
 966              		.syntax unified
ARM GAS  /tmp/cc0wCm8A.s 			page 44


 967 0094 00BF     		nop
 968              	.LBE345:
 969              	.LBE344:
 554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       __DSB();
 555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Cards with page size <= 512 bytes */
 557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       if ((hnand->Config.PageSize) <= 512U)
 970              		.loc 1 557 25
 971 0096 FB68     		ldr	r3, [r7, #12]
 972 0098 5B6A     		ldr	r3, [r3, #36]
 973              		.loc 1 557 10
 974 009a B3F5007F 		cmp	r3, #512
 975 009e 48D8     		bhi	.L40
 558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if (((hnand->Config.BlockSize) * (hnand->Config.BlockNbr)) <= 65535U)
 976              		.loc 1 559 28
 977 00a0 FB68     		ldr	r3, [r7, #12]
 978 00a2 DB6A     		ldr	r3, [r3, #44]
 979              		.loc 1 559 56
 980 00a4 FA68     		ldr	r2, [r7, #12]
 981 00a6 126B     		ldr	r2, [r2, #48]
 982              		.loc 1 559 40
 983 00a8 02FB03F3 		mul	r3, r2, r3
 984              		.loc 1 559 12
 985 00ac B3F5803F 		cmp	r3, #65536
 986 00b0 1AD2     		bcs	.L41
 560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 987              		.loc 1 561 29
 988 00b2 BB69     		ldr	r3, [r7, #24]
 989 00b4 43F40033 		orr	r3, r3, #131072
 990              		.loc 1 561 68
 991 00b8 0022     		movs	r2, #0
 992 00ba 1A70     		strb	r2, [r3]
 993              	.LBB346:
 994              	.LBB347:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 995              		.loc 2 946 3
 996              		.syntax unified
 997              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 998 00bc BFF34F8F 		dsb 0xF
 999              	@ 0 "" 2
 1000              		.loc 2 947 1
 1001              		.thumb
 1002              		.syntax unified
 1003 00c0 00BF     		nop
 1004              	.LBE347:
 1005              	.LBE346:
 562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1006              		.loc 1 563 29
 1007 00c2 BB69     		ldr	r3, [r7, #24]
 1008 00c4 43F40033 		orr	r3, r3, #131072
 1009              		.loc 1 563 70
 1010 00c8 7A6A     		ldr	r2, [r7, #36]
 1011 00ca D2B2     		uxtb	r2, r2
 1012              		.loc 1 563 68
ARM GAS  /tmp/cc0wCm8A.s 			page 45


 1013 00cc 1A70     		strb	r2, [r3]
 1014              	.LBB348:
 1015              	.LBB349:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1016              		.loc 2 946 3
 1017              		.syntax unified
 1018              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1019 00ce BFF34F8F 		dsb 0xF
 1020              	@ 0 "" 2
 1021              		.loc 2 947 1
 1022              		.thumb
 1023              		.syntax unified
 1024 00d2 00BF     		nop
 1025              	.LBE349:
 1026              	.LBE348:
 564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1027              		.loc 1 565 70
 1028 00d4 7B6A     		ldr	r3, [r7, #36]
 1029 00d6 1A0A     		lsrs	r2, r3, #8
 1030              		.loc 1 565 29
 1031 00d8 BB69     		ldr	r3, [r7, #24]
 1032 00da 43F40033 		orr	r3, r3, #131072
 1033              		.loc 1 565 70
 1034 00de D2B2     		uxtb	r2, r2
 1035              		.loc 1 565 68
 1036 00e0 1A70     		strb	r2, [r3]
 1037              	.LBB350:
 1038              	.LBB351:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1039              		.loc 2 946 3
 1040              		.syntax unified
 1041              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1042 00e2 BFF34F8F 		dsb 0xF
 1043              	@ 0 "" 2
 1044              		.loc 2 947 1
 1045              		.thumb
 1046              		.syntax unified
 1047 00e6 7DE0     		b	.L42
 1048              	.L41:
 1049              	.LBE351:
 1050              	.LBE350:
 566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 1051              		.loc 1 570 29
 1052 00e8 BB69     		ldr	r3, [r7, #24]
 1053 00ea 43F40033 		orr	r3, r3, #131072
 1054              		.loc 1 570 68
 1055 00ee 0022     		movs	r2, #0
 1056 00f0 1A70     		strb	r2, [r3]
 1057              	.LBB352:
 1058              	.LBB353:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1059              		.loc 2 946 3
ARM GAS  /tmp/cc0wCm8A.s 			page 46


 1060              		.syntax unified
 1061              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1062 00f2 BFF34F8F 		dsb 0xF
 1063              	@ 0 "" 2
 1064              		.loc 2 947 1
 1065              		.thumb
 1066              		.syntax unified
 1067 00f6 00BF     		nop
 1068              	.LBE353:
 1069              	.LBE352:
 571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1070              		.loc 1 572 29
 1071 00f8 BB69     		ldr	r3, [r7, #24]
 1072 00fa 43F40033 		orr	r3, r3, #131072
 1073              		.loc 1 572 70
 1074 00fe 7A6A     		ldr	r2, [r7, #36]
 1075 0100 D2B2     		uxtb	r2, r2
 1076              		.loc 1 572 68
 1077 0102 1A70     		strb	r2, [r3]
 1078              	.LBB354:
 1079              	.LBB355:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1080              		.loc 2 946 3
 1081              		.syntax unified
 1082              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1083 0104 BFF34F8F 		dsb 0xF
 1084              	@ 0 "" 2
 1085              		.loc 2 947 1
 1086              		.thumb
 1087              		.syntax unified
 1088 0108 00BF     		nop
 1089              	.LBE355:
 1090              	.LBE354:
 573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1091              		.loc 1 574 70
 1092 010a 7B6A     		ldr	r3, [r7, #36]
 1093 010c 1A0A     		lsrs	r2, r3, #8
 1094              		.loc 1 574 29
 1095 010e BB69     		ldr	r3, [r7, #24]
 1096 0110 43F40033 		orr	r3, r3, #131072
 1097              		.loc 1 574 70
 1098 0114 D2B2     		uxtb	r2, r2
 1099              		.loc 1 574 68
 1100 0116 1A70     		strb	r2, [r3]
 1101              	.LBB356:
 1102              	.LBB357:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1103              		.loc 2 946 3
 1104              		.syntax unified
 1105              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1106 0118 BFF34F8F 		dsb 0xF
 1107              	@ 0 "" 2
 1108              		.loc 2 947 1
 1109              		.thumb
 1110              		.syntax unified
ARM GAS  /tmp/cc0wCm8A.s 			page 47


 1111 011c 00BF     		nop
 1112              	.LBE357:
 1113              	.LBE356:
 575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1114              		.loc 1 576 70
 1115 011e 7B6A     		ldr	r3, [r7, #36]
 1116 0120 1A0C     		lsrs	r2, r3, #16
 1117              		.loc 1 576 29
 1118 0122 BB69     		ldr	r3, [r7, #24]
 1119 0124 43F40033 		orr	r3, r3, #131072
 1120              		.loc 1 576 70
 1121 0128 D2B2     		uxtb	r2, r2
 1122              		.loc 1 576 68
 1123 012a 1A70     		strb	r2, [r3]
 1124              	.LBB358:
 1125              	.LBB359:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1126              		.loc 2 946 3
 1127              		.syntax unified
 1128              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1129 012c BFF34F8F 		dsb 0xF
 1130              	@ 0 "" 2
 1131              		.loc 2 947 1
 1132              		.thumb
 1133              		.syntax unified
 1134 0130 58E0     		b	.L42
 1135              	.L40:
 1136              	.LBE359:
 1137              	.LBE358:
 577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
 579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
 580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       else /* (hnand->Config.PageSize) > 512 */
 581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if (((hnand->Config.BlockSize) * (hnand->Config.BlockNbr)) <= 65535U)
 1138              		.loc 1 582 28
 1139 0132 FB68     		ldr	r3, [r7, #12]
 1140 0134 DB6A     		ldr	r3, [r3, #44]
 1141              		.loc 1 582 56
 1142 0136 FA68     		ldr	r2, [r7, #12]
 1143 0138 126B     		ldr	r2, [r2, #48]
 1144              		.loc 1 582 40
 1145 013a 02FB03F3 		mul	r3, r2, r3
 1146              		.loc 1 582 12
 1147 013e B3F5803F 		cmp	r3, #65536
 1148 0142 22D2     		bcs	.L43
 583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 1149              		.loc 1 584 29
 1150 0144 BB69     		ldr	r3, [r7, #24]
 1151 0146 43F40033 		orr	r3, r3, #131072
 1152              		.loc 1 584 68
 1153 014a 0022     		movs	r2, #0
 1154 014c 1A70     		strb	r2, [r3]
 1155              	.LBB360:
 1156              	.LBB361:
ARM GAS  /tmp/cc0wCm8A.s 			page 48


 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1157              		.loc 2 946 3
 1158              		.syntax unified
 1159              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1160 014e BFF34F8F 		dsb 0xF
 1161              	@ 0 "" 2
 1162              		.loc 2 947 1
 1163              		.thumb
 1164              		.syntax unified
 1165 0152 00BF     		nop
 1166              	.LBE361:
 1167              	.LBE360:
 585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 1168              		.loc 1 586 29
 1169 0154 BB69     		ldr	r3, [r7, #24]
 1170 0156 43F40033 		orr	r3, r3, #131072
 1171              		.loc 1 586 68
 1172 015a 0022     		movs	r2, #0
 1173 015c 1A70     		strb	r2, [r3]
 1174              	.LBB362:
 1175              	.LBB363:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1176              		.loc 2 946 3
 1177              		.syntax unified
 1178              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1179 015e BFF34F8F 		dsb 0xF
 1180              	@ 0 "" 2
 1181              		.loc 2 947 1
 1182              		.thumb
 1183              		.syntax unified
 1184 0162 00BF     		nop
 1185              	.LBE363:
 1186              	.LBE362:
 587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1187              		.loc 1 588 29
 1188 0164 BB69     		ldr	r3, [r7, #24]
 1189 0166 43F40033 		orr	r3, r3, #131072
 1190              		.loc 1 588 70
 1191 016a 7A6A     		ldr	r2, [r7, #36]
 1192 016c D2B2     		uxtb	r2, r2
 1193              		.loc 1 588 68
 1194 016e 1A70     		strb	r2, [r3]
 1195              	.LBB364:
 1196              	.LBB365:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1197              		.loc 2 946 3
 1198              		.syntax unified
 1199              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1200 0170 BFF34F8F 		dsb 0xF
 1201              	@ 0 "" 2
 1202              		.loc 2 947 1
 1203              		.thumb
 1204              		.syntax unified
 1205 0174 00BF     		nop
 1206              	.LBE365:
ARM GAS  /tmp/cc0wCm8A.s 			page 49


 1207              	.LBE364:
 589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1208              		.loc 1 590 70
 1209 0176 7B6A     		ldr	r3, [r7, #36]
 1210 0178 1A0A     		lsrs	r2, r3, #8
 1211              		.loc 1 590 29
 1212 017a BB69     		ldr	r3, [r7, #24]
 1213 017c 43F40033 		orr	r3, r3, #131072
 1214              		.loc 1 590 70
 1215 0180 D2B2     		uxtb	r2, r2
 1216              		.loc 1 590 68
 1217 0182 1A70     		strb	r2, [r3]
 1218              	.LBB366:
 1219              	.LBB367:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1220              		.loc 2 946 3
 1221              		.syntax unified
 1222              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1223 0184 BFF34F8F 		dsb 0xF
 1224              	@ 0 "" 2
 1225              		.loc 2 947 1
 1226              		.thumb
 1227              		.syntax unified
 1228 0188 2CE0     		b	.L42
 1229              	.L43:
 1230              	.LBE367:
 1231              	.LBE366:
 591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
 593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 1232              		.loc 1 595 29
 1233 018a BB69     		ldr	r3, [r7, #24]
 1234 018c 43F40033 		orr	r3, r3, #131072
 1235              		.loc 1 595 68
 1236 0190 0022     		movs	r2, #0
 1237 0192 1A70     		strb	r2, [r3]
 1238              	.LBB368:
 1239              	.LBB369:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1240              		.loc 2 946 3
 1241              		.syntax unified
 1242              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1243 0194 BFF34F8F 		dsb 0xF
 1244              	@ 0 "" 2
 1245              		.loc 2 947 1
 1246              		.thumb
 1247              		.syntax unified
 1248 0198 00BF     		nop
 1249              	.LBE369:
 1250              	.LBE368:
 596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 1251              		.loc 1 597 29
 1252 019a BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/cc0wCm8A.s 			page 50


 1253 019c 43F40033 		orr	r3, r3, #131072
 1254              		.loc 1 597 68
 1255 01a0 0022     		movs	r2, #0
 1256 01a2 1A70     		strb	r2, [r3]
 1257              	.LBB370:
 1258              	.LBB371:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1259              		.loc 2 946 3
 1260              		.syntax unified
 1261              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1262 01a4 BFF34F8F 		dsb 0xF
 1263              	@ 0 "" 2
 1264              		.loc 2 947 1
 1265              		.thumb
 1266              		.syntax unified
 1267 01a8 00BF     		nop
 1268              	.LBE371:
 1269              	.LBE370:
 598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1270              		.loc 1 599 29
 1271 01aa BB69     		ldr	r3, [r7, #24]
 1272 01ac 43F40033 		orr	r3, r3, #131072
 1273              		.loc 1 599 70
 1274 01b0 7A6A     		ldr	r2, [r7, #36]
 1275 01b2 D2B2     		uxtb	r2, r2
 1276              		.loc 1 599 68
 1277 01b4 1A70     		strb	r2, [r3]
 1278              	.LBB372:
 1279              	.LBB373:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1280              		.loc 2 946 3
 1281              		.syntax unified
 1282              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1283 01b6 BFF34F8F 		dsb 0xF
 1284              	@ 0 "" 2
 1285              		.loc 2 947 1
 1286              		.thumb
 1287              		.syntax unified
 1288 01ba 00BF     		nop
 1289              	.LBE373:
 1290              	.LBE372:
 600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1291              		.loc 1 601 70
 1292 01bc 7B6A     		ldr	r3, [r7, #36]
 1293 01be 1A0A     		lsrs	r2, r3, #8
 1294              		.loc 1 601 29
 1295 01c0 BB69     		ldr	r3, [r7, #24]
 1296 01c2 43F40033 		orr	r3, r3, #131072
 1297              		.loc 1 601 70
 1298 01c6 D2B2     		uxtb	r2, r2
 1299              		.loc 1 601 68
 1300 01c8 1A70     		strb	r2, [r3]
 1301              	.LBB374:
 1302              	.LBB375:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc0wCm8A.s 			page 51


 1303              		.loc 2 946 3
 1304              		.syntax unified
 1305              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1306 01ca BFF34F8F 		dsb 0xF
 1307              	@ 0 "" 2
 1308              		.loc 2 947 1
 1309              		.thumb
 1310              		.syntax unified
 1311 01ce 00BF     		nop
 1312              	.LBE375:
 1313              	.LBE374:
 602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1314              		.loc 1 603 70
 1315 01d0 7B6A     		ldr	r3, [r7, #36]
 1316 01d2 1A0C     		lsrs	r2, r3, #16
 1317              		.loc 1 603 29
 1318 01d4 BB69     		ldr	r3, [r7, #24]
 1319 01d6 43F40033 		orr	r3, r3, #131072
 1320              		.loc 1 603 70
 1321 01da D2B2     		uxtb	r2, r2
 1322              		.loc 1 603 68
 1323 01dc 1A70     		strb	r2, [r3]
 1324              	.LBB376:
 1325              	.LBB377:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1326              		.loc 2 946 3
 1327              		.syntax unified
 1328              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1329 01de BFF34F8F 		dsb 0xF
 1330              	@ 0 "" 2
 1331              		.loc 2 947 1
 1332              		.thumb
 1333              		.syntax unified
 1334 01e2 00BF     		nop
 1335              	.L42:
 1336              	.LBE377:
 1337              	.LBE376:
 604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
 606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
 607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA))  = NAND_CMD_AREA_TRUE1;
 1338              		.loc 1 608 25
 1339 01e4 BB69     		ldr	r3, [r7, #24]
 1340 01e6 43F48033 		orr	r3, r3, #65536
 1341              		.loc 1 608 64
 1342 01ea 3022     		movs	r2, #48
 1343 01ec 1A70     		strb	r2, [r3]
 1344              	.LBB378:
 1345              	.LBB379:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1346              		.loc 2 946 3
 1347              		.syntax unified
 1348              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1349 01ee BFF34F8F 		dsb 0xF
 1350              	@ 0 "" 2
ARM GAS  /tmp/cc0wCm8A.s 			page 52


 1351              		.loc 2 947 1
 1352              		.thumb
 1353              		.syntax unified
 1354 01f2 00BF     		nop
 1355              	.LBE379:
 1356              	.LBE378:
 609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       __DSB();
 610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       if (hnand->Config.ExtraCommandEnable == ENABLE)
 1357              		.loc 1 612 24
 1358 01f4 FB68     		ldr	r3, [r7, #12]
 1359 01f6 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1360              		.loc 1 612 10
 1361 01fa 012B     		cmp	r3, #1
 1362 01fc 23D1     		bne	.L44
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Get tick */
 615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         tickstart = HAL_GetTick();
 1363              		.loc 1 615 21
 1364 01fe FFF7FEFF 		bl	HAL_GetTick
 1365 0202 7861     		str	r0, [r7, #20]
 616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Read status until NAND is ready */
 618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         while (HAL_NAND_Read_Status(hnand) != NAND_READY)
 1366              		.loc 1 618 15
 1367 0204 11E0     		b	.L45
 1368              	.L46:
 619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           if ((HAL_GetTick() - tickstart) > NAND_WRITE_TIMEOUT)
 1369              		.loc 1 620 16
 1370 0206 FFF7FEFF 		bl	HAL_GetTick
 1371 020a 0246     		mov	r2, r0
 1372              		.loc 1 620 30
 1373 020c 7B69     		ldr	r3, [r7, #20]
 1374 020e D31A     		subs	r3, r2, r3
 1375              		.loc 1 620 14
 1376 0210 B3F1807F 		cmp	r3, #16777216
 1377 0214 09D9     		bls	.L45
 621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           {
 622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             /* Update the NAND controller state */
 623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             hnand->State = HAL_NAND_STATE_ERROR;
 1378              		.loc 1 623 26
 1379 0216 FB68     		ldr	r3, [r7, #12]
 1380 0218 0322     		movs	r2, #3
 1381 021a 83F82120 		strb	r2, [r3, #33]
 624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             /* Process unlocked */
 626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             __HAL_UNLOCK(hnand);
 1382              		.loc 1 626 13
 1383 021e FB68     		ldr	r3, [r7, #12]
 1384 0220 0022     		movs	r2, #0
 1385 0222 83F82020 		strb	r2, [r3, #32]
 627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             return HAL_TIMEOUT;
 1386              		.loc 1 628 20
 1387 0226 0323     		movs	r3, #3
ARM GAS  /tmp/cc0wCm8A.s 			page 53


 1388 0228 40E0     		b	.L36
 1389              	.L45:
 618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 1390              		.loc 1 618 16
 1391 022a F868     		ldr	r0, [r7, #12]
 1392 022c FFF7FEFF 		bl	HAL_NAND_Read_Status
 1393 0230 0346     		mov	r3, r0
 618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 1394              		.loc 1 618 15
 1395 0232 402B     		cmp	r3, #64
 1396 0234 E7D1     		bne	.L46
 629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           }
 630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
 631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Go back to read mode */
 633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = ((uint8_t)0x00);
 1397              		.loc 1 633 27
 1398 0236 BB69     		ldr	r3, [r7, #24]
 1399 0238 43F48033 		orr	r3, r3, #65536
 1400              		.loc 1 633 65
 1401 023c 0022     		movs	r2, #0
 1402 023e 1A70     		strb	r2, [r3]
 1403              	.LBB380:
 1404              	.LBB381:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1405              		.loc 2 946 3
 1406              		.syntax unified
 1407              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1408 0240 BFF34F8F 		dsb 0xF
 1409              	@ 0 "" 2
 1410              		.loc 2 947 1
 1411              		.thumb
 1412              		.syntax unified
 1413 0244 00BF     		nop
 1414              	.L44:
 1415              	.LBE381:
 1416              	.LBE380:
 634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
 635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
 636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Get Data into Buffer */
 638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       for (index = 0U; index < hnand->Config.PageSize; index++)
 1417              		.loc 1 638 18
 1418 0246 0023     		movs	r3, #0
 1419 0248 FB62     		str	r3, [r7, #44]
 1420              		.loc 1 638 7
 1421 024a 09E0     		b	.L47
 1422              	.L48:
 639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *buff = *(uint8_t *)deviceaddress;
 1423              		.loc 1 640 18 discriminator 3
 1424 024c BB69     		ldr	r3, [r7, #24]
 1425              		.loc 1 640 17 discriminator 3
 1426 024e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1427              		.loc 1 640 15 discriminator 3
 1428 0250 FB69     		ldr	r3, [r7, #28]
 1429 0252 1A70     		strb	r2, [r3]
ARM GAS  /tmp/cc0wCm8A.s 			page 54


 641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         buff++;
 1430              		.loc 1 641 13 discriminator 3
 1431 0254 FB69     		ldr	r3, [r7, #28]
 1432 0256 0133     		adds	r3, r3, #1
 1433 0258 FB61     		str	r3, [r7, #28]
 638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 1434              		.loc 1 638 61 discriminator 3
 1435 025a FB6A     		ldr	r3, [r7, #44]
 1436 025c 0133     		adds	r3, r3, #1
 1437 025e FB62     		str	r3, [r7, #44]
 1438              	.L47:
 638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 1439              		.loc 1 638 45 discriminator 1
 1440 0260 FB68     		ldr	r3, [r7, #12]
 1441 0262 5B6A     		ldr	r3, [r3, #36]
 638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 1442              		.loc 1 638 7 discriminator 1
 1443 0264 FA6A     		ldr	r2, [r7, #44]
 1444 0266 9A42     		cmp	r2, r3
 1445 0268 F0D3     		bcc	.L48
 642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
 643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Increment read pages number */
 645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       numpagesread++;
 1446              		.loc 1 645 19
 1447 026a BB6A     		ldr	r3, [r7, #40]
 1448 026c 0133     		adds	r3, r3, #1
 1449 026e BB62     		str	r3, [r7, #40]
 646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Decrement pages to read */
 648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       nbpages--;
 1450              		.loc 1 648 14
 1451 0270 3B6A     		ldr	r3, [r7, #32]
 1452 0272 013B     		subs	r3, r3, #1
 1453 0274 3B62     		str	r3, [r7, #32]
 649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Increment the NAND address */
 651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       nandaddress = (uint32_t)(nandaddress + 1U);
 1454              		.loc 1 651 19
 1455 0276 7B6A     		ldr	r3, [r7, #36]
 1456 0278 0133     		adds	r3, r3, #1
 1457 027a 7B62     		str	r3, [r7, #36]
 1458              	.L39:
 550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 1459              		.loc 1 550 11
 1460 027c 3B6A     		ldr	r3, [r7, #32]
 1461 027e 002B     		cmp	r3, #0
 1462 0280 09D0     		beq	.L49
 550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 1463              		.loc 1 550 61 discriminator 1
 1464 0282 FB68     		ldr	r3, [r7, #12]
 1465 0284 DB6A     		ldr	r3, [r3, #44]
 550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 1466              		.loc 1 550 89 discriminator 1
 1467 0286 FA68     		ldr	r2, [r7, #12]
 1468 0288 126B     		ldr	r2, [r2, #48]
 550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
ARM GAS  /tmp/cc0wCm8A.s 			page 55


 1469              		.loc 1 550 73 discriminator 1
 1470 028a 02FB03F3 		mul	r3, r2, r3
 550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 1471              		.loc 1 550 28 discriminator 1
 1472 028e 7A6A     		ldr	r2, [r7, #36]
 1473 0290 9A42     		cmp	r2, r3
 1474 0292 FFF4F8AE 		bcc	.L50
 1475              	.L49:
 652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     }
 653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
 655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_READY;
 1476              		.loc 1 655 18
 1477 0296 FB68     		ldr	r3, [r7, #12]
 1478 0298 0122     		movs	r2, #1
 1479 029a 83F82120 		strb	r2, [r3, #33]
 656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process unlocked */
 658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_UNLOCK(hnand);
 1480              		.loc 1 658 5
 1481 029e FB68     		ldr	r3, [r7, #12]
 1482 02a0 0022     		movs	r2, #0
 1483 02a2 83F82020 		strb	r2, [r3, #32]
 659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
 661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_ERROR;
 663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return HAL_OK;
 1484              		.loc 1 665 10
 1485 02a6 0023     		movs	r3, #0
 1486 02a8 00E0     		b	.L36
 1487              	.L37:
 662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 1488              		.loc 1 662 12
 1489 02aa 0123     		movs	r3, #1
 1490              	.L36:
 666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 1491              		.loc 1 666 1
 1492 02ac 1846     		mov	r0, r3
 1493 02ae 3037     		adds	r7, r7, #48
 1494              	.LCFI54:
 1495              		.cfi_def_cfa_offset 8
 1496 02b0 BD46     		mov	sp, r7
 1497              	.LCFI55:
 1498              		.cfi_def_cfa_register 13
 1499              		@ sp needed
 1500 02b2 80BD     		pop	{r7, pc}
 1501              		.cfi_endproc
 1502              	.LFE340:
 1504              		.section	.text.HAL_NAND_Read_Page_16b,"ax",%progbits
 1505              		.align	1
 1506              		.global	HAL_NAND_Read_Page_16b
 1507              		.syntax unified
 1508              		.thumb
 1509              		.thumb_func
ARM GAS  /tmp/cc0wCm8A.s 			page 56


 1510              		.fpu fpv5-d16
 1512              	HAL_NAND_Read_Page_16b:
 1513              	.LFB341:
 667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
 669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Read Page(s) from NAND memory block (16-bits addressing)
 670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
 672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
 673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pBuffer  pointer to destination read buffer. pBuffer should be 16bits aligned
 674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  NumPageToRead  number of pages to read from block
 675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
 676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Read_Page_16b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress, 
 678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****                                          uint32_t NumPageToRead)
 679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 1514              		.loc 1 679 1
 1515              		.cfi_startproc
 1516              		@ args = 0, pretend = 0, frame = 48
 1517              		@ frame_needed = 1, uses_anonymous_args = 0
 1518 0000 80B5     		push	{r7, lr}
 1519              	.LCFI56:
 1520              		.cfi_def_cfa_offset 8
 1521              		.cfi_offset 7, -8
 1522              		.cfi_offset 14, -4
 1523 0002 8CB0     		sub	sp, sp, #48
 1524              	.LCFI57:
 1525              		.cfi_def_cfa_offset 56
 1526 0004 00AF     		add	r7, sp, #0
 1527              	.LCFI58:
 1528              		.cfi_def_cfa_register 7
 1529 0006 F860     		str	r0, [r7, #12]
 1530 0008 B960     		str	r1, [r7, #8]
 1531 000a 7A60     		str	r2, [r7, #4]
 1532 000c 3B60     		str	r3, [r7]
 680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t index;
 681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t tickstart;
 682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t deviceaddress;
 683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t numpagesread = 0U;
 1533              		.loc 1 683 12
 1534 000e 0023     		movs	r3, #0
 1535 0010 BB62     		str	r3, [r7, #40]
 684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t nandaddress;
 685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t nbpages = NumPageToRead;
 1536              		.loc 1 685 12
 1537 0012 3B68     		ldr	r3, [r7]
 1538 0014 3B62     		str	r3, [r7, #32]
 686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint16_t *buff = pBuffer;
 1539              		.loc 1 686 13
 1540 0016 7B68     		ldr	r3, [r7, #4]
 1541 0018 FB61     		str	r3, [r7, #28]
 687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check the NAND controller state */
 689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_BUSY)
 1542              		.loc 1 689 12
 1543 001a FB68     		ldr	r3, [r7, #12]
 1544 001c 93F82130 		ldrb	r3, [r3, #33]
ARM GAS  /tmp/cc0wCm8A.s 			page 57


 1545 0020 DBB2     		uxtb	r3, r3
 1546              		.loc 1 689 6
 1547 0022 022B     		cmp	r3, #2
 1548 0024 01D1     		bne	.L53
 690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_BUSY;
 1549              		.loc 1 691 12
 1550 0026 0223     		movs	r3, #2
 1551 0028 49E1     		b	.L54
 1552              	.L53:
 692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if (hnand->State == HAL_NAND_STATE_READY)
 1553              		.loc 1 693 17
 1554 002a FB68     		ldr	r3, [r7, #12]
 1555 002c 93F82130 		ldrb	r3, [r3, #33]
 1556 0030 DBB2     		uxtb	r3, r3
 1557              		.loc 1 693 11
 1558 0032 012B     		cmp	r3, #1
 1559 0034 40F04281 		bne	.L55
 694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process Locked */
 696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_LOCK(hnand);
 1560              		.loc 1 696 5
 1561 0038 FB68     		ldr	r3, [r7, #12]
 1562 003a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1563 003e 012B     		cmp	r3, #1
 1564 0040 01D1     		bne	.L56
 1565              		.loc 1 696 5 is_stmt 0 discriminator 1
 1566 0042 0223     		movs	r3, #2
 1567 0044 3BE1     		b	.L54
 1568              	.L56:
 1569              		.loc 1 696 5 discriminator 2
 1570 0046 FB68     		ldr	r3, [r7, #12]
 1571 0048 0122     		movs	r2, #1
 1572 004a 83F82020 		strb	r2, [r3, #32]
 697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
 699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_BUSY;
 1573              		.loc 1 699 18 is_stmt 1 discriminator 2
 1574 004e FB68     		ldr	r3, [r7, #12]
 1575 0050 0222     		movs	r2, #2
 1576 0052 83F82120 		strb	r2, [r3, #33]
 700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Identify the device address */
 702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     deviceaddress = NAND_DEVICE;
 1577              		.loc 1 702 19 discriminator 2
 1578 0056 4FF00043 		mov	r3, #-2147483648
 1579 005a BB61     		str	r3, [r7, #24]
 703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* NAND raw address calculation */
 705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     nandaddress = ARRAY_ADDRESS(pAddress, hnand);
 1580              		.loc 1 705 19 discriminator 2
 1581 005c BB68     		ldr	r3, [r7, #8]
 1582 005e 1B88     		ldrh	r3, [r3]
 1583 0060 1946     		mov	r1, r3
 1584 0062 BB68     		ldr	r3, [r7, #8]
 1585 0064 9B88     		ldrh	r3, [r3, #4]
ARM GAS  /tmp/cc0wCm8A.s 			page 58


 1586 0066 1A46     		mov	r2, r3
 1587 0068 BB68     		ldr	r3, [r7, #8]
 1588 006a 5B88     		ldrh	r3, [r3, #2]
 1589 006c 1846     		mov	r0, r3
 1590 006e FB68     		ldr	r3, [r7, #12]
 1591 0070 9B6B     		ldr	r3, [r3, #56]
 1592 0072 03FB00F3 		mul	r3, r3, r0
 1593 0076 1344     		add	r3, r3, r2
 1594 0078 FA68     		ldr	r2, [r7, #12]
 1595 007a D26A     		ldr	r2, [r2, #44]
 1596 007c 02FB03F3 		mul	r3, r2, r3
 1597              		.loc 1 705 17 discriminator 2
 1598 0080 0B44     		add	r3, r3, r1
 1599 0082 7B62     		str	r3, [r7, #36]
 706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Page(s) read loop */
 708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     while ((nbpages != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.BlockNbr))
 1600              		.loc 1 708 11 discriminator 2
 1601 0084 03E1     		b	.L57
 1602              	.L69:
 709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Send read page command sequence */
 711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
 1603              		.loc 1 711 25
 1604 0086 BB69     		ldr	r3, [r7, #24]
 1605 0088 43F48033 		orr	r3, r3, #65536
 1606              		.loc 1 711 63
 1607 008c 0022     		movs	r2, #0
 1608 008e 1A70     		strb	r2, [r3]
 1609              	.LBB382:
 1610              	.LBB383:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1611              		.loc 2 946 3
 1612              		.syntax unified
 1613              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1614 0090 BFF34F8F 		dsb 0xF
 1615              	@ 0 "" 2
 1616              		.loc 2 947 1
 1617              		.thumb
 1618              		.syntax unified
 1619 0094 00BF     		nop
 1620              	.LBE383:
 1621              	.LBE382:
 712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       __DSB();
 713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Cards with page size <= 512 bytes */
 715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       if ((hnand->Config.PageSize) <= 512U)
 1622              		.loc 1 715 25
 1623 0096 FB68     		ldr	r3, [r7, #12]
 1624 0098 5B6A     		ldr	r3, [r3, #36]
 1625              		.loc 1 715 10
 1626 009a B3F5007F 		cmp	r3, #512
 1627 009e 48D8     		bhi	.L58
 716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if (((hnand->Config.BlockSize) * (hnand->Config.BlockNbr)) <= 65535U)
 1628              		.loc 1 717 28
 1629 00a0 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc0wCm8A.s 			page 59


 1630 00a2 DB6A     		ldr	r3, [r3, #44]
 1631              		.loc 1 717 56
 1632 00a4 FA68     		ldr	r2, [r7, #12]
 1633 00a6 126B     		ldr	r2, [r2, #48]
 1634              		.loc 1 717 40
 1635 00a8 02FB03F3 		mul	r3, r2, r3
 1636              		.loc 1 717 12
 1637 00ac B3F5803F 		cmp	r3, #65536
 1638 00b0 1AD2     		bcs	.L59
 718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 1639              		.loc 1 719 29
 1640 00b2 BB69     		ldr	r3, [r7, #24]
 1641 00b4 43F40033 		orr	r3, r3, #131072
 1642              		.loc 1 719 68
 1643 00b8 0022     		movs	r2, #0
 1644 00ba 1A70     		strb	r2, [r3]
 1645              	.LBB384:
 1646              	.LBB385:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1647              		.loc 2 946 3
 1648              		.syntax unified
 1649              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1650 00bc BFF34F8F 		dsb 0xF
 1651              	@ 0 "" 2
 1652              		.loc 2 947 1
 1653              		.thumb
 1654              		.syntax unified
 1655 00c0 00BF     		nop
 1656              	.LBE385:
 1657              	.LBE384:
 720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1658              		.loc 1 721 29
 1659 00c2 BB69     		ldr	r3, [r7, #24]
 1660 00c4 43F40033 		orr	r3, r3, #131072
 1661              		.loc 1 721 70
 1662 00c8 7A6A     		ldr	r2, [r7, #36]
 1663 00ca D2B2     		uxtb	r2, r2
 1664              		.loc 1 721 68
 1665 00cc 1A70     		strb	r2, [r3]
 1666              	.LBB386:
 1667              	.LBB387:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1668              		.loc 2 946 3
 1669              		.syntax unified
 1670              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1671 00ce BFF34F8F 		dsb 0xF
 1672              	@ 0 "" 2
 1673              		.loc 2 947 1
 1674              		.thumb
 1675              		.syntax unified
 1676 00d2 00BF     		nop
 1677              	.LBE387:
 1678              	.LBE386:
 722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
ARM GAS  /tmp/cc0wCm8A.s 			page 60


 1679              		.loc 1 723 70
 1680 00d4 7B6A     		ldr	r3, [r7, #36]
 1681 00d6 1A0A     		lsrs	r2, r3, #8
 1682              		.loc 1 723 29
 1683 00d8 BB69     		ldr	r3, [r7, #24]
 1684 00da 43F40033 		orr	r3, r3, #131072
 1685              		.loc 1 723 70
 1686 00de D2B2     		uxtb	r2, r2
 1687              		.loc 1 723 68
 1688 00e0 1A70     		strb	r2, [r3]
 1689              	.LBB388:
 1690              	.LBB389:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1691              		.loc 2 946 3
 1692              		.syntax unified
 1693              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1694 00e2 BFF34F8F 		dsb 0xF
 1695              	@ 0 "" 2
 1696              		.loc 2 947 1
 1697              		.thumb
 1698              		.syntax unified
 1699 00e6 7DE0     		b	.L60
 1700              	.L59:
 1701              	.LBE389:
 1702              	.LBE388:
 724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
 726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 1703              		.loc 1 728 29
 1704 00e8 BB69     		ldr	r3, [r7, #24]
 1705 00ea 43F40033 		orr	r3, r3, #131072
 1706              		.loc 1 728 68
 1707 00ee 0022     		movs	r2, #0
 1708 00f0 1A70     		strb	r2, [r3]
 1709              	.LBB390:
 1710              	.LBB391:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1711              		.loc 2 946 3
 1712              		.syntax unified
 1713              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1714 00f2 BFF34F8F 		dsb 0xF
 1715              	@ 0 "" 2
 1716              		.loc 2 947 1
 1717              		.thumb
 1718              		.syntax unified
 1719 00f6 00BF     		nop
 1720              	.LBE391:
 1721              	.LBE390:
 729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1722              		.loc 1 730 29
 1723 00f8 BB69     		ldr	r3, [r7, #24]
 1724 00fa 43F40033 		orr	r3, r3, #131072
 1725              		.loc 1 730 70
 1726 00fe 7A6A     		ldr	r2, [r7, #36]
ARM GAS  /tmp/cc0wCm8A.s 			page 61


 1727 0100 D2B2     		uxtb	r2, r2
 1728              		.loc 1 730 68
 1729 0102 1A70     		strb	r2, [r3]
 1730              	.LBB392:
 1731              	.LBB393:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1732              		.loc 2 946 3
 1733              		.syntax unified
 1734              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1735 0104 BFF34F8F 		dsb 0xF
 1736              	@ 0 "" 2
 1737              		.loc 2 947 1
 1738              		.thumb
 1739              		.syntax unified
 1740 0108 00BF     		nop
 1741              	.LBE393:
 1742              	.LBE392:
 731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1743              		.loc 1 732 70
 1744 010a 7B6A     		ldr	r3, [r7, #36]
 1745 010c 1A0A     		lsrs	r2, r3, #8
 1746              		.loc 1 732 29
 1747 010e BB69     		ldr	r3, [r7, #24]
 1748 0110 43F40033 		orr	r3, r3, #131072
 1749              		.loc 1 732 70
 1750 0114 D2B2     		uxtb	r2, r2
 1751              		.loc 1 732 68
 1752 0116 1A70     		strb	r2, [r3]
 1753              	.LBB394:
 1754              	.LBB395:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1755              		.loc 2 946 3
 1756              		.syntax unified
 1757              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1758 0118 BFF34F8F 		dsb 0xF
 1759              	@ 0 "" 2
 1760              		.loc 2 947 1
 1761              		.thumb
 1762              		.syntax unified
 1763 011c 00BF     		nop
 1764              	.LBE395:
 1765              	.LBE394:
 733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1766              		.loc 1 734 70
 1767 011e 7B6A     		ldr	r3, [r7, #36]
 1768 0120 1A0C     		lsrs	r2, r3, #16
 1769              		.loc 1 734 29
 1770 0122 BB69     		ldr	r3, [r7, #24]
 1771 0124 43F40033 		orr	r3, r3, #131072
 1772              		.loc 1 734 70
 1773 0128 D2B2     		uxtb	r2, r2
 1774              		.loc 1 734 68
 1775 012a 1A70     		strb	r2, [r3]
 1776              	.LBB396:
 1777              	.LBB397:
ARM GAS  /tmp/cc0wCm8A.s 			page 62


 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1778              		.loc 2 946 3
 1779              		.syntax unified
 1780              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1781 012c BFF34F8F 		dsb 0xF
 1782              	@ 0 "" 2
 1783              		.loc 2 947 1
 1784              		.thumb
 1785              		.syntax unified
 1786 0130 58E0     		b	.L60
 1787              	.L58:
 1788              	.LBE397:
 1789              	.LBE396:
 735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
 737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
 738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       else /* (hnand->Config.PageSize) > 512 */
 739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if (((hnand->Config.BlockSize) * (hnand->Config.BlockNbr)) <= 65535U)
 1790              		.loc 1 740 28
 1791 0132 FB68     		ldr	r3, [r7, #12]
 1792 0134 DB6A     		ldr	r3, [r3, #44]
 1793              		.loc 1 740 56
 1794 0136 FA68     		ldr	r2, [r7, #12]
 1795 0138 126B     		ldr	r2, [r2, #48]
 1796              		.loc 1 740 40
 1797 013a 02FB03F3 		mul	r3, r2, r3
 1798              		.loc 1 740 12
 1799 013e B3F5803F 		cmp	r3, #65536
 1800 0142 22D2     		bcs	.L61
 741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 1801              		.loc 1 742 29
 1802 0144 BB69     		ldr	r3, [r7, #24]
 1803 0146 43F40033 		orr	r3, r3, #131072
 1804              		.loc 1 742 68
 1805 014a 0022     		movs	r2, #0
 1806 014c 1A70     		strb	r2, [r3]
 1807              	.LBB398:
 1808              	.LBB399:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1809              		.loc 2 946 3
 1810              		.syntax unified
 1811              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1812 014e BFF34F8F 		dsb 0xF
 1813              	@ 0 "" 2
 1814              		.loc 2 947 1
 1815              		.thumb
 1816              		.syntax unified
 1817 0152 00BF     		nop
 1818              	.LBE399:
 1819              	.LBE398:
 743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 1820              		.loc 1 744 29
 1821 0154 BB69     		ldr	r3, [r7, #24]
 1822 0156 43F40033 		orr	r3, r3, #131072
ARM GAS  /tmp/cc0wCm8A.s 			page 63


 1823              		.loc 1 744 68
 1824 015a 0022     		movs	r2, #0
 1825 015c 1A70     		strb	r2, [r3]
 1826              	.LBB400:
 1827              	.LBB401:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1828              		.loc 2 946 3
 1829              		.syntax unified
 1830              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1831 015e BFF34F8F 		dsb 0xF
 1832              	@ 0 "" 2
 1833              		.loc 2 947 1
 1834              		.thumb
 1835              		.syntax unified
 1836 0162 00BF     		nop
 1837              	.LBE401:
 1838              	.LBE400:
 745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1839              		.loc 1 746 29
 1840 0164 BB69     		ldr	r3, [r7, #24]
 1841 0166 43F40033 		orr	r3, r3, #131072
 1842              		.loc 1 746 70
 1843 016a 7A6A     		ldr	r2, [r7, #36]
 1844 016c D2B2     		uxtb	r2, r2
 1845              		.loc 1 746 68
 1846 016e 1A70     		strb	r2, [r3]
 1847              	.LBB402:
 1848              	.LBB403:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1849              		.loc 2 946 3
 1850              		.syntax unified
 1851              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1852 0170 BFF34F8F 		dsb 0xF
 1853              	@ 0 "" 2
 1854              		.loc 2 947 1
 1855              		.thumb
 1856              		.syntax unified
 1857 0174 00BF     		nop
 1858              	.LBE403:
 1859              	.LBE402:
 747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1860              		.loc 1 748 70
 1861 0176 7B6A     		ldr	r3, [r7, #36]
 1862 0178 1A0A     		lsrs	r2, r3, #8
 1863              		.loc 1 748 29
 1864 017a BB69     		ldr	r3, [r7, #24]
 1865 017c 43F40033 		orr	r3, r3, #131072
 1866              		.loc 1 748 70
 1867 0180 D2B2     		uxtb	r2, r2
 1868              		.loc 1 748 68
 1869 0182 1A70     		strb	r2, [r3]
 1870              	.LBB404:
 1871              	.LBB405:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1872              		.loc 2 946 3
ARM GAS  /tmp/cc0wCm8A.s 			page 64


 1873              		.syntax unified
 1874              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1875 0184 BFF34F8F 		dsb 0xF
 1876              	@ 0 "" 2
 1877              		.loc 2 947 1
 1878              		.thumb
 1879              		.syntax unified
 1880 0188 2CE0     		b	.L60
 1881              	.L61:
 1882              	.LBE405:
 1883              	.LBE404:
 749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
 751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 1884              		.loc 1 753 29
 1885 018a BB69     		ldr	r3, [r7, #24]
 1886 018c 43F40033 		orr	r3, r3, #131072
 1887              		.loc 1 753 68
 1888 0190 0022     		movs	r2, #0
 1889 0192 1A70     		strb	r2, [r3]
 1890              	.LBB406:
 1891              	.LBB407:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1892              		.loc 2 946 3
 1893              		.syntax unified
 1894              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1895 0194 BFF34F8F 		dsb 0xF
 1896              	@ 0 "" 2
 1897              		.loc 2 947 1
 1898              		.thumb
 1899              		.syntax unified
 1900 0198 00BF     		nop
 1901              	.LBE407:
 1902              	.LBE406:
 754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 1903              		.loc 1 755 29
 1904 019a BB69     		ldr	r3, [r7, #24]
 1905 019c 43F40033 		orr	r3, r3, #131072
 1906              		.loc 1 755 68
 1907 01a0 0022     		movs	r2, #0
 1908 01a2 1A70     		strb	r2, [r3]
 1909              	.LBB408:
 1910              	.LBB409:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1911              		.loc 2 946 3
 1912              		.syntax unified
 1913              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1914 01a4 BFF34F8F 		dsb 0xF
 1915              	@ 0 "" 2
 1916              		.loc 2 947 1
 1917              		.thumb
 1918              		.syntax unified
 1919 01a8 00BF     		nop
 1920              	.LBE409:
ARM GAS  /tmp/cc0wCm8A.s 			page 65


 1921              	.LBE408:
 756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1922              		.loc 1 757 29
 1923 01aa BB69     		ldr	r3, [r7, #24]
 1924 01ac 43F40033 		orr	r3, r3, #131072
 1925              		.loc 1 757 70
 1926 01b0 7A6A     		ldr	r2, [r7, #36]
 1927 01b2 D2B2     		uxtb	r2, r2
 1928              		.loc 1 757 68
 1929 01b4 1A70     		strb	r2, [r3]
 1930              	.LBB410:
 1931              	.LBB411:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1932              		.loc 2 946 3
 1933              		.syntax unified
 1934              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1935 01b6 BFF34F8F 		dsb 0xF
 1936              	@ 0 "" 2
 1937              		.loc 2 947 1
 1938              		.thumb
 1939              		.syntax unified
 1940 01ba 00BF     		nop
 1941              	.LBE411:
 1942              	.LBE410:
 758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1943              		.loc 1 759 70
 1944 01bc 7B6A     		ldr	r3, [r7, #36]
 1945 01be 1A0A     		lsrs	r2, r3, #8
 1946              		.loc 1 759 29
 1947 01c0 BB69     		ldr	r3, [r7, #24]
 1948 01c2 43F40033 		orr	r3, r3, #131072
 1949              		.loc 1 759 70
 1950 01c6 D2B2     		uxtb	r2, r2
 1951              		.loc 1 759 68
 1952 01c8 1A70     		strb	r2, [r3]
 1953              	.LBB412:
 1954              	.LBB413:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1955              		.loc 2 946 3
 1956              		.syntax unified
 1957              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1958 01ca BFF34F8F 		dsb 0xF
 1959              	@ 0 "" 2
 1960              		.loc 2 947 1
 1961              		.thumb
 1962              		.syntax unified
 1963 01ce 00BF     		nop
 1964              	.LBE413:
 1965              	.LBE412:
 760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1966              		.loc 1 761 70
 1967 01d0 7B6A     		ldr	r3, [r7, #36]
 1968 01d2 1A0C     		lsrs	r2, r3, #16
 1969              		.loc 1 761 29
ARM GAS  /tmp/cc0wCm8A.s 			page 66


 1970 01d4 BB69     		ldr	r3, [r7, #24]
 1971 01d6 43F40033 		orr	r3, r3, #131072
 1972              		.loc 1 761 70
 1973 01da D2B2     		uxtb	r2, r2
 1974              		.loc 1 761 68
 1975 01dc 1A70     		strb	r2, [r3]
 1976              	.LBB414:
 1977              	.LBB415:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1978              		.loc 2 946 3
 1979              		.syntax unified
 1980              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1981 01de BFF34F8F 		dsb 0xF
 1982              	@ 0 "" 2
 1983              		.loc 2 947 1
 1984              		.thumb
 1985              		.syntax unified
 1986 01e2 00BF     		nop
 1987              	.L60:
 1988              	.LBE415:
 1989              	.LBE414:
 762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
 764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
 765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA))  = NAND_CMD_AREA_TRUE1;
 1990              		.loc 1 766 25
 1991 01e4 BB69     		ldr	r3, [r7, #24]
 1992 01e6 43F48033 		orr	r3, r3, #65536
 1993              		.loc 1 766 64
 1994 01ea 3022     		movs	r2, #48
 1995 01ec 1A70     		strb	r2, [r3]
 1996              	.LBB416:
 1997              	.LBB417:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1998              		.loc 2 946 3
 1999              		.syntax unified
 2000              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2001 01ee BFF34F8F 		dsb 0xF
 2002              	@ 0 "" 2
 2003              		.loc 2 947 1
 2004              		.thumb
 2005              		.syntax unified
 2006 01f2 00BF     		nop
 2007              	.LBE417:
 2008              	.LBE416:
 767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       __DSB();
 768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       if (hnand->Config.ExtraCommandEnable == ENABLE)
 2009              		.loc 1 769 24
 2010 01f4 FB68     		ldr	r3, [r7, #12]
 2011 01f6 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2012              		.loc 1 769 10
 2013 01fa 012B     		cmp	r3, #1
 2014 01fc 23D1     		bne	.L62
 770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Get tick */
ARM GAS  /tmp/cc0wCm8A.s 			page 67


 772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         tickstart = HAL_GetTick();
 2015              		.loc 1 772 21
 2016 01fe FFF7FEFF 		bl	HAL_GetTick
 2017 0202 7861     		str	r0, [r7, #20]
 773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Read status until NAND is ready */
 775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         while (HAL_NAND_Read_Status(hnand) != NAND_READY)
 2018              		.loc 1 775 15
 2019 0204 11E0     		b	.L63
 2020              	.L64:
 776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           if ((HAL_GetTick() - tickstart) > NAND_WRITE_TIMEOUT)
 2021              		.loc 1 777 16
 2022 0206 FFF7FEFF 		bl	HAL_GetTick
 2023 020a 0246     		mov	r2, r0
 2024              		.loc 1 777 30
 2025 020c 7B69     		ldr	r3, [r7, #20]
 2026 020e D31A     		subs	r3, r2, r3
 2027              		.loc 1 777 14
 2028 0210 B3F1807F 		cmp	r3, #16777216
 2029 0214 09D9     		bls	.L63
 778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           {
 779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             /* Update the NAND controller state */
 780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             hnand->State = HAL_NAND_STATE_ERROR;
 2030              		.loc 1 780 26
 2031 0216 FB68     		ldr	r3, [r7, #12]
 2032 0218 0322     		movs	r2, #3
 2033 021a 83F82120 		strb	r2, [r3, #33]
 781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             /* Process unlocked */
 783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             __HAL_UNLOCK(hnand);
 2034              		.loc 1 783 13
 2035 021e FB68     		ldr	r3, [r7, #12]
 2036 0220 0022     		movs	r2, #0
 2037 0222 83F82020 		strb	r2, [r3, #32]
 784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             return HAL_TIMEOUT;
 2038              		.loc 1 785 20
 2039 0226 0323     		movs	r3, #3
 2040 0228 49E0     		b	.L54
 2041              	.L63:
 775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 2042              		.loc 1 775 16
 2043 022a F868     		ldr	r0, [r7, #12]
 2044 022c FFF7FEFF 		bl	HAL_NAND_Read_Status
 2045 0230 0346     		mov	r3, r0
 775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 2046              		.loc 1 775 15
 2047 0232 402B     		cmp	r3, #64
 2048 0234 E7D1     		bne	.L64
 786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           }
 787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
 788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Go back to read mode */
 790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = ((uint8_t)0x00);
 2049              		.loc 1 790 27
 2050 0236 BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/cc0wCm8A.s 			page 68


 2051 0238 43F48033 		orr	r3, r3, #65536
 2052              		.loc 1 790 65
 2053 023c 0022     		movs	r2, #0
 2054 023e 1A70     		strb	r2, [r3]
 2055              	.LBB418:
 2056              	.LBB419:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2057              		.loc 2 946 3
 2058              		.syntax unified
 2059              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2060 0240 BFF34F8F 		dsb 0xF
 2061              	@ 0 "" 2
 2062              		.loc 2 947 1
 2063              		.thumb
 2064              		.syntax unified
 2065 0244 00BF     		nop
 2066              	.L62:
 2067              	.LBE419:
 2068              	.LBE418:
 791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
 792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
 793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Calculate PageSize */
 795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       if (hnand->Init.MemoryDataWidth == FMC_NAND_MEM_BUS_WIDTH_8)
 2069              		.loc 1 795 22
 2070 0246 FB68     		ldr	r3, [r7, #12]
 2071 0248 DB68     		ldr	r3, [r3, #12]
 2072              		.loc 1 795 10
 2073 024a 002B     		cmp	r3, #0
 2074 024c 04D1     		bne	.L65
 796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         hnand->Config.PageSize = hnand->Config.PageSize / 2U;
 2075              		.loc 1 797 47
 2076 024e FB68     		ldr	r3, [r7, #12]
 2077 0250 5B6A     		ldr	r3, [r3, #36]
 2078              		.loc 1 797 57
 2079 0252 5A08     		lsrs	r2, r3, #1
 2080              		.loc 1 797 32
 2081 0254 FB68     		ldr	r3, [r7, #12]
 2082 0256 5A62     		str	r2, [r3, #36]
 2083              	.L65:
 798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
 799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       else
 800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Do nothing */
 802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Keep the same PageSize for FMC_NAND_MEM_BUS_WIDTH_16*/
 803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
 804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Get Data into Buffer */
 806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       for (index = 0U; index < hnand->Config.PageSize; index++)
 2084              		.loc 1 806 18
 2085 0258 0023     		movs	r3, #0
 2086 025a FB62     		str	r3, [r7, #44]
 2087              		.loc 1 806 7
 2088 025c 09E0     		b	.L66
 2089              	.L67:
 807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
ARM GAS  /tmp/cc0wCm8A.s 			page 69


 808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *buff = *(uint16_t *)deviceaddress;
 2090              		.loc 1 808 18 discriminator 3
 2091 025e BB69     		ldr	r3, [r7, #24]
 2092              		.loc 1 808 17 discriminator 3
 2093 0260 1A88     		ldrh	r2, [r3]
 2094              		.loc 1 808 15 discriminator 3
 2095 0262 FB69     		ldr	r3, [r7, #28]
 2096 0264 1A80     		strh	r2, [r3]	@ movhi
 809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         buff++;
 2097              		.loc 1 809 13 discriminator 3
 2098 0266 FB69     		ldr	r3, [r7, #28]
 2099 0268 0233     		adds	r3, r3, #2
 2100 026a FB61     		str	r3, [r7, #28]
 806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 2101              		.loc 1 806 61 discriminator 3
 2102 026c FB6A     		ldr	r3, [r7, #44]
 2103 026e 0133     		adds	r3, r3, #1
 2104 0270 FB62     		str	r3, [r7, #44]
 2105              	.L66:
 806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 2106              		.loc 1 806 45 discriminator 1
 2107 0272 FB68     		ldr	r3, [r7, #12]
 2108 0274 5B6A     		ldr	r3, [r3, #36]
 806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 2109              		.loc 1 806 7 discriminator 1
 2110 0276 FA6A     		ldr	r2, [r7, #44]
 2111 0278 9A42     		cmp	r2, r3
 2112 027a F0D3     		bcc	.L67
 810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
 811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Increment read pages number */
 813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       numpagesread++;
 2113              		.loc 1 813 19
 2114 027c BB6A     		ldr	r3, [r7, #40]
 2115 027e 0133     		adds	r3, r3, #1
 2116 0280 BB62     		str	r3, [r7, #40]
 814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Decrement pages to read */
 816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       nbpages--;
 2117              		.loc 1 816 14
 2118 0282 3B6A     		ldr	r3, [r7, #32]
 2119 0284 013B     		subs	r3, r3, #1
 2120 0286 3B62     		str	r3, [r7, #32]
 817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Increment the NAND address */
 819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       nandaddress = (uint32_t)(nandaddress + 1U);
 2121              		.loc 1 819 19
 2122 0288 7B6A     		ldr	r3, [r7, #36]
 2123 028a 0133     		adds	r3, r3, #1
 2124 028c 7B62     		str	r3, [r7, #36]
 2125              	.L57:
 708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 2126              		.loc 1 708 11
 2127 028e 3B6A     		ldr	r3, [r7, #32]
 2128 0290 002B     		cmp	r3, #0
 2129 0292 09D0     		beq	.L68
 708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
ARM GAS  /tmp/cc0wCm8A.s 			page 70


 2130              		.loc 1 708 61 discriminator 1
 2131 0294 FB68     		ldr	r3, [r7, #12]
 2132 0296 DB6A     		ldr	r3, [r3, #44]
 708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 2133              		.loc 1 708 89 discriminator 1
 2134 0298 FA68     		ldr	r2, [r7, #12]
 2135 029a 126B     		ldr	r2, [r2, #48]
 708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 2136              		.loc 1 708 73 discriminator 1
 2137 029c 02FB03F3 		mul	r3, r2, r3
 708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 2138              		.loc 1 708 28 discriminator 1
 2139 02a0 7A6A     		ldr	r2, [r7, #36]
 2140 02a2 9A42     		cmp	r2, r3
 2141 02a4 FFF4EFAE 		bcc	.L69
 2142              	.L68:
 820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     }
 821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
 823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_READY;
 2143              		.loc 1 823 18
 2144 02a8 FB68     		ldr	r3, [r7, #12]
 2145 02aa 0122     		movs	r2, #1
 2146 02ac 83F82120 		strb	r2, [r3, #33]
 824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process unlocked */
 826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_UNLOCK(hnand);
 2147              		.loc 1 826 5
 2148 02b0 FB68     		ldr	r3, [r7, #12]
 2149 02b2 0022     		movs	r2, #0
 2150 02b4 83F82020 		strb	r2, [r3, #32]
 827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
 829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_ERROR;
 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return HAL_OK;
 2151              		.loc 1 833 10
 2152 02b8 0023     		movs	r3, #0
 2153 02ba 00E0     		b	.L54
 2154              	.L55:
 830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 2155              		.loc 1 830 12
 2156 02bc 0123     		movs	r3, #1
 2157              	.L54:
 834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 2158              		.loc 1 834 1
 2159 02be 1846     		mov	r0, r3
 2160 02c0 3037     		adds	r7, r7, #48
 2161              	.LCFI59:
 2162              		.cfi_def_cfa_offset 8
 2163 02c2 BD46     		mov	sp, r7
 2164              	.LCFI60:
 2165              		.cfi_def_cfa_register 13
 2166              		@ sp needed
 2167 02c4 80BD     		pop	{r7, pc}
ARM GAS  /tmp/cc0wCm8A.s 			page 71


 2168              		.cfi_endproc
 2169              	.LFE341:
 2171              		.section	.text.HAL_NAND_Write_Page_8b,"ax",%progbits
 2172              		.align	1
 2173              		.global	HAL_NAND_Write_Page_8b
 2174              		.syntax unified
 2175              		.thumb
 2176              		.thumb_func
 2177              		.fpu fpv5-d16
 2179              	HAL_NAND_Write_Page_8b:
 2180              	.LFB342:
 835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
 837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Write Page(s) to NAND memory block (8-bits addressing)
 838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
 840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
 841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pBuffer  pointer to source buffer to write
 842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  NumPageToWrite   number of pages to write to block
 843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
 844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Write_Page_8b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress, 
 846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****                                          uint32_t NumPageToWrite)
 847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 2181              		.loc 1 847 1
 2182              		.cfi_startproc
 2183              		@ args = 0, pretend = 0, frame = 48
 2184              		@ frame_needed = 1, uses_anonymous_args = 0
 2185 0000 80B5     		push	{r7, lr}
 2186              	.LCFI61:
 2187              		.cfi_def_cfa_offset 8
 2188              		.cfi_offset 7, -8
 2189              		.cfi_offset 14, -4
 2190 0002 8CB0     		sub	sp, sp, #48
 2191              	.LCFI62:
 2192              		.cfi_def_cfa_offset 56
 2193 0004 00AF     		add	r7, sp, #0
 2194              	.LCFI63:
 2195              		.cfi_def_cfa_register 7
 2196 0006 F860     		str	r0, [r7, #12]
 2197 0008 B960     		str	r1, [r7, #8]
 2198 000a 7A60     		str	r2, [r7, #4]
 2199 000c 3B60     		str	r3, [r7]
 848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t index;
 849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t tickstart;
 850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t deviceaddress;
 851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t numpageswritten = 0U;
 2200              		.loc 1 851 12
 2201 000e 0023     		movs	r3, #0
 2202 0010 BB62     		str	r3, [r7, #40]
 852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t nandaddress;
 853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t nbpages = NumPageToWrite;
 2203              		.loc 1 853 12
 2204 0012 3B68     		ldr	r3, [r7]
 2205 0014 3B62     		str	r3, [r7, #32]
 854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint8_t *buff = pBuffer;
 2206              		.loc 1 854 12
ARM GAS  /tmp/cc0wCm8A.s 			page 72


 2207 0016 7B68     		ldr	r3, [r7, #4]
 2208 0018 FB61     		str	r3, [r7, #28]
 855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check the NAND controller state */
 857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_BUSY)
 2209              		.loc 1 857 12
 2210 001a FB68     		ldr	r3, [r7, #12]
 2211 001c 93F82130 		ldrb	r3, [r3, #33]
 2212 0020 DBB2     		uxtb	r3, r3
 2213              		.loc 1 857 6
 2214 0022 022B     		cmp	r3, #2
 2215 0024 01D1     		bne	.L72
 858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_BUSY;
 2216              		.loc 1 859 12
 2217 0026 0223     		movs	r3, #2
 2218 0028 3EE1     		b	.L73
 2219              	.L72:
 860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if (hnand->State == HAL_NAND_STATE_READY)
 2220              		.loc 1 861 17
 2221 002a FB68     		ldr	r3, [r7, #12]
 2222 002c 93F82130 		ldrb	r3, [r3, #33]
 2223 0030 DBB2     		uxtb	r3, r3
 2224              		.loc 1 861 11
 2225 0032 012B     		cmp	r3, #1
 2226 0034 40F03781 		bne	.L74
 862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process Locked */
 864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_LOCK(hnand);
 2227              		.loc 1 864 5
 2228 0038 FB68     		ldr	r3, [r7, #12]
 2229 003a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2230 003e 012B     		cmp	r3, #1
 2231 0040 01D1     		bne	.L75
 2232              		.loc 1 864 5 is_stmt 0 discriminator 1
 2233 0042 0223     		movs	r3, #2
 2234 0044 30E1     		b	.L73
 2235              	.L75:
 2236              		.loc 1 864 5 discriminator 2
 2237 0046 FB68     		ldr	r3, [r7, #12]
 2238 0048 0122     		movs	r2, #1
 2239 004a 83F82020 		strb	r2, [r3, #32]
 865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
 867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_BUSY;
 2240              		.loc 1 867 18 is_stmt 1 discriminator 2
 2241 004e FB68     		ldr	r3, [r7, #12]
 2242 0050 0222     		movs	r2, #2
 2243 0052 83F82120 		strb	r2, [r3, #33]
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Identify the device address */
 870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     deviceaddress = NAND_DEVICE;
 2244              		.loc 1 870 19 discriminator 2
 2245 0056 4FF00043 		mov	r3, #-2147483648
 2246 005a BB61     		str	r3, [r7, #24]
 871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
ARM GAS  /tmp/cc0wCm8A.s 			page 73


 872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* NAND raw address calculation */
 873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     nandaddress = ARRAY_ADDRESS(pAddress, hnand);
 2247              		.loc 1 873 19 discriminator 2
 2248 005c BB68     		ldr	r3, [r7, #8]
 2249 005e 1B88     		ldrh	r3, [r3]
 2250 0060 1946     		mov	r1, r3
 2251 0062 BB68     		ldr	r3, [r7, #8]
 2252 0064 9B88     		ldrh	r3, [r3, #4]
 2253 0066 1A46     		mov	r2, r3
 2254 0068 BB68     		ldr	r3, [r7, #8]
 2255 006a 5B88     		ldrh	r3, [r3, #2]
 2256 006c 1846     		mov	r0, r3
 2257 006e FB68     		ldr	r3, [r7, #12]
 2258 0070 9B6B     		ldr	r3, [r3, #56]
 2259 0072 03FB00F3 		mul	r3, r3, r0
 2260 0076 1344     		add	r3, r3, r2
 2261 0078 FA68     		ldr	r2, [r7, #12]
 2262 007a D26A     		ldr	r2, [r2, #44]
 2263 007c 02FB03F3 		mul	r3, r2, r3
 2264              		.loc 1 873 17 discriminator 2
 2265 0080 0B44     		add	r3, r3, r1
 2266 0082 7B62     		str	r3, [r7, #36]
 874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Page(s) write loop */
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     while ((nbpages != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.BlockNbr))
 2267              		.loc 1 876 11 discriminator 2
 2268 0084 F8E0     		b	.L76
 2269              	.L86:
 877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Send write page command sequence */
 879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
 2270              		.loc 1 879 25
 2271 0086 BB69     		ldr	r3, [r7, #24]
 2272 0088 43F48033 		orr	r3, r3, #65536
 2273              		.loc 1 879 63
 2274 008c 0022     		movs	r2, #0
 2275 008e 1A70     		strb	r2, [r3]
 2276              	.LBB420:
 2277              	.LBB421:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2278              		.loc 2 946 3
 2279              		.syntax unified
 2280              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2281 0090 BFF34F8F 		dsb 0xF
 2282              	@ 0 "" 2
 2283              		.loc 2 947 1
 2284              		.thumb
 2285              		.syntax unified
 2286 0094 00BF     		nop
 2287              	.LBE421:
 2288              	.LBE420:
 880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       __DSB();
 881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 2289              		.loc 1 881 25
 2290 0096 BB69     		ldr	r3, [r7, #24]
 2291 0098 43F48033 		orr	r3, r3, #65536
 2292              		.loc 1 881 63
ARM GAS  /tmp/cc0wCm8A.s 			page 74


 2293 009c 8022     		movs	r2, #128
 2294 009e 1A70     		strb	r2, [r3]
 2295              	.LBB422:
 2296              	.LBB423:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2297              		.loc 2 946 3
 2298              		.syntax unified
 2299              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2300 00a0 BFF34F8F 		dsb 0xF
 2301              	@ 0 "" 2
 2302              		.loc 2 947 1
 2303              		.thumb
 2304              		.syntax unified
 2305 00a4 00BF     		nop
 2306              	.LBE423:
 2307              	.LBE422:
 882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       __DSB();
 883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Cards with page size <= 512 bytes */
 885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       if ((hnand->Config.PageSize) <= 512U)
 2308              		.loc 1 885 25
 2309 00a6 FB68     		ldr	r3, [r7, #12]
 2310 00a8 5B6A     		ldr	r3, [r3, #36]
 2311              		.loc 1 885 10
 2312 00aa B3F5007F 		cmp	r3, #512
 2313 00ae 48D8     		bhi	.L77
 886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if (((hnand->Config.BlockSize) * (hnand->Config.BlockNbr)) <= 65535U)
 2314              		.loc 1 887 28
 2315 00b0 FB68     		ldr	r3, [r7, #12]
 2316 00b2 DB6A     		ldr	r3, [r3, #44]
 2317              		.loc 1 887 56
 2318 00b4 FA68     		ldr	r2, [r7, #12]
 2319 00b6 126B     		ldr	r2, [r2, #48]
 2320              		.loc 1 887 40
 2321 00b8 02FB03F3 		mul	r3, r2, r3
 2322              		.loc 1 887 12
 2323 00bc B3F5803F 		cmp	r3, #65536
 2324 00c0 1AD2     		bcs	.L78
 888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 2325              		.loc 1 889 29
 2326 00c2 BB69     		ldr	r3, [r7, #24]
 2327 00c4 43F40033 		orr	r3, r3, #131072
 2328              		.loc 1 889 68
 2329 00c8 0022     		movs	r2, #0
 2330 00ca 1A70     		strb	r2, [r3]
 2331              	.LBB424:
 2332              	.LBB425:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2333              		.loc 2 946 3
 2334              		.syntax unified
 2335              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2336 00cc BFF34F8F 		dsb 0xF
 2337              	@ 0 "" 2
 2338              		.loc 2 947 1
 2339              		.thumb
ARM GAS  /tmp/cc0wCm8A.s 			page 75


 2340              		.syntax unified
 2341 00d0 00BF     		nop
 2342              	.LBE425:
 2343              	.LBE424:
 890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2344              		.loc 1 891 29
 2345 00d2 BB69     		ldr	r3, [r7, #24]
 2346 00d4 43F40033 		orr	r3, r3, #131072
 2347              		.loc 1 891 70
 2348 00d8 7A6A     		ldr	r2, [r7, #36]
 2349 00da D2B2     		uxtb	r2, r2
 2350              		.loc 1 891 68
 2351 00dc 1A70     		strb	r2, [r3]
 2352              	.LBB426:
 2353              	.LBB427:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2354              		.loc 2 946 3
 2355              		.syntax unified
 2356              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2357 00de BFF34F8F 		dsb 0xF
 2358              	@ 0 "" 2
 2359              		.loc 2 947 1
 2360              		.thumb
 2361              		.syntax unified
 2362 00e2 00BF     		nop
 2363              	.LBE427:
 2364              	.LBE426:
 892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2365              		.loc 1 893 70
 2366 00e4 7B6A     		ldr	r3, [r7, #36]
 2367 00e6 1A0A     		lsrs	r2, r3, #8
 2368              		.loc 1 893 29
 2369 00e8 BB69     		ldr	r3, [r7, #24]
 2370 00ea 43F40033 		orr	r3, r3, #131072
 2371              		.loc 1 893 70
 2372 00ee D2B2     		uxtb	r2, r2
 2373              		.loc 1 893 68
 2374 00f0 1A70     		strb	r2, [r3]
 2375              	.LBB428:
 2376              	.LBB429:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2377              		.loc 2 946 3
 2378              		.syntax unified
 2379              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2380 00f2 BFF34F8F 		dsb 0xF
 2381              	@ 0 "" 2
 2382              		.loc 2 947 1
 2383              		.thumb
 2384              		.syntax unified
 2385 00f6 7DE0     		b	.L79
 2386              	.L78:
 2387              	.LBE429:
 2388              	.LBE428:
 894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
ARM GAS  /tmp/cc0wCm8A.s 			page 76


 896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 2389              		.loc 1 898 29
 2390 00f8 BB69     		ldr	r3, [r7, #24]
 2391 00fa 43F40033 		orr	r3, r3, #131072
 2392              		.loc 1 898 68
 2393 00fe 0022     		movs	r2, #0
 2394 0100 1A70     		strb	r2, [r3]
 2395              	.LBB430:
 2396              	.LBB431:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2397              		.loc 2 946 3
 2398              		.syntax unified
 2399              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2400 0102 BFF34F8F 		dsb 0xF
 2401              	@ 0 "" 2
 2402              		.loc 2 947 1
 2403              		.thumb
 2404              		.syntax unified
 2405 0106 00BF     		nop
 2406              	.LBE431:
 2407              	.LBE430:
 899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2408              		.loc 1 900 29
 2409 0108 BB69     		ldr	r3, [r7, #24]
 2410 010a 43F40033 		orr	r3, r3, #131072
 2411              		.loc 1 900 70
 2412 010e 7A6A     		ldr	r2, [r7, #36]
 2413 0110 D2B2     		uxtb	r2, r2
 2414              		.loc 1 900 68
 2415 0112 1A70     		strb	r2, [r3]
 2416              	.LBB432:
 2417              	.LBB433:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2418              		.loc 2 946 3
 2419              		.syntax unified
 2420              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2421 0114 BFF34F8F 		dsb 0xF
 2422              	@ 0 "" 2
 2423              		.loc 2 947 1
 2424              		.thumb
 2425              		.syntax unified
 2426 0118 00BF     		nop
 2427              	.LBE433:
 2428              	.LBE432:
 901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2429              		.loc 1 902 70
 2430 011a 7B6A     		ldr	r3, [r7, #36]
 2431 011c 1A0A     		lsrs	r2, r3, #8
 2432              		.loc 1 902 29
 2433 011e BB69     		ldr	r3, [r7, #24]
 2434 0120 43F40033 		orr	r3, r3, #131072
 2435              		.loc 1 902 70
 2436 0124 D2B2     		uxtb	r2, r2
ARM GAS  /tmp/cc0wCm8A.s 			page 77


 2437              		.loc 1 902 68
 2438 0126 1A70     		strb	r2, [r3]
 2439              	.LBB434:
 2440              	.LBB435:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2441              		.loc 2 946 3
 2442              		.syntax unified
 2443              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2444 0128 BFF34F8F 		dsb 0xF
 2445              	@ 0 "" 2
 2446              		.loc 2 947 1
 2447              		.thumb
 2448              		.syntax unified
 2449 012c 00BF     		nop
 2450              	.LBE435:
 2451              	.LBE434:
 903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2452              		.loc 1 904 70
 2453 012e 7B6A     		ldr	r3, [r7, #36]
 2454 0130 1A0C     		lsrs	r2, r3, #16
 2455              		.loc 1 904 29
 2456 0132 BB69     		ldr	r3, [r7, #24]
 2457 0134 43F40033 		orr	r3, r3, #131072
 2458              		.loc 1 904 70
 2459 0138 D2B2     		uxtb	r2, r2
 2460              		.loc 1 904 68
 2461 013a 1A70     		strb	r2, [r3]
 2462              	.LBB436:
 2463              	.LBB437:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2464              		.loc 2 946 3
 2465              		.syntax unified
 2466              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2467 013c BFF34F8F 		dsb 0xF
 2468              	@ 0 "" 2
 2469              		.loc 2 947 1
 2470              		.thumb
 2471              		.syntax unified
 2472 0140 58E0     		b	.L79
 2473              	.L77:
 2474              	.LBE437:
 2475              	.LBE436:
 905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
 907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
 908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       else /* (hnand->Config.PageSize) > 512 */
 909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if (((hnand->Config.BlockSize) * (hnand->Config.BlockNbr)) <= 65535U)
 2476              		.loc 1 910 28
 2477 0142 FB68     		ldr	r3, [r7, #12]
 2478 0144 DB6A     		ldr	r3, [r3, #44]
 2479              		.loc 1 910 56
 2480 0146 FA68     		ldr	r2, [r7, #12]
 2481 0148 126B     		ldr	r2, [r2, #48]
 2482              		.loc 1 910 40
 2483 014a 02FB03F3 		mul	r3, r2, r3
ARM GAS  /tmp/cc0wCm8A.s 			page 78


 2484              		.loc 1 910 12
 2485 014e B3F5803F 		cmp	r3, #65536
 2486 0152 22D2     		bcs	.L80
 911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 2487              		.loc 1 912 29
 2488 0154 BB69     		ldr	r3, [r7, #24]
 2489 0156 43F40033 		orr	r3, r3, #131072
 2490              		.loc 1 912 68
 2491 015a 0022     		movs	r2, #0
 2492 015c 1A70     		strb	r2, [r3]
 2493              	.LBB438:
 2494              	.LBB439:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2495              		.loc 2 946 3
 2496              		.syntax unified
 2497              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2498 015e BFF34F8F 		dsb 0xF
 2499              	@ 0 "" 2
 2500              		.loc 2 947 1
 2501              		.thumb
 2502              		.syntax unified
 2503 0162 00BF     		nop
 2504              	.LBE439:
 2505              	.LBE438:
 913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 2506              		.loc 1 914 29
 2507 0164 BB69     		ldr	r3, [r7, #24]
 2508 0166 43F40033 		orr	r3, r3, #131072
 2509              		.loc 1 914 68
 2510 016a 0022     		movs	r2, #0
 2511 016c 1A70     		strb	r2, [r3]
 2512              	.LBB440:
 2513              	.LBB441:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2514              		.loc 2 946 3
 2515              		.syntax unified
 2516              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2517 016e BFF34F8F 		dsb 0xF
 2518              	@ 0 "" 2
 2519              		.loc 2 947 1
 2520              		.thumb
 2521              		.syntax unified
 2522 0172 00BF     		nop
 2523              	.LBE441:
 2524              	.LBE440:
 915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2525              		.loc 1 916 29
 2526 0174 BB69     		ldr	r3, [r7, #24]
 2527 0176 43F40033 		orr	r3, r3, #131072
 2528              		.loc 1 916 70
 2529 017a 7A6A     		ldr	r2, [r7, #36]
 2530 017c D2B2     		uxtb	r2, r2
 2531              		.loc 1 916 68
 2532 017e 1A70     		strb	r2, [r3]
ARM GAS  /tmp/cc0wCm8A.s 			page 79


 2533              	.LBB442:
 2534              	.LBB443:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2535              		.loc 2 946 3
 2536              		.syntax unified
 2537              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2538 0180 BFF34F8F 		dsb 0xF
 2539              	@ 0 "" 2
 2540              		.loc 2 947 1
 2541              		.thumb
 2542              		.syntax unified
 2543 0184 00BF     		nop
 2544              	.LBE443:
 2545              	.LBE442:
 917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2546              		.loc 1 918 70
 2547 0186 7B6A     		ldr	r3, [r7, #36]
 2548 0188 1A0A     		lsrs	r2, r3, #8
 2549              		.loc 1 918 29
 2550 018a BB69     		ldr	r3, [r7, #24]
 2551 018c 43F40033 		orr	r3, r3, #131072
 2552              		.loc 1 918 70
 2553 0190 D2B2     		uxtb	r2, r2
 2554              		.loc 1 918 68
 2555 0192 1A70     		strb	r2, [r3]
 2556              	.LBB444:
 2557              	.LBB445:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2558              		.loc 2 946 3
 2559              		.syntax unified
 2560              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2561 0194 BFF34F8F 		dsb 0xF
 2562              	@ 0 "" 2
 2563              		.loc 2 947 1
 2564              		.thumb
 2565              		.syntax unified
 2566 0198 2CE0     		b	.L79
 2567              	.L80:
 2568              	.LBE445:
 2569              	.LBE444:
 919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
 921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 2570              		.loc 1 923 29
 2571 019a BB69     		ldr	r3, [r7, #24]
 2572 019c 43F40033 		orr	r3, r3, #131072
 2573              		.loc 1 923 68
 2574 01a0 0022     		movs	r2, #0
 2575 01a2 1A70     		strb	r2, [r3]
 2576              	.LBB446:
 2577              	.LBB447:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2578              		.loc 2 946 3
 2579              		.syntax unified
ARM GAS  /tmp/cc0wCm8A.s 			page 80


 2580              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2581 01a4 BFF34F8F 		dsb 0xF
 2582              	@ 0 "" 2
 2583              		.loc 2 947 1
 2584              		.thumb
 2585              		.syntax unified
 2586 01a8 00BF     		nop
 2587              	.LBE447:
 2588              	.LBE446:
 924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 2589              		.loc 1 925 29
 2590 01aa BB69     		ldr	r3, [r7, #24]
 2591 01ac 43F40033 		orr	r3, r3, #131072
 2592              		.loc 1 925 68
 2593 01b0 0022     		movs	r2, #0
 2594 01b2 1A70     		strb	r2, [r3]
 2595              	.LBB448:
 2596              	.LBB449:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2597              		.loc 2 946 3
 2598              		.syntax unified
 2599              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2600 01b4 BFF34F8F 		dsb 0xF
 2601              	@ 0 "" 2
 2602              		.loc 2 947 1
 2603              		.thumb
 2604              		.syntax unified
 2605 01b8 00BF     		nop
 2606              	.LBE449:
 2607              	.LBE448:
 926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2608              		.loc 1 927 29
 2609 01ba BB69     		ldr	r3, [r7, #24]
 2610 01bc 43F40033 		orr	r3, r3, #131072
 2611              		.loc 1 927 70
 2612 01c0 7A6A     		ldr	r2, [r7, #36]
 2613 01c2 D2B2     		uxtb	r2, r2
 2614              		.loc 1 927 68
 2615 01c4 1A70     		strb	r2, [r3]
 2616              	.LBB450:
 2617              	.LBB451:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2618              		.loc 2 946 3
 2619              		.syntax unified
 2620              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2621 01c6 BFF34F8F 		dsb 0xF
 2622              	@ 0 "" 2
 2623              		.loc 2 947 1
 2624              		.thumb
 2625              		.syntax unified
 2626 01ca 00BF     		nop
 2627              	.LBE451:
 2628              	.LBE450:
 928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
ARM GAS  /tmp/cc0wCm8A.s 			page 81


 2629              		.loc 1 929 70
 2630 01cc 7B6A     		ldr	r3, [r7, #36]
 2631 01ce 1A0A     		lsrs	r2, r3, #8
 2632              		.loc 1 929 29
 2633 01d0 BB69     		ldr	r3, [r7, #24]
 2634 01d2 43F40033 		orr	r3, r3, #131072
 2635              		.loc 1 929 70
 2636 01d6 D2B2     		uxtb	r2, r2
 2637              		.loc 1 929 68
 2638 01d8 1A70     		strb	r2, [r3]
 2639              	.LBB452:
 2640              	.LBB453:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2641              		.loc 2 946 3
 2642              		.syntax unified
 2643              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2644 01da BFF34F8F 		dsb 0xF
 2645              	@ 0 "" 2
 2646              		.loc 2 947 1
 2647              		.thumb
 2648              		.syntax unified
 2649 01de 00BF     		nop
 2650              	.LBE453:
 2651              	.LBE452:
 930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2652              		.loc 1 931 70
 2653 01e0 7B6A     		ldr	r3, [r7, #36]
 2654 01e2 1A0C     		lsrs	r2, r3, #16
 2655              		.loc 1 931 29
 2656 01e4 BB69     		ldr	r3, [r7, #24]
 2657 01e6 43F40033 		orr	r3, r3, #131072
 2658              		.loc 1 931 70
 2659 01ea D2B2     		uxtb	r2, r2
 2660              		.loc 1 931 68
 2661 01ec 1A70     		strb	r2, [r3]
 2662              	.LBB454:
 2663              	.LBB455:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2664              		.loc 2 946 3
 2665              		.syntax unified
 2666              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2667 01ee BFF34F8F 		dsb 0xF
 2668              	@ 0 "" 2
 2669              		.loc 2 947 1
 2670              		.thumb
 2671              		.syntax unified
 2672 01f2 00BF     		nop
 2673              	.L79:
 2674              	.LBE455:
 2675              	.LBE454:
 932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
 933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
 934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
 935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Write data to memory */
 937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       for (index = 0U; index < hnand->Config.PageSize; index++)
ARM GAS  /tmp/cc0wCm8A.s 			page 82


 2676              		.loc 1 937 18
 2677 01f4 0023     		movs	r3, #0
 2678 01f6 FB62     		str	r3, [r7, #44]
 2679              		.loc 1 937 7
 2680 01f8 0CE0     		b	.L81
 2681              	.L82:
 938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)deviceaddress = *buff;
 2682              		.loc 1 939 10 discriminator 3
 2683 01fa BB69     		ldr	r3, [r7, #24]
 2684              		.loc 1 939 42 discriminator 3
 2685 01fc FA69     		ldr	r2, [r7, #28]
 2686 01fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2687              		.loc 1 939 40 discriminator 3
 2688 0200 1A70     		strb	r2, [r3]
 940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         buff++;
 2689              		.loc 1 940 13 discriminator 3
 2690 0202 FB69     		ldr	r3, [r7, #28]
 2691 0204 0133     		adds	r3, r3, #1
 2692 0206 FB61     		str	r3, [r7, #28]
 2693              	.LBB456:
 2694              	.LBB457:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2695              		.loc 2 946 3 discriminator 3
 2696              		.syntax unified
 2697              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2698 0208 BFF34F8F 		dsb 0xF
 2699              	@ 0 "" 2
 2700              		.loc 2 947 1 discriminator 3
 2701              		.thumb
 2702              		.syntax unified
 2703 020c 00BF     		nop
 2704              	.LBE457:
 2705              	.LBE456:
 937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 2706              		.loc 1 937 61 discriminator 3
 2707 020e FB6A     		ldr	r3, [r7, #44]
 2708 0210 0133     		adds	r3, r3, #1
 2709 0212 FB62     		str	r3, [r7, #44]
 2710              	.L81:
 937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 2711              		.loc 1 937 45 discriminator 1
 2712 0214 FB68     		ldr	r3, [r7, #12]
 2713 0216 5B6A     		ldr	r3, [r3, #36]
 937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 2714              		.loc 1 937 7 discriminator 1
 2715 0218 FA6A     		ldr	r2, [r7, #44]
 2716 021a 9A42     		cmp	r2, r3
 2717 021c EDD3     		bcc	.L82
 941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
 942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
 943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE_TRUE1;
 2718              		.loc 1 944 25
 2719 021e BB69     		ldr	r3, [r7, #24]
 2720 0220 43F48033 		orr	r3, r3, #65536
 2721              		.loc 1 944 63
ARM GAS  /tmp/cc0wCm8A.s 			page 83


 2722 0224 1022     		movs	r2, #16
 2723 0226 1A70     		strb	r2, [r3]
 2724              	.LBB458:
 2725              	.LBB459:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2726              		.loc 2 946 3
 2727              		.syntax unified
 2728              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2729 0228 BFF34F8F 		dsb 0xF
 2730              	@ 0 "" 2
 2731              		.loc 2 947 1
 2732              		.thumb
 2733              		.syntax unified
 2734 022c 00BF     		nop
 2735              	.LBE459:
 2736              	.LBE458:
 945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       __DSB();
 946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Get tick */
 948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       tickstart = HAL_GetTick();
 2737              		.loc 1 948 19
 2738 022e FFF7FEFF 		bl	HAL_GetTick
 2739 0232 7861     		str	r0, [r7, #20]
 949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Read status until NAND is ready */
 951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       while (HAL_NAND_Read_Status(hnand) != NAND_READY)
 2740              		.loc 1 951 13
 2741 0234 11E0     		b	.L83
 2742              	.L84:
 952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if ((HAL_GetTick() - tickstart) > NAND_WRITE_TIMEOUT)
 2743              		.loc 1 953 14
 2744 0236 FFF7FEFF 		bl	HAL_GetTick
 2745 023a 0246     		mov	r2, r0
 2746              		.loc 1 953 28
 2747 023c 7B69     		ldr	r3, [r7, #20]
 2748 023e D31A     		subs	r3, r2, r3
 2749              		.loc 1 953 12
 2750 0240 B3F1807F 		cmp	r3, #16777216
 2751 0244 09D9     		bls	.L83
 954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           /* Update the NAND controller state */
 956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           hnand->State = HAL_NAND_STATE_ERROR;
 2752              		.loc 1 956 24
 2753 0246 FB68     		ldr	r3, [r7, #12]
 2754 0248 0322     		movs	r2, #3
 2755 024a 83F82120 		strb	r2, [r3, #33]
 957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           /* Process unlocked */
 959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __HAL_UNLOCK(hnand);
 2756              		.loc 1 959 11
 2757 024e FB68     		ldr	r3, [r7, #12]
 2758 0250 0022     		movs	r2, #0
 2759 0252 83F82020 		strb	r2, [r3, #32]
 960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           return HAL_TIMEOUT;
 2760              		.loc 1 961 18
ARM GAS  /tmp/cc0wCm8A.s 			page 84


 2761 0256 0323     		movs	r3, #3
 2762 0258 26E0     		b	.L73
 2763              	.L83:
 951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 2764              		.loc 1 951 14
 2765 025a F868     		ldr	r0, [r7, #12]
 2766 025c FFF7FEFF 		bl	HAL_NAND_Read_Status
 2767 0260 0346     		mov	r3, r0
 951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 2768              		.loc 1 951 13
 2769 0262 402B     		cmp	r3, #64
 2770 0264 E7D1     		bne	.L84
 962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
 963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
 964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Increment written pages number */
 966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       numpageswritten++;
 2771              		.loc 1 966 22
 2772 0266 BB6A     		ldr	r3, [r7, #40]
 2773 0268 0133     		adds	r3, r3, #1
 2774 026a BB62     		str	r3, [r7, #40]
 967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Decrement pages to write */
 969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       nbpages--;
 2775              		.loc 1 969 14
 2776 026c 3B6A     		ldr	r3, [r7, #32]
 2777 026e 013B     		subs	r3, r3, #1
 2778 0270 3B62     		str	r3, [r7, #32]
 970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Increment the NAND address */
 972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       nandaddress = (uint32_t)(nandaddress + 1U);
 2779              		.loc 1 972 19
 2780 0272 7B6A     		ldr	r3, [r7, #36]
 2781 0274 0133     		adds	r3, r3, #1
 2782 0276 7B62     		str	r3, [r7, #36]
 2783              	.L76:
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 2784              		.loc 1 876 11
 2785 0278 3B6A     		ldr	r3, [r7, #32]
 2786 027a 002B     		cmp	r3, #0
 2787 027c 09D0     		beq	.L85
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 2788              		.loc 1 876 61 discriminator 1
 2789 027e FB68     		ldr	r3, [r7, #12]
 2790 0280 DB6A     		ldr	r3, [r3, #44]
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 2791              		.loc 1 876 89 discriminator 1
 2792 0282 FA68     		ldr	r2, [r7, #12]
 2793 0284 126B     		ldr	r2, [r2, #48]
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 2794              		.loc 1 876 73 discriminator 1
 2795 0286 02FB03F3 		mul	r3, r2, r3
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 2796              		.loc 1 876 28 discriminator 1
 2797 028a 7A6A     		ldr	r2, [r7, #36]
 2798 028c 9A42     		cmp	r2, r3
 2799 028e FFF4FAAE 		bcc	.L86
ARM GAS  /tmp/cc0wCm8A.s 			page 85


 2800              	.L85:
 973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     }
 974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
 976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_READY;
 2801              		.loc 1 976 18
 2802 0292 FB68     		ldr	r3, [r7, #12]
 2803 0294 0122     		movs	r2, #1
 2804 0296 83F82120 		strb	r2, [r3, #33]
 977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process unlocked */
 979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_UNLOCK(hnand);
 2805              		.loc 1 979 5
 2806 029a FB68     		ldr	r3, [r7, #12]
 2807 029c 0022     		movs	r2, #0
 2808 029e 83F82020 		strb	r2, [r3, #32]
 980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
 982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
 983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_ERROR;
 984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return HAL_OK;
 2809              		.loc 1 986 10
 2810 02a2 0023     		movs	r3, #0
 2811 02a4 00E0     		b	.L73
 2812              	.L74:
 983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 2813              		.loc 1 983 12
 2814 02a6 0123     		movs	r3, #1
 2815              	.L73:
 987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 2816              		.loc 1 987 1
 2817 02a8 1846     		mov	r0, r3
 2818 02aa 3037     		adds	r7, r7, #48
 2819              	.LCFI64:
 2820              		.cfi_def_cfa_offset 8
 2821 02ac BD46     		mov	sp, r7
 2822              	.LCFI65:
 2823              		.cfi_def_cfa_register 13
 2824              		@ sp needed
 2825 02ae 80BD     		pop	{r7, pc}
 2826              		.cfi_endproc
 2827              	.LFE342:
 2829              		.section	.text.HAL_NAND_Write_Page_16b,"ax",%progbits
 2830              		.align	1
 2831              		.global	HAL_NAND_Write_Page_16b
 2832              		.syntax unified
 2833              		.thumb
 2834              		.thumb_func
 2835              		.fpu fpv5-d16
 2837              	HAL_NAND_Write_Page_16b:
 2838              	.LFB343:
 988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
 989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
 990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Write Page(s) to NAND memory block (16-bits addressing)
 991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
ARM GAS  /tmp/cc0wCm8A.s 			page 86


 992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
 993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
 994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pBuffer  pointer to source buffer to write. pBuffer should be 16bits aligned
 995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  NumPageToWrite   number of pages to write to block
 996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
 997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
 998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Write_Page_16b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress,
 999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****                                           uint32_t NumPageToWrite)
1000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 2839              		.loc 1 1000 1
 2840              		.cfi_startproc
 2841              		@ args = 0, pretend = 0, frame = 48
 2842              		@ frame_needed = 1, uses_anonymous_args = 0
 2843 0000 80B5     		push	{r7, lr}
 2844              	.LCFI66:
 2845              		.cfi_def_cfa_offset 8
 2846              		.cfi_offset 7, -8
 2847              		.cfi_offset 14, -4
 2848 0002 8CB0     		sub	sp, sp, #48
 2849              	.LCFI67:
 2850              		.cfi_def_cfa_offset 56
 2851 0004 00AF     		add	r7, sp, #0
 2852              	.LCFI68:
 2853              		.cfi_def_cfa_register 7
 2854 0006 F860     		str	r0, [r7, #12]
 2855 0008 B960     		str	r1, [r7, #8]
 2856 000a 7A60     		str	r2, [r7, #4]
 2857 000c 3B60     		str	r3, [r7]
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t index;
1002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t tickstart;
1003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t deviceaddress;
1004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t numpageswritten = 0U;
 2858              		.loc 1 1004 12
 2859 000e 0023     		movs	r3, #0
 2860 0010 BB62     		str	r3, [r7, #40]
1005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t nandaddress;
1006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t nbpages = NumPageToWrite;
 2861              		.loc 1 1006 12
 2862 0012 3B68     		ldr	r3, [r7]
 2863 0014 3B62     		str	r3, [r7, #32]
1007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint16_t *buff = pBuffer;
 2864              		.loc 1 1007 13
 2865 0016 7B68     		ldr	r3, [r7, #4]
 2866 0018 FB61     		str	r3, [r7, #28]
1008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check the NAND controller state */
1010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_BUSY)
 2867              		.loc 1 1010 12
 2868 001a FB68     		ldr	r3, [r7, #12]
 2869 001c 93F82130 		ldrb	r3, [r3, #33]
 2870 0020 DBB2     		uxtb	r3, r3
 2871              		.loc 1 1010 6
 2872 0022 022B     		cmp	r3, #2
 2873 0024 01D1     		bne	.L89
1011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_BUSY;
 2874              		.loc 1 1012 12
ARM GAS  /tmp/cc0wCm8A.s 			page 87


 2875 0026 0223     		movs	r3, #2
 2876 0028 47E1     		b	.L90
 2877              	.L89:
1013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if (hnand->State == HAL_NAND_STATE_READY)
 2878              		.loc 1 1014 17
 2879 002a FB68     		ldr	r3, [r7, #12]
 2880 002c 93F82130 		ldrb	r3, [r3, #33]
 2881 0030 DBB2     		uxtb	r3, r3
 2882              		.loc 1 1014 11
 2883 0032 012B     		cmp	r3, #1
 2884 0034 40F04081 		bne	.L91
1015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process Locked */
1017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_LOCK(hnand);
 2885              		.loc 1 1017 5
 2886 0038 FB68     		ldr	r3, [r7, #12]
 2887 003a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2888 003e 012B     		cmp	r3, #1
 2889 0040 01D1     		bne	.L92
 2890              		.loc 1 1017 5 is_stmt 0 discriminator 1
 2891 0042 0223     		movs	r3, #2
 2892 0044 39E1     		b	.L90
 2893              	.L92:
 2894              		.loc 1 1017 5 discriminator 2
 2895 0046 FB68     		ldr	r3, [r7, #12]
 2896 0048 0122     		movs	r2, #1
 2897 004a 83F82020 		strb	r2, [r3, #32]
1018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
1020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_BUSY;
 2898              		.loc 1 1020 18 is_stmt 1 discriminator 2
 2899 004e FB68     		ldr	r3, [r7, #12]
 2900 0050 0222     		movs	r2, #2
 2901 0052 83F82120 		strb	r2, [r3, #33]
1021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Identify the device address */
1023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     deviceaddress = NAND_DEVICE;
 2902              		.loc 1 1023 19 discriminator 2
 2903 0056 4FF00043 		mov	r3, #-2147483648
 2904 005a BB61     		str	r3, [r7, #24]
1024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* NAND raw address calculation */
1026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     nandaddress = ARRAY_ADDRESS(pAddress, hnand);
 2905              		.loc 1 1026 19 discriminator 2
 2906 005c BB68     		ldr	r3, [r7, #8]
 2907 005e 1B88     		ldrh	r3, [r3]
 2908 0060 1946     		mov	r1, r3
 2909 0062 BB68     		ldr	r3, [r7, #8]
 2910 0064 9B88     		ldrh	r3, [r3, #4]
 2911 0066 1A46     		mov	r2, r3
 2912 0068 BB68     		ldr	r3, [r7, #8]
 2913 006a 5B88     		ldrh	r3, [r3, #2]
 2914 006c 1846     		mov	r0, r3
 2915 006e FB68     		ldr	r3, [r7, #12]
 2916 0070 9B6B     		ldr	r3, [r3, #56]
 2917 0072 03FB00F3 		mul	r3, r3, r0
ARM GAS  /tmp/cc0wCm8A.s 			page 88


 2918 0076 1344     		add	r3, r3, r2
 2919 0078 FA68     		ldr	r2, [r7, #12]
 2920 007a D26A     		ldr	r2, [r2, #44]
 2921 007c 02FB03F3 		mul	r3, r2, r3
 2922              		.loc 1 1026 17 discriminator 2
 2923 0080 0B44     		add	r3, r3, r1
 2924 0082 7B62     		str	r3, [r7, #36]
1027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Page(s) write loop */
1029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     while ((nbpages != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.BlockNbr))
 2925              		.loc 1 1029 11 discriminator 2
 2926 0084 01E1     		b	.L93
 2927              	.L104:
1030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
1031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Send write page command sequence */
1032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
 2928              		.loc 1 1032 25
 2929 0086 BB69     		ldr	r3, [r7, #24]
 2930 0088 43F48033 		orr	r3, r3, #65536
 2931              		.loc 1 1032 63
 2932 008c 0022     		movs	r2, #0
 2933 008e 1A70     		strb	r2, [r3]
 2934              	.LBB460:
 2935              	.LBB461:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2936              		.loc 2 946 3
 2937              		.syntax unified
 2938              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2939 0090 BFF34F8F 		dsb 0xF
 2940              	@ 0 "" 2
 2941              		.loc 2 947 1
 2942              		.thumb
 2943              		.syntax unified
 2944 0094 00BF     		nop
 2945              	.LBE461:
 2946              	.LBE460:
1033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       __DSB();
1034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 2947              		.loc 1 1034 25
 2948 0096 BB69     		ldr	r3, [r7, #24]
 2949 0098 43F48033 		orr	r3, r3, #65536
 2950              		.loc 1 1034 63
 2951 009c 8022     		movs	r2, #128
 2952 009e 1A70     		strb	r2, [r3]
 2953              	.LBB462:
 2954              	.LBB463:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2955              		.loc 2 946 3
 2956              		.syntax unified
 2957              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2958 00a0 BFF34F8F 		dsb 0xF
 2959              	@ 0 "" 2
 2960              		.loc 2 947 1
 2961              		.thumb
 2962              		.syntax unified
 2963 00a4 00BF     		nop
 2964              	.LBE463:
ARM GAS  /tmp/cc0wCm8A.s 			page 89


 2965              	.LBE462:
1035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       __DSB();
1036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Cards with page size <= 512 bytes */
1038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       if ((hnand->Config.PageSize) <= 512U)
 2966              		.loc 1 1038 25
 2967 00a6 FB68     		ldr	r3, [r7, #12]
 2968 00a8 5B6A     		ldr	r3, [r3, #36]
 2969              		.loc 1 1038 10
 2970 00aa B3F5007F 		cmp	r3, #512
 2971 00ae 48D8     		bhi	.L94
1039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if (((hnand->Config.BlockSize) * (hnand->Config.BlockNbr)) <= 65535U)
 2972              		.loc 1 1040 28
 2973 00b0 FB68     		ldr	r3, [r7, #12]
 2974 00b2 DB6A     		ldr	r3, [r3, #44]
 2975              		.loc 1 1040 56
 2976 00b4 FA68     		ldr	r2, [r7, #12]
 2977 00b6 126B     		ldr	r2, [r2, #48]
 2978              		.loc 1 1040 40
 2979 00b8 02FB03F3 		mul	r3, r2, r3
 2980              		.loc 1 1040 12
 2981 00bc B3F5803F 		cmp	r3, #65536
 2982 00c0 1AD2     		bcs	.L95
1041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 2983              		.loc 1 1042 29
 2984 00c2 BB69     		ldr	r3, [r7, #24]
 2985 00c4 43F40033 		orr	r3, r3, #131072
 2986              		.loc 1 1042 68
 2987 00c8 0022     		movs	r2, #0
 2988 00ca 1A70     		strb	r2, [r3]
 2989              	.LBB464:
 2990              	.LBB465:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2991              		.loc 2 946 3
 2992              		.syntax unified
 2993              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2994 00cc BFF34F8F 		dsb 0xF
 2995              	@ 0 "" 2
 2996              		.loc 2 947 1
 2997              		.thumb
 2998              		.syntax unified
 2999 00d0 00BF     		nop
 3000              	.LBE465:
 3001              	.LBE464:
1043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3002              		.loc 1 1044 29
 3003 00d2 BB69     		ldr	r3, [r7, #24]
 3004 00d4 43F40033 		orr	r3, r3, #131072
 3005              		.loc 1 1044 70
 3006 00d8 7A6A     		ldr	r2, [r7, #36]
 3007 00da D2B2     		uxtb	r2, r2
 3008              		.loc 1 1044 68
 3009 00dc 1A70     		strb	r2, [r3]
 3010              	.LBB466:
ARM GAS  /tmp/cc0wCm8A.s 			page 90


 3011              	.LBB467:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3012              		.loc 2 946 3
 3013              		.syntax unified
 3014              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3015 00de BFF34F8F 		dsb 0xF
 3016              	@ 0 "" 2
 3017              		.loc 2 947 1
 3018              		.thumb
 3019              		.syntax unified
 3020 00e2 00BF     		nop
 3021              	.LBE467:
 3022              	.LBE466:
1045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3023              		.loc 1 1046 70
 3024 00e4 7B6A     		ldr	r3, [r7, #36]
 3025 00e6 1A0A     		lsrs	r2, r3, #8
 3026              		.loc 1 1046 29
 3027 00e8 BB69     		ldr	r3, [r7, #24]
 3028 00ea 43F40033 		orr	r3, r3, #131072
 3029              		.loc 1 1046 70
 3030 00ee D2B2     		uxtb	r2, r2
 3031              		.loc 1 1046 68
 3032 00f0 1A70     		strb	r2, [r3]
 3033              	.LBB468:
 3034              	.LBB469:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3035              		.loc 2 946 3
 3036              		.syntax unified
 3037              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3038 00f2 BFF34F8F 		dsb 0xF
 3039              	@ 0 "" 2
 3040              		.loc 2 947 1
 3041              		.thumb
 3042              		.syntax unified
 3043 00f6 7DE0     		b	.L96
 3044              	.L95:
 3045              	.LBE469:
 3046              	.LBE468:
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 3047              		.loc 1 1051 29
 3048 00f8 BB69     		ldr	r3, [r7, #24]
 3049 00fa 43F40033 		orr	r3, r3, #131072
 3050              		.loc 1 1051 68
 3051 00fe 0022     		movs	r2, #0
 3052 0100 1A70     		strb	r2, [r3]
 3053              	.LBB470:
 3054              	.LBB471:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3055              		.loc 2 946 3
 3056              		.syntax unified
 3057              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/cc0wCm8A.s 			page 91


 3058 0102 BFF34F8F 		dsb 0xF
 3059              	@ 0 "" 2
 3060              		.loc 2 947 1
 3061              		.thumb
 3062              		.syntax unified
 3063 0106 00BF     		nop
 3064              	.LBE471:
 3065              	.LBE470:
1052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3066              		.loc 1 1053 29
 3067 0108 BB69     		ldr	r3, [r7, #24]
 3068 010a 43F40033 		orr	r3, r3, #131072
 3069              		.loc 1 1053 70
 3070 010e 7A6A     		ldr	r2, [r7, #36]
 3071 0110 D2B2     		uxtb	r2, r2
 3072              		.loc 1 1053 68
 3073 0112 1A70     		strb	r2, [r3]
 3074              	.LBB472:
 3075              	.LBB473:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3076              		.loc 2 946 3
 3077              		.syntax unified
 3078              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3079 0114 BFF34F8F 		dsb 0xF
 3080              	@ 0 "" 2
 3081              		.loc 2 947 1
 3082              		.thumb
 3083              		.syntax unified
 3084 0118 00BF     		nop
 3085              	.LBE473:
 3086              	.LBE472:
1054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3087              		.loc 1 1055 70
 3088 011a 7B6A     		ldr	r3, [r7, #36]
 3089 011c 1A0A     		lsrs	r2, r3, #8
 3090              		.loc 1 1055 29
 3091 011e BB69     		ldr	r3, [r7, #24]
 3092 0120 43F40033 		orr	r3, r3, #131072
 3093              		.loc 1 1055 70
 3094 0124 D2B2     		uxtb	r2, r2
 3095              		.loc 1 1055 68
 3096 0126 1A70     		strb	r2, [r3]
 3097              	.LBB474:
 3098              	.LBB475:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3099              		.loc 2 946 3
 3100              		.syntax unified
 3101              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3102 0128 BFF34F8F 		dsb 0xF
 3103              	@ 0 "" 2
 3104              		.loc 2 947 1
 3105              		.thumb
 3106              		.syntax unified
 3107 012c 00BF     		nop
 3108              	.LBE475:
ARM GAS  /tmp/cc0wCm8A.s 			page 92


 3109              	.LBE474:
1056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 3110              		.loc 1 1057 70
 3111 012e 7B6A     		ldr	r3, [r7, #36]
 3112 0130 1A0C     		lsrs	r2, r3, #16
 3113              		.loc 1 1057 29
 3114 0132 BB69     		ldr	r3, [r7, #24]
 3115 0134 43F40033 		orr	r3, r3, #131072
 3116              		.loc 1 1057 70
 3117 0138 D2B2     		uxtb	r2, r2
 3118              		.loc 1 1057 68
 3119 013a 1A70     		strb	r2, [r3]
 3120              	.LBB476:
 3121              	.LBB477:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3122              		.loc 2 946 3
 3123              		.syntax unified
 3124              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3125 013c BFF34F8F 		dsb 0xF
 3126              	@ 0 "" 2
 3127              		.loc 2 947 1
 3128              		.thumb
 3129              		.syntax unified
 3130 0140 58E0     		b	.L96
 3131              	.L94:
 3132              	.LBE477:
 3133              	.LBE476:
1058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       else /* (hnand->Config.PageSize) > 512 */
1062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if (((hnand->Config.BlockSize) * (hnand->Config.BlockNbr)) <= 65535U)
 3134              		.loc 1 1063 28
 3135 0142 FB68     		ldr	r3, [r7, #12]
 3136 0144 DB6A     		ldr	r3, [r3, #44]
 3137              		.loc 1 1063 56
 3138 0146 FA68     		ldr	r2, [r7, #12]
 3139 0148 126B     		ldr	r2, [r2, #48]
 3140              		.loc 1 1063 40
 3141 014a 02FB03F3 		mul	r3, r2, r3
 3142              		.loc 1 1063 12
 3143 014e B3F5803F 		cmp	r3, #65536
 3144 0152 22D2     		bcs	.L97
1064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 3145              		.loc 1 1065 29
 3146 0154 BB69     		ldr	r3, [r7, #24]
 3147 0156 43F40033 		orr	r3, r3, #131072
 3148              		.loc 1 1065 68
 3149 015a 0022     		movs	r2, #0
 3150 015c 1A70     		strb	r2, [r3]
 3151              	.LBB478:
 3152              	.LBB479:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3153              		.loc 2 946 3
ARM GAS  /tmp/cc0wCm8A.s 			page 93


 3154              		.syntax unified
 3155              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3156 015e BFF34F8F 		dsb 0xF
 3157              	@ 0 "" 2
 3158              		.loc 2 947 1
 3159              		.thumb
 3160              		.syntax unified
 3161 0162 00BF     		nop
 3162              	.LBE479:
 3163              	.LBE478:
1066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 3164              		.loc 1 1067 29
 3165 0164 BB69     		ldr	r3, [r7, #24]
 3166 0166 43F40033 		orr	r3, r3, #131072
 3167              		.loc 1 1067 68
 3168 016a 0022     		movs	r2, #0
 3169 016c 1A70     		strb	r2, [r3]
 3170              	.LBB480:
 3171              	.LBB481:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3172              		.loc 2 946 3
 3173              		.syntax unified
 3174              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3175 016e BFF34F8F 		dsb 0xF
 3176              	@ 0 "" 2
 3177              		.loc 2 947 1
 3178              		.thumb
 3179              		.syntax unified
 3180 0172 00BF     		nop
 3181              	.LBE481:
 3182              	.LBE480:
1068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3183              		.loc 1 1069 29
 3184 0174 BB69     		ldr	r3, [r7, #24]
 3185 0176 43F40033 		orr	r3, r3, #131072
 3186              		.loc 1 1069 70
 3187 017a 7A6A     		ldr	r2, [r7, #36]
 3188 017c D2B2     		uxtb	r2, r2
 3189              		.loc 1 1069 68
 3190 017e 1A70     		strb	r2, [r3]
 3191              	.LBB482:
 3192              	.LBB483:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3193              		.loc 2 946 3
 3194              		.syntax unified
 3195              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3196 0180 BFF34F8F 		dsb 0xF
 3197              	@ 0 "" 2
 3198              		.loc 2 947 1
 3199              		.thumb
 3200              		.syntax unified
 3201 0184 00BF     		nop
 3202              	.LBE483:
 3203              	.LBE482:
1070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
ARM GAS  /tmp/cc0wCm8A.s 			page 94


1071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3204              		.loc 1 1071 70
 3205 0186 7B6A     		ldr	r3, [r7, #36]
 3206 0188 1A0A     		lsrs	r2, r3, #8
 3207              		.loc 1 1071 29
 3208 018a BB69     		ldr	r3, [r7, #24]
 3209 018c 43F40033 		orr	r3, r3, #131072
 3210              		.loc 1 1071 70
 3211 0190 D2B2     		uxtb	r2, r2
 3212              		.loc 1 1071 68
 3213 0192 1A70     		strb	r2, [r3]
 3214              	.LBB484:
 3215              	.LBB485:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3216              		.loc 2 946 3
 3217              		.syntax unified
 3218              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3219 0194 BFF34F8F 		dsb 0xF
 3220              	@ 0 "" 2
 3221              		.loc 2 947 1
 3222              		.thumb
 3223              		.syntax unified
 3224 0198 2CE0     		b	.L96
 3225              	.L97:
 3226              	.LBE485:
 3227              	.LBE484:
1072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 3228              		.loc 1 1076 29
 3229 019a BB69     		ldr	r3, [r7, #24]
 3230 019c 43F40033 		orr	r3, r3, #131072
 3231              		.loc 1 1076 68
 3232 01a0 0022     		movs	r2, #0
 3233 01a2 1A70     		strb	r2, [r3]
 3234              	.LBB486:
 3235              	.LBB487:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3236              		.loc 2 946 3
 3237              		.syntax unified
 3238              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3239 01a4 BFF34F8F 		dsb 0xF
 3240              	@ 0 "" 2
 3241              		.loc 2 947 1
 3242              		.thumb
 3243              		.syntax unified
 3244 01a8 00BF     		nop
 3245              	.LBE487:
 3246              	.LBE486:
1077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 3247              		.loc 1 1078 29
 3248 01aa BB69     		ldr	r3, [r7, #24]
 3249 01ac 43F40033 		orr	r3, r3, #131072
 3250              		.loc 1 1078 68
ARM GAS  /tmp/cc0wCm8A.s 			page 95


 3251 01b0 0022     		movs	r2, #0
 3252 01b2 1A70     		strb	r2, [r3]
 3253              	.LBB488:
 3254              	.LBB489:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3255              		.loc 2 946 3
 3256              		.syntax unified
 3257              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3258 01b4 BFF34F8F 		dsb 0xF
 3259              	@ 0 "" 2
 3260              		.loc 2 947 1
 3261              		.thumb
 3262              		.syntax unified
 3263 01b8 00BF     		nop
 3264              	.LBE489:
 3265              	.LBE488:
1079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3266              		.loc 1 1080 29
 3267 01ba BB69     		ldr	r3, [r7, #24]
 3268 01bc 43F40033 		orr	r3, r3, #131072
 3269              		.loc 1 1080 70
 3270 01c0 7A6A     		ldr	r2, [r7, #36]
 3271 01c2 D2B2     		uxtb	r2, r2
 3272              		.loc 1 1080 68
 3273 01c4 1A70     		strb	r2, [r3]
 3274              	.LBB490:
 3275              	.LBB491:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3276              		.loc 2 946 3
 3277              		.syntax unified
 3278              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3279 01c6 BFF34F8F 		dsb 0xF
 3280              	@ 0 "" 2
 3281              		.loc 2 947 1
 3282              		.thumb
 3283              		.syntax unified
 3284 01ca 00BF     		nop
 3285              	.LBE491:
 3286              	.LBE490:
1081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3287              		.loc 1 1082 70
 3288 01cc 7B6A     		ldr	r3, [r7, #36]
 3289 01ce 1A0A     		lsrs	r2, r3, #8
 3290              		.loc 1 1082 29
 3291 01d0 BB69     		ldr	r3, [r7, #24]
 3292 01d2 43F40033 		orr	r3, r3, #131072
 3293              		.loc 1 1082 70
 3294 01d6 D2B2     		uxtb	r2, r2
 3295              		.loc 1 1082 68
 3296 01d8 1A70     		strb	r2, [r3]
 3297              	.LBB492:
 3298              	.LBB493:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3299              		.loc 2 946 3
 3300              		.syntax unified
ARM GAS  /tmp/cc0wCm8A.s 			page 96


 3301              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3302 01da BFF34F8F 		dsb 0xF
 3303              	@ 0 "" 2
 3304              		.loc 2 947 1
 3305              		.thumb
 3306              		.syntax unified
 3307 01de 00BF     		nop
 3308              	.LBE493:
 3309              	.LBE492:
1083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 3310              		.loc 1 1084 70
 3311 01e0 7B6A     		ldr	r3, [r7, #36]
 3312 01e2 1A0C     		lsrs	r2, r3, #16
 3313              		.loc 1 1084 29
 3314 01e4 BB69     		ldr	r3, [r7, #24]
 3315 01e6 43F40033 		orr	r3, r3, #131072
 3316              		.loc 1 1084 70
 3317 01ea D2B2     		uxtb	r2, r2
 3318              		.loc 1 1084 68
 3319 01ec 1A70     		strb	r2, [r3]
 3320              	.LBB494:
 3321              	.LBB495:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3322              		.loc 2 946 3
 3323              		.syntax unified
 3324              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3325 01ee BFF34F8F 		dsb 0xF
 3326              	@ 0 "" 2
 3327              		.loc 2 947 1
 3328              		.thumb
 3329              		.syntax unified
 3330 01f2 00BF     		nop
 3331              	.L96:
 3332              	.LBE495:
 3333              	.LBE494:
1085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Calculate PageSize */
1090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       if (hnand->Init.MemoryDataWidth == FMC_NAND_MEM_BUS_WIDTH_8)
 3334              		.loc 1 1090 22
 3335 01f4 FB68     		ldr	r3, [r7, #12]
 3336 01f6 DB68     		ldr	r3, [r3, #12]
 3337              		.loc 1 1090 10
 3338 01f8 002B     		cmp	r3, #0
 3339 01fa 04D1     		bne	.L98
1091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         hnand->Config.PageSize = hnand->Config.PageSize / 2U;
 3340              		.loc 1 1092 47
 3341 01fc FB68     		ldr	r3, [r7, #12]
 3342 01fe 5B6A     		ldr	r3, [r3, #36]
 3343              		.loc 1 1092 57
 3344 0200 5A08     		lsrs	r2, r3, #1
 3345              		.loc 1 1092 32
 3346 0202 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc0wCm8A.s 			page 97


 3347 0204 5A62     		str	r2, [r3, #36]
 3348              	.L98:
1093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       else
1095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Do nothing */
1097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Keep the same PageSize for FMC_NAND_MEM_BUS_WIDTH_16*/
1098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Write data to memory */
1101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       for (index = 0U; index < hnand->Config.PageSize; index++)
 3349              		.loc 1 1101 18
 3350 0206 0023     		movs	r3, #0
 3351 0208 FB62     		str	r3, [r7, #44]
 3352              		.loc 1 1101 7
 3353 020a 0CE0     		b	.L99
 3354              	.L100:
1102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint16_t *)deviceaddress = *buff;
 3355              		.loc 1 1103 10 discriminator 3
 3356 020c BB69     		ldr	r3, [r7, #24]
 3357              		.loc 1 1103 43 discriminator 3
 3358 020e FA69     		ldr	r2, [r7, #28]
 3359 0210 1288     		ldrh	r2, [r2]
 3360              		.loc 1 1103 41 discriminator 3
 3361 0212 1A80     		strh	r2, [r3]	@ movhi
1104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         buff++;
 3362              		.loc 1 1104 13 discriminator 3
 3363 0214 FB69     		ldr	r3, [r7, #28]
 3364 0216 0233     		adds	r3, r3, #2
 3365 0218 FB61     		str	r3, [r7, #28]
 3366              	.LBB496:
 3367              	.LBB497:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3368              		.loc 2 946 3 discriminator 3
 3369              		.syntax unified
 3370              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3371 021a BFF34F8F 		dsb 0xF
 3372              	@ 0 "" 2
 3373              		.loc 2 947 1 discriminator 3
 3374              		.thumb
 3375              		.syntax unified
 3376 021e 00BF     		nop
 3377              	.LBE497:
 3378              	.LBE496:
1101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 3379              		.loc 1 1101 61 discriminator 3
 3380 0220 FB6A     		ldr	r3, [r7, #44]
 3381 0222 0133     		adds	r3, r3, #1
 3382 0224 FB62     		str	r3, [r7, #44]
 3383              	.L99:
1101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 3384              		.loc 1 1101 45 discriminator 1
 3385 0226 FB68     		ldr	r3, [r7, #12]
 3386 0228 5B6A     		ldr	r3, [r3, #36]
1101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 3387              		.loc 1 1101 7 discriminator 1
ARM GAS  /tmp/cc0wCm8A.s 			page 98


 3388 022a FA6A     		ldr	r2, [r7, #44]
 3389 022c 9A42     		cmp	r2, r3
 3390 022e EDD3     		bcc	.L100
1105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE_TRUE1;
 3391              		.loc 1 1108 25
 3392 0230 BB69     		ldr	r3, [r7, #24]
 3393 0232 43F48033 		orr	r3, r3, #65536
 3394              		.loc 1 1108 63
 3395 0236 1022     		movs	r2, #16
 3396 0238 1A70     		strb	r2, [r3]
 3397              	.LBB498:
 3398              	.LBB499:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3399              		.loc 2 946 3
 3400              		.syntax unified
 3401              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3402 023a BFF34F8F 		dsb 0xF
 3403              	@ 0 "" 2
 3404              		.loc 2 947 1
 3405              		.thumb
 3406              		.syntax unified
 3407 023e 00BF     		nop
 3408              	.LBE499:
 3409              	.LBE498:
1109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       __DSB();
1110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Get tick */
1112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       tickstart = HAL_GetTick();
 3410              		.loc 1 1112 19
 3411 0240 FFF7FEFF 		bl	HAL_GetTick
 3412 0244 7861     		str	r0, [r7, #20]
1113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Read status until NAND is ready */
1115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       while (HAL_NAND_Read_Status(hnand) != NAND_READY)
 3413              		.loc 1 1115 13
 3414 0246 11E0     		b	.L101
 3415              	.L102:
1116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if ((HAL_GetTick() - tickstart) > NAND_WRITE_TIMEOUT)
 3416              		.loc 1 1117 14
 3417 0248 FFF7FEFF 		bl	HAL_GetTick
 3418 024c 0246     		mov	r2, r0
 3419              		.loc 1 1117 28
 3420 024e 7B69     		ldr	r3, [r7, #20]
 3421 0250 D31A     		subs	r3, r2, r3
 3422              		.loc 1 1117 12
 3423 0252 B3F1807F 		cmp	r3, #16777216
 3424 0256 09D9     		bls	.L101
1118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           /* Update the NAND controller state */
1120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           hnand->State = HAL_NAND_STATE_ERROR;
 3425              		.loc 1 1120 24
 3426 0258 FB68     		ldr	r3, [r7, #12]
 3427 025a 0322     		movs	r2, #3
ARM GAS  /tmp/cc0wCm8A.s 			page 99


 3428 025c 83F82120 		strb	r2, [r3, #33]
1121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           /* Process unlocked */
1123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __HAL_UNLOCK(hnand);
 3429              		.loc 1 1123 11
 3430 0260 FB68     		ldr	r3, [r7, #12]
 3431 0262 0022     		movs	r2, #0
 3432 0264 83F82020 		strb	r2, [r3, #32]
1124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           return HAL_TIMEOUT;
 3433              		.loc 1 1125 18
 3434 0268 0323     		movs	r3, #3
 3435 026a 26E0     		b	.L90
 3436              	.L101:
1115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 3437              		.loc 1 1115 14
 3438 026c F868     		ldr	r0, [r7, #12]
 3439 026e FFF7FEFF 		bl	HAL_NAND_Read_Status
 3440 0272 0346     		mov	r3, r0
1115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 3441              		.loc 1 1115 13
 3442 0274 402B     		cmp	r3, #64
 3443 0276 E7D1     		bne	.L102
1126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Increment written pages number */
1130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       numpageswritten++;
 3444              		.loc 1 1130 22
 3445 0278 BB6A     		ldr	r3, [r7, #40]
 3446 027a 0133     		adds	r3, r3, #1
 3447 027c BB62     		str	r3, [r7, #40]
1131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Decrement pages to write */
1133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       nbpages--;
 3448              		.loc 1 1133 14
 3449 027e 3B6A     		ldr	r3, [r7, #32]
 3450 0280 013B     		subs	r3, r3, #1
 3451 0282 3B62     		str	r3, [r7, #32]
1134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Increment the NAND address */
1136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       nandaddress = (uint32_t)(nandaddress + 1U);
 3452              		.loc 1 1136 19
 3453 0284 7B6A     		ldr	r3, [r7, #36]
 3454 0286 0133     		adds	r3, r3, #1
 3455 0288 7B62     		str	r3, [r7, #36]
 3456              	.L93:
1029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 3457              		.loc 1 1029 11
 3458 028a 3B6A     		ldr	r3, [r7, #32]
 3459 028c 002B     		cmp	r3, #0
 3460 028e 09D0     		beq	.L103
1029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 3461              		.loc 1 1029 61 discriminator 1
 3462 0290 FB68     		ldr	r3, [r7, #12]
 3463 0292 DB6A     		ldr	r3, [r3, #44]
1029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
ARM GAS  /tmp/cc0wCm8A.s 			page 100


 3464              		.loc 1 1029 89 discriminator 1
 3465 0294 FA68     		ldr	r2, [r7, #12]
 3466 0296 126B     		ldr	r2, [r2, #48]
1029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 3467              		.loc 1 1029 73 discriminator 1
 3468 0298 02FB03F3 		mul	r3, r2, r3
1029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 3469              		.loc 1 1029 28 discriminator 1
 3470 029c 7A6A     		ldr	r2, [r7, #36]
 3471 029e 9A42     		cmp	r2, r3
 3472 02a0 FFF4F1AE 		bcc	.L104
 3473              	.L103:
1137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     }
1138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
1140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_READY;
 3474              		.loc 1 1140 18
 3475 02a4 FB68     		ldr	r3, [r7, #12]
 3476 02a6 0122     		movs	r2, #1
 3477 02a8 83F82120 		strb	r2, [r3, #33]
1141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process unlocked */
1143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_UNLOCK(hnand);
 3478              		.loc 1 1143 5
 3479 02ac FB68     		ldr	r3, [r7, #12]
 3480 02ae 0022     		movs	r2, #0
 3481 02b0 83F82020 		strb	r2, [r3, #32]
1144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
1146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_ERROR;
1148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return HAL_OK;
 3482              		.loc 1 1150 10
 3483 02b4 0023     		movs	r3, #0
 3484 02b6 00E0     		b	.L90
 3485              	.L91:
1147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 3486              		.loc 1 1147 12
 3487 02b8 0123     		movs	r3, #1
 3488              	.L90:
1151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 3489              		.loc 1 1151 1
 3490 02ba 1846     		mov	r0, r3
 3491 02bc 3037     		adds	r7, r7, #48
 3492              	.LCFI69:
 3493              		.cfi_def_cfa_offset 8
 3494 02be BD46     		mov	sp, r7
 3495              	.LCFI70:
 3496              		.cfi_def_cfa_register 13
 3497              		@ sp needed
 3498 02c0 80BD     		pop	{r7, pc}
 3499              		.cfi_endproc
 3500              	.LFE343:
 3502              		.section	.text.HAL_NAND_Read_SpareArea_8b,"ax",%progbits
 3503              		.align	1
ARM GAS  /tmp/cc0wCm8A.s 			page 101


 3504              		.global	HAL_NAND_Read_SpareArea_8b
 3505              		.syntax unified
 3506              		.thumb
 3507              		.thumb_func
 3508              		.fpu fpv5-d16
 3510              	HAL_NAND_Read_SpareArea_8b:
 3511              	.LFB344:
1152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
1154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Read Spare area(s) from NAND memory (8-bits addressing)
1155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
1156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
1157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
1158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pBuffer pointer to source buffer to write
1159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  NumSpareAreaToRead Number of spare area to read
1160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
1161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
1162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Read_SpareArea_8b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddre
1163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****                                              uint32_t NumSpareAreaToRead)
1164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 3512              		.loc 1 1164 1
 3513              		.cfi_startproc
 3514              		@ args = 0, pretend = 0, frame = 48
 3515              		@ frame_needed = 1, uses_anonymous_args = 0
 3516 0000 80B5     		push	{r7, lr}
 3517              	.LCFI71:
 3518              		.cfi_def_cfa_offset 8
 3519              		.cfi_offset 7, -8
 3520              		.cfi_offset 14, -4
 3521 0002 8CB0     		sub	sp, sp, #48
 3522              	.LCFI72:
 3523              		.cfi_def_cfa_offset 56
 3524 0004 00AF     		add	r7, sp, #0
 3525              	.LCFI73:
 3526              		.cfi_def_cfa_register 7
 3527 0006 F860     		str	r0, [r7, #12]
 3528 0008 B960     		str	r1, [r7, #8]
 3529 000a 7A60     		str	r2, [r7, #4]
 3530 000c 3B60     		str	r3, [r7]
1165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t index;
1166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t tickstart;
1167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t deviceaddress;
1168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t numsparearearead = 0U;
 3531              		.loc 1 1168 12
 3532 000e 0023     		movs	r3, #0
 3533 0010 BB62     		str	r3, [r7, #40]
1169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t nandaddress;
1170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t columnaddress;
1171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t nbspare = NumSpareAreaToRead;
 3534              		.loc 1 1171 12
 3535 0012 3B68     		ldr	r3, [r7]
 3536 0014 3B62     		str	r3, [r7, #32]
1172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint8_t *buff = pBuffer;
 3537              		.loc 1 1172 12
 3538 0016 7B68     		ldr	r3, [r7, #4]
 3539 0018 FB61     		str	r3, [r7, #28]
1173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
ARM GAS  /tmp/cc0wCm8A.s 			page 102


1174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check the NAND controller state */
1175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_BUSY)
 3540              		.loc 1 1175 12
 3541 001a FB68     		ldr	r3, [r7, #12]
 3542 001c 93F82130 		ldrb	r3, [r3, #33]
 3543 0020 DBB2     		uxtb	r3, r3
 3544              		.loc 1 1175 6
 3545 0022 022B     		cmp	r3, #2
 3546 0024 01D1     		bne	.L107
1176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_BUSY;
 3547              		.loc 1 1177 12
 3548 0026 0223     		movs	r3, #2
 3549 0028 51E1     		b	.L108
 3550              	.L107:
1178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if (hnand->State == HAL_NAND_STATE_READY)
 3551              		.loc 1 1179 17
 3552 002a FB68     		ldr	r3, [r7, #12]
 3553 002c 93F82130 		ldrb	r3, [r3, #33]
 3554 0030 DBB2     		uxtb	r3, r3
 3555              		.loc 1 1179 11
 3556 0032 012B     		cmp	r3, #1
 3557 0034 40F04A81 		bne	.L109
1180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process Locked */
1182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_LOCK(hnand);
 3558              		.loc 1 1182 5
 3559 0038 FB68     		ldr	r3, [r7, #12]
 3560 003a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3561 003e 012B     		cmp	r3, #1
 3562 0040 01D1     		bne	.L110
 3563              		.loc 1 1182 5 is_stmt 0 discriminator 1
 3564 0042 0223     		movs	r3, #2
 3565 0044 43E1     		b	.L108
 3566              	.L110:
 3567              		.loc 1 1182 5 discriminator 2
 3568 0046 FB68     		ldr	r3, [r7, #12]
 3569 0048 0122     		movs	r2, #1
 3570 004a 83F82020 		strb	r2, [r3, #32]
1183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
1185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_BUSY;
 3571              		.loc 1 1185 18 is_stmt 1 discriminator 2
 3572 004e FB68     		ldr	r3, [r7, #12]
 3573 0050 0222     		movs	r2, #2
 3574 0052 83F82120 		strb	r2, [r3, #33]
1186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Identify the device address */
1188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     deviceaddress = NAND_DEVICE;
 3575              		.loc 1 1188 19 discriminator 2
 3576 0056 4FF00043 		mov	r3, #-2147483648
 3577 005a BB61     		str	r3, [r7, #24]
1189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* NAND raw address calculation */
1191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     nandaddress = ARRAY_ADDRESS(pAddress, hnand);
 3578              		.loc 1 1191 19 discriminator 2
ARM GAS  /tmp/cc0wCm8A.s 			page 103


 3579 005c BB68     		ldr	r3, [r7, #8]
 3580 005e 1B88     		ldrh	r3, [r3]
 3581 0060 1946     		mov	r1, r3
 3582 0062 BB68     		ldr	r3, [r7, #8]
 3583 0064 9B88     		ldrh	r3, [r3, #4]
 3584 0066 1A46     		mov	r2, r3
 3585 0068 BB68     		ldr	r3, [r7, #8]
 3586 006a 5B88     		ldrh	r3, [r3, #2]
 3587 006c 1846     		mov	r0, r3
 3588 006e FB68     		ldr	r3, [r7, #12]
 3589 0070 9B6B     		ldr	r3, [r3, #56]
 3590 0072 03FB00F3 		mul	r3, r3, r0
 3591 0076 1344     		add	r3, r3, r2
 3592 0078 FA68     		ldr	r2, [r7, #12]
 3593 007a D26A     		ldr	r2, [r2, #44]
 3594 007c 02FB03F3 		mul	r3, r2, r3
 3595              		.loc 1 1191 17 discriminator 2
 3596 0080 0B44     		add	r3, r3, r1
 3597 0082 7B62     		str	r3, [r7, #36]
1192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Column in page address */
1194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     columnaddress = COLUMN_ADDRESS(hnand);
 3598              		.loc 1 1194 19 discriminator 2
 3599 0084 FB68     		ldr	r3, [r7, #12]
 3600 0086 5B6A     		ldr	r3, [r3, #36]
 3601 0088 7B61     		str	r3, [r7, #20]
1195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Spare area(s) read loop */
1197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     while ((nbspare != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.BlockNbr))
 3602              		.loc 1 1197 11 discriminator 2
 3603 008a 08E1     		b	.L111
 3604              	.L122:
1198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
1199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Cards with page size <= 512 bytes */
1200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       if ((hnand->Config.PageSize) <= 512U)
 3605              		.loc 1 1200 25
 3606 008c FB68     		ldr	r3, [r7, #12]
 3607 008e 5B6A     		ldr	r3, [r3, #36]
 3608              		.loc 1 1200 10
 3609 0090 B3F5007F 		cmp	r3, #512
 3610 0094 50D8     		bhi	.L112
1201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Send read spare area command sequence */
1203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_C;
 3611              		.loc 1 1203 27
 3612 0096 BB69     		ldr	r3, [r7, #24]
 3613 0098 43F48033 		orr	r3, r3, #65536
 3614              		.loc 1 1203 65
 3615 009c 5022     		movs	r2, #80
 3616 009e 1A70     		strb	r2, [r3]
 3617              	.LBB500:
 3618              	.LBB501:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3619              		.loc 2 946 3
 3620              		.syntax unified
 3621              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3622 00a0 BFF34F8F 		dsb 0xF
ARM GAS  /tmp/cc0wCm8A.s 			page 104


 3623              	@ 0 "" 2
 3624              		.loc 2 947 1
 3625              		.thumb
 3626              		.syntax unified
 3627 00a4 00BF     		nop
 3628              	.LBE501:
 3629              	.LBE500:
1204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if (((hnand->Config.BlockSize) * (hnand->Config.BlockNbr)) <= 65535U)
 3630              		.loc 1 1206 28
 3631 00a6 FB68     		ldr	r3, [r7, #12]
 3632 00a8 DB6A     		ldr	r3, [r3, #44]
 3633              		.loc 1 1206 56
 3634 00aa FA68     		ldr	r2, [r7, #12]
 3635 00ac 126B     		ldr	r2, [r2, #48]
 3636              		.loc 1 1206 40
 3637 00ae 02FB03F3 		mul	r3, r2, r3
 3638              		.loc 1 1206 12
 3639 00b2 B3F5803F 		cmp	r3, #65536
 3640 00b6 1AD2     		bcs	.L113
1207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 3641              		.loc 1 1208 29
 3642 00b8 BB69     		ldr	r3, [r7, #24]
 3643 00ba 43F40033 		orr	r3, r3, #131072
 3644              		.loc 1 1208 68
 3645 00be 0022     		movs	r2, #0
 3646 00c0 1A70     		strb	r2, [r3]
 3647              	.LBB502:
 3648              	.LBB503:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3649              		.loc 2 946 3
 3650              		.syntax unified
 3651              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3652 00c2 BFF34F8F 		dsb 0xF
 3653              	@ 0 "" 2
 3654              		.loc 2 947 1
 3655              		.thumb
 3656              		.syntax unified
 3657 00c6 00BF     		nop
 3658              	.LBE503:
 3659              	.LBE502:
1209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3660              		.loc 1 1210 29
 3661 00c8 BB69     		ldr	r3, [r7, #24]
 3662 00ca 43F40033 		orr	r3, r3, #131072
 3663              		.loc 1 1210 70
 3664 00ce 7A6A     		ldr	r2, [r7, #36]
 3665 00d0 D2B2     		uxtb	r2, r2
 3666              		.loc 1 1210 68
 3667 00d2 1A70     		strb	r2, [r3]
 3668              	.LBB504:
 3669              	.LBB505:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3670              		.loc 2 946 3
ARM GAS  /tmp/cc0wCm8A.s 			page 105


 3671              		.syntax unified
 3672              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3673 00d4 BFF34F8F 		dsb 0xF
 3674              	@ 0 "" 2
 3675              		.loc 2 947 1
 3676              		.thumb
 3677              		.syntax unified
 3678 00d8 00BF     		nop
 3679              	.LBE505:
 3680              	.LBE504:
1211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3681              		.loc 1 1212 70
 3682 00da 7B6A     		ldr	r3, [r7, #36]
 3683 00dc 1A0A     		lsrs	r2, r3, #8
 3684              		.loc 1 1212 29
 3685 00de BB69     		ldr	r3, [r7, #24]
 3686 00e0 43F40033 		orr	r3, r3, #131072
 3687              		.loc 1 1212 70
 3688 00e4 D2B2     		uxtb	r2, r2
 3689              		.loc 1 1212 68
 3690 00e6 1A70     		strb	r2, [r3]
 3691              	.LBB506:
 3692              	.LBB507:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3693              		.loc 2 946 3
 3694              		.syntax unified
 3695              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3696 00e8 BFF34F8F 		dsb 0xF
 3697              	@ 0 "" 2
 3698              		.loc 2 947 1
 3699              		.thumb
 3700              		.syntax unified
 3701 00ec 8BE0     		b	.L114
 3702              	.L113:
 3703              	.LBE507:
 3704              	.LBE506:
1213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 3705              		.loc 1 1217 29
 3706 00ee BB69     		ldr	r3, [r7, #24]
 3707 00f0 43F40033 		orr	r3, r3, #131072
 3708              		.loc 1 1217 68
 3709 00f4 0022     		movs	r2, #0
 3710 00f6 1A70     		strb	r2, [r3]
 3711              	.LBB508:
 3712              	.LBB509:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3713              		.loc 2 946 3
 3714              		.syntax unified
 3715              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3716 00f8 BFF34F8F 		dsb 0xF
 3717              	@ 0 "" 2
 3718              		.loc 2 947 1
ARM GAS  /tmp/cc0wCm8A.s 			page 106


 3719              		.thumb
 3720              		.syntax unified
 3721 00fc 00BF     		nop
 3722              	.LBE509:
 3723              	.LBE508:
1218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3724              		.loc 1 1219 29
 3725 00fe BB69     		ldr	r3, [r7, #24]
 3726 0100 43F40033 		orr	r3, r3, #131072
 3727              		.loc 1 1219 70
 3728 0104 7A6A     		ldr	r2, [r7, #36]
 3729 0106 D2B2     		uxtb	r2, r2
 3730              		.loc 1 1219 68
 3731 0108 1A70     		strb	r2, [r3]
 3732              	.LBB510:
 3733              	.LBB511:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3734              		.loc 2 946 3
 3735              		.syntax unified
 3736              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3737 010a BFF34F8F 		dsb 0xF
 3738              	@ 0 "" 2
 3739              		.loc 2 947 1
 3740              		.thumb
 3741              		.syntax unified
 3742 010e 00BF     		nop
 3743              	.LBE511:
 3744              	.LBE510:
1220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3745              		.loc 1 1221 70
 3746 0110 7B6A     		ldr	r3, [r7, #36]
 3747 0112 1A0A     		lsrs	r2, r3, #8
 3748              		.loc 1 1221 29
 3749 0114 BB69     		ldr	r3, [r7, #24]
 3750 0116 43F40033 		orr	r3, r3, #131072
 3751              		.loc 1 1221 70
 3752 011a D2B2     		uxtb	r2, r2
 3753              		.loc 1 1221 68
 3754 011c 1A70     		strb	r2, [r3]
 3755              	.LBB512:
 3756              	.LBB513:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3757              		.loc 2 946 3
 3758              		.syntax unified
 3759              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3760 011e BFF34F8F 		dsb 0xF
 3761              	@ 0 "" 2
 3762              		.loc 2 947 1
 3763              		.thumb
 3764              		.syntax unified
 3765 0122 00BF     		nop
 3766              	.LBE513:
 3767              	.LBE512:
1222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
ARM GAS  /tmp/cc0wCm8A.s 			page 107


 3768              		.loc 1 1223 70
 3769 0124 7B6A     		ldr	r3, [r7, #36]
 3770 0126 1A0C     		lsrs	r2, r3, #16
 3771              		.loc 1 1223 29
 3772 0128 BB69     		ldr	r3, [r7, #24]
 3773 012a 43F40033 		orr	r3, r3, #131072
 3774              		.loc 1 1223 70
 3775 012e D2B2     		uxtb	r2, r2
 3776              		.loc 1 1223 68
 3777 0130 1A70     		strb	r2, [r3]
 3778              	.LBB514:
 3779              	.LBB515:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3780              		.loc 2 946 3
 3781              		.syntax unified
 3782              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3783 0132 BFF34F8F 		dsb 0xF
 3784              	@ 0 "" 2
 3785              		.loc 2 947 1
 3786              		.thumb
 3787              		.syntax unified
 3788 0136 66E0     		b	.L114
 3789              	.L112:
 3790              	.LBE515:
 3791              	.LBE514:
1224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       else /* (hnand->Config.PageSize) > 512 */
1228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Send read spare area command sequence */
1230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
 3792              		.loc 1 1230 27
 3793 0138 BB69     		ldr	r3, [r7, #24]
 3794 013a 43F48033 		orr	r3, r3, #65536
 3795              		.loc 1 1230 65
 3796 013e 0022     		movs	r2, #0
 3797 0140 1A70     		strb	r2, [r3]
 3798              	.LBB516:
 3799              	.LBB517:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3800              		.loc 2 946 3
 3801              		.syntax unified
 3802              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3803 0142 BFF34F8F 		dsb 0xF
 3804              	@ 0 "" 2
 3805              		.loc 2 947 1
 3806              		.thumb
 3807              		.syntax unified
 3808 0146 00BF     		nop
 3809              	.LBE517:
 3810              	.LBE516:
1231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if (((hnand->Config.BlockSize) * (hnand->Config.BlockNbr)) <= 65535U)
 3811              		.loc 1 1233 28
 3812 0148 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc0wCm8A.s 			page 108


 3813 014a DB6A     		ldr	r3, [r3, #44]
 3814              		.loc 1 1233 56
 3815 014c FA68     		ldr	r2, [r7, #12]
 3816 014e 126B     		ldr	r2, [r2, #48]
 3817              		.loc 1 1233 40
 3818 0150 02FB03F3 		mul	r3, r2, r3
 3819              		.loc 1 1233 12
 3820 0154 B3F5803F 		cmp	r3, #65536
 3821 0158 25D2     		bcs	.L115
1234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress
 3822              		.loc 1 1235 29
 3823 015a BB69     		ldr	r3, [r7, #24]
 3824 015c 43F40033 		orr	r3, r3, #131072
 3825              		.loc 1 1235 70
 3826 0160 7A69     		ldr	r2, [r7, #20]
 3827 0162 D2B2     		uxtb	r2, r2
 3828              		.loc 1 1235 68
 3829 0164 1A70     		strb	r2, [r3]
 3830              	.LBB518:
 3831              	.LBB519:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3832              		.loc 2 946 3
 3833              		.syntax unified
 3834              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3835 0166 BFF34F8F 		dsb 0xF
 3836              	@ 0 "" 2
 3837              		.loc 2 947 1
 3838              		.thumb
 3839              		.syntax unified
 3840 016a 00BF     		nop
 3841              	.LBE519:
 3842              	.LBE518:
1236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress
 3843              		.loc 1 1237 70
 3844 016c 7B69     		ldr	r3, [r7, #20]
 3845 016e 1A0A     		lsrs	r2, r3, #8
 3846              		.loc 1 1237 29
 3847 0170 BB69     		ldr	r3, [r7, #24]
 3848 0172 43F40033 		orr	r3, r3, #131072
 3849              		.loc 1 1237 70
 3850 0176 D2B2     		uxtb	r2, r2
 3851              		.loc 1 1237 68
 3852 0178 1A70     		strb	r2, [r3]
 3853              	.LBB520:
 3854              	.LBB521:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3855              		.loc 2 946 3
 3856              		.syntax unified
 3857              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3858 017a BFF34F8F 		dsb 0xF
 3859              	@ 0 "" 2
 3860              		.loc 2 947 1
 3861              		.thumb
 3862              		.syntax unified
 3863 017e 00BF     		nop
ARM GAS  /tmp/cc0wCm8A.s 			page 109


 3864              	.LBE521:
 3865              	.LBE520:
1238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3866              		.loc 1 1239 29
 3867 0180 BB69     		ldr	r3, [r7, #24]
 3868 0182 43F40033 		orr	r3, r3, #131072
 3869              		.loc 1 1239 70
 3870 0186 7A6A     		ldr	r2, [r7, #36]
 3871 0188 D2B2     		uxtb	r2, r2
 3872              		.loc 1 1239 68
 3873 018a 1A70     		strb	r2, [r3]
 3874              	.LBB522:
 3875              	.LBB523:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3876              		.loc 2 946 3
 3877              		.syntax unified
 3878              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3879 018c BFF34F8F 		dsb 0xF
 3880              	@ 0 "" 2
 3881              		.loc 2 947 1
 3882              		.thumb
 3883              		.syntax unified
 3884 0190 00BF     		nop
 3885              	.LBE523:
 3886              	.LBE522:
1240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3887              		.loc 1 1241 70
 3888 0192 7B6A     		ldr	r3, [r7, #36]
 3889 0194 1A0A     		lsrs	r2, r3, #8
 3890              		.loc 1 1241 29
 3891 0196 BB69     		ldr	r3, [r7, #24]
 3892 0198 43F40033 		orr	r3, r3, #131072
 3893              		.loc 1 1241 70
 3894 019c D2B2     		uxtb	r2, r2
 3895              		.loc 1 1241 68
 3896 019e 1A70     		strb	r2, [r3]
 3897              	.LBB524:
 3898              	.LBB525:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3899              		.loc 2 946 3
 3900              		.syntax unified
 3901              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3902 01a0 BFF34F8F 		dsb 0xF
 3903              	@ 0 "" 2
 3904              		.loc 2 947 1
 3905              		.thumb
 3906              		.syntax unified
 3907 01a4 2FE0     		b	.L114
 3908              	.L115:
 3909              	.LBE525:
 3910              	.LBE524:
1242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
ARM GAS  /tmp/cc0wCm8A.s 			page 110


1246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress
 3911              		.loc 1 1246 29
 3912 01a6 BB69     		ldr	r3, [r7, #24]
 3913 01a8 43F40033 		orr	r3, r3, #131072
 3914              		.loc 1 1246 70
 3915 01ac 7A69     		ldr	r2, [r7, #20]
 3916 01ae D2B2     		uxtb	r2, r2
 3917              		.loc 1 1246 68
 3918 01b0 1A70     		strb	r2, [r3]
 3919              	.LBB526:
 3920              	.LBB527:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3921              		.loc 2 946 3
 3922              		.syntax unified
 3923              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3924 01b2 BFF34F8F 		dsb 0xF
 3925              	@ 0 "" 2
 3926              		.loc 2 947 1
 3927              		.thumb
 3928              		.syntax unified
 3929 01b6 00BF     		nop
 3930              	.LBE527:
 3931              	.LBE526:
1247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress
 3932              		.loc 1 1248 70
 3933 01b8 7B69     		ldr	r3, [r7, #20]
 3934 01ba 1A0A     		lsrs	r2, r3, #8
 3935              		.loc 1 1248 29
 3936 01bc BB69     		ldr	r3, [r7, #24]
 3937 01be 43F40033 		orr	r3, r3, #131072
 3938              		.loc 1 1248 70
 3939 01c2 D2B2     		uxtb	r2, r2
 3940              		.loc 1 1248 68
 3941 01c4 1A70     		strb	r2, [r3]
 3942              	.LBB528:
 3943              	.LBB529:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3944              		.loc 2 946 3
 3945              		.syntax unified
 3946              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3947 01c6 BFF34F8F 		dsb 0xF
 3948              	@ 0 "" 2
 3949              		.loc 2 947 1
 3950              		.thumb
 3951              		.syntax unified
 3952 01ca 00BF     		nop
 3953              	.LBE529:
 3954              	.LBE528:
1249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3955              		.loc 1 1250 29
 3956 01cc BB69     		ldr	r3, [r7, #24]
 3957 01ce 43F40033 		orr	r3, r3, #131072
 3958              		.loc 1 1250 70
 3959 01d2 7A6A     		ldr	r2, [r7, #36]
 3960 01d4 D2B2     		uxtb	r2, r2
ARM GAS  /tmp/cc0wCm8A.s 			page 111


 3961              		.loc 1 1250 68
 3962 01d6 1A70     		strb	r2, [r3]
 3963              	.LBB530:
 3964              	.LBB531:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3965              		.loc 2 946 3
 3966              		.syntax unified
 3967              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3968 01d8 BFF34F8F 		dsb 0xF
 3969              	@ 0 "" 2
 3970              		.loc 2 947 1
 3971              		.thumb
 3972              		.syntax unified
 3973 01dc 00BF     		nop
 3974              	.LBE531:
 3975              	.LBE530:
1251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3976              		.loc 1 1252 70
 3977 01de 7B6A     		ldr	r3, [r7, #36]
 3978 01e0 1A0A     		lsrs	r2, r3, #8
 3979              		.loc 1 1252 29
 3980 01e2 BB69     		ldr	r3, [r7, #24]
 3981 01e4 43F40033 		orr	r3, r3, #131072
 3982              		.loc 1 1252 70
 3983 01e8 D2B2     		uxtb	r2, r2
 3984              		.loc 1 1252 68
 3985 01ea 1A70     		strb	r2, [r3]
 3986              	.LBB532:
 3987              	.LBB533:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3988              		.loc 2 946 3
 3989              		.syntax unified
 3990              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3991 01ec BFF34F8F 		dsb 0xF
 3992              	@ 0 "" 2
 3993              		.loc 2 947 1
 3994              		.thumb
 3995              		.syntax unified
 3996 01f0 00BF     		nop
 3997              	.LBE533:
 3998              	.LBE532:
1253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 3999              		.loc 1 1254 70
 4000 01f2 7B6A     		ldr	r3, [r7, #36]
 4001 01f4 1A0C     		lsrs	r2, r3, #16
 4002              		.loc 1 1254 29
 4003 01f6 BB69     		ldr	r3, [r7, #24]
 4004 01f8 43F40033 		orr	r3, r3, #131072
 4005              		.loc 1 1254 70
 4006 01fc D2B2     		uxtb	r2, r2
 4007              		.loc 1 1254 68
 4008 01fe 1A70     		strb	r2, [r3]
 4009              	.LBB534:
 4010              	.LBB535:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc0wCm8A.s 			page 112


 4011              		.loc 2 946 3
 4012              		.syntax unified
 4013              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4014 0200 BFF34F8F 		dsb 0xF
 4015              	@ 0 "" 2
 4016              		.loc 2 947 1
 4017              		.thumb
 4018              		.syntax unified
 4019 0204 00BF     		nop
 4020              	.L114:
 4021              	.LBE535:
 4022              	.LBE534:
1255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_TRUE1;
 4023              		.loc 1 1259 25
 4024 0206 BB69     		ldr	r3, [r7, #24]
 4025 0208 43F48033 		orr	r3, r3, #65536
 4026              		.loc 1 1259 63
 4027 020c 3022     		movs	r2, #48
 4028 020e 1A70     		strb	r2, [r3]
 4029              	.LBB536:
 4030              	.LBB537:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4031              		.loc 2 946 3
 4032              		.syntax unified
 4033              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4034 0210 BFF34F8F 		dsb 0xF
 4035              	@ 0 "" 2
 4036              		.loc 2 947 1
 4037              		.thumb
 4038              		.syntax unified
 4039 0214 00BF     		nop
 4040              	.LBE537:
 4041              	.LBE536:
1260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       __DSB();
1261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       if (hnand->Config.ExtraCommandEnable == ENABLE)
 4042              		.loc 1 1262 24
 4043 0216 FB68     		ldr	r3, [r7, #12]
 4044 0218 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 4045              		.loc 1 1262 10
 4046 021c 012B     		cmp	r3, #1
 4047 021e 23D1     		bne	.L116
1263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Get tick */
1265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         tickstart = HAL_GetTick();
 4048              		.loc 1 1265 21
 4049 0220 FFF7FEFF 		bl	HAL_GetTick
 4050 0224 3861     		str	r0, [r7, #16]
1266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Read status until NAND is ready */
1268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         while (HAL_NAND_Read_Status(hnand) != NAND_READY)
 4051              		.loc 1 1268 15
 4052 0226 11E0     		b	.L117
ARM GAS  /tmp/cc0wCm8A.s 			page 113


 4053              	.L118:
1269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           if ((HAL_GetTick() - tickstart) > NAND_WRITE_TIMEOUT)
 4054              		.loc 1 1270 16
 4055 0228 FFF7FEFF 		bl	HAL_GetTick
 4056 022c 0246     		mov	r2, r0
 4057              		.loc 1 1270 30
 4058 022e 3B69     		ldr	r3, [r7, #16]
 4059 0230 D31A     		subs	r3, r2, r3
 4060              		.loc 1 1270 14
 4061 0232 B3F1807F 		cmp	r3, #16777216
 4062 0236 09D9     		bls	.L117
1271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           {
1272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             /* Update the NAND controller state */
1273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             hnand->State = HAL_NAND_STATE_ERROR;
 4063              		.loc 1 1273 26
 4064 0238 FB68     		ldr	r3, [r7, #12]
 4065 023a 0322     		movs	r2, #3
 4066 023c 83F82120 		strb	r2, [r3, #33]
1274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             /* Process unlocked */
1276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             __HAL_UNLOCK(hnand);
 4067              		.loc 1 1276 13
 4068 0240 FB68     		ldr	r3, [r7, #12]
 4069 0242 0022     		movs	r2, #0
 4070 0244 83F82020 		strb	r2, [r3, #32]
1277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             return HAL_TIMEOUT;
 4071              		.loc 1 1278 20
 4072 0248 0323     		movs	r3, #3
 4073 024a 40E0     		b	.L108
 4074              	.L117:
1268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 4075              		.loc 1 1268 16
 4076 024c F868     		ldr	r0, [r7, #12]
 4077 024e FFF7FEFF 		bl	HAL_NAND_Read_Status
 4078 0252 0346     		mov	r3, r0
1268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 4079              		.loc 1 1268 15
 4080 0254 402B     		cmp	r3, #64
 4081 0256 E7D1     		bne	.L118
1279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           }
1280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Go back to read mode */
1283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = ((uint8_t)0x00);
 4082              		.loc 1 1283 27
 4083 0258 BB69     		ldr	r3, [r7, #24]
 4084 025a 43F48033 		orr	r3, r3, #65536
 4085              		.loc 1 1283 65
 4086 025e 0022     		movs	r2, #0
 4087 0260 1A70     		strb	r2, [r3]
 4088              	.LBB538:
 4089              	.LBB539:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4090              		.loc 2 946 3
 4091              		.syntax unified
ARM GAS  /tmp/cc0wCm8A.s 			page 114


 4092              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4093 0262 BFF34F8F 		dsb 0xF
 4094              	@ 0 "" 2
 4095              		.loc 2 947 1
 4096              		.thumb
 4097              		.syntax unified
 4098 0266 00BF     		nop
 4099              	.L116:
 4100              	.LBE539:
 4101              	.LBE538:
1284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Get Data into Buffer */
1288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       for (index = 0U; index < hnand->Config.SpareAreaSize; index++)
 4102              		.loc 1 1288 18
 4103 0268 0023     		movs	r3, #0
 4104 026a FB62     		str	r3, [r7, #44]
 4105              		.loc 1 1288 7
 4106 026c 09E0     		b	.L119
 4107              	.L120:
1289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *buff = *(uint8_t *)deviceaddress;
 4108              		.loc 1 1290 18 discriminator 3
 4109 026e BB69     		ldr	r3, [r7, #24]
 4110              		.loc 1 1290 17 discriminator 3
 4111 0270 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4112              		.loc 1 1290 15 discriminator 3
 4113 0272 FB69     		ldr	r3, [r7, #28]
 4114 0274 1A70     		strb	r2, [r3]
1291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         buff++;
 4115              		.loc 1 1291 13 discriminator 3
 4116 0276 FB69     		ldr	r3, [r7, #28]
 4117 0278 0133     		adds	r3, r3, #1
 4118 027a FB61     		str	r3, [r7, #28]
1288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 4119              		.loc 1 1288 66 discriminator 3
 4120 027c FB6A     		ldr	r3, [r7, #44]
 4121 027e 0133     		adds	r3, r3, #1
 4122 0280 FB62     		str	r3, [r7, #44]
 4123              	.L119:
1288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 4124              		.loc 1 1288 45 discriminator 1
 4125 0282 FB68     		ldr	r3, [r7, #12]
 4126 0284 9B6A     		ldr	r3, [r3, #40]
1288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 4127              		.loc 1 1288 7 discriminator 1
 4128 0286 FA6A     		ldr	r2, [r7, #44]
 4129 0288 9A42     		cmp	r2, r3
 4130 028a F0D3     		bcc	.L120
1292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Increment read spare areas number */
1295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       numsparearearead++;
 4131              		.loc 1 1295 23
 4132 028c BB6A     		ldr	r3, [r7, #40]
 4133 028e 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cc0wCm8A.s 			page 115


 4134 0290 BB62     		str	r3, [r7, #40]
1296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Decrement spare areas to read */
1298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       nbspare--;
 4135              		.loc 1 1298 14
 4136 0292 3B6A     		ldr	r3, [r7, #32]
 4137 0294 013B     		subs	r3, r3, #1
 4138 0296 3B62     		str	r3, [r7, #32]
1299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Increment the NAND address */
1301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       nandaddress = (uint32_t)(nandaddress + 1U);
 4139              		.loc 1 1301 19
 4140 0298 7B6A     		ldr	r3, [r7, #36]
 4141 029a 0133     		adds	r3, r3, #1
 4142 029c 7B62     		str	r3, [r7, #36]
 4143              	.L111:
1197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 4144              		.loc 1 1197 11
 4145 029e 3B6A     		ldr	r3, [r7, #32]
 4146 02a0 002B     		cmp	r3, #0
 4147 02a2 09D0     		beq	.L121
1197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 4148              		.loc 1 1197 61 discriminator 1
 4149 02a4 FB68     		ldr	r3, [r7, #12]
 4150 02a6 DB6A     		ldr	r3, [r3, #44]
1197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 4151              		.loc 1 1197 89 discriminator 1
 4152 02a8 FA68     		ldr	r2, [r7, #12]
 4153 02aa 126B     		ldr	r2, [r2, #48]
1197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 4154              		.loc 1 1197 73 discriminator 1
 4155 02ac 02FB03F3 		mul	r3, r2, r3
1197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 4156              		.loc 1 1197 28 discriminator 1
 4157 02b0 7A6A     		ldr	r2, [r7, #36]
 4158 02b2 9A42     		cmp	r2, r3
 4159 02b4 FFF4EAAE 		bcc	.L122
 4160              	.L121:
1302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     }
1303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
1305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_READY;
 4161              		.loc 1 1305 18
 4162 02b8 FB68     		ldr	r3, [r7, #12]
 4163 02ba 0122     		movs	r2, #1
 4164 02bc 83F82120 		strb	r2, [r3, #33]
1306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process unlocked */
1308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_UNLOCK(hnand);
 4165              		.loc 1 1308 5
 4166 02c0 FB68     		ldr	r3, [r7, #12]
 4167 02c2 0022     		movs	r2, #0
 4168 02c4 83F82020 		strb	r2, [r3, #32]
1309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
1311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_ERROR;
ARM GAS  /tmp/cc0wCm8A.s 			page 116


1313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return HAL_OK;
 4169              		.loc 1 1315 10
 4170 02c8 0023     		movs	r3, #0
 4171 02ca 00E0     		b	.L108
 4172              	.L109:
1312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 4173              		.loc 1 1312 12
 4174 02cc 0123     		movs	r3, #1
 4175              	.L108:
1316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 4176              		.loc 1 1316 1
 4177 02ce 1846     		mov	r0, r3
 4178 02d0 3037     		adds	r7, r7, #48
 4179              	.LCFI74:
 4180              		.cfi_def_cfa_offset 8
 4181 02d2 BD46     		mov	sp, r7
 4182              	.LCFI75:
 4183              		.cfi_def_cfa_register 13
 4184              		@ sp needed
 4185 02d4 80BD     		pop	{r7, pc}
 4186              		.cfi_endproc
 4187              	.LFE344:
 4189              		.section	.text.HAL_NAND_Read_SpareArea_16b,"ax",%progbits
 4190              		.align	1
 4191              		.global	HAL_NAND_Read_SpareArea_16b
 4192              		.syntax unified
 4193              		.thumb
 4194              		.thumb_func
 4195              		.fpu fpv5-d16
 4197              	HAL_NAND_Read_SpareArea_16b:
 4198              	.LFB345:
1317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
1319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Read Spare area(s) from NAND memory (16-bits addressing)
1320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
1321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
1322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
1323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pBuffer pointer to source buffer to write. pBuffer should be 16bits aligned.
1324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  NumSpareAreaToRead Number of spare area to read
1325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
1326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
1327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Read_SpareArea_16b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddr
1328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****                                               uint16_t *pBuffer, uint32_t NumSpareAreaToRead)
1329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 4199              		.loc 1 1329 1
 4200              		.cfi_startproc
 4201              		@ args = 0, pretend = 0, frame = 48
 4202              		@ frame_needed = 1, uses_anonymous_args = 0
 4203 0000 80B5     		push	{r7, lr}
 4204              	.LCFI76:
 4205              		.cfi_def_cfa_offset 8
 4206              		.cfi_offset 7, -8
 4207              		.cfi_offset 14, -4
 4208 0002 8CB0     		sub	sp, sp, #48
 4209              	.LCFI77:
ARM GAS  /tmp/cc0wCm8A.s 			page 117


 4210              		.cfi_def_cfa_offset 56
 4211 0004 00AF     		add	r7, sp, #0
 4212              	.LCFI78:
 4213              		.cfi_def_cfa_register 7
 4214 0006 F860     		str	r0, [r7, #12]
 4215 0008 B960     		str	r1, [r7, #8]
 4216 000a 7A60     		str	r2, [r7, #4]
 4217 000c 3B60     		str	r3, [r7]
1330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t index;
1331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t tickstart;
1332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t deviceaddress;
1333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t numsparearearead = 0U;
 4218              		.loc 1 1333 12
 4219 000e 0023     		movs	r3, #0
 4220 0010 BB62     		str	r3, [r7, #40]
1334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t nandaddress;
1335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t columnaddress;
1336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t nbspare = NumSpareAreaToRead;
 4221              		.loc 1 1336 12
 4222 0012 3B68     		ldr	r3, [r7]
 4223 0014 3B62     		str	r3, [r7, #32]
1337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint16_t *buff = pBuffer;
 4224              		.loc 1 1337 13
 4225 0016 7B68     		ldr	r3, [r7, #4]
 4226 0018 FB61     		str	r3, [r7, #28]
1338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check the NAND controller state */
1340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_BUSY)
 4227              		.loc 1 1340 12
 4228 001a FB68     		ldr	r3, [r7, #12]
 4229 001c 93F82130 		ldrb	r3, [r3, #33]
 4230 0020 DBB2     		uxtb	r3, r3
 4231              		.loc 1 1340 6
 4232 0022 022B     		cmp	r3, #2
 4233 0024 01D1     		bne	.L125
1341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_BUSY;
 4234              		.loc 1 1342 12
 4235 0026 0223     		movs	r3, #2
 4236 0028 51E1     		b	.L126
 4237              	.L125:
1343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if (hnand->State == HAL_NAND_STATE_READY)
 4238              		.loc 1 1344 17
 4239 002a FB68     		ldr	r3, [r7, #12]
 4240 002c 93F82130 		ldrb	r3, [r3, #33]
 4241 0030 DBB2     		uxtb	r3, r3
 4242              		.loc 1 1344 11
 4243 0032 012B     		cmp	r3, #1
 4244 0034 40F04A81 		bne	.L127
1345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process Locked */
1347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_LOCK(hnand);
 4245              		.loc 1 1347 5
 4246 0038 FB68     		ldr	r3, [r7, #12]
 4247 003a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 4248 003e 012B     		cmp	r3, #1
ARM GAS  /tmp/cc0wCm8A.s 			page 118


 4249 0040 01D1     		bne	.L128
 4250              		.loc 1 1347 5 is_stmt 0 discriminator 1
 4251 0042 0223     		movs	r3, #2
 4252 0044 43E1     		b	.L126
 4253              	.L128:
 4254              		.loc 1 1347 5 discriminator 2
 4255 0046 FB68     		ldr	r3, [r7, #12]
 4256 0048 0122     		movs	r2, #1
 4257 004a 83F82020 		strb	r2, [r3, #32]
1348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
1350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_BUSY;
 4258              		.loc 1 1350 18 is_stmt 1 discriminator 2
 4259 004e FB68     		ldr	r3, [r7, #12]
 4260 0050 0222     		movs	r2, #2
 4261 0052 83F82120 		strb	r2, [r3, #33]
1351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Identify the device address */
1353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     deviceaddress = NAND_DEVICE;
 4262              		.loc 1 1353 19 discriminator 2
 4263 0056 4FF00043 		mov	r3, #-2147483648
 4264 005a BB61     		str	r3, [r7, #24]
1354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* NAND raw address calculation */
1356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     nandaddress = ARRAY_ADDRESS(pAddress, hnand);
 4265              		.loc 1 1356 19 discriminator 2
 4266 005c BB68     		ldr	r3, [r7, #8]
 4267 005e 1B88     		ldrh	r3, [r3]
 4268 0060 1946     		mov	r1, r3
 4269 0062 BB68     		ldr	r3, [r7, #8]
 4270 0064 9B88     		ldrh	r3, [r3, #4]
 4271 0066 1A46     		mov	r2, r3
 4272 0068 BB68     		ldr	r3, [r7, #8]
 4273 006a 5B88     		ldrh	r3, [r3, #2]
 4274 006c 1846     		mov	r0, r3
 4275 006e FB68     		ldr	r3, [r7, #12]
 4276 0070 9B6B     		ldr	r3, [r3, #56]
 4277 0072 03FB00F3 		mul	r3, r3, r0
 4278 0076 1344     		add	r3, r3, r2
 4279 0078 FA68     		ldr	r2, [r7, #12]
 4280 007a D26A     		ldr	r2, [r2, #44]
 4281 007c 02FB03F3 		mul	r3, r2, r3
 4282              		.loc 1 1356 17 discriminator 2
 4283 0080 0B44     		add	r3, r3, r1
 4284 0082 7B62     		str	r3, [r7, #36]
1357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Column in page address */
1359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     columnaddress = (uint32_t)(COLUMN_ADDRESS(hnand));
 4285              		.loc 1 1359 19 discriminator 2
 4286 0084 FB68     		ldr	r3, [r7, #12]
 4287 0086 5B6A     		ldr	r3, [r3, #36]
 4288 0088 7B61     		str	r3, [r7, #20]
1360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Spare area(s) read loop */
1362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     while ((nbspare != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.BlockNbr))
 4289              		.loc 1 1362 11 discriminator 2
 4290 008a 08E1     		b	.L129
ARM GAS  /tmp/cc0wCm8A.s 			page 119


 4291              	.L140:
1363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
1364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Cards with page size <= 512 bytes */
1365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       if ((hnand->Config.PageSize) <= 512U)
 4292              		.loc 1 1365 25
 4293 008c FB68     		ldr	r3, [r7, #12]
 4294 008e 5B6A     		ldr	r3, [r3, #36]
 4295              		.loc 1 1365 10
 4296 0090 B3F5007F 		cmp	r3, #512
 4297 0094 50D8     		bhi	.L130
1366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Send read spare area command sequence */
1368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_C;
 4298              		.loc 1 1368 27
 4299 0096 BB69     		ldr	r3, [r7, #24]
 4300 0098 43F48033 		orr	r3, r3, #65536
 4301              		.loc 1 1368 65
 4302 009c 5022     		movs	r2, #80
 4303 009e 1A70     		strb	r2, [r3]
 4304              	.LBB540:
 4305              	.LBB541:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4306              		.loc 2 946 3
 4307              		.syntax unified
 4308              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4309 00a0 BFF34F8F 		dsb 0xF
 4310              	@ 0 "" 2
 4311              		.loc 2 947 1
 4312              		.thumb
 4313              		.syntax unified
 4314 00a4 00BF     		nop
 4315              	.LBE541:
 4316              	.LBE540:
1369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if (((hnand->Config.BlockSize) * (hnand->Config.BlockNbr)) <= 65535U)
 4317              		.loc 1 1371 28
 4318 00a6 FB68     		ldr	r3, [r7, #12]
 4319 00a8 DB6A     		ldr	r3, [r3, #44]
 4320              		.loc 1 1371 56
 4321 00aa FA68     		ldr	r2, [r7, #12]
 4322 00ac 126B     		ldr	r2, [r2, #48]
 4323              		.loc 1 1371 40
 4324 00ae 02FB03F3 		mul	r3, r2, r3
 4325              		.loc 1 1371 12
 4326 00b2 B3F5803F 		cmp	r3, #65536
 4327 00b6 1AD2     		bcs	.L131
1372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 4328              		.loc 1 1373 29
 4329 00b8 BB69     		ldr	r3, [r7, #24]
 4330 00ba 43F40033 		orr	r3, r3, #131072
 4331              		.loc 1 1373 68
 4332 00be 0022     		movs	r2, #0
 4333 00c0 1A70     		strb	r2, [r3]
 4334              	.LBB542:
 4335              	.LBB543:
ARM GAS  /tmp/cc0wCm8A.s 			page 120


 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4336              		.loc 2 946 3
 4337              		.syntax unified
 4338              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4339 00c2 BFF34F8F 		dsb 0xF
 4340              	@ 0 "" 2
 4341              		.loc 2 947 1
 4342              		.thumb
 4343              		.syntax unified
 4344 00c6 00BF     		nop
 4345              	.LBE543:
 4346              	.LBE542:
1374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 4347              		.loc 1 1375 29
 4348 00c8 BB69     		ldr	r3, [r7, #24]
 4349 00ca 43F40033 		orr	r3, r3, #131072
 4350              		.loc 1 1375 70
 4351 00ce 7A6A     		ldr	r2, [r7, #36]
 4352 00d0 D2B2     		uxtb	r2, r2
 4353              		.loc 1 1375 68
 4354 00d2 1A70     		strb	r2, [r3]
 4355              	.LBB544:
 4356              	.LBB545:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4357              		.loc 2 946 3
 4358              		.syntax unified
 4359              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4360 00d4 BFF34F8F 		dsb 0xF
 4361              	@ 0 "" 2
 4362              		.loc 2 947 1
 4363              		.thumb
 4364              		.syntax unified
 4365 00d8 00BF     		nop
 4366              	.LBE545:
 4367              	.LBE544:
1376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 4368              		.loc 1 1377 70
 4369 00da 7B6A     		ldr	r3, [r7, #36]
 4370 00dc 1A0A     		lsrs	r2, r3, #8
 4371              		.loc 1 1377 29
 4372 00de BB69     		ldr	r3, [r7, #24]
 4373 00e0 43F40033 		orr	r3, r3, #131072
 4374              		.loc 1 1377 70
 4375 00e4 D2B2     		uxtb	r2, r2
 4376              		.loc 1 1377 68
 4377 00e6 1A70     		strb	r2, [r3]
 4378              	.LBB546:
 4379              	.LBB547:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4380              		.loc 2 946 3
 4381              		.syntax unified
 4382              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4383 00e8 BFF34F8F 		dsb 0xF
 4384              	@ 0 "" 2
 4385              		.loc 2 947 1
ARM GAS  /tmp/cc0wCm8A.s 			page 121


 4386              		.thumb
 4387              		.syntax unified
 4388 00ec 8BE0     		b	.L132
 4389              	.L131:
 4390              	.LBE547:
 4391              	.LBE546:
1378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 4392              		.loc 1 1382 29
 4393 00ee BB69     		ldr	r3, [r7, #24]
 4394 00f0 43F40033 		orr	r3, r3, #131072
 4395              		.loc 1 1382 68
 4396 00f4 0022     		movs	r2, #0
 4397 00f6 1A70     		strb	r2, [r3]
 4398              	.LBB548:
 4399              	.LBB549:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4400              		.loc 2 946 3
 4401              		.syntax unified
 4402              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4403 00f8 BFF34F8F 		dsb 0xF
 4404              	@ 0 "" 2
 4405              		.loc 2 947 1
 4406              		.thumb
 4407              		.syntax unified
 4408 00fc 00BF     		nop
 4409              	.LBE549:
 4410              	.LBE548:
1383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 4411              		.loc 1 1384 29
 4412 00fe BB69     		ldr	r3, [r7, #24]
 4413 0100 43F40033 		orr	r3, r3, #131072
 4414              		.loc 1 1384 70
 4415 0104 7A6A     		ldr	r2, [r7, #36]
 4416 0106 D2B2     		uxtb	r2, r2
 4417              		.loc 1 1384 68
 4418 0108 1A70     		strb	r2, [r3]
 4419              	.LBB550:
 4420              	.LBB551:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4421              		.loc 2 946 3
 4422              		.syntax unified
 4423              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4424 010a BFF34F8F 		dsb 0xF
 4425              	@ 0 "" 2
 4426              		.loc 2 947 1
 4427              		.thumb
 4428              		.syntax unified
 4429 010e 00BF     		nop
 4430              	.LBE551:
 4431              	.LBE550:
1385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
ARM GAS  /tmp/cc0wCm8A.s 			page 122


 4432              		.loc 1 1386 70
 4433 0110 7B6A     		ldr	r3, [r7, #36]
 4434 0112 1A0A     		lsrs	r2, r3, #8
 4435              		.loc 1 1386 29
 4436 0114 BB69     		ldr	r3, [r7, #24]
 4437 0116 43F40033 		orr	r3, r3, #131072
 4438              		.loc 1 1386 70
 4439 011a D2B2     		uxtb	r2, r2
 4440              		.loc 1 1386 68
 4441 011c 1A70     		strb	r2, [r3]
 4442              	.LBB552:
 4443              	.LBB553:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4444              		.loc 2 946 3
 4445              		.syntax unified
 4446              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4447 011e BFF34F8F 		dsb 0xF
 4448              	@ 0 "" 2
 4449              		.loc 2 947 1
 4450              		.thumb
 4451              		.syntax unified
 4452 0122 00BF     		nop
 4453              	.LBE553:
 4454              	.LBE552:
1387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 4455              		.loc 1 1388 70
 4456 0124 7B6A     		ldr	r3, [r7, #36]
 4457 0126 1A0C     		lsrs	r2, r3, #16
 4458              		.loc 1 1388 29
 4459 0128 BB69     		ldr	r3, [r7, #24]
 4460 012a 43F40033 		orr	r3, r3, #131072
 4461              		.loc 1 1388 70
 4462 012e D2B2     		uxtb	r2, r2
 4463              		.loc 1 1388 68
 4464 0130 1A70     		strb	r2, [r3]
 4465              	.LBB554:
 4466              	.LBB555:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4467              		.loc 2 946 3
 4468              		.syntax unified
 4469              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4470 0132 BFF34F8F 		dsb 0xF
 4471              	@ 0 "" 2
 4472              		.loc 2 947 1
 4473              		.thumb
 4474              		.syntax unified
 4475 0136 66E0     		b	.L132
 4476              	.L130:
 4477              	.LBE555:
 4478              	.LBE554:
1389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       else /* (hnand->Config.PageSize) > 512 */
1393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Send read spare area command sequence */
ARM GAS  /tmp/cc0wCm8A.s 			page 123


1395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
 4479              		.loc 1 1395 27
 4480 0138 BB69     		ldr	r3, [r7, #24]
 4481 013a 43F48033 		orr	r3, r3, #65536
 4482              		.loc 1 1395 65
 4483 013e 0022     		movs	r2, #0
 4484 0140 1A70     		strb	r2, [r3]
 4485              	.LBB556:
 4486              	.LBB557:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4487              		.loc 2 946 3
 4488              		.syntax unified
 4489              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4490 0142 BFF34F8F 		dsb 0xF
 4491              	@ 0 "" 2
 4492              		.loc 2 947 1
 4493              		.thumb
 4494              		.syntax unified
 4495 0146 00BF     		nop
 4496              	.LBE557:
 4497              	.LBE556:
1396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if (((hnand->Config.BlockSize) * (hnand->Config.BlockNbr)) <= 65535U)
 4498              		.loc 1 1398 28
 4499 0148 FB68     		ldr	r3, [r7, #12]
 4500 014a DB6A     		ldr	r3, [r3, #44]
 4501              		.loc 1 1398 56
 4502 014c FA68     		ldr	r2, [r7, #12]
 4503 014e 126B     		ldr	r2, [r2, #48]
 4504              		.loc 1 1398 40
 4505 0150 02FB03F3 		mul	r3, r2, r3
 4506              		.loc 1 1398 12
 4507 0154 B3F5803F 		cmp	r3, #65536
 4508 0158 25D2     		bcs	.L133
1399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress
 4509              		.loc 1 1400 29
 4510 015a BB69     		ldr	r3, [r7, #24]
 4511 015c 43F40033 		orr	r3, r3, #131072
 4512              		.loc 1 1400 70
 4513 0160 7A69     		ldr	r2, [r7, #20]
 4514 0162 D2B2     		uxtb	r2, r2
 4515              		.loc 1 1400 68
 4516 0164 1A70     		strb	r2, [r3]
 4517              	.LBB558:
 4518              	.LBB559:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4519              		.loc 2 946 3
 4520              		.syntax unified
 4521              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4522 0166 BFF34F8F 		dsb 0xF
 4523              	@ 0 "" 2
 4524              		.loc 2 947 1
 4525              		.thumb
 4526              		.syntax unified
 4527 016a 00BF     		nop
ARM GAS  /tmp/cc0wCm8A.s 			page 124


 4528              	.LBE559:
 4529              	.LBE558:
1401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress
 4530              		.loc 1 1402 70
 4531 016c 7B69     		ldr	r3, [r7, #20]
 4532 016e 1A0A     		lsrs	r2, r3, #8
 4533              		.loc 1 1402 29
 4534 0170 BB69     		ldr	r3, [r7, #24]
 4535 0172 43F40033 		orr	r3, r3, #131072
 4536              		.loc 1 1402 70
 4537 0176 D2B2     		uxtb	r2, r2
 4538              		.loc 1 1402 68
 4539 0178 1A70     		strb	r2, [r3]
 4540              	.LBB560:
 4541              	.LBB561:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4542              		.loc 2 946 3
 4543              		.syntax unified
 4544              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4545 017a BFF34F8F 		dsb 0xF
 4546              	@ 0 "" 2
 4547              		.loc 2 947 1
 4548              		.thumb
 4549              		.syntax unified
 4550 017e 00BF     		nop
 4551              	.LBE561:
 4552              	.LBE560:
1403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 4553              		.loc 1 1404 29
 4554 0180 BB69     		ldr	r3, [r7, #24]
 4555 0182 43F40033 		orr	r3, r3, #131072
 4556              		.loc 1 1404 70
 4557 0186 7A6A     		ldr	r2, [r7, #36]
 4558 0188 D2B2     		uxtb	r2, r2
 4559              		.loc 1 1404 68
 4560 018a 1A70     		strb	r2, [r3]
 4561              	.LBB562:
 4562              	.LBB563:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4563              		.loc 2 946 3
 4564              		.syntax unified
 4565              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4566 018c BFF34F8F 		dsb 0xF
 4567              	@ 0 "" 2
 4568              		.loc 2 947 1
 4569              		.thumb
 4570              		.syntax unified
 4571 0190 00BF     		nop
 4572              	.LBE563:
 4573              	.LBE562:
1405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 4574              		.loc 1 1406 70
 4575 0192 7B6A     		ldr	r3, [r7, #36]
 4576 0194 1A0A     		lsrs	r2, r3, #8
ARM GAS  /tmp/cc0wCm8A.s 			page 125


 4577              		.loc 1 1406 29
 4578 0196 BB69     		ldr	r3, [r7, #24]
 4579 0198 43F40033 		orr	r3, r3, #131072
 4580              		.loc 1 1406 70
 4581 019c D2B2     		uxtb	r2, r2
 4582              		.loc 1 1406 68
 4583 019e 1A70     		strb	r2, [r3]
 4584              	.LBB564:
 4585              	.LBB565:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4586              		.loc 2 946 3
 4587              		.syntax unified
 4588              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4589 01a0 BFF34F8F 		dsb 0xF
 4590              	@ 0 "" 2
 4591              		.loc 2 947 1
 4592              		.thumb
 4593              		.syntax unified
 4594 01a4 2FE0     		b	.L132
 4595              	.L133:
 4596              	.LBE565:
 4597              	.LBE564:
1407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress
 4598              		.loc 1 1411 29
 4599 01a6 BB69     		ldr	r3, [r7, #24]
 4600 01a8 43F40033 		orr	r3, r3, #131072
 4601              		.loc 1 1411 70
 4602 01ac 7A69     		ldr	r2, [r7, #20]
 4603 01ae D2B2     		uxtb	r2, r2
 4604              		.loc 1 1411 68
 4605 01b0 1A70     		strb	r2, [r3]
 4606              	.LBB566:
 4607              	.LBB567:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4608              		.loc 2 946 3
 4609              		.syntax unified
 4610              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4611 01b2 BFF34F8F 		dsb 0xF
 4612              	@ 0 "" 2
 4613              		.loc 2 947 1
 4614              		.thumb
 4615              		.syntax unified
 4616 01b6 00BF     		nop
 4617              	.LBE567:
 4618              	.LBE566:
1412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress
 4619              		.loc 1 1413 70
 4620 01b8 7B69     		ldr	r3, [r7, #20]
 4621 01ba 1A0A     		lsrs	r2, r3, #8
 4622              		.loc 1 1413 29
 4623 01bc BB69     		ldr	r3, [r7, #24]
 4624 01be 43F40033 		orr	r3, r3, #131072
ARM GAS  /tmp/cc0wCm8A.s 			page 126


 4625              		.loc 1 1413 70
 4626 01c2 D2B2     		uxtb	r2, r2
 4627              		.loc 1 1413 68
 4628 01c4 1A70     		strb	r2, [r3]
 4629              	.LBB568:
 4630              	.LBB569:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4631              		.loc 2 946 3
 4632              		.syntax unified
 4633              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4634 01c6 BFF34F8F 		dsb 0xF
 4635              	@ 0 "" 2
 4636              		.loc 2 947 1
 4637              		.thumb
 4638              		.syntax unified
 4639 01ca 00BF     		nop
 4640              	.LBE569:
 4641              	.LBE568:
1414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 4642              		.loc 1 1415 29
 4643 01cc BB69     		ldr	r3, [r7, #24]
 4644 01ce 43F40033 		orr	r3, r3, #131072
 4645              		.loc 1 1415 70
 4646 01d2 7A6A     		ldr	r2, [r7, #36]
 4647 01d4 D2B2     		uxtb	r2, r2
 4648              		.loc 1 1415 68
 4649 01d6 1A70     		strb	r2, [r3]
 4650              	.LBB570:
 4651              	.LBB571:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4652              		.loc 2 946 3
 4653              		.syntax unified
 4654              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4655 01d8 BFF34F8F 		dsb 0xF
 4656              	@ 0 "" 2
 4657              		.loc 2 947 1
 4658              		.thumb
 4659              		.syntax unified
 4660 01dc 00BF     		nop
 4661              	.LBE571:
 4662              	.LBE570:
1416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 4663              		.loc 1 1417 70
 4664 01de 7B6A     		ldr	r3, [r7, #36]
 4665 01e0 1A0A     		lsrs	r2, r3, #8
 4666              		.loc 1 1417 29
 4667 01e2 BB69     		ldr	r3, [r7, #24]
 4668 01e4 43F40033 		orr	r3, r3, #131072
 4669              		.loc 1 1417 70
 4670 01e8 D2B2     		uxtb	r2, r2
 4671              		.loc 1 1417 68
 4672 01ea 1A70     		strb	r2, [r3]
 4673              	.LBB572:
 4674              	.LBB573:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc0wCm8A.s 			page 127


 4675              		.loc 2 946 3
 4676              		.syntax unified
 4677              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4678 01ec BFF34F8F 		dsb 0xF
 4679              	@ 0 "" 2
 4680              		.loc 2 947 1
 4681              		.thumb
 4682              		.syntax unified
 4683 01f0 00BF     		nop
 4684              	.LBE573:
 4685              	.LBE572:
1418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 4686              		.loc 1 1419 70
 4687 01f2 7B6A     		ldr	r3, [r7, #36]
 4688 01f4 1A0C     		lsrs	r2, r3, #16
 4689              		.loc 1 1419 29
 4690 01f6 BB69     		ldr	r3, [r7, #24]
 4691 01f8 43F40033 		orr	r3, r3, #131072
 4692              		.loc 1 1419 70
 4693 01fc D2B2     		uxtb	r2, r2
 4694              		.loc 1 1419 68
 4695 01fe 1A70     		strb	r2, [r3]
 4696              	.LBB574:
 4697              	.LBB575:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4698              		.loc 2 946 3
 4699              		.syntax unified
 4700              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4701 0200 BFF34F8F 		dsb 0xF
 4702              	@ 0 "" 2
 4703              		.loc 2 947 1
 4704              		.thumb
 4705              		.syntax unified
 4706 0204 00BF     		nop
 4707              	.L132:
 4708              	.LBE575:
 4709              	.LBE574:
1420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_TRUE1;
 4710              		.loc 1 1424 25
 4711 0206 BB69     		ldr	r3, [r7, #24]
 4712 0208 43F48033 		orr	r3, r3, #65536
 4713              		.loc 1 1424 63
 4714 020c 3022     		movs	r2, #48
 4715 020e 1A70     		strb	r2, [r3]
 4716              	.LBB576:
 4717              	.LBB577:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4718              		.loc 2 946 3
 4719              		.syntax unified
 4720              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4721 0210 BFF34F8F 		dsb 0xF
 4722              	@ 0 "" 2
ARM GAS  /tmp/cc0wCm8A.s 			page 128


 4723              		.loc 2 947 1
 4724              		.thumb
 4725              		.syntax unified
 4726 0214 00BF     		nop
 4727              	.LBE577:
 4728              	.LBE576:
1425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       __DSB();
1426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       if (hnand->Config.ExtraCommandEnable == ENABLE)
 4729              		.loc 1 1427 24
 4730 0216 FB68     		ldr	r3, [r7, #12]
 4731 0218 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 4732              		.loc 1 1427 10
 4733 021c 012B     		cmp	r3, #1
 4734 021e 23D1     		bne	.L134
1428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Get tick */
1430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         tickstart = HAL_GetTick();
 4735              		.loc 1 1430 21
 4736 0220 FFF7FEFF 		bl	HAL_GetTick
 4737 0224 3861     		str	r0, [r7, #16]
1431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Read status until NAND is ready */
1433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         while (HAL_NAND_Read_Status(hnand) != NAND_READY)
 4738              		.loc 1 1433 15
 4739 0226 11E0     		b	.L135
 4740              	.L136:
1434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           if ((HAL_GetTick() - tickstart) > NAND_WRITE_TIMEOUT)
 4741              		.loc 1 1435 16
 4742 0228 FFF7FEFF 		bl	HAL_GetTick
 4743 022c 0246     		mov	r2, r0
 4744              		.loc 1 1435 30
 4745 022e 3B69     		ldr	r3, [r7, #16]
 4746 0230 D31A     		subs	r3, r2, r3
 4747              		.loc 1 1435 14
 4748 0232 B3F1807F 		cmp	r3, #16777216
 4749 0236 09D9     		bls	.L135
1436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           {
1437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             /* Update the NAND controller state */
1438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             hnand->State = HAL_NAND_STATE_ERROR;
 4750              		.loc 1 1438 26
 4751 0238 FB68     		ldr	r3, [r7, #12]
 4752 023a 0322     		movs	r2, #3
 4753 023c 83F82120 		strb	r2, [r3, #33]
1439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             /* Process unlocked */
1441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             __HAL_UNLOCK(hnand);
 4754              		.loc 1 1441 13
 4755 0240 FB68     		ldr	r3, [r7, #12]
 4756 0242 0022     		movs	r2, #0
 4757 0244 83F82020 		strb	r2, [r3, #32]
1442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****             return HAL_TIMEOUT;
 4758              		.loc 1 1443 20
 4759 0248 0323     		movs	r3, #3
 4760 024a 40E0     		b	.L126
ARM GAS  /tmp/cc0wCm8A.s 			page 129


 4761              	.L135:
1433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 4762              		.loc 1 1433 16
 4763 024c F868     		ldr	r0, [r7, #12]
 4764 024e FFF7FEFF 		bl	HAL_NAND_Read_Status
 4765 0252 0346     		mov	r3, r0
1433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
 4766              		.loc 1 1433 15
 4767 0254 402B     		cmp	r3, #64
 4768 0256 E7D1     		bne	.L136
1444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           }
1445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Go back to read mode */
1448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = ((uint8_t)0x00);
 4769              		.loc 1 1448 27
 4770 0258 BB69     		ldr	r3, [r7, #24]
 4771 025a 43F48033 		orr	r3, r3, #65536
 4772              		.loc 1 1448 65
 4773 025e 0022     		movs	r2, #0
 4774 0260 1A70     		strb	r2, [r3]
 4775              	.LBB578:
 4776              	.LBB579:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4777              		.loc 2 946 3
 4778              		.syntax unified
 4779              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4780 0262 BFF34F8F 		dsb 0xF
 4781              	@ 0 "" 2
 4782              		.loc 2 947 1
 4783              		.thumb
 4784              		.syntax unified
 4785 0266 00BF     		nop
 4786              	.L134:
 4787              	.LBE579:
 4788              	.LBE578:
1449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Get Data into Buffer */
1453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       for (index = 0U; index < hnand->Config.SpareAreaSize; index++)
 4789              		.loc 1 1453 18
 4790 0268 0023     		movs	r3, #0
 4791 026a FB62     		str	r3, [r7, #44]
 4792              		.loc 1 1453 7
 4793 026c 09E0     		b	.L137
 4794              	.L138:
1454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *buff = *(uint16_t *)deviceaddress;
 4795              		.loc 1 1455 18 discriminator 3
 4796 026e BB69     		ldr	r3, [r7, #24]
 4797              		.loc 1 1455 17 discriminator 3
 4798 0270 1A88     		ldrh	r2, [r3]
 4799              		.loc 1 1455 15 discriminator 3
 4800 0272 FB69     		ldr	r3, [r7, #28]
 4801 0274 1A80     		strh	r2, [r3]	@ movhi
1456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         buff++;
ARM GAS  /tmp/cc0wCm8A.s 			page 130


 4802              		.loc 1 1456 13 discriminator 3
 4803 0276 FB69     		ldr	r3, [r7, #28]
 4804 0278 0233     		adds	r3, r3, #2
 4805 027a FB61     		str	r3, [r7, #28]
1453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 4806              		.loc 1 1453 66 discriminator 3
 4807 027c FB6A     		ldr	r3, [r7, #44]
 4808 027e 0133     		adds	r3, r3, #1
 4809 0280 FB62     		str	r3, [r7, #44]
 4810              	.L137:
1453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 4811              		.loc 1 1453 45 discriminator 1
 4812 0282 FB68     		ldr	r3, [r7, #12]
 4813 0284 9B6A     		ldr	r3, [r3, #40]
1453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 4814              		.loc 1 1453 7 discriminator 1
 4815 0286 FA6A     		ldr	r2, [r7, #44]
 4816 0288 9A42     		cmp	r2, r3
 4817 028a F0D3     		bcc	.L138
1457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Increment read spare areas number */
1460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       numsparearearead++;
 4818              		.loc 1 1460 23
 4819 028c BB6A     		ldr	r3, [r7, #40]
 4820 028e 0133     		adds	r3, r3, #1
 4821 0290 BB62     		str	r3, [r7, #40]
1461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Decrement spare areas to read */
1463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       nbspare--;
 4822              		.loc 1 1463 14
 4823 0292 3B6A     		ldr	r3, [r7, #32]
 4824 0294 013B     		subs	r3, r3, #1
 4825 0296 3B62     		str	r3, [r7, #32]
1464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Increment the NAND address */
1466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       nandaddress = (uint32_t)(nandaddress + 1U);
 4826              		.loc 1 1466 19
 4827 0298 7B6A     		ldr	r3, [r7, #36]
 4828 029a 0133     		adds	r3, r3, #1
 4829 029c 7B62     		str	r3, [r7, #36]
 4830              	.L129:
1362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 4831              		.loc 1 1362 11
 4832 029e 3B6A     		ldr	r3, [r7, #32]
 4833 02a0 002B     		cmp	r3, #0
 4834 02a2 09D0     		beq	.L139
1362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 4835              		.loc 1 1362 61 discriminator 1
 4836 02a4 FB68     		ldr	r3, [r7, #12]
 4837 02a6 DB6A     		ldr	r3, [r3, #44]
1362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 4838              		.loc 1 1362 89 discriminator 1
 4839 02a8 FA68     		ldr	r2, [r7, #12]
 4840 02aa 126B     		ldr	r2, [r2, #48]
1362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 4841              		.loc 1 1362 73 discriminator 1
ARM GAS  /tmp/cc0wCm8A.s 			page 131


 4842 02ac 02FB03F3 		mul	r3, r2, r3
1362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 4843              		.loc 1 1362 28 discriminator 1
 4844 02b0 7A6A     		ldr	r2, [r7, #36]
 4845 02b2 9A42     		cmp	r2, r3
 4846 02b4 FFF4EAAE 		bcc	.L140
 4847              	.L139:
1467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     }
1468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
1470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_READY;
 4848              		.loc 1 1470 18
 4849 02b8 FB68     		ldr	r3, [r7, #12]
 4850 02ba 0122     		movs	r2, #1
 4851 02bc 83F82120 		strb	r2, [r3, #33]
1471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process unlocked */
1473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_UNLOCK(hnand);
 4852              		.loc 1 1473 5
 4853 02c0 FB68     		ldr	r3, [r7, #12]
 4854 02c2 0022     		movs	r2, #0
 4855 02c4 83F82020 		strb	r2, [r3, #32]
1474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
1476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_ERROR;
1478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return HAL_OK;
 4856              		.loc 1 1480 10
 4857 02c8 0023     		movs	r3, #0
 4858 02ca 00E0     		b	.L126
 4859              	.L127:
1477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 4860              		.loc 1 1477 12
 4861 02cc 0123     		movs	r3, #1
 4862              	.L126:
1481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 4863              		.loc 1 1481 1
 4864 02ce 1846     		mov	r0, r3
 4865 02d0 3037     		adds	r7, r7, #48
 4866              	.LCFI79:
 4867              		.cfi_def_cfa_offset 8
 4868 02d2 BD46     		mov	sp, r7
 4869              	.LCFI80:
 4870              		.cfi_def_cfa_register 13
 4871              		@ sp needed
 4872 02d4 80BD     		pop	{r7, pc}
 4873              		.cfi_endproc
 4874              	.LFE345:
 4876              		.section	.text.HAL_NAND_Write_SpareArea_8b,"ax",%progbits
 4877              		.align	1
 4878              		.global	HAL_NAND_Write_SpareArea_8b
 4879              		.syntax unified
 4880              		.thumb
 4881              		.thumb_func
 4882              		.fpu fpv5-d16
ARM GAS  /tmp/cc0wCm8A.s 			page 132


 4884              	HAL_NAND_Write_SpareArea_8b:
 4885              	.LFB346:
1482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
1484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Write Spare area(s) to NAND memory (8-bits addressing)
1485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
1486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
1487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
1488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pBuffer  pointer to source buffer to write
1489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  NumSpareAreaTowrite   number of spare areas to write to block
1490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
1491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
1492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Write_SpareArea_8b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddr
1493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****                                               uint8_t *pBuffer, uint32_t NumSpareAreaTowrite)
1494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 4886              		.loc 1 1494 1
 4887              		.cfi_startproc
 4888              		@ args = 0, pretend = 0, frame = 48
 4889              		@ frame_needed = 1, uses_anonymous_args = 0
 4890 0000 80B5     		push	{r7, lr}
 4891              	.LCFI81:
 4892              		.cfi_def_cfa_offset 8
 4893              		.cfi_offset 7, -8
 4894              		.cfi_offset 14, -4
 4895 0002 8CB0     		sub	sp, sp, #48
 4896              	.LCFI82:
 4897              		.cfi_def_cfa_offset 56
 4898 0004 00AF     		add	r7, sp, #0
 4899              	.LCFI83:
 4900              		.cfi_def_cfa_register 7
 4901 0006 F860     		str	r0, [r7, #12]
 4902 0008 B960     		str	r1, [r7, #8]
 4903 000a 7A60     		str	r2, [r7, #4]
 4904 000c 3B60     		str	r3, [r7]
1495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t index;
1496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t tickstart;
1497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t deviceaddress;
1498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t numspareareawritten = 0U;
 4905              		.loc 1 1498 12
 4906 000e 0023     		movs	r3, #0
 4907 0010 BB62     		str	r3, [r7, #40]
1499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t nandaddress;
1500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t columnaddress;
1501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t nbspare = NumSpareAreaTowrite;
 4908              		.loc 1 1501 12
 4909 0012 3B68     		ldr	r3, [r7]
 4910 0014 3B62     		str	r3, [r7, #32]
1502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint8_t *buff = pBuffer;
 4911              		.loc 1 1502 12
 4912 0016 7B68     		ldr	r3, [r7, #4]
 4913 0018 FB61     		str	r3, [r7, #28]
1503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check the NAND controller state */
1505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_BUSY)
 4914              		.loc 1 1505 12
 4915 001a FB68     		ldr	r3, [r7, #12]
 4916 001c 93F82130 		ldrb	r3, [r3, #33]
ARM GAS  /tmp/cc0wCm8A.s 			page 133


 4917 0020 DBB2     		uxtb	r3, r3
 4918              		.loc 1 1505 6
 4919 0022 022B     		cmp	r3, #2
 4920 0024 01D1     		bne	.L143
1506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_BUSY;
 4921              		.loc 1 1507 12
 4922 0026 0223     		movs	r3, #2
 4923 0028 57E1     		b	.L144
 4924              	.L143:
1508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if (hnand->State == HAL_NAND_STATE_READY)
 4925              		.loc 1 1509 17
 4926 002a FB68     		ldr	r3, [r7, #12]
 4927 002c 93F82130 		ldrb	r3, [r3, #33]
 4928 0030 DBB2     		uxtb	r3, r3
 4929              		.loc 1 1509 11
 4930 0032 012B     		cmp	r3, #1
 4931 0034 40F05081 		bne	.L145
1510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process Locked */
1512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_LOCK(hnand);
 4932              		.loc 1 1512 5
 4933 0038 FB68     		ldr	r3, [r7, #12]
 4934 003a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 4935 003e 012B     		cmp	r3, #1
 4936 0040 01D1     		bne	.L146
 4937              		.loc 1 1512 5 is_stmt 0 discriminator 1
 4938 0042 0223     		movs	r3, #2
 4939 0044 49E1     		b	.L144
 4940              	.L146:
 4941              		.loc 1 1512 5 discriminator 2
 4942 0046 FB68     		ldr	r3, [r7, #12]
 4943 0048 0122     		movs	r2, #1
 4944 004a 83F82020 		strb	r2, [r3, #32]
1513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
1515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_BUSY;
 4945              		.loc 1 1515 18 is_stmt 1 discriminator 2
 4946 004e FB68     		ldr	r3, [r7, #12]
 4947 0050 0222     		movs	r2, #2
 4948 0052 83F82120 		strb	r2, [r3, #33]
1516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Identify the device address */
1518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     deviceaddress = NAND_DEVICE;
 4949              		.loc 1 1518 19 discriminator 2
 4950 0056 4FF00043 		mov	r3, #-2147483648
 4951 005a BB61     		str	r3, [r7, #24]
1519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Page address calculation */
1521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     nandaddress = ARRAY_ADDRESS(pAddress, hnand);
 4952              		.loc 1 1521 19 discriminator 2
 4953 005c BB68     		ldr	r3, [r7, #8]
 4954 005e 1B88     		ldrh	r3, [r3]
 4955 0060 1946     		mov	r1, r3
 4956 0062 BB68     		ldr	r3, [r7, #8]
 4957 0064 9B88     		ldrh	r3, [r3, #4]
ARM GAS  /tmp/cc0wCm8A.s 			page 134


 4958 0066 1A46     		mov	r2, r3
 4959 0068 BB68     		ldr	r3, [r7, #8]
 4960 006a 5B88     		ldrh	r3, [r3, #2]
 4961 006c 1846     		mov	r0, r3
 4962 006e FB68     		ldr	r3, [r7, #12]
 4963 0070 9B6B     		ldr	r3, [r3, #56]
 4964 0072 03FB00F3 		mul	r3, r3, r0
 4965 0076 1344     		add	r3, r3, r2
 4966 0078 FA68     		ldr	r2, [r7, #12]
 4967 007a D26A     		ldr	r2, [r2, #44]
 4968 007c 02FB03F3 		mul	r3, r2, r3
 4969              		.loc 1 1521 17 discriminator 2
 4970 0080 0B44     		add	r3, r3, r1
 4971 0082 7B62     		str	r3, [r7, #36]
1522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Column in page address */
1524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     columnaddress = COLUMN_ADDRESS(hnand);
 4972              		.loc 1 1524 19 discriminator 2
 4973 0084 FB68     		ldr	r3, [r7, #12]
 4974 0086 5B6A     		ldr	r3, [r3, #36]
 4975 0088 7B61     		str	r3, [r7, #20]
1525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Spare area(s) write loop */
1527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     while ((nbspare != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.BlockNbr))
 4976              		.loc 1 1527 11 discriminator 2
 4977 008a 0EE1     		b	.L147
 4978              	.L157:
1528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
1529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Cards with page size <= 512 bytes */
1530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       if ((hnand->Config.PageSize) <= 512U)
 4979              		.loc 1 1530 25
 4980 008c FB68     		ldr	r3, [r7, #12]
 4981 008e 5B6A     		ldr	r3, [r3, #36]
 4982              		.loc 1 1530 10
 4983 0090 B3F5007F 		cmp	r3, #512
 4984 0094 58D8     		bhi	.L148
1531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Send write Spare area command sequence */
1533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_C;
 4985              		.loc 1 1533 27
 4986 0096 BB69     		ldr	r3, [r7, #24]
 4987 0098 43F48033 		orr	r3, r3, #65536
 4988              		.loc 1 1533 65
 4989 009c 5022     		movs	r2, #80
 4990 009e 1A70     		strb	r2, [r3]
 4991              	.LBB580:
 4992              	.LBB581:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 4993              		.loc 2 946 3
 4994              		.syntax unified
 4995              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 4996 00a0 BFF34F8F 		dsb 0xF
 4997              	@ 0 "" 2
 4998              		.loc 2 947 1
 4999              		.thumb
 5000              		.syntax unified
 5001 00a4 00BF     		nop
ARM GAS  /tmp/cc0wCm8A.s 			page 135


 5002              	.LBE581:
 5003              	.LBE580:
1534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 5004              		.loc 1 1535 27
 5005 00a6 BB69     		ldr	r3, [r7, #24]
 5006 00a8 43F48033 		orr	r3, r3, #65536
 5007              		.loc 1 1535 65
 5008 00ac 8022     		movs	r2, #128
 5009 00ae 1A70     		strb	r2, [r3]
 5010              	.LBB582:
 5011              	.LBB583:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5012              		.loc 2 946 3
 5013              		.syntax unified
 5014              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5015 00b0 BFF34F8F 		dsb 0xF
 5016              	@ 0 "" 2
 5017              		.loc 2 947 1
 5018              		.thumb
 5019              		.syntax unified
 5020 00b4 00BF     		nop
 5021              	.LBE583:
 5022              	.LBE582:
1536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if (((hnand->Config.BlockSize) * (hnand->Config.BlockNbr)) <= 65535U)
 5023              		.loc 1 1538 28
 5024 00b6 FB68     		ldr	r3, [r7, #12]
 5025 00b8 DB6A     		ldr	r3, [r3, #44]
 5026              		.loc 1 1538 56
 5027 00ba FA68     		ldr	r2, [r7, #12]
 5028 00bc 126B     		ldr	r2, [r2, #48]
 5029              		.loc 1 1538 40
 5030 00be 02FB03F3 		mul	r3, r2, r3
 5031              		.loc 1 1538 12
 5032 00c2 B3F5803F 		cmp	r3, #65536
 5033 00c6 1AD2     		bcs	.L149
1539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 5034              		.loc 1 1540 29
 5035 00c8 BB69     		ldr	r3, [r7, #24]
 5036 00ca 43F40033 		orr	r3, r3, #131072
 5037              		.loc 1 1540 68
 5038 00ce 0022     		movs	r2, #0
 5039 00d0 1A70     		strb	r2, [r3]
 5040              	.LBB584:
 5041              	.LBB585:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5042              		.loc 2 946 3
 5043              		.syntax unified
 5044              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5045 00d2 BFF34F8F 		dsb 0xF
 5046              	@ 0 "" 2
 5047              		.loc 2 947 1
 5048              		.thumb
 5049              		.syntax unified
ARM GAS  /tmp/cc0wCm8A.s 			page 136


 5050 00d6 00BF     		nop
 5051              	.LBE585:
 5052              	.LBE584:
1541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 5053              		.loc 1 1542 29
 5054 00d8 BB69     		ldr	r3, [r7, #24]
 5055 00da 43F40033 		orr	r3, r3, #131072
 5056              		.loc 1 1542 70
 5057 00de 7A6A     		ldr	r2, [r7, #36]
 5058 00e0 D2B2     		uxtb	r2, r2
 5059              		.loc 1 1542 68
 5060 00e2 1A70     		strb	r2, [r3]
 5061              	.LBB586:
 5062              	.LBB587:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5063              		.loc 2 946 3
 5064              		.syntax unified
 5065              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5066 00e4 BFF34F8F 		dsb 0xF
 5067              	@ 0 "" 2
 5068              		.loc 2 947 1
 5069              		.thumb
 5070              		.syntax unified
 5071 00e8 00BF     		nop
 5072              	.LBE587:
 5073              	.LBE586:
1543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 5074              		.loc 1 1544 70
 5075 00ea 7B6A     		ldr	r3, [r7, #36]
 5076 00ec 1A0A     		lsrs	r2, r3, #8
 5077              		.loc 1 1544 29
 5078 00ee BB69     		ldr	r3, [r7, #24]
 5079 00f0 43F40033 		orr	r3, r3, #131072
 5080              		.loc 1 1544 70
 5081 00f4 D2B2     		uxtb	r2, r2
 5082              		.loc 1 1544 68
 5083 00f6 1A70     		strb	r2, [r3]
 5084              	.LBB588:
 5085              	.LBB589:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5086              		.loc 2 946 3
 5087              		.syntax unified
 5088              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5089 00f8 BFF34F8F 		dsb 0xF
 5090              	@ 0 "" 2
 5091              		.loc 2 947 1
 5092              		.thumb
 5093              		.syntax unified
 5094 00fc 93E0     		b	.L150
 5095              	.L149:
 5096              	.LBE589:
 5097              	.LBE588:
1545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
ARM GAS  /tmp/cc0wCm8A.s 			page 137


1548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 5098              		.loc 1 1549 29
 5099 00fe BB69     		ldr	r3, [r7, #24]
 5100 0100 43F40033 		orr	r3, r3, #131072
 5101              		.loc 1 1549 68
 5102 0104 0022     		movs	r2, #0
 5103 0106 1A70     		strb	r2, [r3]
 5104              	.LBB590:
 5105              	.LBB591:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5106              		.loc 2 946 3
 5107              		.syntax unified
 5108              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5109 0108 BFF34F8F 		dsb 0xF
 5110              	@ 0 "" 2
 5111              		.loc 2 947 1
 5112              		.thumb
 5113              		.syntax unified
 5114 010c 00BF     		nop
 5115              	.LBE591:
 5116              	.LBE590:
1550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 5117              		.loc 1 1551 29
 5118 010e BB69     		ldr	r3, [r7, #24]
 5119 0110 43F40033 		orr	r3, r3, #131072
 5120              		.loc 1 1551 70
 5121 0114 7A6A     		ldr	r2, [r7, #36]
 5122 0116 D2B2     		uxtb	r2, r2
 5123              		.loc 1 1551 68
 5124 0118 1A70     		strb	r2, [r3]
 5125              	.LBB592:
 5126              	.LBB593:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5127              		.loc 2 946 3
 5128              		.syntax unified
 5129              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5130 011a BFF34F8F 		dsb 0xF
 5131              	@ 0 "" 2
 5132              		.loc 2 947 1
 5133              		.thumb
 5134              		.syntax unified
 5135 011e 00BF     		nop
 5136              	.LBE593:
 5137              	.LBE592:
1552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 5138              		.loc 1 1553 70
 5139 0120 7B6A     		ldr	r3, [r7, #36]
 5140 0122 1A0A     		lsrs	r2, r3, #8
 5141              		.loc 1 1553 29
 5142 0124 BB69     		ldr	r3, [r7, #24]
 5143 0126 43F40033 		orr	r3, r3, #131072
 5144              		.loc 1 1553 70
 5145 012a D2B2     		uxtb	r2, r2
 5146              		.loc 1 1553 68
ARM GAS  /tmp/cc0wCm8A.s 			page 138


 5147 012c 1A70     		strb	r2, [r3]
 5148              	.LBB594:
 5149              	.LBB595:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5150              		.loc 2 946 3
 5151              		.syntax unified
 5152              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5153 012e BFF34F8F 		dsb 0xF
 5154              	@ 0 "" 2
 5155              		.loc 2 947 1
 5156              		.thumb
 5157              		.syntax unified
 5158 0132 00BF     		nop
 5159              	.LBE595:
 5160              	.LBE594:
1554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 5161              		.loc 1 1555 70
 5162 0134 7B6A     		ldr	r3, [r7, #36]
 5163 0136 1A0C     		lsrs	r2, r3, #16
 5164              		.loc 1 1555 29
 5165 0138 BB69     		ldr	r3, [r7, #24]
 5166 013a 43F40033 		orr	r3, r3, #131072
 5167              		.loc 1 1555 70
 5168 013e D2B2     		uxtb	r2, r2
 5169              		.loc 1 1555 68
 5170 0140 1A70     		strb	r2, [r3]
 5171              	.LBB596:
 5172              	.LBB597:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5173              		.loc 2 946 3
 5174              		.syntax unified
 5175              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5176 0142 BFF34F8F 		dsb 0xF
 5177              	@ 0 "" 2
 5178              		.loc 2 947 1
 5179              		.thumb
 5180              		.syntax unified
 5181 0146 6EE0     		b	.L150
 5182              	.L148:
 5183              	.LBE597:
 5184              	.LBE596:
1556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       else /* (hnand->Config.PageSize) > 512 */
1560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Send write Spare area command sequence */
1562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
 5185              		.loc 1 1562 27
 5186 0148 BB69     		ldr	r3, [r7, #24]
 5187 014a 43F48033 		orr	r3, r3, #65536
 5188              		.loc 1 1562 65
 5189 014e 0022     		movs	r2, #0
 5190 0150 1A70     		strb	r2, [r3]
 5191              	.LBB598:
 5192              	.LBB599:
ARM GAS  /tmp/cc0wCm8A.s 			page 139


 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5193              		.loc 2 946 3
 5194              		.syntax unified
 5195              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5196 0152 BFF34F8F 		dsb 0xF
 5197              	@ 0 "" 2
 5198              		.loc 2 947 1
 5199              		.thumb
 5200              		.syntax unified
 5201 0156 00BF     		nop
 5202              	.LBE599:
 5203              	.LBE598:
1563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 5204              		.loc 1 1564 27
 5205 0158 BB69     		ldr	r3, [r7, #24]
 5206 015a 43F48033 		orr	r3, r3, #65536
 5207              		.loc 1 1564 65
 5208 015e 8022     		movs	r2, #128
 5209 0160 1A70     		strb	r2, [r3]
 5210              	.LBB600:
 5211              	.LBB601:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5212              		.loc 2 946 3
 5213              		.syntax unified
 5214              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5215 0162 BFF34F8F 		dsb 0xF
 5216              	@ 0 "" 2
 5217              		.loc 2 947 1
 5218              		.thumb
 5219              		.syntax unified
 5220 0166 00BF     		nop
 5221              	.LBE601:
 5222              	.LBE600:
1565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if (((hnand->Config.BlockSize) * (hnand->Config.BlockNbr)) <= 65535U)
 5223              		.loc 1 1567 28
 5224 0168 FB68     		ldr	r3, [r7, #12]
 5225 016a DB6A     		ldr	r3, [r3, #44]
 5226              		.loc 1 1567 56
 5227 016c FA68     		ldr	r2, [r7, #12]
 5228 016e 126B     		ldr	r2, [r2, #48]
 5229              		.loc 1 1567 40
 5230 0170 02FB03F3 		mul	r3, r2, r3
 5231              		.loc 1 1567 12
 5232 0174 B3F5803F 		cmp	r3, #65536
 5233 0178 25D2     		bcs	.L151
1568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress
 5234              		.loc 1 1569 29
 5235 017a BB69     		ldr	r3, [r7, #24]
 5236 017c 43F40033 		orr	r3, r3, #131072
 5237              		.loc 1 1569 70
 5238 0180 7A69     		ldr	r2, [r7, #20]
 5239 0182 D2B2     		uxtb	r2, r2
 5240              		.loc 1 1569 68
ARM GAS  /tmp/cc0wCm8A.s 			page 140


 5241 0184 1A70     		strb	r2, [r3]
 5242              	.LBB602:
 5243              	.LBB603:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5244              		.loc 2 946 3
 5245              		.syntax unified
 5246              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5247 0186 BFF34F8F 		dsb 0xF
 5248              	@ 0 "" 2
 5249              		.loc 2 947 1
 5250              		.thumb
 5251              		.syntax unified
 5252 018a 00BF     		nop
 5253              	.LBE603:
 5254              	.LBE602:
1570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress
 5255              		.loc 1 1571 70
 5256 018c 7B69     		ldr	r3, [r7, #20]
 5257 018e 1A0A     		lsrs	r2, r3, #8
 5258              		.loc 1 1571 29
 5259 0190 BB69     		ldr	r3, [r7, #24]
 5260 0192 43F40033 		orr	r3, r3, #131072
 5261              		.loc 1 1571 70
 5262 0196 D2B2     		uxtb	r2, r2
 5263              		.loc 1 1571 68
 5264 0198 1A70     		strb	r2, [r3]
 5265              	.LBB604:
 5266              	.LBB605:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5267              		.loc 2 946 3
 5268              		.syntax unified
 5269              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5270 019a BFF34F8F 		dsb 0xF
 5271              	@ 0 "" 2
 5272              		.loc 2 947 1
 5273              		.thumb
 5274              		.syntax unified
 5275 019e 00BF     		nop
 5276              	.LBE605:
 5277              	.LBE604:
1572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 5278              		.loc 1 1573 29
 5279 01a0 BB69     		ldr	r3, [r7, #24]
 5280 01a2 43F40033 		orr	r3, r3, #131072
 5281              		.loc 1 1573 70
 5282 01a6 7A6A     		ldr	r2, [r7, #36]
 5283 01a8 D2B2     		uxtb	r2, r2
 5284              		.loc 1 1573 68
 5285 01aa 1A70     		strb	r2, [r3]
 5286              	.LBB606:
 5287              	.LBB607:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5288              		.loc 2 946 3
 5289              		.syntax unified
 5290              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/cc0wCm8A.s 			page 141


 5291 01ac BFF34F8F 		dsb 0xF
 5292              	@ 0 "" 2
 5293              		.loc 2 947 1
 5294              		.thumb
 5295              		.syntax unified
 5296 01b0 00BF     		nop
 5297              	.LBE607:
 5298              	.LBE606:
1574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 5299              		.loc 1 1575 70
 5300 01b2 7B6A     		ldr	r3, [r7, #36]
 5301 01b4 1A0A     		lsrs	r2, r3, #8
 5302              		.loc 1 1575 29
 5303 01b6 BB69     		ldr	r3, [r7, #24]
 5304 01b8 43F40033 		orr	r3, r3, #131072
 5305              		.loc 1 1575 70
 5306 01bc D2B2     		uxtb	r2, r2
 5307              		.loc 1 1575 68
 5308 01be 1A70     		strb	r2, [r3]
 5309              	.LBB608:
 5310              	.LBB609:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5311              		.loc 2 946 3
 5312              		.syntax unified
 5313              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5314 01c0 BFF34F8F 		dsb 0xF
 5315              	@ 0 "" 2
 5316              		.loc 2 947 1
 5317              		.thumb
 5318              		.syntax unified
 5319 01c4 2FE0     		b	.L150
 5320              	.L151:
 5321              	.LBE609:
 5322              	.LBE608:
1576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress
 5323              		.loc 1 1580 29
 5324 01c6 BB69     		ldr	r3, [r7, #24]
 5325 01c8 43F40033 		orr	r3, r3, #131072
 5326              		.loc 1 1580 70
 5327 01cc 7A69     		ldr	r2, [r7, #20]
 5328 01ce D2B2     		uxtb	r2, r2
 5329              		.loc 1 1580 68
 5330 01d0 1A70     		strb	r2, [r3]
 5331              	.LBB610:
 5332              	.LBB611:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5333              		.loc 2 946 3
 5334              		.syntax unified
 5335              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5336 01d2 BFF34F8F 		dsb 0xF
 5337              	@ 0 "" 2
 5338              		.loc 2 947 1
ARM GAS  /tmp/cc0wCm8A.s 			page 142


 5339              		.thumb
 5340              		.syntax unified
 5341 01d6 00BF     		nop
 5342              	.LBE611:
 5343              	.LBE610:
1581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress
 5344              		.loc 1 1582 70
 5345 01d8 7B69     		ldr	r3, [r7, #20]
 5346 01da 1A0A     		lsrs	r2, r3, #8
 5347              		.loc 1 1582 29
 5348 01dc BB69     		ldr	r3, [r7, #24]
 5349 01de 43F40033 		orr	r3, r3, #131072
 5350              		.loc 1 1582 70
 5351 01e2 D2B2     		uxtb	r2, r2
 5352              		.loc 1 1582 68
 5353 01e4 1A70     		strb	r2, [r3]
 5354              	.LBB612:
 5355              	.LBB613:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5356              		.loc 2 946 3
 5357              		.syntax unified
 5358              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5359 01e6 BFF34F8F 		dsb 0xF
 5360              	@ 0 "" 2
 5361              		.loc 2 947 1
 5362              		.thumb
 5363              		.syntax unified
 5364 01ea 00BF     		nop
 5365              	.LBE613:
 5366              	.LBE612:
1583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 5367              		.loc 1 1584 29
 5368 01ec BB69     		ldr	r3, [r7, #24]
 5369 01ee 43F40033 		orr	r3, r3, #131072
 5370              		.loc 1 1584 70
 5371 01f2 7A6A     		ldr	r2, [r7, #36]
 5372 01f4 D2B2     		uxtb	r2, r2
 5373              		.loc 1 1584 68
 5374 01f6 1A70     		strb	r2, [r3]
 5375              	.LBB614:
 5376              	.LBB615:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5377              		.loc 2 946 3
 5378              		.syntax unified
 5379              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5380 01f8 BFF34F8F 		dsb 0xF
 5381              	@ 0 "" 2
 5382              		.loc 2 947 1
 5383              		.thumb
 5384              		.syntax unified
 5385 01fc 00BF     		nop
 5386              	.LBE615:
 5387              	.LBE614:
1585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
ARM GAS  /tmp/cc0wCm8A.s 			page 143


 5388              		.loc 1 1586 70
 5389 01fe 7B6A     		ldr	r3, [r7, #36]
 5390 0200 1A0A     		lsrs	r2, r3, #8
 5391              		.loc 1 1586 29
 5392 0202 BB69     		ldr	r3, [r7, #24]
 5393 0204 43F40033 		orr	r3, r3, #131072
 5394              		.loc 1 1586 70
 5395 0208 D2B2     		uxtb	r2, r2
 5396              		.loc 1 1586 68
 5397 020a 1A70     		strb	r2, [r3]
 5398              	.LBB616:
 5399              	.LBB617:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5400              		.loc 2 946 3
 5401              		.syntax unified
 5402              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5403 020c BFF34F8F 		dsb 0xF
 5404              	@ 0 "" 2
 5405              		.loc 2 947 1
 5406              		.thumb
 5407              		.syntax unified
 5408 0210 00BF     		nop
 5409              	.LBE617:
 5410              	.LBE616:
1587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 5411              		.loc 1 1588 70
 5412 0212 7B6A     		ldr	r3, [r7, #36]
 5413 0214 1A0C     		lsrs	r2, r3, #16
 5414              		.loc 1 1588 29
 5415 0216 BB69     		ldr	r3, [r7, #24]
 5416 0218 43F40033 		orr	r3, r3, #131072
 5417              		.loc 1 1588 70
 5418 021c D2B2     		uxtb	r2, r2
 5419              		.loc 1 1588 68
 5420 021e 1A70     		strb	r2, [r3]
 5421              	.LBB618:
 5422              	.LBB619:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5423              		.loc 2 946 3
 5424              		.syntax unified
 5425              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5426 0220 BFF34F8F 		dsb 0xF
 5427              	@ 0 "" 2
 5428              		.loc 2 947 1
 5429              		.thumb
 5430              		.syntax unified
 5431 0224 00BF     		nop
 5432              	.L150:
 5433              	.LBE619:
 5434              	.LBE618:
1589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Write data to memory */
1594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       for (index = 0U; index < hnand->Config.SpareAreaSize; index++)
ARM GAS  /tmp/cc0wCm8A.s 			page 144


 5435              		.loc 1 1594 18
 5436 0226 0023     		movs	r3, #0
 5437 0228 FB62     		str	r3, [r7, #44]
 5438              		.loc 1 1594 7
 5439 022a 0CE0     		b	.L152
 5440              	.L153:
1595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)deviceaddress = *buff;
 5441              		.loc 1 1596 10 discriminator 3
 5442 022c BB69     		ldr	r3, [r7, #24]
 5443              		.loc 1 1596 42 discriminator 3
 5444 022e FA69     		ldr	r2, [r7, #28]
 5445 0230 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5446              		.loc 1 1596 40 discriminator 3
 5447 0232 1A70     		strb	r2, [r3]
1597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         buff++;
 5448              		.loc 1 1597 13 discriminator 3
 5449 0234 FB69     		ldr	r3, [r7, #28]
 5450 0236 0133     		adds	r3, r3, #1
 5451 0238 FB61     		str	r3, [r7, #28]
 5452              	.LBB620:
 5453              	.LBB621:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5454              		.loc 2 946 3 discriminator 3
 5455              		.syntax unified
 5456              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5457 023a BFF34F8F 		dsb 0xF
 5458              	@ 0 "" 2
 5459              		.loc 2 947 1 discriminator 3
 5460              		.thumb
 5461              		.syntax unified
 5462 023e 00BF     		nop
 5463              	.LBE621:
 5464              	.LBE620:
1594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 5465              		.loc 1 1594 66 discriminator 3
 5466 0240 FB6A     		ldr	r3, [r7, #44]
 5467 0242 0133     		adds	r3, r3, #1
 5468 0244 FB62     		str	r3, [r7, #44]
 5469              	.L152:
1594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 5470              		.loc 1 1594 45 discriminator 1
 5471 0246 FB68     		ldr	r3, [r7, #12]
 5472 0248 9B6A     		ldr	r3, [r3, #40]
1594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 5473              		.loc 1 1594 7 discriminator 1
 5474 024a FA6A     		ldr	r2, [r7, #44]
 5475 024c 9A42     		cmp	r2, r3
 5476 024e EDD3     		bcc	.L153
1598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE_TRUE1;
 5477              		.loc 1 1601 25
 5478 0250 BB69     		ldr	r3, [r7, #24]
 5479 0252 43F48033 		orr	r3, r3, #65536
 5480              		.loc 1 1601 63
ARM GAS  /tmp/cc0wCm8A.s 			page 145


 5481 0256 1022     		movs	r2, #16
 5482 0258 1A70     		strb	r2, [r3]
 5483              	.LBB622:
 5484              	.LBB623:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5485              		.loc 2 946 3
 5486              		.syntax unified
 5487              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5488 025a BFF34F8F 		dsb 0xF
 5489              	@ 0 "" 2
 5490              		.loc 2 947 1
 5491              		.thumb
 5492              		.syntax unified
 5493 025e 00BF     		nop
 5494              	.LBE623:
 5495              	.LBE622:
1602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       __DSB();
1603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Get tick */
1605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       tickstart = HAL_GetTick();
 5496              		.loc 1 1605 19
 5497 0260 FFF7FEFF 		bl	HAL_GetTick
 5498 0264 3861     		str	r0, [r7, #16]
1606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Read status until NAND is ready */
1608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       while (HAL_NAND_Read_Status(hnand) != NAND_READY)
 5499              		.loc 1 1608 13
 5500 0266 11E0     		b	.L154
 5501              	.L155:
1609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if ((HAL_GetTick() - tickstart) > NAND_WRITE_TIMEOUT)
 5502              		.loc 1 1610 14
 5503 0268 FFF7FEFF 		bl	HAL_GetTick
 5504 026c 0246     		mov	r2, r0
 5505              		.loc 1 1610 28
 5506 026e 3B69     		ldr	r3, [r7, #16]
 5507 0270 D31A     		subs	r3, r2, r3
 5508              		.loc 1 1610 12
 5509 0272 B3F1807F 		cmp	r3, #16777216
 5510 0276 09D9     		bls	.L154
1611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           /* Update the NAND controller state */
1613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           hnand->State = HAL_NAND_STATE_ERROR;
 5511              		.loc 1 1613 24
 5512 0278 FB68     		ldr	r3, [r7, #12]
 5513 027a 0322     		movs	r2, #3
 5514 027c 83F82120 		strb	r2, [r3, #33]
1614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           /* Process unlocked */
1616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __HAL_UNLOCK(hnand);
 5515              		.loc 1 1616 11
 5516 0280 FB68     		ldr	r3, [r7, #12]
 5517 0282 0022     		movs	r2, #0
 5518 0284 83F82020 		strb	r2, [r3, #32]
1617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           return HAL_TIMEOUT;
 5519              		.loc 1 1618 18
ARM GAS  /tmp/cc0wCm8A.s 			page 146


 5520 0288 0323     		movs	r3, #3
 5521 028a 26E0     		b	.L144
 5522              	.L154:
1608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 5523              		.loc 1 1608 14
 5524 028c F868     		ldr	r0, [r7, #12]
 5525 028e FFF7FEFF 		bl	HAL_NAND_Read_Status
 5526 0292 0346     		mov	r3, r0
1608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 5527              		.loc 1 1608 13
 5528 0294 402B     		cmp	r3, #64
 5529 0296 E7D1     		bne	.L155
1619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Increment written spare areas number */
1623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       numspareareawritten++;
 5530              		.loc 1 1623 26
 5531 0298 BB6A     		ldr	r3, [r7, #40]
 5532 029a 0133     		adds	r3, r3, #1
 5533 029c BB62     		str	r3, [r7, #40]
1624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Decrement spare areas to write */
1626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       nbspare--;
 5534              		.loc 1 1626 14
 5535 029e 3B6A     		ldr	r3, [r7, #32]
 5536 02a0 013B     		subs	r3, r3, #1
 5537 02a2 3B62     		str	r3, [r7, #32]
1627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Increment the NAND address */
1629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       nandaddress = (uint32_t)(nandaddress + 1U);
 5538              		.loc 1 1629 19
 5539 02a4 7B6A     		ldr	r3, [r7, #36]
 5540 02a6 0133     		adds	r3, r3, #1
 5541 02a8 7B62     		str	r3, [r7, #36]
 5542              	.L147:
1527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 5543              		.loc 1 1527 11
 5544 02aa 3B6A     		ldr	r3, [r7, #32]
 5545 02ac 002B     		cmp	r3, #0
 5546 02ae 09D0     		beq	.L156
1527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 5547              		.loc 1 1527 61 discriminator 1
 5548 02b0 FB68     		ldr	r3, [r7, #12]
 5549 02b2 DB6A     		ldr	r3, [r3, #44]
1527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 5550              		.loc 1 1527 89 discriminator 1
 5551 02b4 FA68     		ldr	r2, [r7, #12]
 5552 02b6 126B     		ldr	r2, [r2, #48]
1527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 5553              		.loc 1 1527 73 discriminator 1
 5554 02b8 02FB03F3 		mul	r3, r2, r3
1527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 5555              		.loc 1 1527 28 discriminator 1
 5556 02bc 7A6A     		ldr	r2, [r7, #36]
 5557 02be 9A42     		cmp	r2, r3
 5558 02c0 FFF4E4AE 		bcc	.L157
ARM GAS  /tmp/cc0wCm8A.s 			page 147


 5559              	.L156:
1630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     }
1631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
1633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_READY;
 5560              		.loc 1 1633 18
 5561 02c4 FB68     		ldr	r3, [r7, #12]
 5562 02c6 0122     		movs	r2, #1
 5563 02c8 83F82120 		strb	r2, [r3, #33]
1634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process unlocked */
1636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_UNLOCK(hnand);
 5564              		.loc 1 1636 5
 5565 02cc FB68     		ldr	r3, [r7, #12]
 5566 02ce 0022     		movs	r2, #0
 5567 02d0 83F82020 		strb	r2, [r3, #32]
1637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
1639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_ERROR;
1641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return HAL_OK;
 5568              		.loc 1 1643 10
 5569 02d4 0023     		movs	r3, #0
 5570 02d6 00E0     		b	.L144
 5571              	.L145:
1640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 5572              		.loc 1 1640 12
 5573 02d8 0123     		movs	r3, #1
 5574              	.L144:
1644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 5575              		.loc 1 1644 1
 5576 02da 1846     		mov	r0, r3
 5577 02dc 3037     		adds	r7, r7, #48
 5578              	.LCFI84:
 5579              		.cfi_def_cfa_offset 8
 5580 02de BD46     		mov	sp, r7
 5581              	.LCFI85:
 5582              		.cfi_def_cfa_register 13
 5583              		@ sp needed
 5584 02e0 80BD     		pop	{r7, pc}
 5585              		.cfi_endproc
 5586              	.LFE346:
 5588              		.section	.text.HAL_NAND_Write_SpareArea_16b,"ax",%progbits
 5589              		.align	1
 5590              		.global	HAL_NAND_Write_SpareArea_16b
 5591              		.syntax unified
 5592              		.thumb
 5593              		.thumb_func
 5594              		.fpu fpv5-d16
 5596              	HAL_NAND_Write_SpareArea_16b:
 5597              	.LFB347:
1645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
1647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Write Spare area(s) to NAND memory (16-bits addressing)
1648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
ARM GAS  /tmp/cc0wCm8A.s 			page 148


1649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
1650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
1651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pBuffer  pointer to source buffer to write. pBuffer should be 16bits aligned.
1652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  NumSpareAreaTowrite   number of spare areas to write to block
1653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
1654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
1655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Write_SpareArea_16b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAdd
1656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****                                                uint16_t *pBuffer, uint32_t NumSpareAreaTowrite)
1657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 5598              		.loc 1 1657 1
 5599              		.cfi_startproc
 5600              		@ args = 0, pretend = 0, frame = 48
 5601              		@ frame_needed = 1, uses_anonymous_args = 0
 5602 0000 80B5     		push	{r7, lr}
 5603              	.LCFI86:
 5604              		.cfi_def_cfa_offset 8
 5605              		.cfi_offset 7, -8
 5606              		.cfi_offset 14, -4
 5607 0002 8CB0     		sub	sp, sp, #48
 5608              	.LCFI87:
 5609              		.cfi_def_cfa_offset 56
 5610 0004 00AF     		add	r7, sp, #0
 5611              	.LCFI88:
 5612              		.cfi_def_cfa_register 7
 5613 0006 F860     		str	r0, [r7, #12]
 5614 0008 B960     		str	r1, [r7, #8]
 5615 000a 7A60     		str	r2, [r7, #4]
 5616 000c 3B60     		str	r3, [r7]
1658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t index;
1659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t tickstart;
1660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t deviceaddress;
1661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t numspareareawritten = 0U;
 5617              		.loc 1 1661 12
 5618 000e 0023     		movs	r3, #0
 5619 0010 BB62     		str	r3, [r7, #40]
1662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t nandaddress;
1663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t columnaddress;
1664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t nbspare = NumSpareAreaTowrite;
 5620              		.loc 1 1664 12
 5621 0012 3B68     		ldr	r3, [r7]
 5622 0014 3B62     		str	r3, [r7, #32]
1665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint16_t *buff = pBuffer;
 5623              		.loc 1 1665 13
 5624 0016 7B68     		ldr	r3, [r7, #4]
 5625 0018 FB61     		str	r3, [r7, #28]
1666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check the NAND controller state */
1668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_BUSY)
 5626              		.loc 1 1668 12
 5627 001a FB68     		ldr	r3, [r7, #12]
 5628 001c 93F82130 		ldrb	r3, [r3, #33]
 5629 0020 DBB2     		uxtb	r3, r3
 5630              		.loc 1 1668 6
 5631 0022 022B     		cmp	r3, #2
 5632 0024 01D1     		bne	.L160
1669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_BUSY;
ARM GAS  /tmp/cc0wCm8A.s 			page 149


 5633              		.loc 1 1670 12
 5634 0026 0223     		movs	r3, #2
 5635 0028 57E1     		b	.L161
 5636              	.L160:
1671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if (hnand->State == HAL_NAND_STATE_READY)
 5637              		.loc 1 1672 17
 5638 002a FB68     		ldr	r3, [r7, #12]
 5639 002c 93F82130 		ldrb	r3, [r3, #33]
 5640 0030 DBB2     		uxtb	r3, r3
 5641              		.loc 1 1672 11
 5642 0032 012B     		cmp	r3, #1
 5643 0034 40F05081 		bne	.L162
1673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process Locked */
1675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_LOCK(hnand);
 5644              		.loc 1 1675 5
 5645 0038 FB68     		ldr	r3, [r7, #12]
 5646 003a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 5647 003e 012B     		cmp	r3, #1
 5648 0040 01D1     		bne	.L163
 5649              		.loc 1 1675 5 is_stmt 0 discriminator 1
 5650 0042 0223     		movs	r3, #2
 5651 0044 49E1     		b	.L161
 5652              	.L163:
 5653              		.loc 1 1675 5 discriminator 2
 5654 0046 FB68     		ldr	r3, [r7, #12]
 5655 0048 0122     		movs	r2, #1
 5656 004a 83F82020 		strb	r2, [r3, #32]
1676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
1678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_BUSY;
 5657              		.loc 1 1678 18 is_stmt 1 discriminator 2
 5658 004e FB68     		ldr	r3, [r7, #12]
 5659 0050 0222     		movs	r2, #2
 5660 0052 83F82120 		strb	r2, [r3, #33]
1679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Identify the device address */
1681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     deviceaddress = NAND_DEVICE;
 5661              		.loc 1 1681 19 discriminator 2
 5662 0056 4FF00043 		mov	r3, #-2147483648
 5663 005a BB61     		str	r3, [r7, #24]
1682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* NAND raw address calculation */
1684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     nandaddress = ARRAY_ADDRESS(pAddress, hnand);
 5664              		.loc 1 1684 19 discriminator 2
 5665 005c BB68     		ldr	r3, [r7, #8]
 5666 005e 1B88     		ldrh	r3, [r3]
 5667 0060 1946     		mov	r1, r3
 5668 0062 BB68     		ldr	r3, [r7, #8]
 5669 0064 9B88     		ldrh	r3, [r3, #4]
 5670 0066 1A46     		mov	r2, r3
 5671 0068 BB68     		ldr	r3, [r7, #8]
 5672 006a 5B88     		ldrh	r3, [r3, #2]
 5673 006c 1846     		mov	r0, r3
 5674 006e FB68     		ldr	r3, [r7, #12]
 5675 0070 9B6B     		ldr	r3, [r3, #56]
ARM GAS  /tmp/cc0wCm8A.s 			page 150


 5676 0072 03FB00F3 		mul	r3, r3, r0
 5677 0076 1344     		add	r3, r3, r2
 5678 0078 FA68     		ldr	r2, [r7, #12]
 5679 007a D26A     		ldr	r2, [r2, #44]
 5680 007c 02FB03F3 		mul	r3, r2, r3
 5681              		.loc 1 1684 17 discriminator 2
 5682 0080 0B44     		add	r3, r3, r1
 5683 0082 7B62     		str	r3, [r7, #36]
1685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Column in page address */
1687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     columnaddress = (uint32_t)(COLUMN_ADDRESS(hnand));
 5684              		.loc 1 1687 19 discriminator 2
 5685 0084 FB68     		ldr	r3, [r7, #12]
 5686 0086 5B6A     		ldr	r3, [r3, #36]
 5687 0088 7B61     		str	r3, [r7, #20]
1688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Spare area(s) write loop */
1690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     while ((nbspare != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.BlockNbr))
 5688              		.loc 1 1690 11 discriminator 2
 5689 008a 0EE1     		b	.L164
 5690              	.L174:
1691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
1692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Cards with page size <= 512 bytes */
1693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       if ((hnand->Config.PageSize) <= 512U)
 5691              		.loc 1 1693 25
 5692 008c FB68     		ldr	r3, [r7, #12]
 5693 008e 5B6A     		ldr	r3, [r3, #36]
 5694              		.loc 1 1693 10
 5695 0090 B3F5007F 		cmp	r3, #512
 5696 0094 58D8     		bhi	.L165
1694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Send write Spare area command sequence */
1696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_C;
 5697              		.loc 1 1696 27
 5698 0096 BB69     		ldr	r3, [r7, #24]
 5699 0098 43F48033 		orr	r3, r3, #65536
 5700              		.loc 1 1696 65
 5701 009c 5022     		movs	r2, #80
 5702 009e 1A70     		strb	r2, [r3]
 5703              	.LBB624:
 5704              	.LBB625:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5705              		.loc 2 946 3
 5706              		.syntax unified
 5707              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5708 00a0 BFF34F8F 		dsb 0xF
 5709              	@ 0 "" 2
 5710              		.loc 2 947 1
 5711              		.thumb
 5712              		.syntax unified
 5713 00a4 00BF     		nop
 5714              	.LBE625:
 5715              	.LBE624:
1697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 5716              		.loc 1 1698 27
 5717 00a6 BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/cc0wCm8A.s 			page 151


 5718 00a8 43F48033 		orr	r3, r3, #65536
 5719              		.loc 1 1698 65
 5720 00ac 8022     		movs	r2, #128
 5721 00ae 1A70     		strb	r2, [r3]
 5722              	.LBB626:
 5723              	.LBB627:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5724              		.loc 2 946 3
 5725              		.syntax unified
 5726              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5727 00b0 BFF34F8F 		dsb 0xF
 5728              	@ 0 "" 2
 5729              		.loc 2 947 1
 5730              		.thumb
 5731              		.syntax unified
 5732 00b4 00BF     		nop
 5733              	.LBE627:
 5734              	.LBE626:
1699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if (((hnand->Config.BlockSize) * (hnand->Config.BlockNbr)) <= 65535U)
 5735              		.loc 1 1701 28
 5736 00b6 FB68     		ldr	r3, [r7, #12]
 5737 00b8 DB6A     		ldr	r3, [r3, #44]
 5738              		.loc 1 1701 56
 5739 00ba FA68     		ldr	r2, [r7, #12]
 5740 00bc 126B     		ldr	r2, [r2, #48]
 5741              		.loc 1 1701 40
 5742 00be 02FB03F3 		mul	r3, r2, r3
 5743              		.loc 1 1701 12
 5744 00c2 B3F5803F 		cmp	r3, #65536
 5745 00c6 1AD2     		bcs	.L166
1702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 5746              		.loc 1 1703 29
 5747 00c8 BB69     		ldr	r3, [r7, #24]
 5748 00ca 43F40033 		orr	r3, r3, #131072
 5749              		.loc 1 1703 68
 5750 00ce 0022     		movs	r2, #0
 5751 00d0 1A70     		strb	r2, [r3]
 5752              	.LBB628:
 5753              	.LBB629:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5754              		.loc 2 946 3
 5755              		.syntax unified
 5756              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5757 00d2 BFF34F8F 		dsb 0xF
 5758              	@ 0 "" 2
 5759              		.loc 2 947 1
 5760              		.thumb
 5761              		.syntax unified
 5762 00d6 00BF     		nop
 5763              	.LBE629:
 5764              	.LBE628:
1704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 5765              		.loc 1 1705 29
ARM GAS  /tmp/cc0wCm8A.s 			page 152


 5766 00d8 BB69     		ldr	r3, [r7, #24]
 5767 00da 43F40033 		orr	r3, r3, #131072
 5768              		.loc 1 1705 70
 5769 00de 7A6A     		ldr	r2, [r7, #36]
 5770 00e0 D2B2     		uxtb	r2, r2
 5771              		.loc 1 1705 68
 5772 00e2 1A70     		strb	r2, [r3]
 5773              	.LBB630:
 5774              	.LBB631:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5775              		.loc 2 946 3
 5776              		.syntax unified
 5777              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5778 00e4 BFF34F8F 		dsb 0xF
 5779              	@ 0 "" 2
 5780              		.loc 2 947 1
 5781              		.thumb
 5782              		.syntax unified
 5783 00e8 00BF     		nop
 5784              	.LBE631:
 5785              	.LBE630:
1706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 5786              		.loc 1 1707 70
 5787 00ea 7B6A     		ldr	r3, [r7, #36]
 5788 00ec 1A0A     		lsrs	r2, r3, #8
 5789              		.loc 1 1707 29
 5790 00ee BB69     		ldr	r3, [r7, #24]
 5791 00f0 43F40033 		orr	r3, r3, #131072
 5792              		.loc 1 1707 70
 5793 00f4 D2B2     		uxtb	r2, r2
 5794              		.loc 1 1707 68
 5795 00f6 1A70     		strb	r2, [r3]
 5796              	.LBB632:
 5797              	.LBB633:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5798              		.loc 2 946 3
 5799              		.syntax unified
 5800              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5801 00f8 BFF34F8F 		dsb 0xF
 5802              	@ 0 "" 2
 5803              		.loc 2 947 1
 5804              		.thumb
 5805              		.syntax unified
 5806 00fc 93E0     		b	.L167
 5807              	.L166:
 5808              	.LBE633:
 5809              	.LBE632:
1708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00U;
 5810              		.loc 1 1712 29
 5811 00fe BB69     		ldr	r3, [r7, #24]
 5812 0100 43F40033 		orr	r3, r3, #131072
 5813              		.loc 1 1712 68
ARM GAS  /tmp/cc0wCm8A.s 			page 153


 5814 0104 0022     		movs	r2, #0
 5815 0106 1A70     		strb	r2, [r3]
 5816              	.LBB634:
 5817              	.LBB635:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5818              		.loc 2 946 3
 5819              		.syntax unified
 5820              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5821 0108 BFF34F8F 		dsb 0xF
 5822              	@ 0 "" 2
 5823              		.loc 2 947 1
 5824              		.thumb
 5825              		.syntax unified
 5826 010c 00BF     		nop
 5827              	.LBE635:
 5828              	.LBE634:
1713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 5829              		.loc 1 1714 29
 5830 010e BB69     		ldr	r3, [r7, #24]
 5831 0110 43F40033 		orr	r3, r3, #131072
 5832              		.loc 1 1714 70
 5833 0114 7A6A     		ldr	r2, [r7, #36]
 5834 0116 D2B2     		uxtb	r2, r2
 5835              		.loc 1 1714 68
 5836 0118 1A70     		strb	r2, [r3]
 5837              	.LBB636:
 5838              	.LBB637:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5839              		.loc 2 946 3
 5840              		.syntax unified
 5841              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5842 011a BFF34F8F 		dsb 0xF
 5843              	@ 0 "" 2
 5844              		.loc 2 947 1
 5845              		.thumb
 5846              		.syntax unified
 5847 011e 00BF     		nop
 5848              	.LBE637:
 5849              	.LBE636:
1715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 5850              		.loc 1 1716 70
 5851 0120 7B6A     		ldr	r3, [r7, #36]
 5852 0122 1A0A     		lsrs	r2, r3, #8
 5853              		.loc 1 1716 29
 5854 0124 BB69     		ldr	r3, [r7, #24]
 5855 0126 43F40033 		orr	r3, r3, #131072
 5856              		.loc 1 1716 70
 5857 012a D2B2     		uxtb	r2, r2
 5858              		.loc 1 1716 68
 5859 012c 1A70     		strb	r2, [r3]
 5860              	.LBB638:
 5861              	.LBB639:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5862              		.loc 2 946 3
 5863              		.syntax unified
ARM GAS  /tmp/cc0wCm8A.s 			page 154


 5864              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5865 012e BFF34F8F 		dsb 0xF
 5866              	@ 0 "" 2
 5867              		.loc 2 947 1
 5868              		.thumb
 5869              		.syntax unified
 5870 0132 00BF     		nop
 5871              	.LBE639:
 5872              	.LBE638:
1717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 5873              		.loc 1 1718 70
 5874 0134 7B6A     		ldr	r3, [r7, #36]
 5875 0136 1A0C     		lsrs	r2, r3, #16
 5876              		.loc 1 1718 29
 5877 0138 BB69     		ldr	r3, [r7, #24]
 5878 013a 43F40033 		orr	r3, r3, #131072
 5879              		.loc 1 1718 70
 5880 013e D2B2     		uxtb	r2, r2
 5881              		.loc 1 1718 68
 5882 0140 1A70     		strb	r2, [r3]
 5883              	.LBB640:
 5884              	.LBB641:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5885              		.loc 2 946 3
 5886              		.syntax unified
 5887              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5888 0142 BFF34F8F 		dsb 0xF
 5889              	@ 0 "" 2
 5890              		.loc 2 947 1
 5891              		.thumb
 5892              		.syntax unified
 5893 0146 6EE0     		b	.L167
 5894              	.L165:
 5895              	.LBE641:
 5896              	.LBE640:
1719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       else /* (hnand->Config.PageSize) > 512 */
1723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* Send write Spare area command sequence */
1725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
 5897              		.loc 1 1725 27
 5898 0148 BB69     		ldr	r3, [r7, #24]
 5899 014a 43F48033 		orr	r3, r3, #65536
 5900              		.loc 1 1725 65
 5901 014e 0022     		movs	r2, #0
 5902 0150 1A70     		strb	r2, [r3]
 5903              	.LBB642:
 5904              	.LBB643:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5905              		.loc 2 946 3
 5906              		.syntax unified
 5907              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5908 0152 BFF34F8F 		dsb 0xF
 5909              	@ 0 "" 2
ARM GAS  /tmp/cc0wCm8A.s 			page 155


 5910              		.loc 2 947 1
 5911              		.thumb
 5912              		.syntax unified
 5913 0156 00BF     		nop
 5914              	.LBE643:
 5915              	.LBE642:
1726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 5916              		.loc 1 1727 27
 5917 0158 BB69     		ldr	r3, [r7, #24]
 5918 015a 43F48033 		orr	r3, r3, #65536
 5919              		.loc 1 1727 65
 5920 015e 8022     		movs	r2, #128
 5921 0160 1A70     		strb	r2, [r3]
 5922              	.LBB644:
 5923              	.LBB645:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5924              		.loc 2 946 3
 5925              		.syntax unified
 5926              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5927 0162 BFF34F8F 		dsb 0xF
 5928              	@ 0 "" 2
 5929              		.loc 2 947 1
 5930              		.thumb
 5931              		.syntax unified
 5932 0166 00BF     		nop
 5933              	.LBE645:
 5934              	.LBE644:
1728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if (((hnand->Config.BlockSize) * (hnand->Config.BlockNbr)) <= 65535U)
 5935              		.loc 1 1730 28
 5936 0168 FB68     		ldr	r3, [r7, #12]
 5937 016a DB6A     		ldr	r3, [r3, #44]
 5938              		.loc 1 1730 56
 5939 016c FA68     		ldr	r2, [r7, #12]
 5940 016e 126B     		ldr	r2, [r2, #48]
 5941              		.loc 1 1730 40
 5942 0170 02FB03F3 		mul	r3, r2, r3
 5943              		.loc 1 1730 12
 5944 0174 B3F5803F 		cmp	r3, #65536
 5945 0178 25D2     		bcs	.L168
1731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress
 5946              		.loc 1 1732 29
 5947 017a BB69     		ldr	r3, [r7, #24]
 5948 017c 43F40033 		orr	r3, r3, #131072
 5949              		.loc 1 1732 70
 5950 0180 7A69     		ldr	r2, [r7, #20]
 5951 0182 D2B2     		uxtb	r2, r2
 5952              		.loc 1 1732 68
 5953 0184 1A70     		strb	r2, [r3]
 5954              	.LBB646:
 5955              	.LBB647:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5956              		.loc 2 946 3
 5957              		.syntax unified
ARM GAS  /tmp/cc0wCm8A.s 			page 156


 5958              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5959 0186 BFF34F8F 		dsb 0xF
 5960              	@ 0 "" 2
 5961              		.loc 2 947 1
 5962              		.thumb
 5963              		.syntax unified
 5964 018a 00BF     		nop
 5965              	.LBE647:
 5966              	.LBE646:
1733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress
 5967              		.loc 1 1734 70
 5968 018c 7B69     		ldr	r3, [r7, #20]
 5969 018e 1A0A     		lsrs	r2, r3, #8
 5970              		.loc 1 1734 29
 5971 0190 BB69     		ldr	r3, [r7, #24]
 5972 0192 43F40033 		orr	r3, r3, #131072
 5973              		.loc 1 1734 70
 5974 0196 D2B2     		uxtb	r2, r2
 5975              		.loc 1 1734 68
 5976 0198 1A70     		strb	r2, [r3]
 5977              	.LBB648:
 5978              	.LBB649:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 5979              		.loc 2 946 3
 5980              		.syntax unified
 5981              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 5982 019a BFF34F8F 		dsb 0xF
 5983              	@ 0 "" 2
 5984              		.loc 2 947 1
 5985              		.thumb
 5986              		.syntax unified
 5987 019e 00BF     		nop
 5988              	.LBE649:
 5989              	.LBE648:
1735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 5990              		.loc 1 1736 29
 5991 01a0 BB69     		ldr	r3, [r7, #24]
 5992 01a2 43F40033 		orr	r3, r3, #131072
 5993              		.loc 1 1736 70
 5994 01a6 7A6A     		ldr	r2, [r7, #36]
 5995 01a8 D2B2     		uxtb	r2, r2
 5996              		.loc 1 1736 68
 5997 01aa 1A70     		strb	r2, [r3]
 5998              	.LBB650:
 5999              	.LBB651:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 6000              		.loc 2 946 3
 6001              		.syntax unified
 6002              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 6003 01ac BFF34F8F 		dsb 0xF
 6004              	@ 0 "" 2
 6005              		.loc 2 947 1
 6006              		.thumb
 6007              		.syntax unified
 6008 01b0 00BF     		nop
ARM GAS  /tmp/cc0wCm8A.s 			page 157


 6009              	.LBE651:
 6010              	.LBE650:
1737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 6011              		.loc 1 1738 70
 6012 01b2 7B6A     		ldr	r3, [r7, #36]
 6013 01b4 1A0A     		lsrs	r2, r3, #8
 6014              		.loc 1 1738 29
 6015 01b6 BB69     		ldr	r3, [r7, #24]
 6016 01b8 43F40033 		orr	r3, r3, #131072
 6017              		.loc 1 1738 70
 6018 01bc D2B2     		uxtb	r2, r2
 6019              		.loc 1 1738 68
 6020 01be 1A70     		strb	r2, [r3]
 6021              	.LBB652:
 6022              	.LBB653:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 6023              		.loc 2 946 3
 6024              		.syntax unified
 6025              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 6026 01c0 BFF34F8F 		dsb 0xF
 6027              	@ 0 "" 2
 6028              		.loc 2 947 1
 6029              		.thumb
 6030              		.syntax unified
 6031 01c4 2FE0     		b	.L167
 6032              	.L168:
 6033              	.LBE653:
 6034              	.LBE652:
1739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress
 6035              		.loc 1 1743 29
 6036 01c6 BB69     		ldr	r3, [r7, #24]
 6037 01c8 43F40033 		orr	r3, r3, #131072
 6038              		.loc 1 1743 70
 6039 01cc 7A69     		ldr	r2, [r7, #20]
 6040 01ce D2B2     		uxtb	r2, r2
 6041              		.loc 1 1743 68
 6042 01d0 1A70     		strb	r2, [r3]
 6043              	.LBB654:
 6044              	.LBB655:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 6045              		.loc 2 946 3
 6046              		.syntax unified
 6047              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 6048 01d2 BFF34F8F 		dsb 0xF
 6049              	@ 0 "" 2
 6050              		.loc 2 947 1
 6051              		.thumb
 6052              		.syntax unified
 6053 01d6 00BF     		nop
 6054              	.LBE655:
 6055              	.LBE654:
1744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
ARM GAS  /tmp/cc0wCm8A.s 			page 158


1745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress
 6056              		.loc 1 1745 70
 6057 01d8 7B69     		ldr	r3, [r7, #20]
 6058 01da 1A0A     		lsrs	r2, r3, #8
 6059              		.loc 1 1745 29
 6060 01dc BB69     		ldr	r3, [r7, #24]
 6061 01de 43F40033 		orr	r3, r3, #131072
 6062              		.loc 1 1745 70
 6063 01e2 D2B2     		uxtb	r2, r2
 6064              		.loc 1 1745 68
 6065 01e4 1A70     		strb	r2, [r3]
 6066              	.LBB656:
 6067              	.LBB657:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 6068              		.loc 2 946 3
 6069              		.syntax unified
 6070              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 6071 01e6 BFF34F8F 		dsb 0xF
 6072              	@ 0 "" 2
 6073              		.loc 2 947 1
 6074              		.thumb
 6075              		.syntax unified
 6076 01ea 00BF     		nop
 6077              	.LBE657:
 6078              	.LBE656:
1746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 6079              		.loc 1 1747 29
 6080 01ec BB69     		ldr	r3, [r7, #24]
 6081 01ee 43F40033 		orr	r3, r3, #131072
 6082              		.loc 1 1747 70
 6083 01f2 7A6A     		ldr	r2, [r7, #36]
 6084 01f4 D2B2     		uxtb	r2, r2
 6085              		.loc 1 1747 68
 6086 01f6 1A70     		strb	r2, [r3]
 6087              	.LBB658:
 6088              	.LBB659:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 6089              		.loc 2 946 3
 6090              		.syntax unified
 6091              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 6092 01f8 BFF34F8F 		dsb 0xF
 6093              	@ 0 "" 2
 6094              		.loc 2 947 1
 6095              		.thumb
 6096              		.syntax unified
 6097 01fc 00BF     		nop
 6098              	.LBE659:
 6099              	.LBE658:
1748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 6100              		.loc 1 1749 70
 6101 01fe 7B6A     		ldr	r3, [r7, #36]
 6102 0200 1A0A     		lsrs	r2, r3, #8
 6103              		.loc 1 1749 29
 6104 0202 BB69     		ldr	r3, [r7, #24]
 6105 0204 43F40033 		orr	r3, r3, #131072
ARM GAS  /tmp/cc0wCm8A.s 			page 159


 6106              		.loc 1 1749 70
 6107 0208 D2B2     		uxtb	r2, r2
 6108              		.loc 1 1749 68
 6109 020a 1A70     		strb	r2, [r3]
 6110              	.LBB660:
 6111              	.LBB661:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 6112              		.loc 2 946 3
 6113              		.syntax unified
 6114              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 6115 020c BFF34F8F 		dsb 0xF
 6116              	@ 0 "" 2
 6117              		.loc 2 947 1
 6118              		.thumb
 6119              		.syntax unified
 6120 0210 00BF     		nop
 6121              	.LBE661:
 6122              	.LBE660:
1750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 6123              		.loc 1 1751 70
 6124 0212 7B6A     		ldr	r3, [r7, #36]
 6125 0214 1A0C     		lsrs	r2, r3, #16
 6126              		.loc 1 1751 29
 6127 0216 BB69     		ldr	r3, [r7, #24]
 6128 0218 43F40033 		orr	r3, r3, #131072
 6129              		.loc 1 1751 70
 6130 021c D2B2     		uxtb	r2, r2
 6131              		.loc 1 1751 68
 6132 021e 1A70     		strb	r2, [r3]
 6133              	.LBB662:
 6134              	.LBB663:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 6135              		.loc 2 946 3
 6136              		.syntax unified
 6137              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 6138 0220 BFF34F8F 		dsb 0xF
 6139              	@ 0 "" 2
 6140              		.loc 2 947 1
 6141              		.thumb
 6142              		.syntax unified
 6143 0224 00BF     		nop
 6144              	.L167:
 6145              	.LBE663:
 6146              	.LBE662:
1752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __DSB();
1753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Write data to memory */
1757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       for (index = 0U; index < hnand->Config.SpareAreaSize; index++)
 6147              		.loc 1 1757 18
 6148 0226 0023     		movs	r3, #0
 6149 0228 FB62     		str	r3, [r7, #44]
 6150              		.loc 1 1757 7
 6151 022a 0CE0     		b	.L169
 6152              	.L170:
ARM GAS  /tmp/cc0wCm8A.s 			page 160


1758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         *(__IO uint16_t *)deviceaddress = *buff;
 6153              		.loc 1 1759 10 discriminator 3
 6154 022c BB69     		ldr	r3, [r7, #24]
 6155              		.loc 1 1759 43 discriminator 3
 6156 022e FA69     		ldr	r2, [r7, #28]
 6157 0230 1288     		ldrh	r2, [r2]
 6158              		.loc 1 1759 41 discriminator 3
 6159 0232 1A80     		strh	r2, [r3]	@ movhi
1760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         buff++;
 6160              		.loc 1 1760 13 discriminator 3
 6161 0234 FB69     		ldr	r3, [r7, #28]
 6162 0236 0233     		adds	r3, r3, #2
 6163 0238 FB61     		str	r3, [r7, #28]
 6164              	.LBB664:
 6165              	.LBB665:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 6166              		.loc 2 946 3 discriminator 3
 6167              		.syntax unified
 6168              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 6169 023a BFF34F8F 		dsb 0xF
 6170              	@ 0 "" 2
 6171              		.loc 2 947 1 discriminator 3
 6172              		.thumb
 6173              		.syntax unified
 6174 023e 00BF     		nop
 6175              	.LBE665:
 6176              	.LBE664:
1757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 6177              		.loc 1 1757 66 discriminator 3
 6178 0240 FB6A     		ldr	r3, [r7, #44]
 6179 0242 0133     		adds	r3, r3, #1
 6180 0244 FB62     		str	r3, [r7, #44]
 6181              	.L169:
1757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 6182              		.loc 1 1757 45 discriminator 1
 6183 0246 FB68     		ldr	r3, [r7, #12]
 6184 0248 9B6A     		ldr	r3, [r3, #40]
1757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 6185              		.loc 1 1757 7 discriminator 1
 6186 024a FA6A     		ldr	r2, [r7, #44]
 6187 024c 9A42     		cmp	r2, r3
 6188 024e EDD3     		bcc	.L170
1761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         __DSB();
1762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE_TRUE1;
 6189              		.loc 1 1764 25
 6190 0250 BB69     		ldr	r3, [r7, #24]
 6191 0252 43F48033 		orr	r3, r3, #65536
 6192              		.loc 1 1764 63
 6193 0256 1022     		movs	r2, #16
 6194 0258 1A70     		strb	r2, [r3]
 6195              	.LBB666:
 6196              	.LBB667:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 6197              		.loc 2 946 3
ARM GAS  /tmp/cc0wCm8A.s 			page 161


 6198              		.syntax unified
 6199              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 6200 025a BFF34F8F 		dsb 0xF
 6201              	@ 0 "" 2
 6202              		.loc 2 947 1
 6203              		.thumb
 6204              		.syntax unified
 6205 025e 00BF     		nop
 6206              	.LBE667:
 6207              	.LBE666:
1765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       __DSB();
1766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Get tick */
1768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       tickstart = HAL_GetTick();
 6208              		.loc 1 1768 19
 6209 0260 FFF7FEFF 		bl	HAL_GetTick
 6210 0264 3861     		str	r0, [r7, #16]
1769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Read status until NAND is ready */
1771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       while (HAL_NAND_Read_Status(hnand) != NAND_READY)
 6211              		.loc 1 1771 13
 6212 0266 11E0     		b	.L171
 6213              	.L172:
1772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         if ((HAL_GetTick() - tickstart) > NAND_WRITE_TIMEOUT)
 6214              		.loc 1 1773 14
 6215 0268 FFF7FEFF 		bl	HAL_GetTick
 6216 026c 0246     		mov	r2, r0
 6217              		.loc 1 1773 28
 6218 026e 3B69     		ldr	r3, [r7, #16]
 6219 0270 D31A     		subs	r3, r2, r3
 6220              		.loc 1 1773 12
 6221 0272 B3F1807F 		cmp	r3, #16777216
 6222 0276 09D9     		bls	.L171
1774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         {
1775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           /* Update the NAND controller state */
1776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           hnand->State = HAL_NAND_STATE_ERROR;
 6223              		.loc 1 1776 24
 6224 0278 FB68     		ldr	r3, [r7, #12]
 6225 027a 0322     		movs	r2, #3
 6226 027c 83F82120 		strb	r2, [r3, #33]
1777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           /* Process unlocked */
1779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           __HAL_UNLOCK(hnand);
 6227              		.loc 1 1779 11
 6228 0280 FB68     		ldr	r3, [r7, #12]
 6229 0282 0022     		movs	r2, #0
 6230 0284 83F82020 		strb	r2, [r3, #32]
1780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****           return HAL_TIMEOUT;
 6231              		.loc 1 1781 18
 6232 0288 0323     		movs	r3, #3
 6233 028a 26E0     		b	.L161
 6234              	.L171:
1771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 6235              		.loc 1 1771 14
 6236 028c F868     		ldr	r0, [r7, #12]
ARM GAS  /tmp/cc0wCm8A.s 			page 162


 6237 028e FFF7FEFF 		bl	HAL_NAND_Read_Status
 6238 0292 0346     		mov	r3, r0
1771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
 6239              		.loc 1 1771 13
 6240 0294 402B     		cmp	r3, #64
 6241 0296 E7D1     		bne	.L172
1782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         }
1783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Increment written spare areas number */
1786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       numspareareawritten++;
 6242              		.loc 1 1786 26
 6243 0298 BB6A     		ldr	r3, [r7, #40]
 6244 029a 0133     		adds	r3, r3, #1
 6245 029c BB62     		str	r3, [r7, #40]
1787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Decrement spare areas to write */
1789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       nbspare--;
 6246              		.loc 1 1789 14
 6247 029e 3B6A     		ldr	r3, [r7, #32]
 6248 02a0 013B     		subs	r3, r3, #1
 6249 02a2 3B62     		str	r3, [r7, #32]
1790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       /* Increment the NAND address */
1792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       nandaddress = (uint32_t)(nandaddress + 1U);
 6250              		.loc 1 1792 19
 6251 02a4 7B6A     		ldr	r3, [r7, #36]
 6252 02a6 0133     		adds	r3, r3, #1
 6253 02a8 7B62     		str	r3, [r7, #36]
 6254              	.L164:
1690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 6255              		.loc 1 1690 11
 6256 02aa 3B6A     		ldr	r3, [r7, #32]
 6257 02ac 002B     		cmp	r3, #0
 6258 02ae 09D0     		beq	.L173
1690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 6259              		.loc 1 1690 61 discriminator 1
 6260 02b0 FB68     		ldr	r3, [r7, #12]
 6261 02b2 DB6A     		ldr	r3, [r3, #44]
1690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 6262              		.loc 1 1690 89 discriminator 1
 6263 02b4 FA68     		ldr	r2, [r7, #12]
 6264 02b6 126B     		ldr	r2, [r2, #48]
1690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 6265              		.loc 1 1690 73 discriminator 1
 6266 02b8 02FB03F3 		mul	r3, r2, r3
1690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
 6267              		.loc 1 1690 28 discriminator 1
 6268 02bc 7A6A     		ldr	r2, [r7, #36]
 6269 02be 9A42     		cmp	r2, r3
 6270 02c0 FFF4E4AE 		bcc	.L174
 6271              	.L173:
1793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     }
1794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
1796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_READY;
 6272              		.loc 1 1796 18
ARM GAS  /tmp/cc0wCm8A.s 			page 163


 6273 02c4 FB68     		ldr	r3, [r7, #12]
 6274 02c6 0122     		movs	r2, #1
 6275 02c8 83F82120 		strb	r2, [r3, #33]
1797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process unlocked */
1799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_UNLOCK(hnand);
 6276              		.loc 1 1799 5
 6277 02cc FB68     		ldr	r3, [r7, #12]
 6278 02ce 0022     		movs	r2, #0
 6279 02d0 83F82020 		strb	r2, [r3, #32]
1800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
1802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_ERROR;
1804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return HAL_OK;
 6280              		.loc 1 1806 10
 6281 02d4 0023     		movs	r3, #0
 6282 02d6 00E0     		b	.L161
 6283              	.L162:
1803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 6284              		.loc 1 1803 12
 6285 02d8 0123     		movs	r3, #1
 6286              	.L161:
1807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 6287              		.loc 1 1807 1
 6288 02da 1846     		mov	r0, r3
 6289 02dc 3037     		adds	r7, r7, #48
 6290              	.LCFI89:
 6291              		.cfi_def_cfa_offset 8
 6292 02de BD46     		mov	sp, r7
 6293              	.LCFI90:
 6294              		.cfi_def_cfa_register 13
 6295              		@ sp needed
 6296 02e0 80BD     		pop	{r7, pc}
 6297              		.cfi_endproc
 6298              	.LFE347:
 6300              		.section	.text.HAL_NAND_Erase_Block,"ax",%progbits
 6301              		.align	1
 6302              		.global	HAL_NAND_Erase_Block
 6303              		.syntax unified
 6304              		.thumb
 6305              		.thumb_func
 6306              		.fpu fpv5-d16
 6308              	HAL_NAND_Erase_Block:
 6309              	.LFB348:
1808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
1810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  NAND memory Block erase
1811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
1812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
1813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
1814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
1815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
1816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Erase_Block(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress)
1817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
ARM GAS  /tmp/cc0wCm8A.s 			page 164


 6310              		.loc 1 1817 1
 6311              		.cfi_startproc
 6312              		@ args = 0, pretend = 0, frame = 16
 6313              		@ frame_needed = 1, uses_anonymous_args = 0
 6314              		@ link register save eliminated.
 6315 0000 80B4     		push	{r7}
 6316              	.LCFI91:
 6317              		.cfi_def_cfa_offset 4
 6318              		.cfi_offset 7, -4
 6319 0002 85B0     		sub	sp, sp, #20
 6320              	.LCFI92:
 6321              		.cfi_def_cfa_offset 24
 6322 0004 00AF     		add	r7, sp, #0
 6323              	.LCFI93:
 6324              		.cfi_def_cfa_register 7
 6325 0006 7860     		str	r0, [r7, #4]
 6326 0008 3960     		str	r1, [r7]
1818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t deviceaddress;
1819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check the NAND controller state */
1821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_BUSY)
 6327              		.loc 1 1821 12
 6328 000a 7B68     		ldr	r3, [r7, #4]
 6329 000c 93F82130 		ldrb	r3, [r3, #33]
 6330 0010 DBB2     		uxtb	r3, r3
 6331              		.loc 1 1821 6
 6332 0012 022B     		cmp	r3, #2
 6333 0014 01D1     		bne	.L177
1822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_BUSY;
 6334              		.loc 1 1823 12
 6335 0016 0223     		movs	r3, #2
 6336 0018 89E0     		b	.L178
 6337              	.L177:
1824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if (hnand->State == HAL_NAND_STATE_READY)
 6338              		.loc 1 1825 17
 6339 001a 7B68     		ldr	r3, [r7, #4]
 6340 001c 93F82130 		ldrb	r3, [r3, #33]
 6341 0020 DBB2     		uxtb	r3, r3
 6342              		.loc 1 1825 11
 6343 0022 012B     		cmp	r3, #1
 6344 0024 40F08280 		bne	.L179
1826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process Locked */
1828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_LOCK(hnand);
 6345              		.loc 1 1828 5
 6346 0028 7B68     		ldr	r3, [r7, #4]
 6347 002a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 6348 002e 012B     		cmp	r3, #1
 6349 0030 01D1     		bne	.L180
 6350              		.loc 1 1828 5 is_stmt 0 discriminator 1
 6351 0032 0223     		movs	r3, #2
 6352 0034 7BE0     		b	.L178
 6353              	.L180:
 6354              		.loc 1 1828 5 discriminator 2
 6355 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc0wCm8A.s 			page 165


 6356 0038 0122     		movs	r2, #1
 6357 003a 83F82020 		strb	r2, [r3, #32]
1829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
1831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_BUSY;
 6358              		.loc 1 1831 18 is_stmt 1 discriminator 2
 6359 003e 7B68     		ldr	r3, [r7, #4]
 6360 0040 0222     		movs	r2, #2
 6361 0042 83F82120 		strb	r2, [r3, #33]
1832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Identify the device address */
1834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     deviceaddress = NAND_DEVICE;
 6362              		.loc 1 1834 19 discriminator 2
 6363 0046 4FF00043 		mov	r3, #-2147483648
 6364 004a FB60     		str	r3, [r7, #12]
1835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Send Erase block command sequence */
1837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_ERASE0;
 6365              		.loc 1 1837 23 discriminator 2
 6366 004c FB68     		ldr	r3, [r7, #12]
 6367 004e 43F48033 		orr	r3, r3, #65536
 6368              		.loc 1 1837 61 discriminator 2
 6369 0052 6022     		movs	r2, #96
 6370 0054 1A70     		strb	r2, [r3]
 6371              	.LBB668:
 6372              	.LBB669:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 6373              		.loc 2 946 3 discriminator 2
 6374              		.syntax unified
 6375              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 6376 0056 BFF34F8F 		dsb 0xF
 6377              	@ 0 "" 2
 6378              		.loc 2 947 1 discriminator 2
 6379              		.thumb
 6380              		.syntax unified
 6381 005a 00BF     		nop
 6382              	.LBE669:
 6383              	.LBE668:
1838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __DSB();
1839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(ARRAY_ADDRESS(pAddres
 6384              		.loc 1 1839 64 discriminator 2
 6385 005c 3B68     		ldr	r3, [r7]
 6386 005e 1B88     		ldrh	r3, [r3]
 6387 0060 DAB2     		uxtb	r2, r3
 6388 0062 3B68     		ldr	r3, [r7]
 6389 0064 9B88     		ldrh	r3, [r3, #4]
 6390 0066 1946     		mov	r1, r3
 6391 0068 3B68     		ldr	r3, [r7]
 6392 006a 5B88     		ldrh	r3, [r3, #2]
 6393 006c 1846     		mov	r0, r3
 6394 006e 7B68     		ldr	r3, [r7, #4]
 6395 0070 9B6B     		ldr	r3, [r3, #56]
 6396 0072 03FB00F3 		mul	r3, r3, r0
 6397 0076 0B44     		add	r3, r3, r1
 6398 0078 D9B2     		uxtb	r1, r3
 6399 007a 7B68     		ldr	r3, [r7, #4]
 6400 007c DB6A     		ldr	r3, [r3, #44]
ARM GAS  /tmp/cc0wCm8A.s 			page 166


 6401 007e DBB2     		uxtb	r3, r3
 6402 0080 11FB03F3 		smulbb	r3, r1, r3
 6403 0084 DBB2     		uxtb	r3, r3
 6404              		.loc 1 1839 23 discriminator 2
 6405 0086 F968     		ldr	r1, [r7, #12]
 6406 0088 41F40031 		orr	r1, r1, #131072
 6407              		.loc 1 1839 64 discriminator 2
 6408 008c 1344     		add	r3, r3, r2
 6409 008e DBB2     		uxtb	r3, r3
 6410              		.loc 1 1839 62 discriminator 2
 6411 0090 0B70     		strb	r3, [r1]
 6412              	.LBB670:
 6413              	.LBB671:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 6414              		.loc 2 946 3 discriminator 2
 6415              		.syntax unified
 6416              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 6417 0092 BFF34F8F 		dsb 0xF
 6418              	@ 0 "" 2
 6419              		.loc 2 947 1 discriminator 2
 6420              		.thumb
 6421              		.syntax unified
 6422 0096 00BF     		nop
 6423              	.LBE671:
 6424              	.LBE670:
1840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __DSB();
1841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(ARRAY_ADDRESS(pAddres
 6425              		.loc 1 1841 64 discriminator 2
 6426 0098 3B68     		ldr	r3, [r7]
 6427 009a 1B88     		ldrh	r3, [r3]
 6428 009c 1946     		mov	r1, r3
 6429 009e 3B68     		ldr	r3, [r7]
 6430 00a0 9B88     		ldrh	r3, [r3, #4]
 6431 00a2 1A46     		mov	r2, r3
 6432 00a4 3B68     		ldr	r3, [r7]
 6433 00a6 5B88     		ldrh	r3, [r3, #2]
 6434 00a8 1846     		mov	r0, r3
 6435 00aa 7B68     		ldr	r3, [r7, #4]
 6436 00ac 9B6B     		ldr	r3, [r3, #56]
 6437 00ae 03FB00F3 		mul	r3, r3, r0
 6438 00b2 1344     		add	r3, r3, r2
 6439 00b4 7A68     		ldr	r2, [r7, #4]
 6440 00b6 D26A     		ldr	r2, [r2, #44]
 6441 00b8 02FB03F3 		mul	r3, r2, r3
 6442 00bc 0B44     		add	r3, r3, r1
 6443 00be 1A0A     		lsrs	r2, r3, #8
 6444              		.loc 1 1841 23 discriminator 2
 6445 00c0 FB68     		ldr	r3, [r7, #12]
 6446 00c2 43F40033 		orr	r3, r3, #131072
 6447              		.loc 1 1841 64 discriminator 2
 6448 00c6 D2B2     		uxtb	r2, r2
 6449              		.loc 1 1841 62 discriminator 2
 6450 00c8 1A70     		strb	r2, [r3]
 6451              	.LBB672:
 6452              	.LBB673:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 6453              		.loc 2 946 3 discriminator 2
ARM GAS  /tmp/cc0wCm8A.s 			page 167


 6454              		.syntax unified
 6455              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 6456 00ca BFF34F8F 		dsb 0xF
 6457              	@ 0 "" 2
 6458              		.loc 2 947 1 discriminator 2
 6459              		.thumb
 6460              		.syntax unified
 6461 00ce 00BF     		nop
 6462              	.LBE673:
 6463              	.LBE672:
1842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __DSB();
1843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(ARRAY_ADDRESS(pAddres
 6464              		.loc 1 1843 64 discriminator 2
 6465 00d0 3B68     		ldr	r3, [r7]
 6466 00d2 1B88     		ldrh	r3, [r3]
 6467 00d4 1946     		mov	r1, r3
 6468 00d6 3B68     		ldr	r3, [r7]
 6469 00d8 9B88     		ldrh	r3, [r3, #4]
 6470 00da 1A46     		mov	r2, r3
 6471 00dc 3B68     		ldr	r3, [r7]
 6472 00de 5B88     		ldrh	r3, [r3, #2]
 6473 00e0 1846     		mov	r0, r3
 6474 00e2 7B68     		ldr	r3, [r7, #4]
 6475 00e4 9B6B     		ldr	r3, [r3, #56]
 6476 00e6 03FB00F3 		mul	r3, r3, r0
 6477 00ea 1344     		add	r3, r3, r2
 6478 00ec 7A68     		ldr	r2, [r7, #4]
 6479 00ee D26A     		ldr	r2, [r2, #44]
 6480 00f0 02FB03F3 		mul	r3, r2, r3
 6481 00f4 0B44     		add	r3, r3, r1
 6482 00f6 1A0C     		lsrs	r2, r3, #16
 6483              		.loc 1 1843 23 discriminator 2
 6484 00f8 FB68     		ldr	r3, [r7, #12]
 6485 00fa 43F40033 		orr	r3, r3, #131072
 6486              		.loc 1 1843 64 discriminator 2
 6487 00fe D2B2     		uxtb	r2, r2
 6488              		.loc 1 1843 62 discriminator 2
 6489 0100 1A70     		strb	r2, [r3]
 6490              	.LBB674:
 6491              	.LBB675:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 6492              		.loc 2 946 3 discriminator 2
 6493              		.syntax unified
 6494              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 6495 0102 BFF34F8F 		dsb 0xF
 6496              	@ 0 "" 2
 6497              		.loc 2 947 1 discriminator 2
 6498              		.thumb
 6499              		.syntax unified
 6500 0106 00BF     		nop
 6501              	.LBE675:
 6502              	.LBE674:
1844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __DSB();
1845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_ERASE1;
 6503              		.loc 1 1846 23 discriminator 2
 6504 0108 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc0wCm8A.s 			page 168


 6505 010a 43F48033 		orr	r3, r3, #65536
 6506              		.loc 1 1846 61 discriminator 2
 6507 010e D022     		movs	r2, #208
 6508 0110 1A70     		strb	r2, [r3]
 6509              	.LBB676:
 6510              	.LBB677:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 6511              		.loc 2 946 3 discriminator 2
 6512              		.syntax unified
 6513              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 6514 0112 BFF34F8F 		dsb 0xF
 6515              	@ 0 "" 2
 6516              		.loc 2 947 1 discriminator 2
 6517              		.thumb
 6518              		.syntax unified
 6519 0116 00BF     		nop
 6520              	.LBE677:
 6521              	.LBE676:
1847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __DSB();
1848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND controller state */
1850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_READY;
 6522              		.loc 1 1850 18 discriminator 2
 6523 0118 7B68     		ldr	r3, [r7, #4]
 6524 011a 0122     		movs	r2, #1
 6525 011c 83F82120 		strb	r2, [r3, #33]
1851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Process unlocked */
1853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     __HAL_UNLOCK(hnand);
 6526              		.loc 1 1853 5 discriminator 2
 6527 0120 7B68     		ldr	r3, [r7, #4]
 6528 0122 0022     		movs	r2, #0
 6529 0124 83F82020 		strb	r2, [r3, #32]
1854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
1856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_ERROR;
1858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return HAL_OK;
 6530              		.loc 1 1860 10 discriminator 2
 6531 0128 0023     		movs	r3, #0
 6532 012a 00E0     		b	.L178
 6533              	.L179:
1857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 6534              		.loc 1 1857 12
 6535 012c 0123     		movs	r3, #1
 6536              	.L178:
1861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 6537              		.loc 1 1861 1
 6538 012e 1846     		mov	r0, r3
 6539 0130 1437     		adds	r7, r7, #20
 6540              	.LCFI94:
 6541              		.cfi_def_cfa_offset 4
 6542 0132 BD46     		mov	sp, r7
 6543              	.LCFI95:
 6544              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cc0wCm8A.s 			page 169


 6545              		@ sp needed
 6546 0134 5DF8047B 		ldr	r7, [sp], #4
 6547              	.LCFI96:
 6548              		.cfi_restore 7
 6549              		.cfi_def_cfa_offset 0
 6550 0138 7047     		bx	lr
 6551              		.cfi_endproc
 6552              	.LFE348:
 6554              		.section	.text.HAL_NAND_Address_Inc,"ax",%progbits
 6555              		.align	1
 6556              		.global	HAL_NAND_Address_Inc
 6557              		.syntax unified
 6558              		.thumb
 6559              		.thumb_func
 6560              		.fpu fpv5-d16
 6562              	HAL_NAND_Address_Inc:
 6563              	.LFB349:
1862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
1864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Increment the NAND memory address
1865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
1866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
1867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param pAddress pointer to NAND address structure
1868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval The new status of the increment address operation. It can be:
1869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *           - NAND_VALID_ADDRESS: When the new address is valid address
1870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *           - NAND_INVALID_ADDRESS: When the new address is invalid address
1871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
1872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** uint32_t HAL_NAND_Address_Inc(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress)
1873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 6564              		.loc 1 1873 1
 6565              		.cfi_startproc
 6566              		@ args = 0, pretend = 0, frame = 16
 6567              		@ frame_needed = 1, uses_anonymous_args = 0
 6568              		@ link register save eliminated.
 6569 0000 80B4     		push	{r7}
 6570              	.LCFI97:
 6571              		.cfi_def_cfa_offset 4
 6572              		.cfi_offset 7, -4
 6573 0002 85B0     		sub	sp, sp, #20
 6574              	.LCFI98:
 6575              		.cfi_def_cfa_offset 24
 6576 0004 00AF     		add	r7, sp, #0
 6577              	.LCFI99:
 6578              		.cfi_def_cfa_register 7
 6579 0006 7860     		str	r0, [r7, #4]
 6580 0008 3960     		str	r1, [r7]
1874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t status = NAND_VALID_ADDRESS;
 6581              		.loc 1 1874 12
 6582 000a 4FF48073 		mov	r3, #256
 6583 000e FB60     		str	r3, [r7, #12]
1875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Increment page address */
1877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   pAddress->Page++;
 6584              		.loc 1 1877 11
 6585 0010 3B68     		ldr	r3, [r7]
 6586 0012 1B88     		ldrh	r3, [r3]
 6587              		.loc 1 1877 17
ARM GAS  /tmp/cc0wCm8A.s 			page 170


 6588 0014 0133     		adds	r3, r3, #1
 6589 0016 9AB2     		uxth	r2, r3
 6590 0018 3B68     		ldr	r3, [r7]
 6591 001a 1A80     		strh	r2, [r3]	@ movhi
1878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check NAND address is valid */
1880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (pAddress->Page == hnand->Config.BlockSize)
 6592              		.loc 1 1880 15
 6593 001c 3B68     		ldr	r3, [r7]
 6594 001e 1B88     		ldrh	r3, [r3]
 6595 0020 1A46     		mov	r2, r3
 6596              		.loc 1 1880 38
 6597 0022 7B68     		ldr	r3, [r7, #4]
 6598 0024 DB6A     		ldr	r3, [r3, #44]
 6599              		.loc 1 1880 6
 6600 0026 9A42     		cmp	r2, r3
 6601 0028 22D1     		bne	.L183
1881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     pAddress->Page = 0;
 6602              		.loc 1 1882 20
 6603 002a 3B68     		ldr	r3, [r7]
 6604 002c 0022     		movs	r2, #0
 6605 002e 1A80     		strh	r2, [r3]	@ movhi
1883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     pAddress->Block++;
 6606              		.loc 1 1883 13
 6607 0030 3B68     		ldr	r3, [r7]
 6608 0032 9B88     		ldrh	r3, [r3, #4]
 6609              		.loc 1 1883 20
 6610 0034 0133     		adds	r3, r3, #1
 6611 0036 9AB2     		uxth	r2, r3
 6612 0038 3B68     		ldr	r3, [r7]
 6613 003a 9A80     		strh	r2, [r3, #4]	@ movhi
1884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     if (pAddress->Block == hnand->Config.PlaneSize)
 6614              		.loc 1 1885 17
 6615 003c 3B68     		ldr	r3, [r7]
 6616 003e 9B88     		ldrh	r3, [r3, #4]
 6617 0040 1A46     		mov	r2, r3
 6618              		.loc 1 1885 41
 6619 0042 7B68     		ldr	r3, [r7, #4]
 6620 0044 9B6B     		ldr	r3, [r3, #56]
 6621              		.loc 1 1885 8
 6622 0046 9A42     		cmp	r2, r3
 6623 0048 12D1     		bne	.L183
1886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
1887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       pAddress->Block = 0;
 6624              		.loc 1 1887 23
 6625 004a 3B68     		ldr	r3, [r7]
 6626 004c 0022     		movs	r2, #0
 6627 004e 9A80     		strh	r2, [r3, #4]	@ movhi
1888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       pAddress->Plane++;
 6628              		.loc 1 1888 15
 6629 0050 3B68     		ldr	r3, [r7]
 6630 0052 5B88     		ldrh	r3, [r3, #2]
 6631              		.loc 1 1888 22
 6632 0054 0133     		adds	r3, r3, #1
 6633 0056 9AB2     		uxth	r2, r3
ARM GAS  /tmp/cc0wCm8A.s 			page 171


 6634 0058 3B68     		ldr	r3, [r7]
 6635 005a 5A80     		strh	r2, [r3, #2]	@ movhi
1889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       if (pAddress->Plane == (hnand->Config.PlaneNbr))
 6636              		.loc 1 1890 19
 6637 005c 3B68     		ldr	r3, [r7]
 6638 005e 5B88     		ldrh	r3, [r3, #2]
 6639 0060 1A46     		mov	r2, r3
 6640              		.loc 1 1890 44
 6641 0062 7B68     		ldr	r3, [r7, #4]
 6642 0064 5B6B     		ldr	r3, [r3, #52]
 6643              		.loc 1 1890 10
 6644 0066 9A42     		cmp	r2, r3
 6645 0068 02D1     		bne	.L183
1891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       {
1892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         status = NAND_INVALID_ADDRESS;
 6646              		.loc 1 1892 16
 6647 006a 4FF40073 		mov	r3, #512
 6648 006e FB60     		str	r3, [r7, #12]
 6649              	.L183:
1893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       }
1894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     }
1895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return (status);
 6650              		.loc 1 1897 10
 6651 0070 FB68     		ldr	r3, [r7, #12]
1898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 6652              		.loc 1 1898 1
 6653 0072 1846     		mov	r0, r3
 6654 0074 1437     		adds	r7, r7, #20
 6655              	.LCFI100:
 6656              		.cfi_def_cfa_offset 4
 6657 0076 BD46     		mov	sp, r7
 6658              	.LCFI101:
 6659              		.cfi_def_cfa_register 13
 6660              		@ sp needed
 6661 0078 5DF8047B 		ldr	r7, [sp], #4
 6662              	.LCFI102:
 6663              		.cfi_restore 7
 6664              		.cfi_def_cfa_offset 0
 6665 007c 7047     		bx	lr
 6666              		.cfi_endproc
 6667              	.LFE349:
 6669              		.section	.text.HAL_NAND_ECC_Enable,"ax",%progbits
 6670              		.align	1
 6671              		.global	HAL_NAND_ECC_Enable
 6672              		.syntax unified
 6673              		.thumb
 6674              		.thumb_func
 6675              		.fpu fpv5-d16
 6677              	HAL_NAND_ECC_Enable:
 6678              	.LFB350:
1899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #if (USE_HAL_NAND_REGISTER_CALLBACKS == 1)
1901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
1902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Register a User NAND Callback
ARM GAS  /tmp/cc0wCm8A.s 			page 172


1903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *         To be used instead of the weak (surcharged) predefined callback
1904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param hnand : NAND handle
1905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param CallbackId : ID of the callback to be registered
1906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *        This parameter can be one of the following values:
1907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *          @arg @ref HAL_NAND_MSP_INIT_CB_ID       NAND MspInit callback ID
1908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *          @arg @ref HAL_NAND_MSP_DEINIT_CB_ID     NAND MspDeInit callback ID
1909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *          @arg @ref HAL_NAND_IT_CB_ID             NAND IT callback ID
1910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param pCallback : pointer to the Callback function
1911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval status
1912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
1913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_RegisterCallback(NAND_HandleTypeDef *hnand, HAL_NAND_CallbackIDTypeDef C
1914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****                                             pNAND_CallbackTypeDef pCallback)
1915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
1916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   HAL_StatusTypeDef status = HAL_OK;
1917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (pCallback == NULL)
1919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_ERROR;
1921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Process locked */
1924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   __HAL_LOCK(hnand);
1925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_READY)
1927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     switch (CallbackId)
1929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
1930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       case HAL_NAND_MSP_INIT_CB_ID :
1931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         hnand->MspInitCallback = pCallback;
1932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         break;
1933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       case HAL_NAND_MSP_DEINIT_CB_ID :
1934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         hnand->MspDeInitCallback = pCallback;
1935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         break;
1936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       case HAL_NAND_IT_CB_ID :
1937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         hnand->ItCallback = pCallback;
1938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         break;
1939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       default :
1940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* update return status */
1941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         status =  HAL_ERROR;
1942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         break;
1943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     }
1944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if (hnand->State == HAL_NAND_STATE_RESET)
1946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     switch (CallbackId)
1948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
1949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       case HAL_NAND_MSP_INIT_CB_ID :
1950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         hnand->MspInitCallback = pCallback;
1951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         break;
1952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       case HAL_NAND_MSP_DEINIT_CB_ID :
1953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         hnand->MspDeInitCallback = pCallback;
1954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         break;
1955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       default :
1956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* update return status */
1957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         status =  HAL_ERROR;
1958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         break;
1959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     }
ARM GAS  /tmp/cc0wCm8A.s 			page 173


1960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
1962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* update return status */
1964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     status =  HAL_ERROR;
1965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
1966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Release Lock */
1968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
1969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return status;
1970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
1971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
1973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Unregister a User NAND Callback
1974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *         NAND Callback is redirected to the weak (surcharged) predefined callback
1975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param hnand : NAND handle
1976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param CallbackId : ID of the callback to be unregistered
1977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *        This parameter can be one of the following values:
1978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *          @arg @ref HAL_NAND_MSP_INIT_CB_ID       NAND MspInit callback ID
1979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *          @arg @ref HAL_NAND_MSP_DEINIT_CB_ID     NAND MspDeInit callback ID
1980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *          @arg @ref HAL_NAND_IT_CB_ID             NAND IT callback ID
1981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval status
1982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
1983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_UnRegisterCallback(NAND_HandleTypeDef *hnand, HAL_NAND_CallbackIDTypeDef
1984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
1985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   HAL_StatusTypeDef status = HAL_OK;
1986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Process locked */
1988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   __HAL_LOCK(hnand);
1989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
1990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_READY)
1991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
1992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     switch (CallbackId)
1993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
1994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       case HAL_NAND_MSP_INIT_CB_ID :
1995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         hnand->MspInitCallback = HAL_NAND_MspInit;
1996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         break;
1997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       case HAL_NAND_MSP_DEINIT_CB_ID :
1998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         hnand->MspDeInitCallback = HAL_NAND_MspDeInit;
1999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         break;
2000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       case HAL_NAND_IT_CB_ID :
2001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         hnand->ItCallback = HAL_NAND_ITCallback;
2002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         break;
2003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       default :
2004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* update return status */
2005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         status =  HAL_ERROR;
2006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         break;
2007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     }
2008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
2009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if (hnand->State == HAL_NAND_STATE_RESET)
2010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
2011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     switch (CallbackId)
2012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     {
2013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       case HAL_NAND_MSP_INIT_CB_ID :
2014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         hnand->MspInitCallback = HAL_NAND_MspInit;
2015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         break;
2016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       case HAL_NAND_MSP_DEINIT_CB_ID :
ARM GAS  /tmp/cc0wCm8A.s 			page 174


2017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         hnand->MspDeInitCallback = HAL_NAND_MspDeInit;
2018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         break;
2019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****       default :
2020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         /* update return status */
2021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         status =  HAL_ERROR;
2022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****         break;
2023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     }
2024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
2025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
2026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
2027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* update return status */
2028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     status =  HAL_ERROR;
2029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
2030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Release Lock */
2032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
2033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return status;
2034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
2035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** #endif /* USE_HAL_NAND_REGISTER_CALLBACKS */
2036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
2038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @}
2039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
2040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /** @defgroup NAND_Exported_Functions_Group3 Peripheral Control functions
2042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *  @brief   management functions
2043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *
2044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** @verbatim
2045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   ==============================================================================
2046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****                          ##### NAND Control functions #####
2047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   ==============================================================================
2048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   [..]
2049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     This subsection provides a set of functions allowing to control dynamically
2050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     the NAND interface.
2051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** @endverbatim
2053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @{
2054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
2055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
2058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Enables dynamically NAND ECC feature.
2059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
2060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
2061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
2062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
2063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef  HAL_NAND_ECC_Enable(NAND_HandleTypeDef *hnand)
2064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 6679              		.loc 1 2064 1
 6680              		.cfi_startproc
 6681              		@ args = 0, pretend = 0, frame = 8
 6682              		@ frame_needed = 1, uses_anonymous_args = 0
 6683 0000 80B5     		push	{r7, lr}
 6684              	.LCFI103:
 6685              		.cfi_def_cfa_offset 8
 6686              		.cfi_offset 7, -8
 6687              		.cfi_offset 14, -4
ARM GAS  /tmp/cc0wCm8A.s 			page 175


 6688 0002 82B0     		sub	sp, sp, #8
 6689              	.LCFI104:
 6690              		.cfi_def_cfa_offset 16
 6691 0004 00AF     		add	r7, sp, #0
 6692              	.LCFI105:
 6693              		.cfi_def_cfa_register 7
 6694 0006 7860     		str	r0, [r7, #4]
2065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check the NAND controller state */
2066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_BUSY)
 6695              		.loc 1 2066 12
 6696 0008 7B68     		ldr	r3, [r7, #4]
 6697 000a 93F82130 		ldrb	r3, [r3, #33]
 6698 000e DBB2     		uxtb	r3, r3
 6699              		.loc 1 2066 6
 6700 0010 022B     		cmp	r3, #2
 6701 0012 01D1     		bne	.L186
2067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
2068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_BUSY;
 6702              		.loc 1 2068 12
 6703 0014 0223     		movs	r3, #2
 6704 0016 18E0     		b	.L187
 6705              	.L186:
2069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
2070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if (hnand->State == HAL_NAND_STATE_READY)
 6706              		.loc 1 2070 17
 6707 0018 7B68     		ldr	r3, [r7, #4]
 6708 001a 93F82130 		ldrb	r3, [r3, #33]
 6709 001e DBB2     		uxtb	r3, r3
 6710              		.loc 1 2070 11
 6711 0020 012B     		cmp	r3, #1
 6712 0022 11D1     		bne	.L188
2071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
2072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND state */
2073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_BUSY;
 6713              		.loc 1 2073 18
 6714 0024 7B68     		ldr	r3, [r7, #4]
 6715 0026 0222     		movs	r2, #2
 6716 0028 83F82120 		strb	r2, [r3, #33]
2074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Enable ECC feature */
2076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     (void)FMC_NAND_ECC_Enable(hnand->Instance, hnand->Init.NandBank);
 6717              		.loc 1 2076 11
 6718 002c 7B68     		ldr	r3, [r7, #4]
 6719 002e 1A68     		ldr	r2, [r3]
 6720 0030 7B68     		ldr	r3, [r7, #4]
 6721 0032 5B68     		ldr	r3, [r3, #4]
 6722 0034 1946     		mov	r1, r3
 6723 0036 1046     		mov	r0, r2
 6724 0038 FFF7FEFF 		bl	FMC_NAND_ECC_Enable
2077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND state */
2079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_READY;
 6725              		.loc 1 2079 18
 6726 003c 7B68     		ldr	r3, [r7, #4]
 6727 003e 0122     		movs	r2, #1
 6728 0040 83F82120 		strb	r2, [r3, #33]
2080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
ARM GAS  /tmp/cc0wCm8A.s 			page 176


2081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
2082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
2083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_ERROR;
2084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
2085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return HAL_OK;
 6729              		.loc 1 2086 10
 6730 0044 0023     		movs	r3, #0
 6731 0046 00E0     		b	.L187
 6732              	.L188:
2083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 6733              		.loc 1 2083 12
 6734 0048 0123     		movs	r3, #1
 6735              	.L187:
2087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 6736              		.loc 1 2087 1
 6737 004a 1846     		mov	r0, r3
 6738 004c 0837     		adds	r7, r7, #8
 6739              	.LCFI106:
 6740              		.cfi_def_cfa_offset 8
 6741 004e BD46     		mov	sp, r7
 6742              	.LCFI107:
 6743              		.cfi_def_cfa_register 13
 6744              		@ sp needed
 6745 0050 80BD     		pop	{r7, pc}
 6746              		.cfi_endproc
 6747              	.LFE350:
 6749              		.section	.text.HAL_NAND_ECC_Disable,"ax",%progbits
 6750              		.align	1
 6751              		.global	HAL_NAND_ECC_Disable
 6752              		.syntax unified
 6753              		.thumb
 6754              		.thumb_func
 6755              		.fpu fpv5-d16
 6757              	HAL_NAND_ECC_Disable:
 6758              	.LFB351:
2088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
2090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Disables dynamically FMC_NAND ECC feature.
2091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
2092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
2093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
2094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
2095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef  HAL_NAND_ECC_Disable(NAND_HandleTypeDef *hnand)
2096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 6759              		.loc 1 2096 1
 6760              		.cfi_startproc
 6761              		@ args = 0, pretend = 0, frame = 8
 6762              		@ frame_needed = 1, uses_anonymous_args = 0
 6763 0000 80B5     		push	{r7, lr}
 6764              	.LCFI108:
 6765              		.cfi_def_cfa_offset 8
 6766              		.cfi_offset 7, -8
 6767              		.cfi_offset 14, -4
 6768 0002 82B0     		sub	sp, sp, #8
 6769              	.LCFI109:
 6770              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc0wCm8A.s 			page 177


 6771 0004 00AF     		add	r7, sp, #0
 6772              	.LCFI110:
 6773              		.cfi_def_cfa_register 7
 6774 0006 7860     		str	r0, [r7, #4]
2097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check the NAND controller state */
2098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_BUSY)
 6775              		.loc 1 2098 12
 6776 0008 7B68     		ldr	r3, [r7, #4]
 6777 000a 93F82130 		ldrb	r3, [r3, #33]
 6778 000e DBB2     		uxtb	r3, r3
 6779              		.loc 1 2098 6
 6780 0010 022B     		cmp	r3, #2
 6781 0012 01D1     		bne	.L191
2099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
2100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_BUSY;
 6782              		.loc 1 2100 12
 6783 0014 0223     		movs	r3, #2
 6784 0016 18E0     		b	.L192
 6785              	.L191:
2101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
2102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if (hnand->State == HAL_NAND_STATE_READY)
 6786              		.loc 1 2102 17
 6787 0018 7B68     		ldr	r3, [r7, #4]
 6788 001a 93F82130 		ldrb	r3, [r3, #33]
 6789 001e DBB2     		uxtb	r3, r3
 6790              		.loc 1 2102 11
 6791 0020 012B     		cmp	r3, #1
 6792 0022 11D1     		bne	.L193
2103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
2104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND state */
2105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_BUSY;
 6793              		.loc 1 2105 18
 6794 0024 7B68     		ldr	r3, [r7, #4]
 6795 0026 0222     		movs	r2, #2
 6796 0028 83F82120 		strb	r2, [r3, #33]
2106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Disable ECC feature */
2108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     (void)FMC_NAND_ECC_Disable(hnand->Instance, hnand->Init.NandBank);
 6797              		.loc 1 2108 11
 6798 002c 7B68     		ldr	r3, [r7, #4]
 6799 002e 1A68     		ldr	r2, [r3]
 6800 0030 7B68     		ldr	r3, [r7, #4]
 6801 0032 5B68     		ldr	r3, [r3, #4]
 6802 0034 1946     		mov	r1, r3
 6803 0036 1046     		mov	r0, r2
 6804 0038 FFF7FEFF 		bl	FMC_NAND_ECC_Disable
2109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND state */
2111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_READY;
 6805              		.loc 1 2111 18
 6806 003c 7B68     		ldr	r3, [r7, #4]
 6807 003e 0122     		movs	r2, #1
 6808 0040 83F82120 		strb	r2, [r3, #33]
2112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
2113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
2114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
2115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_ERROR;
ARM GAS  /tmp/cc0wCm8A.s 			page 178


2116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
2117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return HAL_OK;
 6809              		.loc 1 2118 10
 6810 0044 0023     		movs	r3, #0
 6811 0046 00E0     		b	.L192
 6812              	.L193:
2115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 6813              		.loc 1 2115 12
 6814 0048 0123     		movs	r3, #1
 6815              	.L192:
2119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 6816              		.loc 1 2119 1
 6817 004a 1846     		mov	r0, r3
 6818 004c 0837     		adds	r7, r7, #8
 6819              	.LCFI111:
 6820              		.cfi_def_cfa_offset 8
 6821 004e BD46     		mov	sp, r7
 6822              	.LCFI112:
 6823              		.cfi_def_cfa_register 13
 6824              		@ sp needed
 6825 0050 80BD     		pop	{r7, pc}
 6826              		.cfi_endproc
 6827              	.LFE351:
 6829              		.section	.text.HAL_NAND_GetECC,"ax",%progbits
 6830              		.align	1
 6831              		.global	HAL_NAND_GetECC
 6832              		.syntax unified
 6833              		.thumb
 6834              		.thumb_func
 6835              		.fpu fpv5-d16
 6837              	HAL_NAND_GetECC:
 6838              	.LFB352:
2120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
2122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  Disables dynamically NAND ECC feature.
2123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
2124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
2125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  ECCval pointer to ECC value
2126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  Timeout maximum timeout to wait
2127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL status
2128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
2129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_StatusTypeDef  HAL_NAND_GetECC(NAND_HandleTypeDef *hnand, uint32_t *ECCval, uint32_t Timeout)
2130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 6839              		.loc 1 2130 1
 6840              		.cfi_startproc
 6841              		@ args = 0, pretend = 0, frame = 24
 6842              		@ frame_needed = 1, uses_anonymous_args = 0
 6843 0000 80B5     		push	{r7, lr}
 6844              	.LCFI113:
 6845              		.cfi_def_cfa_offset 8
 6846              		.cfi_offset 7, -8
 6847              		.cfi_offset 14, -4
 6848 0002 86B0     		sub	sp, sp, #24
 6849              	.LCFI114:
 6850              		.cfi_def_cfa_offset 32
 6851 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cc0wCm8A.s 			page 179


 6852              	.LCFI115:
 6853              		.cfi_def_cfa_register 7
 6854 0006 F860     		str	r0, [r7, #12]
 6855 0008 B960     		str	r1, [r7, #8]
 6856 000a 7A60     		str	r2, [r7, #4]
2131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   HAL_StatusTypeDef status;
2132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Check the NAND controller state */
2134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if (hnand->State == HAL_NAND_STATE_BUSY)
 6857              		.loc 1 2134 12
 6858 000c FB68     		ldr	r3, [r7, #12]
 6859 000e 93F82130 		ldrb	r3, [r3, #33]
 6860 0012 DBB2     		uxtb	r3, r3
 6861              		.loc 1 2134 6
 6862 0014 022B     		cmp	r3, #2
 6863 0016 01D1     		bne	.L196
2135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
2136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_BUSY;
 6864              		.loc 1 2136 12
 6865 0018 0223     		movs	r3, #2
 6866 001a 1AE0     		b	.L197
 6867              	.L196:
2137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
2138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if (hnand->State == HAL_NAND_STATE_READY)
 6868              		.loc 1 2138 17
 6869 001c FB68     		ldr	r3, [r7, #12]
 6870 001e 93F82130 		ldrb	r3, [r3, #33]
 6871 0022 DBB2     		uxtb	r3, r3
 6872              		.loc 1 2138 11
 6873 0024 012B     		cmp	r3, #1
 6874 0026 13D1     		bne	.L198
2139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
2140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND state */
2141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_BUSY;
 6875              		.loc 1 2141 18
 6876 0028 FB68     		ldr	r3, [r7, #12]
 6877 002a 0222     		movs	r2, #2
 6878 002c 83F82120 		strb	r2, [r3, #33]
2142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Get NAND ECC value */
2144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     status = FMC_NAND_GetECC(hnand->Instance, ECCval, hnand->Init.NandBank, Timeout);
 6879              		.loc 1 2144 14
 6880 0030 FB68     		ldr	r3, [r7, #12]
 6881 0032 1868     		ldr	r0, [r3]
 6882 0034 FB68     		ldr	r3, [r7, #12]
 6883 0036 5A68     		ldr	r2, [r3, #4]
 6884 0038 7B68     		ldr	r3, [r7, #4]
 6885 003a B968     		ldr	r1, [r7, #8]
 6886 003c FFF7FEFF 		bl	FMC_NAND_GetECC
 6887 0040 0346     		mov	r3, r0
 6888 0042 FB75     		strb	r3, [r7, #23]
2145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     /* Update the NAND state */
2147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     hnand->State = HAL_NAND_STATE_READY;
 6889              		.loc 1 2147 18
 6890 0044 FB68     		ldr	r3, [r7, #12]
 6891 0046 0122     		movs	r2, #1
ARM GAS  /tmp/cc0wCm8A.s 			page 180


 6892 0048 83F82120 		strb	r2, [r3, #33]
2148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
2149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
2150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
2151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return HAL_ERROR;
2152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
2153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return status;
 6893              		.loc 1 2154 10
 6894 004c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6895 004e 00E0     		b	.L197
 6896              	.L198:
2151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
 6897              		.loc 1 2151 12
 6898 0050 0123     		movs	r3, #1
 6899              	.L197:
2155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 6900              		.loc 1 2155 1
 6901 0052 1846     		mov	r0, r3
 6902 0054 1837     		adds	r7, r7, #24
 6903              	.LCFI116:
 6904              		.cfi_def_cfa_offset 8
 6905 0056 BD46     		mov	sp, r7
 6906              	.LCFI117:
 6907              		.cfi_def_cfa_register 13
 6908              		@ sp needed
 6909 0058 80BD     		pop	{r7, pc}
 6910              		.cfi_endproc
 6911              	.LFE352:
 6913              		.section	.text.HAL_NAND_GetState,"ax",%progbits
 6914              		.align	1
 6915              		.global	HAL_NAND_GetState
 6916              		.syntax unified
 6917              		.thumb
 6918              		.thumb_func
 6919              		.fpu fpv5-d16
 6921              	HAL_NAND_GetState:
 6922              	.LFB353:
2156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
2158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @}
2159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
2160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /** @defgroup NAND_Exported_Functions_Group4 Peripheral State functions
2163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *  @brief   Peripheral State functions
2164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *
2165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** @verbatim
2166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   ==============================================================================
2167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****                          ##### NAND State functions #####
2168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   ==============================================================================
2169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   [..]
2170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     This subsection permits to get in run-time the status of the NAND controller
2171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     and the data flow.
2172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** @endverbatim
2174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @{
ARM GAS  /tmp/cc0wCm8A.s 			page 181


2175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
2176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
2178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  return the NAND state
2179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
2180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
2181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval HAL state
2182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
2183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** HAL_NAND_StateTypeDef HAL_NAND_GetState(NAND_HandleTypeDef *hnand)
2184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 6923              		.loc 1 2184 1
 6924              		.cfi_startproc
 6925              		@ args = 0, pretend = 0, frame = 8
 6926              		@ frame_needed = 1, uses_anonymous_args = 0
 6927              		@ link register save eliminated.
 6928 0000 80B4     		push	{r7}
 6929              	.LCFI118:
 6930              		.cfi_def_cfa_offset 4
 6931              		.cfi_offset 7, -4
 6932 0002 83B0     		sub	sp, sp, #12
 6933              	.LCFI119:
 6934              		.cfi_def_cfa_offset 16
 6935 0004 00AF     		add	r7, sp, #0
 6936              	.LCFI120:
 6937              		.cfi_def_cfa_register 7
 6938 0006 7860     		str	r0, [r7, #4]
2185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   return hnand->State;
 6939              		.loc 1 2185 15
 6940 0008 7B68     		ldr	r3, [r7, #4]
 6941 000a 93F82130 		ldrb	r3, [r3, #33]
 6942 000e DBB2     		uxtb	r3, r3
2186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 6943              		.loc 1 2186 1
 6944 0010 1846     		mov	r0, r3
 6945 0012 0C37     		adds	r7, r7, #12
 6946              	.LCFI121:
 6947              		.cfi_def_cfa_offset 4
 6948 0014 BD46     		mov	sp, r7
 6949              	.LCFI122:
 6950              		.cfi_def_cfa_register 13
 6951              		@ sp needed
 6952 0016 5DF8047B 		ldr	r7, [sp], #4
 6953              	.LCFI123:
 6954              		.cfi_restore 7
 6955              		.cfi_def_cfa_offset 0
 6956 001a 7047     		bx	lr
 6957              		.cfi_endproc
 6958              	.LFE353:
 6960              		.section	.text.HAL_NAND_Read_Status,"ax",%progbits
 6961              		.align	1
 6962              		.global	HAL_NAND_Read_Status
 6963              		.syntax unified
 6964              		.thumb
 6965              		.thumb_func
 6966              		.fpu fpv5-d16
 6968              	HAL_NAND_Read_Status:
 6969              	.LFB354:
ARM GAS  /tmp/cc0wCm8A.s 			page 182


2187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** /**
2189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @brief  NAND memory read status
2190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
2191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *                the configuration information for NAND module.
2192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   * @retval NAND status
2193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   */
2194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** uint32_t HAL_NAND_Read_Status(NAND_HandleTypeDef *hnand)
2195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** {
 6970              		.loc 1 2195 1
 6971              		.cfi_startproc
 6972              		@ args = 0, pretend = 0, frame = 16
 6973              		@ frame_needed = 1, uses_anonymous_args = 0
 6974              		@ link register save eliminated.
 6975 0000 80B4     		push	{r7}
 6976              	.LCFI124:
 6977              		.cfi_def_cfa_offset 4
 6978              		.cfi_offset 7, -4
 6979 0002 85B0     		sub	sp, sp, #20
 6980              	.LCFI125:
 6981              		.cfi_def_cfa_offset 24
 6982 0004 00AF     		add	r7, sp, #0
 6983              	.LCFI126:
 6984              		.cfi_def_cfa_register 7
 6985 0006 7860     		str	r0, [r7, #4]
2196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t data;
2197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   uint32_t deviceaddress;
2198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   UNUSED(hnand);
2199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Identify the device address */
2201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   deviceaddress = NAND_DEVICE;
 6986              		.loc 1 2201 17
 6987 0008 4FF00043 		mov	r3, #-2147483648
 6988 000c FB60     		str	r3, [r7, #12]
2202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Send Read status operation command */
2204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_STATUS;
 6989              		.loc 1 2204 21
 6990 000e FB68     		ldr	r3, [r7, #12]
 6991 0010 43F48033 		orr	r3, r3, #65536
 6992              		.loc 1 2204 59
 6993 0014 7022     		movs	r2, #112
 6994 0016 1A70     		strb	r2, [r3]
2205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Read status register data */
2207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   data = *(__IO uint8_t *)deviceaddress;
 6995              		.loc 1 2207 11
 6996 0018 FB68     		ldr	r3, [r7, #12]
 6997              		.loc 1 2207 10
 6998 001a 1B78     		ldrb	r3, [r3]
 6999 001c DBB2     		uxtb	r3, r3
 7000              		.loc 1 2207 8
 7001 001e BB60     		str	r3, [r7, #8]
2208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** 
2209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   /* Return the status */
2210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   if ((data & NAND_ERROR) == NAND_ERROR)
 7002              		.loc 1 2210 13
ARM GAS  /tmp/cc0wCm8A.s 			page 183


 7003 0020 BB68     		ldr	r3, [r7, #8]
 7004 0022 03F00103 		and	r3, r3, #1
 7005              		.loc 1 2210 6
 7006 0026 002B     		cmp	r3, #0
 7007 0028 01D0     		beq	.L203
2211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
2212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return NAND_ERROR;
 7008              		.loc 1 2212 12
 7009 002a 0123     		movs	r3, #1
 7010 002c 07E0     		b	.L204
 7011              	.L203:
2213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
2214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else if ((data & NAND_READY) == NAND_READY)
 7012              		.loc 1 2214 18
 7013 002e BB68     		ldr	r3, [r7, #8]
 7014 0030 03F04003 		and	r3, r3, #64
 7015              		.loc 1 2214 11
 7016 0034 002B     		cmp	r3, #0
 7017 0036 01D0     		beq	.L205
2215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
2216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return NAND_READY;
 7018              		.loc 1 2216 12
 7019 0038 4023     		movs	r3, #64
 7020 003a 00E0     		b	.L204
 7021              	.L205:
2217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
2218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   else
2219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   {
2220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****     return NAND_BUSY;
 7022              		.loc 1 2220 12
 7023 003c 0023     		movs	r3, #0
 7024              	.L204:
2221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c ****   }
2222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_nand.c **** }
 7025              		.loc 1 2222 1
 7026 003e 1846     		mov	r0, r3
 7027 0040 1437     		adds	r7, r7, #20
 7028              	.LCFI127:
 7029              		.cfi_def_cfa_offset 4
 7030 0042 BD46     		mov	sp, r7
 7031              	.LCFI128:
 7032              		.cfi_def_cfa_register 13
 7033              		@ sp needed
 7034 0044 5DF8047B 		ldr	r7, [sp], #4
 7035              	.LCFI129:
 7036              		.cfi_restore 7
 7037              		.cfi_def_cfa_offset 0
 7038 0048 7047     		bx	lr
 7039              		.cfi_endproc
 7040              	.LFE354:
 7042              		.text
 7043              	.Letext0:
 7044              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 7045              		.file 4 "./Libraries/CMSIS/Core/Include/core_cm7.h"
 7046              		.file 5 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 7047              		.file 6 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 7048              		.file 7 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
ARM GAS  /tmp/cc0wCm8A.s 			page 184


 7049              		.file 8 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 7050              		.file 9 "/usr/include/newlib/sys/_types.h"
 7051              		.file 10 "/usr/include/newlib/sys/reent.h"
 7052              		.file 11 "/usr/include/newlib/sys/lock.h"
 7053              		.file 12 "/usr/include/newlib/math.h"
 7054              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 7055              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 7056              		.file 15 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_fmc.h"
 7057              		.file 16 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_nand.h"
 7058              		.file 17 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 7059              		.file 18 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/cc0wCm8A.s 			page 185


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_nand.c
     /tmp/cc0wCm8A.s:17     .text.HAL_NAND_Init:0000000000000000 $t
     /tmp/cc0wCm8A.s:25     .text.HAL_NAND_Init:0000000000000000 HAL_NAND_Init
     /tmp/cc0wCm8A.s:199    .text.HAL_NAND_MspInit:0000000000000000 HAL_NAND_MspInit
     /tmp/cc0wCm8A.s:127    .text.HAL_NAND_Init:0000000000000090 $d
     /tmp/cc0wCm8A.s:132    .text.HAL_NAND_DeInit:0000000000000000 $t
     /tmp/cc0wCm8A.s:139    .text.HAL_NAND_DeInit:0000000000000000 HAL_NAND_DeInit
     /tmp/cc0wCm8A.s:242    .text.HAL_NAND_MspDeInit:0000000000000000 HAL_NAND_MspDeInit
     /tmp/cc0wCm8A.s:192    .text.HAL_NAND_MspInit:0000000000000000 $t
     /tmp/cc0wCm8A.s:235    .text.HAL_NAND_MspDeInit:0000000000000000 $t
     /tmp/cc0wCm8A.s:278    .text.HAL_NAND_IRQHandler:0000000000000000 $t
     /tmp/cc0wCm8A.s:285    .text.HAL_NAND_IRQHandler:0000000000000000 HAL_NAND_IRQHandler
     /tmp/cc0wCm8A.s:404    .text.HAL_NAND_ITCallback:0000000000000000 HAL_NAND_ITCallback
     /tmp/cc0wCm8A.s:397    .text.HAL_NAND_ITCallback:0000000000000000 $t
     /tmp/cc0wCm8A.s:440    .text.HAL_NAND_Read_ID:0000000000000000 $t
     /tmp/cc0wCm8A.s:447    .text.HAL_NAND_Read_ID:0000000000000000 HAL_NAND_Read_ID
     /tmp/cc0wCm8A.s:663    .text.HAL_NAND_Reset:0000000000000000 $t
     /tmp/cc0wCm8A.s:670    .text.HAL_NAND_Reset:0000000000000000 HAL_NAND_Reset
     /tmp/cc0wCm8A.s:765    .text.HAL_NAND_ConfigDevice:0000000000000000 $t
     /tmp/cc0wCm8A.s:772    .text.HAL_NAND_ConfigDevice:0000000000000000 HAL_NAND_ConfigDevice
     /tmp/cc0wCm8A.s:853    .text.HAL_NAND_Read_Page_8b:0000000000000000 $t
     /tmp/cc0wCm8A.s:860    .text.HAL_NAND_Read_Page_8b:0000000000000000 HAL_NAND_Read_Page_8b
     /tmp/cc0wCm8A.s:6968   .text.HAL_NAND_Read_Status:0000000000000000 HAL_NAND_Read_Status
     /tmp/cc0wCm8A.s:1505   .text.HAL_NAND_Read_Page_16b:0000000000000000 $t
     /tmp/cc0wCm8A.s:1512   .text.HAL_NAND_Read_Page_16b:0000000000000000 HAL_NAND_Read_Page_16b
     /tmp/cc0wCm8A.s:2172   .text.HAL_NAND_Write_Page_8b:0000000000000000 $t
     /tmp/cc0wCm8A.s:2179   .text.HAL_NAND_Write_Page_8b:0000000000000000 HAL_NAND_Write_Page_8b
     /tmp/cc0wCm8A.s:2830   .text.HAL_NAND_Write_Page_16b:0000000000000000 $t
     /tmp/cc0wCm8A.s:2837   .text.HAL_NAND_Write_Page_16b:0000000000000000 HAL_NAND_Write_Page_16b
     /tmp/cc0wCm8A.s:3503   .text.HAL_NAND_Read_SpareArea_8b:0000000000000000 $t
     /tmp/cc0wCm8A.s:3510   .text.HAL_NAND_Read_SpareArea_8b:0000000000000000 HAL_NAND_Read_SpareArea_8b
     /tmp/cc0wCm8A.s:4190   .text.HAL_NAND_Read_SpareArea_16b:0000000000000000 $t
     /tmp/cc0wCm8A.s:4197   .text.HAL_NAND_Read_SpareArea_16b:0000000000000000 HAL_NAND_Read_SpareArea_16b
     /tmp/cc0wCm8A.s:4877   .text.HAL_NAND_Write_SpareArea_8b:0000000000000000 $t
     /tmp/cc0wCm8A.s:4884   .text.HAL_NAND_Write_SpareArea_8b:0000000000000000 HAL_NAND_Write_SpareArea_8b
     /tmp/cc0wCm8A.s:5589   .text.HAL_NAND_Write_SpareArea_16b:0000000000000000 $t
     /tmp/cc0wCm8A.s:5596   .text.HAL_NAND_Write_SpareArea_16b:0000000000000000 HAL_NAND_Write_SpareArea_16b
     /tmp/cc0wCm8A.s:6301   .text.HAL_NAND_Erase_Block:0000000000000000 $t
     /tmp/cc0wCm8A.s:6308   .text.HAL_NAND_Erase_Block:0000000000000000 HAL_NAND_Erase_Block
     /tmp/cc0wCm8A.s:6555   .text.HAL_NAND_Address_Inc:0000000000000000 $t
     /tmp/cc0wCm8A.s:6562   .text.HAL_NAND_Address_Inc:0000000000000000 HAL_NAND_Address_Inc
     /tmp/cc0wCm8A.s:6670   .text.HAL_NAND_ECC_Enable:0000000000000000 $t
     /tmp/cc0wCm8A.s:6677   .text.HAL_NAND_ECC_Enable:0000000000000000 HAL_NAND_ECC_Enable
     /tmp/cc0wCm8A.s:6750   .text.HAL_NAND_ECC_Disable:0000000000000000 $t
     /tmp/cc0wCm8A.s:6757   .text.HAL_NAND_ECC_Disable:0000000000000000 HAL_NAND_ECC_Disable
     /tmp/cc0wCm8A.s:6830   .text.HAL_NAND_GetECC:0000000000000000 $t
     /tmp/cc0wCm8A.s:6837   .text.HAL_NAND_GetECC:0000000000000000 HAL_NAND_GetECC
     /tmp/cc0wCm8A.s:6914   .text.HAL_NAND_GetState:0000000000000000 $t
     /tmp/cc0wCm8A.s:6921   .text.HAL_NAND_GetState:0000000000000000 HAL_NAND_GetState
     /tmp/cc0wCm8A.s:6961   .text.HAL_NAND_Read_Status:0000000000000000 $t

UNDEFINED SYMBOLS
FMC_NAND_Init
FMC_NAND_CommonSpace_Timing_Init
FMC_NAND_AttributeSpace_Timing_Init
FMC_NAND_DeInit
ARM GAS  /tmp/cc0wCm8A.s 			page 186


HAL_GetTick
FMC_NAND_ECC_Enable
FMC_NAND_ECC_Disable
FMC_NAND_GetECC
