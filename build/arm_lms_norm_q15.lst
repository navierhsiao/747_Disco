ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_lms_norm_q15.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_lms_norm_q15,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	arm_lms_norm_q15
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_lms_norm_q15:
  27              	.LVL0:
  28              	.LFB145:
  29              		.file 1 ".//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c"
   1:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** /* ----------------------------------------------------------------------
   2:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * Project:      CMSIS DSP Library
   3:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * Title:        arm_lms_norm_q15.c
   4:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * Description:  Processing function for Q15 normalized LMS filter
   5:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  *
   6:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * $Date:        18. March 2019
   7:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * $Revision:    V1.6.0
   8:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  *
   9:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * Target Processor: Cortex-M cores
  10:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * -------------------------------------------------------------------- */
  11:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** /*
  12:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  *
  14:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  *
  16:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * not use this file except in compliance with the License.
  18:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * You may obtain a copy of the License at
  19:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  *
  20:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  *
  22:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * See the License for the specific language governing permissions and
  26:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  * limitations under the License.
  27:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  */
  28:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
  29:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** #include "arm_math.h"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 2


  30:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
  31:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** /**
  32:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   @ingroup groupFilters
  33:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  */
  34:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
  35:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** /**
  36:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   @addtogroup LMS_NORM
  37:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   @{
  38:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  */
  39:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
  40:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** /**
  41:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   @brief         Processing function for Q15 normalized LMS filter.
  42:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   @param[in]     S         points to an instance of the Q15 normalized LMS filter structure
  43:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   @param[in]     pSrc      points to the block of input data
  44:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   @param[in]     pRef      points to the block of reference data
  45:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   @param[out]    pOut      points to the block of output data
  46:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   @param[out]    pErr      points to the block of error data
  47:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   @param[in]     blockSize number of samples to process
  48:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   @return        none
  49:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
  50:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   @par           Scaling and Overflow Behavior
  51:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****                    The function is implemented using a 64-bit internal accumulator.
  52:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****                    Both coefficients and state variables are represented in 1.15 format and
  53:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****                    multiplications yield a 2.30 result. The 2.30 intermediate results are
  54:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****                    accumulated in a 64-bit accumulator in 34.30 format.
  55:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****                    There is no risk of internal overflow with this approach and the full
  56:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****                    precision of intermediate multiplications is preserved. After all additions
  57:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****                    have been performed, the accumulator is truncated to 34.15 format by
  58:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****                    discarding low 15 bits. Lastly, the accumulator is saturated to yield a
  59:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****                    result in 1.15 format.
  60:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  @par
  61:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   	               In this filter, filter coefficients are updated for each sample and the
  62:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****                    updation of filter cofficients are saturted.
  63:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****  */
  64:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
  65:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** void arm_lms_norm_q15(
  66:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         arm_lms_norm_instance_q15 * S,
  67:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   const q15_t * pSrc,
  68:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t * pRef,
  69:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t * pOut,
  70:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t * pErr,
  71:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         uint32_t blockSize)
  72:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** {
  30              		.loc 1 72 1 view -0
  31              		.cfi_startproc
  32              		@ args = 8, pretend = 0, frame = 40
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 72 1 is_stmt 0 view .LVU1
  35 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 36
  38              		.cfi_offset 4, -36
  39              		.cfi_offset 5, -32
  40              		.cfi_offset 6, -28
  41              		.cfi_offset 7, -24
  42              		.cfi_offset 8, -20
  43              		.cfi_offset 9, -16
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 3


  44              		.cfi_offset 10, -12
  45              		.cfi_offset 11, -8
  46              		.cfi_offset 14, -4
  47 0004 0446     		mov	r4, r0
  48 0006 8BB0     		sub	sp, sp, #44
  49              	.LCFI1:
  50              		.cfi_def_cfa_offset 80
  51              		.loc 1 72 1 view .LVU2
  52 0008 9046     		mov	r8, r2
  53 000a 9A46     		mov	r10, r3
  73:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *pState = S->pState;                     /* State pointer */
  74:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
  75:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *pStateCurnt;                            /* Points to the current sample of the state
  76:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *px, *pb;                                /* Temporary pointers for state and coeffici
  77:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t mu = S->mu;                              /* Adaptive factor */
  78:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filt
  79:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         uint32_t tapCnt, blkCnt;                       /* Loop counters */
  80:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q63_t acc;                                     /* Accumulator */
  81:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q31_t energy;                                  /* Energy of the input */
  82:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t e = 0, d = 0;                            /* Error, reference data sample */
  83:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t w = 0, in;                               /* Weight factor and state */
  84:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t x0;                                      /* Temporary variable to hold input sample *
  85:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t errorXmu, oneByEnergy;                   /* Temporary variables to store error and mu
  86:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t postShift;                               /* Post shift to be applied to weight after 
  87:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q31_t coef;                                    /* Temporary variable for coefficient */
  88:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q31_t acc_l, acc_h;                            /* Temporary input */
  89:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         int32_t lShift = (15 - (int32_t) S->postShift);       /*  Post shift  */
  54              		.loc 1 89 32 view .LVU3
  55 000c A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
  56              	.LVL1:
  90:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         int32_t uShift = (32 - lShift);
  91:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
  92:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   energy = S->energy;
  93:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   x0 = S->x0;
  94:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
  95:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   /* S->pState points to buffer which contains previous frame (numTaps - 1) samples */
  96:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   /* pStateCurnt points to the location where the new input data should be written */
  97:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   pStateCurnt = &(S->pState[(numTaps - 1U)]);
  57              		.loc 1 97 28 view .LVU4
  58 000e 6FF00049 		mvn	r9, #-2147483648
  78:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         uint32_t tapCnt, blkCnt;                       /* Loop counters */
  59              		.loc 1 78 18 view .LVU5
  60 0012 2388     		ldrh	r3, [r4]
  61              	.LVL2:
  92:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   x0 = S->x0;
  62              		.loc 1 92 13 view .LVU6
  63 0014 B4F914C0 		ldrsh	ip, [r4, #20]
  72:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *pState = S->pState;                     /* State pointer */
  64              		.loc 1 72 1 view .LVU7
  65 0018 0990     		str	r0, [sp, #36]
  73:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
  66              		.loc 1 73 9 is_stmt 1 view .LVU8
  72:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *pState = S->pState;                     /* State pointer */
  67              		.loc 1 72 1 is_stmt 0 view .LVU9
  68 001a 0846     		mov	r0, r1
  69              	.LVL3:
  89:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         int32_t uShift = (32 - lShift);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 4


  70              		.loc 1 89 32 view .LVU10
  71 001c 2146     		mov	r1, r4
  72              	.LVL4:
  89:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         int32_t uShift = (32 - lShift);
  73              		.loc 1 89 17 view .LVU11
  74 001e C2F10F04 		rsb	r4, r2, #15
  75              	.LVL5:
  98:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
  99:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   /* initialise loop count */
 100:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   blkCnt = blockSize;
 101:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 102:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   while (blkCnt > 0U)
  76              		.loc 1 102 9 view .LVU12
  77 0022 159E     		ldr	r6, [sp, #84]
  90:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
  78              		.loc 1 90 17 view .LVU13
  79 0024 1132     		adds	r2, r2, #17
  73:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
  80              		.loc 1 73 16 view .LVU14
  81 0026 4D68     		ldr	r5, [r1, #4]
  97:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
  82              		.loc 1 97 28 view .LVU15
  83 0028 9944     		add	r9, r9, r3
  89:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         int32_t uShift = (32 - lShift);
  84              		.loc 1 89 17 view .LVU16
  85 002a 0694     		str	r4, [sp, #24]
  73:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
  86              		.loc 1 73 16 view .LVU17
  87 002c 0C46     		mov	r4, r1
  74:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *pStateCurnt;                            /* Points to the current sample of the state
  88              		.loc 1 74 16 view .LVU18
  89 002e 8968     		ldr	r1, [r1, #8]
  90              	.LVL6:
  90:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
  91              		.loc 1 90 17 view .LVU19
  92 0030 0792     		str	r2, [sp, #28]
  74:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *pStateCurnt;                            /* Points to the current sample of the state
  93              		.loc 1 74 16 view .LVU20
  94 0032 0391     		str	r1, [sp, #12]
  77:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filt
  95              		.loc 1 77 15 view .LVU21
  96 0034 B4F90C10 		ldrsh	r1, [r4, #12]
  73:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
  97              		.loc 1 73 16 view .LVU22
  98 0038 0895     		str	r5, [sp, #32]
  99              	.LVL7:
  74:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *pStateCurnt;                            /* Points to the current sample of the state
 100              		.loc 1 74 9 is_stmt 1 view .LVU23
  75:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *px, *pb;                                /* Temporary pointers for state and coeffici
 101              		.loc 1 75 9 view .LVU24
  76:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t mu = S->mu;                              /* Adaptive factor */
 102              		.loc 1 76 9 view .LVU25
  77:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filt
 103              		.loc 1 77 9 view .LVU26
  77:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filt
 104              		.loc 1 77 15 is_stmt 0 view .LVU27
 105 003a 0491     		str	r1, [sp, #16]
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 5


 106              	.LVL8:
  78:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         uint32_t tapCnt, blkCnt;                       /* Loop counters */
 107              		.loc 1 78 9 is_stmt 1 view .LVU28
  79:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q63_t acc;                                     /* Accumulator */
 108              		.loc 1 79 9 view .LVU29
  80:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q31_t energy;                                  /* Energy of the input */
 109              		.loc 1 80 9 view .LVU30
  81:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t e = 0, d = 0;                            /* Error, reference data sample */
 110              		.loc 1 81 9 view .LVU31
  82:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t w = 0, in;                               /* Weight factor and state */
 111              		.loc 1 82 9 view .LVU32
  83:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t x0;                                      /* Temporary variable to hold input sample *
 112              		.loc 1 83 9 view .LVU33
  84:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t errorXmu, oneByEnergy;                   /* Temporary variables to store error and mu
 113              		.loc 1 84 9 view .LVU34
  85:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t postShift;                               /* Post shift to be applied to weight after 
 114              		.loc 1 85 9 view .LVU35
  86:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q31_t coef;                                    /* Temporary variable for coefficient */
 115              		.loc 1 86 9 view .LVU36
  87:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q31_t acc_l, acc_h;                            /* Temporary input */
 116              		.loc 1 87 9 view .LVU37
  88:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         int32_t lShift = (15 - (int32_t) S->postShift);       /*  Post shift  */
 117              		.loc 1 88 9 view .LVU38
  89:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         int32_t uShift = (32 - lShift);
 118              		.loc 1 89 9 view .LVU39
  90:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 119              		.loc 1 90 9 view .LVU40
  92:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   x0 = S->x0;
 120              		.loc 1 92 3 view .LVU41
  93:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 121              		.loc 1 93 3 view .LVU42
  93:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 122              		.loc 1 93 6 is_stmt 0 view .LVU43
 123 003c B4F91610 		ldrsh	r1, [r4, #22]
 124              	.LVL9:
  97:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 125              		.loc 1 97 3 is_stmt 1 view .LVU44
 100:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 126              		.loc 1 100 3 view .LVU45
 127              		.loc 1 102 3 view .LVU46
 128              		.loc 1 102 9 view .LVU47
 129 0040 002E     		cmp	r6, #0
 130 0042 00F0A780 		beq	.L16
 131 0046 4FEA4909 		lsl	r9, r9, #1
 132              	.LVL10:
 133              		.loc 1 102 9 is_stmt 0 view .LVU48
 134 004a 821E     		subs	r2, r0, #2
 135              	.LVL11:
  73:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
 136              		.loc 1 73 16 view .LVU49
 137 004c AE46     		mov	lr, r5
 138              	.LBB15:
 139              	.LBB16:
 140              		.file 2 ".//Libraries/CMSIS/DSP/Include/arm_math.h"
   1:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /******************************************************************************
   2:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @file     arm_math.h
   3:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief    Public header file for CMSIS DSP Library
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 6


   4:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @version  V1.6.0
   5:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @date     18. March 2019
   6:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  ******************************************************************************/
   7:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /*
   8:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved.
   9:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  10:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  12:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * not use this file except in compliance with the License.
  14:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * You may obtain a copy of the License at
  15:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  16:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  18:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * See the License for the specific language governing permissions and
  22:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * limitations under the License.
  23:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
  24:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
  25:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
  26:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  28:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Introduction
  29:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  30:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  31:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  34:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Basic math functions
  36:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Fast math functions
  37:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Complex math functions
  38:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Filters
  39:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Matrix functions
  40:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Transform functions
  41:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Motor control functions
  42:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Statistical functions
  43:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Support functions
  44:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Interpolation functions
  45:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  46:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  49:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Using the Library
  50:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  51:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  52:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  58:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  59:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 7


  61:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  64:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  67:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  70:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  73:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  77:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  78:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Examples
  79:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * --------
  80:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  81:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  82:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  83:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Toolchain Support
  84:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  85:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  86:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  87:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  88:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  89:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Building the Library
  90:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  91:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  92:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  93:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
  94:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  95:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  96:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
  97:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  98:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Preprocessor Macros
  99:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 100:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 101:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Each library project have different preprocessor macros.
 102:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 103:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 104:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 105:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 106:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 107:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 108:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 109:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 110:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 111:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 112:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 113:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 114:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 115:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_LOOPUNROLL:
 116:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 117:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_LOOPUNROLL to enable manual loop unrolling in DSP functions
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 8


 118:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 119:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON:
 120:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 121:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON to enable Neon versions of the DSP functions.
 122:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * It is not enabled by default when Neon is available because performances are 
 123:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * dependent on the compiler and target architecture.
 124:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 125:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON_EXPERIMENTAL:
 126:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 127:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON_EXPERIMENTAL to enable experimental Neon versions of 
 128:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * of some DSP functions. Experimental Neon versions currently do not have better
 129:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * performances than the scalar versions.
 130:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 131:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 132:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 133:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * -----------------------------
 134:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 135:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 136:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |File/Folder                      |Content                                                    
 137:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |---------------------------------|-----------------------------------------------------------
 138:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP     | This documentation                                        
 139:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\DSP_Lib_TestSuite | DSP_Lib test suite                                        
 140:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Examples          | Example projects demonstrating the usage of the library fu
 141:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Include           | DSP_Lib include files                                     
 142:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Lib               | DSP_Lib binaries                                          
 143:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Projects          | Projects to rebuild DSP_Lib binaries                      
 144:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Source            | DSP_Lib source files                                      
 145:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 146:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 147:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Revision History of CMSIS-DSP
 148:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 149:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 150:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 151:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 152:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 153:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 154:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 155:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 156:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 157:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 158:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 159:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 160:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 161:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * operate on individual values and not arrays.
 162:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 163:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 164:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 165:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 166:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 167:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 168:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 169:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 170:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * (real, imag, real, imag, ...).
 171:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 172:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 173:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * real values.
 174:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 9


 175:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 176:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 177:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 178:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 179:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 180:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 181:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 182:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 183:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 184:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 185:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * the type
 186:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 187:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * below:
 188:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 189:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     typedef struct
 190:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     {
 191:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 192:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 193:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 194:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 195:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 196:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 197:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 198:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 199:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 200:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 201:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * matrix element (i, j) is stored at:
 202:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 203:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     pData[i*numCols + j]
 204:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 205:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 206:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Init Functions
 207:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 208:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * data structure.
 209:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 210:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Refer to \ref arm_mat_init_f32(), \ref arm_mat_init_q31() and \ref arm_mat_init_q15()
 211:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * for floating-point, Q31 and Q15 types,  respectively.
 212:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 213:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par
 214:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 215:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 216:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * To place the instance structure in a const data
 217:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 218:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 219:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 220:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 221:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 222:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 223:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 224:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 225:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * data array.
 226:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 227:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Size Checking
 228:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 229:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 230:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 231:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * columns. If the size check fails the functions return:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 10


 232:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 233:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 234:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 235:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Otherwise the functions return
 236:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 237:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 238:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 239:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 240:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 241:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 242:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 243:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 244:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 245:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 246:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 247:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 248:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 249:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 250:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 251:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 252:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 253:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 254:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 255:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 256:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupController Controller Functions
 257:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 258:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 259:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 260:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 261:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 262:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 263:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 264:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 265:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 266:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 267:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 268:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 269:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 270:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 271:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 272:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 273:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 274:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 275:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupExamples Examples
 276:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 277:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 278:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 279:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef _ARM_MATH_H
 280:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define _ARM_MATH_H
 281:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 282:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /* Compiler specific diagnostic adjustment */
 283:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 284:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 285:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 286:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 287:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 288:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic push
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 11


 289:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wsign-conversion"
 290:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wconversion"
 291:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wunused-parameter"
 292:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 293:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 294:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 295:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 296:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 297:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 298:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 299:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 300:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 301:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( _MSC_VER )
 302:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 303:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 304:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 305:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 306:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 307:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 308:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /* Included for instrinsics definitions */
 309:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if !defined ( _MSC_VER )
 310:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include "cmsis_compiler.h"
 311:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 312:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include <stdint.h>
 313:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __STATIC_FORCEINLINE static __forceinline
 314:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __ALIGNED(x) __declspec(align(x))
 315:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_ENTER
 316:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_EXIT
 317:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_ENTER 
 318:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
 319:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 320:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 321:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include "string.h"
 322:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include "math.h"
 323:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include "float.h"
 324:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 325:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /* evaluate ARM DSP feature */
 326:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
 327:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define ARM_MATH_DSP                   1
 328:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 329:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 330:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined(__ARM_NEON)
 331:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include <arm_neon.h>
 332:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 333:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 334:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 335:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #ifdef   __cplusplus
 336:.//Libraries/CMSIS/DSP/Include/arm_math.h **** extern "C"
 337:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 338:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 339:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 340:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 341:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 342:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 344:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 345:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q31          (0x100)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 12


 346:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q15          0x5
 347:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef PI
 349:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define PI               3.14159265358979f
 350:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 351:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 352:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 353:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 355:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 356:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 363:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 364:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 366:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 370:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 371:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 372:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 373:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 374:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 375:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef enum
 376:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 377:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SUCCESS        =  0,        /**< No error */
 378:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 379:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR   = -2,        /**< Length of data buffer is incorrect */
 380:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH  = -3,        /**< Size of matrices is not compatible with the operation
 381:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_NANINF         = -4,        /**< Not-a-number (NaN) or infinity is generated */
 382:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SINGULAR       = -5,        /**< Input matrix is singular and cannot be inverted */
 383:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_TEST_FAILURE   = -6         /**< Test Failed */
 384:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_status;
 385:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 386:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 387:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 388:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 389:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int8_t q7_t;
 390:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 391:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 392:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 393:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 394:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int16_t q15_t;
 395:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 396:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 397:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 398:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 399:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int32_t q31_t;
 400:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 401:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 402:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 13


 403:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 404:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int64_t q63_t;
 405:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 406:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 407:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 408:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 409:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef float float32_t;
 410:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 411:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 412:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 413:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 414:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef double float64_t;
 415:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 416:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 417:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 418:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief definition to read/write two 16 bit values.
 419:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @deprecated
 420:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 421:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 422:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 423:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 424:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 425:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 426:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 427:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 428:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 429:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 430:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 431:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 432:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 433:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 434:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
 435:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined(_MSC_VER )
 436:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 437:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 438:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 439:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 440:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 441:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 442:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
 443:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
 444:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
 445:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 446:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /* SIMD replacement */
 447:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 448:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 449:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 450:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer.
 451:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 452:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 453:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 454:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
 455:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15)
 456:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 457:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 458:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 459:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, pQ15, 4);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 14


 460:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 461:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 462:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 463:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 464:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 465:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and increment pointer afterwards.
 466:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 467:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 468:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_ia (
 470:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 471:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 473:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 476:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 477:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 478:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 479:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 480:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 481:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and decrement pointer afterwards.
 482:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 483:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 484:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 485:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_da (
 486:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 487:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 488:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 489:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 490:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 491:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 492:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 493:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 494:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 495:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 496:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 497:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer and increment pointer afterwards.
 498:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 499:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 500:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 501:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 502:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2_ia (
 503:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15,
 504:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t    value)
 505:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 506:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 507:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 508:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ15, &val, 4);
 509:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 510:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 511:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 512:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 513:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer.
 514:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 515:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 516:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 15


 517:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 518:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2 (
 519:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15,
 520:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t   value)
 521:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 522:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 523:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 524:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (pQ15, &val, 4);
 525:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 526:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 527:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 528:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 529:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and increment pointer afterwards.
 530:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 531:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 532:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 533:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_ia (
 534:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7)
 535:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 536:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 537:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 538:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ7, 4);
 539:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 += 4;
 540:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 541:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 542:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 543:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 544:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 545:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and decrement pointer afterwards.
 546:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 547:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 548:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 549:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_da (
 550:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7)
 551:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 552:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 553:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 554:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ7, 4);
 555:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 -= 4;
 556:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 557:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 558:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 559:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 560:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 561:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 4 Q7 to Q7 pointer and increment pointer afterwards.
 562:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 563:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 564:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 565:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 566:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q7x4_ia (
 567:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7,
 568:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t   value)
 569:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 570:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 571:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 572:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ7, &val, 4);
 573:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 += 4;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 16


 574:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 575:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 576:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /*
 577:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 578:.//Libraries/CMSIS/DSP/Include/arm_math.h **** Normally those kind of definitions are in a compiler file
 579:.//Libraries/CMSIS/DSP/Include/arm_math.h **** in Core or Core_A.
 580:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 581:.//Libraries/CMSIS/DSP/Include/arm_math.h **** But for MSVC compiler it is a bit special. The goal is very specific
 582:.//Libraries/CMSIS/DSP/Include/arm_math.h **** to CMSIS-DSP and only to allow the use of this library from other
 583:.//Libraries/CMSIS/DSP/Include/arm_math.h **** systems like Python or Matlab.
 584:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 585:.//Libraries/CMSIS/DSP/Include/arm_math.h **** MSVC is not going to be used to cross-compile to ARM. So, having a MSVC
 586:.//Libraries/CMSIS/DSP/Include/arm_math.h **** compiler file in Core or Core_A would not make sense.
 587:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 588:.//Libraries/CMSIS/DSP/Include/arm_math.h **** */
 589:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined ( _MSC_VER )
 590:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t data)
 591:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 592:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       if (data == 0U) { return 32U; }
 593:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 594:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       uint32_t count = 0U;
 595:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       uint32_t mask = 0x80000000U;
 596:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 597:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       while ((data & mask) == 0U)
 598:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 599:.//Libraries/CMSIS/DSP/Include/arm_math.h ****         count += 1U;
 600:.//Libraries/CMSIS/DSP/Include/arm_math.h ****         mask = mask >> 1U;
 601:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 602:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       return count;
 603:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 604:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 605:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 606:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 607:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     if ((sat >= 1U) && (sat <= 32U))
 608:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 609:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 610:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       const int32_t min = -1 - max ;
 611:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       if (val > max)
 612:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 613:.//Libraries/CMSIS/DSP/Include/arm_math.h ****         return max;
 614:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 615:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       else if (val < min)
 616:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 617:.//Libraries/CMSIS/DSP/Include/arm_math.h ****         return min;
 618:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 619:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 620:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     return val;
 621:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 622:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 623:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 624:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 625:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     if (sat <= 31U)
 626:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 627:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       const uint32_t max = ((1U << sat) - 1U);
 628:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       if (val > (int32_t)max)
 629:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 630:.//Libraries/CMSIS/DSP/Include/arm_math.h ****         return max;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 17


 631:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 632:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       else if (val < 0)
 633:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 634:.//Libraries/CMSIS/DSP/Include/arm_math.h ****         return 0U;
 635:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 636:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 637:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     return (uint32_t)val;
 638:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 639:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 640:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 641:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef ARM_MATH_DSP
 642:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 643:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 644:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 645:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 646:.//Libraries/CMSIS/DSP/Include/arm_math.h ****                                       (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 647:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 648:.//Libraries/CMSIS/DSP/Include/arm_math.h ****                                       (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 649:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 650:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 651:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    /**
 652:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 653:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 654:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 655:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 656:.//Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 657:.//Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 658:.//Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 659:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 660:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 661:.//Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 662:.//Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 663:.//Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 664:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 665:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 666:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 667:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 668:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 669:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 670:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q31_t clip_q63_to_q31(
 671:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q63_t x)
 672:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 673:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 674:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 675:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 676:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 677:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 678:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 679:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 680:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q15_t clip_q63_to_q15(
 681:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q63_t x)
 682:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 683:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 684:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 685:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 686:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 687:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 18


 688:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q31 to Q7 values.
 689:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 690:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q7_t clip_q31_to_q7(
 691:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t x)
 692:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 693:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 694:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 695:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 696:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 697:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 698:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 699:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 700:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q15_t clip_q31_to_q15(
 701:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t x)
 702:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 703:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 704:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 705:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 706:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 707:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 708:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 709:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 710:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q63_t mult32x64(
 711:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q63_t x,
 712:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t y)
 713:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 714:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 715:.//Libraries/CMSIS/DSP/Include/arm_math.h ****             (((q63_t) (x >> 32)                * y)      )  );
 716:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 717:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 718:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 719:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 720:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 721:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t arm_recip_q31(
 722:.//Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t in,
 723:.//Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * dst,
 724:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pRecipTable)
 725:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 726:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t out;
 727:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t tempVal;
 728:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t index, i;
 729:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t signBits;
 730:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 731:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     if (in > 0)
 732:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 733:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 734:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 735:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     else
 736:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 737:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 738:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 739:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 740:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Convert input sample to 1.31 format */
 741:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     in = (in << signBits);
 742:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 743:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 744:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     index = (uint32_t)(in >> 24);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 19


 745:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     index = (index & INDEX_MASK);
 746:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 747:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     /* 1.31 with exp 1 */
 748:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     out = pRecipTable[index];
 749:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 750:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     /* calculation of reciprocal value */
 751:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     /* running approximation for two iterations */
 752:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     for (i = 0U; i < 2U; i++)
 753:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 754:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 755:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 756:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       /*      1.31 with exp 1 */
 757:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 758:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 759:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 760:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 761:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     /* write output */
 762:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     *dst = out;
 763:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 764:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 765:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     return (signBits + 1U);
 766:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 767:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 768:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 769:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 770:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 771:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 772:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t arm_recip_q15(
 773:.//Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t in,
 774:.//Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * dst,
 775:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pRecipTable)
 776:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 777:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     q15_t out = 0;
 778:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t tempVal = 0;
 779:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t index = 0, i = 0;
 780:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t signBits = 0;
 781:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 782:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     if (in > 0)
 783:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 784:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 785:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 786:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     else
 787:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 788:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 789:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 790:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 791:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Convert input sample to 1.15 format */
 792:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     in = (in << signBits);
 793:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 794:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 795:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     index = (uint32_t)(in >>  8);
 796:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     index = (index & INDEX_MASK);
 797:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 798:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     /*      1.15 with exp 1  */
 799:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     out = pRecipTable[index];
 800:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 801:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     /* calculation of reciprocal value */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 20


 802:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     /* running approximation for two iterations */
 803:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     for (i = 0U; i < 2U; i++)
 804:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 805:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 806:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 141              		.loc 2 806 15 view .LVU50
 142 004e 47F6FF7B 		movw	fp, #32767
 143 0052 A9F10209 		sub	r9, r9, #2
 144              	.LVL12:
 145              		.loc 2 806 15 view .LVU51
 146 0056 0292     		str	r2, [sp, #8]
 147 0058 2269     		ldr	r2, [r4, #16]
 148 005a A944     		add	r9, r9, r5
 149              	.LVL13:
 150              		.loc 2 806 15 view .LVU52
 151              	.LBE16:
 152              	.LBE15:
 153              		.loc 1 102 9 view .LVU53
 154 005c 0196     		str	r6, [sp, #4]
 155 005e 0592     		str	r2, [sp, #20]
 156              	.LVL14:
 157              	.L9:
 103:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   {
 104:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Copy the new input sample into the state buffer */
 105:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     *pStateCurnt++ = *pSrc;
 158              		.loc 1 105 5 is_stmt 1 view .LVU54
 159              		.loc 1 105 22 is_stmt 0 view .LVU55
 160 0060 0298     		ldr	r0, [sp, #8]
 106:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 107:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Initialize pState pointer */
 108:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     px = pState;
 109:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 110:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Initialize coefficient pointer */
 111:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     pb = pCoeffs;
 112:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 113:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Read the sample from input buffer */
 114:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     in = *pSrc++;
 115:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 116:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Update the energy calculation */
 117:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     energy -= (((q31_t) x0 * (x0)) >> 15);
 161              		.loc 1 117 28 view .LVU56
 162 0062 01FB01F1 		mul	r1, r1, r1
 163              	.LVL15:
 105:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 164              		.loc 1 105 22 view .LVU57
 165 0066 30F9022F 		ldrsh	r2, [r0, #2]!
 166              	.LVL16:
 167              		.loc 1 117 12 view .LVU58
 168 006a ACEBE13C 		sub	ip, ip, r1, asr #15
 169              	.LVL17:
 118:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     energy += (((q31_t) in * (in)) >> 15);
 170              		.loc 1 118 28 view .LVU59
 171 006e 02FB02F1 		mul	r1, r2, r2
 105:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 172              		.loc 1 105 22 view .LVU60
 173 0072 0290     		str	r0, [sp, #8]
 174              	.LVL18:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 21


 175              		.loc 1 118 12 view .LVU61
 176 0074 0CEBE13C 		add	ip, ip, r1, asr #15
 105:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 177              		.loc 1 105 20 view .LVU62
 178 0078 29F8022F 		strh	r2, [r9, #2]!	@ movhi
 108:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 179              		.loc 1 108 5 is_stmt 1 view .LVU63
 180              	.LVL19:
 111:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 181              		.loc 1 111 5 view .LVU64
 114:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 182              		.loc 1 114 5 view .LVU65
 117:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     energy += (((q31_t) in * (in)) >> 15);
 183              		.loc 1 117 5 view .LVU66
 184              		.loc 1 118 5 view .LVU67
 119:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 120:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Set the accumulator to zero */
 121:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     acc = 0;
 185              		.loc 1 121 5 view .LVU68
 122:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 123:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
 124:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 125:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Loop unrolling: Compute 4 taps at a time. */
 126:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     tapCnt = numTaps >> 2U;
 127:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 128:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     while (tapCnt > 0U)
 129:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     {
 130:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       /* Perform the multiply-accumulate */
 131:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       /* acc +=  b[N] * x[n-N] + b[N-1] * x[n-N-1] */
 132:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       acc = __SMLALD(read_q15x2_ia (&px), read_q15x2_ia (&pb), acc);
 133:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       acc = __SMLALD(read_q15x2_ia (&px), read_q15x2_ia (&pb), acc);
 134:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 135:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       /* Decrement loop counter */
 136:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       tapCnt--;
 137:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     }
 138:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 139:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Loop unrolling: Compute remaining taps */
 140:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     tapCnt = numTaps % 0x4U;
 141:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 142:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** #else
 143:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 144:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Initialize tapCnt with number of samples */
 145:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     tapCnt = numTaps;
 186              		.loc 1 145 5 view .LVU69
 146:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 147:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 148:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 149:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     while (tapCnt > 0U)
 187              		.loc 1 149 5 view .LVU70
 188              		.loc 1 149 11 view .LVU71
 189 007c 002B     		cmp	r3, #0
 190 007e 00F08380 		beq	.L17
 121:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 191              		.loc 1 121 9 is_stmt 0 view .LVU72
 192 0082 0026     		movs	r6, #0
 193 0084 0027     		movs	r7, #0
 194              		.loc 1 149 11 view .LVU73
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 22


 195 0086 1A46     		mov	r2, r3
 196              	.LVL20:
 111:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 197              		.loc 1 111 8 view .LVU74
 198 0088 039D     		ldr	r5, [sp, #12]
 199              		.loc 1 149 11 view .LVU75
 200 008a 7446     		mov	r4, lr
 121:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 201              		.loc 1 121 9 view .LVU76
 202 008c 3046     		mov	r0, r6
 203              	.LVL21:
 121:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 204              		.loc 1 121 9 view .LVU77
 205 008e 3946     		mov	r1, r7
 206              	.LVL22:
 207              	.L4:
 150:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     {
 151:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       /* Perform the multiply-accumulate */
 152:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       acc += (q63_t) (((q31_t) (*px++) * (*pb++)));
 208              		.loc 1 152 7 is_stmt 1 view .LVU78
 209              		.loc 1 152 11 is_stmt 0 view .LVU79
 210 0090 34F8027B 		ldrh	r7, [r4], #2
 211              	.LVL23:
 149:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     {
 212              		.loc 1 149 11 view .LVU80
 213 0094 013A     		subs	r2, r2, #1
 214              	.LVL24:
 215              		.loc 1 152 11 view .LVU81
 216 0096 35F8026B 		ldrh	r6, [r5], #2
 217              	.LVL25:
 218              		.loc 1 152 11 view .LVU82
 219 009a C7FB8601 		smlalbb	r0, r1, r7, r6
 220              	.LVL26:
 153:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 154:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       /* Decrement the loop counter */
 155:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       tapCnt--;
 221              		.loc 1 155 7 is_stmt 1 view .LVU83
 149:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     {
 222              		.loc 1 149 11 view .LVU84
 223 009e F7D1     		bne	.L4
 224 00a0 079A     		ldr	r2, [sp, #28]
 225 00a2 9140     		lsls	r1, r1, r2
 226 00a4 069A     		ldr	r2, [sp, #24]
 227 00a6 D040     		lsrs	r0, r0, r2
 228              	.LVL27:
 149:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     {
 229              		.loc 1 149 11 is_stmt 0 view .LVU85
 230 00a8 0843     		orrs	r0, r0, r1
 231              	.LVL28:
 232              	.L3:
 156:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     }
 157:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 158:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Calc lower part of acc */
 159:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     acc_l = acc & 0xffffffff;
 233              		.loc 1 159 5 is_stmt 1 view .LVU86
 160:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 161:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Calc upper part of acc */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 23


 162:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     acc_h = (acc >> 32) & 0xffffffff;
 234              		.loc 1 162 5 view .LVU87
 163:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 164:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Apply shift for lower part of acc and upper part of acc */
 165:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     acc = (uint32_t) acc_l >> lShift | acc_h << uShift;
 235              		.loc 1 165 5 view .LVU88
 166:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 167:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Converting the result to 1.15 format and saturate the output */
 168:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     acc = __SSAT(acc, 16U);
 236              		.loc 1 168 5 view .LVU89
 237              	.LBB30:
 238              		.loc 1 168 11 view .LVU90
 239              		.loc 1 168 11 view .LVU91
 240              		.syntax unified
 241              	@ 168 ".//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c" 1
 242 00aa 00F30F00 		ssat r0, #16, r0
 243              	@ 0 "" 2
 244              	.LVL29:
 245              		.loc 1 168 11 view .LVU92
 246              		.loc 1 168 11 is_stmt 0 view .LVU93
 247              		.thumb
 248              		.syntax unified
 249              	.LBE30:
 169:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 170:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Store the result from accumulator into the destination buffer. */
 171:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     *pOut++ = (q15_t) acc;
 250              		.loc 1 171 5 is_stmt 1 view .LVU94
 172:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 173:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Compute and store error */
 174:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     d = *pRef++;
 175:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     e = d - (q15_t) acc;
 176:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     *pErr++ = e;
 177:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 178:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Calculation of 1/energy */
 179:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     postShift = arm_recip_q15((q15_t) energy + DELTA_Q15, &oneByEnergy, S->recipTable);
 251              		.loc 1 179 46 is_stmt 0 view .LVU95
 252 00ae 0CF10502 		add	r2, ip, #5
 171:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 253              		.loc 1 171 15 view .LVU96
 254 00b2 2AF8020B 		strh	r0, [r10], #2	@ movhi
 255              	.LVL30:
 174:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     e = d - (q15_t) acc;
 256              		.loc 1 174 5 is_stmt 1 view .LVU97
 175:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     *pErr++ = e;
 257              		.loc 1 175 5 view .LVU98
 175:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     *pErr++ = e;
 258              		.loc 1 175 11 is_stmt 0 view .LVU99
 259 00b6 38F8021B 		ldrh	r1, [r8], #2
 260              	.LVL31:
 261              		.loc 1 179 17 view .LVU100
 262 00ba 12B2     		sxth	r2, r2
 175:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     *pErr++ = e;
 263              		.loc 1 175 11 view .LVU101
 264 00bc 091A     		subs	r1, r1, r0
 176:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 265              		.loc 1 176 13 view .LVU102
 266 00be 1498     		ldr	r0, [sp, #80]
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 24


 267              	.LVL32:
 268              	.LBB31:
 269              	.LBB23:
 782:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 270              		.loc 2 782 8 view .LVU103
 271 00c0 002A     		cmp	r2, #0
 272              	.LBE23:
 273              	.LBE31:
 175:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     *pErr++ = e;
 274              		.loc 1 175 7 view .LVU104
 275 00c2 09B2     		sxth	r1, r1
 276              	.LVL33:
 176:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 277              		.loc 1 176 5 is_stmt 1 view .LVU105
 176:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 278              		.loc 1 176 13 is_stmt 0 view .LVU106
 279 00c4 20F8021B 		strh	r1, [r0], #2	@ movhi
 280              	.LVL34:
 176:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 281              		.loc 1 176 13 view .LVU107
 282 00c8 1490     		str	r0, [sp, #80]
 283              		.loc 1 179 5 is_stmt 1 view .LVU108
 284              	.LVL35:
 285              	.LBB32:
 286              	.LBI15:
 772:.//Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t in,
 287              		.loc 2 772 33 view .LVU109
 288              	.LBB24:
 777:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t tempVal = 0;
 289              		.loc 2 777 5 view .LVU110
 778:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t index = 0, i = 0;
 290              		.loc 2 778 5 view .LVU111
 779:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t signBits = 0;
 291              		.loc 2 779 5 view .LVU112
 780:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 292              		.loc 2 780 5 view .LVU113
 782:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 293              		.loc 2 782 5 view .LVU114
 782:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 294              		.loc 2 782 8 is_stmt 0 view .LVU115
 295 00ca 53DD     		ble	.L5
 784:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 296              		.loc 2 784 7 is_stmt 1 view .LVU116
 297              	.LVL36:
 298              	.LBB17:
 299              	.LBI17:
 300              		.file 3 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 25


  11:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 26


  68:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 27


 125:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 28


 182:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 29


 239:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 30


 296:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 31


 353:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 32


 410:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 33


 467:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 34


 524:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 35


 581:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 36


 638:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 37


 695:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 38


 752:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 39


 809:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 40


 866:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 41


 923:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 948:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 949:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 950:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 951:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 955:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 957:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 959:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 960:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 962:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 966:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 967:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 969:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 972:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 973:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 974:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 976:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 977:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 42


 980:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 981:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 985:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 990:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 992:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 994:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 996:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1000:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1006:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
1007:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1008:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1010:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1011:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1012:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1013:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1014:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1015:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1020:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1021:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1023:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1026:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
1027:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1030:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1032:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1033:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 43


1037:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1039:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1041:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1042:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1043:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1047:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1048:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1050:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1051:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1052:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1057:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1062:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
1063:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
1065:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1066:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1068:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1069:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1070:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1071:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1072:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1073:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1078:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 301              		.loc 3 1078 30 view .LVU117
 302              	.LBB18:
1079:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1080:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
1086:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    */
1089:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
 303              		.loc 3 1089 3 view .LVU118
1090:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 44


1091:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
1092:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1093:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 304              		.loc 3 1093 3 view .LVU119
 305              		.loc 3 1093 10 is_stmt 0 view .LVU120
 306 00cc B2FA82F4 		clz	r4, r2
 307              	.LVL37:
 308              		.loc 3 1093 10 view .LVU121
 309              	.LBE18:
 310              	.LBE17:
 784:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 311              		.loc 2 784 41 view .LVU122
 312 00d0 A4F11105 		sub	r5, r4, #17
 313              	.LVL38:
 784:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 314              		.loc 2 784 41 view .LVU123
 315 00d4 C4F11F04 		rsb	r4, r4, #31
 316              	.LVL39:
 317              	.L6:
 792:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 318              		.loc 2 792 5 is_stmt 1 view .LVU124
 792:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 319              		.loc 2 792 14 is_stmt 0 view .LVU125
 320 00d8 AA40     		lsls	r2, r2, r5
 321              	.LVL40:
 792:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 322              		.loc 2 792 14 view .LVU126
 323              	.LBE24:
 324              	.LBE32:
 180:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 181:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Calculation of e * mu value */
 182:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     errorXmu = (q15_t) (((q31_t) e * mu) >> 15);
 325              		.loc 1 182 36 view .LVU127
 326 00da 0498     		ldr	r0, [sp, #16]
 327              	.LVL41:
 328              	.LBB33:
 329              	.LBB25:
 799:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 330              		.loc 2 799 9 view .LVU128
 331 00dc 059D     		ldr	r5, [sp, #20]
 332              	.LBE25:
 333              	.LBE33:
 334              		.loc 1 182 36 view .LVU129
 335 00de 01FB00F1 		mul	r1, r1, r0
 336              	.LVL42:
 337              	.LBB34:
 338              	.LBB26:
 799:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 339              		.loc 2 799 22 view .LVU130
 340 00e2 C2F30520 		ubfx	r0, r2, #8, #6
 792:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 341              		.loc 2 792 8 view .LVU131
 342 00e6 12B2     		sxth	r2, r2
 343              	.LVL43:
 795:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     index = (index & INDEX_MASK);
 344              		.loc 2 795 5 is_stmt 1 view .LVU132
 796:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 45


 345              		.loc 2 796 5 view .LVU133
 799:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 346              		.loc 2 799 5 view .LVU134
 799:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 347              		.loc 2 799 9 is_stmt 0 view .LVU135
 348 00e8 35F91000 		ldrsh	r0, [r5, r0, lsl #1]
 349              	.LVL44:
 803:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 350              		.loc 2 803 5 is_stmt 1 view .LVU136
 803:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 351              		.loc 2 803 18 view .LVU137
 805:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 352              		.loc 2 805 7 view .LVU138
 353              	.LBE26:
 354              	.LBE34:
 355              		.loc 1 182 42 is_stmt 0 view .LVU139
 356 00ec C913     		asrs	r1, r1, #15
 357              	.LBB35:
 358              	.LBB27:
 805:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 359              		.loc 2 805 41 view .LVU140
 360 00ee 02FB00F5 		mul	r5, r2, r0
 361              	.LVL45:
 362              		.loc 2 806 7 is_stmt 1 view .LVU141
 807:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       /*      1.15 with exp 1 */
 808:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 363              		.loc 2 808 7 view .LVU142
 806:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       /*      1.15 with exp 1 */
 364              		.loc 2 806 15 is_stmt 0 view .LVU143
 365 00f2 ABEBE535 		sub	r5, fp, r5, asr #15
 366              	.LVL46:
 367              		.loc 2 808 35 view .LVU144
 368 00f6 00FB05F0 		mul	r0, r0, r5
 369              	.LVL47:
 370              		.loc 2 808 11 view .LVU145
 371 00fa 40F38F30 		sbfx	r0, r0, #14, #16
 372              	.LVL48:
 803:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 373              		.loc 2 803 26 is_stmt 1 view .LVU146
 803:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 374              		.loc 2 803 18 view .LVU147
 805:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 375              		.loc 2 805 7 view .LVU148
 805:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 376              		.loc 2 805 41 is_stmt 0 view .LVU149
 377 00fe 02FB00F2 		mul	r2, r2, r0
 378              	.LVL49:
 806:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       /*      1.15 with exp 1 */
 379              		.loc 2 806 7 is_stmt 1 view .LVU150
 380              		.loc 2 808 7 view .LVU151
 806:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       /*      1.15 with exp 1 */
 381              		.loc 2 806 15 is_stmt 0 view .LVU152
 382 0102 ABEBE232 		sub	r2, fp, r2, asr #15
 383              	.LVL50:
 384              		.loc 2 808 35 view .LVU153
 385 0106 00FB02F0 		mul	r0, r0, r2
 386              	.LVL51:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 46


 387              		.loc 2 808 46 view .LVU154
 388 010a 800B     		lsrs	r0, r0, #14
 389              	.LVL52:
 803:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 390              		.loc 2 803 26 is_stmt 1 view .LVU155
 803:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 391              		.loc 2 803 18 view .LVU156
 809:.//Libraries/CMSIS/DSP/Include/arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 810:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 811:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 812:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     /* write output */
 813:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     *dst = out;
 392              		.loc 2 813 5 view .LVU157
 814:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 815:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 816:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     return (signBits + 1);
 393              		.loc 2 816 5 view .LVU158
 394              		.loc 2 816 5 is_stmt 0 view .LVU159
 395              	.LBE27:
 396              	.LBE35:
 397              		.loc 1 182 5 is_stmt 1 view .LVU160
 183:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 184:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Calculation of (e * mu) * (1/energy) value */
 185:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     acc = (((q31_t) errorXmu * oneByEnergy) >> (15 - postShift));
 398              		.loc 1 185 5 view .LVU161
 186:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 187:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Weighting factor for the normalized version */
 188:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     w = (q15_t) __SSAT((q31_t) acc, 16);
 399              		.loc 1 188 5 view .LVU162
 400              	.LBB36:
 401              		.loc 1 188 17 view .LVU163
 402              		.loc 1 188 17 view .LVU164
 403              	.LBE36:
 185:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 404              		.loc 1 185 30 is_stmt 0 view .LVU165
 405 010c 11FB00F0 		smulbb	r0, r1, r0
 406              	.LVL53:
 185:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 407              		.loc 1 185 45 view .LVU166
 408 0110 2041     		asrs	r0, r0, r4
 409              	.LBB37:
 410              		.loc 1 188 17 view .LVU167
 411              		.syntax unified
 412              	@ 188 ".//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c" 1
 413 0112 00F30F00 		ssat r0, #16, r0
 414              	@ 0 "" 2
 415              	.LVL54:
 416              		.loc 1 188 17 is_stmt 1 view .LVU168
 417              		.thumb
 418              		.syntax unified
 419              	.LBE37:
 420              		.loc 1 188 7 is_stmt 0 view .LVU169
 421 0116 00B2     		sxth	r0, r0
 422              	.LVL55:
 189:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 190:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Initialize pState pointer */
 191:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     px = pState;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 47


 423              		.loc 1 191 5 is_stmt 1 view .LVU170
 192:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 193:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Initialize coefficient pointer */
 194:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     pb = pCoeffs;
 424              		.loc 1 194 5 view .LVU171
 195:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 196:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
 197:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 198:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Loop unrolling: Compute 4 taps at a time. */
 199:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     tapCnt = numTaps >> 2U;
 200:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 201:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Update filter coefficients */
 202:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     while (tapCnt > 0U)
 203:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     {
 204:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       coef = (q31_t) *pb + (((q31_t) w * (*px++)) >> 15);
 205:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       *pb++ = (q15_t) __SSAT(coef, 16);
 206:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 207:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       coef = (q31_t) *pb + (((q31_t) w * (*px++)) >> 15);
 208:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       *pb++ = (q15_t) __SSAT(coef, 16);
 209:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 210:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       coef = (q31_t) *pb + (((q31_t) w * (*px++)) >> 15);
 211:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       *pb++ = (q15_t) __SSAT(coef, 16);
 212:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 213:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       coef = (q31_t) *pb + (((q31_t) w * (*px++)) >> 15);
 214:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       *pb++ = (q15_t) __SSAT(coef, 16);
 215:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 216:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       /* Decrement loop counter */
 217:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       tapCnt--;
 218:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     }
 219:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 220:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Loop unrolling: Compute remaining taps */
 221:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     tapCnt = numTaps % 0x4U;
 222:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 223:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** #else
 224:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 225:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Initialize tapCnt with number of samples */
 226:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     tapCnt = numTaps;
 425              		.loc 1 226 5 view .LVU172
 227:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 228:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 229:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 230:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     while (tapCnt > 0U)
 426              		.loc 1 230 5 view .LVU173
 427              		.loc 1 230 11 view .LVU174
 428 0118 83B1     		cbz	r3, .L12
 429 011a 039A     		ldr	r2, [sp, #12]
 430 011c 1C46     		mov	r4, r3
 431 011e 7646     		mov	r6, lr
 432 0120 951E     		subs	r5, r2, #2
 433              	.LVL56:
 434              	.L11:
 231:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     {
 232:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       /* Perform the multiply-accumulate */
 233:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       coef = (q31_t) *pb + (((q31_t) w * (*px++)) >> 15);
 435              		.loc 1 233 7 view .LVU175
 234:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       *pb++ = (q15_t) __SSAT(coef, 16);
 436              		.loc 1 234 7 view .LVU176
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 48


 437              	.LBB38:
 438              		.loc 1 234 23 view .LVU177
 439              		.loc 1 234 23 view .LVU178
 440              	.LBE38:
 233:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       *pb++ = (q15_t) __SSAT(coef, 16);
 441              		.loc 1 233 40 is_stmt 0 view .LVU179
 442 0122 36F8021B 		ldrh	r1, [r6], #2
 443              	.LVL57:
 230:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     {
 444              		.loc 1 230 11 view .LVU180
 445 0126 013C     		subs	r4, r4, #1
 446              	.LVL58:
 233:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       *pb++ = (q15_t) __SSAT(coef, 16);
 447              		.loc 1 233 14 view .LVU181
 448 0128 35F9022F 		ldrsh	r2, [r5, #2]!
 449              	.LVL59:
 233:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       *pb++ = (q15_t) __SSAT(coef, 16);
 450              		.loc 1 233 40 view .LVU182
 451 012c 11FB00F1 		smulbb	r1, r1, r0
 233:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       *pb++ = (q15_t) __SSAT(coef, 16);
 452              		.loc 1 233 12 view .LVU183
 453 0130 02EBE132 		add	r2, r2, r1, asr #15
 454              	.LBB39:
 455              		.loc 1 234 23 view .LVU184
 456              		.syntax unified
 457              	@ 234 ".//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c" 1
 458 0134 02F30F02 		ssat r2, #16, r2
 459              	@ 0 "" 2
 460              	.LVL60:
 461              		.loc 1 234 23 is_stmt 1 view .LVU185
 462              		.loc 1 234 23 is_stmt 0 view .LVU186
 463              		.thumb
 464              		.syntax unified
 465              	.LBE39:
 466              		.loc 1 234 15 view .LVU187
 467 0138 2A80     		strh	r2, [r5]	@ movhi
 468              	.LVL61:
 235:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 236:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       /* Decrement loop counter */
 237:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****       tapCnt--;
 469              		.loc 1 237 7 is_stmt 1 view .LVU188
 230:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     {
 470              		.loc 1 230 11 view .LVU189
 471 013a F2D1     		bne	.L11
 472              	.LVL62:
 473              	.L12:
 238:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     }
 239:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 240:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     x0 = *pState;
 474              		.loc 1 240 5 view .LVU190
 102:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   {
 475              		.loc 1 102 9 is_stmt 0 view .LVU191
 476 013c 019A     		ldr	r2, [sp, #4]
 477              		.loc 1 240 8 view .LVU192
 478 013e 3EF9021B 		ldrsh	r1, [lr], #2
 479              	.LVL63:
 241:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 49


 242:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Advance state pointer by 1 for the next sample */
 243:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     pState = pState + 1;
 480              		.loc 1 243 5 is_stmt 1 view .LVU193
 244:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 245:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Decrement loop counter */
 246:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     blkCnt--;
 481              		.loc 1 246 5 view .LVU194
 102:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   {
 482              		.loc 1 102 9 view .LVU195
 483 0142 013A     		subs	r2, r2, #1
 484              	.LVL64:
 102:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   {
 485              		.loc 1 102 9 is_stmt 0 view .LVU196
 486 0144 0192     		str	r2, [sp, #4]
 487 0146 8BD1     		bne	.L9
 488 0148 089A     		ldr	r2, [sp, #32]
 489              	.LVL65:
 102:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   {
 490              		.loc 1 102 9 view .LVU197
 491 014a 1598     		ldr	r0, [sp, #84]
 492              	.LVL66:
 102:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   {
 493              		.loc 1 102 9 view .LVU198
 494 014c 02EB4000 		add	r0, r2, r0, lsl #1
 495 0150 0FFA8CF2 		sxth	r2, ip
 496              	.LVL67:
 497              	.L2:
 247:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   }
 248:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 249:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   /* Save energy and x0 values for the next frame */
 250:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   S->energy = (q15_t) energy;
 498              		.loc 1 250 3 is_stmt 1 view .LVU199
 499              		.loc 1 250 13 is_stmt 0 view .LVU200
 500 0154 099C     		ldr	r4, [sp, #36]
 251:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   S->x0 = x0;
 252:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 253:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   /* Processing is complete.
 254:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****      Now copy the last numTaps - 1 samples to the start of the state buffer.
 255:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****      This prepares the state buffer for the next function call. */
 256:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 257:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   /* Points to the start of the pState buffer */
 258:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   pStateCurnt = S->pState;
 259:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 260:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   /* copy data */
 261:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
 262:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 263:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   /* Loop unrolling: Compute 4 taps at a time. */
 264:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   tapCnt = (numTaps - 1U) >> 2U;
 265:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 266:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   while (tapCnt > 0U)
 267:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   {
 268:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     write_q15x2_ia (&pStateCurnt, read_q15x2_ia (&pState));
 269:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     write_q15x2_ia (&pStateCurnt, read_q15x2_ia (&pState));
 270:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 271:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Decrement loop counter */
 272:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     tapCnt--;
 273:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 50


 274:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 275:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   /* Loop unrolling: Compute remaining taps */
 276:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   tapCnt = (numTaps - 1U) % 0x4U;
 277:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 278:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** #else
 279:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 280:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   /* Initialize tapCnt with number of samples */
 281:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   tapCnt = (numTaps - 1U);
 282:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 283:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 284:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 285:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   while (tapCnt > 0U)
 501              		.loc 1 285 9 view .LVU201
 502 0156 013B     		subs	r3, r3, #1
 503              	.LVL68:
 250:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   S->x0 = x0;
 504              		.loc 1 250 13 view .LVU202
 505 0158 A282     		strh	r2, [r4, #20]	@ movhi
 251:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   S->x0 = x0;
 506              		.loc 1 251 3 is_stmt 1 view .LVU203
 251:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   S->x0 = x0;
 507              		.loc 1 251 9 is_stmt 0 view .LVU204
 508 015a E182     		strh	r1, [r4, #22]	@ movhi
 258:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 509              		.loc 1 258 3 is_stmt 1 view .LVU205
 510              	.LVL69:
 281:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 511              		.loc 1 281 3 view .LVU206
 512              		.loc 1 285 3 view .LVU207
 513              		.loc 1 285 9 view .LVU208
 514 015c 07D0     		beq	.L1
 515              		.loc 1 285 9 is_stmt 0 view .LVU209
 516 015e 089A     		ldr	r2, [sp, #32]
 517 0160 023A     		subs	r2, r2, #2
 518              	.LVL70:
 519              	.L14:
 286:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   {
 287:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     *pStateCurnt++ = *pState++;
 520              		.loc 1 287 5 is_stmt 1 view .LVU210
 521              		.loc 1 287 22 is_stmt 0 view .LVU211
 522 0162 30F9021B 		ldrsh	r1, [r0], #2
 523              	.LVL71:
 285:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   {
 524              		.loc 1 285 9 view .LVU212
 525 0166 013B     		subs	r3, r3, #1
 526              	.LVL72:
 527              		.loc 1 287 20 view .LVU213
 528 0168 22F8021F 		strh	r1, [r2, #2]!	@ movhi
 288:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 289:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     /* Decrement loop counter */
 290:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     tapCnt--;
 529              		.loc 1 290 5 is_stmt 1 view .LVU214
 530              	.LVL73:
 285:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   {
 531              		.loc 1 285 9 view .LVU215
 532 016c F9D1     		bne	.L14
 533              	.LVL74:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 51


 534              	.L1:
 291:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****   }
 292:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** 
 293:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c **** }
 535              		.loc 1 293 1 is_stmt 0 view .LVU216
 536 016e 0BB0     		add	sp, sp, #44
 537              	.LCFI2:
 538              		.cfi_remember_state
 539              		.cfi_def_cfa_offset 36
 540              		@ sp needed
 541 0170 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 542              	.LVL75:
 543              	.L5:
 544              	.LCFI3:
 545              		.cfi_restore_state
 546              	.LBB40:
 547              	.LBB28:
 788:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 548              		.loc 2 788 7 is_stmt 1 view .LVU217
 788:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 549              		.loc 2 788 36 is_stmt 0 view .LVU218
 550 0174 C2F10004 		rsb	r4, r2, #0
 551              	.LVL76:
 552              	.LBB19:
 553              	.LBI19:
1078:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 554              		.loc 3 1078 30 is_stmt 1 view .LVU219
 555              	.LBB20:
1089:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 556              		.loc 3 1089 3 view .LVU220
1089:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 557              		.loc 3 1089 6 is_stmt 0 view .LVU221
 558 0178 08D0     		beq	.L18
 559              		.loc 3 1093 3 is_stmt 1 view .LVU222
 560              		.loc 3 1093 10 is_stmt 0 view .LVU223
 561 017a B4FA84F4 		clz	r4, r4
 562              	.LVL77:
 563              		.loc 3 1093 10 view .LVU224
 564 017e A4F11105 		sub	r5, r4, #17
 565 0182 C4F11F04 		rsb	r4, r4, #31
 566 0186 A7E7     		b	.L6
 567              	.LVL78:
 568              	.L17:
 569              		.loc 3 1093 10 view .LVU225
 570              	.LBE20:
 571              	.LBE19:
 572              	.LBE28:
 573              	.LBE40:
 149:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     {
 574              		.loc 1 149 11 view .LVU226
 575 0188 1846     		mov	r0, r3
 576              	.LVL79:
 149:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     {
 577              		.loc 1 149 11 view .LVU227
 578 018a 8EE7     		b	.L3
 579              	.LVL80:
 580              	.L18:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 52


 581              	.LBB41:
 582              	.LBB29:
 583              	.LBB22:
 584              	.LBB21:
 149:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     {
 585              		.loc 1 149 11 view .LVU228
 586 018c 4FF0FF34 		mov	r4, #-1
 587              	.LVL81:
 149:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     {
 588              		.loc 1 149 11 view .LVU229
 589 0190 0F25     		movs	r5, #15
 590              	.LVL82:
 149:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     {
 591              		.loc 1 149 11 view .LVU230
 592 0192 A1E7     		b	.L6
 593              	.LVL83:
 594              	.L16:
 149:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     {
 595              		.loc 1 149 11 view .LVU231
 596 0194 6246     		mov	r2, ip
 597              	.LVL84:
 149:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****     {
 598              		.loc 1 149 11 view .LVU232
 599              	.LBE21:
 600              	.LBE22:
 601              	.LBE29:
 602              	.LBE41:
  73:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
 603              		.loc 1 73 16 view .LVU233
 604 0196 0898     		ldr	r0, [sp, #32]
 605              	.LVL85:
  73:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q15.c ****         q15_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
 606              		.loc 1 73 16 view .LVU234
 607 0198 DCE7     		b	.L2
 608              		.cfi_endproc
 609              	.LFE145:
 611 019a 00BF     		.text
 612              	.Letext0:
 613              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/
 614              		.file 5 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_std
 615              		.file 6 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock
 616              		.file 7 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_typ
 617              		.file 8 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/in
 618              		.file 9 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reen
 619              		.file 10 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s 			page 53


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_lms_norm_q15.c
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s:17     .text.arm_lms_norm_q15:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccdnz0EC.s:26     .text.arm_lms_norm_q15:0000000000000000 arm_lms_norm_q15

NO UNDEFINED SYMBOLS
