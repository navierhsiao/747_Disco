ARM GAS  /tmp/ccdkFTJj.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_dot_prod_q15.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_dot_prod_q15,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	arm_dot_prod_q15
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_dot_prod_q15:
  27              	.LVL0:
  28              	.LFB145:
  29              		.file 1 "./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c"
   1:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * Title:        arm_dot_prod_q15.c
   4:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * Description:  Q15 dot product
   5:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  *
   6:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  *
   9:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** /*
  12:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  *
  14:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  *
  16:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  *
  20:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  *
  22:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  */
  28:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  29:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** #include "arm_math.h"
ARM GAS  /tmp/ccdkFTJj.s 			page 2


  30:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  31:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** /**
  32:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @ingroup groupMath
  33:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  */
  34:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  35:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** /**
  36:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @addtogroup BasicDotProd
  37:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  */
  39:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  40:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** /**
  41:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @brief         Dot product of Q15 vectors.
  42:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @param[in]     pSrcA      points to the first input vector
  43:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @param[in]     pSrcB      points to the second input vector
  44:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @param[in]     blockSize  number of samples in each vector
  45:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @param[out]    result     output result returned here
  46:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @return        none
  47:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  48:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @par           Scaling and Overflow Behavior
  49:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****                    The intermediate multiplications are in 1.15 x 1.15 = 2.30 format and these
  50:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****                    results are added to a 64-bit accumulator in 34.30 format.
  51:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****                    Nonsaturating additions are used and given that there are 33 guard bits in the a
  52:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****                    there is no risk of overflow.
  53:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****                    The return result is in 34.30 format.
  54:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  */
  55:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  56:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** void arm_dot_prod_q15(
  57:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   const q15_t * pSrcA,
  58:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   const q15_t * pSrcB,
  59:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****         uint32_t blockSize,
  60:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****         q63_t * result)
  61:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** {
  30              		.loc 1 61 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  62:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****         uint32_t blkCnt;                               /* Loop counter */
  35              		.loc 1 62 9 view .LVU1
  63:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****         q63_t sum = 0;                                 /* Temporary return variable */
  36              		.loc 1 63 9 view .LVU2
  64:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  65:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
  66:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  67:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   /* Loop unrolling: Compute 4 outputs at a time */
  68:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   blkCnt = blockSize >> 2U;
  69:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  70:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   while (blkCnt > 0U)
  71:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   {
  72:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
  73:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  74:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** #if defined (ARM_MATH_DSP)
  75:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     /* Calculate dot product and store result in a temporary buffer. */
  76:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     sum = __SMLALD(read_q15x2_ia ((q15_t **) &pSrcA), read_q15x2_ia ((q15_t **) &pSrcB), sum);
  77:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     sum = __SMLALD(read_q15x2_ia ((q15_t **) &pSrcA), read_q15x2_ia ((q15_t **) &pSrcB), sum);
  78:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** #else
  79:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     sum += (q63_t)((q31_t) *pSrcA++ * *pSrcB++);
ARM GAS  /tmp/ccdkFTJj.s 			page 3


  80:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     sum += (q63_t)((q31_t) *pSrcA++ * *pSrcB++);
  81:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     sum += (q63_t)((q31_t) *pSrcA++ * *pSrcB++);
  82:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     sum += (q63_t)((q31_t) *pSrcA++ * *pSrcB++);
  83:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** #endif
  84:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  85:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     /* Decrement loop counter */
  86:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     blkCnt--;
  87:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   }
  88:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  89:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   /* Loop unrolling: Compute remaining outputs */
  90:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   blkCnt = blockSize % 0x4U;
  91:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  92:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** #else
  93:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  94:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   /* Initialize blkCnt with number of samples */
  95:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   blkCnt = blockSize;
  37              		.loc 1 95 3 view .LVU3
  96:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  97:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
  98:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  99:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   while (blkCnt > 0U)
  38              		.loc 1 99 3 view .LVU4
  39              		.loc 1 99 9 view .LVU5
  61:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****         uint32_t blkCnt;                               /* Loop counter */
  40              		.loc 1 61 1 is_stmt 0 view .LVU6
  41 0000 F0B4     		push	{r4, r5, r6, r7}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 16
  44              		.cfi_offset 4, -16
  45              		.cfi_offset 5, -12
  46              		.cfi_offset 6, -8
  47              		.cfi_offset 7, -4
  63:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  48              		.loc 1 63 15 view .LVU7
  49 0002 0024     		movs	r4, #0
  50 0004 0025     		movs	r5, #0
  51              		.loc 1 99 9 view .LVU8
  52 0006 3AB1     		cbz	r2, .L2
  53              	.LVL1:
  54              	.L3:
 100:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   {
 101:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
 102:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
 103:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     /* Calculate dot product and store result in a temporary buffer. */
 104:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** //#if defined (ARM_MATH_DSP)
 105:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** //    sum  = __SMLALD(*pSrcA++, *pSrcB++, sum);
 106:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** //#else
 107:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     sum += (q63_t)((q31_t) *pSrcA++ * *pSrcB++);
  55              		.loc 1 107 5 is_stmt 1 view .LVU9
  56              		.loc 1 107 9 is_stmt 0 view .LVU10
  57 0008 30F8027B 		ldrh	r7, [r0], #2
  58              	.LVL2:
  99:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   {
  59              		.loc 1 99 9 view .LVU11
  60 000c 013A     		subs	r2, r2, #1
  61              	.LVL3:
  62              		.loc 1 107 9 view .LVU12
ARM GAS  /tmp/ccdkFTJj.s 			page 4


  63 000e 31F8026B 		ldrh	r6, [r1], #2
  64              	.LVL4:
  65              		.loc 1 107 9 view .LVU13
  66 0012 C7FB8645 		smlalbb	r4, r5, r7, r6
  67              	.LVL5:
 108:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** //#endif
 109:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
 110:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     /* Decrement loop counter */
 111:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     blkCnt--;
  68              		.loc 1 111 5 is_stmt 1 view .LVU14
  99:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   {
  69              		.loc 1 99 9 view .LVU15
  70 0016 F7D1     		bne	.L3
  71              	.LVL6:
  72              	.L2:
 112:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   }
 113:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
 114:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   /* Store result in destination buffer in 34.30 format */
 115:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   *result = sum;
  73              		.loc 1 115 3 view .LVU16
  74              		.loc 1 115 11 is_stmt 0 view .LVU17
  75 0018 C3E90045 		strd	r4, [r3]
 116:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** }
  76              		.loc 1 116 1 view .LVU18
  77 001c F0BC     		pop	{r4, r5, r6, r7}
  78              	.LCFI1:
  79              		.cfi_restore 7
  80              		.cfi_restore 6
  81              		.cfi_restore 5
  82              		.cfi_restore 4
  83              		.cfi_def_cfa_offset 0
  84 001e 7047     		bx	lr
  85              		.cfi_endproc
  86              	.LFE145:
  88              		.text
  89              	.Letext0:
  90              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
  91              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
  92              		.file 4 "/usr/include/newlib/sys/_types.h"
  93              		.file 5 "/usr/include/newlib/sys/reent.h"
  94              		.file 6 "/usr/include/newlib/sys/lock.h"
  95              		.file 7 "/usr/include/newlib/math.h"
  96              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/ccdkFTJj.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_dot_prod_q15.c
     /tmp/ccdkFTJj.s:17     .text.arm_dot_prod_q15:0000000000000000 $t
     /tmp/ccdkFTJj.s:26     .text.arm_dot_prod_q15:0000000000000000 arm_dot_prod_q15

NO UNDEFINED SYMBOLS
