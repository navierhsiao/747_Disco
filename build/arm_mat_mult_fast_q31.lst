ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_mat_mult_fast_q31.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_mat_mult_fast_q31,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	arm_mat_mult_fast_q31
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_mat_mult_fast_q31:
  27              	.LVL0:
  28              	.LFB145:
  29              		.file 1 ".//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c"
   1:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** /* ----------------------------------------------------------------------
   2:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * Project:      CMSIS DSP Library
   3:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * Title:        arm_mat_mult_fast_q31.c
   4:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * Description:  Q31 matrix multiplication (fast variant)
   5:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  *
   6:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * $Date:        18. March 2019
   7:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * $Revision:    V1.6.0
   8:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  *
   9:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * Target Processor: Cortex-M cores
  10:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * -------------------------------------------------------------------- */
  11:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** /*
  12:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  *
  14:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  *
  16:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * not use this file except in compliance with the License.
  18:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * You may obtain a copy of the License at
  19:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  *
  20:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  *
  22:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * See the License for the specific language governing permissions and
  26:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  * limitations under the License.
  27:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  */
  28:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
  29:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #include "arm_math.h"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 2


  30:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
  31:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** /**
  32:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   @ingroup groupMatrix
  33:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  */
  34:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
  35:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** /**
  36:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   @addtogroup MatrixMult
  37:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   @{
  38:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  */
  39:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
  40:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** /**
  41:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   @brief         Q31 matrix multiplication (fast variant).
  42:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   @param[in]     pSrcA      points to the first input matrix structure
  43:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   @param[in]     pSrcB      points to the second input matrix structure
  44:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   @param[out]    pDst       points to output matrix structure
  45:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   @return        execution status
  46:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****                    - \ref ARM_MATH_SUCCESS       : Operation successful
  47:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****                    - \ref ARM_MATH_SIZE_MISMATCH : Matrix size check failed
  48:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
  49:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   @par           Scaling and Overflow Behavior
  50:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****                    The difference between the function \ref arm_mat_mult_q31() and this fast varian
  51:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****                    the fast variant use a 32-bit rather than a 64-bit accumulator.
  52:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****                    The result of each 1.31 x 1.31 multiplication is truncated to
  53:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****                    2.30 format. These intermediate results are accumulated in a 32-bit register in 
  54:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****                    format. Finally, the accumulator is saturated and converted to a 1.31 result.
  55:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   @par
  56:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****                    The fast version has the same overflow behavior as the standard version but prov
  57:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****                    less precision since it discards the low 32 bits of each multiplication result.
  58:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****                    In order to avoid overflows completely the input signals must be scaled down.
  59:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****                    Scale down one of the input matrices by log2(numColsA) bits to avoid overflows,
  60:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****                    as a total of numColsA additions are computed internally for each output element
  61:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   @remark
  62:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****                    Refer to \ref arm_mat_mult_q31() for a slower implementation of this function
  63:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****                    which uses 64-bit accumulation to provide higher precision.
  64:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****  */
  65:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
  66:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** arm_status arm_mat_mult_fast_q31(
  67:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   const arm_matrix_instance_q31 * pSrcA,
  68:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   const arm_matrix_instance_q31 * pSrcB,
  69:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         arm_matrix_instance_q31 * pDst)
  70:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** {
  30              		.loc 1 70 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 80
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  71:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t *pInA = pSrcA->pData;                    /* Input data matrix pointer A */
  34              		.loc 1 71 3 view .LVU1
  72:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t *pInB = pSrcB->pData;                    /* Input data matrix pointer B */
  73:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t *pInA2;
  74:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t *px;                                     /* Temporary output data matrix pointer */
  75:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t *px2;
  76:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t sum1, sum2, sum3, sum4;                  /* Accumulator */
  77:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t inA1, inA2, inB1, inB2;
  78:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   uint16_t numRowsA = pSrcA->numRows;            /* Number of rows of input matrix A */
  79:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   uint16_t numColsB = pSrcB->numCols;            /* Number of columns of input matrix B */
  80:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   uint16_t numColsA = pSrcA->numCols;            /* Number of columns of input matrix A */
  81:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   uint32_t col, i = 0U, j, row = numRowsA, colCnt;  /* Loop counters */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 3


  82:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   arm_status status;                             /* Status of matrix multiplication */
  83:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
  84:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
  85:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #ifdef ARM_MATH_MATRIX_CHECK
  86:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
  87:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   /* Check for matrix mismatch condition */
  88:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   if ((pSrcA->numCols != pSrcB->numRows) ||
  89:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       (pSrcA->numRows != pDst->numRows)  ||
  90:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       (pSrcB->numCols != pDst->numCols)    )
  91:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   {
  92:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
  93:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     status = ARM_MATH_SIZE_MISMATCH;
  94:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   }
  95:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   else
  96:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
  97:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #endif /* #ifdef ARM_MATH_MATRIX_CHECK */
  98:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
  99:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   {
 100:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     px = pDst->pData;
  35              		.loc 1 100 8 is_stmt 0 view .LVU2
  36 0000 5368     		ldr	r3, [r2, #4]
  79:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   uint16_t numColsA = pSrcA->numCols;            /* Number of columns of input matrix A */
  37              		.loc 1 79 12 view .LVU3
  38 0002 4A88     		ldrh	r2, [r1, #2]
  39              	.LVL1:
  70:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t *pInA = pSrcA->pData;                    /* Input data matrix pointer A */
  40              		.loc 1 70 1 view .LVU4
  41 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 36
  44              		.cfi_offset 4, -36
  45              		.cfi_offset 5, -32
  46              		.cfi_offset 6, -28
  47              		.cfi_offset 7, -24
  48              		.cfi_offset 8, -20
  49              		.cfi_offset 9, -16
  50              		.cfi_offset 10, -12
  51              		.cfi_offset 11, -8
  52              		.cfi_offset 14, -4
  53              		.loc 1 100 8 view .LVU5
  54 0008 1C46     		mov	r4, r3
  70:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t *pInA = pSrcA->pData;                    /* Input data matrix pointer A */
  55              		.loc 1 70 1 view .LVU6
  56 000a 95B0     		sub	sp, sp, #84
  57              	.LCFI1:
  58              		.cfi_def_cfa_offset 120
  78:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   uint16_t numColsB = pSrcB->numCols;            /* Number of columns of input matrix B */
  59              		.loc 1 78 12 view .LVU7
  60 000c 0588     		ldrh	r5, [r0]
 101:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 102:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     row = row >> 1U;
 103:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     px2 = px + numColsB;
  61              		.loc 1 103 14 view .LVU8
  62 000e 4FEA820B 		lsl	fp, r2, #2
 100:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
  63              		.loc 1 100 8 view .LVU9
  64 0012 1193     		str	r3, [sp, #68]
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 4


  72:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t *pInA2;
  65              		.loc 1 72 10 view .LVU10
  66 0014 4B68     		ldr	r3, [r1, #4]
  67              		.loc 1 103 9 view .LVU11
  68 0016 04EB8201 		add	r1, r4, r2, lsl #2
  69              	.LVL2:
  79:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   uint16_t numColsA = pSrcA->numCols;            /* Number of columns of input matrix A */
  70              		.loc 1 79 12 view .LVU12
  71 001a 1292     		str	r2, [sp, #72]
  72:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t *pInA2;
  72              		.loc 1 72 10 view .LVU13
  73 001c 0893     		str	r3, [sp, #32]
  74              		.loc 1 103 9 view .LVU14
  75 001e 2346     		mov	r3, r4
  76 0020 0691     		str	r1, [sp, #24]
  71:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t *pInB = pSrcB->pData;                    /* Input data matrix pointer B */
  77              		.loc 1 71 10 view .LVU15
  78 0022 4468     		ldr	r4, [r0, #4]
  80:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   uint32_t col, i = 0U, j, row = numRowsA, colCnt;  /* Loop counters */
  79              		.loc 1 80 12 view .LVU16
  80 0024 4188     		ldrh	r1, [r0, #2]
 104:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 105:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     /* The following loop performs the dot-product of each row in pSrcA with each column in pSrcB *
 106:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     /* row loop */
 107:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     while (row > 0U)
  81              		.loc 1 107 11 view .LVU17
  82 0026 6808     		lsrs	r0, r5, #1
  83              	.LVL3:
  78:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   uint16_t numColsB = pSrcB->numCols;            /* Number of columns of input matrix B */
  84              		.loc 1 78 12 view .LVU18
  85 0028 0F95     		str	r5, [sp, #60]
  71:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t *pInB = pSrcB->pData;                    /* Input data matrix pointer B */
  86              		.loc 1 71 10 view .LVU19
  87 002a 1094     		str	r4, [sp, #64]
  88              	.LVL4:
  72:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t *pInA2;
  89              		.loc 1 72 3 is_stmt 1 view .LVU20
  73:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t *px;                                     /* Temporary output data matrix pointer */
  90              		.loc 1 73 3 view .LVU21
  74:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t *px2;
  91              		.loc 1 74 3 view .LVU22
  75:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t sum1, sum2, sum3, sum4;                  /* Accumulator */
  92              		.loc 1 75 3 view .LVU23
  76:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   q31_t inA1, inA2, inB1, inB2;
  93              		.loc 1 76 3 view .LVU24
  77:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   uint16_t numRowsA = pSrcA->numRows;            /* Number of rows of input matrix A */
  94              		.loc 1 77 3 view .LVU25
  78:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   uint16_t numColsB = pSrcB->numCols;            /* Number of columns of input matrix B */
  95              		.loc 1 78 3 view .LVU26
  79:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   uint16_t numColsA = pSrcA->numCols;            /* Number of columns of input matrix A */
  96              		.loc 1 79 3 view .LVU27
  80:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   uint32_t col, i = 0U, j, row = numRowsA, colCnt;  /* Loop counters */
  97              		.loc 1 80 3 view .LVU28
  80:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   uint32_t col, i = 0U, j, row = numRowsA, colCnt;  /* Loop counters */
  98              		.loc 1 80 12 is_stmt 0 view .LVU29
  99 002c 0391     		str	r1, [sp, #12]
 100              	.LVL5:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 5


  81:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   arm_status status;                             /* Status of matrix multiplication */
 101              		.loc 1 81 3 is_stmt 1 view .LVU30
  82:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 102              		.loc 1 82 3 view .LVU31
 100:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 103              		.loc 1 100 5 view .LVU32
 102:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     px2 = px + numColsB;
 104              		.loc 1 102 5 view .LVU33
 103:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 105              		.loc 1 103 5 view .LVU34
 106              		.loc 1 107 5 view .LVU35
 107              		.loc 1 107 11 view .LVU36
 108 002e 0790     		str	r0, [sp, #28]
 109 0030 6BD0     		beq	.L2
 108:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     {
 109:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       /* For every row wise process, column loop counter is to be initiated */
 110:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       col = numColsB;
 111:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 112:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       /* For every row wise process, pIn2 pointer is set to starting address of pSrcB data */
 113:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       pInB = pSrcB->pData;
 114:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 115:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       j = 0U;
 116:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 117:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       col = col >> 1U;
 110              		.loc 1 117 11 is_stmt 0 view .LVU37
 111 0032 5008     		lsrs	r0, r2, #1
 112              	.LVL6:
 113              		.loc 1 117 11 view .LVU38
 114 0034 02F00105 		and	r5, r2, #1
 115              	.LVL7:
 118:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 119:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       /* column loop */
 120:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       while (col > 0U)
 121:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       {
 122:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* Set the variable sum, that acts as accumulator, to zero */
 123:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         sum1 = 0;
 124:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         sum2 = 0;
 125:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         sum3 = 0;
 126:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         sum4 = 0;
 127:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         
 128:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* Initiate data pointers */
 129:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         pInA = pSrcA->pData + i;
 130:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         pInB = pSrcB->pData + j;
 131:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         pInA2 = pInA + numColsA;
 116              		.loc 1 131 22 view .LVU39
 117 0038 0A46     		mov	r2, r1
 118              	.LVL8:
 119              		.loc 1 131 22 view .LVU40
 120 003a 8900     		lsls	r1, r1, #2
 117:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 121              		.loc 1 117 11 view .LVU41
 122 003c 0B90     		str	r0, [sp, #44]
 123              		.loc 1 131 22 view .LVU42
 124 003e 0C91     		str	r1, [sp, #48]
 125 0040 C100     		lsls	r1, r0, #3
 126 0042 D200     		lsls	r2, r2, #3
 127 0044 1395     		str	r5, [sp, #76]
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 6


 132:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         
 133:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         colCnt = numColsA;
 134:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 135:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* matrix multiplication */
 136:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         while (colCnt > 0U)
 137:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         {
 138:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           /* c(m,n) = a(1,1) * b(1,1) + a(1,2) * b(2,1) + .... + a(m,p) * b(p,n) */
 139:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 140:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inA1 = *pInA++;
 141:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inB1 = pInB[0];
 142:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inA2 = *pInA2++;
 143:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inB2 = pInB[1];
 144:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           pInB += numColsB;
 145:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 146:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 147:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = __SMMLA(inA1, inB1, sum1);
 148:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum2 = __SMMLA(inA1, inB2, sum2);
 149:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum3 = __SMMLA(inA2, inB1, sum3);
 150:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum4 = __SMMLA(inA2, inB2, sum4);
 151:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #else
 152:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = (q31_t) ((((q63_t) sum1 << 32) + ((q63_t) inA1 * inB1)) >> 32);
 153:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum2 = (q31_t) ((((q63_t) sum2 << 32) + ((q63_t) inA1 * inB2)) >> 32);
 154:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum3 = (q31_t) ((((q63_t) sum3 << 32) + ((q63_t) inA2 * inB1)) >> 32);
 155:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum4 = (q31_t) ((((q63_t) sum4 << 32) + ((q63_t) inA2 * inB2)) >> 32);
 156:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #endif
 157:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 158:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           /* Decrement loop counter */
 159:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           colCnt--;
 160:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         }
 161:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 162:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* Convert the result from 2.30 to 1.31 format and store in destination buffer */
 163:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         *px++  = sum1 << 1;
 164:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         *px++  = sum2 << 1;
 165:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         *px2++ = sum3 << 1;
 166:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         *px2++ = sum4 << 1;
 167:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 168:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         j += 2;
 169:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 170:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* Decrement column loop counter */
 171:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         col--;
 172:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       }
 173:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 174:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       i = i + (numColsA << 1U);
 175:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       px  = px2 + (numColsB & 1U);
 128              		.loc 1 175 17 view .LVU43
 129 0046 A800     		lsls	r0, r5, #2
 130 0048 0D91     		str	r1, [sp, #52]
 131 004a 0831     		adds	r1, r1, #8
 132 004c 0294     		str	r4, [sp, #8]
 133 004e 0990     		str	r0, [sp, #36]
 134 0050 0E91     		str	r1, [sp, #56]
 135 0052 0A92     		str	r2, [sp, #40]
 136              	.LVL9:
 137              	.L7:
 110:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 138              		.loc 1 110 7 is_stmt 1 view .LVU44
 113:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 7


 139              		.loc 1 113 7 view .LVU45
 115:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 140              		.loc 1 115 7 view .LVU46
 117:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 141              		.loc 1 117 7 view .LVU47
 120:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       {
 142              		.loc 1 120 7 view .LVU48
 120:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       {
 143              		.loc 1 120 13 view .LVU49
 144 0054 0B9A     		ldr	r2, [sp, #44]
 145 0056 002A     		cmp	r2, #0
 146 0058 46D0     		beq	.L3
 147 005a 0833     		adds	r3, r3, #8
 148              	.LVL10:
 120:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       {
 149              		.loc 1 120 13 is_stmt 0 view .LVU50
 150 005c 029A     		ldr	r2, [sp, #8]
 151 005e 0193     		str	r3, [sp, #4]
 152 0060 0C9B     		ldr	r3, [sp, #48]
 153              	.LVL11:
 120:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       {
 154              		.loc 1 120 13 view .LVU51
 155 0062 1344     		add	r3, r3, r2
 156 0064 089A     		ldr	r2, [sp, #32]
 157 0066 0593     		str	r3, [sp, #20]
 158 0068 0092     		str	r2, [sp]
 159 006a 069B     		ldr	r3, [sp, #24]
 160 006c 0E9A     		ldr	r2, [sp, #56]
 161 006e 03F1080A 		add	r10, r3, #8
 162 0072 1344     		add	r3, r3, r2
 163 0074 0493     		str	r3, [sp, #16]
 164              	.LVL12:
 165              	.L6:
 123:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         sum2 = 0;
 166              		.loc 1 123 9 is_stmt 1 view .LVU52
 124:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         sum3 = 0;
 167              		.loc 1 124 9 view .LVU53
 125:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         sum4 = 0;
 168              		.loc 1 125 9 view .LVU54
 126:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         
 169              		.loc 1 126 9 view .LVU55
 129:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         pInB = pSrcB->pData + j;
 170              		.loc 1 129 9 view .LVU56
 130:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         pInA2 = pInA + numColsA;
 171              		.loc 1 130 9 view .LVU57
 136:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         {
 172              		.loc 1 136 15 is_stmt 0 view .LVU58
 173 0076 039A     		ldr	r2, [sp, #12]
 130:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         pInA2 = pInA + numColsA;
 174              		.loc 1 130 14 view .LVU59
 175 0078 009B     		ldr	r3, [sp]
 176              	.LVL13:
 131:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         
 177              		.loc 1 131 9 is_stmt 1 view .LVU60
 133:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 178              		.loc 1 133 9 view .LVU61
 136:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 8


 179              		.loc 1 136 9 view .LVU62
 136:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         {
 180              		.loc 1 136 15 view .LVU63
 181 007a 002A     		cmp	r2, #0
 182 007c 74D0     		beq	.L18
 126:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         
 183              		.loc 1 126 14 is_stmt 0 view .LVU64
 184 007e 0026     		movs	r6, #0
 131:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         
 185              		.loc 1 131 15 view .LVU65
 186 0080 DDF81490 		ldr	r9, [sp, #20]
 129:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         pInB = pSrcB->pData + j;
 187              		.loc 1 129 14 view .LVU66
 188 0084 DDF80880 		ldr	r8, [sp, #8]
 125:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         sum4 = 0;
 189              		.loc 1 125 14 view .LVU67
 190 0088 3746     		mov	r7, r6
 124:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         sum3 = 0;
 191              		.loc 1 124 14 view .LVU68
 192 008a B446     		mov	ip, r6
 123:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         sum2 = 0;
 193              		.loc 1 123 14 view .LVU69
 194 008c B646     		mov	lr, r6
 195              	.LVL14:
 196              	.L5:
 140:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inB1 = pInB[0];
 197              		.loc 1 140 11 is_stmt 1 view .LVU70
 140:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inB1 = pInB[0];
 198              		.loc 1 140 16 is_stmt 0 view .LVU71
 199 008e 58F8045B 		ldr	r5, [r8], #4
 200              	.LVL15:
 141:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inA2 = *pInA2++;
 201              		.loc 1 141 11 is_stmt 1 view .LVU72
 142:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inB2 = pInB[1];
 202              		.loc 1 142 16 is_stmt 0 view .LVU73
 203 0092 59F8041B 		ldr	r1, [r9], #4
 204              	.LVL16:
 143:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           pInB += numColsB;
 205              		.loc 1 143 16 view .LVU74
 206 0096 D3E90040 		ldrd	r4, r0, [r3]
 207              	.LVL17:
 142:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inB2 = pInB[1];
 208              		.loc 1 142 11 is_stmt 1 view .LVU75
 143:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           pInB += numColsB;
 209              		.loc 1 143 11 view .LVU76
 144:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 210              		.loc 1 144 11 view .LVU77
 144:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 211              		.loc 1 144 16 is_stmt 0 view .LVU78
 212 009a 5B44     		add	r3, r3, fp
 213              	.LVL18:
 147:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum2 = __SMMLA(inA1, inB2, sum2);
 214              		.loc 1 147 11 is_stmt 1 view .LVU79
 215              	.LBB14:
 216              	.LBI14:
 217              		.file 2 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 9


   2:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 10


  59:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 11


 116:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 12


 173:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 13


 230:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 14


 287:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 15


 344:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 16


 401:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 17


 458:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 18


 515:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 19


 572:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 20


 629:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 21


 686:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 22


 743:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 23


 800:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 24


 857:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 25


 914:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 948:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 949:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 950:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 951:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 955:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 957:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 959:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 960:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 962:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 966:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 967:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 969:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 26


 971:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 972:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 973:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 974:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 976:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 977:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 980:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 981:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 985:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 990:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 992:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 994:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 996:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1000:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1006:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
1007:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1008:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1010:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1011:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1012:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1013:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1014:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1015:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1020:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1021:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1023:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1026:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
1027:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 27


1028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1030:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1032:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1033:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1039:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1041:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1042:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1043:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1047:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1048:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1050:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1051:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1052:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1057:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1062:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
1063:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
1065:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1066:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1068:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1069:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1070:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1071:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1072:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1073:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1078:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1080:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 28


1085:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
1086:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    */
1089:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
1090:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1091:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
1092:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1093:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1095:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1096:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1097:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1102:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1107:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1109:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1110:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1111:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1114:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1117:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1119:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1121:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1122:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1123:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1124:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1129:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1131:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1132:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1133:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1136:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1139:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1141:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 29


1142:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1143:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1144:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1145:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1146:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1151:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1152:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1153:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1155:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
1156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1157:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1159:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1160:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1161:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1168:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1170:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1171:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1172:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1174:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1175:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1176:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1177:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1178:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1185:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1187:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1188:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1189:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1191:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1192:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1193:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1194:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1195:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 30


1199:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1202:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1203:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1204:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1205:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1206:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
1207:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1208:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1209:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1210:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1211:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1212:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
1213:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1214:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1215:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
1216:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1217:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1218:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1219:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1220:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1221:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1222:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1223:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1224:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1225:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1226:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1227:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1228:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1229:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1230:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1231:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1232:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1233:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
1234:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1235:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1236:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1237:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __extension__ \
1238:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1239:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1240:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1241:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1242:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1243:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1244:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1245:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1246:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1247:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1248:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1249:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
1250:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1251:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1252:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1253:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  __extension__ \
1254:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1255:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 31


1256:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1257:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1258:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1259:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1260:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1261:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1262:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1263:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1264:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1265:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
1266:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1267:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1268:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
1269:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1270:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1271:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1272:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1273:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1274:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1275:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1276:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1277:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1278:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1279:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1280:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1281:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1282:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1283:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1284:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1285:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1286:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1287:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1288:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1289:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1290:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1291:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1292:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1293:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1294:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1295:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1296:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1297:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1298:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1299:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1300:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1301:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1302:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1303:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1304:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1305:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1306:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1307:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1308:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1309:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1310:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1311:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1312:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 32


1313:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1314:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1315:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1316:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1317:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1318:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1319:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1320:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1321:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1322:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1323:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1324:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1325:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1326:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1327:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
1328:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1329:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1330:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1331:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1332:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1333:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1334:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1335:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1336:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1337:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1338:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1339:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1340:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1341:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1342:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1343:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1344:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1345:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1346:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1347:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1348:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1349:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1350:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1351:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1352:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1353:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1354:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1355:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1356:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1357:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1358:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1359:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1360:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1361:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1362:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1363:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1364:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1365:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1366:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1367:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1368:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1369:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 33


1370:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1371:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1372:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1373:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1374:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1375:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1376:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1377:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1378:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1379:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1380:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1381:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1382:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
1383:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1384:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
1385:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1386:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
1387:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
1388:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > max)
1389:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1390:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1391:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1392:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < min)
1393:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1394:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return min;
1395:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1396:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1397:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return val;
1398:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1399:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1400:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1401:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1402:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1403:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1404:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1405:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1406:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1407:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
1408:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1409:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (sat <= 31U)
1410:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1411:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
1412:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
1413:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1414:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1415:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1416:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < 0)
1417:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1418:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return 0U;
1419:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1420:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1421:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (uint32_t)val;
1422:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1423:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1424:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1425:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1426:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 34


1427:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1428:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1429:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1430:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1431:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1432:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1433:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1434:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1435:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1436:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1437:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
1438:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1439:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1440:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1441:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1442:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1443:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1444:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1445:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1446:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1447:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1448:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1449:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1450:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1451:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1452:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
1453:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1454:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1455:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1456:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1457:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1458:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1459:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1460:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1461:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1462:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1463:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1464:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1465:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1466:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1467:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
1468:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1469:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1470:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1471:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1472:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1473:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1474:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1475:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1476:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1477:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1478:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1479:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1480:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1481:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1482:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1483:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 35


1484:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1485:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1486:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1487:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1488:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1489:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1490:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1491:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1492:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1493:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1494:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1495:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1496:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1497:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1498:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1499:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1500:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1501:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1502:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1503:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1504:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1505:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1506:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1507:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1508:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1509:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1510:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1511:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1512:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1513:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1514:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1515:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1516:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1517:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1518:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1519:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1520:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1521:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1522:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1523:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1524:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1525:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1526:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1527:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1528:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1529:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1530:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1531:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1532:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1533:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1534:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1535:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1536:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1537:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1538:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1539:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1540:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 36


1541:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1542:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1543:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1544:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1545:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1546:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1547:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1548:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1549:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1550:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1551:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1552:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1553:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1554:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1555:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1556:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1557:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1558:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1559:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1560:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1561:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1562:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1563:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1564:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1565:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
1566:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1567:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1568:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1569:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1570:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1571:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1572:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1573:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1574:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1575:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1576:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1577:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1578:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1579:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1580:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1581:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1582:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
1583:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1584:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1585:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1586:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1587:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1588:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1589:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1590:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1591:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1592:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1593:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1594:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1595:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1596:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1597:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 37


1598:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1599:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
1600:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1601:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1602:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1603:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1604:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1605:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1606:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1607:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1608:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1609:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1610:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1611:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1612:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1613:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1614:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1615:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated SIMD instructions
1616:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
1617:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
1618:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1619:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
1620:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1621:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1622:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1623:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1624:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1625:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1626:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1627:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1628:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1629:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1630:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1631:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1632:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1633:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1634:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1635:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1636:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1637:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1638:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1639:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1640:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1641:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1642:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1643:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1644:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1645:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1646:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1647:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1648:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1649:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1650:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1651:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1652:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1653:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1654:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 38


1655:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1656:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1657:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1658:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1659:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1660:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1661:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1662:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1663:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1664:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1665:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1666:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1667:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1668:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1669:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1670:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1671:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1672:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1673:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1674:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1675:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1676:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1677:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1678:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1679:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1680:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1681:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1682:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1683:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1684:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1685:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1686:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1687:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1688:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1689:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1690:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1691:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1692:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1693:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1694:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1695:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1696:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1697:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1698:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1699:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1700:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1701:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1702:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1703:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1704:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1705:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1706:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1707:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1708:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1709:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1710:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1711:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 39


1712:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1713:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1714:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1715:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1716:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1717:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1718:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1719:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1720:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1721:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1722:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1723:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1724:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1725:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1726:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1727:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1728:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1729:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1730:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1731:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1732:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1733:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1734:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1736:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1738:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1741:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1742:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1743:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1744:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1745:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1746:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1747:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1748:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1749:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1750:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1751:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1752:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1753:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1754:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1755:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1756:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1757:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1758:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1759:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1760:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1761:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1762:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1763:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1764:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1765:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1766:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1767:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1768:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 40


1769:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1770:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1771:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1772:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1773:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1774:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1775:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1776:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1777:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1778:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1779:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1780:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1781:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1782:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1783:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1784:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1785:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1786:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1787:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1788:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1789:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1790:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1791:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1792:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1793:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1794:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1795:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1796:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1797:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1798:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1799:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1800:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1801:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1802:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1803:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1804:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1805:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1806:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1807:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1808:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1809:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1810:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1811:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1812:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1813:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1814:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1815:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1816:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1817:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1818:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1819:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1820:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1821:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1822:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1823:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1824:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1825:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 41


1826:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1827:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1828:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1829:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1830:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1831:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1832:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1833:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1834:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1835:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1836:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1837:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1838:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1839:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1840:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1841:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1842:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1843:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1844:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1845:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1846:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1847:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1848:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1849:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1850:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1851:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1852:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1853:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1854:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1855:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1856:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1857:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1858:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1859:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1860:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1861:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1862:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1863:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1864:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1865:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1866:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1867:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1868:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1869:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1870:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1871:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1872:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1873:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1874:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1875:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1876:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1877:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1878:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1879:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1880:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1881:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1882:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 42


1883:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1884:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1885:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1886:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1887:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1888:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1889:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1890:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1891:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1892:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1893:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1894:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1895:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1896:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1897:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1898:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1899:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1900:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1901:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1902:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1903:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1904:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1905:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1906:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1907:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1908:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1909:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1910:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1911:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1912:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1913:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1914:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1915:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1916:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1917:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1918:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1919:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)
1920:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1921:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1922:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1923:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1924:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1925:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1926:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1927:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1928:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1929:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1930:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1931:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1932:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1933:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1934:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1935:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1936:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1937:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1938:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1939:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 43


1940:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1941:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTB16(uint32_t op1)
1942:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1943:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1944:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1945:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1946:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1947:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1948:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1949:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1950:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1951:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1952:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1953:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1954:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1955:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1956:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1957:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTB16(uint32_t op1)
1958:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1959:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1960:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1962:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1963:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1964:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1965:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1966:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1967:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1968:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1969:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1970:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1971:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1972:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1973:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1974:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1975:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1976:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1977:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1978:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1979:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1980:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1981:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1982:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1983:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1984:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1985:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1986:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1987:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1988:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32_t op3)
1990:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1992:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1994:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1995:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1996:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 44


1997:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint32_t op3)
1998:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1999:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
2000:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2001:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
2002:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
2003:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2004:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2005:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint64_t __SMLALD (uint32_t op1, uint32_t op2, uint64_t acc)
2006:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2007:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   union llreg_u{
2008:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t w32[2];
2009:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint64_t w64;
2010:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } llr;
2011:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   llr.w64 = acc;
2012:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2013:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
2014:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlald %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (o
2015:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
2016:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlald %0, %1, %2, %3" : "=r" (llr.w32[1]), "=r" (llr.w32[0]): "r" (op1), "r" (o
2017:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
2018:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2019:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(llr.w64);
2020:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2021:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2022:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint64_t __SMLALDX (uint32_t op1, uint32_t op2, uint64_t acc)
2023:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2024:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   union llreg_u{
2025:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t w32[2];
2026:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint64_t w64;
2027:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } llr;
2028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   llr.w64 = acc;
2029:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2030:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
2031:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlaldx %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (
2032:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
2033:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlaldx %0, %1, %2, %3" : "=r" (llr.w32[1]), "=r" (llr.w32[0]): "r" (op1), "r" (
2034:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
2035:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2036:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(llr.w64);
2037:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2038:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2039:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUSD  (uint32_t op1, uint32_t op2)
2040:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2041:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
2042:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2043:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smusd %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
2044:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
2045:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2046:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2047:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUSDX (uint32_t op1, uint32_t op2)
2048:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2049:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
2050:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2051:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smusdx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
2052:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
2053:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 45


2054:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2055:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLSD (uint32_t op1, uint32_t op2, uint32_t op3)
2056:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2057:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
2058:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2059:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlsd %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
2060:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
2061:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2062:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2063:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLSDX (uint32_t op1, uint32_t op2, uint32_t op3)
2064:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2065:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
2066:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2067:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlsdx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
2068:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
2069:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2070:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2071:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint64_t __SMLSLD (uint32_t op1, uint32_t op2, uint64_t acc)
2072:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2073:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   union llreg_u{
2074:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t w32[2];
2075:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint64_t w64;
2076:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } llr;
2077:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   llr.w64 = acc;
2078:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2079:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
2080:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlsld %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (o
2081:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
2082:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlsld %0, %1, %2, %3" : "=r" (llr.w32[1]), "=r" (llr.w32[0]): "r" (op1), "r" (o
2083:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
2084:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2085:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(llr.w64);
2086:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2087:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2088:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint64_t __SMLSLDX (uint32_t op1, uint32_t op2, uint64_t acc)
2089:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2090:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   union llreg_u{
2091:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t w32[2];
2092:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint64_t w64;
2093:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } llr;
2094:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   llr.w64 = acc;
2095:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2096:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
2097:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlsldx %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (
2098:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
2099:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlsldx %0, %1, %2, %3" : "=r" (llr.w32[1]), "=r" (llr.w32[0]): "r" (op1), "r" (
2100:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
2101:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2102:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(llr.w64);
2103:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2104:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2105:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SEL  (uint32_t op1, uint32_t op2)
2106:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2107:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
2108:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2109:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sel %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
2110:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 46


2111:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2112:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2113:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE  int32_t __QADD( int32_t op1,  int32_t op2)
2114:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2115:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t result;
2116:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2117:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
2118:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
2119:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2120:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2121:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE  int32_t __QSUB( int32_t op1,  int32_t op2)
2122:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2123:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t result;
2124:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2125:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
2126:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
2127:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2128:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2129:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if 0
2130:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PKHBT(ARG1,ARG2,ARG3) \
2131:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
2132:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1), __ARG2 = (ARG2); \
2133:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("pkhbt %0, %1, %2, lsl %3" : "=r" (__RES) :  "r" (__ARG1), "r" (__ARG2), "I" (ARG3)  ); \
2134:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
2135:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
2136:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2137:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PKHTB(ARG1,ARG2,ARG3) \
2138:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
2139:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1), __ARG2 = (ARG2); \
2140:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (ARG3 == 0) \
2141:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     __ASM ("pkhtb %0, %1, %2" : "=r" (__RES) :  "r" (__ARG1), "r" (__ARG2)  ); \
2142:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   else \
2143:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     __ASM ("pkhtb %0, %1, %2, asr %3" : "=r" (__RES) :  "r" (__ARG1), "r" (__ARG2), "I" (ARG3)  ); 
2144:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
2145:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
2146:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
2147:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2148:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PKHBT(ARG1,ARG2,ARG3)          ( ((((uint32_t)(ARG1))          ) & 0x0000FFFFUL) |  \
2149:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                                            ((((uint32_t)(ARG2)) << (ARG3)) & 0xFFFF0000UL)  )
2150:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2151:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PKHTB(ARG1,ARG2,ARG3)          ( ((((uint32_t)(ARG1))          ) & 0xFFFF0000UL) |  \
2152:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                                            ((((uint32_t)(ARG2)) >> (ARG3)) & 0x0000FFFFUL)  )
2153:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SMMLA (int32_t op1, int32_t op2, int32_t op3)
 218              		.loc 2 2154 30 view .LVU80
 219              	.LBB15:
2155:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  int32_t result;
 220              		.loc 2 2156 2 view .LVU81
2157:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  __ASM volatile ("smmla %0, %1, %2, %3" : "=r" (result): "r"  (op1), "r" (op2), "r" (op3) );
 221              		.loc 2 2158 2 view .LVU82
 222              		.syntax unified
 223              	@ 2158 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 224 009c 55FB04EE 		smmla lr, r5, r4, lr
 225              	@ 0 "" 2
 226              	.LVL19:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 47


2159:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  return(result);
 227              		.loc 2 2159 2 view .LVU83
 228              		.loc 2 2159 2 is_stmt 0 view .LVU84
 229              		.thumb
 230              		.syntax unified
 231              	.LBE15:
 232              	.LBE14:
 148:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum3 = __SMMLA(inA2, inB1, sum3);
 233              		.loc 1 148 11 is_stmt 1 view .LVU85
 234              	.LBB16:
 235              	.LBI16:
2154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 236              		.loc 2 2154 30 view .LVU86
 237              	.LBB17:
2156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 238              		.loc 2 2156 2 view .LVU87
2158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  return(result);
 239              		.loc 2 2158 2 view .LVU88
 240              		.syntax unified
 241              	@ 2158 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 242 00a0 55FB00CC 		smmla ip, r5, r0, ip
 243              	@ 0 "" 2
 244              	.LVL20:
 245              		.loc 2 2159 2 view .LVU89
 246              		.loc 2 2159 2 is_stmt 0 view .LVU90
 247              		.thumb
 248              		.syntax unified
 249              	.LBE17:
 250              	.LBE16:
 149:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum4 = __SMMLA(inA2, inB2, sum4);
 251              		.loc 1 149 11 is_stmt 1 view .LVU91
 252              	.LBB18:
 253              	.LBI18:
2154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 254              		.loc 2 2154 30 view .LVU92
 255              	.LBB19:
2156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 256              		.loc 2 2156 2 view .LVU93
2158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  return(result);
 257              		.loc 2 2158 2 view .LVU94
 258              		.syntax unified
 259              	@ 2158 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 260 00a4 51FB0477 		smmla r7, r1, r4, r7
 261              	@ 0 "" 2
 262              	.LVL21:
 263              		.loc 2 2159 2 view .LVU95
 264              		.loc 2 2159 2 is_stmt 0 view .LVU96
 265              		.thumb
 266              		.syntax unified
 267              	.LBE19:
 268              	.LBE18:
 150:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #else
 269              		.loc 1 150 11 is_stmt 1 view .LVU97
 270              	.LBB20:
 271              	.LBI20:
2154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 272              		.loc 2 2154 30 view .LVU98
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 48


 273              	.LBB21:
2156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 274              		.loc 2 2156 2 view .LVU99
2158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  return(result);
 275              		.loc 2 2158 2 view .LVU100
 276              		.syntax unified
 277              	@ 2158 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 278 00a8 51FB0066 		smmla r6, r1, r0, r6
 279              	@ 0 "" 2
 280              	.LVL22:
 281              		.loc 2 2159 2 view .LVU101
 282              		.loc 2 2159 2 is_stmt 0 view .LVU102
 283              		.thumb
 284              		.syntax unified
 285              	.LBE21:
 286              	.LBE20:
 159:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         }
 287              		.loc 1 159 11 is_stmt 1 view .LVU103
 136:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         {
 288              		.loc 1 136 15 view .LVU104
 289 00ac 013A     		subs	r2, r2, #1
 290              	.LVL23:
 136:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         {
 291              		.loc 1 136 15 is_stmt 0 view .LVU105
 292 00ae EED1     		bne	.L5
 293 00b0 4FEA4E03 		lsl	r3, lr, #1
 294              	.LVL24:
 136:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         {
 295              		.loc 1 136 15 view .LVU106
 296 00b4 4FEA4C02 		lsl	r2, ip, #1
 297              	.LVL25:
 136:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         {
 298              		.loc 1 136 15 view .LVU107
 299 00b8 7F00     		lsls	r7, r7, #1
 300              	.LVL26:
 136:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         {
 301              		.loc 1 136 15 view .LVU108
 302 00ba 7600     		lsls	r6, r6, #1
 303              	.LVL27:
 304              	.L4:
 163:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         *px++  = sum2 << 1;
 305              		.loc 1 163 9 is_stmt 1 view .LVU109
 163:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         *px++  = sum2 << 1;
 306              		.loc 1 163 16 is_stmt 0 view .LVU110
 307 00bc 0199     		ldr	r1, [sp, #4]
 308 00be 41F8083C 		str	r3, [r1, #-8]
 164:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         *px2++ = sum3 << 1;
 309              		.loc 1 164 9 is_stmt 1 view .LVU111
 310              	.LVL28:
 164:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         *px2++ = sum3 << 1;
 311              		.loc 1 164 9 is_stmt 0 view .LVU112
 312 00c2 009B     		ldr	r3, [sp]
 164:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         *px2++ = sum3 << 1;
 313              		.loc 1 164 16 view .LVU113
 314 00c4 41F8042C 		str	r2, [r1, #-4]
 165:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         *px2++ = sum4 << 1;
 315              		.loc 1 165 9 is_stmt 1 view .LVU114
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 49


 165:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         *px2++ = sum4 << 1;
 316              		.loc 1 165 9 is_stmt 0 view .LVU115
 317 00c8 0833     		adds	r3, r3, #8
 318 00ca 0093     		str	r3, [sp]
 319 00cc 01F10803 		add	r3, r1, #8
 166:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 320              		.loc 1 166 16 view .LVU116
 321 00d0 4AE90276 		strd	r7, r6, [r10, #-8]
 168:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 322              		.loc 1 168 9 is_stmt 1 view .LVU117
 171:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       }
 323              		.loc 1 171 9 view .LVU118
 120:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       {
 324              		.loc 1 120 13 view .LVU119
 325 00d4 0193     		str	r3, [sp, #4]
 326 00d6 0AF1080A 		add	r10, r10, #8
 327 00da 049B     		ldr	r3, [sp, #16]
 328 00dc 5345     		cmp	r3, r10
 329 00de CAD1     		bne	.L6
 330 00e0 069B     		ldr	r3, [sp, #24]
 331 00e2 0D9A     		ldr	r2, [sp, #52]
 332 00e4 1344     		add	r3, r3, r2
 333 00e6 0693     		str	r3, [sp, #24]
 334              	.LVL29:
 335              	.L3:
 174:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       px  = px2 + (numColsB & 1U);
 336              		.loc 1 174 7 view .LVU120
 337              		.loc 1 175 7 view .LVU121
 338              		.loc 1 175 11 is_stmt 0 view .LVU122
 339 00e8 069B     		ldr	r3, [sp, #24]
 340 00ea 099A     		ldr	r2, [sp, #36]
 341 00ec 0A99     		ldr	r1, [sp, #40]
 342 00ee 1344     		add	r3, r3, r2
 343              	.LVL30:
 176:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       px2 = px  +  numColsB;
 344              		.loc 1 176 7 is_stmt 1 view .LVU123
 345 00f0 029A     		ldr	r2, [sp, #8]
 346 00f2 0A44     		add	r2, r2, r1
 347 00f4 0292     		str	r2, [sp, #8]
 348              		.loc 1 176 11 is_stmt 0 view .LVU124
 349 00f6 03EB0B02 		add	r2, r3, fp
 350 00fa 0692     		str	r2, [sp, #24]
 351              	.LVL31:
 177:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 178:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       /* Decrement row loop counter */
 179:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       row--;
 352              		.loc 1 179 7 is_stmt 1 view .LVU125
 107:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     {
 353              		.loc 1 107 11 view .LVU126
 354 00fc 079A     		ldr	r2, [sp, #28]
 355              	.LVL32:
 107:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     {
 356              		.loc 1 107 11 is_stmt 0 view .LVU127
 357 00fe 013A     		subs	r2, r2, #1
 358              	.LVL33:
 107:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     {
 359              		.loc 1 107 11 view .LVU128
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 50


 360 0100 0792     		str	r2, [sp, #28]
 361 0102 A7D1     		bne	.L7
 180:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     }
 181:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 182:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     /* Compute any remaining odd row/column below */
 183:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 184:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     /* Compute remaining output column */
 185:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     if (numColsB & 1U) {
 362              		.loc 1 185 5 is_stmt 1 view .LVU129
 363              		.loc 1 185 8 is_stmt 0 view .LVU130
 364 0104 139B     		ldr	r3, [sp, #76]
 365              	.LVL34:
 366              		.loc 1 185 8 view .LVU131
 367 0106 002B     		cmp	r3, #0
 368 0108 33D1     		bne	.L42
 369              	.LVL35:
 370              	.L2:
 186:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 187:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       /* Avoid redundant computation of last element */
 188:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       row = numRowsA & (~1U);
 189:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 190:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       /* Point to remaining unfilled column in output matrix */
 191:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       px = pDst->pData + numColsB-1;
 192:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       pInA = pSrcA->pData;
 193:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 194:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       /* row loop */
 195:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       while (row > 0)
 196:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       {
 197:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 198:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* point to last column in matrix B */
 199:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         pInB  = pSrcB->pData + numColsB-1;
 200:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 201:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* Set variable sum1, that acts as accumulator, to zero */
 202:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         sum1  = 0;
 203:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 204:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 205:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 206:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* Loop unrolling: Compute 4 columns at a time. */
 207:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         colCnt = numColsA >> 2U;
 208:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 209:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* matrix multiplication */
 210:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         while (colCnt > 0U)
 211:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         {
 212:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 213:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = __SMMLA(*pInA++, *pInB, sum1);
 214:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #else
 215:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = (q31_t) ((((q63_t) sum1 << 32) + ((q63_t) *pInA++ * *pInB)) >> 32);
 216:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #endif
 217:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           pInB += numColsB;
 218:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 219:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 220:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = __SMMLA(*pInA++, *pInB, sum1);
 221:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #else
 222:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = (q31_t) ((((q63_t) sum1 << 32) + ((q63_t) *pInA++ * *pInB)) >> 32);
 223:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #endif
 224:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           pInB += numColsB;
 225:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 51


 226:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 227:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = __SMMLA(*pInA++, *pInB, sum1);
 228:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #else
 229:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = (q31_t) ((((q63_t) sum1 << 32) + ((q63_t) *pInA++ * *pInB)) >> 32);
 230:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #endif
 231:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           pInB += numColsB;
 232:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 233:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 234:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = __SMMLA(*pInA++, *pInB, sum1);
 235:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #else
 236:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = (q31_t) ((((q63_t) sum1 << 32) + ((q63_t) *pInA++ * *pInB)) >> 32);
 237:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #endif
 238:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           pInB += numColsB;
 239:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 240:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           /* Decrement loop counter */
 241:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           colCnt--;
 242:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         }
 243:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 244:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* Loop unrolling: Compute remaining column */
 245:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         colCnt = numColsA % 4U;
 246:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 247:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #else
 248:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 249:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* Initialize colCnt with number of columns */
 250:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         colCnt = numColsA;
 251:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 252:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 253:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 254:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         while (colCnt > 0U) {
 255:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 256:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = __SMMLA(*pInA++, *pInB, sum1);
 257:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #else
 258:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = (q31_t) ((((q63_t) sum1 << 32) + ((q63_t) *pInA++ * *pInB)) >> 32);
 259:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #endif
 260:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           pInB += numColsB;
 261:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           
 262:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           colCnt--;
 263:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         }
 264:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 265:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* Convert the result from 2.30 to 1.31 format and store in destination buffer */
 266:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         *px = sum1 << 1;
 267:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         px += numColsB;
 268:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 269:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* Decrement row loop counter */
 270:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         row--;
 271:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       }
 272:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     }
 273:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 274:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     /* Compute remaining output row */
 275:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     if (numRowsA & 1U) {
 371              		.loc 1 275 5 is_stmt 1 view .LVU132
 372              		.loc 1 275 8 is_stmt 0 view .LVU133
 373 010a 0F9B     		ldr	r3, [sp, #60]
 374 010c DB07     		lsls	r3, r3, #31
 375 010e 27D5     		bpl	.L27
 276:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 277:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       /* point to last row in output matrix */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 52


 278:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       px = pDst->pData + (numColsB) * (numRowsA-1);
 376              		.loc 1 278 7 is_stmt 1 view .LVU134
 377              		.loc 1 278 48 is_stmt 0 view .LVU135
 378 0110 0F9B     		ldr	r3, [sp, #60]
 379              		.loc 1 278 37 view .LVU136
 380 0112 129A     		ldr	r2, [sp, #72]
 381              		.loc 1 278 48 view .LVU137
 382 0114 013B     		subs	r3, r3, #1
 383              		.loc 1 278 10 view .LVU138
 384 0116 1199     		ldr	r1, [sp, #68]
 385              		.loc 1 278 37 view .LVU139
 386 0118 03FB02F6 		mul	r6, r3, r2
 387              		.loc 1 278 10 view .LVU140
 388 011c 01EB8606 		add	r6, r1, r6, lsl #2
 389              	.LVL36:
 279:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 280:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       col = numColsB;
 390              		.loc 1 280 7 is_stmt 1 view .LVU141
 281:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       i = 0U;
 391              		.loc 1 281 7 view .LVU142
 282:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 283:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       /* col loop */
 284:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       while (col > 0)
 392              		.loc 1 284 7 view .LVU143
 393              		.loc 1 284 13 view .LVU144
 394 0120 F2B1     		cbz	r2, .L27
 285:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       {
 286:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 287:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* point to last row in matrix A */
 288:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         pInA = pSrcA->pData + (numRowsA-1) * numColsA;
 395              		.loc 1 288 44 is_stmt 0 view .LVU145
 396 0122 039D     		ldr	r5, [sp, #12]
 397 0124 06EB0B0E 		add	lr, r6, fp
 398              		.loc 1 288 14 view .LVU146
 399 0128 109A     		ldr	r2, [sp, #64]
 400              	.LVL37:
 401              		.loc 1 288 14 view .LVU147
 402 012a B046     		mov	r8, r6
 403              		.loc 1 288 44 view .LVU148
 404 012c 03FB05F3 		mul	r3, r3, r5
 405 0130 089F     		ldr	r7, [sp, #32]
 406              		.loc 1 288 14 view .LVU149
 407 0132 02EB830C 		add	ip, r2, r3, lsl #2
 408              	.LVL38:
 409              	.L16:
 410              		.loc 1 288 9 is_stmt 1 view .LVU150
 289:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         pInB  = pSrcB->pData + i;
 411              		.loc 1 289 9 view .LVU151
 412              		.loc 1 289 15 is_stmt 0 view .LVU152
 413 0136 3A46     		mov	r2, r7
 414              	.LVL39:
 290:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 291:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* Set variable sum1, that acts as accumulator, to zero */
 292:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         sum1  = 0;
 415              		.loc 1 292 9 is_stmt 1 view .LVU153
 293:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 294:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 53


 295:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 296:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* Loop unrolling: Compute 4 columns at a time. */
 297:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         colCnt = numColsA >> 2U;
 298:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 299:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* matrix multiplication */
 300:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         while (colCnt > 0U)
 301:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         {
 302:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inA1 = *pInA++;
 303:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inA2 = *pInA++;
 304:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inB1 = *pInB;
 305:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           pInB += numColsB;
 306:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inB2 = *pInB;
 307:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           pInB += numColsB;
 308:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 309:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = __SMMLA(inA1, inB1, sum1);
 310:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = __SMMLA(inA2, inB2, sum1);
 311:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #else
 312:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = (q31_t) ((((q63_t) sum1 << 32) + ((q63_t) inA1 * inB1)) >> 32);
 313:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = (q31_t) ((((q63_t) sum1 << 32) + ((q63_t) inA2 * inB2)) >> 32);
 314:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #endif
 315:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 316:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inA1 = *pInA++;
 317:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inA2 = *pInA++;
 318:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inB1 = *pInB;
 319:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           pInB += numColsB;
 320:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           inB2 = *pInB;
 321:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           pInB += numColsB;
 322:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 323:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = __SMMLA(inA1, inB1, sum1);
 324:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = __SMMLA(inA2, inB2, sum1);
 325:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #else
 326:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = (q31_t) ((((q63_t) sum1 << 32) + ((q63_t) inA1 * inB1)) >> 32);
 327:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = (q31_t) ((((q63_t) sum1 << 32) + ((q63_t) inA2 * inB2)) >> 32);
 328:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #endif
 329:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 330:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           /* Decrement loop counter */
 331:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           colCnt--;
 332:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         }
 333:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 334:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* Loop unrolling: Compute remaining column */
 335:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         colCnt = numColsA % 4U;
 336:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 337:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #else
 338:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 339:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* Initialize colCnt with number of columns */
 340:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         colCnt = numColsA;
 416              		.loc 1 340 9 view .LVU154
 341:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 342:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 343:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 344:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         while (colCnt > 0U) {
 417              		.loc 1 344 9 view .LVU155
 418              		.loc 1 344 15 view .LVU156
 419 0138 002D     		cmp	r5, #0
 420 013a 42D0     		beq	.L20
 421              		.loc 1 344 15 is_stmt 0 view .LVU157
 422 013c 2B46     		mov	r3, r5
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 54


 288:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         pInB  = pSrcB->pData + i;
 423              		.loc 1 288 14 view .LVU158
 424 013e 6046     		mov	r0, ip
 292:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 425              		.loc 1 292 15 view .LVU159
 426 0140 0021     		movs	r1, #0
 427              	.LVL40:
 428              	.L15:
 345:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 346:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = __SMMLA(*pInA++, *pInB, sum1);
 429              		.loc 1 346 11 is_stmt 1 view .LVU160
 430              	.LBB22:
 431              	.LBI22:
2154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 432              		.loc 2 2154 30 view .LVU161
 433              	.LBB23:
2156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 434              		.loc 2 2156 2 view .LVU162
2158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  return(result);
 435              		.loc 2 2158 2 view .LVU163
 436 0142 50F8044B 		ldr	r4, [r0], #4
 437              	.LVL41:
2158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  return(result);
 438              		.loc 2 2158 2 is_stmt 0 view .LVU164
 439 0146 1668     		ldr	r6, [r2]
 440              		.syntax unified
 441              	@ 2158 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 442 0148 54FB0611 		smmla r1, r4, r6, r1
 443              	@ 0 "" 2
 444              	.LVL42:
 445              		.loc 2 2159 2 is_stmt 1 view .LVU165
 446              		.loc 2 2159 2 is_stmt 0 view .LVU166
 447              		.thumb
 448              		.syntax unified
 449              	.LBE23:
 450              	.LBE22:
 347:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #else
 348:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           sum1 = (q31_t) ((((q63_t) sum1 << 32) + ((q63_t) *pInA++ * *pInB)) >> 32);
 349:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #endif
 350:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           pInB += numColsB;
 451              		.loc 1 350 11 is_stmt 1 view .LVU167
 344:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 452              		.loc 1 344 15 is_stmt 0 view .LVU168
 453 014c 013B     		subs	r3, r3, #1
 454              	.LVL43:
 455              		.loc 1 350 16 view .LVU169
 456 014e 5A44     		add	r2, r2, fp
 457              	.LVL44:
 351:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 352:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           colCnt--;
 458              		.loc 1 352 11 is_stmt 1 view .LVU170
 344:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 459              		.loc 1 344 15 view .LVU171
 460 0150 F7D1     		bne	.L15
 461 0152 4900     		lsls	r1, r1, #1
 462              	.LVL45:
 463              	.L14:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 55


 353:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         }
 354:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 355:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* Saturate and store the result in the destination buffer */
 356:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         *px++ = sum1 << 1;
 464              		.loc 1 356 9 view .LVU172
 465              		.loc 1 356 15 is_stmt 0 view .LVU173
 466 0154 48F8041B 		str	r1, [r8], #4
 467              	.LVL46:
 357:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         i++;
 468              		.loc 1 357 9 is_stmt 1 view .LVU174
 358:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 359:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         /* Decrement col loop counter */
 360:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         col--;
 469              		.loc 1 360 9 view .LVU175
 284:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       {
 470              		.loc 1 284 13 view .LVU176
 471 0158 C645     		cmp	lr, r8
 472 015a 07F10407 		add	r7, r7, #4
 473 015e EAD1     		bne	.L16
 474              	.LVL47:
 475              	.L27:
 361:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       }
 362:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     }
 363:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 364:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     /* Set status as ARM_MATH_SUCCESS */
 365:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****     status = ARM_MATH_SUCCESS;
 366:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   }
 367:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 368:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   /* Return to application */
 369:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****   return (status);
 370:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** }
 476              		.loc 1 370 1 is_stmt 0 view .LVU177
 477 0160 0020     		movs	r0, #0
 478 0162 15B0     		add	sp, sp, #84
 479              	.LCFI2:
 480              		.cfi_remember_state
 481              		.cfi_def_cfa_offset 36
 482              		@ sp needed
 483 0164 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 484              	.LVL48:
 485              	.L18:
 486              	.LCFI3:
 487              		.cfi_restore_state
 136:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         {
 488              		.loc 1 136 15 view .LVU178
 489 0168 039B     		ldr	r3, [sp, #12]
 490              	.LVL49:
 136:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         {
 491              		.loc 1 136 15 view .LVU179
 492 016a 1E46     		mov	r6, r3
 493 016c 1F46     		mov	r7, r3
 494 016e 1A46     		mov	r2, r3
 495 0170 A4E7     		b	.L4
 496              	.LVL50:
 497              	.L42:
 188:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 498              		.loc 1 188 7 is_stmt 1 view .LVU180
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 56


 188:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 499              		.loc 1 188 11 is_stmt 0 view .LVU181
 500 0172 0F9B     		ldr	r3, [sp, #60]
 191:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       pInA = pSrcA->pData;
 501              		.loc 1 191 34 view .LVU182
 502 0174 ABF1040E 		sub	lr, fp, #4
 503 0178 039D     		ldr	r5, [sp, #12]
 188:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 504              		.loc 1 188 11 view .LVU183
 505 017a 23F0010C 		bic	ip, r3, #1
 506              	.LVL51:
 191:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       pInA = pSrcA->pData;
 507              		.loc 1 191 7 is_stmt 1 view .LVU184
 508 017e DDF83090 		ldr	r9, [sp, #48]
 191:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       pInA = pSrcA->pData;
 509              		.loc 1 191 10 is_stmt 0 view .LVU185
 510 0182 DDE91073 		ldrd	r7, r3, [sp, #64]
 511 0186 03EB0E06 		add	r6, r3, lr
 512              	.LVL52:
 192:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 513              		.loc 1 192 7 is_stmt 1 view .LVU186
 195:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       {
 514              		.loc 1 195 7 view .LVU187
 195:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       {
 515              		.loc 1 195 13 view .LVU188
 199:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 516              		.loc 1 199 9 view .LVU189
 202:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 517              		.loc 1 202 9 view .LVU190
 250:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 518              		.loc 1 250 9 view .LVU191
 254:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 519              		.loc 1 254 9 view .LVU192
 254:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 520              		.loc 1 254 15 view .LVU193
 521 018a 089B     		ldr	r3, [sp, #32]
 522 018c 9E44     		add	lr, lr, r3
 523 018e B5B1     		cbz	r5, .L19
 524              	.L43:
 254:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 525              		.loc 1 254 15 is_stmt 0 view .LVU194
 526 0190 2A46     		mov	r2, r5
 199:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 527              		.loc 1 199 15 view .LVU195
 528 0192 7346     		mov	r3, lr
 254:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 529              		.loc 1 254 15 view .LVU196
 530 0194 3846     		mov	r0, r7
 202:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 531              		.loc 1 202 15 view .LVU197
 532 0196 0021     		movs	r1, #0
 533 0198 A846     		mov	r8, r5
 534              	.LVL53:
 535              	.L12:
 256:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #else
 536              		.loc 1 256 11 is_stmt 1 view .LVU198
 537              	.LBB24:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 57


 538              	.LBI24:
2154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 539              		.loc 2 2154 30 view .LVU199
 540              	.LBB25:
2156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 541              		.loc 2 2156 2 view .LVU200
2158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  return(result);
 542              		.loc 2 2158 2 view .LVU201
 543 019a 50F8044B 		ldr	r4, [r0], #4
 544              	.LVL54:
2158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  return(result);
 545              		.loc 2 2158 2 is_stmt 0 view .LVU202
 546 019e 1D68     		ldr	r5, [r3]
 547              		.syntax unified
 548              	@ 2158 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 549 01a0 54FB0511 		smmla r1, r4, r5, r1
 550              	@ 0 "" 2
 551              	.LVL55:
 552              		.loc 2 2159 2 is_stmt 1 view .LVU203
 553              		.loc 2 2159 2 is_stmt 0 view .LVU204
 554              		.thumb
 555              		.syntax unified
 556              	.LBE25:
 557              	.LBE24:
 260:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           
 558              		.loc 1 260 11 is_stmt 1 view .LVU205
 254:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 559              		.loc 1 254 15 is_stmt 0 view .LVU206
 560 01a4 013A     		subs	r2, r2, #1
 561              	.LVL56:
 260:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****           
 562              		.loc 1 260 16 view .LVU207
 563 01a6 5B44     		add	r3, r3, fp
 564              	.LVL57:
 262:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         }
 565              		.loc 1 262 11 is_stmt 1 view .LVU208
 254:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 566              		.loc 1 254 15 view .LVU209
 567 01a8 F7D1     		bne	.L12
 568 01aa 4546     		mov	r5, r8
 569 01ac 4F44     		add	r7, r7, r9
 570 01ae 4900     		lsls	r1, r1, #1
 571              	.LVL58:
 572              	.L11:
 266:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         px += numColsB;
 573              		.loc 1 266 9 view .LVU210
 195:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       {
 574              		.loc 1 195 13 is_stmt 0 view .LVU211
 575 01b0 BCF1010C 		subs	ip, ip, #1
 576              	.LVL59:
 266:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****         px += numColsB;
 577              		.loc 1 266 13 view .LVU212
 578 01b4 3160     		str	r1, [r6]
 267:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 579              		.loc 1 267 9 is_stmt 1 view .LVU213
 267:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 580              		.loc 1 267 12 is_stmt 0 view .LVU214
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 58


 581 01b6 5E44     		add	r6, r6, fp
 582              	.LVL60:
 270:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       }
 583              		.loc 1 270 9 is_stmt 1 view .LVU215
 195:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c ****       {
 584              		.loc 1 195 13 view .LVU216
 585 01b8 A7D0     		beq	.L2
 586              	.LVL61:
 199:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 587              		.loc 1 199 9 view .LVU217
 202:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 588              		.loc 1 202 9 view .LVU218
 250:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** 
 589              		.loc 1 250 9 view .LVU219
 254:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 590              		.loc 1 254 9 view .LVU220
 254:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 591              		.loc 1 254 15 view .LVU221
 592 01ba 002D     		cmp	r5, #0
 593 01bc E8D1     		bne	.L43
 594              	.L19:
 254:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 595              		.loc 1 254 15 is_stmt 0 view .LVU222
 596 01be 2946     		mov	r1, r5
 597 01c0 F6E7     		b	.L11
 598              	.LVL62:
 599              	.L20:
 344:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q31.c **** #if defined (ARM_MATH_DSP)
 600              		.loc 1 344 15 view .LVU223
 601 01c2 2946     		mov	r1, r5
 602 01c4 C6E7     		b	.L14
 603              		.cfi_endproc
 604              	.LFE145:
 606 01c6 00BF     		.text
 607              	.Letext0:
 608              		.file 3 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/
 609              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_std
 610              		.file 5 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock
 611              		.file 6 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_typ
 612              		.file 7 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/in
 613              		.file 8 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reen
 614              		.file 9 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 615              		.file 10 ".//Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s 			page 59


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_mat_mult_fast_q31.c
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s:17     .text.arm_mat_mult_fast_q31:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//cckYQMYS.s:26     .text.arm_mat_mult_fast_q31:0000000000000000 arm_mat_mult_fast_q31

NO UNDEFINED SYMBOLS
