ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_mat_mult_fast_q15.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_mat_mult_fast_q15,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	arm_mat_mult_fast_q15
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_mat_mult_fast_q15:
  27              	.LVL0:
  28              	.LFB145:
  29              		.file 1 ".//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c"
   1:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** /* ----------------------------------------------------------------------
   2:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * Project:      CMSIS DSP Library
   3:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * Title:        arm_mat_mult_fast_q15.c
   4:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * Description:  Q15 matrix multiplication (fast variant)
   5:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  *
   6:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * $Date:        18. March 2019
   7:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * $Revision:    V1.6.0
   8:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  *
   9:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * Target Processor: Cortex-M cores
  10:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * -------------------------------------------------------------------- */
  11:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** /*
  12:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  *
  14:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  *
  16:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * not use this file except in compliance with the License.
  18:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * You may obtain a copy of the License at
  19:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  *
  20:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  *
  22:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * See the License for the specific language governing permissions and
  26:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  * limitations under the License.
  27:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  */
  28:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
  29:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #include "arm_math.h"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 2


  30:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
  31:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** /**
  32:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   @ingroup groupMatrix
  33:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  */
  34:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
  35:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** /**
  36:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   @addtogroup MatrixMult
  37:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   @{
  38:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  */
  39:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
  40:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** /**
  41:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   @brief         Q15 matrix multiplication (fast variant).
  42:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   @param[in]     pSrcA      points to the first input matrix structure
  43:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   @param[in]     pSrcB      points to the second input matrix structure
  44:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   @param[out]    pDst       points to output matrix structure
  45:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   @param[in]     pState     points to the array for storing intermediate results
  46:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   @return        execution status
  47:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****                    - \ref ARM_MATH_SUCCESS       : Operation successful
  48:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****                    - \ref ARM_MATH_SIZE_MISMATCH : Matrix size check failed
  49:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
  50:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   @par           Scaling and Overflow Behavior
  51:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****                    The difference between the function \ref arm_mat_mult_q15() and this fast varian
  52:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****                    the fast variant use a 32-bit rather than a 64-bit accumulator.
  53:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****                    The result of each 1.15 x 1.15 multiplication is truncated to
  54:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****                    2.30 format. These intermediate results are accumulated in a 32-bit register in 
  55:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****                    format. Finally, the accumulator is saturated and converted to a 1.15 result.
  56:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   @par
  57:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****                    The fast version has the same overflow behavior as the standard version but prov
  58:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****                    less precision since it discards the low 16 bits of each multiplication result.
  59:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****                    In order to avoid overflows completely the input signals must be scaled down.
  60:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****                    Scale down one of the input matrices by log2(numColsA) bits to avoid overflows,
  61:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****                    as a total of numColsA additions are computed internally for each output element
  62:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   @remark
  63:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****                    Refer to \ref arm_mat_mult_q15() for a slower implementation of this function
  64:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****                    which uses 64-bit accumulation to provide higher precision.
  65:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****  */
  66:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
  67:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** arm_status arm_mat_mult_fast_q15(
  68:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   const arm_matrix_instance_q15 * pSrcA,
  69:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   const arm_matrix_instance_q15 * pSrcB,
  70:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         arm_matrix_instance_q15 * pDst,
  71:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q15_t                   * pState)
  72:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** {
  30              		.loc 1 72 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 120
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  73:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q31_t sum;                                     /* Accumulator */
  34              		.loc 1 73 9 view .LVU1
  74:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q15_t *pSrcBT = pState;                        /* Input data matrix pointer for transpose *
  35              		.loc 1 74 9 view .LVU2
  72:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q31_t sum;                                     /* Accumulator */
  36              		.loc 1 72 1 is_stmt 0 view .LVU3
  37 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 36
  40              		.cfi_offset 4, -36
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 3


  41              		.cfi_offset 5, -32
  42              		.cfi_offset 6, -28
  43              		.cfi_offset 7, -24
  44              		.cfi_offset 8, -20
  45              		.cfi_offset 9, -16
  46              		.cfi_offset 10, -12
  47              		.cfi_offset 11, -8
  48              		.cfi_offset 14, -4
  49 0004 9FB0     		sub	sp, sp, #124
  50              	.LCFI1:
  51              		.cfi_def_cfa_offset 160
  75:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q15_t *pInA = pSrcA->pData;                    /* Input data matrix pointer A of Q15 type *
  76:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q15_t *pInB = pSrcB->pData;                    /* Input data matrix pointer B of Q15 type *
  77:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q15_t *px;                                     /* Temporary output data matrix pointer */
  78:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint16_t numRowsA = pSrcA->numRows;            /* Number of rows of input matrix A */
  79:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint16_t numColsB = pSrcB->numCols;            /* Number of columns of input matrix B */
  52              		.loc 1 79 18 view .LVU4
  53 0006 4C88     		ldrh	r4, [r1, #2]
  72:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q31_t sum;                                     /* Accumulator */
  54              		.loc 1 72 1 view .LVU5
  55 0008 1E46     		mov	r6, r3
  80:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint16_t numColsA = pSrcA->numCols;            /* Number of columns of input matrix A */
  81:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint16_t numRowsB = pSrcB->numRows;            /* Number of rows of input matrix A */
  82:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint32_t col, i = 0U, row = numRowsB, colCnt;  /* Loop counters */
  83:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         arm_status status;                             /* Status of matrix multiplication */
  84:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
  85:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #if defined (ARM_MATH_DSP)
  86:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q31_t in;                                      /* Temporary variable to hold the input valu
  87:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q31_t inA1, inB1, inA2, inB2;
  88:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q31_t sum2, sum3, sum4;
  89:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q15_t *pInA2, *pInB2, *px2;
  90:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint32_t j = 0;
  91:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
  92:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q15_t in;                                      /* Temporary variable to hold the input valu
  93:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q15_t inA1, inB1, inA2, inB2;
  94:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif /* #if defined (ARM_MATH_DSP) */
  95:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
  96:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #ifdef ARM_MATH_MATRIX_CHECK
  97:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
  98:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   /* Check for matrix mismatch condition */
  99:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   if ((pSrcA->numCols != pSrcB->numRows) ||
 100:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       (pSrcA->numRows != pDst->numRows)  ||
 101:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       (pSrcB->numCols != pDst->numCols)    )
 102:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   {
 103:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 104:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     status = ARM_MATH_SIZE_MISMATCH;
 105:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   }
 106:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   else
 107:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 108:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif /* #ifdef ARM_MATH_MATRIX_CHECK */
 109:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 110:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   {
 111:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     /* Matrix transpose */
 112:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     do
 113:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     {
 114:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       /* The pointer px is set to starting address of column being processed */
 115:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       px = pSrcBT + i;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 4


 116:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 117:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       /* Apply loop unrolling and exchange columns with row elements */
 118:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       col = numColsB >> 2U;
 119:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 120:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
 121:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****        ** a second loop below computes the remaining 1 to 3 samples. */
 122:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       while (col > 0U)
 123:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 124:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 125:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #if defined (ARM_MATH_DSP)
 126:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 127:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Read two elements from row */
 128:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         in = read_q15x2_ia ((q15_t **) &pInB);
 129:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 130:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Unpack and store one element in destination */
 131:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 132:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px = (q15_t) in;
 133:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 134:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px = (q15_t) ((in & (q31_t) 0xffff0000) >> 16);
 135:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif /* #ifndef ARM_MATH_BIG_ENDIAN */
 136:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 137:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Update pointer px to point to next row of transposed matrix */
 138:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         px += numRowsB;
  56              		.loc 1 138 12 view .LVU6
  57 000a 9C46     		mov	ip, r3
  72:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q31_t sum;                                     /* Accumulator */
  58              		.loc 1 72 1 view .LVU7
  59 000c 0192     		str	r2, [sp, #4]
 118:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
  60              		.loc 1 118 22 view .LVU8
  61 000e 4FEA940E 		lsr	lr, r4, #2
  81:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint32_t col, i = 0U, row = numRowsB, colCnt;  /* Loop counters */
  62              		.loc 1 81 18 view .LVU9
  63 0012 0A88     		ldrh	r2, [r1]
  64              	.LVL1:
  81:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint32_t col, i = 0U, row = numRowsB, colCnt;  /* Loop counters */
  65              		.loc 1 81 18 view .LVU10
  66 0014 04F00308 		and	r8, r4, #3
  72:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q31_t sum;                                     /* Accumulator */
  67              		.loc 1 72 1 view .LVU11
  68 0018 1093     		str	r3, [sp, #64]
  69              	.LVL2:
  75:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q15_t *pInB = pSrcB->pData;                    /* Input data matrix pointer B of Q15 type *
  70              		.loc 1 75 9 is_stmt 1 view .LVU12
  71 001a 4FEACE0A 		lsl	r10, lr, #3
  75:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q15_t *pInB = pSrcB->pData;                    /* Input data matrix pointer B of Q15 type *
  72              		.loc 1 75 28 is_stmt 0 view .LVU13
  73 001e 4368     		ldr	r3, [r0, #4]
  74              	.LVL3:
  75:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q15_t *pInB = pSrcB->pData;                    /* Input data matrix pointer B of Q15 type *
  75              		.loc 1 75 28 view .LVU14
  76 0020 02EB4205 		add	r5, r2, r2, lsl #1
  79:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint16_t numColsA = pSrcA->numCols;            /* Number of columns of input matrix A */
  77              		.loc 1 79 18 view .LVU15
  78 0024 1994     		str	r4, [sp, #100]
  79              		.loc 1 138 12 view .LVU16
  80 0026 5400     		lsls	r4, r2, #1
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 5


  75:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q15_t *pInB = pSrcB->pData;                    /* Input data matrix pointer B of Q15 type *
  81              		.loc 1 75 28 view .LVU17
  82 0028 1893     		str	r3, [sp, #96]
  83              	.LVL4:
  76:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q15_t *px;                                     /* Temporary output data matrix pointer */
  84              		.loc 1 76 9 is_stmt 1 view .LVU18
  85 002a 4FEA480B 		lsl	fp, r8, #1
  86 002e 0EFB04F3 		mul	r3, lr, r4
  87              	.LVL5:
  76:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q15_t *px;                                     /* Temporary output data matrix pointer */
  88              		.loc 1 76 28 is_stmt 0 view .LVU19
  89 0032 4F68     		ldr	r7, [r1, #4]
  90              	.LVL6:
  77:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint16_t numRowsA = pSrcA->numRows;            /* Number of rows of input matrix A */
  91              		.loc 1 77 9 is_stmt 1 view .LVU20
  78:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint16_t numColsB = pSrcB->numCols;            /* Number of columns of input matrix B */
  92              		.loc 1 78 9 view .LVU21
  81:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint32_t col, i = 0U, row = numRowsB, colCnt;  /* Loop counters */
  93              		.loc 1 81 18 is_stmt 0 view .LVU22
  94 0034 1B92     		str	r2, [sp, #108]
  95 0036 6D00     		lsls	r5, r5, #1
  96 0038 9B00     		lsls	r3, r3, #2
  78:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint16_t numColsB = pSrcB->numCols;            /* Number of columns of input matrix B */
  97              		.loc 1 78 18 view .LVU23
  98 003a 0188     		ldrh	r1, [r0]
  99              	.LVL7:
  78:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint16_t numColsB = pSrcB->numCols;            /* Number of columns of input matrix B */
 100              		.loc 1 78 18 view .LVU24
 101 003c 0093     		str	r3, [sp]
  80:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint16_t numRowsB = pSrcB->numRows;            /* Number of rows of input matrix A */
 102              		.loc 1 80 18 view .LVU25
 103 003e 4388     		ldrh	r3, [r0, #2]
  78:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint16_t numColsB = pSrcB->numCols;            /* Number of columns of input matrix B */
 104              		.loc 1 78 18 view .LVU26
 105 0040 1791     		str	r1, [sp, #92]
 106              	.LVL8:
  79:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint16_t numColsA = pSrcA->numCols;            /* Number of columns of input matrix A */
 107              		.loc 1 79 9 is_stmt 1 view .LVU27
  80:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint16_t numRowsB = pSrcB->numRows;            /* Number of rows of input matrix A */
 108              		.loc 1 80 9 view .LVU28
  80:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint16_t numRowsB = pSrcB->numRows;            /* Number of rows of input matrix A */
 109              		.loc 1 80 18 is_stmt 0 view .LVU29
 110 0042 1A93     		str	r3, [sp, #104]
 111              	.LVL9:
  81:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint32_t col, i = 0U, row = numRowsB, colCnt;  /* Loop counters */
 112              		.loc 1 81 9 is_stmt 1 view .LVU30
  82:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         arm_status status;                             /* Status of matrix multiplication */
 113              		.loc 1 82 9 view .LVU31
  83:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 114              		.loc 1 83 9 view .LVU32
  86:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q31_t inA1, inB1, inA2, inB2;
 115              		.loc 1 86 9 view .LVU33
  87:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q31_t sum2, sum3, sum4;
 116              		.loc 1 87 9 view .LVU34
  88:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         q15_t *pInA2, *pInB2, *px2;
 117              		.loc 1 88 9 view .LVU35
  89:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         uint32_t j = 0;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 6


 118              		.loc 1 89 9 view .LVU36
  90:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 119              		.loc 1 90 9 view .LVU37
  90:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 120              		.loc 1 90 9 is_stmt 0 view .LVU38
 121 0044 1346     		mov	r3, r2
 122              	.LVL10:
  90:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 123              		.loc 1 90 9 view .LVU39
 124 0046 06EB4202 		add	r2, r6, r2, lsl #1
 125              	.LVL11:
  90:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 126              		.loc 1 90 9 view .LVU40
 127 004a DE00     		lsls	r6, r3, #3
 128              	.LVL12:
  90:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 129              		.loc 1 90 9 view .LVU41
 130 004c 0D92     		str	r2, [sp, #52]
 131              	.LVL13:
 132              	.L6:
 112:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     {
 133              		.loc 1 112 5 is_stmt 1 view .LVU42
 115:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 134              		.loc 1 115 7 view .LVU43
 115:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 135              		.loc 1 115 10 is_stmt 0 view .LVU44
 136 004e 6346     		mov	r3, ip
 137              	.LVL14:
 118:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 138              		.loc 1 118 7 is_stmt 1 view .LVU45
 122:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 139              		.loc 1 122 7 view .LVU46
 122:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 140              		.loc 1 122 13 view .LVU47
 141 0050 BEF1000F 		cmp	lr, #0
 142 0054 17D0     		beq	.L2
 143 0056 3A46     		mov	r2, r7
 144 0058 7146     		mov	r1, lr
 145              	.LVL15:
 146              	.L3:
 128:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 147              		.loc 1 128 9 view .LVU48
 148              	.LBB46:
 149              	.LBI46:
 150              		.file 2 ".//Libraries/CMSIS/DSP/Include/arm_math.h"
   1:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /******************************************************************************
   2:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @file     arm_math.h
   3:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief    Public header file for CMSIS DSP Library
   4:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @version  V1.6.0
   5:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @date     18. March 2019
   6:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  ******************************************************************************/
   7:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /*
   8:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved.
   9:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  10:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  12:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 7


  13:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * not use this file except in compliance with the License.
  14:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * You may obtain a copy of the License at
  15:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  16:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  18:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * See the License for the specific language governing permissions and
  22:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * limitations under the License.
  23:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
  24:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
  25:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
  26:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  28:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Introduction
  29:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  30:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  31:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  34:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Basic math functions
  36:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Fast math functions
  37:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Complex math functions
  38:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Filters
  39:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Matrix functions
  40:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Transform functions
  41:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Motor control functions
  42:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Statistical functions
  43:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Support functions
  44:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Interpolation functions
  45:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  46:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  49:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Using the Library
  50:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  51:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  52:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  58:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  59:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  61:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  64:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  67:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 8


  70:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  73:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  77:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  78:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Examples
  79:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * --------
  80:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  81:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  82:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  83:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Toolchain Support
  84:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  85:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  86:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  87:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  88:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  89:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Building the Library
  90:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  91:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  92:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  93:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
  94:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  95:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  96:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
  97:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  98:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Preprocessor Macros
  99:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 100:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 101:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Each library project have different preprocessor macros.
 102:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 103:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 104:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 105:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 106:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 107:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 108:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 109:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 110:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 111:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 112:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 113:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 114:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 115:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_LOOPUNROLL:
 116:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 117:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_LOOPUNROLL to enable manual loop unrolling in DSP functions
 118:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 119:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON:
 120:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 121:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON to enable Neon versions of the DSP functions.
 122:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * It is not enabled by default when Neon is available because performances are 
 123:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * dependent on the compiler and target architecture.
 124:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 125:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON_EXPERIMENTAL:
 126:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 9


 127:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON_EXPERIMENTAL to enable experimental Neon versions of 
 128:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * of some DSP functions. Experimental Neon versions currently do not have better
 129:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * performances than the scalar versions.
 130:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 131:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 132:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 133:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * -----------------------------
 134:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 135:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 136:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |File/Folder                      |Content                                                    
 137:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |---------------------------------|-----------------------------------------------------------
 138:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP     | This documentation                                        
 139:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\DSP_Lib_TestSuite | DSP_Lib test suite                                        
 140:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Examples          | Example projects demonstrating the usage of the library fu
 141:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Include           | DSP_Lib include files                                     
 142:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Lib               | DSP_Lib binaries                                          
 143:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Projects          | Projects to rebuild DSP_Lib binaries                      
 144:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Source            | DSP_Lib source files                                      
 145:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 146:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 147:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Revision History of CMSIS-DSP
 148:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 149:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 150:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 151:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 152:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 153:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 154:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 155:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 156:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 157:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 158:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 159:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 160:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 161:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * operate on individual values and not arrays.
 162:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 163:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 164:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 165:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 166:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 167:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 168:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 169:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 170:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * (real, imag, real, imag, ...).
 171:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 172:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 173:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * real values.
 174:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 175:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 176:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 177:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 178:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 179:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 180:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 181:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 182:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 183:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 10


 184:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 185:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * the type
 186:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 187:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * below:
 188:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 189:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     typedef struct
 190:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     {
 191:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 192:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 193:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 194:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 195:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 196:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 197:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 198:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 199:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 200:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 201:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * matrix element (i, j) is stored at:
 202:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 203:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     pData[i*numCols + j]
 204:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 205:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 206:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Init Functions
 207:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 208:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * data structure.
 209:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 210:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Refer to \ref arm_mat_init_f32(), \ref arm_mat_init_q31() and \ref arm_mat_init_q15()
 211:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * for floating-point, Q31 and Q15 types,  respectively.
 212:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 213:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par
 214:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 215:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 216:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * To place the instance structure in a const data
 217:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 218:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 219:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 220:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 221:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 222:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 223:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 224:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 225:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * data array.
 226:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 227:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Size Checking
 228:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 229:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 230:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 231:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * columns. If the size check fails the functions return:
 232:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 233:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 234:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 235:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Otherwise the functions return
 236:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 237:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 238:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 239:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 240:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 11


 241:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 242:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 243:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 244:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 245:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 246:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 247:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 248:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 249:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 250:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 251:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 252:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 253:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 254:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 255:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 256:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupController Controller Functions
 257:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 258:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 259:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 260:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 261:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 262:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 263:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 264:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 265:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 266:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 267:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 268:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 269:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 270:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 271:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 272:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 273:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 274:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 275:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupExamples Examples
 276:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 277:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 278:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 279:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef _ARM_MATH_H
 280:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define _ARM_MATH_H
 281:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 282:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /* Compiler specific diagnostic adjustment */
 283:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 284:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 285:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 286:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 287:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 288:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic push
 289:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wsign-conversion"
 290:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wconversion"
 291:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wunused-parameter"
 292:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 293:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 294:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 295:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 296:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 297:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 12


 298:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 299:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 300:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 301:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( _MSC_VER )
 302:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 303:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 304:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 305:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 306:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 307:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 308:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /* Included for instrinsics definitions */
 309:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if !defined ( _MSC_VER )
 310:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include "cmsis_compiler.h"
 311:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 312:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include <stdint.h>
 313:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __STATIC_FORCEINLINE static __forceinline
 314:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __ALIGNED(x) __declspec(align(x))
 315:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_ENTER
 316:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_EXIT
 317:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_ENTER 
 318:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
 319:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 320:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 321:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include "string.h"
 322:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include "math.h"
 323:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include "float.h"
 324:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 325:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /* evaluate ARM DSP feature */
 326:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
 327:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define ARM_MATH_DSP                   1
 328:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 329:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 330:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined(__ARM_NEON)
 331:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include <arm_neon.h>
 332:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 333:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 334:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 335:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #ifdef   __cplusplus
 336:.//Libraries/CMSIS/DSP/Include/arm_math.h **** extern "C"
 337:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 338:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 339:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 340:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 341:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 342:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 344:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 345:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q15          0x5
 347:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef PI
 349:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define PI               3.14159265358979f
 350:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 351:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 352:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 353:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 13


 355:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 356:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 363:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 364:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 366:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 370:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 371:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 372:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 373:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 374:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 375:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef enum
 376:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 377:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SUCCESS        =  0,        /**< No error */
 378:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 379:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR   = -2,        /**< Length of data buffer is incorrect */
 380:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH  = -3,        /**< Size of matrices is not compatible with the operation
 381:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_NANINF         = -4,        /**< Not-a-number (NaN) or infinity is generated */
 382:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SINGULAR       = -5,        /**< Input matrix is singular and cannot be inverted */
 383:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_TEST_FAILURE   = -6         /**< Test Failed */
 384:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_status;
 385:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 386:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 387:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 388:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 389:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int8_t q7_t;
 390:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 391:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 392:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 393:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 394:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int16_t q15_t;
 395:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 396:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 397:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 398:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 399:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int32_t q31_t;
 400:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 401:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 402:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 403:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 404:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int64_t q63_t;
 405:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 406:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 407:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 408:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 409:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef float float32_t;
 410:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 411:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 14


 412:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 413:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 414:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef double float64_t;
 415:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 416:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 417:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 418:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief definition to read/write two 16 bit values.
 419:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @deprecated
 420:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 421:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 422:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 423:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 424:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 425:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 426:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 427:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 428:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 429:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 430:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 431:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 432:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 433:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 434:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
 435:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined(_MSC_VER )
 436:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 437:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 438:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 439:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 440:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 441:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 442:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
 443:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
 444:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
 445:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 446:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /* SIMD replacement */
 447:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 448:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 449:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 450:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer.
 451:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 452:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 453:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 454:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
 455:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15)
 456:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 457:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 458:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 459:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, pQ15, 4);
 460:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 461:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 462:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 463:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 464:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 465:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and increment pointer afterwards.
 466:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 467:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 468:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 15


 469:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_ia (
 151              		.loc 2 469 28 view .LVU49
 152              	.LBB47:
 470:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 471:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 153              		.loc 2 472 3 view .LVU50
 473:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 154              		.loc 2 474 3 view .LVU51
 155 005a 1068     		ldr	r0, [r2]	@ unaligned
 156              	.LVL16:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 157              		.loc 2 475 3 view .LVU52
 476:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 477:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 158              		.loc 2 477 3 view .LVU53
 159              		.loc 2 477 3 is_stmt 0 view .LVU54
 160              	.LBE47:
 161              	.LBE46:
 132:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 162              		.loc 1 132 9 is_stmt 1 view .LVU55
 122:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 163              		.loc 1 122 13 is_stmt 0 view .LVU56
 164 005c 0139     		subs	r1, r1, #1
 165              	.LVL17:
 122:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 166              		.loc 1 122 13 view .LVU57
 167 005e 02F10802 		add	r2, r2, #8
 168              	.LVL18:
 139:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 140:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Unpack and store second element in destination */
 141:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 142:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px = (q15_t) ((in & (q31_t) 0xffff0000) >> 16);
 169              		.loc 1 142 50 view .LVU58
 170 0062 4FEA2049 		asr	r9, r0, #16
 132:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 171              		.loc 1 132 15 view .LVU59
 172 0066 1880     		strh	r0, [r3]	@ movhi
 138:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 173              		.loc 1 138 9 is_stmt 1 view .LVU60
 174              	.LVL19:
 175              		.loc 1 142 9 view .LVU61
 176              		.loc 1 142 15 is_stmt 0 view .LVU62
 177 0068 23F80490 		strh	r9, [r3, r4]	@ movhi
 143:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 144:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px = (q15_t) in;
 145:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif /* #ifndef ARM_MATH_BIG_ENDIAN */
 146:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 147:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Update pointer px to point to next row of transposed matrix */
 148:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         px += numRowsB;
 178              		.loc 1 148 9 is_stmt 1 view .LVU63
 179              	.LVL20:
 149:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 150:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         in = read_q15x2_ia ((q15_t **) &pInB);
 180              		.loc 1 150 9 view .LVU64
 181              	.LBB48:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 16


 182              	.LBI48:
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 183              		.loc 2 469 28 view .LVU65
 184              	.LBB49:
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 185              		.loc 2 472 3 view .LVU66
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 186              		.loc 2 474 3 view .LVU67
 187 006c 52F8040C 		ldr	r0, [r2, #-4]	@ unaligned
 188              	.LVL21:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 189              		.loc 2 475 3 view .LVU68
 190              		.loc 2 477 3 view .LVU69
 191              		.loc 2 477 3 is_stmt 0 view .LVU70
 192              	.LBE49:
 193              	.LBE48:
 151:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 152:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px = (q15_t) in;
 194              		.loc 1 152 9 is_stmt 1 view .LVU71
 153:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 154:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px = (q15_t) ((in & (q31_t) 0xffff0000) >> 16);
 155:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif /* #ifndef ARM_MATH_BIG_ENDIAN */
 156:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         px += numRowsB;
 157:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 158:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 159:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px = (q15_t) ((in & (q31_t) 0xffff0000) >> 16);
 195              		.loc 1 159 50 is_stmt 0 view .LVU72
 196 0070 4FEA2049 		asr	r9, r0, #16
 152:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 197              		.loc 1 152 15 view .LVU73
 198 0074 23F81400 		strh	r0, [r3, r4, lsl #1]	@ movhi
 156:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 199              		.loc 1 156 9 is_stmt 1 view .LVU74
 200              	.LVL22:
 201              		.loc 1 159 9 view .LVU75
 202              		.loc 1 159 15 is_stmt 0 view .LVU76
 203 0078 23F80590 		strh	r9, [r3, r5]	@ movhi
 160:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 161:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px = (q15_t) in;
 162:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif /* #ifndef ARM_MATH_BIG_ENDIAN */
 163:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         px += numRowsB;
 204              		.loc 1 163 9 is_stmt 1 view .LVU77
 205 007c 3344     		add	r3, r3, r6
 206              	.LVL23:
 164:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 165:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else /* #if defined (ARM_MATH_DSP) */
 166:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 167:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Read one element from row */
 168:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         in = *pInB++;
 169:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 170:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Store one element in destination */
 171:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px = in;
 172:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 173:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Update pointer px to point to next row of transposed matrix */
 174:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         px += numRowsB;
 175:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 176:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         in = *pInB++;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 17


 177:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px = in;
 178:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         px += numRowsB;
 179:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 180:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         in = *pInB++;
 181:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px = in;
 182:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         px += numRowsB;
 183:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 184:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         in = *pInB++;
 185:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px = in;
 186:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         px += numRowsB;
 187:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 188:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif /* #if defined (ARM_MATH_DSP) */
 189:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 190:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Decrement column loop counter */
 191:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         col--;
 207              		.loc 1 191 9 view .LVU78
 122:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 208              		.loc 1 122 13 view .LVU79
 209 007e ECD1     		bne	.L3
 210 0080 009B     		ldr	r3, [sp]
 211              	.LVL24:
 122:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 212              		.loc 1 122 13 is_stmt 0 view .LVU80
 213 0082 5744     		add	r7, r7, r10
 214 0084 6344     		add	r3, r3, ip
 215              	.LVL25:
 216              	.L2:
 192:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       }
 193:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 194:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       /* If the columns of pSrcB is not a multiple of 4, compute any remaining output samples here.
 195:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****        ** No loop unrolling is used. */
 196:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       col = numColsB % 0x4U;
 217              		.loc 1 196 7 is_stmt 1 view .LVU81
 197:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 198:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       while (col > 0U)
 218              		.loc 1 198 7 view .LVU82
 219              		.loc 1 198 13 view .LVU83
 220 0086 B8F1000F 		cmp	r8, #0
 221 008a 08D0     		beq	.L4
 222 008c 3946     		mov	r1, r7
 223 008e 4246     		mov	r2, r8
 224              	.LVL26:
 225              	.L5:
 199:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 200:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Read and store input element in destination */
 201:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px = *pInB++;
 226              		.loc 1 201 9 view .LVU84
 227              		.loc 1 201 15 is_stmt 0 view .LVU85
 228 0090 31F9020B 		ldrsh	r0, [r1], #2
 229              	.LVL27:
 198:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 230              		.loc 1 198 13 view .LVU86
 231 0094 013A     		subs	r2, r2, #1
 232              	.LVL28:
 233              		.loc 1 201 13 view .LVU87
 234 0096 1880     		strh	r0, [r3]	@ movhi
 202:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 18


 203:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Update pointer px to point to next row of transposed matrix */
 204:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         px += numRowsB;
 235              		.loc 1 204 9 is_stmt 1 view .LVU88
 236              		.loc 1 204 12 is_stmt 0 view .LVU89
 237 0098 2344     		add	r3, r3, r4
 238              	.LVL29:
 205:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 206:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Decrement column loop counter */
 207:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         col--;
 239              		.loc 1 207 9 is_stmt 1 view .LVU90
 198:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 240              		.loc 1 198 13 view .LVU91
 241 009a F9D1     		bne	.L5
 242 009c 5F44     		add	r7, r7, fp
 243              	.LVL30:
 244              	.L4:
 208:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       }
 209:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 210:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       i++;
 245              		.loc 1 210 7 view .LVU92
 211:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 212:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       /* Decrement row loop counter */
 213:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       row--;
 246              		.loc 1 213 7 view .LVU93
 214:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 215:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     } while (row > 0U);
 247              		.loc 1 215 13 view .LVU94
 248 009e 0CF1020C 		add	ip, ip, #2
 249              		.loc 1 215 5 is_stmt 0 view .LVU95
 250 00a2 0D9B     		ldr	r3, [sp, #52]
 251              	.LVL31:
 252              		.loc 1 215 5 view .LVU96
 253 00a4 9C45     		cmp	ip, r3
 254 00a6 D2D1     		bne	.L6
 216:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 217:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     /* Reset variables for usage in following multiplication process */
 218:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     row = numRowsA;
 255              		.loc 1 218 5 is_stmt 1 view .LVU97
 256              	.LVL32:
 219:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     i = 0U;
 257              		.loc 1 219 5 view .LVU98
 220:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     px = pDst->pData;
 258              		.loc 1 220 5 view .LVU99
 221:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 222:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #if defined (ARM_MATH_DSP)
 223:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     /* Process two rows from matrix A at a time and output two rows at a time */
 224:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     row = row >> 1U;
 225:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     px2 = px + numColsB;
 259              		.loc 1 225 14 is_stmt 0 view .LVU100
 260 00a8 199A     		ldr	r2, [sp, #100]
 220:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     px = pDst->pData;
 261              		.loc 1 220 8 view .LVU101
 262 00aa 019B     		ldr	r3, [sp, #4]
 263              		.loc 1 225 14 view .LVU102
 264 00ac 5100     		lsls	r1, r2, #1
 220:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     px = pDst->pData;
 265              		.loc 1 220 8 view .LVU103
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 19


 266 00ae 5B68     		ldr	r3, [r3, #4]
 267              		.loc 1 225 14 view .LVU104
 268 00b0 0F91     		str	r1, [sp, #60]
 269              		.loc 1 225 9 view .LVU105
 270 00b2 03EB4201 		add	r1, r3, r2, lsl #1
 220:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     px = pDst->pData;
 271              		.loc 1 220 8 view .LVU106
 272 00b6 1C93     		str	r3, [sp, #112]
 273              	.LVL33:
 224:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     px2 = px + numColsB;
 274              		.loc 1 224 5 is_stmt 1 view .LVU107
 275              		.loc 1 225 5 view .LVU108
 276              		.loc 1 225 9 is_stmt 0 view .LVU109
 277 00b8 0C91     		str	r1, [sp, #48]
 278              	.LVL34:
 226:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif
 227:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 228:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     /* The following loop performs the dot-product of each row in pSrcA with each column in pSrcB *
 229:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     /* row loop */
 230:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     while (row > 0U)
 279              		.loc 1 230 5 is_stmt 1 view .LVU110
 280              		.loc 1 230 11 view .LVU111
 281 00ba 1799     		ldr	r1, [sp, #92]
 282              	.LVL35:
 283              		.loc 1 230 11 is_stmt 0 view .LVU112
 284 00bc 4908     		lsrs	r1, r1, #1
 285              	.LVL36:
 286              		.loc 1 230 11 view .LVU113
 287 00be 0E91     		str	r1, [sp, #56]
 288 00c0 00F0A880 		beq	.L7
 231:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     {
 232:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       /* For every row wise process, column loop counter is to be initiated */
 233:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       col = numColsB;
 234:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 235:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       /* For every row wise process, pIn2 pointer is set to starting address of transposed pSrcB da
 236:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       pInB = pSrcBT;
 237:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 238:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #if defined (ARM_MATH_DSP)
 239:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       /* Process two (transposed) columns from matrix B at a time */
 240:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       col = col >> 1U;
 289              		.loc 1 240 11 view .LVU114
 290 00c4 5108     		lsrs	r1, r2, #1
 291              	.LVL37:
 292              		.loc 1 240 11 view .LVU115
 293 00c6 02F00104 		and	r4, r2, #1
 241:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       j = 0;
 242:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif
 243:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 244:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       /* column loop */
 245:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       while (col > 0U)
 246:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 247:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Set variable sum, that acts as accumulator, to zero */
 248:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         sum = 0;
 249:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 250:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Initiate pointer pInA to point to starting address of column being processed */
 251:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         pInA = pSrcA->pData + i;
 252:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 20


 253:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #if defined (ARM_MATH_DSP)
 254:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         sum2 = 0;
 255:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         sum3 = 0;
 256:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         sum4 = 0;
 257:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         pInB  = pSrcBT + j;
 258:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         pInA2 = pInA + numColsA;
 259:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         pInB2 = pInB + numRowsB;
 260:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 261:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Read in two elements at once - alows dual MAC instruction */
 262:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         colCnt = numColsA >> 1U;
 294              		.loc 1 262 27 view .LVU116
 295 00ca 1A9A     		ldr	r2, [sp, #104]
 296 00cc 8E00     		lsls	r6, r1, #2
 240:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       j = 0;
 297              		.loc 1 240 11 view .LVU117
 298 00ce 1291     		str	r1, [sp, #72]
 299              		.loc 1 262 27 view .LVU118
 300 00d0 5008     		lsrs	r0, r2, #1
 301 00d2 189D     		ldr	r5, [sp, #96]
 302 00d4 1D94     		str	r4, [sp, #116]
 303 00d6 8100     		lsls	r1, r0, #2
 304 00d8 0590     		str	r0, [sp, #20]
 305 00da 0395     		str	r5, [sp, #12]
 306 00dc 0B91     		str	r1, [sp, #44]
 307 00de 02F00101 		and	r1, r2, #1
 308 00e2 1596     		str	r6, [sp, #84]
 309 00e4 0991     		str	r1, [sp, #36]
 310 00e6 311D     		adds	r1, r6, #4
 311 00e8 1691     		str	r1, [sp, #88]
 312 00ea 05EB8001 		add	r1, r5, r0, lsl #2
 313 00ee 0491     		str	r1, [sp, #16]
 263:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 264:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         colCnt = numColsA >> 2U;
 265:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif
 266:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 267:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* matrix multiplication */
 268:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         while (colCnt > 0U)
 269:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 270:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           /* c(m,n) = a(1,1) * b(1,1) + a(1,2) * b(2,1) + .... + a(m,p) * b(p,n) */
 271:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 272:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #if defined (ARM_MATH_DSP)
 273:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           /* read real and imag values from pSrcA and pSrcB buffer */
 274:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA1 = read_q15x2_ia ((q15_t **) &pInA);
 275:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB1 = read_q15x2_ia ((q15_t **) &pInB);
 276:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 277:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA2 = read_q15x2_ia ((q15_t **) &pInA2);
 278:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB2 = read_q15x2_ia ((q15_t **) &pInB2);
 279:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 280:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           /* Multiply and Accumlates */
 281:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum  = __SMLAD(inA1, inB1, sum);
 282:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum2 = __SMLAD(inA1, inB2, sum2);
 283:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum3 = __SMLAD(inA2, inB1, sum3);
 284:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum4 = __SMLAD(inA2, inB2, sum4);
 285:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 286:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           /* read real and imag values from pSrcA and pSrcB buffer */
 287:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA1 = *pInA++;
 288:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB1 = *pInB++;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 21


 289:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           /* Multiply and Accumlates */
 290:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum += inA1 * inB1;
 291:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 292:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA2 = *pInA++;
 293:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB2 = *pInB++;
 294:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum += inA2 * inB2;
 295:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 296:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA1 = *pInA++;
 297:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB1 = *pInB++;
 298:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum += inA1 * inB1;
 299:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 300:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA2 = *pInA++;
 301:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB2 = *pInB++;
 302:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum += inA2 * inB2;
 303:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif /* #if defined (ARM_MATH_DSP) */
 304:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 305:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           /* Decrement loop counter */
 306:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           colCnt--;
 307:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         }
 308:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 309:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* process odd column samples */
 310:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #if defined (ARM_MATH_DSP)
 311:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         if (numColsA & 1U) {
 312:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA1 = *pInA++;
 313:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB1 = *pInB++;
 314:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA2 = *pInA2++;
 315:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB2 = *pInB2++;
 316:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum  += inA1 * inB1;
 317:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum2 += inA1 * inB2;
 318:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum3 += inA2 * inB1;
 319:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum4 += inA2 * inB2;
 320:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         }
 321:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 322:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         colCnt = numColsA % 0x4U;
 323:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 324:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         while (colCnt > 0U)
 325:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 326:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           /* c(m,n) = a(1,1) * b(1,1) + a(1,2) * b(2,1) + .... + a(m,p) * b(p,n) */
 327:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum += (q31_t) *pInA++ * *pInB++;
 328:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 329:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           /* Decrement loop counter */
 330:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           colCnt--;
 331:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         }
 332:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif /* #if defined (ARM_MATH_DSP) */
 333:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 334:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Saturate and store result in destination buffer */
 335:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px++  = (q15_t) (sum >> 15);
 336:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 337:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #if defined (ARM_MATH_DSP)
 338:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px++  = (q15_t) (sum2 >> 15);
 339:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px2++ = (q15_t) (sum3 >> 15);
 340:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px2++ = (q15_t) (sum4 >> 15);
 341:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         j += numRowsB * 2;
 342:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif
 343:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 344:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Decrement column loop counter */
 345:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         col--;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 22


 346:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 347:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       }
 348:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 349:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       i = i + numColsA;
 350:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 351:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #if defined (ARM_MATH_DSP)
 352:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       i = i + numColsA;
 353:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       px = px2 + (numColsB & 1U);
 314              		.loc 1 353 16 view .LVU119
 315 00f0 6100     		lsls	r1, r4, #1
 316 00f2 1191     		str	r1, [sp, #68]
 258:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         pInB2 = pInB + numRowsB;
 317              		.loc 1 258 22 view .LVU120
 318 00f4 5100     		lsls	r1, r2, #1
 319 00f6 9200     		lsls	r2, r2, #2
 320 00f8 1491     		str	r1, [sp, #80]
 321 00fa 1392     		str	r2, [sp, #76]
 322 00fc 1B9A     		ldr	r2, [sp, #108]
 323 00fe 9200     		lsls	r2, r2, #2
 324 0100 0892     		str	r2, [sp, #32]
 325              	.LVL38:
 326              	.L13:
 233:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 327              		.loc 1 233 7 is_stmt 1 view .LVU121
 236:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 328              		.loc 1 236 7 view .LVU122
 240:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       j = 0;
 329              		.loc 1 240 7 view .LVU123
 241:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif
 330              		.loc 1 241 7 view .LVU124
 245:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 331              		.loc 1 245 7 view .LVU125
 245:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 332              		.loc 1 245 13 view .LVU126
 333 0102 129A     		ldr	r2, [sp, #72]
 334 0104 002A     		cmp	r2, #0
 335 0106 6FD0     		beq	.L8
 336 0108 149A     		ldr	r2, [sp, #80]
 337 010a 03F1040B 		add	fp, r3, #4
 338 010e 0399     		ldr	r1, [sp, #12]
 339 0110 5118     		adds	r1, r2, r1
 340 0112 0791     		str	r1, [sp, #28]
 341 0114 1699     		ldr	r1, [sp, #88]
 342 0116 0B44     		add	r3, r3, r1
 343              	.LVL39:
 245:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 344              		.loc 1 245 13 is_stmt 0 view .LVU127
 345 0118 0693     		str	r3, [sp, #24]
 346 011a 0C9B     		ldr	r3, [sp, #48]
 347 011c 0433     		adds	r3, r3, #4
 348 011e 0293     		str	r3, [sp, #8]
 349 0120 0D9B     		ldr	r3, [sp, #52]
 350 0122 0093     		str	r3, [sp]
 251:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 351              		.loc 1 251 29 view .LVU128
 352 0124 109B     		ldr	r3, [sp, #64]
 353 0126 0193     		str	r3, [sp, #4]
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 23


 354 0128 049B     		ldr	r3, [sp, #16]
 355 012a D318     		adds	r3, r2, r3
 356 012c 0A93     		str	r3, [sp, #40]
 357              	.LVL40:
 358              	.L12:
 248:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 359              		.loc 1 248 9 is_stmt 1 view .LVU129
 251:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 360              		.loc 1 251 9 view .LVU130
 254:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         sum3 = 0;
 361              		.loc 1 254 9 view .LVU131
 255:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         sum4 = 0;
 362              		.loc 1 255 9 view .LVU132
 256:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         pInB  = pSrcBT + j;
 363              		.loc 1 256 9 view .LVU133
 257:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         pInA2 = pInA + numColsA;
 364              		.loc 1 257 9 view .LVU134
 268:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 365              		.loc 1 268 15 is_stmt 0 view .LVU135
 366 012e 059B     		ldr	r3, [sp, #20]
 259:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 367              		.loc 1 259 22 view .LVU136
 368 0130 DDE900E8 		ldrd	lr, r8, [sp]
 369              	.LVL41:
 262:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 370              		.loc 1 262 9 is_stmt 1 view .LVU137
 268:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 371              		.loc 1 268 9 view .LVU138
 268:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 372              		.loc 1 268 15 view .LVU139
 373 0134 002B     		cmp	r3, #0
 374 0136 00F0C480 		beq	.L28
 256:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         pInB  = pSrcBT + j;
 375              		.loc 1 256 14 is_stmt 0 view .LVU140
 376 013a 0025     		movs	r5, #0
 258:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         pInB2 = pInB + numRowsB;
 377              		.loc 1 258 15 view .LVU141
 378 013c DDF81CA0 		ldr	r10, [sp, #28]
 251:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 379              		.loc 1 251 14 view .LVU142
 380 0140 DDF80C90 		ldr	r9, [sp, #12]
 255:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         sum4 = 0;
 381              		.loc 1 255 14 view .LVU143
 382 0144 2E46     		mov	r6, r5
 254:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         sum3 = 0;
 383              		.loc 1 254 14 view .LVU144
 384 0146 2F46     		mov	r7, r5
 248:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 385              		.loc 1 248 13 view .LVU145
 386 0148 AC46     		mov	ip, r5
 387              	.LVL42:
 388              	.L10:
 274:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB1 = read_q15x2_ia ((q15_t **) &pInB);
 389              		.loc 1 274 11 is_stmt 1 view .LVU146
 390              	.LBB50:
 391              	.LBI50:
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 24


 392              		.loc 2 469 28 view .LVU147
 393              	.LBB51:
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 394              		.loc 2 472 3 view .LVU148
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 395              		.loc 2 474 3 view .LVU149
 396 014a 59F8044B 		ldr	r4, [r9], #4	@ unaligned
 397              	.LVL43:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 398              		.loc 2 475 3 view .LVU150
 399              		.loc 2 477 3 view .LVU151
 400              		.loc 2 477 3 is_stmt 0 view .LVU152
 401              	.LBE51:
 402              	.LBE50:
 275:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 403              		.loc 1 275 11 is_stmt 1 view .LVU153
 404              	.LBB52:
 405              	.LBI52:
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 406              		.loc 2 469 28 view .LVU154
 407              	.LBB53:
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 408              		.loc 2 472 3 view .LVU155
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 409              		.loc 2 474 3 view .LVU156
 410 014e 58F8040B 		ldr	r0, [r8], #4	@ unaligned
 411              	.LVL44:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 412              		.loc 2 475 3 view .LVU157
 413              		.loc 2 477 3 view .LVU158
 414              		.loc 2 477 3 is_stmt 0 view .LVU159
 415              	.LBE53:
 416              	.LBE52:
 277:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB2 = read_q15x2_ia ((q15_t **) &pInB2);
 417              		.loc 1 277 11 is_stmt 1 view .LVU160
 418              	.LBB54:
 419              	.LBI54:
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 420              		.loc 2 469 28 view .LVU161
 421              	.LBB55:
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 422              		.loc 2 472 3 view .LVU162
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 423              		.loc 2 474 3 view .LVU163
 424 0152 5AF8042B 		ldr	r2, [r10], #4	@ unaligned
 425              	.LVL45:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 426              		.loc 2 475 3 view .LVU164
 427              		.loc 2 477 3 view .LVU165
 428              		.loc 2 477 3 is_stmt 0 view .LVU166
 429              	.LBE55:
 430              	.LBE54:
 278:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 431              		.loc 1 278 11 is_stmt 1 view .LVU167
 432              	.LBB56:
 433              	.LBI56:
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 25


 434              		.loc 2 469 28 view .LVU168
 435              	.LBB57:
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 436              		.loc 2 472 3 view .LVU169
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 437              		.loc 2 474 3 view .LVU170
 438 0156 5EF8041B 		ldr	r1, [lr], #4	@ unaligned
 439              	.LVL46:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 440              		.loc 2 475 3 view .LVU171
 441              		.loc 2 477 3 view .LVU172
 442              		.loc 2 477 3 is_stmt 0 view .LVU173
 443              	.LBE57:
 444              	.LBE56:
 281:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum2 = __SMLAD(inA1, inB2, sum2);
 445              		.loc 1 281 11 is_stmt 1 view .LVU174
 446              	.LBB58:
 447              	.LBI58:
 448              		.file 3 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 26


  39:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 27


  96:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 28


 153:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 29


 210:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 30


 267:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 31


 324:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 32


 381:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 33


 438:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 34


 495:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 35


 552:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 36


 609:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 37


 666:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 38


 723:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 39


 780:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 40


 837:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 41


 894:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 948:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 949:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 950:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 42


 951:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 955:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 957:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 959:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 960:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 962:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 966:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 967:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 969:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 972:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 973:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 974:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 976:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 977:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 980:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 981:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 985:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 990:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 992:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 994:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 996:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1000:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1006:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
1007:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 43


1008:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1010:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1011:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1012:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1013:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1014:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1015:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1020:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1021:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1023:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1026:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
1027:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1030:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1032:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1033:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1039:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1041:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1042:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1043:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1047:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1048:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1050:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1051:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1052:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1057:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1062:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
1063:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 44


1065:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1066:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1068:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1069:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1070:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1071:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1072:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1073:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1078:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1080:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
1086:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    */
1089:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
1090:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1091:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
1092:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1093:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1095:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1096:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1097:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1102:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1107:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1109:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1110:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1111:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1114:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1117:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1119:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1121:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 45


1122:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1123:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1124:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1129:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1131:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1132:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1133:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1136:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1139:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1141:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1143:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1144:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1145:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1146:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1151:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1152:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1153:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1155:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
1156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1157:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1159:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1160:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1161:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1168:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1170:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1171:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1172:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1174:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1175:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1176:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1177:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1178:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 46


1179:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1185:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1187:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1188:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1189:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1191:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1192:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1193:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1194:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1195:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1202:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1203:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1204:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1205:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1206:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
1207:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1208:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1209:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1210:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1211:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1212:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
1213:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1214:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1215:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
1216:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1217:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1218:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1219:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1220:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1221:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1222:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1223:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1224:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1225:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1226:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1227:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1228:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1229:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1230:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1231:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1232:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1233:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
1234:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1235:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 47


1236:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1237:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __extension__ \
1238:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1239:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1240:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1241:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1242:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1243:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1244:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1245:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1246:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1247:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1248:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1249:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
1250:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1251:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1252:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1253:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  __extension__ \
1254:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1255:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1256:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1257:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1258:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1259:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1260:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1261:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1262:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1263:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1264:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1265:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
1266:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1267:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1268:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
1269:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1270:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1271:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1272:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1273:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1274:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1275:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1276:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1277:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1278:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1279:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1280:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1281:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1282:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1283:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1284:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1285:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1286:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1287:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1288:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1289:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1290:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1291:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1292:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 48


1293:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1294:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1295:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1296:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1297:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1298:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1299:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1300:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1301:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1302:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1303:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1304:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1305:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1306:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1307:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1308:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1309:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1310:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1311:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1312:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1313:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1314:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1315:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1316:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1317:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1318:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1319:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1320:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1321:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1322:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1323:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1324:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1325:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1326:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1327:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
1328:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1329:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1330:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1331:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1332:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1333:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1334:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1335:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1336:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1337:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1338:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1339:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1340:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1341:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1342:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1343:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1344:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1345:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1346:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1347:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1348:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1349:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 49


1350:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1351:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1352:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1353:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1354:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1355:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1356:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1357:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1358:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1359:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1360:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1361:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1362:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1363:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1364:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1365:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1366:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1367:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1368:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1369:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1370:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1371:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1372:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1373:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1374:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1375:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1376:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1377:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1378:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1379:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1380:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1381:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1382:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
1383:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1384:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
1385:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1386:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
1387:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
1388:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > max)
1389:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1390:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1391:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1392:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < min)
1393:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1394:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return min;
1395:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1396:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1397:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return val;
1398:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1399:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1400:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1401:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1402:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1403:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1404:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1405:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1406:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 50


1407:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
1408:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1409:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (sat <= 31U)
1410:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1411:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
1412:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
1413:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1414:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1415:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1416:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < 0)
1417:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1418:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return 0U;
1419:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1420:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1421:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (uint32_t)val;
1422:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1423:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1424:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1425:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1426:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1427:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1428:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1429:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1430:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1431:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1432:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1433:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1434:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1435:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1436:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1437:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
1438:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1439:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1440:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1441:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1442:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1443:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1444:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1445:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1446:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1447:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1448:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1449:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1450:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1451:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1452:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
1453:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1454:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1455:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1456:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1457:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1458:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1459:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1460:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1461:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1462:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1463:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 51


1464:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1465:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1466:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1467:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
1468:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1469:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1470:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1471:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1472:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1473:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1474:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1475:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1476:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1477:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1478:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1479:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1480:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1481:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1482:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1483:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1484:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1485:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1486:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1487:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1488:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1489:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1490:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1491:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1492:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1493:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1494:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1495:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1496:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1497:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1498:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1499:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1500:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1501:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1502:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1503:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1504:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1505:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1506:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1507:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1508:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1509:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1510:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1511:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1512:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1513:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1514:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1515:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1516:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1517:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1518:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1519:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1520:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 52


1521:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1522:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1523:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1524:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1525:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1526:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1527:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1528:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1529:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1530:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1531:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1532:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1533:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1534:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1535:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1536:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1537:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1538:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1539:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1540:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1541:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1542:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1543:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1544:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1545:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1546:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1547:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1548:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1549:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1550:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1551:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1552:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1553:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1554:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1555:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1556:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1557:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1558:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1559:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1560:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1561:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1562:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1563:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1564:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1565:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
1566:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1567:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1568:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1569:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1570:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1571:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1572:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1573:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1574:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1575:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1576:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1577:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 53


1578:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1579:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1580:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1581:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1582:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
1583:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1584:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1585:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1586:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1587:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1588:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1589:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1590:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1591:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1592:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1593:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1594:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1595:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1596:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1597:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1598:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1599:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
1600:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1601:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1602:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1603:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1604:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1605:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1606:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1607:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1608:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1609:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1610:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1611:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1612:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1613:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1614:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1615:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated SIMD instructions
1616:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
1617:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
1618:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1619:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
1620:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1621:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1622:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1623:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1624:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1625:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1626:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1627:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1628:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1629:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1630:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1631:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1632:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1633:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1634:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 54


1635:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1636:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1637:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1638:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1639:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1640:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1641:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1642:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1643:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1644:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1645:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1646:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1647:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1648:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1649:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1650:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1651:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1652:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1653:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1654:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1655:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1656:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1657:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1658:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1659:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1660:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1661:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1662:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1663:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1664:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1665:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1666:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1667:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1668:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1669:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1670:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1671:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1672:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1673:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1674:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1675:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1676:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1677:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1678:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1679:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1680:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1681:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1682:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1683:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1684:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1685:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1686:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1687:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1688:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1689:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1690:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1691:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 55


1692:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1693:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1694:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1695:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1696:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1697:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1698:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1699:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1700:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1701:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1702:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1703:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1704:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1705:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1706:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1707:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1708:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1709:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1710:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1711:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1712:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1713:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1714:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1715:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1716:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1717:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1718:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1719:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1720:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1721:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1722:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1723:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1724:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1725:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1726:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1727:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1728:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1729:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1730:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1731:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1732:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1733:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1734:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1736:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1738:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1741:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1742:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1743:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1744:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1745:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1746:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1747:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1748:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 56


1749:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1750:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1751:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1752:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1753:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1754:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1755:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1756:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1757:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1758:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1759:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1760:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1761:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1762:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1763:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1764:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1765:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1766:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1767:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1768:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1769:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1770:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1771:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1772:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1773:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1774:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1775:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1776:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1777:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1778:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1779:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1780:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1781:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1782:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1783:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1784:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1785:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1786:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1787:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1788:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1789:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1790:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1791:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1792:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1793:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1794:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1795:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1796:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1797:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1798:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1799:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1800:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1801:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1802:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1803:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1804:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1805:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 57


1806:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1807:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1808:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1809:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1810:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1811:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1812:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1813:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1814:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1815:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1816:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1817:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1818:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1819:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1820:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1821:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1822:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1823:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1824:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1825:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1826:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1827:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1828:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1829:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1830:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1831:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1832:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1833:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1834:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1835:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1836:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1837:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1838:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1839:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1840:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1841:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1842:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1843:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1844:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1845:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1846:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1847:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1848:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1849:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1850:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1851:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1852:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1853:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1854:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1855:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1856:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1857:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1858:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1859:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1860:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1861:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1862:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 58


1863:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1864:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1865:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1866:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1867:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1868:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1869:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1870:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1871:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1872:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1873:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1874:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1875:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1876:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1877:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1878:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1879:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1880:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1881:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1882:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1883:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1884:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1885:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1886:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1887:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1888:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1889:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1890:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1891:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1892:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1893:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1894:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1895:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1896:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1897:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1898:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1899:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1900:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1901:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1902:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1903:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1904:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1905:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1906:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1907:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1908:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1909:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1910:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1911:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1912:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1913:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1914:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1915:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1916:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1917:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1918:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1919:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 59


1920:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1921:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1922:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1923:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1924:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1925:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1926:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1927:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1928:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1929:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1930:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1931:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1932:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1933:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1934:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1935:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1936:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1937:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1938:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1939:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1940:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1941:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTB16(uint32_t op1)
1942:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1943:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1944:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1945:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1946:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1947:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1948:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1949:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1950:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1951:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1952:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1953:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1954:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1955:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1956:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1957:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTB16(uint32_t op1)
1958:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1959:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1960:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1962:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1963:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1964:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1965:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1966:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1967:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1968:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1969:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1970:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1971:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1972:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1973:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1974:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1975:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1976:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 60


1977:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1978:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1979:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1980:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1981:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1982:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1983:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1984:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1985:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1986:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1987:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1988:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32_t op3)
 449              		.loc 3 1989 31 view .LVU175
 450              	.LBB59:
1990:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 451              		.loc 3 1991 3 view .LVU176
1992:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 452              		.loc 3 1993 3 view .LVU177
 453              		.syntax unified
 454              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 455 015a 24FB00CC 		smlad ip, r4, r0, ip
 456              	@ 0 "" 2
 457              	.LVL47:
1994:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 458              		.loc 3 1994 3 view .LVU178
 459              		.loc 3 1994 3 is_stmt 0 view .LVU179
 460              		.thumb
 461              		.syntax unified
 462              	.LBE59:
 463              	.LBE58:
 282:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum3 = __SMLAD(inA2, inB1, sum3);
 464              		.loc 1 282 11 is_stmt 1 view .LVU180
 465              	.LBB60:
 466              	.LBI60:
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 467              		.loc 3 1989 31 view .LVU181
 468              	.LBB61:
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 469              		.loc 3 1991 3 view .LVU182
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470              		.loc 3 1993 3 view .LVU183
 471              		.syntax unified
 472              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 473 015e 24FB0177 		smlad r7, r4, r1, r7
 474              	@ 0 "" 2
 475              	.LVL48:
 476              		.loc 3 1994 3 view .LVU184
 477              		.loc 3 1994 3 is_stmt 0 view .LVU185
 478              		.thumb
 479              		.syntax unified
 480              	.LBE61:
 481              	.LBE60:
 283:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum4 = __SMLAD(inA2, inB2, sum4);
 482              		.loc 1 283 11 is_stmt 1 view .LVU186
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 61


 483              	.LBB62:
 484              	.LBI62:
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 485              		.loc 3 1989 31 view .LVU187
 486              	.LBB63:
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 487              		.loc 3 1991 3 view .LVU188
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 488              		.loc 3 1993 3 view .LVU189
 489              		.syntax unified
 490              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 491 0162 22FB0066 		smlad r6, r2, r0, r6
 492              	@ 0 "" 2
 493              	.LVL49:
 494              		.loc 3 1994 3 view .LVU190
 495              		.loc 3 1994 3 is_stmt 0 view .LVU191
 496              		.thumb
 497              		.syntax unified
 498              	.LBE63:
 499              	.LBE62:
 284:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #else
 500              		.loc 1 284 11 is_stmt 1 view .LVU192
 501              	.LBB64:
 502              	.LBI64:
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 503              		.loc 3 1989 31 view .LVU193
 504              	.LBB65:
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 505              		.loc 3 1991 3 view .LVU194
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 506              		.loc 3 1993 3 view .LVU195
 507              		.syntax unified
 508              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 509 0166 22FB0155 		smlad r5, r2, r1, r5
 510              	@ 0 "" 2
 511              	.LVL50:
 512              		.loc 3 1994 3 view .LVU196
 513              		.loc 3 1994 3 is_stmt 0 view .LVU197
 514              		.thumb
 515              		.syntax unified
 516              	.LBE65:
 517              	.LBE64:
 306:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         }
 518              		.loc 1 306 11 is_stmt 1 view .LVU198
 268:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 519              		.loc 1 268 15 view .LVU199
 520 016a 013B     		subs	r3, r3, #1
 521              	.LVL51:
 268:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 522              		.loc 1 268 15 is_stmt 0 view .LVU200
 523 016c EDD1     		bne	.L10
 524 016e 009B     		ldr	r3, [sp]
 525              	.LVL52:
 268:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 526              		.loc 1 268 15 view .LVU201
 527 0170 0A9A     		ldr	r2, [sp, #40]
 528              	.LVL53:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 62


 268:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 529              		.loc 1 268 15 view .LVU202
 530 0172 1946     		mov	r1, r3
 531              	.LVL54:
 268:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 532              		.loc 1 268 15 view .LVU203
 533 0174 0B9B     		ldr	r3, [sp, #44]
 534 0176 01EB030E 		add	lr, r1, r3
 535              	.LVL55:
 268:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 536              		.loc 1 268 15 view .LVU204
 537 017a 0199     		ldr	r1, [sp, #4]
 538 017c 03EB0108 		add	r8, r3, r1
 539              	.LVL56:
 268:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 540              		.loc 1 268 15 view .LVU205
 541 0180 049B     		ldr	r3, [sp, #16]
 542              	.LVL57:
 543              	.L9:
 311:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA1 = *pInA++;
 544              		.loc 1 311 9 is_stmt 1 view .LVU206
 311:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA1 = *pInA++;
 545              		.loc 1 311 12 is_stmt 0 view .LVU207
 546 0182 0999     		ldr	r1, [sp, #36]
 547 0184 79B1     		cbz	r1, .L11
 312:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB1 = *pInB++;
 548              		.loc 1 312 11 is_stmt 1 view .LVU208
 549              	.LVL58:
 312:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB1 = *pInB++;
 550              		.loc 1 312 18 is_stmt 0 view .LVU209
 551 0186 B3F90030 		ldrsh	r3, [r3]
 552              	.LVL59:
 313:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA2 = *pInA2++;
 553              		.loc 1 313 11 is_stmt 1 view .LVU210
 313:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA2 = *pInA2++;
 554              		.loc 1 313 18 is_stmt 0 view .LVU211
 555 018a B8F90010 		ldrsh	r1, [r8]
 556              	.LVL60:
 314:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB2 = *pInB2++;
 557              		.loc 1 314 11 is_stmt 1 view .LVU212
 314:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB2 = *pInB2++;
 558              		.loc 1 314 18 is_stmt 0 view .LVU213
 559 018e B2F90020 		ldrsh	r2, [r2]
 560              	.LVL61:
 315:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum  += inA1 * inB1;
 561              		.loc 1 315 11 is_stmt 1 view .LVU214
 315:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum  += inA1 * inB1;
 562              		.loc 1 315 18 is_stmt 0 view .LVU215
 563 0192 BEF90000 		ldrsh	r0, [lr]
 564              	.LVL62:
 316:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum2 += inA1 * inB2;
 565              		.loc 1 316 11 is_stmt 1 view .LVU216
 316:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum2 += inA1 * inB2;
 566              		.loc 1 316 16 is_stmt 0 view .LVU217
 567 0196 03FB01CC 		mla	ip, r3, r1, ip
 568              	.LVL63:
 317:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum3 += inA2 * inB1;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 63


 569              		.loc 1 317 11 is_stmt 1 view .LVU218
 318:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum4 += inA2 * inB2;
 570              		.loc 1 318 16 is_stmt 0 view .LVU219
 571 019a 01FB0266 		mla	r6, r1, r2, r6
 317:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum3 += inA2 * inB1;
 572              		.loc 1 317 16 view .LVU220
 573 019e 03FB0077 		mla	r7, r3, r0, r7
 574              	.LVL64:
 318:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum4 += inA2 * inB2;
 575              		.loc 1 318 11 is_stmt 1 view .LVU221
 319:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         }
 576              		.loc 1 319 11 view .LVU222
 319:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         }
 577              		.loc 1 319 16 is_stmt 0 view .LVU223
 578 01a2 02FB0055 		mla	r5, r2, r0, r5
 579              	.LVL65:
 580              	.L11:
 335:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 581              		.loc 1 335 9 is_stmt 1 view .LVU224
 335:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 582              		.loc 1 335 9 is_stmt 0 view .LVU225
 583 01a6 019A     		ldr	r2, [sp, #4]
 335:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 584              		.loc 1 335 31 view .LVU226
 585 01a8 4FEAEC3C 		asr	ip, ip, #15
 586              	.LVL66:
 335:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 587              		.loc 1 335 31 view .LVU227
 588 01ac 089B     		ldr	r3, [sp, #32]
 338:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px2++ = (q15_t) (sum3 >> 15);
 589              		.loc 1 338 32 view .LVU228
 590 01ae FF13     		asrs	r7, r7, #15
 591              	.LVL67:
 338:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px2++ = (q15_t) (sum3 >> 15);
 592              		.loc 1 338 32 view .LVU229
 593 01b0 1146     		mov	r1, r2
 594 01b2 009A     		ldr	r2, [sp]
 339:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px2++ = (q15_t) (sum4 >> 15);
 595              		.loc 1 339 32 view .LVU230
 596 01b4 F613     		asrs	r6, r6, #15
 597              	.LVL68:
 335:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 598              		.loc 1 335 18 view .LVU231
 599 01b6 2BF804CC 		strh	ip, [fp, #-4]	@ movhi
 338:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px2++ = (q15_t) (sum3 >> 15);
 600              		.loc 1 338 9 is_stmt 1 view .LVU232
 601              	.LVL69:
 338:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px2++ = (q15_t) (sum3 >> 15);
 602              		.loc 1 338 9 is_stmt 0 view .LVU233
 603 01ba 1944     		add	r1, r1, r3
 604 01bc 1A44     		add	r2, r2, r3
 340:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         j += numRowsB * 2;
 605              		.loc 1 340 32 view .LVU234
 606 01be ED13     		asrs	r5, r5, #15
 607              	.LVL70:
 339:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px2++ = (q15_t) (sum4 >> 15);
 608              		.loc 1 339 18 view .LVU235
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 64


 609 01c0 029B     		ldr	r3, [sp, #8]
 338:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px2++ = (q15_t) (sum3 >> 15);
 610              		.loc 1 338 18 view .LVU236
 611 01c2 2BF8027C 		strh	r7, [fp, #-2]	@ movhi
 339:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px2++ = (q15_t) (sum4 >> 15);
 612              		.loc 1 339 9 is_stmt 1 view .LVU237
 339:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px2++ = (q15_t) (sum4 >> 15);
 613              		.loc 1 339 9 is_stmt 0 view .LVU238
 614 01c6 0BF1040B 		add	fp, fp, #4
 615              	.LVL71:
 339:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px2++ = (q15_t) (sum4 >> 15);
 616              		.loc 1 339 18 view .LVU239
 617 01ca 23F8046C 		strh	r6, [r3, #-4]	@ movhi
 340:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         j += numRowsB * 2;
 618              		.loc 1 340 9 is_stmt 1 view .LVU240
 340:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         j += numRowsB * 2;
 619              		.loc 1 340 9 is_stmt 0 view .LVU241
 620 01ce 0433     		adds	r3, r3, #4
 340:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         j += numRowsB * 2;
 621              		.loc 1 340 18 view .LVU242
 622 01d0 23F8065C 		strh	r5, [r3, #-6]	@ movhi
 341:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif
 623              		.loc 1 341 9 is_stmt 1 view .LVU243
 345:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 624              		.loc 1 345 9 view .LVU244
 245:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 625              		.loc 1 245 13 view .LVU245
 626 01d4 0293     		str	r3, [sp, #8]
 627 01d6 069B     		ldr	r3, [sp, #24]
 628 01d8 0191     		str	r1, [sp, #4]
 629 01da 5B45     		cmp	r3, fp
 630 01dc 0092     		str	r2, [sp]
 631 01de A6D1     		bne	.L12
 632 01e0 0C9B     		ldr	r3, [sp, #48]
 633 01e2 159A     		ldr	r2, [sp, #84]
 634 01e4 1344     		add	r3, r3, r2
 635 01e6 0C93     		str	r3, [sp, #48]
 636              	.LVL72:
 637              	.L8:
 349:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 638              		.loc 1 349 7 view .LVU246
 352:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       px = px2 + (numColsB & 1U);
 639              		.loc 1 352 7 view .LVU247
 640              		.loc 1 353 7 view .LVU248
 641 01e8 0399     		ldr	r1, [sp, #12]
 642              		.loc 1 353 10 is_stmt 0 view .LVU249
 643 01ea 0C9B     		ldr	r3, [sp, #48]
 644 01ec 119A     		ldr	r2, [sp, #68]
 645 01ee 0846     		mov	r0, r1
 646 01f0 0499     		ldr	r1, [sp, #16]
 647 01f2 1344     		add	r3, r3, r2
 648              	.LVL73:
 354:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       px2 = px + numColsB;
 649              		.loc 1 354 7 is_stmt 1 view .LVU250
 650 01f4 139A     		ldr	r2, [sp, #76]
 651 01f6 1044     		add	r0, r0, r2
 652 01f8 1144     		add	r1, r1, r2
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 65


 653              		.loc 1 354 11 is_stmt 0 view .LVU251
 654 01fa 0F9A     		ldr	r2, [sp, #60]
 655 01fc 0390     		str	r0, [sp, #12]
 656 01fe 9A18     		adds	r2, r3, r2
 657 0200 0491     		str	r1, [sp, #16]
 658 0202 0C92     		str	r2, [sp, #48]
 659              	.LVL74:
 355:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif
 356:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 357:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       /* Decrement row loop counter */
 358:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       row--;
 660              		.loc 1 358 7 is_stmt 1 view .LVU252
 230:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     {
 661              		.loc 1 230 11 view .LVU253
 662 0204 0E9A     		ldr	r2, [sp, #56]
 663              	.LVL75:
 230:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     {
 664              		.loc 1 230 11 is_stmt 0 view .LVU254
 665 0206 013A     		subs	r2, r2, #1
 666              	.LVL76:
 230:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     {
 667              		.loc 1 230 11 view .LVU255
 668 0208 0E92     		str	r2, [sp, #56]
 669 020a 7FF47AAF 		bne	.L13
 359:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 360:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     }
 361:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 362:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     /* Compute any remaining odd row/column below */
 363:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 364:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #if defined (ARM_MATH_DSP)
 365:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 366:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     /* Compute remaining output column */
 367:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     if (numColsB & 1U) {
 670              		.loc 1 367 5 is_stmt 1 view .LVU256
 671              		.loc 1 367 8 is_stmt 0 view .LVU257
 672 020e 1D9B     		ldr	r3, [sp, #116]
 673              	.LVL77:
 674              		.loc 1 367 8 view .LVU258
 675 0210 002B     		cmp	r3, #0
 676 0212 5ED1     		bne	.L72
 677              	.LVL78:
 678              	.L7:
 368:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 369:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       /* Avoid redundant computation of last element */
 370:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       row = numRowsA & (~0x1);
 371:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 372:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       /* Point to remaining unfilled column in output matrix */
 373:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       px = pDst->pData + numColsB-1;
 374:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       pInA = pSrcA->pData;
 375:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 376:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       /* row loop */
 377:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       while (row > 0)
 378:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 379:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 380:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* point to last column in matrix B */
 381:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         pInB  = pSrcBT + numRowsB * (numColsB-1);
 382:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 66


 383:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Set variable sum, that acts as accumulator, to zero */
 384:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         sum  = 0;
 385:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 386:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Compute 4 columns at once */
 387:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         colCnt = numColsA >> 2U;
 388:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 389:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* matrix multiplication */
 390:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         while (colCnt > 0U)
 391:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 392:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA1 = read_q15x2_ia ((q15_t **) &pInA);
 393:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA2 = read_q15x2_ia ((q15_t **) &pInA);
 394:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB1 = read_q15x2_ia ((q15_t **) &pInB);
 395:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB2 = read_q15x2_ia ((q15_t **) &pInB);
 396:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 397:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum  = __SMLAD(inA1, inB1, sum);
 398:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum  = __SMLAD(inA2, inB2, sum);
 399:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 400:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           /* Decrement loop counter */
 401:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           colCnt--;
 402:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         }
 403:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 404:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         colCnt = numColsA & 3U;
 405:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         while (colCnt > 0U) {
 406:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum += (q31_t) (*pInA++) * (*pInB++);
 407:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           colCnt--;
 408:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         }
 409:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 410:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Store result in destination buffer */
 411:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px = (q15_t) (sum  >> 15);
 412:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         px += numColsB;
 413:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 414:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Decrement row loop counter */
 415:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         row--;
 416:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       }
 417:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     }
 418:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 419:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     /* Compute remaining output row */
 420:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     if (numRowsA & 1U) {
 679              		.loc 1 420 5 is_stmt 1 view .LVU259
 680              		.loc 1 420 8 is_stmt 0 view .LVU260
 681 0214 179B     		ldr	r3, [sp, #92]
 682 0216 DB07     		lsls	r3, r3, #31
 683 0218 4FD5     		bpl	.L47
 421:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 422:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       /* point to last row in output matrix */
 423:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       px = pDst->pData + (numColsB) * (numRowsA-1);
 684              		.loc 1 423 7 is_stmt 1 view .LVU261
 685              		.loc 1 423 48 is_stmt 0 view .LVU262
 686 021a 179B     		ldr	r3, [sp, #92]
 687              		.loc 1 423 37 view .LVU263
 688 021c 199A     		ldr	r2, [sp, #100]
 689              		.loc 1 423 48 view .LVU264
 690 021e 013B     		subs	r3, r3, #1
 691              		.loc 1 423 10 view .LVU265
 692 0220 1C99     		ldr	r1, [sp, #112]
 693              		.loc 1 423 37 view .LVU266
 694 0222 03FB02FC 		mul	ip, r3, r2
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 67


 695              		.loc 1 423 10 view .LVU267
 696 0226 01EB4C0C 		add	ip, r1, ip, lsl #1
 697              	.LVL79:
 424:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 425:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       pInB  = pSrcBT;
 698              		.loc 1 425 7 is_stmt 1 view .LVU268
 426:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       col = numColsB;
 699              		.loc 1 426 7 view .LVU269
 427:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       i = 0U;
 700              		.loc 1 427 7 view .LVU270
 428:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 429:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       /* col loop */
 430:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       while (col > 0)
 701              		.loc 1 430 7 view .LVU271
 702              		.loc 1 430 13 view .LVU272
 703 022a 002A     		cmp	r2, #0
 704 022c 45D0     		beq	.L47
 431:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 432:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* point to last row in matrix A */
 433:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         pInA = pSrcA->pData + (numRowsA-1) * numColsA;
 705              		.loc 1 433 44 is_stmt 0 view .LVU273
 706 022e 1A9A     		ldr	r2, [sp, #104]
 707 0230 03FB02F3 		mul	r3, r3, r2
 434:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 435:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Set variable sum, that acts as accumulator, to zero */
 436:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         sum  = 0;
 437:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 438:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Compute 4 columns at once */
 439:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         colCnt = numColsA >> 2U;
 708              		.loc 1 439 27 view .LVU274
 709 0234 4FEA920E 		lsr	lr, r2, #2
 710 0238 02F00308 		and	r8, r2, #3
 711 023c 0F9A     		ldr	r2, [sp, #60]
 712 023e 4FEACE0A 		lsl	r10, lr, #3
 713 0242 6244     		add	r2, r2, ip
 714 0244 9346     		mov	fp, r2
 433:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 715              		.loc 1 433 29 view .LVU275
 716 0246 189A     		ldr	r2, [sp, #96]
 717 0248 02EB4309 		add	r9, r2, r3, lsl #1
 718 024c CDF808B0 		str	fp, [sp, #8]
 719 0250 DDF840B0 		ldr	fp, [sp, #64]
 720 0254 09EBCE03 		add	r3, r9, lr, lsl #3
 721 0258 0193     		str	r3, [sp, #4]
 722 025a 4FEA4803 		lsl	r3, r8, #1
 723 025e 0093     		str	r3, [sp]
 724              	.LVL80:
 725              	.L26:
 433:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 726              		.loc 1 433 9 is_stmt 1 view .LVU276
 436:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 727              		.loc 1 436 9 view .LVU277
 728              		.loc 1 439 9 view .LVU278
 440:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 441:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* matrix multiplication */
 442:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         while (colCnt > 0U)
 729              		.loc 1 442 9 view .LVU279
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 68


 730              		.loc 1 442 15 view .LVU280
 731 0260 BEF1000F 		cmp	lr, #0
 732 0264 00F08C80 		beq	.L30
 733              		.loc 1 442 15 is_stmt 0 view .LVU281
 734 0268 5846     		mov	r0, fp
 433:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 735              		.loc 1 433 14 view .LVU282
 736 026a 4946     		mov	r1, r9
 737              		.loc 1 442 15 view .LVU283
 738 026c 7446     		mov	r4, lr
 436:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 739              		.loc 1 436 14 view .LVU284
 740 026e 0023     		movs	r3, #0
 741              	.LVL81:
 742              	.L23:
 443:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 444:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA1 = read_q15x2_ia ((q15_t **) &pInA);
 743              		.loc 1 444 11 is_stmt 1 view .LVU285
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 744              		.loc 2 472 3 view .LVU286
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 745              		.loc 2 474 3 view .LVU287
 746 0270 0E68     		ldr	r6, [r1]	@ unaligned
 747              	.LVL82:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 748              		.loc 2 475 3 view .LVU288
 749              		.loc 2 477 3 view .LVU289
 445:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA2 = read_q15x2_ia ((q15_t **) &pInA);
 750              		.loc 1 445 11 view .LVU290
 751              	.LBB66:
 752              	.LBI66:
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 753              		.loc 2 469 28 view .LVU291
 754              	.LBB67:
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 755              		.loc 2 472 3 view .LVU292
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 756              		.loc 2 474 3 view .LVU293
 757 0272 0830     		adds	r0, r0, #8
 758              	.LVL83:
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 759              		.loc 2 474 3 is_stmt 0 view .LVU294
 760 0274 4A68     		ldr	r2, [r1, #4]	@ unaligned
 761              	.LVL84:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 762              		.loc 2 475 3 is_stmt 1 view .LVU295
 763 0276 0831     		adds	r1, r1, #8
 764              	.LVL85:
 765              		.loc 2 477 3 view .LVU296
 766              		.loc 2 477 3 is_stmt 0 view .LVU297
 767              	.LBE67:
 768              	.LBE66:
 446:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB1 = read_q15x2_ia ((q15_t **) &pInB);
 769              		.loc 1 446 11 is_stmt 1 view .LVU298
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 770              		.loc 2 472 3 view .LVU299
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 69


 771              		.loc 2 474 3 view .LVU300
 772 0278 50F8087C 		ldr	r7, [r0, #-8]	@ unaligned
 773              	.LVL86:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 774              		.loc 2 475 3 view .LVU301
 775              		.loc 2 477 3 view .LVU302
 447:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB2 = read_q15x2_ia ((q15_t **) &pInB);
 776              		.loc 1 447 11 view .LVU303
 777              	.LBB69:
 778              	.LBI69:
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 779              		.loc 2 469 28 view .LVU304
 780              	.LBB70:
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 781              		.loc 2 472 3 view .LVU305
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 782              		.loc 2 474 3 view .LVU306
 783 027c 50F8045C 		ldr	r5, [r0, #-4]	@ unaligned
 784              	.LVL87:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 785              		.loc 2 475 3 view .LVU307
 786              		.loc 2 477 3 view .LVU308
 787              		.loc 2 477 3 is_stmt 0 view .LVU309
 788              	.LBE70:
 789              	.LBE69:
 448:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 449:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum  = __SMLAD(inA1, inB1, sum);
 790              		.loc 1 449 11 is_stmt 1 view .LVU310
 791              	.LBB71:
 792              	.LBI71:
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 793              		.loc 3 1989 31 view .LVU311
 794              	.LBB72:
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 795              		.loc 3 1991 3 view .LVU312
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 796              		.loc 3 1993 3 view .LVU313
 797              		.syntax unified
 798              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 799 0280 26FB0733 		smlad r3, r6, r7, r3
 800              	@ 0 "" 2
 801              	.LVL88:
 802              		.loc 3 1994 3 view .LVU314
 803              		.loc 3 1994 3 is_stmt 0 view .LVU315
 804              		.thumb
 805              		.syntax unified
 806              	.LBE72:
 807              	.LBE71:
 450:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum  = __SMLAD(inA2, inB2, sum);
 808              		.loc 1 450 11 is_stmt 1 view .LVU316
 809              	.LBB73:
 810              	.LBI73:
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 811              		.loc 3 1989 31 view .LVU317
 812              	.LBB74:
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 813              		.loc 3 1991 3 view .LVU318
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 70


1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 814              		.loc 3 1993 3 view .LVU319
 815              		.syntax unified
 816              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 817 0284 22FB0533 		smlad r3, r2, r5, r3
 818              	@ 0 "" 2
 819              	.LVL89:
 820              		.loc 3 1994 3 view .LVU320
 821              		.loc 3 1994 3 is_stmt 0 view .LVU321
 822              		.thumb
 823              		.syntax unified
 824              	.LBE74:
 825              	.LBE73:
 451:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 452:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           /* Decrement loop counter */
 453:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           colCnt--;
 826              		.loc 1 453 11 is_stmt 1 view .LVU322
 442:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 827              		.loc 1 442 15 view .LVU323
 828 0288 013C     		subs	r4, r4, #1
 829              	.LVL90:
 442:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 830              		.loc 1 442 15 is_stmt 0 view .LVU324
 831 028a F1D1     		bne	.L23
 832 028c D344     		add	fp, fp, r10
 833              	.LBB75:
 834              	.LBB68:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 835              		.loc 2 475 9 view .LVU325
 836 028e 0199     		ldr	r1, [sp, #4]
 837              	.LVL91:
 838              	.L22:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 839              		.loc 2 475 9 view .LVU326
 840              	.LBE68:
 841              	.LBE75:
 454:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         }
 455:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 456:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         colCnt = numColsA % 4U;
 842              		.loc 1 456 9 is_stmt 1 view .LVU327
 457:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         while (colCnt > 0U) {
 843              		.loc 1 457 9 view .LVU328
 844              		.loc 1 457 15 view .LVU329
 845 0290 B8F1000F 		cmp	r8, #0
 846 0294 0BD0     		beq	.L24
 847 0296 5846     		mov	r0, fp
 848 0298 4246     		mov	r2, r8
 849              	.LVL92:
 850              	.L25:
 458:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum += (q31_t) (*pInA++) * (*pInB++);
 851              		.loc 1 458 11 view .LVU330
 852              		.loc 1 458 15 is_stmt 0 view .LVU331
 853 029a 31F8025B 		ldrh	r5, [r1], #2
 854              	.LVL93:
 457:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         while (colCnt > 0U) {
 855              		.loc 1 457 15 view .LVU332
 856 029e 013A     		subs	r2, r2, #1
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 71


 857              	.LVL94:
 858              		.loc 1 458 15 view .LVU333
 859 02a0 30F8024B 		ldrh	r4, [r0], #2
 860              	.LVL95:
 861              		.loc 1 458 15 view .LVU334
 862 02a4 15FB0433 		smlabb	r3, r5, r4, r3
 863              	.LVL96:
 459:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 460:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           colCnt--;
 864              		.loc 1 460 11 is_stmt 1 view .LVU335
 457:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum += (q31_t) (*pInA++) * (*pInB++);
 865              		.loc 1 457 15 view .LVU336
 866 02a8 F7D1     		bne	.L25
 867 02aa 009A     		ldr	r2, [sp]
 868 02ac 9344     		add	fp, fp, r2
 869              	.LVL97:
 870              	.L24:
 461:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         }
 462:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 463:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Store result in destination buffer */
 464:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         *px++ = (q15_t) (sum  >> 15);
 871              		.loc 1 464 9 view .LVU337
 872              		.loc 1 464 31 is_stmt 0 view .LVU338
 873 02ae DB13     		asrs	r3, r3, #15
 874              	.LVL98:
 875              		.loc 1 464 17 view .LVU339
 876 02b0 2CF8023B 		strh	r3, [ip], #2	@ movhi
 877              	.LVL99:
 465:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 466:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         /* Decrement column loop counter */
 467:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         col--;
 878              		.loc 1 467 9 is_stmt 1 view .LVU340
 430:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 879              		.loc 1 430 13 view .LVU341
 880 02b4 029B     		ldr	r3, [sp, #8]
 881 02b6 6345     		cmp	r3, ip
 882 02b8 D2D1     		bne	.L26
 883              	.LVL100:
 884              	.L47:
 468:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       }
 469:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     }
 470:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 471:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** #endif /* #if defined (ARM_MATH_DSP) */
 472:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 473:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     /* Set status as ARM_MATH_SUCCESS */
 474:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****     status = ARM_MATH_SUCCESS;
 475:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   }
 476:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 477:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   /* Return to application */
 478:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****   return (status);
 479:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** }
 885              		.loc 1 479 1 is_stmt 0 view .LVU342
 886 02ba 0020     		movs	r0, #0
 887 02bc 1FB0     		add	sp, sp, #124
 888              	.LCFI2:
 889              		.cfi_remember_state
 890              		.cfi_def_cfa_offset 36
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 72


 891              		@ sp needed
 892 02be BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 893              	.LVL101:
 894              	.L28:
 895              	.LCFI3:
 896              		.cfi_restore_state
 256:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         pInB  = pSrcBT + j;
 897              		.loc 1 256 14 view .LVU343
 898 02c2 DDF814C0 		ldr	ip, [sp, #20]
 258:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         pInB2 = pInB + numRowsB;
 899              		.loc 1 258 15 view .LVU344
 900 02c6 079A     		ldr	r2, [sp, #28]
 251:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 901              		.loc 1 251 14 view .LVU345
 902 02c8 039B     		ldr	r3, [sp, #12]
 256:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         pInB  = pSrcBT + j;
 903              		.loc 1 256 14 view .LVU346
 904 02ca 6546     		mov	r5, ip
 255:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         sum4 = 0;
 905              		.loc 1 255 14 view .LVU347
 906 02cc 6646     		mov	r6, ip
 254:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         sum3 = 0;
 907              		.loc 1 254 14 view .LVU348
 908 02ce 6746     		mov	r7, ip
 909 02d0 57E7     		b	.L9
 910              	.LVL102:
 911              	.L72:
 370:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 912              		.loc 1 370 7 is_stmt 1 view .LVU349
 381:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 913              		.loc 1 381 46 is_stmt 0 view .LVU350
 914 02d2 199B     		ldr	r3, [sp, #100]
 373:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       pInA = pSrcA->pData;
 915              		.loc 1 373 34 view .LVU351
 916 02d4 0F9A     		ldr	r2, [sp, #60]
 917              	.LVL103:
 381:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 918              		.loc 1 381 46 view .LVU352
 919 02d6 03F1FF3B 		add	fp, r3, #-1
 387:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 920              		.loc 1 387 27 view .LVU353
 921 02da 1A9B     		ldr	r3, [sp, #104]
 373:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       pInA = pSrcA->pData;
 922              		.loc 1 373 34 view .LVU354
 923 02dc A2F1020E 		sub	lr, r2, #2
 387:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 924              		.loc 1 387 16 view .LVU355
 925 02e0 DDF860C0 		ldr	ip, [sp, #96]
 387:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 926              		.loc 1 387 27 view .LVU356
 927 02e4 4FEA9309 		lsr	r9, r3, #2
 928 02e8 03F0030A 		and	r10, r3, #3
 381:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 929              		.loc 1 381 35 view .LVU357
 930 02ec 1B9B     		ldr	r3, [sp, #108]
 931 02ee 03FB0BFB 		mul	fp, r3, fp
 932 02f2 4FEAC903 		lsl	r3, r9, #3
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 73


 933 02f6 0093     		str	r3, [sp]
 373:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       pInA = pSrcA->pData;
 934              		.loc 1 373 10 view .LVU358
 935 02f8 1C9B     		ldr	r3, [sp, #112]
 936 02fa 9E44     		add	lr, lr, r3
 937 02fc 4FEA4A03 		lsl	r3, r10, #1
 938 0300 0193     		str	r3, [sp, #4]
 381:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 939              		.loc 1 381 24 view .LVU359
 940 0302 109B     		ldr	r3, [sp, #64]
 941 0304 03EB4B0B 		add	fp, r3, fp, lsl #1
 370:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 942              		.loc 1 370 11 view .LVU360
 943 0308 179B     		ldr	r3, [sp, #92]
 944 030a 23F00108 		bic	r8, r3, #1
 945              	.LVL104:
 373:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       pInA = pSrcA->pData;
 946              		.loc 1 373 7 is_stmt 1 view .LVU361
 374:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 947              		.loc 1 374 7 view .LVU362
 377:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 948              		.loc 1 377 7 view .LVU363
 377:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 949              		.loc 1 377 13 view .LVU364
 381:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 950              		.loc 1 381 9 view .LVU365
 384:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 951              		.loc 1 384 9 view .LVU366
 387:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 952              		.loc 1 387 9 view .LVU367
 390:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 953              		.loc 1 390 9 view .LVU368
 390:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 954              		.loc 1 390 15 view .LVU369
 955 030e 0BEBC903 		add	r3, fp, r9, lsl #3
 956 0312 0293     		str	r3, [sp, #8]
 957 0314 B9F1000F 		cmp	r9, #0
 958 0318 2FD0     		beq	.L29
 959              	.LVL105:
 960              	.L73:
 381:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 961              		.loc 1 381 15 is_stmt 0 view .LVU370
 962 031a 5846     		mov	r0, fp
 390:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 963              		.loc 1 390 15 view .LVU371
 964 031c 6146     		mov	r1, ip
 965 031e 4C46     		mov	r4, r9
 384:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 966              		.loc 1 384 14 view .LVU372
 967 0320 0023     		movs	r3, #0
 968              	.LVL106:
 969              	.L18:
 392:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inA2 = read_q15x2_ia ((q15_t **) &pInA);
 970              		.loc 1 392 11 is_stmt 1 view .LVU373
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 971              		.loc 2 472 3 view .LVU374
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 74


 972              		.loc 2 474 3 view .LVU375
 973 0322 0E68     		ldr	r6, [r1]	@ unaligned
 974              	.LVL107:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 975              		.loc 2 475 3 view .LVU376
 976              		.loc 2 477 3 view .LVU377
 393:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB1 = read_q15x2_ia ((q15_t **) &pInB);
 977              		.loc 1 393 11 view .LVU378
 978              	.LBB76:
 979              	.LBI76:
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 980              		.loc 2 469 28 view .LVU379
 981              	.LBB77:
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 982              		.loc 2 472 3 view .LVU380
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 983              		.loc 2 474 3 view .LVU381
 984 0324 0830     		adds	r0, r0, #8
 985              	.LVL108:
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 986              		.loc 2 474 3 is_stmt 0 view .LVU382
 987 0326 4A68     		ldr	r2, [r1, #4]	@ unaligned
 988              	.LVL109:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 989              		.loc 2 475 3 is_stmt 1 view .LVU383
 990 0328 0831     		adds	r1, r1, #8
 991              	.LVL110:
 992              		.loc 2 477 3 view .LVU384
 993              		.loc 2 477 3 is_stmt 0 view .LVU385
 994              	.LBE77:
 995              	.LBE76:
 394:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           inB2 = read_q15x2_ia ((q15_t **) &pInB);
 996              		.loc 1 394 11 is_stmt 1 view .LVU386
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 997              		.loc 2 472 3 view .LVU387
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 998              		.loc 2 474 3 view .LVU388
 999 032a 50F8087C 		ldr	r7, [r0, #-8]	@ unaligned
 1000              	.LVL111:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1001              		.loc 2 475 3 view .LVU389
 1002              		.loc 2 477 3 view .LVU390
 395:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 1003              		.loc 1 395 11 view .LVU391
 1004              	.LBB78:
 1005              	.LBI78:
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 1006              		.loc 2 469 28 view .LVU392
 1007              	.LBB79:
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1008              		.loc 2 472 3 view .LVU393
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 1009              		.loc 2 474 3 view .LVU394
 1010 032e 50F8045C 		ldr	r5, [r0, #-4]	@ unaligned
 1011              	.LVL112:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1012              		.loc 2 475 3 view .LVU395
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 75


 1013              		.loc 2 477 3 view .LVU396
 1014              		.loc 2 477 3 is_stmt 0 view .LVU397
 1015              	.LBE79:
 1016              	.LBE78:
 397:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum  = __SMLAD(inA2, inB2, sum);
 1017              		.loc 1 397 11 is_stmt 1 view .LVU398
 1018              	.LBB81:
 1019              	.LBI81:
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 1020              		.loc 3 1989 31 view .LVU399
 1021              	.LBB82:
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1022              		.loc 3 1991 3 view .LVU400
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1023              		.loc 3 1993 3 view .LVU401
 1024              		.syntax unified
 1025              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1026 0332 26FB0733 		smlad r3, r6, r7, r3
 1027              	@ 0 "" 2
 1028              	.LVL113:
 1029              		.loc 3 1994 3 view .LVU402
 1030              		.loc 3 1994 3 is_stmt 0 view .LVU403
 1031              		.thumb
 1032              		.syntax unified
 1033              	.LBE82:
 1034              	.LBE81:
 398:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 1035              		.loc 1 398 11 is_stmt 1 view .LVU404
 1036              	.LBB83:
 1037              	.LBI83:
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 1038              		.loc 3 1989 31 view .LVU405
 1039              	.LBB84:
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1040              		.loc 3 1991 3 view .LVU406
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1041              		.loc 3 1993 3 view .LVU407
 1042              		.syntax unified
 1043              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1044 0336 22FB0533 		smlad r3, r2, r5, r3
 1045              	@ 0 "" 2
 1046              	.LVL114:
 1047              		.loc 3 1994 3 view .LVU408
 1048              		.loc 3 1994 3 is_stmt 0 view .LVU409
 1049              		.thumb
 1050              		.syntax unified
 1051              	.LBE84:
 1052              	.LBE83:
 401:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         }
 1053              		.loc 1 401 11 is_stmt 1 view .LVU410
 390:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 1054              		.loc 1 390 15 view .LVU411
 1055 033a 013C     		subs	r4, r4, #1
 1056              	.LVL115:
 390:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 1057              		.loc 1 390 15 is_stmt 0 view .LVU412
 1058 033c F1D1     		bne	.L18
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 76


 1059 033e 009A     		ldr	r2, [sp]
 1060              	.LVL116:
 1061              	.LBB85:
 1062              	.LBB80:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1063              		.loc 2 475 9 view .LVU413
 1064 0340 0299     		ldr	r1, [sp, #8]
 1065              	.LVL117:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1066              		.loc 2 475 9 view .LVU414
 1067 0342 9444     		add	ip, ip, r2
 1068              	.LVL118:
 1069              	.L17:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1070              		.loc 2 475 9 view .LVU415
 1071              	.LBE80:
 1072              	.LBE85:
 404:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         while (colCnt > 0U) {
 1073              		.loc 1 404 9 is_stmt 1 view .LVU416
 405:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum += (q31_t) (*pInA++) * (*pInB++);
 1074              		.loc 1 405 9 view .LVU417
 405:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum += (q31_t) (*pInA++) * (*pInB++);
 1075              		.loc 1 405 15 view .LVU418
 1076 0344 BAF1000F 		cmp	r10, #0
 1077 0348 0BD0     		beq	.L19
 1078 034a 6046     		mov	r0, ip
 1079 034c 5246     		mov	r2, r10
 1080              	.LVL119:
 1081              	.L20:
 406:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           colCnt--;
 1082              		.loc 1 406 11 view .LVU419
 406:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           colCnt--;
 1083              		.loc 1 406 15 is_stmt 0 view .LVU420
 1084 034e 30F8025B 		ldrh	r5, [r0], #2
 1085              	.LVL120:
 405:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum += (q31_t) (*pInA++) * (*pInB++);
 1086              		.loc 1 405 15 view .LVU421
 1087 0352 013A     		subs	r2, r2, #1
 1088              	.LVL121:
 406:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           colCnt--;
 1089              		.loc 1 406 15 view .LVU422
 1090 0354 31F8024B 		ldrh	r4, [r1], #2
 1091              	.LVL122:
 406:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           colCnt--;
 1092              		.loc 1 406 15 view .LVU423
 1093 0358 15FB0433 		smlabb	r3, r5, r4, r3
 1094              	.LVL123:
 407:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         }
 1095              		.loc 1 407 11 is_stmt 1 view .LVU424
 405:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****           sum += (q31_t) (*pInA++) * (*pInB++);
 1096              		.loc 1 405 15 view .LVU425
 1097 035c F7D1     		bne	.L20
 1098 035e 019A     		ldr	r2, [sp, #4]
 1099 0360 9444     		add	ip, ip, r2
 1100              	.LVL124:
 1101              	.L19:
 411:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         px += numColsB;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 77


 1102              		.loc 1 411 9 view .LVU426
 411:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         px += numColsB;
 1103              		.loc 1 411 29 is_stmt 0 view .LVU427
 1104 0362 DB13     		asrs	r3, r3, #15
 1105              	.LVL125:
 377:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 1106              		.loc 1 377 13 view .LVU428
 1107 0364 B8F10108 		subs	r8, r8, #1
 1108              	.LVL126:
 411:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         px += numColsB;
 1109              		.loc 1 411 15 view .LVU429
 1110 0368 AEF80030 		strh	r3, [lr]	@ movhi
 412:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 1111              		.loc 1 412 9 is_stmt 1 view .LVU430
 412:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 1112              		.loc 1 412 12 is_stmt 0 view .LVU431
 1113 036c 0F9B     		ldr	r3, [sp, #60]
 1114 036e 9E44     		add	lr, lr, r3
 1115              	.LVL127:
 415:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       }
 1116              		.loc 1 415 9 is_stmt 1 view .LVU432
 377:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****       {
 1117              		.loc 1 377 13 view .LVU433
 1118 0370 3FF450AF 		beq	.L7
 1119              	.LVL128:
 381:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 1120              		.loc 1 381 9 view .LVU434
 384:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 1121              		.loc 1 384 9 view .LVU435
 387:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 1122              		.loc 1 387 9 view .LVU436
 390:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 1123              		.loc 1 390 9 view .LVU437
 390:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c ****         {
 1124              		.loc 1 390 15 view .LVU438
 1125 0374 B9F1000F 		cmp	r9, #0
 1126 0378 CFD1     		bne	.L73
 1127              	.LVL129:
 1128              	.L29:
 381:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 1129              		.loc 1 381 15 is_stmt 0 view .LVU439
 1130 037a 5946     		mov	r1, fp
 384:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 1131              		.loc 1 384 14 view .LVU440
 1132 037c 4B46     		mov	r3, r9
 1133 037e E1E7     		b	.L17
 1134              	.LVL130:
 1135              	.L30:
 433:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 1136              		.loc 1 433 14 view .LVU441
 1137 0380 4946     		mov	r1, r9
 436:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_fast_q15.c **** 
 1138              		.loc 1 436 14 view .LVU442
 1139 0382 7346     		mov	r3, lr
 1140 0384 84E7     		b	.L22
 1141              		.cfi_endproc
 1142              	.LFE145:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 78


 1144 0386 00BF     		.text
 1145              	.Letext0:
 1146              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/
 1147              		.file 5 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_std
 1148              		.file 6 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock
 1149              		.file 7 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_typ
 1150              		.file 8 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/in
 1151              		.file 9 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reen
 1152              		.file 10 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s 			page 79


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_mat_mult_fast_q15.c
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s:17     .text.arm_mat_mult_fast_q15:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccapkzrx.s:26     .text.arm_mat_mult_fast_q15:0000000000000000 arm_mat_mult_fast_q15

NO UNDEFINED SYMBOLS
