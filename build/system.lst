ARM GAS  /tmp/cc35GObF.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"system.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.bss.AdcHandle,"aw",%nobits
  17              		.align	2
  20              	AdcHandle:
  21 0000 00000000 		.space	100
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              		.comm	otm8009a_obj,368,4
  23              		.section	.rodata
  24              		.align	2
  25              	.LC0:
  26 0000 2E2F4253 		.ascii	"./BSP/system.c\000"
  26      502F7379 
  26      7374656D 
  26      2E6300
  27              		.section	.text.Hardware_Init,"ax",%progbits
  28              		.align	1
  29              		.global	Hardware_Init
  30              		.arch armv7e-m
  31              		.syntax unified
  32              		.thumb
  33              		.thumb_func
  34              		.fpu fpv5-d16
  36              	Hardware_Init:
  37              	.LFB338:
  38              		.file 1 "./BSP/system.c"
   1:./BSP/system.c **** #include "system.h"
   2:./BSP/system.c **** 
   3:./BSP/system.c **** #define DEVICE_IS_CUT_2_1()      (HAL_GetREVID() & 0x21ff) ? 1 : 0
   4:./BSP/system.c **** #define DEVICE_IS_CUT_2_X()      (HAL_GetREVID() & 0x2fff) ? 1 : 0
   5:./BSP/system.c **** #define DEVICE_IS_CUT_1_2()      (HAL_GetREVID() & 0x12ff) ? 1 : 0
   6:./BSP/system.c **** 
   7:./BSP/system.c **** #ifndef HSEM_ID_0
   8:./BSP/system.c **** #define HSEM_ID_0 (0U) /* HW semaphore 0*/
   9:./BSP/system.c **** #endif
  10:./BSP/system.c **** 
  11:./BSP/system.c **** static ADC_HandleTypeDef    AdcHandle;
  12:./BSP/system.c **** static void SystemClock_Config(void);
  13:./BSP/system.c **** static void MPU_Config(void);
  14:./BSP/system.c **** static void BSP_Init(void);
  15:./BSP/system.c **** static void PeriphCommonClock_Config(void);
ARM GAS  /tmp/cc35GObF.s 			page 2


  16:./BSP/system.c **** static void CPU_CACHE_Enable(void);
  17:./BSP/system.c **** static void CRC_Init(void);
  18:./BSP/system.c **** static void GPIO_Init(void);
  19:./BSP/system.c **** static uint32_t TEMP_SENSOR_Init(void);
  20:./BSP/system.c **** 
  21:./BSP/system.c **** lcd_objectTypeDef otm8009a_obj;
  22:./BSP/system.c **** 
  23:./BSP/system.c **** void Hardware_Init(void)
  24:./BSP/system.c **** {
  39              		.loc 1 24 1
  40              		.cfi_startproc
  41              		@ args = 0, pretend = 0, frame = 8
  42              		@ frame_needed = 1, uses_anonymous_args = 0
  43 0000 80B5     		push	{r7, lr}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 82B0     		sub	sp, sp, #8
  49              	.LCFI1:
  50              		.cfi_def_cfa_offset 16
  51 0004 00AF     		add	r7, sp, #0
  52              	.LCFI2:
  53              		.cfi_def_cfa_register 7
  25:./BSP/system.c ****   int32_t timeout = 0xFFFF;
  54              		.loc 1 25 11
  55 0006 4FF6FF73 		movw	r3, #65535
  56 000a 7B60     		str	r3, [r7, #4]
  26:./BSP/system.c **** 
  27:./BSP/system.c ****   MPU_Config();
  57              		.loc 1 27 3
  58 000c FFF7FEFF 		bl	MPU_Config
  28:./BSP/system.c ****   //Enable L1 cache
  29:./BSP/system.c ****   CPU_CACHE_Enable();
  59              		.loc 1 29 3
  60 0010 FFF7FEFF 		bl	CPU_CACHE_Enable
  30:./BSP/system.c **** 
  31:./BSP/system.c ****   while((__HAL_RCC_GET_FLAG(RCC_FLAG_D2CKRDY) != RESET) && (timeout-- > 0));
  61              		.loc 1 31 8
  62 0014 00BF     		nop
  63              	.L3:
  64              		.loc 1 31 10 discriminator 2
  65 0016 244B     		ldr	r3, .L8
  66 0018 1B68     		ldr	r3, [r3]
  67 001a 03F40043 		and	r3, r3, #32768
  68              		.loc 1 31 8 discriminator 2
  69 001e 002B     		cmp	r3, #0
  70 0020 04D0     		beq	.L2
  71              		.loc 1 31 68 discriminator 1
  72 0022 7B68     		ldr	r3, [r7, #4]
  73 0024 5A1E     		subs	r2, r3, #1
  74 0026 7A60     		str	r2, [r7, #4]
  75              		.loc 1 31 57 discriminator 1
  76 0028 002B     		cmp	r3, #0
  77 002a F4DC     		bgt	.L3
  78              	.L2:
  32:./BSP/system.c ****   if ( timeout < 0 )
ARM GAS  /tmp/cc35GObF.s 			page 3


  79              		.loc 1 32 6
  80 002c 7B68     		ldr	r3, [r7, #4]
  81 002e 002B     		cmp	r3, #0
  82 0030 03DA     		bge	.L4
  33:./BSP/system.c ****   {
  34:./BSP/system.c ****     Error_Handler(__FILE__, __LINE__);
  83              		.loc 1 34 5
  84 0032 2221     		movs	r1, #34
  85 0034 1D48     		ldr	r0, .L8+4
  86 0036 FFF7FEFF 		bl	Error_Handler
  87              	.L4:
  35:./BSP/system.c ****   }
  36:./BSP/system.c **** 
  37:./BSP/system.c ****   HAL_Init();
  88              		.loc 1 37 3
  89 003a FFF7FEFF 		bl	HAL_Init
  38:./BSP/system.c ****   SystemClock_Config();
  90              		.loc 1 38 3
  91 003e FFF7FEFF 		bl	SystemClock_Config
  92              	.LBB46:
  39:./BSP/system.c **** 
  40:./BSP/system.c ****   __HAL_RCC_HSEM_CLK_ENABLE();
  93              		.loc 1 40 3
  94 0042 194B     		ldr	r3, .L8
  95 0044 D3F8E030 		ldr	r3, [r3, #224]
  96 0048 174A     		ldr	r2, .L8
  97 004a 43F00073 		orr	r3, r3, #33554432
  98 004e C2F8E030 		str	r3, [r2, #224]
  99 0052 154B     		ldr	r3, .L8
 100 0054 D3F8E030 		ldr	r3, [r3, #224]
 101 0058 03F00073 		and	r3, r3, #33554432
 102 005c 3B60     		str	r3, [r7]
 103 005e 3B68     		ldr	r3, [r7]
 104              	.LBE46:
  41:./BSP/system.c ****   /*Take HSEM */
  42:./BSP/system.c ****   HAL_HSEM_FastTake(HSEM_ID_0);
 105              		.loc 1 42 3
 106 0060 0020     		movs	r0, #0
 107 0062 FFF7FEFF 		bl	HAL_HSEM_FastTake
  43:./BSP/system.c ****   /*Release HSEM in order to notify the CPU2(CM4)*/
  44:./BSP/system.c ****   HAL_HSEM_Release(HSEM_ID_0,0);
 108              		.loc 1 44 3
 109 0066 0021     		movs	r1, #0
 110 0068 0020     		movs	r0, #0
 111 006a FFF7FEFF 		bl	HAL_HSEM_Release
  45:./BSP/system.c ****   /* wait until CPU2 wakes up from stop mode */
  46:./BSP/system.c ****   timeout = 0xFFFF;
 112              		.loc 1 46 11
 113 006e 4FF6FF73 		movw	r3, #65535
 114 0072 7B60     		str	r3, [r7, #4]
  47:./BSP/system.c ****   while((__HAL_RCC_GET_FLAG(RCC_FLAG_D2CKRDY) == RESET) && (timeout-- > 0));
 115              		.loc 1 47 8
 116 0074 00BF     		nop
 117              	.L6:
 118              		.loc 1 47 10 discriminator 2
 119 0076 0C4B     		ldr	r3, .L8
 120 0078 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc35GObF.s 			page 4


 121 007a 03F40043 		and	r3, r3, #32768
 122              		.loc 1 47 8 discriminator 2
 123 007e 002B     		cmp	r3, #0
 124 0080 04D1     		bne	.L5
 125              		.loc 1 47 68 discriminator 1
 126 0082 7B68     		ldr	r3, [r7, #4]
 127 0084 5A1E     		subs	r2, r3, #1
 128 0086 7A60     		str	r2, [r7, #4]
 129              		.loc 1 47 57 discriminator 1
 130 0088 002B     		cmp	r3, #0
 131 008a F4DC     		bgt	.L6
 132              	.L5:
  48:./BSP/system.c ****   if ( timeout < 0 )
 133              		.loc 1 48 6
 134 008c 7B68     		ldr	r3, [r7, #4]
 135 008e 002B     		cmp	r3, #0
 136 0090 03DA     		bge	.L7
  49:./BSP/system.c ****   {
  50:./BSP/system.c ****     Error_Handler(__FILE__, __LINE__);
 137              		.loc 1 50 5
 138 0092 3221     		movs	r1, #50
 139 0094 0548     		ldr	r0, .L8+4
 140 0096 FFF7FEFF 		bl	Error_Handler
 141              	.L7:
  51:./BSP/system.c ****   }
  52:./BSP/system.c **** 
  53:./BSP/system.c ****   BSP_Init();
 142              		.loc 1 53 3
 143 009a FFF7FEFF 		bl	BSP_Init
  54:./BSP/system.c **** }
 144              		.loc 1 54 1
 145 009e 00BF     		nop
 146 00a0 0837     		adds	r7, r7, #8
 147              	.LCFI3:
 148              		.cfi_def_cfa_offset 8
 149 00a2 BD46     		mov	sp, r7
 150              	.LCFI4:
 151              		.cfi_def_cfa_register 13
 152              		@ sp needed
 153 00a4 80BD     		pop	{r7, pc}
 154              	.L9:
 155 00a6 00BF     		.align	2
 156              	.L8:
 157 00a8 00440258 		.word	1476543488
 158 00ac 00000000 		.word	.LC0
 159              		.cfi_endproc
 160              	.LFE338:
 162              		.section	.text.BSP_Init,"ax",%progbits
 163              		.align	1
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu fpv5-d16
 169              	BSP_Init:
 170              	.LFB339:
  55:./BSP/system.c **** 
  56:./BSP/system.c **** static void BSP_Init(void)
ARM GAS  /tmp/cc35GObF.s 			page 5


  57:./BSP/system.c **** {
 171              		.loc 1 57 1
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 1, uses_anonymous_args = 0
 175 0000 80B5     		push	{r7, lr}
 176              	.LCFI5:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 00AF     		add	r7, sp, #0
 181              	.LCFI6:
 182              		.cfi_def_cfa_register 7
  58:./BSP/system.c ****   //QSPI init
  59:./BSP/system.c ****   mt25tl01g_Init();
 183              		.loc 1 59 3
 184 0004 FFF7FEFF 		bl	mt25tl01g_Init
  60:./BSP/system.c ****   //SDRAM init
  61:./BSP/system.c ****   IS42S32800J_Init();
 185              		.loc 1 61 3
 186 0008 FFF7FEFF 		bl	IS42S32800J_Init
  62:./BSP/system.c ****   //MCU internal temperature sensing init
  63:./BSP/system.c ****   TEMP_SENSOR_Init();
 187              		.loc 1 63 3
 188 000c FFF7FEFF 		bl	TEMP_SENSOR_Init
  64:./BSP/system.c ****   //RTC init
  65:./BSP/system.c ****   //GPIO init
  66:./BSP/system.c ****   GPIO_Init();
 189              		.loc 1 66 3
 190 0010 FFF7FEFF 		bl	GPIO_Init
  67:./BSP/system.c ****   //LCD init
  68:./BSP/system.c ****   lcd_init(&otm8009a_obj,OTM8009A_FORMAT_RGB888,OTM8009A_ORIENTATION_LANDSCAPE);
 191              		.loc 1 68 3
 192 0014 0122     		movs	r2, #1
 193 0016 0021     		movs	r1, #0
 194 0018 0348     		ldr	r0, .L11
 195 001a FFF7FEFF 		bl	lcd_init
  69:./BSP/system.c ****   //CRC init
  70:./BSP/system.c ****   CRC_Init();
 196              		.loc 1 70 3
 197 001e FFF7FEFF 		bl	CRC_Init
  71:./BSP/system.c **** 
  72:./BSP/system.c **** }
 198              		.loc 1 72 1
 199 0022 00BF     		nop
 200 0024 80BD     		pop	{r7, pc}
 201              	.L12:
 202 0026 00BF     		.align	2
 203              	.L11:
 204 0028 00000000 		.word	otm8009a_obj
 205              		.cfi_endproc
 206              	.LFE339:
 208              		.section	.text.SystemClock_Config,"ax",%progbits
 209              		.align	1
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
ARM GAS  /tmp/cc35GObF.s 			page 6


 213              		.fpu fpv5-d16
 215              	SystemClock_Config:
 216              	.LFB340:
  73:./BSP/system.c **** 
  74:./BSP/system.c **** static void SystemClock_Config(void)
  75:./BSP/system.c **** {
 217              		.loc 1 75 1
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 112
 220              		@ frame_needed = 1, uses_anonymous_args = 0
 221 0000 80B5     		push	{r7, lr}
 222              	.LCFI7:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 7, -8
 225              		.cfi_offset 14, -4
 226 0002 9CB0     		sub	sp, sp, #112
 227              	.LCFI8:
 228              		.cfi_def_cfa_offset 120
 229 0004 00AF     		add	r7, sp, #0
 230              	.LCFI9:
 231              		.cfi_def_cfa_register 7
  76:./BSP/system.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 232              		.loc 1 76 22
 233 0006 07F12403 		add	r3, r7, #36
 234 000a 4C22     		movs	r2, #76
 235 000c 0021     		movs	r1, #0
 236 000e 1846     		mov	r0, r3
 237 0010 FFF7FEFF 		bl	memset
  77:./BSP/system.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 238              		.loc 1 77 22
 239 0014 3B1D     		adds	r3, r7, #4
 240 0016 2022     		movs	r2, #32
 241 0018 0021     		movs	r1, #0
 242 001a 1846     		mov	r0, r3
 243 001c FFF7FEFF 		bl	memset
  78:./BSP/system.c **** 
  79:./BSP/system.c ****   /** Supply configuration update enable
  80:./BSP/system.c ****   */
  81:./BSP/system.c ****   HAL_PWREx_ConfigSupply(PWR_DIRECT_SMPS_SUPPLY);
 244              		.loc 1 81 3
 245 0020 0420     		movs	r0, #4
 246 0022 FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 247              	.LBB47:
  82:./BSP/system.c ****   /** Configure the main internal regulator output voltage
  83:./BSP/system.c ****   */
  84:./BSP/system.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 248              		.loc 1 84 3
 249 0026 0023     		movs	r3, #0
 250 0028 3B60     		str	r3, [r7]
 251 002a 3B4B     		ldr	r3, .L17
 252 002c 9B69     		ldr	r3, [r3, #24]
 253 002e 3A4A     		ldr	r2, .L17
 254 0030 43F44043 		orr	r3, r3, #49152
 255 0034 9361     		str	r3, [r2, #24]
 256 0036 384B     		ldr	r3, .L17
 257 0038 9B69     		ldr	r3, [r3, #24]
 258 003a 03F44043 		and	r3, r3, #49152
ARM GAS  /tmp/cc35GObF.s 			page 7


 259 003e 3B60     		str	r3, [r7]
 260 0040 364B     		ldr	r3, .L17+4
 261 0042 DB6A     		ldr	r3, [r3, #44]
 262 0044 354A     		ldr	r2, .L17+4
 263 0046 43F00103 		orr	r3, r3, #1
 264 004a D362     		str	r3, [r2, #44]
 265 004c 334B     		ldr	r3, .L17+4
 266 004e DB6A     		ldr	r3, [r3, #44]
 267 0050 03F00103 		and	r3, r3, #1
 268 0054 3B60     		str	r3, [r7]
 269 0056 3B68     		ldr	r3, [r7]
 270              	.LBE47:
  85:./BSP/system.c **** 
  86:./BSP/system.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 271              		.loc 1 86 8
 272 0058 00BF     		nop
 273              	.L14:
 274              		.loc 1 86 10 discriminator 1
 275 005a 2F4B     		ldr	r3, .L17
 276 005c 9B69     		ldr	r3, [r3, #24]
 277 005e 03F40053 		and	r3, r3, #8192
 278              		.loc 1 86 8 discriminator 1
 279 0062 B3F5005F 		cmp	r3, #8192
 280 0066 F8D1     		bne	.L14
  87:./BSP/system.c ****   /** Macro to configure the PLL clock source
  88:./BSP/system.c ****   */
  89:./BSP/system.c ****   __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
 281              		.loc 1 89 3
 282 0068 2D4B     		ldr	r3, .L17+8
 283 006a 9B6A     		ldr	r3, [r3, #40]
 284 006c 23F00303 		bic	r3, r3, #3
 285 0070 2B4A     		ldr	r2, .L17+8
 286 0072 43F00203 		orr	r3, r3, #2
 287 0076 9362     		str	r3, [r2, #40]
  90:./BSP/system.c ****   /** Initializes the RCC Oscillators according to the specified parameters
  91:./BSP/system.c ****   * in the RCC_OscInitTypeDef structure.
  92:./BSP/system.c ****   */
  93:./BSP/system.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 288              		.loc 1 93 36
 289 0078 0323     		movs	r3, #3
 290 007a 7B62     		str	r3, [r7, #36]
  94:./BSP/system.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 291              		.loc 1 94 30
 292 007c 4FF48033 		mov	r3, #65536
 293 0080 BB62     		str	r3, [r7, #40]
  95:./BSP/system.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 294              		.loc 1 95 30
 295 0082 0123     		movs	r3, #1
 296 0084 3B63     		str	r3, [r7, #48]
  96:./BSP/system.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 297              		.loc 1 96 41
 298 0086 4023     		movs	r3, #64
 299 0088 7B63     		str	r3, [r7, #52]
  97:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 300              		.loc 1 97 34
 301 008a 0223     		movs	r3, #2
 302 008c BB64     		str	r3, [r7, #72]
ARM GAS  /tmp/cc35GObF.s 			page 8


  98:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 303              		.loc 1 98 35
 304 008e 0223     		movs	r3, #2
 305 0090 FB64     		str	r3, [r7, #76]
  99:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLM = 5;
 306              		.loc 1 99 30
 307 0092 0523     		movs	r3, #5
 308 0094 3B65     		str	r3, [r7, #80]
 100:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLN = 160;
 309              		.loc 1 100 30
 310 0096 A023     		movs	r3, #160
 311 0098 7B65     		str	r3, [r7, #84]
 101:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 312              		.loc 1 101 30
 313 009a 0223     		movs	r3, #2
 314 009c BB65     		str	r3, [r7, #88]
 102:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 315              		.loc 1 102 30
 316 009e 0223     		movs	r3, #2
 317 00a0 FB65     		str	r3, [r7, #92]
 103:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 318              		.loc 1 103 30
 319 00a2 0223     		movs	r3, #2
 320 00a4 3B66     		str	r3, [r7, #96]
 104:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 321              		.loc 1 104 32
 322 00a6 0823     		movs	r3, #8
 323 00a8 7B66     		str	r3, [r7, #100]
 105:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 324              		.loc 1 105 35
 325 00aa 0023     		movs	r3, #0
 326 00ac BB66     		str	r3, [r7, #104]
 106:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 327              		.loc 1 106 34
 328 00ae 0023     		movs	r3, #0
 329 00b0 FB66     		str	r3, [r7, #108]
 107:./BSP/system.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 330              		.loc 1 107 7
 331 00b2 07F12403 		add	r3, r7, #36
 332 00b6 1846     		mov	r0, r3
 333 00b8 FFF7FEFF 		bl	HAL_RCC_OscConfig
 334 00bc 0346     		mov	r3, r0
 335              		.loc 1 107 6
 336 00be 002B     		cmp	r3, #0
 337 00c0 03D0     		beq	.L15
 108:./BSP/system.c ****   {
 109:./BSP/system.c ****     Error_Handler(__FILE__, __LINE__);
 338              		.loc 1 109 5
 339 00c2 6D21     		movs	r1, #109
 340 00c4 1748     		ldr	r0, .L17+12
 341 00c6 FFF7FEFF 		bl	Error_Handler
 342              	.L15:
 110:./BSP/system.c ****   }
 111:./BSP/system.c ****   /** Initializes the CPU, AHB and APB buses clocks
 112:./BSP/system.c ****   */
 113:./BSP/system.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 343              		.loc 1 113 31
ARM GAS  /tmp/cc35GObF.s 			page 9


 344 00ca 3F23     		movs	r3, #63
 345 00cc 7B60     		str	r3, [r7, #4]
 114:./BSP/system.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 115:./BSP/system.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 116:./BSP/system.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 346              		.loc 1 116 34
 347 00ce 0323     		movs	r3, #3
 348 00d0 BB60     		str	r3, [r7, #8]
 117:./BSP/system.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 349              		.loc 1 117 35
 350 00d2 0023     		movs	r3, #0
 351 00d4 FB60     		str	r3, [r7, #12]
 118:./BSP/system.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 352              		.loc 1 118 35
 353 00d6 0823     		movs	r3, #8
 354 00d8 3B61     		str	r3, [r7, #16]
 119:./BSP/system.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 355              		.loc 1 119 36
 356 00da 4023     		movs	r3, #64
 357 00dc 7B61     		str	r3, [r7, #20]
 120:./BSP/system.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 358              		.loc 1 120 36
 359 00de 4023     		movs	r3, #64
 360 00e0 BB61     		str	r3, [r7, #24]
 121:./BSP/system.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 361              		.loc 1 121 36
 362 00e2 4FF48063 		mov	r3, #1024
 363 00e6 FB61     		str	r3, [r7, #28]
 122:./BSP/system.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 364              		.loc 1 122 36
 365 00e8 4023     		movs	r3, #64
 366 00ea 3B62     		str	r3, [r7, #32]
 123:./BSP/system.c **** 
 124:./BSP/system.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 367              		.loc 1 124 7
 368 00ec 3B1D     		adds	r3, r7, #4
 369 00ee 0221     		movs	r1, #2
 370 00f0 1846     		mov	r0, r3
 371 00f2 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 372 00f6 0346     		mov	r3, r0
 373              		.loc 1 124 6
 374 00f8 002B     		cmp	r3, #0
 375 00fa 03D0     		beq	.L16
 125:./BSP/system.c ****   {
 126:./BSP/system.c ****     Error_Handler(__FILE__, __LINE__);
 376              		.loc 1 126 5
 377 00fc 7E21     		movs	r1, #126
 378 00fe 0948     		ldr	r0, .L17+12
 379 0100 FFF7FEFF 		bl	Error_Handler
 380              	.L16:
 127:./BSP/system.c ****   }
 128:./BSP/system.c ****   HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_HSI, RCC_MCODIV_1);
 381              		.loc 1 128 3
 382 0104 4FF48022 		mov	r2, #262144
 383 0108 0021     		movs	r1, #0
 384 010a 0020     		movs	r0, #0
 385 010c FFF7FEFF 		bl	HAL_RCC_MCOConfig
ARM GAS  /tmp/cc35GObF.s 			page 10


 129:./BSP/system.c **** }
 386              		.loc 1 129 1
 387 0110 00BF     		nop
 388 0112 7037     		adds	r7, r7, #112
 389              	.LCFI10:
 390              		.cfi_def_cfa_offset 8
 391 0114 BD46     		mov	sp, r7
 392              	.LCFI11:
 393              		.cfi_def_cfa_register 13
 394              		@ sp needed
 395 0116 80BD     		pop	{r7, pc}
 396              	.L18:
 397              		.align	2
 398              	.L17:
 399 0118 00480258 		.word	1476544512
 400 011c 00040058 		.word	1476396032
 401 0120 00440258 		.word	1476543488
 402 0124 00000000 		.word	.LC0
 403              		.cfi_endproc
 404              	.LFE340:
 406              		.section	.text.MPU_Config,"ax",%progbits
 407              		.align	1
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 411              		.fpu fpv5-d16
 413              	MPU_Config:
 414              	.LFB341:
 130:./BSP/system.c **** 
 131:./BSP/system.c **** static void MPU_Config(void)
 132:./BSP/system.c **** {
 415              		.loc 1 132 1
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 16
 418              		@ frame_needed = 1, uses_anonymous_args = 0
 419 0000 80B5     		push	{r7, lr}
 420              	.LCFI12:
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 7, -8
 423              		.cfi_offset 14, -4
 424 0002 84B0     		sub	sp, sp, #16
 425              	.LCFI13:
 426              		.cfi_def_cfa_offset 24
 427 0004 00AF     		add	r7, sp, #0
 428              	.LCFI14:
 429              		.cfi_def_cfa_register 7
 133:./BSP/system.c ****   MPU_Region_InitTypeDef MPU_InitStruct = {0};
 430              		.loc 1 133 26
 431 0006 3B46     		mov	r3, r7
 432 0008 0022     		movs	r2, #0
 433 000a 1A60     		str	r2, [r3]
 434 000c 5A60     		str	r2, [r3, #4]
 435 000e 9A60     		str	r2, [r3, #8]
 436 0010 DA60     		str	r2, [r3, #12]
 134:./BSP/system.c **** 
 135:./BSP/system.c ****   /* Disables the MPU */
 136:./BSP/system.c ****   HAL_MPU_Disable();
ARM GAS  /tmp/cc35GObF.s 			page 11


 437              		.loc 1 136 3
 438 0012 FFF7FEFF 		bl	HAL_MPU_Disable
 137:./BSP/system.c ****   /** Initializes and configures the Region and the memory to be protected
 138:./BSP/system.c ****   */
 139:./BSP/system.c ****   MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 439              		.loc 1 139 25
 440 0016 0123     		movs	r3, #1
 441 0018 3B70     		strb	r3, [r7]
 140:./BSP/system.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 442              		.loc 1 140 25
 443 001a 0023     		movs	r3, #0
 444 001c 7B70     		strb	r3, [r7, #1]
 141:./BSP/system.c ****   MPU_InitStruct.BaseAddress = 0x90000000;
 445              		.loc 1 141 30
 446 001e 4FF01043 		mov	r3, #-1879048192
 447 0022 7B60     		str	r3, [r7, #4]
 142:./BSP/system.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 448              		.loc 1 142 23
 449 0024 1B23     		movs	r3, #27
 450 0026 3B72     		strb	r3, [r7, #8]
 143:./BSP/system.c ****   MPU_InitStruct.SubRegionDisable = 0x0;
 451              		.loc 1 143 35
 452 0028 0023     		movs	r3, #0
 453 002a 7B72     		strb	r3, [r7, #9]
 144:./BSP/system.c ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 454              		.loc 1 144 31
 455 002c 0023     		movs	r3, #0
 456 002e BB72     		strb	r3, [r7, #10]
 145:./BSP/system.c ****   MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 457              		.loc 1 145 35
 458 0030 0323     		movs	r3, #3
 459 0032 FB72     		strb	r3, [r7, #11]
 146:./BSP/system.c ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 460              		.loc 1 146 30
 461 0034 0123     		movs	r3, #1
 462 0036 3B73     		strb	r3, [r7, #12]
 147:./BSP/system.c ****   MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
 463              		.loc 1 147 30
 464 0038 0023     		movs	r3, #0
 465 003a 7B73     		strb	r3, [r7, #13]
 148:./BSP/system.c ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 466              		.loc 1 148 30
 467 003c 0023     		movs	r3, #0
 468 003e BB73     		strb	r3, [r7, #14]
 149:./BSP/system.c ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 469              		.loc 1 149 31
 470 0040 0023     		movs	r3, #0
 471 0042 FB73     		strb	r3, [r7, #15]
 150:./BSP/system.c **** 
 151:./BSP/system.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 472              		.loc 1 151 3
 473 0044 3B46     		mov	r3, r7
 474 0046 1846     		mov	r0, r3
 475 0048 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 152:./BSP/system.c ****   /** Initializes and configures the Region and the memory to be protected
 153:./BSP/system.c ****   */
 154:./BSP/system.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER1;
ARM GAS  /tmp/cc35GObF.s 			page 12


 476              		.loc 1 154 25
 477 004c 0123     		movs	r3, #1
 478 004e 7B70     		strb	r3, [r7, #1]
 155:./BSP/system.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
 479              		.loc 1 155 23
 480 0050 1A23     		movs	r3, #26
 481 0052 3B72     		strb	r3, [r7, #8]
 156:./BSP/system.c **** 
 157:./BSP/system.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 482              		.loc 1 157 3
 483 0054 3B46     		mov	r3, r7
 484 0056 1846     		mov	r0, r3
 485 0058 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 158:./BSP/system.c ****   /** Initializes and configures the Region and the memory to be protected
 159:./BSP/system.c ****   */
 160:./BSP/system.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 486              		.loc 1 160 25
 487 005c 0223     		movs	r3, #2
 488 005e 7B70     		strb	r3, [r7, #1]
 161:./BSP/system.c ****   MPU_InitStruct.BaseAddress = 0xD0000000;
 489              		.loc 1 161 30
 490 0060 4FF05043 		mov	r3, #-805306368
 491 0064 7B60     		str	r3, [r7, #4]
 162:./BSP/system.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
 492              		.loc 1 162 23
 493 0066 1823     		movs	r3, #24
 494 0068 3B72     		strb	r3, [r7, #8]
 163:./BSP/system.c ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 495              		.loc 1 163 30
 496 006a 0123     		movs	r3, #1
 497 006c BB73     		strb	r3, [r7, #14]
 164:./BSP/system.c **** 
 165:./BSP/system.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 498              		.loc 1 165 3
 499 006e 3B46     		mov	r3, r7
 500 0070 1846     		mov	r0, r3
 501 0072 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 166:./BSP/system.c ****   /** Initializes and configures the Region and the memory to be protected
 167:./BSP/system.c ****   */
 168:./BSP/system.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER3;
 502              		.loc 1 168 25
 503 0076 0323     		movs	r3, #3
 504 0078 7B70     		strb	r3, [r7, #1]
 169:./BSP/system.c ****   MPU_InitStruct.BaseAddress = 0x24000000;
 505              		.loc 1 169 30
 506 007a 4FF01053 		mov	r3, #603979776
 507 007e 7B60     		str	r3, [r7, #4]
 170:./BSP/system.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
 508              		.loc 1 170 23
 509 0080 1223     		movs	r3, #18
 510 0082 3B72     		strb	r3, [r7, #8]
 171:./BSP/system.c ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 511              		.loc 1 171 30
 512 0084 0023     		movs	r3, #0
 513 0086 3B73     		strb	r3, [r7, #12]
 172:./BSP/system.c **** 
 173:./BSP/system.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
ARM GAS  /tmp/cc35GObF.s 			page 13


 514              		.loc 1 173 3
 515 0088 3B46     		mov	r3, r7
 516 008a 1846     		mov	r0, r3
 517 008c FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 174:./BSP/system.c ****   /** Initializes and configures the Region and the memory to be protected
 175:./BSP/system.c ****   */
 176:./BSP/system.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 518              		.loc 1 176 25
 519 0090 0423     		movs	r3, #4
 520 0092 7B70     		strb	r3, [r7, #1]
 177:./BSP/system.c ****   MPU_InitStruct.BaseAddress = 0x10000000;
 521              		.loc 1 177 30
 522 0094 4FF08053 		mov	r3, #268435456
 523 0098 7B60     		str	r3, [r7, #4]
 178:./BSP/system.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_256KB;
 524              		.loc 1 178 23
 525 009a 1123     		movs	r3, #17
 526 009c 3B72     		strb	r3, [r7, #8]
 179:./BSP/system.c **** 
 180:./BSP/system.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 527              		.loc 1 180 3
 528 009e 3B46     		mov	r3, r7
 529 00a0 1846     		mov	r0, r3
 530 00a2 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 181:./BSP/system.c ****   /** Initializes and configures the Region and the memory to be protected
 182:./BSP/system.c ****   */
 183:./BSP/system.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER5;
 531              		.loc 1 183 25
 532 00a6 0523     		movs	r3, #5
 533 00a8 7B70     		strb	r3, [r7, #1]
 184:./BSP/system.c ****   MPU_InitStruct.BaseAddress = 0x10040000;
 534              		.loc 1 184 30
 535 00aa 084B     		ldr	r3, .L20
 536 00ac 7B60     		str	r3, [r7, #4]
 185:./BSP/system.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_32KB;
 537              		.loc 1 185 23
 538 00ae 0E23     		movs	r3, #14
 539 00b0 3B72     		strb	r3, [r7, #8]
 186:./BSP/system.c ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 540              		.loc 1 186 30
 541 00b2 0123     		movs	r3, #1
 542 00b4 3B73     		strb	r3, [r7, #12]
 187:./BSP/system.c **** 
 188:./BSP/system.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 543              		.loc 1 188 3
 544 00b6 3B46     		mov	r3, r7
 545 00b8 1846     		mov	r0, r3
 546 00ba FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 189:./BSP/system.c ****   /* Enables the MPU */
 190:./BSP/system.c ****   HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 547              		.loc 1 190 3
 548 00be 0420     		movs	r0, #4
 549 00c0 FFF7FEFF 		bl	HAL_MPU_Enable
 191:./BSP/system.c **** }
 550              		.loc 1 191 1
 551 00c4 00BF     		nop
 552 00c6 1037     		adds	r7, r7, #16
ARM GAS  /tmp/cc35GObF.s 			page 14


 553              	.LCFI15:
 554              		.cfi_def_cfa_offset 8
 555 00c8 BD46     		mov	sp, r7
 556              	.LCFI16:
 557              		.cfi_def_cfa_register 13
 558              		@ sp needed
 559 00ca 80BD     		pop	{r7, pc}
 560              	.L21:
 561              		.align	2
 562              	.L20:
 563 00cc 00000410 		.word	268697600
 564              		.cfi_endproc
 565              	.LFE341:
 567              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 568              		.align	1
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 572              		.fpu fpv5-d16
 574              	PeriphCommonClock_Config:
 575              	.LFB342:
 192:./BSP/system.c **** 
 193:./BSP/system.c **** static void PeriphCommonClock_Config(void)
 194:./BSP/system.c **** {
 576              		.loc 1 194 1
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 192
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580 0000 80B5     		push	{r7, lr}
 581              	.LCFI17:
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 0002 B0B0     		sub	sp, sp, #192
 586              	.LCFI18:
 587              		.cfi_def_cfa_offset 200
 588 0004 00AF     		add	r7, sp, #0
 589              	.LCFI19:
 590              		.cfi_def_cfa_register 7
 195:./BSP/system.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 591              		.loc 1 195 28
 592 0006 3B46     		mov	r3, r7
 593 0008 C022     		movs	r2, #192
 594 000a 0021     		movs	r1, #0
 595 000c 1846     		mov	r0, r3
 596 000e FFF7FEFF 		bl	memset
 196:./BSP/system.c **** 
 197:./BSP/system.c ****   /** Initializes the peripherals clock
 198:./BSP/system.c ****   */
 199:./BSP/system.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 597              		.loc 1 199 44
 598 0012 4FF40023 		mov	r3, #524288
 599 0016 3B60     		str	r3, [r7]
 200:./BSP/system.c ****   PeriphClkInitStruct.PLL2.PLL2M = 2;
 600              		.loc 1 200 34
 601 0018 0223     		movs	r3, #2
 602 001a 7B60     		str	r3, [r7, #4]
ARM GAS  /tmp/cc35GObF.s 			page 15


 201:./BSP/system.c ****   PeriphClkInitStruct.PLL2.PLL2N = 12;
 603              		.loc 1 201 34
 604 001c 0C23     		movs	r3, #12
 605 001e BB60     		str	r3, [r7, #8]
 202:./BSP/system.c ****   PeriphClkInitStruct.PLL2.PLL2P = 2;
 606              		.loc 1 202 34
 607 0020 0223     		movs	r3, #2
 608 0022 FB60     		str	r3, [r7, #12]
 203:./BSP/system.c ****   PeriphClkInitStruct.PLL2.PLL2Q = 2;
 609              		.loc 1 203 34
 610 0024 0223     		movs	r3, #2
 611 0026 3B61     		str	r3, [r7, #16]
 204:./BSP/system.c ****   PeriphClkInitStruct.PLL2.PLL2R = 2;
 612              		.loc 1 204 34
 613 0028 0223     		movs	r3, #2
 614 002a 7B61     		str	r3, [r7, #20]
 205:./BSP/system.c ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 615              		.loc 1 205 36
 616 002c C023     		movs	r3, #192
 617 002e BB61     		str	r3, [r7, #24]
 206:./BSP/system.c ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOMEDIUM;
 618              		.loc 1 206 39
 619 0030 2023     		movs	r3, #32
 620 0032 FB61     		str	r3, [r7, #28]
 207:./BSP/system.c ****   PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 621              		.loc 1 207 38
 622 0034 0023     		movs	r3, #0
 623 0036 3B62     		str	r3, [r7, #32]
 208:./BSP/system.c ****   PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 624              		.loc 1 208 41
 625 0038 0023     		movs	r3, #0
 626 003a C7F8A430 		str	r3, [r7, #164]
 209:./BSP/system.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 627              		.loc 1 209 7
 628 003e 3B46     		mov	r3, r7
 629 0040 1846     		mov	r0, r3
 630 0042 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 631 0046 0346     		mov	r3, r0
 632              		.loc 1 209 6
 633 0048 002B     		cmp	r3, #0
 634 004a 03D0     		beq	.L24
 210:./BSP/system.c ****   {
 211:./BSP/system.c ****     Error_Handler(__FILE__, __LINE__);
 635              		.loc 1 211 5
 636 004c D321     		movs	r1, #211
 637 004e 0348     		ldr	r0, .L25
 638 0050 FFF7FEFF 		bl	Error_Handler
 639              	.L24:
 212:./BSP/system.c ****   }
 213:./BSP/system.c **** }
 640              		.loc 1 213 1
 641 0054 00BF     		nop
 642 0056 C037     		adds	r7, r7, #192
 643              	.LCFI20:
 644              		.cfi_def_cfa_offset 8
 645 0058 BD46     		mov	sp, r7
 646              	.LCFI21:
ARM GAS  /tmp/cc35GObF.s 			page 16


 647              		.cfi_def_cfa_register 13
 648              		@ sp needed
 649 005a 80BD     		pop	{r7, pc}
 650              	.L26:
 651              		.align	2
 652              	.L25:
 653 005c 00000000 		.word	.LC0
 654              		.cfi_endproc
 655              	.LFE342:
 657              		.section	.text.CPU_CACHE_Enable,"ax",%progbits
 658              		.align	1
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 662              		.fpu fpv5-d16
 664              	CPU_CACHE_Enable:
 665              	.LFB343:
 214:./BSP/system.c **** 
 215:./BSP/system.c **** static void CPU_CACHE_Enable(void)
 216:./BSP/system.c **** {
 666              		.loc 1 216 1
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 16
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 671 0000 80B4     		push	{r7}
 672              	.LCFI22:
 673              		.cfi_def_cfa_offset 4
 674              		.cfi_offset 7, -4
 675 0002 85B0     		sub	sp, sp, #20
 676              	.LCFI23:
 677              		.cfi_def_cfa_offset 24
 678 0004 00AF     		add	r7, sp, #0
 679              	.LCFI24:
 680              		.cfi_def_cfa_register 7
 681              	.LBB48:
 682              	.LBB49:
 683              		.file 2 "./Libraries/CMSIS/Core/Include/core_cm7.h"
   1:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**************************************************************************//**
   2:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * @file     core_cm7.h
   3:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * @version  V5.1.1
   5:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * @date     28. March 2019
   6:./Libraries/CMSIS/Core/Include/core_cm7.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*
   8:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:./Libraries/CMSIS/Core/Include/core_cm7.h ****  *
  10:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/Core/Include/core_cm7.h ****  *
  12:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/Core/Include/core_cm7.h ****  *
  16:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/Core/Include/core_cm7.h ****  *
  18:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  /tmp/cc35GObF.s 			page 17


  20:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * limitations under the License.
  23:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
  24:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  25:./Libraries/CMSIS/Core/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:./Libraries/CMSIS/Core/Include/core_cm7.h **** #elif defined (__clang__)
  28:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
  30:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  31:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  34:./Libraries/CMSIS/Core/Include/core_cm7.h **** #include <stdint.h>
  35:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  36:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifdef __cplusplus
  37:./Libraries/CMSIS/Core/Include/core_cm7.h ****  extern "C" {
  38:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
  39:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  40:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
  41:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:./Libraries/CMSIS/Core/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  44:./Libraries/CMSIS/Core/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:./Libraries/CMSIS/Core/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  47:./Libraries/CMSIS/Core/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:./Libraries/CMSIS/Core/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  50:./Libraries/CMSIS/Core/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:./Libraries/CMSIS/Core/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
  53:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  54:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  55:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*******************************************************************************
  56:./Libraries/CMSIS/Core/Include/core_cm7.h ****  *                 CMSIS definitions
  57:./Libraries/CMSIS/Core/Include/core_cm7.h ****  ******************************************************************************/
  58:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
  59:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
  61:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
  62:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  63:./Libraries/CMSIS/Core/Include/core_cm7.h **** #include "cmsis_version.h"
  64:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  65:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [31:1
  67:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( __CM_CMSIS_VERSION_SUB)                  /*!< \deprecated [15:0
  68:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:./Libraries/CMSIS/Core/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< \deprecated CMSIS
  70:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  71:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  72:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  73:./Libraries/CMSIS/Core/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:./Libraries/CMSIS/Core/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:./Libraries/CMSIS/Core/Include/core_cm7.h **** */
  76:./Libraries/CMSIS/Core/Include/core_cm7.h **** #if defined ( __CC_ARM )
ARM GAS  /tmp/cc35GObF.s 			page 18


  77:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  78:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
  80:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #else
  81:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
  83:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #endif
  84:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #else
  85:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
  86:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
  87:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  88:./Libraries/CMSIS/Core/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined __ARM_FP
  90:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
  92:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #else
  93:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
  95:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #endif
  96:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #else
  97:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
  98:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
  99:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 100:./Libraries/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 101:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 104:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #else
 105:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 107:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #endif
 108:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #else
 109:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 110:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 111:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 112:./Libraries/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 113:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined __ARMVFP__
 114:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 116:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #else
 117:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 119:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #endif
 120:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #else
 121:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 122:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 123:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 124:./Libraries/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 125:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 126:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #else
 129:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #endif
 132:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #else
 133:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
ARM GAS  /tmp/cc35GObF.s 			page 19


 134:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 135:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 136:./Libraries/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 137:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined __FPU_VFP__
 138:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #else
 141:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #endif
 144:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #else
 145:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 146:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 147:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 148:./Libraries/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 149:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 150:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #else
 153:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #endif
 156:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #else
 157:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 159:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 160:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
 161:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 162:./Libraries/CMSIS/Core/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 164:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 165:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifdef __cplusplus
 166:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
 167:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
 168:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 169:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 170:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 171:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 172:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 173:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 174:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 175:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 176:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifdef __cplusplus
 177:./Libraries/CMSIS/Core/Include/core_cm7.h ****  extern "C" {
 178:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
 179:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 180:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* check device defines and use defaults */
 181:./Libraries/CMSIS/Core/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef __CM7_REV
 183:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 184:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 185:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 186:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 187:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 188:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 189:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
ARM GAS  /tmp/cc35GObF.s 			page 20


 191:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 192:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 193:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 194:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 196:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 197:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 198:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 199:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 200:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 201:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 202:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 203:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 204:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 206:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 207:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 208:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 209:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 211:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 212:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 213:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 214:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 216:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 217:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 218:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 219:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 221:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
 222:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 223:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 224:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 225:./Libraries/CMSIS/Core/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 227:./Libraries/CMSIS/Core/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:./Libraries/CMSIS/Core/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:./Libraries/CMSIS/Core/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:./Libraries/CMSIS/Core/Include/core_cm7.h **** */
 231:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifdef __cplusplus
 232:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 233:./Libraries/CMSIS/Core/Include/core_cm7.h **** #else
 234:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 235:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
 236:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 237:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 238:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 239:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 241:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 242:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 243:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 244:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 245:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 246:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 247:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /tmp/cc35GObF.s 			page 21


 248:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*******************************************************************************
 249:./Libraries/CMSIS/Core/Include/core_cm7.h ****  *                 Register Abstraction
 250:./Libraries/CMSIS/Core/Include/core_cm7.h ****   Core Register contain:
 251:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core Register
 252:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core NVIC Register
 253:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core SCB Register
 254:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core SysTick Register
 255:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core Debug Register
 256:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core MPU Register
 257:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core FPU Register
 258:./Libraries/CMSIS/Core/Include/core_cm7.h ****  ******************************************************************************/
 259:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 260:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 261:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 262:./Libraries/CMSIS/Core/Include/core_cm7.h **** */
 263:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 264:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 265:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 266:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 267:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief      Core Register type definitions.
 268:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
 269:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 270:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 271:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 272:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 273:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 274:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef union
 275:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
 276:./Libraries/CMSIS/Core/Include/core_cm7.h ****   struct
 277:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
 278:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 279:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 280:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 281:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 282:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 283:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 284:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 285:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 286:./Libraries/CMSIS/Core/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 287:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 288:./Libraries/CMSIS/Core/Include/core_cm7.h **** } APSR_Type;
 289:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 290:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* APSR Register Definitions */
 291:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 292:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 293:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 294:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 295:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 296:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 297:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 298:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 299:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 300:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 301:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 302:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 303:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 304:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
ARM GAS  /tmp/cc35GObF.s 			page 22


 305:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 306:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 307:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 308:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 309:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 310:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 311:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 312:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 313:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef union
 314:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
 315:./Libraries/CMSIS/Core/Include/core_cm7.h ****   struct
 316:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
 317:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 318:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 319:./Libraries/CMSIS/Core/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 320:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:./Libraries/CMSIS/Core/Include/core_cm7.h **** } IPSR_Type;
 322:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 323:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* IPSR Register Definitions */
 324:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 325:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 326:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 327:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 328:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 329:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 330:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 331:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef union
 332:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
 333:./Libraries/CMSIS/Core/Include/core_cm7.h ****   struct
 334:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
 335:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 336:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 337:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 338:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 339:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 340:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 341:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 342:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 343:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 344:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 345:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 346:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 347:./Libraries/CMSIS/Core/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 348:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 349:./Libraries/CMSIS/Core/Include/core_cm7.h **** } xPSR_Type;
 350:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 351:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* xPSR Register Definitions */
 352:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 353:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 354:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 355:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 356:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 357:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 358:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 359:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 360:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 361:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
ARM GAS  /tmp/cc35GObF.s 			page 23


 362:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 363:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 364:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 365:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 366:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 367:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 368:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 369:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 370:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 371:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 372:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 373:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 374:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 375:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 376:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 377:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 378:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 379:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 380:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 381:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 382:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 383:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 384:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 385:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 386:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef union
 387:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
 388:./Libraries/CMSIS/Core/Include/core_cm7.h ****   struct
 389:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
 390:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 391:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 392:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 393:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 394:./Libraries/CMSIS/Core/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 395:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 396:./Libraries/CMSIS/Core/Include/core_cm7.h **** } CONTROL_Type;
 397:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 398:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* CONTROL Register Definitions */
 399:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 400:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 401:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 402:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 403:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 404:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 405:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 406:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 407:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 408:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 409:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 410:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 411:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 412:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 413:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 414:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 415:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
 416:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 417:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 418:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
ARM GAS  /tmp/cc35GObF.s 			page 24


 419:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 420:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 421:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
 422:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
 423:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 424:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 425:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 426:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED1[24U];
 427:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 428:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 429:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 430:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 431:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 432:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 433:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 434:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 435:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 436:./Libraries/CMSIS/Core/Include/core_cm7.h **** }  NVIC_Type;
 437:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 438:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 439:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 440:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 441:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 442:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 443:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 444:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 445:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 446:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 447:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 448:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 449:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
 450:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 451:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 452:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 453:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 454:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 455:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
 456:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
 457:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 458:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 459:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 460:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 461:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 462:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 463:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 464:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 465:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 466:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 467:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 468:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 469:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 470:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 471:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 472:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 473:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 474:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 475:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
ARM GAS  /tmp/cc35GObF.s 			page 25


 476:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 477:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 478:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 479:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 480:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 481:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 482:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 483:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 484:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 485:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 486:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 487:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2
 488:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 489:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 490:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 491:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 492:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 493:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 494:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 495:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 496:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 497:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 498:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 499:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 500:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 501:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 502:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 503:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 504:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 505:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 506:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 507:./Libraries/CMSIS/Core/Include/core_cm7.h **** } SCB_Type;
 508:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 509:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 510:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 511:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 512:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 513:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 514:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 515:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 516:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 517:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 518:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 519:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 520:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 521:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 522:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 523:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 524:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 525:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 526:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 527:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 528:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 529:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 530:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 531:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 532:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
ARM GAS  /tmp/cc35GObF.s 			page 26


 533:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 534:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 535:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 536:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 537:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 538:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 539:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 540:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 541:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 542:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 543:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 544:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 545:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 546:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 547:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 548:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 549:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 550:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 551:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 552:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 553:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 554:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 555:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 556:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 557:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 558:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 559:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 560:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 561:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 562:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 563:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 564:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 565:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 566:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 567:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 568:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 569:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 570:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 571:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 572:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 573:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 574:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 575:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 576:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 577:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 578:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 579:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 580:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 581:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 582:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 583:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 584:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 585:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 586:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 587:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 588:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 589:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
ARM GAS  /tmp/cc35GObF.s 			page 27


 590:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 591:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 592:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 593:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 594:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 595:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 596:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 597:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 598:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 599:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 600:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 601:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 602:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 603:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 604:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 605:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 606:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 607:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 608:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 609:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 610:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 611:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 612:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 613:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 614:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 615:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 616:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 617:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 618:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 619:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 620:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 621:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 622:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 623:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 624:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 625:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 626:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 627:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 628:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 629:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 630:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 631:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 632:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 633:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 634:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 635:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 636:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 637:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 638:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 639:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 640:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 641:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 642:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 643:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 644:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 645:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 646:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
ARM GAS  /tmp/cc35GObF.s 			page 28


 647:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 648:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 649:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 650:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 651:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 652:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 653:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 654:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 655:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 656:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 657:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 658:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 659:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 660:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 661:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 662:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 663:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 664:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 665:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 666:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 667:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 668:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 669:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 670:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 671:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 672:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 673:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 674:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 675:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 676:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 677:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 678:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 679:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 680:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 681:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 682:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 683:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 684:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 685:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 686:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 687:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 688:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 689:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 690:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 691:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 692:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 693:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 694:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 695:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 696:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 697:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 698:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 699:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 700:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 701:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 702:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 703:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
ARM GAS  /tmp/cc35GObF.s 			page 29


 704:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 705:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 706:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 707:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 708:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 709:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 710:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 711:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 712:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 713:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 714:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 715:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 716:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 717:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 718:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 719:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 720:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 721:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 722:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 723:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 724:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 725:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 726:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 727:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 728:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 729:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 730:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 731:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 732:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 733:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 734:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 735:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 736:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 737:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 738:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 739:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 740:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 741:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 742:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 743:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 744:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 745:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 746:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 747:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 748:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 749:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 750:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 751:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 752:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 753:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 754:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 755:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 756:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 757:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 758:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 759:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 760:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
ARM GAS  /tmp/cc35GObF.s 			page 30


 761:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 762:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 763:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 764:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 765:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 766:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 767:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 768:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 769:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 770:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 771:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 772:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 773:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 774:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 775:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 776:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 777:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 778:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 779:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 780:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 781:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 782:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 783:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 784:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 785:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 786:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 787:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 788:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 789:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 790:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 791:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 792:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 793:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 794:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 795:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 796:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 797:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 798:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 799:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 800:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 801:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 802:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 803:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 804:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 805:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 806:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 807:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 808:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 809:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 810:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 811:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 812:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 813:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 814:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 815:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 816:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 817:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
ARM GAS  /tmp/cc35GObF.s 			page 31


 818:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 819:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 820:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 821:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 822:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 823:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 824:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 825:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 826:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 827:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 828:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 829:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 830:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 831:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 832:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 833:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 834:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 835:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 836:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 837:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 838:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 839:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 840:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 841:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 842:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 843:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 844:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 845:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 846:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 847:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 848:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 849:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 850:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 851:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 852:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 853:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 854:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 855:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 856:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 857:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 858:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 859:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 860:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 861:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 862:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 863:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 864:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 865:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 866:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 867:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 868:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 869:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 870:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 871:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 872:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 873:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 874:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
ARM GAS  /tmp/cc35GObF.s 			page 32


 875:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 876:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 877:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 878:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 879:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 880:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 881:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 882:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 883:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 884:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 885:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 886:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 887:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 888:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 889:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 890:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 891:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 892:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 893:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 894:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 895:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 896:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 897:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 898:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 899:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 900:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 901:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 902:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 903:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 904:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 905:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 906:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 907:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 908:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 909:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 910:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 911:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 912:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 913:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 914:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 915:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
 916:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 917:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 918:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 919:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 920:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 921:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
 922:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
 923:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 924:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 925:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 926:./Libraries/CMSIS/Core/Include/core_cm7.h **** } SCnSCB_Type;
 927:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 928:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 929:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 930:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 931:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /tmp/cc35GObF.s 			page 33


 932:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 933:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDYNADD_Pos         26U                                         /*!< ACTLR: 
 934:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDYNADD_Msk         (1UL << SCnSCB_ACTLR_DISDYNADD_Pos)         /*!< ACTLR: 
 935:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 936:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISISSCH1_Pos         21U                                         /*!< ACTLR: 
 937:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISISSCH1_Msk         (0x1FUL << SCnSCB_ACTLR_DISISSCH1_Pos)      /*!< ACTLR: 
 938:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 939:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDI_Pos             16U                                         /*!< ACTLR: 
 940:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDI_Msk             (0x1FUL << SCnSCB_ACTLR_DISDI_Pos)          /*!< ACTLR: 
 941:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 942:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISCRITAXIRUR_Pos     15U                                         /*!< ACTLR: 
 943:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISCRITAXIRUR_Msk     (1UL << SCnSCB_ACTLR_DISCRITAXIRUR_Pos)     /*!< ACTLR: 
 944:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 945:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACALLOC_Pos      14U                                         /*!< ACTLR: 
 946:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACALLOC_Msk      (1UL << SCnSCB_ACTLR_DISBTACALLOC_Pos)      /*!< ACTLR: 
 947:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 948:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACREAD_Pos       13U                                         /*!< ACTLR: 
 949:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACREAD_Msk       (1UL << SCnSCB_ACTLR_DISBTACREAD_Pos)       /*!< ACTLR: 
 950:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 951:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 952:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 953:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 954:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 955:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 956:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 957:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 958:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 959:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 960:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 961:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 962:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 963:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 964:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 965:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 966:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 967:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 968:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 969:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 970:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 971:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 972:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 973:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
 974:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 975:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 976:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 977:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 978:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 979:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
 980:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
 981:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 982:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 983:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 984:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 985:./Libraries/CMSIS/Core/Include/core_cm7.h **** } SysTick_Type;
 986:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 987:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 988:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
ARM GAS  /tmp/cc35GObF.s 			page 34


 989:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 990:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 991:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 992:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 993:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 994:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 995:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 996:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 997:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 998:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 999:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1000:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
1001:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
1002:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
1003:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1004:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SysTick Current Register Definitions */
1005:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
1006:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
1007:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1008:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
1009:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
1010:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
1011:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1012:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
1013:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
1014:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1015:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
1016:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
1017:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1018:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
1019:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1020:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1021:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1022:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1023:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1024:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1025:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1026:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1027:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1028:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1029:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1030:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1031:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
1032:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1033:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  union
1034:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1035:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1036:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1037:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1038:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1039:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1040:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1041:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1042:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1043:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1044:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1045:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[32U];
ARM GAS  /tmp/cc35GObF.s 			page 35


1046:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1047:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1048:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1049:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1050:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1051:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1052:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1053:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1054:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1055:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1056:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1057:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1058:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1059:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1060:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1061:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1062:./Libraries/CMSIS/Core/Include/core_cm7.h **** } ITM_Type;
1063:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1064:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1065:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1066:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
1067:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1068:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1069:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1070:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1071:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1072:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1073:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1074:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1075:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1076:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1077:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1078:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1079:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1080:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1081:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1082:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1083:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1084:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1085:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1086:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1087:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1088:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1089:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1090:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1091:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1092:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1093:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1094:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1095:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1096:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1097:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1098:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1099:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1100:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1101:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1102:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /tmp/cc35GObF.s 			page 36


1103:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1104:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1105:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1106:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1107:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1108:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1109:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1110:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1111:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1112:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1113:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1114:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1115:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1116:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1117:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1118:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1119:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
1120:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1121:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1122:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1123:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1124:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1125:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1126:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1127:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1128:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1129:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1130:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1131:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1132:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1133:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1134:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1135:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1136:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1137:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1138:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1139:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1140:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1141:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1142:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1143:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1144:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1145:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1146:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1147:./Libraries/CMSIS/Core/Include/core_cm7.h **** } DWT_Type;
1148:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1149:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* DWT Control Register Definitions */
1150:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1151:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1152:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1153:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1154:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1155:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1156:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1157:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1158:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1159:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
ARM GAS  /tmp/cc35GObF.s 			page 37


1160:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1161:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1162:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1163:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1164:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1165:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1166:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1167:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1168:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1169:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1170:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1171:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1172:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1173:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1174:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1175:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1176:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1177:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1178:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1179:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1180:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1181:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1182:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1183:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1184:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1185:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1186:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1187:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1188:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1189:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1190:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1191:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1192:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1193:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1194:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1195:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1196:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1197:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1198:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1199:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1200:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1201:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1202:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1203:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1204:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1205:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1206:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1207:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1208:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1209:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1210:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1211:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1212:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1213:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1214:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1215:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1216:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
ARM GAS  /tmp/cc35GObF.s 			page 38


1217:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1218:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1219:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1220:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1221:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1222:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1223:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1224:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1225:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1226:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1227:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1228:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1229:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1230:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1231:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1232:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1233:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1234:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1235:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1236:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1237:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1238:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1239:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1240:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1241:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1242:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1243:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1244:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1245:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1246:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1247:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1248:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1249:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1250:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1251:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1252:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1253:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1254:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1255:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1256:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1257:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1258:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1259:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1260:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1261:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1262:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1263:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1264:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1265:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1266:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1267:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1268:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1269:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
1270:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1271:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1272:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1273:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
ARM GAS  /tmp/cc35GObF.s 			page 39


1274:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1275:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1276:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1277:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1278:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1279:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1280:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1281:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1282:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1283:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1284:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1285:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1286:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1287:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1288:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1289:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1290:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1291:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1292:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1293:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1294:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1295:./Libraries/CMSIS/Core/Include/core_cm7.h **** } TPI_Type;
1296:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1297:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1298:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1299:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1300:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1301:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1302:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1303:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1304:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1305:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1306:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1307:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1308:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1309:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1310:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1311:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1312:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1313:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1314:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1315:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1316:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1317:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1318:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1319:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1320:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1321:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1322:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1323:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1324:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1325:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1326:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1327:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1328:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1329:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1330:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
ARM GAS  /tmp/cc35GObF.s 			page 40


1331:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1332:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1333:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1334:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1335:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1336:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1337:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1338:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1339:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1340:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1341:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1342:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1343:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1344:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1345:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1346:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1347:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1348:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1349:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1350:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1351:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1352:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1353:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1354:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1355:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1356:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1357:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1358:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1359:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1360:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1361:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1362:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1363:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1364:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1365:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1366:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1367:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1368:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1369:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1370:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1371:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1372:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1373:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1374:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1375:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1376:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1377:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1378:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1379:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1380:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1381:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1382:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1383:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1384:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1385:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1386:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1387:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
ARM GAS  /tmp/cc35GObF.s 			page 41


1388:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1389:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1390:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1391:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1392:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1393:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1394:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1395:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1396:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1397:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1398:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1399:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1400:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1401:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1402:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1403:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1404:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1405:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1406:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1407:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1408:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1409:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1410:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1411:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1412:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1413:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1414:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1415:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1416:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1417:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1418:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1419:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1420:./Libraries/CMSIS/Core/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1421:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1422:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1423:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1424:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1425:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1426:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1427:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1428:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1429:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1430:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1431:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
1432:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1433:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1434:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1435:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1436:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1437:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1438:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1439:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1440:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1441:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1442:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1443:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1444:./Libraries/CMSIS/Core/Include/core_cm7.h **** } MPU_Type;
ARM GAS  /tmp/cc35GObF.s 			page 42


1445:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1446:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_RALIASES                  4U
1447:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1448:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* MPU Type Register Definitions */
1449:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1450:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1451:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1452:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1453:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1454:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1455:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1456:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1457:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1458:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* MPU Control Register Definitions */
1459:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1460:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1461:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1462:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1463:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1464:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1465:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1466:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1467:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1468:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1469:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1470:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1471:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1472:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1473:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1474:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1475:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1476:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1477:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1478:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1479:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1480:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1481:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1482:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1483:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1484:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1485:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1486:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1487:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1488:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1489:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1490:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1491:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1492:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1493:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1494:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1495:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1496:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1497:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1498:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1499:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1500:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1501:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
ARM GAS  /tmp/cc35GObF.s 			page 43


1502:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1503:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1504:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1505:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1506:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1507:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1508:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1509:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1510:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1511:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1512:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1513:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1514:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1515:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1516:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1517:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1518:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1519:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1520:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1521:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1522:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1523:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1524:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1525:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1526:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1527:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
1528:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1529:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1530:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1531:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1532:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1533:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1534:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1535:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1536:./Libraries/CMSIS/Core/Include/core_cm7.h **** } FPU_Type;
1537:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1538:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1539:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1540:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1541:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1542:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1543:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1544:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1545:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1546:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1547:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1548:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1549:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1550:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1551:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1552:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1553:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1554:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1555:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1556:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1557:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1558:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
ARM GAS  /tmp/cc35GObF.s 			page 44


1559:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1560:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1561:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1562:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1563:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1564:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1565:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1566:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1567:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1568:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1569:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1570:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1571:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1572:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1573:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1574:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1575:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1576:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1577:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1578:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1579:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1580:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1581:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1582:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1583:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1584:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1585:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1586:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1587:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1588:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1589:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1590:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1591:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1592:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1593:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1594:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1595:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1596:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1597:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1598:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1599:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1600:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1601:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1602:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1603:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1604:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1605:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1606:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1607:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1608:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1609:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1610:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1611:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1612:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1613:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1614:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1615:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
ARM GAS  /tmp/cc35GObF.s 			page 45


1616:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1617:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1618:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1619:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1620:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1621:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1622:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1623:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1624:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1625:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1626:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1627:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1628:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1629:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1630:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1631:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1632:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1633:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1634:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1635:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1636:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1637:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1638:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1639:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
1640:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1641:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1642:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1643:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1644:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1645:./Libraries/CMSIS/Core/Include/core_cm7.h **** } CoreDebug_Type;
1646:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1647:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1648:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1649:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1650:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1651:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1652:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1653:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1654:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1655:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1656:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1657:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1658:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1659:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1660:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1661:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1662:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1663:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1664:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1665:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1666:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1667:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1668:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1669:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1670:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1671:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1672:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
ARM GAS  /tmp/cc35GObF.s 			page 46


1673:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1674:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1675:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1676:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1677:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1678:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1679:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1680:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1681:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1682:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1683:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1684:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1685:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1686:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1687:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1688:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1689:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1690:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1691:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1692:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1693:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1694:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1695:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1696:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1697:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1698:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1699:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1700:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1701:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1702:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1703:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1704:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1705:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1706:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1707:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1708:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1709:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1710:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1711:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1712:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1713:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1714:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1715:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1716:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1717:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1718:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1719:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1720:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1721:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1722:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1723:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1724:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1725:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1726:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1727:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1728:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1729:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
ARM GAS  /tmp/cc35GObF.s 			page 47


1730:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1731:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1732:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1733:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1734:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1735:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1736:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1737:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1738:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1739:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1740:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1741:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1742:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1743:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1744:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1745:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return           Masked and shifted value.
1746:./Libraries/CMSIS/Core/Include/core_cm7.h **** */
1747:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1748:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1749:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1750:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1751:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1752:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1753:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1754:./Libraries/CMSIS/Core/Include/core_cm7.h **** */
1755:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1756:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1757:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1758:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1759:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1760:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1761:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1762:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1763:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1764:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1765:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1766:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1767:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1768:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1769:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1770:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1771:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1772:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1773:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1774:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1775:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1776:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1777:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1778:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1779:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1780:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1781:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1782:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1783:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1784:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1785:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1786:./Libraries/CMSIS/Core/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
ARM GAS  /tmp/cc35GObF.s 			page 48


1787:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1788:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1789:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
1790:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1791:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1792:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1793:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1794:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} */
1795:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1796:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1797:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1798:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*******************************************************************************
1799:./Libraries/CMSIS/Core/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1800:./Libraries/CMSIS/Core/Include/core_cm7.h ****   Core Function Interface contains:
1801:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core NVIC Functions
1802:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core SysTick Functions
1803:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core Debug Functions
1804:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core Register Access Functions
1805:./Libraries/CMSIS/Core/Include/core_cm7.h ****  ******************************************************************************/
1806:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1807:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1808:./Libraries/CMSIS/Core/Include/core_cm7.h **** */
1809:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1810:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1811:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1812:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1813:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1814:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1815:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1816:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1817:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1818:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1819:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1820:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1821:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1822:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1823:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
1824:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1825:./Libraries/CMSIS/Core/Include/core_cm7.h **** #else
1826:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1827:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1828:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1829:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1830:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1831:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1832:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1833:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1834:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1835:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1836:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1837:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1838:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1839:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1840:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1841:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1842:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1843:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
ARM GAS  /tmp/cc35GObF.s 			page 49


1844:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1845:./Libraries/CMSIS/Core/Include/core_cm7.h **** #else
1846:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1847:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1848:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1849:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1850:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1851:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1852:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1853:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1854:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1855:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1856:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1857:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1858:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1859:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1860:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1861:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1862:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1863:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Set Priority Grouping
1864:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1865:./Libraries/CMSIS/Core/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1866:./Libraries/CMSIS/Core/Include/core_cm7.h ****            Only values from 0..7 are used.
1867:./Libraries/CMSIS/Core/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1868:./Libraries/CMSIS/Core/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1869:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1870:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1871:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1872:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1873:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t reg_value;
1874:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1875:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1876:./Libraries/CMSIS/Core/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1877:./Libraries/CMSIS/Core/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1878:./Libraries/CMSIS/Core/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1879:./Libraries/CMSIS/Core/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1880:./Libraries/CMSIS/Core/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1881:./Libraries/CMSIS/Core/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1882:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
1883:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1884:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1885:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1886:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Priority Grouping
1887:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1888:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1889:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1890:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1891:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1892:./Libraries/CMSIS/Core/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1893:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
1894:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1895:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1896:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1897:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Enable Interrupt
1898:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1899:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1900:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
ARM GAS  /tmp/cc35GObF.s 			page 50


1901:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1902:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1903:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1904:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1905:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1906:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __COMPILER_BARRIER();
1907:./Libraries/CMSIS/Core/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1908:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __COMPILER_BARRIER();
1909:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
1910:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
1911:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1912:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1913:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1914:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1915:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1916:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1917:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1918:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1919:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1920:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1921:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1922:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1923:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1924:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1925:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1926:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
1927:./Libraries/CMSIS/Core/Include/core_cm7.h ****   else
1928:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1929:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return(0U);
1930:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
1931:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
1932:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1933:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1934:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1935:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Disable Interrupt
1936:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1937:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1938:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1939:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1940:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1941:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1942:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1943:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1944:./Libraries/CMSIS/Core/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1945:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
1946:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __ISB();
1947:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
1948:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
1949:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1950:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1951:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1952:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1953:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1954:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1955:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1956:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1957:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
ARM GAS  /tmp/cc35GObF.s 			page 51


1958:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1959:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1960:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1961:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1962:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1963:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1964:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
1965:./Libraries/CMSIS/Core/Include/core_cm7.h ****   else
1966:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1967:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return(0U);
1968:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
1969:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
1970:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1971:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1972:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1973:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1974:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1975:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1976:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1977:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1978:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1979:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1980:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1981:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1982:./Libraries/CMSIS/Core/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1983:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
1984:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
1985:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1986:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1987:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1988:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1989:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1990:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1991:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1992:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1993:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1994:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1995:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1996:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1997:./Libraries/CMSIS/Core/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1998:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
1999:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2000:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2001:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2002:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2003:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Active Interrupt
2004:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
2005:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
2006:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
2007:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return             1  Interrupt status is active.
2008:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
2009:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2010:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
2011:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2012:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2013:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2014:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
ARM GAS  /tmp/cc35GObF.s 			page 52


2015:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2016:./Libraries/CMSIS/Core/Include/core_cm7.h ****   else
2017:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2018:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return(0U);
2019:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2020:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2021:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2022:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2023:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2024:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Set Interrupt Priority
2025:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
2026:./Libraries/CMSIS/Core/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2027:./Libraries/CMSIS/Core/Include/core_cm7.h ****            or negative to specify a processor exception.
2028:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
2029:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
2030:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
2031:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2032:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
2033:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2034:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2035:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2036:./Libraries/CMSIS/Core/Include/core_cm7.h ****     NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2037:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2038:./Libraries/CMSIS/Core/Include/core_cm7.h ****   else
2039:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2040:./Libraries/CMSIS/Core/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2041:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2042:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2043:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2044:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2045:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2046:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2047:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2048:./Libraries/CMSIS/Core/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2049:./Libraries/CMSIS/Core/Include/core_cm7.h ****            or negative to specify a processor exception.
2050:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2051:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return             Interrupt Priority.
2052:./Libraries/CMSIS/Core/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2053:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2054:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2055:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2056:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2057:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2058:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2059:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)));
2060:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2061:./Libraries/CMSIS/Core/Include/core_cm7.h ****   else
2062:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2063:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
2064:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2065:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2066:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2067:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2068:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2069:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Encode Priority
2070:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2071:./Libraries/CMSIS/Core/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
ARM GAS  /tmp/cc35GObF.s 			page 53


2072:./Libraries/CMSIS/Core/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2073:./Libraries/CMSIS/Core/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2074:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2075:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2076:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2077:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2078:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2079:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2080:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2081:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2082:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2083:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2084:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2085:./Libraries/CMSIS/Core/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2086:./Libraries/CMSIS/Core/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2087:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2088:./Libraries/CMSIS/Core/Include/core_cm7.h ****   return (
2089:./Libraries/CMSIS/Core/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
2090:./Libraries/CMSIS/Core/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
2091:./Libraries/CMSIS/Core/Include/core_cm7.h ****          );
2092:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2093:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2094:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2095:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2096:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Decode Priority
2097:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2098:./Libraries/CMSIS/Core/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2099:./Libraries/CMSIS/Core/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2100:./Libraries/CMSIS/Core/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2101:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2102:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2103:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2104:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2105:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2106:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2107:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2108:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2109:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2110:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2111:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2112:./Libraries/CMSIS/Core/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2113:./Libraries/CMSIS/Core/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2114:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2115:./Libraries/CMSIS/Core/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2116:./Libraries/CMSIS/Core/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2117:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2118:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2119:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2120:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2121:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2122:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2123:./Libraries/CMSIS/Core/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2124:./Libraries/CMSIS/Core/Include/core_cm7.h ****            or negative to specify a processor exception.
2125:./Libraries/CMSIS/Core/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2126:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2127:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2128:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
ARM GAS  /tmp/cc35GObF.s 			page 54


2129:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2130:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2131:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
2132:./Libraries/CMSIS/Core/Include/core_cm7.h ****   (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
2133:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __DSB();
2134:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2135:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2136:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2137:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2138:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2139:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2140:./Libraries/CMSIS/Core/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2141:./Libraries/CMSIS/Core/Include/core_cm7.h ****            or negative to specify a processor exception.
2142:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2143:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2144:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2145:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2146:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2147:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
2148:./Libraries/CMSIS/Core/Include/core_cm7.h ****   return (uint32_t)(* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4));
2149:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2150:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2151:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2152:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2153:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   System Reset
2154:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2155:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2156:./Libraries/CMSIS/Core/Include/core_cm7.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
2157:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2158:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2159:./Libraries/CMSIS/Core/Include/core_cm7.h ****                                                                        buffered write are completed
2160:./Libraries/CMSIS/Core/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2161:./Libraries/CMSIS/Core/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
2162:./Libraries/CMSIS/Core/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2163:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2164:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2165:./Libraries/CMSIS/Core/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2166:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2167:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __NOP();
2168:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2169:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2170:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2171:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2172:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2173:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2174:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* ##########################  MPU functions  #################################### */
2175:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2176:./Libraries/CMSIS/Core/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2177:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2178:./Libraries/CMSIS/Core/Include/core_cm7.h **** #include "mpu_armv7.h"
2179:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2180:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
2181:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2182:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2183:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2184:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2185:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
ARM GAS  /tmp/cc35GObF.s 			page 55


2186:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2187:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2188:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
2189:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2190:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2191:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2192:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   get FPU type
2193:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details returns the FPU type
2194:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \returns
2195:./Libraries/CMSIS/Core/Include/core_cm7.h ****    - \b  0: No FPU
2196:./Libraries/CMSIS/Core/Include/core_cm7.h ****    - \b  1: Single precision FPU
2197:./Libraries/CMSIS/Core/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2198:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2199:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2200:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2201:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t mvfr0;
2202:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2203:./Libraries/CMSIS/Core/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2204:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2205:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2206:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2207:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2208:./Libraries/CMSIS/Core/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2209:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2210:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2211:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2212:./Libraries/CMSIS/Core/Include/core_cm7.h ****   else
2213:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2214:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return 0U;           /* No FPU */
2215:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2216:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2217:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2218:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2219:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2220:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2221:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2222:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2223:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2224:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2225:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2226:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2227:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
2228:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2229:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2230:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2231:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2232:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2233:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2234:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define __SCB_DCACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
2235:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define __SCB_ICACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
2236:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2237:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2238:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Enable I-Cache
2239:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Turns on I-Cache
2240:./Libraries/CMSIS/Core/Include/core_cm7.h ****   */
2241:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_EnableICache (void)
2242:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
ARM GAS  /tmp/cc35GObF.s 			page 56


2243:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2244:./Libraries/CMSIS/Core/Include/core_cm7.h ****     if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
2245:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2246:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2247:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2248:./Libraries/CMSIS/Core/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2249:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2250:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2251:./Libraries/CMSIS/Core/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
2252:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2253:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2254:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
2255:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2256:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2257:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2258:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2259:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Disable I-Cache
2260:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Turns off I-Cache
2261:./Libraries/CMSIS/Core/Include/core_cm7.h ****   */
2262:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_DisableICache (void)
2263:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2264:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2265:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2266:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2267:./Libraries/CMSIS/Core/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2268:./Libraries/CMSIS/Core/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2269:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2270:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2271:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
2272:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2273:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2274:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2275:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2276:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2277:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Invalidates I-Cache
2278:./Libraries/CMSIS/Core/Include/core_cm7.h ****   */
2279:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache (void)
2280:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2281:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2282:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2283:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2284:./Libraries/CMSIS/Core/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2285:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2286:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2287:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
2288:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2289:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2290:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2291:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2292:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   I-Cache Invalidate by address
2293:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Invalidates I-Cache for the given address.
2294:./Libraries/CMSIS/Core/Include/core_cm7.h ****            I-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
2295:./Libraries/CMSIS/Core/Include/core_cm7.h ****            I-Cache memory blocks which are part of given address + given size are invalidated.
2296:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param[in]   addr    address
2297:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param[in]   isize   size of memory block (in number of bytes)
2298:./Libraries/CMSIS/Core/Include/core_cm7.h **** */
2299:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache_by_Addr (void *addr, int32_t isize)
ARM GAS  /tmp/cc35GObF.s 			page 57


2300:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2301:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2302:./Libraries/CMSIS/Core/Include/core_cm7.h ****     if ( isize > 0 ) {
2303:./Libraries/CMSIS/Core/Include/core_cm7.h ****        int32_t op_size = isize + (((uint32_t)addr) & (__SCB_ICACHE_LINE_SIZE - 1U));
2304:./Libraries/CMSIS/Core/Include/core_cm7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_ICACHE_LINE_SIZE - 1U) */;
2305:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2306:./Libraries/CMSIS/Core/Include/core_cm7.h ****       __DSB();
2307:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2308:./Libraries/CMSIS/Core/Include/core_cm7.h ****       do {
2309:./Libraries/CMSIS/Core/Include/core_cm7.h ****         SCB->ICIMVAU = op_addr;             /* register accepts only 32byte aligned values, only bi
2310:./Libraries/CMSIS/Core/Include/core_cm7.h ****         op_addr += __SCB_ICACHE_LINE_SIZE;
2311:./Libraries/CMSIS/Core/Include/core_cm7.h ****         op_size -= __SCB_ICACHE_LINE_SIZE;
2312:./Libraries/CMSIS/Core/Include/core_cm7.h ****       } while ( op_size > 0 );
2313:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2314:./Libraries/CMSIS/Core/Include/core_cm7.h ****       __DSB();
2315:./Libraries/CMSIS/Core/Include/core_cm7.h ****       __ISB();
2316:./Libraries/CMSIS/Core/Include/core_cm7.h ****     }
2317:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
2318:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2319:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2320:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2321:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2322:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Enable D-Cache
2323:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Turns on D-Cache
2324:./Libraries/CMSIS/Core/Include/core_cm7.h ****   */
2325:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_EnableDCache (void)
2326:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2327:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2328:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t ccsidr;
2329:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t sets;
2330:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t ways;
2331:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2332:./Libraries/CMSIS/Core/Include/core_cm7.h ****     if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 684              		.loc 2 2332 12
 685 0006 344B     		ldr	r3, .L36
 686 0008 5B69     		ldr	r3, [r3, #20]
 687              		.loc 2 2332 18
 688 000a 03F48033 		and	r3, r3, #65536
 689              		.loc 2 2332 8
 690 000e 002B     		cmp	r3, #0
 691 0010 38D1     		bne	.L34
2333:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2334:./Libraries/CMSIS/Core/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 692              		.loc 2 2334 8
 693 0012 314B     		ldr	r3, .L36
 694              		.loc 2 2334 17
 695 0014 0022     		movs	r2, #0
 696 0016 C3F88420 		str	r2, [r3, #132]
 697              	.LBB50:
 698              	.LBB51:
 699              		.file 3 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
ARM GAS  /tmp/cc35GObF.s 			page 58


   7:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc35GObF.s 			page 59


  64:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
ARM GAS  /tmp/cc35GObF.s 			page 60


 121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
ARM GAS  /tmp/cc35GObF.s 			page 61


 178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc35GObF.s 			page 62


 235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/cc35GObF.s 			page 63


 292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc35GObF.s 			page 64


 349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc35GObF.s 			page 65


 406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
ARM GAS  /tmp/cc35GObF.s 			page 66


 463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
ARM GAS  /tmp/cc35GObF.s 			page 67


 520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc35GObF.s 			page 68


 577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
ARM GAS  /tmp/cc35GObF.s 			page 69


 634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc35GObF.s 			page 70


 691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc35GObF.s 			page 71


 748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
ARM GAS  /tmp/cc35GObF.s 			page 72


 805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
ARM GAS  /tmp/cc35GObF.s 			page 73


 862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc35GObF.s 			page 74


 919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 700              		.loc 3 946 3
 701              		.syntax unified
 702              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 703 001a BFF34F8F 		dsb 0xF
 704              	@ 0 "" 2
 947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 705              		.loc 3 947 1
 706              		.thumb
 707              		.syntax unified
 708 001e 00BF     		nop
 709              	.LBE51:
 710              	.LBE50:
2335:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2336:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2337:./Libraries/CMSIS/Core/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
 711              		.loc 2 2337 17
 712 0020 2D4B     		ldr	r3, .L36
 713              		.loc 2 2337 12
 714 0022 D3F88030 		ldr	r3, [r3, #128]
 715 0026 FB60     		str	r3, [r7, #12]
2338:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2339:./Libraries/CMSIS/Core/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2340:./Libraries/CMSIS/Core/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 716              		.loc 2 2340 12
 717 0028 FB68     		ldr	r3, [r7, #12]
 718 002a 5B0B     		lsrs	r3, r3, #13
 719              		.loc 2 2340 10
 720 002c C3F30E03 		ubfx	r3, r3, #0, #15
 721 0030 BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/cc35GObF.s 			page 75


 722              	.L31:
2341:./Libraries/CMSIS/Core/Include/core_cm7.h ****     do {
2342:./Libraries/CMSIS/Core/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 723              		.loc 2 2342 14
 724 0032 FB68     		ldr	r3, [r7, #12]
 725 0034 DB08     		lsrs	r3, r3, #3
 726              		.loc 2 2342 12
 727 0036 C3F30903 		ubfx	r3, r3, #0, #10
 728 003a 7B60     		str	r3, [r7, #4]
 729              	.L30:
2343:./Libraries/CMSIS/Core/Include/core_cm7.h ****       do {
2344:./Libraries/CMSIS/Core/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 730              		.loc 2 2344 30
 731 003c BB68     		ldr	r3, [r7, #8]
 732 003e 5A01     		lsls	r2, r3, #5
 733              		.loc 2 2344 52
 734 0040 43F6E073 		movw	r3, #16352
 735 0044 1340     		ands	r3, r3, r2
2345:./Libraries/CMSIS/Core/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 736              		.loc 2 2345 30
 737 0046 7A68     		ldr	r2, [r7, #4]
 738 0048 9207     		lsls	r2, r2, #30
2344:./Libraries/CMSIS/Core/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 739              		.loc 2 2344 12
 740 004a 2349     		ldr	r1, .L36
2344:./Libraries/CMSIS/Core/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 741              		.loc 2 2344 73
 742 004c 1343     		orrs	r3, r3, r2
2344:./Libraries/CMSIS/Core/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 743              		.loc 2 2344 20
 744 004e C1F86032 		str	r3, [r1, #608]
2346:./Libraries/CMSIS/Core/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2347:./Libraries/CMSIS/Core/Include/core_cm7.h ****           __schedule_barrier();
2348:./Libraries/CMSIS/Core/Include/core_cm7.h ****         #endif
2349:./Libraries/CMSIS/Core/Include/core_cm7.h ****       } while (ways-- != 0U);
 745              		.loc 2 2349 20
 746 0052 7B68     		ldr	r3, [r7, #4]
 747 0054 5A1E     		subs	r2, r3, #1
 748 0056 7A60     		str	r2, [r7, #4]
 749              		.loc 2 2349 7
 750 0058 002B     		cmp	r3, #0
 751 005a EFD1     		bne	.L30
2350:./Libraries/CMSIS/Core/Include/core_cm7.h ****     } while(sets-- != 0U);
 752              		.loc 2 2350 17
 753 005c BB68     		ldr	r3, [r7, #8]
 754 005e 5A1E     		subs	r2, r3, #1
 755 0060 BA60     		str	r2, [r7, #8]
 756              		.loc 2 2350 5
 757 0062 002B     		cmp	r3, #0
 758 0064 E5D1     		bne	.L31
 759              	.LBB52:
 760              	.LBB53:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 761              		.loc 3 946 3
 762              		.syntax unified
 763              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 764 0066 BFF34F8F 		dsb 0xF
ARM GAS  /tmp/cc35GObF.s 			page 76


 765              	@ 0 "" 2
 766              		.loc 3 947 1
 767              		.thumb
 768              		.syntax unified
 769 006a 00BF     		nop
 770              	.LBE53:
 771              	.LBE52:
2351:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2352:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2353:./Libraries/CMSIS/Core/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 772              		.loc 2 2353 14
 773 006c 1A4B     		ldr	r3, .L36
 774 006e 5B69     		ldr	r3, [r3, #20]
 775 0070 194A     		ldr	r2, .L36
 776 0072 43F48033 		orr	r3, r3, #65536
 777 0076 5361     		str	r3, [r2, #20]
 778              	.LBB54:
 779              	.LBB55:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780              		.loc 3 946 3
 781              		.syntax unified
 782              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 783 0078 BFF34F8F 		dsb 0xF
 784              	@ 0 "" 2
 785              		.loc 3 947 1
 786              		.thumb
 787              		.syntax unified
 788 007c 00BF     		nop
 789              	.LBE55:
 790              	.LBE54:
 791              	.LBB56:
 792              	.LBB57:
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 793              		.loc 3 935 3
 794              		.syntax unified
 795              	@ 935 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 796 007e BFF36F8F 		isb 0xF
 797              	@ 0 "" 2
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 798              		.loc 3 936 1
 799              		.thumb
 800              		.syntax unified
 801 0082 00E0     		b	.L29
 802              	.L34:
 803              	.LBE57:
 804              	.LBE56:
2332:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 805              		.loc 2 2332 36
 806 0084 00BF     		nop
 807              	.L29:
 808              	.LBE49:
 809              	.LBE48:
 810              	.LBB58:
 811              	.LBB59:
2244:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 812              		.loc 2 2244 12
 813 0086 144B     		ldr	r3, .L36
ARM GAS  /tmp/cc35GObF.s 			page 77


 814 0088 5B69     		ldr	r3, [r3, #20]
2244:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 815              		.loc 2 2244 18
 816 008a 03F40033 		and	r3, r3, #131072
2244:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 817              		.loc 2 2244 8
 818 008e 002B     		cmp	r3, #0
 819 0090 1BD1     		bne	.L35
 820              	.LBB60:
 821              	.LBB61:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822              		.loc 3 946 3
 823              		.syntax unified
 824              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 825 0092 BFF34F8F 		dsb 0xF
 826              	@ 0 "" 2
 827              		.loc 3 947 1
 828              		.thumb
 829              		.syntax unified
 830 0096 00BF     		nop
 831              	.LBE61:
 832              	.LBE60:
 833              	.LBB62:
 834              	.LBB63:
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 835              		.loc 3 935 3
 836              		.syntax unified
 837              	@ 935 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 838 0098 BFF36F8F 		isb 0xF
 839              	@ 0 "" 2
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 840              		.loc 3 936 1
 841              		.thumb
 842              		.syntax unified
 843 009c 00BF     		nop
 844              	.LBE63:
 845              	.LBE62:
2248:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
 846              		.loc 2 2248 8
 847 009e 0E4B     		ldr	r3, .L36
2248:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
 848              		.loc 2 2248 18
 849 00a0 0022     		movs	r2, #0
 850 00a2 C3F85022 		str	r2, [r3, #592]
 851              	.LBB64:
 852              	.LBB65:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 853              		.loc 3 946 3
 854              		.syntax unified
 855              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 856 00a6 BFF34F8F 		dsb 0xF
 857              	@ 0 "" 2
 858              		.loc 3 947 1
 859              		.thumb
 860              		.syntax unified
 861 00aa 00BF     		nop
 862              	.LBE65:
ARM GAS  /tmp/cc35GObF.s 			page 78


 863              	.LBE64:
 864              	.LBB66:
 865              	.LBB67:
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 866              		.loc 3 935 3
 867              		.syntax unified
 868              	@ 935 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 869 00ac BFF36F8F 		isb 0xF
 870              	@ 0 "" 2
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 871              		.loc 3 936 1
 872              		.thumb
 873              		.syntax unified
 874 00b0 00BF     		nop
 875              	.LBE67:
 876              	.LBE66:
2251:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
 877              		.loc 2 2251 14
 878 00b2 094B     		ldr	r3, .L36
 879 00b4 5B69     		ldr	r3, [r3, #20]
 880 00b6 084A     		ldr	r2, .L36
 881 00b8 43F40033 		orr	r3, r3, #131072
 882 00bc 5361     		str	r3, [r2, #20]
 883              	.LBB68:
 884              	.LBB69:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 885              		.loc 3 946 3
 886              		.syntax unified
 887              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 888 00be BFF34F8F 		dsb 0xF
 889              	@ 0 "" 2
 890              		.loc 3 947 1
 891              		.thumb
 892              		.syntax unified
 893 00c2 00BF     		nop
 894              	.LBE69:
 895              	.LBE68:
 896              	.LBB70:
 897              	.LBB71:
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 898              		.loc 3 935 3
 899              		.syntax unified
 900              	@ 935 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 901 00c4 BFF36F8F 		isb 0xF
 902              	@ 0 "" 2
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 903              		.loc 3 936 1
 904              		.thumb
 905              		.syntax unified
 906 00c8 00E0     		b	.L33
 907              	.L35:
 908              	.LBE71:
 909              	.LBE70:
2244:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 910              		.loc 2 2244 36
 911 00ca 00BF     		nop
 912              	.L33:
ARM GAS  /tmp/cc35GObF.s 			page 79


 913              	.LBE59:
 914              	.LBE58:
 217:./BSP/system.c ****   /* Enable D-Cache */
 218:./BSP/system.c ****   SCB_EnableDCache();
 219:./BSP/system.c **** 
 220:./BSP/system.c ****   /* Enable I-Cache */
 221:./BSP/system.c ****   SCB_EnableICache();
 222:./BSP/system.c **** }
 915              		.loc 1 222 1
 916 00cc 00BF     		nop
 917 00ce 1437     		adds	r7, r7, #20
 918              	.LCFI25:
 919              		.cfi_def_cfa_offset 4
 920 00d0 BD46     		mov	sp, r7
 921              	.LCFI26:
 922              		.cfi_def_cfa_register 13
 923              		@ sp needed
 924 00d2 5DF8047B 		ldr	r7, [sp], #4
 925              	.LCFI27:
 926              		.cfi_restore 7
 927              		.cfi_def_cfa_offset 0
 928 00d6 7047     		bx	lr
 929              	.L37:
 930              		.align	2
 931              	.L36:
 932 00d8 00ED00E0 		.word	-536810240
 933              		.cfi_endproc
 934              	.LFE343:
 936              		.section	.text.CRC_Init,"ax",%progbits
 937              		.align	1
 938              		.syntax unified
 939              		.thumb
 940              		.thumb_func
 941              		.fpu fpv5-d16
 943              	CRC_Init:
 944              	.LFB344:
 223:./BSP/system.c **** 
 224:./BSP/system.c **** static void CRC_Init(void)
 225:./BSP/system.c **** {
 945              		.loc 1 225 1
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 40
 948              		@ frame_needed = 1, uses_anonymous_args = 0
 949 0000 80B5     		push	{r7, lr}
 950              	.LCFI28:
 951              		.cfi_def_cfa_offset 8
 952              		.cfi_offset 7, -8
 953              		.cfi_offset 14, -4
 954 0002 8AB0     		sub	sp, sp, #40
 955              	.LCFI29:
 956              		.cfi_def_cfa_offset 48
 957 0004 00AF     		add	r7, sp, #0
 958              	.LCFI30:
 959              		.cfi_def_cfa_register 7
 226:./BSP/system.c ****   __HAL_RCC_CRC_CLK_DISABLE();
 960              		.loc 1 226 3
 961 0006 114B     		ldr	r3, .L41
ARM GAS  /tmp/cc35GObF.s 			page 80


 962 0008 D3F8E030 		ldr	r3, [r3, #224]
 963 000c 0F4A     		ldr	r2, .L41
 964 000e 23F40023 		bic	r3, r3, #524288
 965 0012 C2F8E030 		str	r3, [r2, #224]
 227:./BSP/system.c ****   CRC_HandleTypeDef hcrc;
 228:./BSP/system.c ****   hcrc.Instance = CRC;
 966              		.loc 1 228 17
 967 0016 0E4B     		ldr	r3, .L41+4
 968 0018 7B60     		str	r3, [r7, #4]
 229:./BSP/system.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 969              		.loc 1 229 34
 970 001a 0023     		movs	r3, #0
 971 001c 3B72     		strb	r3, [r7, #8]
 230:./BSP/system.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 972              		.loc 1 230 33
 973 001e 0023     		movs	r3, #0
 974 0020 7B72     		strb	r3, [r7, #9]
 231:./BSP/system.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 975              		.loc 1 231 36
 976 0022 0023     		movs	r3, #0
 977 0024 BB61     		str	r3, [r7, #24]
 232:./BSP/system.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 978              		.loc 1 232 37
 979 0026 0023     		movs	r3, #0
 980 0028 FB61     		str	r3, [r7, #28]
 233:./BSP/system.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 981              		.loc 1 233 24
 982 002a 0123     		movs	r3, #1
 983 002c 7B62     		str	r3, [r7, #36]
 234:./BSP/system.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 984              		.loc 1 234 7
 985 002e 3B1D     		adds	r3, r7, #4
 986 0030 1846     		mov	r0, r3
 987 0032 FFF7FEFF 		bl	HAL_CRC_Init
 988 0036 0346     		mov	r3, r0
 989              		.loc 1 234 6
 990 0038 002B     		cmp	r3, #0
 991 003a 03D0     		beq	.L40
 235:./BSP/system.c ****   {
 236:./BSP/system.c ****     Error_Handler(__FILE__, __LINE__);
 992              		.loc 1 236 5
 993 003c EC21     		movs	r1, #236
 994 003e 0548     		ldr	r0, .L41+8
 995 0040 FFF7FEFF 		bl	Error_Handler
 996              	.L40:
 237:./BSP/system.c ****   }
 238:./BSP/system.c **** }
 997              		.loc 1 238 1
 998 0044 00BF     		nop
 999 0046 2837     		adds	r7, r7, #40
 1000              	.LCFI31:
 1001              		.cfi_def_cfa_offset 8
 1002 0048 BD46     		mov	sp, r7
 1003              	.LCFI32:
 1004              		.cfi_def_cfa_register 13
 1005              		@ sp needed
 1006 004a 80BD     		pop	{r7, pc}
ARM GAS  /tmp/cc35GObF.s 			page 81


 1007              	.L42:
 1008              		.align	2
 1009              	.L41:
 1010 004c 00440258 		.word	1476543488
 1011 0050 004C0258 		.word	1476545536
 1012 0054 00000000 		.word	.LC0
 1013              		.cfi_endproc
 1014              	.LFE344:
 1016              		.section	.text.GPIO_Init,"ax",%progbits
 1017              		.align	1
 1018              		.syntax unified
 1019              		.thumb
 1020              		.thumb_func
 1021              		.fpu fpv5-d16
 1023              	GPIO_Init:
 1024              	.LFB345:
 239:./BSP/system.c **** 
 240:./BSP/system.c **** static void GPIO_Init(void)
 241:./BSP/system.c **** {
 1025              		.loc 1 241 1
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 64
 1028              		@ frame_needed = 1, uses_anonymous_args = 0
 1029 0000 80B5     		push	{r7, lr}
 1030              	.LCFI33:
 1031              		.cfi_def_cfa_offset 8
 1032              		.cfi_offset 7, -8
 1033              		.cfi_offset 14, -4
 1034 0002 90B0     		sub	sp, sp, #64
 1035              	.LCFI34:
 1036              		.cfi_def_cfa_offset 72
 1037 0004 00AF     		add	r7, sp, #0
 1038              	.LCFI35:
 1039              		.cfi_def_cfa_register 7
 242:./BSP/system.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1040              		.loc 1 242 20
 1041 0006 07F12C03 		add	r3, r7, #44
 1042 000a 0022     		movs	r2, #0
 1043 000c 1A60     		str	r2, [r3]
 1044 000e 5A60     		str	r2, [r3, #4]
 1045 0010 9A60     		str	r2, [r3, #8]
 1046 0012 DA60     		str	r2, [r3, #12]
 1047 0014 1A61     		str	r2, [r3, #16]
 1048              	.LBB72:
 243:./BSP/system.c **** 
 244:./BSP/system.c ****   /* GPIO Ports Clock Enable */
 245:./BSP/system.c ****   __HAL_RCC_GPIOI_CLK_ENABLE();
 1049              		.loc 1 245 3
 1050 0016 694B     		ldr	r3, .L44
 1051 0018 D3F8E030 		ldr	r3, [r3, #224]
 1052 001c 674A     		ldr	r2, .L44
 1053 001e 43F48073 		orr	r3, r3, #256
 1054 0022 C2F8E030 		str	r3, [r2, #224]
 1055 0026 654B     		ldr	r3, .L44
 1056 0028 D3F8E030 		ldr	r3, [r3, #224]
 1057 002c 03F48073 		and	r3, r3, #256
 1058 0030 BB62     		str	r3, [r7, #40]
ARM GAS  /tmp/cc35GObF.s 			page 82


 1059 0032 BB6A     		ldr	r3, [r7, #40]
 1060              	.LBE72:
 1061              	.LBB73:
 246:./BSP/system.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 1062              		.loc 1 246 3
 1063 0034 614B     		ldr	r3, .L44
 1064 0036 D3F8E030 		ldr	r3, [r3, #224]
 1065 003a 604A     		ldr	r2, .L44
 1066 003c 43F04003 		orr	r3, r3, #64
 1067 0040 C2F8E030 		str	r3, [r2, #224]
 1068 0044 5D4B     		ldr	r3, .L44
 1069 0046 D3F8E030 		ldr	r3, [r3, #224]
 1070 004a 03F04003 		and	r3, r3, #64
 1071 004e 7B62     		str	r3, [r7, #36]
 1072 0050 7B6A     		ldr	r3, [r7, #36]
 1073              	.LBE73:
 1074              	.LBB74:
 247:./BSP/system.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 1075              		.loc 1 247 3
 1076 0052 5A4B     		ldr	r3, .L44
 1077 0054 D3F8E030 		ldr	r3, [r3, #224]
 1078 0058 584A     		ldr	r2, .L44
 1079 005a 43F01003 		orr	r3, r3, #16
 1080 005e C2F8E030 		str	r3, [r2, #224]
 1081 0062 564B     		ldr	r3, .L44
 1082 0064 D3F8E030 		ldr	r3, [r3, #224]
 1083 0068 03F01003 		and	r3, r3, #16
 1084 006c 3B62     		str	r3, [r7, #32]
 1085 006e 3B6A     		ldr	r3, [r7, #32]
 1086              	.LBE74:
 1087              	.LBB75:
 248:./BSP/system.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 1088              		.loc 1 248 3
 1089 0070 524B     		ldr	r3, .L44
 1090 0072 D3F8E030 		ldr	r3, [r3, #224]
 1091 0076 514A     		ldr	r2, .L44
 1092 0078 43F08003 		orr	r3, r3, #128
 1093 007c C2F8E030 		str	r3, [r2, #224]
 1094 0080 4E4B     		ldr	r3, .L44
 1095 0082 D3F8E030 		ldr	r3, [r3, #224]
 1096 0086 03F08003 		and	r3, r3, #128
 1097 008a FB61     		str	r3, [r7, #28]
 1098 008c FB69     		ldr	r3, [r7, #28]
 1099              	.LBE75:
 1100              	.LBB76:
 249:./BSP/system.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 1101              		.loc 1 249 3
 1102 008e 4B4B     		ldr	r3, .L44
 1103 0090 D3F8E030 		ldr	r3, [r3, #224]
 1104 0094 494A     		ldr	r2, .L44
 1105 0096 43F00403 		orr	r3, r3, #4
 1106 009a C2F8E030 		str	r3, [r2, #224]
 1107 009e 474B     		ldr	r3, .L44
 1108 00a0 D3F8E030 		ldr	r3, [r3, #224]
 1109 00a4 03F00403 		and	r3, r3, #4
 1110 00a8 BB61     		str	r3, [r7, #24]
 1111 00aa BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/cc35GObF.s 			page 83


 1112              	.LBE76:
 1113              	.LBB77:
 250:./BSP/system.c ****   __HAL_RCC_GPIOJ_CLK_ENABLE();
 1114              		.loc 1 250 3
 1115 00ac 434B     		ldr	r3, .L44
 1116 00ae D3F8E030 		ldr	r3, [r3, #224]
 1117 00b2 424A     		ldr	r2, .L44
 1118 00b4 43F40073 		orr	r3, r3, #512
 1119 00b8 C2F8E030 		str	r3, [r2, #224]
 1120 00bc 3F4B     		ldr	r3, .L44
 1121 00be D3F8E030 		ldr	r3, [r3, #224]
 1122 00c2 03F40073 		and	r3, r3, #512
 1123 00c6 7B61     		str	r3, [r7, #20]
 1124 00c8 7B69     		ldr	r3, [r7, #20]
 1125              	.LBE77:
 1126              	.LBB78:
 251:./BSP/system.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 1127              		.loc 1 251 3
 1128 00ca 3C4B     		ldr	r3, .L44
 1129 00cc D3F8E030 		ldr	r3, [r3, #224]
 1130 00d0 3A4A     		ldr	r2, .L44
 1131 00d2 43F00803 		orr	r3, r3, #8
 1132 00d6 C2F8E030 		str	r3, [r2, #224]
 1133 00da 384B     		ldr	r3, .L44
 1134 00dc D3F8E030 		ldr	r3, [r3, #224]
 1135 00e0 03F00803 		and	r3, r3, #8
 1136 00e4 3B61     		str	r3, [r7, #16]
 1137 00e6 3B69     		ldr	r3, [r7, #16]
 1138              	.LBE78:
 1139              	.LBB79:
 252:./BSP/system.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1140              		.loc 1 252 3
 1141 00e8 344B     		ldr	r3, .L44
 1142 00ea D3F8E030 		ldr	r3, [r3, #224]
 1143 00ee 334A     		ldr	r2, .L44
 1144 00f0 43F00103 		orr	r3, r3, #1
 1145 00f4 C2F8E030 		str	r3, [r2, #224]
 1146 00f8 304B     		ldr	r3, .L44
 1147 00fa D3F8E030 		ldr	r3, [r3, #224]
 1148 00fe 03F00103 		and	r3, r3, #1
 1149 0102 FB60     		str	r3, [r7, #12]
 1150 0104 FB68     		ldr	r3, [r7, #12]
 1151              	.LBE79:
 1152              	.LBB80:
 253:./BSP/system.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 1153              		.loc 1 253 3
 1154 0106 2D4B     		ldr	r3, .L44
 1155 0108 D3F8E030 		ldr	r3, [r3, #224]
 1156 010c 2B4A     		ldr	r2, .L44
 1157 010e 43F02003 		orr	r3, r3, #32
 1158 0112 C2F8E030 		str	r3, [r2, #224]
 1159 0116 294B     		ldr	r3, .L44
 1160 0118 D3F8E030 		ldr	r3, [r3, #224]
 1161 011c 03F02003 		and	r3, r3, #32
 1162 0120 BB60     		str	r3, [r7, #8]
 1163 0122 BB68     		ldr	r3, [r7, #8]
 1164              	.LBE80:
ARM GAS  /tmp/cc35GObF.s 			page 84


 1165              	.LBB81:
 254:./BSP/system.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1166              		.loc 1 254 3
 1167 0124 254B     		ldr	r3, .L44
 1168 0126 D3F8E030 		ldr	r3, [r3, #224]
 1169 012a 244A     		ldr	r2, .L44
 1170 012c 43F00203 		orr	r3, r3, #2
 1171 0130 C2F8E030 		str	r3, [r2, #224]
 1172 0134 214B     		ldr	r3, .L44
 1173 0136 D3F8E030 		ldr	r3, [r3, #224]
 1174 013a 03F00203 		and	r3, r3, #2
 1175 013e 7B60     		str	r3, [r7, #4]
 1176 0140 7B68     		ldr	r3, [r7, #4]
 1177              	.LBE81:
 255:./BSP/system.c **** 
 256:./BSP/system.c ****   /*Configure GPIO pin Output Level */
 257:./BSP/system.c ****   HAL_GPIO_WritePin(GPIOJ, GPIO_PIN_12, GPIO_PIN_RESET);
 1178              		.loc 1 257 3
 1179 0142 0022     		movs	r2, #0
 1180 0144 4FF48051 		mov	r1, #4096
 1181 0148 1D48     		ldr	r0, .L44+4
 1182 014a FFF7FEFF 		bl	HAL_GPIO_WritePin
 258:./BSP/system.c **** 
 259:./BSP/system.c ****   /*Configure GPIO pin Output Level */
 260:./BSP/system.c ****   HAL_GPIO_WritePin(GPIOG, GPIO_PIN_3, GPIO_PIN_RESET);
 1183              		.loc 1 260 3
 1184 014e 0022     		movs	r2, #0
 1185 0150 0821     		movs	r1, #8
 1186 0152 1C48     		ldr	r0, .L44+8
 1187 0154 FFF7FEFF 		bl	HAL_GPIO_WritePin
 261:./BSP/system.c **** 
 262:./BSP/system.c ****   /*Configure GPIO pin : LCD_BL_Pin */
 263:./BSP/system.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12;
 1188              		.loc 1 263 23
 1189 0158 4FF48053 		mov	r3, #4096
 1190 015c FB62     		str	r3, [r7, #44]
 264:./BSP/system.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1191              		.loc 1 264 24
 1192 015e 0123     		movs	r3, #1
 1193 0160 3B63     		str	r3, [r7, #48]
 265:./BSP/system.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1194              		.loc 1 265 24
 1195 0162 0023     		movs	r3, #0
 1196 0164 7B63     		str	r3, [r7, #52]
 266:./BSP/system.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1197              		.loc 1 266 25
 1198 0166 0323     		movs	r3, #3
 1199 0168 BB63     		str	r3, [r7, #56]
 267:./BSP/system.c ****   HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 1200              		.loc 1 267 3
 1201 016a 07F12C03 		add	r3, r7, #44
 1202 016e 1946     		mov	r1, r3
 1203 0170 1348     		ldr	r0, .L44+4
 1204 0172 FFF7FEFF 		bl	HAL_GPIO_Init
 268:./BSP/system.c **** 
 269:./BSP/system.c ****   /*Configure GPIO pin : PA8 */
 270:./BSP/system.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
ARM GAS  /tmp/cc35GObF.s 			page 85


 1205              		.loc 1 270 23
 1206 0176 4FF48073 		mov	r3, #256
 1207 017a FB62     		str	r3, [r7, #44]
 271:./BSP/system.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1208              		.loc 1 271 24
 1209 017c 0223     		movs	r3, #2
 1210 017e 3B63     		str	r3, [r7, #48]
 272:./BSP/system.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1211              		.loc 1 272 24
 1212 0180 0023     		movs	r3, #0
 1213 0182 7B63     		str	r3, [r7, #52]
 273:./BSP/system.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1214              		.loc 1 273 25
 1215 0184 0023     		movs	r3, #0
 1216 0186 BB63     		str	r3, [r7, #56]
 274:./BSP/system.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1217              		.loc 1 274 29
 1218 0188 0023     		movs	r3, #0
 1219 018a FB63     		str	r3, [r7, #60]
 275:./BSP/system.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1220              		.loc 1 275 3
 1221 018c 07F12C03 		add	r3, r7, #44
 1222 0190 1946     		mov	r1, r3
 1223 0192 0D48     		ldr	r0, .L44+12
 1224 0194 FFF7FEFF 		bl	HAL_GPIO_Init
 276:./BSP/system.c **** 
 277:./BSP/system.c ****   /*Configure GPIO pin : LCD_RESET_Pin */
 278:./BSP/system.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3;
 1225              		.loc 1 278 23
 1226 0198 0823     		movs	r3, #8
 1227 019a FB62     		str	r3, [r7, #44]
 279:./BSP/system.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1228              		.loc 1 279 24
 1229 019c 0123     		movs	r3, #1
 1230 019e 3B63     		str	r3, [r7, #48]
 280:./BSP/system.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 1231              		.loc 1 280 24
 1232 01a0 0123     		movs	r3, #1
 1233 01a2 7B63     		str	r3, [r7, #52]
 281:./BSP/system.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1234              		.loc 1 281 25
 1235 01a4 0323     		movs	r3, #3
 1236 01a6 BB63     		str	r3, [r7, #56]
 282:./BSP/system.c ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 1237              		.loc 1 282 3
 1238 01a8 07F12C03 		add	r3, r7, #44
 1239 01ac 1946     		mov	r1, r3
 1240 01ae 0548     		ldr	r0, .L44+8
 1241 01b0 FFF7FEFF 		bl	HAL_GPIO_Init
 283:./BSP/system.c **** }
 1242              		.loc 1 283 1
 1243 01b4 00BF     		nop
 1244 01b6 4037     		adds	r7, r7, #64
 1245              	.LCFI36:
 1246              		.cfi_def_cfa_offset 8
 1247 01b8 BD46     		mov	sp, r7
 1248              	.LCFI37:
ARM GAS  /tmp/cc35GObF.s 			page 86


 1249              		.cfi_def_cfa_register 13
 1250              		@ sp needed
 1251 01ba 80BD     		pop	{r7, pc}
 1252              	.L45:
 1253              		.align	2
 1254              	.L44:
 1255 01bc 00440258 		.word	1476543488
 1256 01c0 00240258 		.word	1476535296
 1257 01c4 00180258 		.word	1476532224
 1258 01c8 00000258 		.word	1476526080
 1259              		.cfi_endproc
 1260              	.LFE345:
 1262              		.section	.text.TEMP_SENSOR_Init,"ax",%progbits
 1263              		.align	1
 1264              		.syntax unified
 1265              		.thumb
 1266              		.thumb_func
 1267              		.fpu fpv5-d16
 1269              	TEMP_SENSOR_Init:
 1270              	.LFB346:
 284:./BSP/system.c **** 
 285:./BSP/system.c **** static uint32_t TEMP_SENSOR_Init(void)
 286:./BSP/system.c **** {
 1271              		.loc 1 286 1
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 40
 1274              		@ frame_needed = 1, uses_anonymous_args = 0
 1275 0000 80B5     		push	{r7, lr}
 1276              	.LCFI38:
 1277              		.cfi_def_cfa_offset 8
 1278              		.cfi_offset 7, -8
 1279              		.cfi_offset 14, -4
 1280 0002 8AB0     		sub	sp, sp, #40
 1281              	.LCFI39:
 1282              		.cfi_def_cfa_offset 48
 1283 0004 00AF     		add	r7, sp, #0
 1284              	.LCFI40:
 1285              		.cfi_def_cfa_register 7
 287:./BSP/system.c ****   uint32_t ret = HAL_OK;
 1286              		.loc 1 287 12
 1287 0006 0023     		movs	r3, #0
 1288 0008 7B62     		str	r3, [r7, #36]
 1289              	.LBB82:
 288:./BSP/system.c **** 
 289:./BSP/system.c ****   ADC_ChannelConfTypeDef sConfig;
 290:./BSP/system.c **** 
 291:./BSP/system.c ****    /* ADCx Periph clock enable */
 292:./BSP/system.c ****    __HAL_RCC_ADC3_CLK_ENABLE();
 1290              		.loc 1 292 4
 1291 000a 454B     		ldr	r3, .L55
 1292 000c D3F8E030 		ldr	r3, [r3, #224]
 1293 0010 434A     		ldr	r2, .L55
 1294 0012 43F08073 		orr	r3, r3, #16777216
 1295 0016 C2F8E030 		str	r3, [r2, #224]
 1296 001a 414B     		ldr	r3, .L55
 1297 001c D3F8E030 		ldr	r3, [r3, #224]
 1298 0020 03F08073 		and	r3, r3, #16777216
ARM GAS  /tmp/cc35GObF.s 			page 87


 1299 0024 7B60     		str	r3, [r7, #4]
 1300 0026 7B68     		ldr	r3, [r7, #4]
 1301              	.LBE82:
 293:./BSP/system.c **** 
 294:./BSP/system.c ****   memset(&AdcHandle, 0, sizeof(AdcHandle));
 1302              		.loc 1 294 3
 1303 0028 6422     		movs	r2, #100
 1304 002a 0021     		movs	r1, #0
 1305 002c 3D48     		ldr	r0, .L55+4
 1306 002e FFF7FEFF 		bl	memset
 295:./BSP/system.c ****   memset(&sConfig, 0, sizeof(sConfig));
 1307              		.loc 1 295 3
 1308 0032 07F10803 		add	r3, r7, #8
 1309 0036 1C22     		movs	r2, #28
 1310 0038 0021     		movs	r1, #0
 1311 003a 1846     		mov	r0, r3
 1312 003c FFF7FEFF 		bl	memset
 296:./BSP/system.c **** 
 297:./BSP/system.c ****   /* Configure the ADC peripheral */
 298:./BSP/system.c ****   AdcHandle.Instance                      = ADC3;
 1313              		.loc 1 298 43
 1314 0040 384B     		ldr	r3, .L55+4
 1315 0042 394A     		ldr	r2, .L55+8
 1316 0044 1A60     		str	r2, [r3]
 299:./BSP/system.c **** 
 300:./BSP/system.c ****   /* Clear all control registers */
 301:./BSP/system.c ****   ADC_CLEAR_COMMON_CONTROL_REGISTER(&AdcHandle);
 1317              		.loc 1 301 3
 1318 0046 374B     		ldr	r3, .L55+4
 1319 0048 1B68     		ldr	r3, [r3]
 1320 004a 384A     		ldr	r2, .L55+12
 1321 004c 9342     		cmp	r3, r2
 1322 004e 04D0     		beq	.L47
 1323              		.loc 1 301 3 is_stmt 0 discriminator 2
 1324 0050 344B     		ldr	r3, .L55+4
 1325 0052 1B68     		ldr	r3, [r3]
 1326 0054 364A     		ldr	r2, .L55+16
 1327 0056 9342     		cmp	r3, r2
 1328 0058 01D1     		bne	.L48
 1329              	.L47:
 1330              		.loc 1 301 3 discriminator 3
 1331 005a 364B     		ldr	r3, .L55+20
 1332 005c 00E0     		b	.L49
 1333              	.L48:
 1334              		.loc 1 301 3 discriminator 4
 1335 005e 364B     		ldr	r3, .L55+24
 1336              	.L49:
 1337              		.loc 1 301 3 discriminator 6
 1338 0060 9968     		ldr	r1, [r3, #8]
 1339 0062 304B     		ldr	r3, .L55+4
 1340 0064 1B68     		ldr	r3, [r3]
 1341 0066 314A     		ldr	r2, .L55+12
 1342 0068 9342     		cmp	r3, r2
 1343 006a 04D0     		beq	.L50
 1344              		.loc 1 301 3 discriminator 8
 1345 006c 2D4B     		ldr	r3, .L55+4
 1346 006e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc35GObF.s 			page 88


 1347 0070 2F4A     		ldr	r2, .L55+16
 1348 0072 9342     		cmp	r3, r2
 1349 0074 01D1     		bne	.L51
 1350              	.L50:
 1351              		.loc 1 301 3 discriminator 9
 1352 0076 2F4A     		ldr	r2, .L55+20
 1353 0078 00E0     		b	.L52
 1354              	.L51:
 1355              		.loc 1 301 3 discriminator 10
 1356 007a 2F4A     		ldr	r2, .L55+24
 1357              	.L52:
 1358              		.loc 1 301 3 discriminator 12
 1359 007c 2F4B     		ldr	r3, .L55+28
 1360 007e 0B40     		ands	r3, r3, r1
 1361 0080 9360     		str	r3, [r2, #8]
 302:./BSP/system.c **** 
 303:./BSP/system.c ****   AdcHandle.Init.ClockPrescaler           = ADC_CLOCK_SYNC_PCLK_DIV4;
 1362              		.loc 1 303 43 is_stmt 1 discriminator 12
 1363 0082 284B     		ldr	r3, .L55+4
 1364 0084 4FF44032 		mov	r2, #196608
 1365 0088 5A60     		str	r2, [r3, #4]
 304:./BSP/system.c ****   AdcHandle.Init.Resolution               = ADC_RESOLUTION_12B;
 1366              		.loc 1 304 43 discriminator 12
 1367 008a 264B     		ldr	r3, .L55+4
 1368 008c 0822     		movs	r2, #8
 1369 008e 9A60     		str	r2, [r3, #8]
 305:./BSP/system.c ****   AdcHandle.Init.ScanConvMode             = ENABLE;
 1370              		.loc 1 305 43 discriminator 12
 1371 0090 244B     		ldr	r3, .L55+4
 1372 0092 0122     		movs	r2, #1
 1373 0094 DA60     		str	r2, [r3, #12]
 306:./BSP/system.c ****   AdcHandle.Init.ContinuousConvMode       = ENABLE;
 1374              		.loc 1 306 43 discriminator 12
 1375 0096 234B     		ldr	r3, .L55+4
 1376 0098 0122     		movs	r2, #1
 1377 009a 5A75     		strb	r2, [r3, #21]
 307:./BSP/system.c ****   AdcHandle.Init.DiscontinuousConvMode    = DISABLE;
 1378              		.loc 1 307 43 discriminator 12
 1379 009c 214B     		ldr	r3, .L55+4
 1380 009e 0022     		movs	r2, #0
 1381 00a0 1A77     		strb	r2, [r3, #28]
 308:./BSP/system.c ****   AdcHandle.Init.ExternalTrigConvEdge     = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1382              		.loc 1 308 43 discriminator 12
 1383 00a2 204B     		ldr	r3, .L55+4
 1384 00a4 0022     		movs	r2, #0
 1385 00a6 9A62     		str	r2, [r3, #40]
 309:./BSP/system.c ****   AdcHandle.Init.ExternalTrigConv         = ADC_EXTERNALTRIG_T1_CC1;
 1386              		.loc 1 309 43 discriminator 12
 1387 00a8 1E4B     		ldr	r3, .L55+4
 1388 00aa 4FF48062 		mov	r2, #1024
 1389 00ae 5A62     		str	r2, [r3, #36]
 310:./BSP/system.c ****   AdcHandle.Init.EOCSelection             = ADC_EOC_SEQ_CONV;
 1390              		.loc 1 310 43 discriminator 12
 1391 00b0 1C4B     		ldr	r3, .L55+4
 1392 00b2 0822     		movs	r2, #8
 1393 00b4 1A61     		str	r2, [r3, #16]
 311:./BSP/system.c ****   AdcHandle.Init.NbrOfConversion          = 1;
ARM GAS  /tmp/cc35GObF.s 			page 89


 1394              		.loc 1 311 43 discriminator 12
 1395 00b6 1B4B     		ldr	r3, .L55+4
 1396 00b8 0122     		movs	r2, #1
 1397 00ba 9A61     		str	r2, [r3, #24]
 312:./BSP/system.c ****   AdcHandle.Init.NbrOfDiscConversion      = 1;
 1398              		.loc 1 312 43 discriminator 12
 1399 00bc 194B     		ldr	r3, .L55+4
 1400 00be 0122     		movs	r2, #1
 1401 00c0 1A62     		str	r2, [r3, #32]
 313:./BSP/system.c ****   AdcHandle.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 1402              		.loc 1 313 43 discriminator 12
 1403 00c2 184B     		ldr	r3, .L55+4
 1404 00c4 0022     		movs	r2, #0
 1405 00c6 DA62     		str	r2, [r3, #44]
 314:./BSP/system.c ****   AdcHandle.Init.LowPowerAutoWait         = DISABLE;
 1406              		.loc 1 314 43 discriminator 12
 1407 00c8 164B     		ldr	r3, .L55+4
 1408 00ca 0022     		movs	r2, #0
 1409 00cc 1A75     		strb	r2, [r3, #20]
 315:./BSP/system.c ****   AdcHandle.Init.Overrun                  = ADC_OVR_DATA_OVERWRITTEN;
 1410              		.loc 1 315 43 discriminator 12
 1411 00ce 154B     		ldr	r3, .L55+4
 1412 00d0 4FF48052 		mov	r2, #4096
 1413 00d4 1A63     		str	r2, [r3, #48]
 316:./BSP/system.c **** 
 317:./BSP/system.c ****   *((uint32_t *) (ADC12_COMMON_BASE)) |= 0xC00000; // enable TSEN bit in  ADC CCR in common registe
 1414              		.loc 1 317 39 discriminator 12
 1415 00d6 174B     		ldr	r3, .L55+20
 1416 00d8 1B68     		ldr	r3, [r3]
 1417 00da 164A     		ldr	r2, .L55+20
 1418 00dc 43F44003 		orr	r3, r3, #12582912
 1419 00e0 1360     		str	r3, [r2]
 318:./BSP/system.c **** 
 319:./BSP/system.c ****   ret = HAL_ADC_Init(&AdcHandle);
 1420              		.loc 1 319 9 discriminator 12
 1421 00e2 1048     		ldr	r0, .L55+4
 1422 00e4 FFF7FEFF 		bl	HAL_ADC_Init
 1423 00e8 0346     		mov	r3, r0
 1424              		.loc 1 319 7 discriminator 12
 1425 00ea 7B62     		str	r3, [r7, #36]
 320:./BSP/system.c ****   if (ret == HAL_OK)
 1426              		.loc 1 320 6 discriminator 12
 1427 00ec 7B6A     		ldr	r3, [r7, #36]
 1428 00ee 002B     		cmp	r3, #0
 1429 00f0 11D1     		bne	.L53
 321:./BSP/system.c ****   {
 322:./BSP/system.c ****     /* Configure ADC Temperature Sensor Channel */
 323:./BSP/system.c ****     sConfig.Channel      = ADC_CHANNEL_TEMPSENSOR;                /* Sampled channel number */
 1430              		.loc 1 323 26
 1431 00f2 134B     		ldr	r3, .L55+32
 1432 00f4 BB60     		str	r3, [r7, #8]
 324:./BSP/system.c ****     sConfig.Rank         = ADC_REGULAR_RANK_1;          /* Rank of sampled channel number ADCx_CHAN
 1433              		.loc 1 324 26
 1434 00f6 0623     		movs	r3, #6
 1435 00f8 FB60     		str	r3, [r7, #12]
 325:./BSP/system.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_64CYCLES_5;   /* Sampling time (number of clock cycles un
 1436              		.loc 1 325 26
ARM GAS  /tmp/cc35GObF.s 			page 90


 1437 00fa 0523     		movs	r3, #5
 1438 00fc 3B61     		str	r3, [r7, #16]
 326:./BSP/system.c ****     sConfig.Offset       = 0;                           /* Parameter discarded because offset corre
 1439              		.loc 1 326 26
 1440 00fe 0023     		movs	r3, #0
 1441 0100 FB61     		str	r3, [r7, #28]
 327:./BSP/system.c ****     sConfig.OffsetNumber = ADC_OFFSET_NONE;             /* No offset subtraction */
 1442              		.loc 1 327 26
 1443 0102 0423     		movs	r3, #4
 1444 0104 BB61     		str	r3, [r7, #24]
 328:./BSP/system.c **** 
 329:./BSP/system.c ****     ret = HAL_ADC_ConfigChannel(&AdcHandle, &sConfig);
 1445              		.loc 1 329 11
 1446 0106 07F10803 		add	r3, r7, #8
 1447 010a 1946     		mov	r1, r3
 1448 010c 0548     		ldr	r0, .L55+4
 1449 010e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1450 0112 0346     		mov	r3, r0
 1451              		.loc 1 329 9
 1452 0114 7B62     		str	r3, [r7, #36]
 1453              	.L53:
 330:./BSP/system.c ****   }
 331:./BSP/system.c **** 
 332:./BSP/system.c ****   return ret;
 1454              		.loc 1 332 10
 1455 0116 7B6A     		ldr	r3, [r7, #36]
 333:./BSP/system.c **** }
 1456              		.loc 1 333 1
 1457 0118 1846     		mov	r0, r3
 1458 011a 2837     		adds	r7, r7, #40
 1459              	.LCFI41:
 1460              		.cfi_def_cfa_offset 8
 1461 011c BD46     		mov	sp, r7
 1462              	.LCFI42:
 1463              		.cfi_def_cfa_register 13
 1464              		@ sp needed
 1465 011e 80BD     		pop	{r7, pc}
 1466              	.L56:
 1467              		.align	2
 1468              	.L55:
 1469 0120 00440258 		.word	1476543488
 1470 0124 00000000 		.word	AdcHandle
 1471 0128 00600258 		.word	1476550656
 1472 012c 00200240 		.word	1073881088
 1473 0130 00210240 		.word	1073881344
 1474 0134 00230240 		.word	1073881856
 1475 0138 00630258 		.word	1476551424
 1476 013c E03000FE 		.word	-33541920
 1477 0140 000084CB 		.word	-880541696
 1478              		.cfi_endproc
 1479              	.LFE346:
 1481              		.section	.text.TEMP_SENSOR_Start,"ax",%progbits
 1482              		.align	1
 1483              		.global	TEMP_SENSOR_Start
 1484              		.syntax unified
 1485              		.thumb
 1486              		.thumb_func
ARM GAS  /tmp/cc35GObF.s 			page 91


 1487              		.fpu fpv5-d16
 1489              	TEMP_SENSOR_Start:
 1490              	.LFB347:
 334:./BSP/system.c **** 
 335:./BSP/system.c **** uint32_t TEMP_SENSOR_Start(void)
 336:./BSP/system.c **** {
 1491              		.loc 1 336 1
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 0
 1494              		@ frame_needed = 1, uses_anonymous_args = 0
 1495 0000 80B5     		push	{r7, lr}
 1496              	.LCFI43:
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 00AF     		add	r7, sp, #0
 1501              	.LCFI44:
 1502              		.cfi_def_cfa_register 7
 337:./BSP/system.c ****   return HAL_ADC_Start(&AdcHandle);
 1503              		.loc 1 337 10
 1504 0004 0248     		ldr	r0, .L59
 1505 0006 FFF7FEFF 		bl	HAL_ADC_Start
 1506 000a 0346     		mov	r3, r0
 338:./BSP/system.c **** }
 1507              		.loc 1 338 1
 1508 000c 1846     		mov	r0, r3
 1509 000e 80BD     		pop	{r7, pc}
 1510              	.L60:
 1511              		.align	2
 1512              	.L59:
 1513 0010 00000000 		.word	AdcHandle
 1514              		.cfi_endproc
 1515              	.LFE347:
 1517              		.section	.text.TEMP_SENSOR_Stop,"ax",%progbits
 1518              		.align	1
 1519              		.global	TEMP_SENSOR_Stop
 1520              		.syntax unified
 1521              		.thumb
 1522              		.thumb_func
 1523              		.fpu fpv5-d16
 1525              	TEMP_SENSOR_Stop:
 1526              	.LFB348:
 339:./BSP/system.c **** 
 340:./BSP/system.c **** uint32_t TEMP_SENSOR_Stop(void)
 341:./BSP/system.c **** {
 1527              		.loc 1 341 1
 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 0
 1530              		@ frame_needed = 1, uses_anonymous_args = 0
 1531 0000 80B5     		push	{r7, lr}
 1532              	.LCFI45:
 1533              		.cfi_def_cfa_offset 8
 1534              		.cfi_offset 7, -8
 1535              		.cfi_offset 14, -4
 1536 0002 00AF     		add	r7, sp, #0
 1537              	.LCFI46:
 1538              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cc35GObF.s 			page 92


 342:./BSP/system.c ****   return HAL_ADC_Stop(&AdcHandle);
 1539              		.loc 1 342 10
 1540 0004 0248     		ldr	r0, .L63
 1541 0006 FFF7FEFF 		bl	HAL_ADC_Stop
 1542 000a 0346     		mov	r3, r0
 343:./BSP/system.c **** }
 1543              		.loc 1 343 1
 1544 000c 1846     		mov	r0, r3
 1545 000e 80BD     		pop	{r7, pc}
 1546              	.L64:
 1547              		.align	2
 1548              	.L63:
 1549 0010 00000000 		.word	AdcHandle
 1550              		.cfi_endproc
 1551              	.LFE348:
 1553              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1554              		.align	1
 1555              		.global	HAL_TIM_PeriodElapsedCallback
 1556              		.syntax unified
 1557              		.thumb
 1558              		.thumb_func
 1559              		.fpu fpv5-d16
 1561              	HAL_TIM_PeriodElapsedCallback:
 1562              	.LFB349:
 344:./BSP/system.c **** 
 345:./BSP/system.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 346:./BSP/system.c **** {
 1563              		.loc 1 346 1
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 8
 1566              		@ frame_needed = 1, uses_anonymous_args = 0
 1567 0000 80B5     		push	{r7, lr}
 1568              	.LCFI47:
 1569              		.cfi_def_cfa_offset 8
 1570              		.cfi_offset 7, -8
 1571              		.cfi_offset 14, -4
 1572 0002 82B0     		sub	sp, sp, #8
 1573              	.LCFI48:
 1574              		.cfi_def_cfa_offset 16
 1575 0004 00AF     		add	r7, sp, #0
 1576              	.LCFI49:
 1577              		.cfi_def_cfa_register 7
 1578 0006 7860     		str	r0, [r7, #4]
 347:./BSP/system.c ****   if (htim->Instance == TIM2) {
 1579              		.loc 1 347 11
 1580 0008 7B68     		ldr	r3, [r7, #4]
 1581 000a 1B68     		ldr	r3, [r3]
 1582              		.loc 1 347 6
 1583 000c B3F1804F 		cmp	r3, #1073741824
 1584 0010 01D1     		bne	.L67
 348:./BSP/system.c ****     HAL_IncTick();
 1585              		.loc 1 348 5
 1586 0012 FFF7FEFF 		bl	HAL_IncTick
 1587              	.L67:
 349:./BSP/system.c ****   }
 350:./BSP/system.c **** }
 1588              		.loc 1 350 1
ARM GAS  /tmp/cc35GObF.s 			page 93


 1589 0016 00BF     		nop
 1590 0018 0837     		adds	r7, r7, #8
 1591              	.LCFI50:
 1592              		.cfi_def_cfa_offset 8
 1593 001a BD46     		mov	sp, r7
 1594              	.LCFI51:
 1595              		.cfi_def_cfa_register 13
 1596              		@ sp needed
 1597 001c 80BD     		pop	{r7, pc}
 1598              		.cfi_endproc
 1599              	.LFE349:
 1601              		.section	.text.Error_Handler,"ax",%progbits
 1602              		.align	1
 1603              		.global	Error_Handler
 1604              		.syntax unified
 1605              		.thumb
 1606              		.thumb_func
 1607              		.fpu fpv5-d16
 1609              	Error_Handler:
 1610              	.LFB350:
 351:./BSP/system.c **** 
 352:./BSP/system.c **** 
 353:./BSP/system.c **** void Error_Handler(char *file, uint32_t line)
 354:./BSP/system.c **** {
 1611              		.loc 1 354 1
 1612              		.cfi_startproc
 1613              		@ args = 0, pretend = 0, frame = 8
 1614              		@ frame_needed = 1, uses_anonymous_args = 0
 1615              		@ link register save eliminated.
 1616 0000 80B4     		push	{r7}
 1617              	.LCFI52:
 1618              		.cfi_def_cfa_offset 4
 1619              		.cfi_offset 7, -4
 1620 0002 83B0     		sub	sp, sp, #12
 1621              	.LCFI53:
 1622              		.cfi_def_cfa_offset 16
 1623 0004 00AF     		add	r7, sp, #0
 1624              	.LCFI54:
 1625              		.cfi_def_cfa_register 7
 1626 0006 7860     		str	r0, [r7, #4]
 1627 0008 3960     		str	r1, [r7]
 355:./BSP/system.c **** 	if (line == 0)
 1628              		.loc 1 355 5
 1629 000a 3B68     		ldr	r3, [r7]
 1630 000c 002B     		cmp	r3, #0
 1631 000e 00D0     		beq	.L72
 1632              	.L69:
 356:./BSP/system.c **** 	{
 357:./BSP/system.c **** 		return;
 358:./BSP/system.c **** 	}
 359:./BSP/system.c **** 	
 360:./BSP/system.c **** 	while(1)
 1633              		.loc 1 360 7 discriminator 1
 1634 0010 FEE7     		b	.L69
 1635              	.L72:
 357:./BSP/system.c **** 	}
 1636              		.loc 1 357 3
ARM GAS  /tmp/cc35GObF.s 			page 94


 1637 0012 00BF     		nop
 361:./BSP/system.c **** 	{
 362:./BSP/system.c **** 	}
 363:./BSP/system.c **** }
 1638              		.loc 1 363 1
 1639 0014 0C37     		adds	r7, r7, #12
 1640              	.LCFI55:
 1641              		.cfi_def_cfa_offset 4
 1642 0016 BD46     		mov	sp, r7
 1643              	.LCFI56:
 1644              		.cfi_def_cfa_register 13
 1645              		@ sp needed
 1646 0018 5DF8047B 		ldr	r7, [sp], #4
 1647              	.LCFI57:
 1648              		.cfi_restore 7
 1649              		.cfi_def_cfa_offset 0
 1650 001c 7047     		bx	lr
 1651              		.cfi_endproc
 1652              	.LFE350:
 1654              		.text
 1655              	.Letext0:
 1656              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1657              		.file 5 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1658              		.file 6 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 1659              		.file 7 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 1660              		.file 8 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1661              		.file 9 "/usr/include/newlib/sys/_types.h"
 1662              		.file 10 "/usr/include/newlib/sys/reent.h"
 1663              		.file 11 "/usr/include/newlib/sys/lock.h"
 1664              		.file 12 "/usr/include/newlib/math.h"
 1665              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1666              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 1667              		.file 15 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 1668              		.file 16 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 1669              		.file 17 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 1670              		.file 18 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma2d.h"
 1671              		.file 19 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dsi.h"
 1672              		.file 20 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 1673              		.file 21 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 1674              		.file 22 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_crc.h"
 1675              		.file 23 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1676              		.file 24 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_ltdc.h"
 1677              		.file 25 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 1678              		.file 26 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 1679              		.file 27 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1680              		.file 28 "/usr/include/newlib/stdlib.h"
 1681              		.file 29 "./BSP/Components/Inc/../../Hardware/Inc/ltdc_dsi.h"
 1682              		.file 30 "./BSP/Components/Inc/lcd.h"
ARM GAS  /tmp/cc35GObF.s 			page 95


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system.c
     /tmp/cc35GObF.s:17     .bss.AdcHandle:0000000000000000 $d
     /tmp/cc35GObF.s:20     .bss.AdcHandle:0000000000000000 AdcHandle
                            *COM*:0000000000000170 otm8009a_obj
     /tmp/cc35GObF.s:24     .rodata:0000000000000000 $d
     /tmp/cc35GObF.s:28     .text.Hardware_Init:0000000000000000 $t
     /tmp/cc35GObF.s:36     .text.Hardware_Init:0000000000000000 Hardware_Init
     /tmp/cc35GObF.s:413    .text.MPU_Config:0000000000000000 MPU_Config
     /tmp/cc35GObF.s:664    .text.CPU_CACHE_Enable:0000000000000000 CPU_CACHE_Enable
     /tmp/cc35GObF.s:1609   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc35GObF.s:215    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc35GObF.s:169    .text.BSP_Init:0000000000000000 BSP_Init
     /tmp/cc35GObF.s:157    .text.Hardware_Init:00000000000000a8 $d
     /tmp/cc35GObF.s:163    .text.BSP_Init:0000000000000000 $t
     /tmp/cc35GObF.s:1269   .text.TEMP_SENSOR_Init:0000000000000000 TEMP_SENSOR_Init
     /tmp/cc35GObF.s:1023   .text.GPIO_Init:0000000000000000 GPIO_Init
     /tmp/cc35GObF.s:943    .text.CRC_Init:0000000000000000 CRC_Init
     /tmp/cc35GObF.s:204    .text.BSP_Init:0000000000000028 $d
     /tmp/cc35GObF.s:209    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc35GObF.s:399    .text.SystemClock_Config:0000000000000118 $d
     /tmp/cc35GObF.s:407    .text.MPU_Config:0000000000000000 $t
     /tmp/cc35GObF.s:563    .text.MPU_Config:00000000000000cc $d
     /tmp/cc35GObF.s:568    .text.PeriphCommonClock_Config:0000000000000000 $t
     /tmp/cc35GObF.s:574    .text.PeriphCommonClock_Config:0000000000000000 PeriphCommonClock_Config
     /tmp/cc35GObF.s:653    .text.PeriphCommonClock_Config:000000000000005c $d
     /tmp/cc35GObF.s:658    .text.CPU_CACHE_Enable:0000000000000000 $t
     /tmp/cc35GObF.s:932    .text.CPU_CACHE_Enable:00000000000000d8 $d
     /tmp/cc35GObF.s:937    .text.CRC_Init:0000000000000000 $t
     /tmp/cc35GObF.s:1010   .text.CRC_Init:000000000000004c $d
     /tmp/cc35GObF.s:1017   .text.GPIO_Init:0000000000000000 $t
     /tmp/cc35GObF.s:1255   .text.GPIO_Init:00000000000001bc $d
     /tmp/cc35GObF.s:1263   .text.TEMP_SENSOR_Init:0000000000000000 $t
     /tmp/cc35GObF.s:1469   .text.TEMP_SENSOR_Init:0000000000000120 $d
     /tmp/cc35GObF.s:1482   .text.TEMP_SENSOR_Start:0000000000000000 $t
     /tmp/cc35GObF.s:1489   .text.TEMP_SENSOR_Start:0000000000000000 TEMP_SENSOR_Start
     /tmp/cc35GObF.s:1513   .text.TEMP_SENSOR_Start:0000000000000010 $d
     /tmp/cc35GObF.s:1518   .text.TEMP_SENSOR_Stop:0000000000000000 $t
     /tmp/cc35GObF.s:1525   .text.TEMP_SENSOR_Stop:0000000000000000 TEMP_SENSOR_Stop
     /tmp/cc35GObF.s:1549   .text.TEMP_SENSOR_Stop:0000000000000010 $d
     /tmp/cc35GObF.s:1554   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cc35GObF.s:1561   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc35GObF.s:1602   .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_Init
HAL_HSEM_FastTake
HAL_HSEM_Release
mt25tl01g_Init
IS42S32800J_Init
lcd_init
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_MCOConfig
HAL_MPU_Disable
ARM GAS  /tmp/cc35GObF.s 			page 96


HAL_MPU_ConfigRegion
HAL_MPU_Enable
HAL_RCCEx_PeriphCLKConfig
HAL_CRC_Init
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_ADC_Start
HAL_ADC_Stop
HAL_IncTick
