ARM GAS  /tmp/ccsHXxNI.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"system.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.bss.AdcHandle,"aw",%nobits
  17              		.align	2
  20              	AdcHandle:
  21 0000 00000000 		.space	100
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              		.section	.rodata
  23              		.align	2
  24              	.LC0:
  25 0000 2E2F4253 		.ascii	"./BSP/system.c\000"
  25      502F7379 
  25      7374656D 
  25      2E6300
  26              		.section	.text.Hardware_Init,"ax",%progbits
  27              		.align	1
  28              		.global	Hardware_Init
  29              		.arch armv7e-m
  30              		.syntax unified
  31              		.thumb
  32              		.thumb_func
  33              		.fpu fpv5-d16
  35              	Hardware_Init:
  36              	.LFB338:
  37              		.file 1 "./BSP/system.c"
   1:./BSP/system.c **** #include "system.h"
   2:./BSP/system.c **** 
   3:./BSP/system.c **** #define DEVICE_IS_CUT_2_1()      (HAL_GetREVID() & 0x21ff) ? 1 : 0
   4:./BSP/system.c **** #define DEVICE_IS_CUT_2_X()      (HAL_GetREVID() & 0x2fff) ? 1 : 0
   5:./BSP/system.c **** #define DEVICE_IS_CUT_1_2()      (HAL_GetREVID() & 0x12ff) ? 1 : 0
   6:./BSP/system.c **** 
   7:./BSP/system.c **** #ifndef HSEM_ID_0
   8:./BSP/system.c **** #define HSEM_ID_0 (0U) /* HW semaphore 0*/
   9:./BSP/system.c **** #endif
  10:./BSP/system.c **** 
  11:./BSP/system.c **** static ADC_HandleTypeDef    AdcHandle;
  12:./BSP/system.c **** static void SystemClock_Config(void);
  13:./BSP/system.c **** static void MPU_Config(void);
  14:./BSP/system.c **** static void BSP_Init(void);
  15:./BSP/system.c **** static void PeriphCommonClock_Config(void);
  16:./BSP/system.c **** static void CPU_CACHE_Enable(void);
ARM GAS  /tmp/ccsHXxNI.s 			page 2


  17:./BSP/system.c **** static void CRC_Init(void);
  18:./BSP/system.c **** static void GPIO_Init(void);
  19:./BSP/system.c **** static uint32_t TEMP_SENSOR_Init(void);
  20:./BSP/system.c **** 
  21:./BSP/system.c **** void Hardware_Init(void)
  22:./BSP/system.c **** {
  38              		.loc 1 22 1
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 16
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 8
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 84B0     		sub	sp, sp, #16
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 24
  50 0004 00AF     		add	r7, sp, #0
  51              	.LCFI2:
  52              		.cfi_def_cfa_register 7
  23:./BSP/system.c ****   int32_t timeout = 0xFFFF;
  53              		.loc 1 23 11
  54 0006 4FF6FF73 		movw	r3, #65535
  55 000a FB60     		str	r3, [r7, #12]
  24:./BSP/system.c **** 
  25:./BSP/system.c ****   if(!DEVICE_IS_CUT_2_X())
  56              		.loc 1 25 7
  57 000c FFF7FEFF 		bl	HAL_GetREVID
  58 0010 0246     		mov	r2, r0
  59 0012 42F6FF73 		movw	r3, #12287
  60 0016 1340     		ands	r3, r3, r2
  61              		.loc 1 25 5
  62 0018 002B     		cmp	r3, #0
  63 001a 0DD1     		bne	.L10
  26:./BSP/system.c ****   {
  27:./BSP/system.c ****       if(!DEVICE_IS_CUT_1_2())
  64              		.loc 1 27 11
  65 001c FFF7FEFF 		bl	HAL_GetREVID
  66 0020 0246     		mov	r2, r0
  67 0022 41F2FF23 		movw	r3, #4863
  68 0026 1340     		ands	r3, r3, r2
  69              		.loc 1 27 9
  70 0028 002B     		cmp	r3, #0
  71 002a 02D1     		bne	.L3
  28:./BSP/system.c ****       {
  29:./BSP/system.c ****           *((uint32_t*)0x51046108) = 1; /* DMA2D issue with cut 1.1 - fixed in cut 1.2 */
  72              		.loc 1 29 11
  73 002c 314B     		ldr	r3, .L11
  74              		.loc 1 29 36
  75 002e 0122     		movs	r2, #1
  76 0030 1A60     		str	r2, [r3]
  77              	.L3:
  30:./BSP/system.c ****       }
  31:./BSP/system.c ****       *((uint32_t*)0x51008108) = 1; /* AXI SRAM issue with cut1.2 - fixed in cut 2.0 */
  78              		.loc 1 31 7
  79 0032 314B     		ldr	r3, .L11+4
ARM GAS  /tmp/ccsHXxNI.s 			page 3


  80              		.loc 1 31 32
  81 0034 0122     		movs	r2, #1
  82 0036 1A60     		str	r2, [r3]
  83              	.L10:
  32:./BSP/system.c ****   }
  33:./BSP/system.c **** 
  34:./BSP/system.c ****   while((__HAL_RCC_GET_FLAG(RCC_FLAG_D2CKRDY) != RESET) && (timeout-- > 0));
  84              		.loc 1 34 8
  85 0038 00BF     		nop
  86              	.L5:
  87              		.loc 1 34 10 discriminator 2
  88 003a 304B     		ldr	r3, .L11+8
  89 003c 1B68     		ldr	r3, [r3]
  90 003e 03F40043 		and	r3, r3, #32768
  91              		.loc 1 34 8 discriminator 2
  92 0042 002B     		cmp	r3, #0
  93 0044 04D0     		beq	.L4
  94              		.loc 1 34 68 discriminator 1
  95 0046 FB68     		ldr	r3, [r7, #12]
  96 0048 5A1E     		subs	r2, r3, #1
  97 004a FA60     		str	r2, [r7, #12]
  98              		.loc 1 34 57 discriminator 1
  99 004c 002B     		cmp	r3, #0
 100 004e F4DC     		bgt	.L5
 101              	.L4:
  35:./BSP/system.c ****   if ( timeout < 0 )
 102              		.loc 1 35 6
 103 0050 FB68     		ldr	r3, [r7, #12]
 104 0052 002B     		cmp	r3, #0
 105 0054 03DA     		bge	.L6
  36:./BSP/system.c ****   {
  37:./BSP/system.c ****     Error_Handler(__FILE__, __LINE__);
 106              		.loc 1 37 5
 107 0056 2521     		movs	r1, #37
 108 0058 2948     		ldr	r0, .L11+12
 109 005a FFF7FEFF 		bl	Error_Handler
 110              	.L6:
  38:./BSP/system.c ****   }
  39:./BSP/system.c **** 
  40:./BSP/system.c ****   /* Enable RTC back-up registers access */
  41:./BSP/system.c ****   HAL_PWR_EnableBkUpAccess();
 111              		.loc 1 41 3
 112 005e FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
  42:./BSP/system.c **** 
  43:./BSP/system.c ****   MPU_Config();
 113              		.loc 1 43 3
 114 0062 FFF7FEFF 		bl	MPU_Config
  44:./BSP/system.c ****   HAL_Init();
 115              		.loc 1 44 3
 116 0066 FFF7FEFF 		bl	HAL_Init
  45:./BSP/system.c **** 
  46:./BSP/system.c ****   SystemClock_Config();
 117              		.loc 1 46 3
 118 006a FFF7FEFF 		bl	SystemClock_Config
 119              	.LBB46:
  47:./BSP/system.c ****   __HAL_RCC_CRC_CLK_ENABLE();
 120              		.loc 1 47 3
ARM GAS  /tmp/ccsHXxNI.s 			page 4


 121 006e 234B     		ldr	r3, .L11+8
 122 0070 D3F8E030 		ldr	r3, [r3, #224]
 123 0074 214A     		ldr	r2, .L11+8
 124 0076 43F40023 		orr	r3, r3, #524288
 125 007a C2F8E030 		str	r3, [r2, #224]
 126 007e 1F4B     		ldr	r3, .L11+8
 127 0080 D3F8E030 		ldr	r3, [r3, #224]
 128 0084 03F40023 		and	r3, r3, #524288
 129 0088 BB60     		str	r3, [r7, #8]
 130 008a BB68     		ldr	r3, [r7, #8]
 131              	.LBE46:
  48:./BSP/system.c **** 
  49:./BSP/system.c ****   PeriphCommonClock_Config();
 132              		.loc 1 49 3
 133 008c FFF7FEFF 		bl	PeriphCommonClock_Config
 134              	.LBB47:
  50:./BSP/system.c **** 
  51:./BSP/system.c ****   __HAL_RCC_HSEM_CLK_ENABLE();
 135              		.loc 1 51 3
 136 0090 1A4B     		ldr	r3, .L11+8
 137 0092 D3F8E030 		ldr	r3, [r3, #224]
 138 0096 194A     		ldr	r2, .L11+8
 139 0098 43F00073 		orr	r3, r3, #33554432
 140 009c C2F8E030 		str	r3, [r2, #224]
 141 00a0 164B     		ldr	r3, .L11+8
 142 00a2 D3F8E030 		ldr	r3, [r3, #224]
 143 00a6 03F00073 		and	r3, r3, #33554432
 144 00aa 7B60     		str	r3, [r7, #4]
 145 00ac 7B68     		ldr	r3, [r7, #4]
 146              	.LBE47:
  52:./BSP/system.c **** 
  53:./BSP/system.c ****   HAL_HSEM_FastTake(HSEM_ID_0);
 147              		.loc 1 53 3
 148 00ae 0020     		movs	r0, #0
 149 00b0 FFF7FEFF 		bl	HAL_HSEM_FastTake
  54:./BSP/system.c **** 
  55:./BSP/system.c ****   HAL_HSEM_Release(HSEM_ID_0,0);
 150              		.loc 1 55 3
 151 00b4 0021     		movs	r1, #0
 152 00b6 0020     		movs	r0, #0
 153 00b8 FFF7FEFF 		bl	HAL_HSEM_Release
  56:./BSP/system.c **** 
  57:./BSP/system.c ****   timeout = 0xFFFF;
 154              		.loc 1 57 11
 155 00bc 4FF6FF73 		movw	r3, #65535
 156 00c0 FB60     		str	r3, [r7, #12]
  58:./BSP/system.c ****   while((__HAL_RCC_GET_FLAG(RCC_FLAG_D2CKRDY) == RESET) && (timeout-- > 0));
 157              		.loc 1 58 8
 158 00c2 00BF     		nop
 159              	.L8:
 160              		.loc 1 58 10 discriminator 2
 161 00c4 0D4B     		ldr	r3, .L11+8
 162 00c6 1B68     		ldr	r3, [r3]
 163 00c8 03F40043 		and	r3, r3, #32768
 164              		.loc 1 58 8 discriminator 2
 165 00cc 002B     		cmp	r3, #0
 166 00ce 04D1     		bne	.L7
ARM GAS  /tmp/ccsHXxNI.s 			page 5


 167              		.loc 1 58 68 discriminator 1
 168 00d0 FB68     		ldr	r3, [r7, #12]
 169 00d2 5A1E     		subs	r2, r3, #1
 170 00d4 FA60     		str	r2, [r7, #12]
 171              		.loc 1 58 57 discriminator 1
 172 00d6 002B     		cmp	r3, #0
 173 00d8 F4DC     		bgt	.L8
 174              	.L7:
  59:./BSP/system.c ****   if ( timeout < 0 )
 175              		.loc 1 59 6
 176 00da FB68     		ldr	r3, [r7, #12]
 177 00dc 002B     		cmp	r3, #0
 178 00de 03DA     		bge	.L9
  60:./BSP/system.c ****   {
  61:./BSP/system.c ****     Error_Handler(__FILE__, __LINE__);
 179              		.loc 1 61 5
 180 00e0 3D21     		movs	r1, #61
 181 00e2 0748     		ldr	r0, .L11+12
 182 00e4 FFF7FEFF 		bl	Error_Handler
 183              	.L9:
  62:./BSP/system.c ****   }
  63:./BSP/system.c **** 
  64:./BSP/system.c ****   BSP_Init();
 184              		.loc 1 64 3
 185 00e8 FFF7FEFF 		bl	BSP_Init
  65:./BSP/system.c **** }
 186              		.loc 1 65 1
 187 00ec 00BF     		nop
 188 00ee 1037     		adds	r7, r7, #16
 189              	.LCFI3:
 190              		.cfi_def_cfa_offset 8
 191 00f0 BD46     		mov	sp, r7
 192              	.LCFI4:
 193              		.cfi_def_cfa_register 13
 194              		@ sp needed
 195 00f2 80BD     		pop	{r7, pc}
 196              	.L12:
 197              		.align	2
 198              	.L11:
 199 00f4 08610451 		.word	1359241480
 200 00f8 08810051 		.word	1358987528
 201 00fc 00440258 		.word	1476543488
 202 0100 00000000 		.word	.LC0
 203              		.cfi_endproc
 204              	.LFE338:
 206              		.section	.text.BSP_Init,"ax",%progbits
 207              		.align	1
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 211              		.fpu fpv5-d16
 213              	BSP_Init:
 214              	.LFB339:
  66:./BSP/system.c **** 
  67:./BSP/system.c **** static void BSP_Init(void)
  68:./BSP/system.c **** {
 215              		.loc 1 68 1
ARM GAS  /tmp/ccsHXxNI.s 			page 6


 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 1, uses_anonymous_args = 0
 219 0000 80B5     		push	{r7, lr}
 220              	.LCFI5:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 7, -8
 223              		.cfi_offset 14, -4
 224 0002 00AF     		add	r7, sp, #0
 225              	.LCFI6:
 226              		.cfi_def_cfa_register 7
  69:./BSP/system.c ****   //QSPI init
  70:./BSP/system.c ****   //SDRAM init
  71:./BSP/system.c ****   IS42S32800J_Init();
 227              		.loc 1 71 3
 228 0004 FFF7FEFF 		bl	IS42S32800J_Init
  72:./BSP/system.c ****   //MCU internal temperature sensing init
  73:./BSP/system.c ****   TEMP_SENSOR_Init();
 229              		.loc 1 73 3
 230 0008 FFF7FEFF 		bl	TEMP_SENSOR_Init
  74:./BSP/system.c ****   //RTC init
  75:./BSP/system.c ****   //GPIO init
  76:./BSP/system.c ****   GPIO_Init();
 231              		.loc 1 76 3
 232 000c FFF7FEFF 		bl	GPIO_Init
  77:./BSP/system.c ****   //Enable L1 cache
  78:./BSP/system.c ****   CPU_CACHE_Enable();
 233              		.loc 1 78 3
 234 0010 FFF7FEFF 		bl	CPU_CACHE_Enable
  79:./BSP/system.c ****   //LCD init
  80:./BSP/system.c ****   //CRC init
  81:./BSP/system.c ****   CRC_Init();
 235              		.loc 1 81 3
 236 0014 FFF7FEFF 		bl	CRC_Init
  82:./BSP/system.c **** }
 237              		.loc 1 82 1
 238 0018 00BF     		nop
 239 001a 80BD     		pop	{r7, pc}
 240              		.cfi_endproc
 241              	.LFE339:
 243              		.section	.text.SystemClock_Config,"ax",%progbits
 244              		.align	1
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	SystemClock_Config:
 251              	.LFB340:
  83:./BSP/system.c **** 
  84:./BSP/system.c **** static void SystemClock_Config(void)
  85:./BSP/system.c **** {
 252              		.loc 1 85 1
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 312
 255              		@ frame_needed = 1, uses_anonymous_args = 0
 256 0000 80B5     		push	{r7, lr}
 257              	.LCFI7:
ARM GAS  /tmp/ccsHXxNI.s 			page 7


 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 CEB0     		sub	sp, sp, #312
 262              	.LCFI8:
 263              		.cfi_def_cfa_offset 320
 264 0004 00AF     		add	r7, sp, #0
 265              	.LCFI9:
 266              		.cfi_def_cfa_register 7
  86:./BSP/system.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 267              		.loc 1 86 22
 268 0006 07F1EC03 		add	r3, r7, #236
 269 000a 4C22     		movs	r2, #76
 270 000c 0021     		movs	r1, #0
 271 000e 1846     		mov	r0, r3
 272 0010 FFF7FEFF 		bl	memset
  87:./BSP/system.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 273              		.loc 1 87 22
 274 0014 07F1CC03 		add	r3, r7, #204
 275 0018 2022     		movs	r2, #32
 276 001a 0021     		movs	r1, #0
 277 001c 1846     		mov	r0, r3
 278 001e FFF7FEFF 		bl	memset
  88:./BSP/system.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
  89:./BSP/system.c ****   /** Supply configuration update enable
  90:./BSP/system.c ****    */
  91:./BSP/system.c ****   HAL_PWREx_ConfigSupply(PWR_DIRECT_SMPS_SUPPLY);
 279              		.loc 1 91 3
 280 0022 0420     		movs	r0, #4
 281 0024 FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 282              	.LBB48:
  92:./BSP/system.c ****   /** Configure the main internal regulator output voltage
  93:./BSP/system.c ****    */
  94:./BSP/system.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 283              		.loc 1 94 3
 284 0028 07F10803 		add	r3, r7, #8
 285 002c 0022     		movs	r2, #0
 286 002e 1A60     		str	r2, [r3]
 287 0030 6A4B     		ldr	r3, .L18
 288 0032 DB6A     		ldr	r3, [r3, #44]
 289 0034 694A     		ldr	r2, .L18
 290 0036 23F00103 		bic	r3, r3, #1
 291 003a D362     		str	r3, [r2, #44]
 292 003c 674B     		ldr	r3, .L18
 293 003e DB6A     		ldr	r3, [r3, #44]
 294 0040 03F00102 		and	r2, r3, #1
 295 0044 07F10803 		add	r3, r7, #8
 296 0048 1A60     		str	r2, [r3]
 297 004a 654B     		ldr	r3, .L18+4
 298 004c 9B69     		ldr	r3, [r3, #24]
 299 004e 644A     		ldr	r2, .L18+4
 300 0050 43F44043 		orr	r3, r3, #49152
 301 0054 9361     		str	r3, [r2, #24]
 302 0056 624B     		ldr	r3, .L18+4
 303 0058 9B69     		ldr	r3, [r3, #24]
 304 005a 03F44042 		and	r2, r3, #49152
 305 005e 07F10803 		add	r3, r7, #8
ARM GAS  /tmp/ccsHXxNI.s 			page 8


 306 0062 1A60     		str	r2, [r3]
 307 0064 07F10803 		add	r3, r7, #8
 308 0068 1B68     		ldr	r3, [r3]
 309              	.LBE48:
  95:./BSP/system.c **** 
  96:./BSP/system.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 310              		.loc 1 96 8
 311 006a 00BF     		nop
 312              	.L15:
 313              		.loc 1 96 10 discriminator 1
 314 006c 5C4B     		ldr	r3, .L18+4
 315 006e 9B69     		ldr	r3, [r3, #24]
 316 0070 03F40053 		and	r3, r3, #8192
 317              		.loc 1 96 8 discriminator 1
 318 0074 B3F5005F 		cmp	r3, #8192
 319 0078 F8D1     		bne	.L15
  97:./BSP/system.c ****   /** Macro to configure the PLL clock source
  98:./BSP/system.c ****    */
  99:./BSP/system.c ****   __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
 320              		.loc 1 99 3
 321 007a 5A4B     		ldr	r3, .L18+8
 322 007c 9B6A     		ldr	r3, [r3, #40]
 323 007e 23F00303 		bic	r3, r3, #3
 324 0082 584A     		ldr	r2, .L18+8
 325 0084 43F00203 		orr	r3, r3, #2
 326 0088 9362     		str	r3, [r2, #40]
 100:./BSP/system.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 101:./BSP/system.c ****    * in the RCC_OscInitTypeDef structure.
 102:./BSP/system.c ****    */
 103:./BSP/system.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSI
 327              		.loc 1 103 36
 328 008a 0B23     		movs	r3, #11
 329 008c C7F8EC30 		str	r3, [r7, #236]
 104:./BSP/system.c ****                               |RCC_OSCILLATORTYPE_HSE;
 105:./BSP/system.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 330              		.loc 1 105 30
 331 0090 4FF48033 		mov	r3, #65536
 332 0094 C7F8F030 		str	r3, [r7, #240]
 106:./BSP/system.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 333              		.loc 1 106 30
 334 0098 0123     		movs	r3, #1
 335 009a C7F8F830 		str	r3, [r7, #248]
 107:./BSP/system.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 336              		.loc 1 107 41
 337 009e 4023     		movs	r3, #64
 338 00a0 C7F8FC30 		str	r3, [r7, #252]
 108:./BSP/system.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 339              		.loc 1 108 30
 340 00a4 0123     		movs	r3, #1
 341 00a6 C7F80031 		str	r3, [r7, #256]
 109:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 342              		.loc 1 109 34
 343 00aa 0223     		movs	r3, #2
 344 00ac C7F81031 		str	r3, [r7, #272]
 110:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 345              		.loc 1 110 35
 346 00b0 0223     		movs	r3, #2
ARM GAS  /tmp/ccsHXxNI.s 			page 9


 347 00b2 C7F81431 		str	r3, [r7, #276]
 111:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 348              		.loc 1 111 30
 349 00b6 0223     		movs	r3, #2
 350 00b8 C7F81831 		str	r3, [r7, #280]
 112:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 351              		.loc 1 112 30
 352 00bc 4023     		movs	r3, #64
 353 00be C7F81C31 		str	r3, [r7, #284]
 113:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 354              		.loc 1 113 30
 355 00c2 0223     		movs	r3, #2
 356 00c4 C7F82031 		str	r3, [r7, #288]
 114:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLQ = 13;
 357              		.loc 1 114 30
 358 00c8 0D23     		movs	r3, #13
 359 00ca C7F82431 		str	r3, [r7, #292]
 115:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 360              		.loc 1 115 30
 361 00ce 0223     		movs	r3, #2
 362 00d0 C7F82831 		str	r3, [r7, #296]
 116:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 363              		.loc 1 116 32
 364 00d4 0C23     		movs	r3, #12
 365 00d6 C7F82C31 		str	r3, [r7, #300]
 117:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 366              		.loc 1 117 35
 367 00da 0023     		movs	r3, #0
 368 00dc C7F83031 		str	r3, [r7, #304]
 118:./BSP/system.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 369              		.loc 1 118 34
 370 00e0 0023     		movs	r3, #0
 371 00e2 C7F83431 		str	r3, [r7, #308]
 119:./BSP/system.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 372              		.loc 1 119 7
 373 00e6 07F1EC03 		add	r3, r7, #236
 374 00ea 1846     		mov	r0, r3
 375 00ec FFF7FEFF 		bl	HAL_RCC_OscConfig
 376 00f0 0346     		mov	r3, r0
 377              		.loc 1 119 6
 378 00f2 002B     		cmp	r3, #0
 379 00f4 03D0     		beq	.L16
 120:./BSP/system.c ****   {
 121:./BSP/system.c ****       Error_Handler(__FILE__, __LINE__);
 380              		.loc 1 121 7
 381 00f6 7921     		movs	r1, #121
 382 00f8 3B48     		ldr	r0, .L18+12
 383 00fa FFF7FEFF 		bl	Error_Handler
 384              	.L16:
 122:./BSP/system.c ****   }
 123:./BSP/system.c **** 
 124:./BSP/system.c ****   /* PLL3 for USB Clock */
 125:./BSP/system.c ****   PeriphClkInitStruct.PLL3.PLL3M = 25;
 385              		.loc 1 125 34
 386 00fe 07F10C03 		add	r3, r7, #12
 387 0102 1922     		movs	r2, #25
 388 0104 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/ccsHXxNI.s 			page 10


 126:./BSP/system.c ****   PeriphClkInitStruct.PLL3.PLL3N = 336;
 389              		.loc 1 126 34
 390 0106 07F10C03 		add	r3, r7, #12
 391 010a 4FF4A872 		mov	r2, #336
 392 010e 9A62     		str	r2, [r3, #40]
 127:./BSP/system.c ****   PeriphClkInitStruct.PLL3.PLL3P = 2;
 393              		.loc 1 127 34
 394 0110 07F10C03 		add	r3, r7, #12
 395 0114 0222     		movs	r2, #2
 396 0116 DA62     		str	r2, [r3, #44]
 128:./BSP/system.c ****   PeriphClkInitStruct.PLL3.PLL3R = 2;
 397              		.loc 1 128 34
 398 0118 07F10C03 		add	r3, r7, #12
 399 011c 0222     		movs	r2, #2
 400 011e 5A63     		str	r2, [r3, #52]
 129:./BSP/system.c ****   PeriphClkInitStruct.PLL3.PLL3Q = 7;
 401              		.loc 1 129 34
 402 0120 07F10C03 		add	r3, r7, #12
 403 0124 0722     		movs	r2, #7
 404 0126 1A63     		str	r2, [r3, #48]
 130:./BSP/system.c **** 
 131:./BSP/system.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USB;
 405              		.loc 1 131 44
 406 0128 07F10C03 		add	r3, r7, #12
 407 012c 4FF48022 		mov	r2, #262144
 408 0130 1A60     		str	r2, [r3]
 132:./BSP/system.c ****   PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_PLL3;
 409              		.loc 1 132 41
 410 0132 07F10C03 		add	r3, r7, #12
 411 0136 4FF40012 		mov	r2, #2097152
 412 013a C3F88820 		str	r2, [r3, #136]
 133:./BSP/system.c ****   HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 413              		.loc 1 133 3
 414 013e 07F10C03 		add	r3, r7, #12
 415 0142 1846     		mov	r0, r3
 416 0144 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 134:./BSP/system.c **** 
 135:./BSP/system.c ****   /** Initializes the CPU, AHB and APB buses clocks
 136:./BSP/system.c ****    */
 137:./BSP/system.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 417              		.loc 1 137 31
 418 0148 3F23     		movs	r3, #63
 419 014a C7F8CC30 		str	r3, [r7, #204]
 138:./BSP/system.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 139:./BSP/system.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 140:./BSP/system.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 420              		.loc 1 140 34
 421 014e 0323     		movs	r3, #3
 422 0150 C7F8D030 		str	r3, [r7, #208]
 141:./BSP/system.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 423              		.loc 1 141 35
 424 0154 0023     		movs	r3, #0
 425 0156 C7F8D430 		str	r3, [r7, #212]
 142:./BSP/system.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 426              		.loc 1 142 35
 427 015a 0823     		movs	r3, #8
 428 015c C7F8D830 		str	r3, [r7, #216]
ARM GAS  /tmp/ccsHXxNI.s 			page 11


 143:./BSP/system.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 429              		.loc 1 143 36
 430 0160 4023     		movs	r3, #64
 431 0162 C7F8DC30 		str	r3, [r7, #220]
 144:./BSP/system.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 432              		.loc 1 144 36
 433 0166 4023     		movs	r3, #64
 434 0168 C7F8E030 		str	r3, [r7, #224]
 145:./BSP/system.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 435              		.loc 1 145 36
 436 016c 4FF48063 		mov	r3, #1024
 437 0170 C7F8E430 		str	r3, [r7, #228]
 146:./BSP/system.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 438              		.loc 1 146 36
 439 0174 4023     		movs	r3, #64
 440 0176 C7F8E830 		str	r3, [r7, #232]
 147:./BSP/system.c **** 
 148:./BSP/system.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 441              		.loc 1 148 7
 442 017a 07F1CC03 		add	r3, r7, #204
 443 017e 0221     		movs	r1, #2
 444 0180 1846     		mov	r0, r3
 445 0182 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 446 0186 0346     		mov	r3, r0
 447              		.loc 1 148 6
 448 0188 002B     		cmp	r3, #0
 449 018a 03D0     		beq	.L17
 149:./BSP/system.c ****   {
 150:./BSP/system.c ****       Error_Handler(__FILE__, __LINE__);
 450              		.loc 1 150 7
 451 018c 9621     		movs	r1, #150
 452 018e 1648     		ldr	r0, .L18+12
 453 0190 FFF7FEFF 		bl	Error_Handler
 454              	.L17:
 151:./BSP/system.c ****   }
 152:./BSP/system.c ****   HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_HSI, RCC_MCODIV_1);\
 455              		.loc 1 152 3
 456 0194 4FF48022 		mov	r2, #262144
 457 0198 0021     		movs	r1, #0
 458 019a 0020     		movs	r0, #0
 459 019c FFF7FEFF 		bl	HAL_RCC_MCOConfig
 153:./BSP/system.c **** 
 154:./BSP/system.c ****   __HAL_RCC_CSI_ENABLE() ;
 460              		.loc 1 154 3
 461 01a0 104B     		ldr	r3, .L18+8
 462 01a2 1B68     		ldr	r3, [r3]
 463 01a4 0F4A     		ldr	r2, .L18+8
 464 01a6 43F08003 		orr	r3, r3, #128
 465 01aa 1360     		str	r3, [r2]
 466              	.LBB49:
 155:./BSP/system.c **** 
 156:./BSP/system.c ****   /* Enable SYSCFG clock mondatory for I/O Compensation Cell */
 157:./BSP/system.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE() ;
 467              		.loc 1 157 3
 468 01ac 0D4B     		ldr	r3, .L18+8
 469 01ae D3F8F430 		ldr	r3, [r3, #244]
 470 01b2 0C4A     		ldr	r2, .L18+8
ARM GAS  /tmp/ccsHXxNI.s 			page 12


 471 01b4 43F00203 		orr	r3, r3, #2
 472 01b8 C2F8F430 		str	r3, [r2, #244]
 473 01bc 094B     		ldr	r3, .L18+8
 474 01be D3F8F430 		ldr	r3, [r3, #244]
 475 01c2 03F00202 		and	r2, r3, #2
 476 01c6 3B1D     		adds	r3, r7, #4
 477 01c8 1A60     		str	r2, [r3]
 478 01ca 3B1D     		adds	r3, r7, #4
 479 01cc 1B68     		ldr	r3, [r3]
 480              	.LBE49:
 158:./BSP/system.c **** 
 159:./BSP/system.c ****   /* Enables the I/O Compensation Cell */    
 160:./BSP/system.c ****   HAL_EnableCompensationCell();  
 481              		.loc 1 160 3
 482 01ce FFF7FEFF 		bl	HAL_EnableCompensationCell
 161:./BSP/system.c **** }
 483              		.loc 1 161 1
 484 01d2 00BF     		nop
 485 01d4 07F59C77 		add	r7, r7, #312
 486              	.LCFI10:
 487              		.cfi_def_cfa_offset 8
 488 01d8 BD46     		mov	sp, r7
 489              	.LCFI11:
 490              		.cfi_def_cfa_register 13
 491              		@ sp needed
 492 01da 80BD     		pop	{r7, pc}
 493              	.L19:
 494              		.align	2
 495              	.L18:
 496 01dc 00040058 		.word	1476396032
 497 01e0 00480258 		.word	1476544512
 498 01e4 00440258 		.word	1476543488
 499 01e8 00000000 		.word	.LC0
 500              		.cfi_endproc
 501              	.LFE340:
 503              		.section	.text.MPU_Config,"ax",%progbits
 504              		.align	1
 505              		.syntax unified
 506              		.thumb
 507              		.thumb_func
 508              		.fpu fpv5-d16
 510              	MPU_Config:
 511              	.LFB341:
 162:./BSP/system.c **** 
 163:./BSP/system.c **** static void MPU_Config(void)
 164:./BSP/system.c **** {
 512              		.loc 1 164 1
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 16
 515              		@ frame_needed = 1, uses_anonymous_args = 0
 516 0000 80B5     		push	{r7, lr}
 517              	.LCFI12:
 518              		.cfi_def_cfa_offset 8
 519              		.cfi_offset 7, -8
 520              		.cfi_offset 14, -4
 521 0002 84B0     		sub	sp, sp, #16
 522              	.LCFI13:
ARM GAS  /tmp/ccsHXxNI.s 			page 13


 523              		.cfi_def_cfa_offset 24
 524 0004 00AF     		add	r7, sp, #0
 525              	.LCFI14:
 526              		.cfi_def_cfa_register 7
 165:./BSP/system.c ****   MPU_Region_InitTypeDef MPU_InitStruct;
 166:./BSP/system.c **** 
 167:./BSP/system.c ****   HAL_MPU_Disable();
 527              		.loc 1 167 3
 528 0006 FFF7FEFF 		bl	HAL_MPU_Disable
 168:./BSP/system.c **** 
 169:./BSP/system.c ****   /* Configure unused area of QSPI region as strongly ordered.
 170:./BSP/system.c ****   * This is *important* to avoid unintentional fetches from illegal
 171:./BSP/system.c ****   * addresses due to cache/speculation which would halt the MCU.
 172:./BSP/system.c ****   */
 173:./BSP/system.c ****   MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 529              		.loc 1 173 25
 530 000a 0123     		movs	r3, #1
 531 000c 3B70     		strb	r3, [r7]
 174:./BSP/system.c ****   MPU_InitStruct.BaseAddress = 0x90000000;
 532              		.loc 1 174 30
 533 000e 4FF01043 		mov	r3, #-1879048192
 534 0012 7B60     		str	r3, [r7, #4]
 175:./BSP/system.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 535              		.loc 1 175 23
 536 0014 1B23     		movs	r3, #27
 537 0016 3B72     		strb	r3, [r7, #8]
 176:./BSP/system.c ****   MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 538              		.loc 1 176 35
 539 0018 0323     		movs	r3, #3
 540 001a FB72     		strb	r3, [r7, #11]
 177:./BSP/system.c ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 541              		.loc 1 177 31
 542 001c 0023     		movs	r3, #0
 543 001e FB73     		strb	r3, [r7, #15]
 178:./BSP/system.c ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 544              		.loc 1 178 30
 545 0020 0023     		movs	r3, #0
 546 0022 BB73     		strb	r3, [r7, #14]
 179:./BSP/system.c ****   MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
 547              		.loc 1 179 30
 548 0024 0023     		movs	r3, #0
 549 0026 7B73     		strb	r3, [r7, #13]
 180:./BSP/system.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 550              		.loc 1 180 25
 551 0028 0023     		movs	r3, #0
 552 002a 7B70     		strb	r3, [r7, #1]
 181:./BSP/system.c ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 553              		.loc 1 181 31
 554 002c 0023     		movs	r3, #0
 555 002e BB72     		strb	r3, [r7, #10]
 182:./BSP/system.c ****   MPU_InitStruct.SubRegionDisable = 0x00;
 556              		.loc 1 182 35
 557 0030 0023     		movs	r3, #0
 558 0032 7B72     		strb	r3, [r7, #9]
 183:./BSP/system.c ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 559              		.loc 1 183 30
 560 0034 0123     		movs	r3, #1
ARM GAS  /tmp/ccsHXxNI.s 			page 14


 561 0036 3B73     		strb	r3, [r7, #12]
 184:./BSP/system.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 562              		.loc 1 184 3
 563 0038 3B46     		mov	r3, r7
 564 003a 1846     		mov	r0, r3
 565 003c FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 185:./BSP/system.c **** 
 186:./BSP/system.c ****   /* Configure the MPU attributes as WT for QSPI */
 187:./BSP/system.c ****   MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 566              		.loc 1 187 25
 567 0040 0123     		movs	r3, #1
 568 0042 3B70     		strb	r3, [r7]
 188:./BSP/system.c ****   MPU_InitStruct.BaseAddress = 0x90000000;
 569              		.loc 1 188 30
 570 0044 4FF01043 		mov	r3, #-1879048192
 571 0048 7B60     		str	r3, [r7, #4]
 189:./BSP/system.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
 572              		.loc 1 189 23
 573 004a 1A23     		movs	r3, #26
 574 004c 3B72     		strb	r3, [r7, #8]
 190:./BSP/system.c ****   MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 575              		.loc 1 190 35
 576 004e 0323     		movs	r3, #3
 577 0050 FB72     		strb	r3, [r7, #11]
 191:./BSP/system.c ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 578              		.loc 1 191 31
 579 0052 0023     		movs	r3, #0
 580 0054 FB73     		strb	r3, [r7, #15]
 192:./BSP/system.c ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 581              		.loc 1 192 30
 582 0056 0123     		movs	r3, #1
 583 0058 BB73     		strb	r3, [r7, #14]
 193:./BSP/system.c ****   MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
 584              		.loc 1 193 30
 585 005a 0023     		movs	r3, #0
 586 005c 7B73     		strb	r3, [r7, #13]
 194:./BSP/system.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 587              		.loc 1 194 25
 588 005e 0123     		movs	r3, #1
 589 0060 7B70     		strb	r3, [r7, #1]
 195:./BSP/system.c ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 590              		.loc 1 195 31
 591 0062 0023     		movs	r3, #0
 592 0064 BB72     		strb	r3, [r7, #10]
 196:./BSP/system.c ****   MPU_InitStruct.SubRegionDisable = 0x00;
 593              		.loc 1 196 35
 594 0066 0023     		movs	r3, #0
 595 0068 7B72     		strb	r3, [r7, #9]
 197:./BSP/system.c ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 596              		.loc 1 197 30
 597 006a 0123     		movs	r3, #1
 598 006c 3B73     		strb	r3, [r7, #12]
 198:./BSP/system.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 599              		.loc 1 198 3
 600 006e 3B46     		mov	r3, r7
 601 0070 1846     		mov	r0, r3
 602 0072 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
ARM GAS  /tmp/ccsHXxNI.s 			page 15


 199:./BSP/system.c **** 
 200:./BSP/system.c ****   /* Setup SDRAM in Write-through (framebuffer) */
 201:./BSP/system.c ****   MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 603              		.loc 1 201 25
 604 0076 0123     		movs	r3, #1
 605 0078 3B70     		strb	r3, [r7]
 202:./BSP/system.c ****   MPU_InitStruct.BaseAddress = 0xD0000000;
 606              		.loc 1 202 30
 607 007a 4FF05043 		mov	r3, #-805306368
 608 007e 7B60     		str	r3, [r7, #4]
 203:./BSP/system.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
 609              		.loc 1 203 23
 610 0080 1823     		movs	r3, #24
 611 0082 3B72     		strb	r3, [r7, #8]
 204:./BSP/system.c ****   MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 612              		.loc 1 204 35
 613 0084 0323     		movs	r3, #3
 614 0086 FB72     		strb	r3, [r7, #11]
 205:./BSP/system.c ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 615              		.loc 1 205 31
 616 0088 0023     		movs	r3, #0
 617 008a FB73     		strb	r3, [r7, #15]
 206:./BSP/system.c ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 618              		.loc 1 206 30
 619 008c 0123     		movs	r3, #1
 620 008e BB73     		strb	r3, [r7, #14]
 207:./BSP/system.c ****   MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
 621              		.loc 1 207 30
 622 0090 0023     		movs	r3, #0
 623 0092 7B73     		strb	r3, [r7, #13]
 208:./BSP/system.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 624              		.loc 1 208 25
 625 0094 0223     		movs	r3, #2
 626 0096 7B70     		strb	r3, [r7, #1]
 209:./BSP/system.c ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 627              		.loc 1 209 31
 628 0098 0023     		movs	r3, #0
 629 009a BB72     		strb	r3, [r7, #10]
 210:./BSP/system.c ****   MPU_InitStruct.SubRegionDisable = 0x00;
 630              		.loc 1 210 35
 631 009c 0023     		movs	r3, #0
 632 009e 7B72     		strb	r3, [r7, #9]
 211:./BSP/system.c ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 633              		.loc 1 211 30
 634 00a0 0123     		movs	r3, #1
 635 00a2 3B73     		strb	r3, [r7, #12]
 212:./BSP/system.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 636              		.loc 1 212 3
 637 00a4 3B46     		mov	r3, r7
 638 00a6 1846     		mov	r0, r3
 639 00a8 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 213:./BSP/system.c **** 
 214:./BSP/system.c ****   /* Setup AXI SRAM, SRAM1 and SRAM2 in Write-through */
 215:./BSP/system.c ****   MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 640              		.loc 1 215 25
 641 00ac 0123     		movs	r3, #1
 642 00ae 3B70     		strb	r3, [r7]
ARM GAS  /tmp/ccsHXxNI.s 			page 16


 216:./BSP/system.c ****   MPU_InitStruct.BaseAddress = 0x24000000;
 643              		.loc 1 216 30
 644 00b0 4FF01053 		mov	r3, #603979776
 645 00b4 7B60     		str	r3, [r7, #4]
 217:./BSP/system.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
 646              		.loc 1 217 23
 647 00b6 1223     		movs	r3, #18
 648 00b8 3B72     		strb	r3, [r7, #8]
 218:./BSP/system.c ****   MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 649              		.loc 1 218 35
 650 00ba 0323     		movs	r3, #3
 651 00bc FB72     		strb	r3, [r7, #11]
 219:./BSP/system.c ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE/*MPU_ACCESS_BUFFERABLE*/;
 652              		.loc 1 219 31
 653 00be 0023     		movs	r3, #0
 654 00c0 FB73     		strb	r3, [r7, #15]
 220:./BSP/system.c ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 655              		.loc 1 220 30
 656 00c2 0123     		movs	r3, #1
 657 00c4 BB73     		strb	r3, [r7, #14]
 221:./BSP/system.c ****   MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
 658              		.loc 1 221 30
 659 00c6 0023     		movs	r3, #0
 660 00c8 7B73     		strb	r3, [r7, #13]
 222:./BSP/system.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER3;
 661              		.loc 1 222 25
 662 00ca 0323     		movs	r3, #3
 663 00cc 7B70     		strb	r3, [r7, #1]
 223:./BSP/system.c ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 664              		.loc 1 223 31
 665 00ce 0023     		movs	r3, #0
 666 00d0 BB72     		strb	r3, [r7, #10]
 224:./BSP/system.c ****   MPU_InitStruct.SubRegionDisable = 0x00;
 667              		.loc 1 224 35
 668 00d2 0023     		movs	r3, #0
 669 00d4 7B72     		strb	r3, [r7, #9]
 225:./BSP/system.c ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE/*MPU_INSTRUCTION_ACCESS_DISABLE*/;
 670              		.loc 1 225 30
 671 00d6 0023     		movs	r3, #0
 672 00d8 3B73     		strb	r3, [r7, #12]
 226:./BSP/system.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 673              		.loc 1 226 3
 674 00da 3B46     		mov	r3, r7
 675 00dc 1846     		mov	r0, r3
 676 00de FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 227:./BSP/system.c **** 
 228:./BSP/system.c ****   MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 677              		.loc 1 228 25
 678 00e2 0123     		movs	r3, #1
 679 00e4 3B70     		strb	r3, [r7]
 229:./BSP/system.c ****   MPU_InitStruct.BaseAddress = 0x10000000;
 680              		.loc 1 229 30
 681 00e6 4FF08053 		mov	r3, #268435456
 682 00ea 7B60     		str	r3, [r7, #4]
 230:./BSP/system.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_256KB;
 683              		.loc 1 230 23
 684 00ec 1123     		movs	r3, #17
ARM GAS  /tmp/ccsHXxNI.s 			page 17


 685 00ee 3B72     		strb	r3, [r7, #8]
 231:./BSP/system.c ****   MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 686              		.loc 1 231 35
 687 00f0 0323     		movs	r3, #3
 688 00f2 FB72     		strb	r3, [r7, #11]
 232:./BSP/system.c ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 689              		.loc 1 232 31
 690 00f4 0023     		movs	r3, #0
 691 00f6 FB73     		strb	r3, [r7, #15]
 233:./BSP/system.c ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 692              		.loc 1 233 30
 693 00f8 0123     		movs	r3, #1
 694 00fa BB73     		strb	r3, [r7, #14]
 234:./BSP/system.c ****   MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
 695              		.loc 1 234 30
 696 00fc 0023     		movs	r3, #0
 697 00fe 7B73     		strb	r3, [r7, #13]
 235:./BSP/system.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 698              		.loc 1 235 25
 699 0100 0423     		movs	r3, #4
 700 0102 7B70     		strb	r3, [r7, #1]
 236:./BSP/system.c ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 701              		.loc 1 236 31
 702 0104 0023     		movs	r3, #0
 703 0106 BB72     		strb	r3, [r7, #10]
 237:./BSP/system.c ****   MPU_InitStruct.SubRegionDisable = 0x00;
 704              		.loc 1 237 35
 705 0108 0023     		movs	r3, #0
 706 010a 7B72     		strb	r3, [r7, #9]
 238:./BSP/system.c ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 707              		.loc 1 238 30
 708 010c 0123     		movs	r3, #1
 709 010e 3B73     		strb	r3, [r7, #12]
 239:./BSP/system.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 710              		.loc 1 239 3
 711 0110 3B46     		mov	r3, r7
 712 0112 1846     		mov	r0, r3
 713 0114 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 240:./BSP/system.c **** 
 241:./BSP/system.c ****   /* Setup SRAM3 in Write-through */
 242:./BSP/system.c ****   MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 714              		.loc 1 242 25
 715 0118 0123     		movs	r3, #1
 716 011a 3B70     		strb	r3, [r7]
 243:./BSP/system.c ****   MPU_InitStruct.BaseAddress = 0x10040000;
 717              		.loc 1 243 30
 718 011c 0F4B     		ldr	r3, .L21
 719 011e 7B60     		str	r3, [r7, #4]
 244:./BSP/system.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_32KB;
 720              		.loc 1 244 23
 721 0120 0E23     		movs	r3, #14
 722 0122 3B72     		strb	r3, [r7, #8]
 245:./BSP/system.c ****   MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 723              		.loc 1 245 35
 724 0124 0323     		movs	r3, #3
 725 0126 FB72     		strb	r3, [r7, #11]
 246:./BSP/system.c ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
ARM GAS  /tmp/ccsHXxNI.s 			page 18


 726              		.loc 1 246 31
 727 0128 0023     		movs	r3, #0
 728 012a FB73     		strb	r3, [r7, #15]
 247:./BSP/system.c ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 729              		.loc 1 247 30
 730 012c 0123     		movs	r3, #1
 731 012e BB73     		strb	r3, [r7, #14]
 248:./BSP/system.c ****   MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
 732              		.loc 1 248 30
 733 0130 0023     		movs	r3, #0
 734 0132 7B73     		strb	r3, [r7, #13]
 249:./BSP/system.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER5;
 735              		.loc 1 249 25
 736 0134 0523     		movs	r3, #5
 737 0136 7B70     		strb	r3, [r7, #1]
 250:./BSP/system.c ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 738              		.loc 1 250 31
 739 0138 0023     		movs	r3, #0
 740 013a BB72     		strb	r3, [r7, #10]
 251:./BSP/system.c ****   MPU_InitStruct.SubRegionDisable = 0x00;
 741              		.loc 1 251 35
 742 013c 0023     		movs	r3, #0
 743 013e 7B72     		strb	r3, [r7, #9]
 252:./BSP/system.c ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 744              		.loc 1 252 30
 745 0140 0123     		movs	r3, #1
 746 0142 3B73     		strb	r3, [r7, #12]
 253:./BSP/system.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 747              		.loc 1 253 3
 748 0144 3B46     		mov	r3, r7
 749 0146 1846     		mov	r0, r3
 750 0148 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 254:./BSP/system.c **** 
 255:./BSP/system.c ****   HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 751              		.loc 1 255 3
 752 014c 0420     		movs	r0, #4
 753 014e FFF7FEFF 		bl	HAL_MPU_Enable
 256:./BSP/system.c **** }
 754              		.loc 1 256 1
 755 0152 00BF     		nop
 756 0154 1037     		adds	r7, r7, #16
 757              	.LCFI15:
 758              		.cfi_def_cfa_offset 8
 759 0156 BD46     		mov	sp, r7
 760              	.LCFI16:
 761              		.cfi_def_cfa_register 13
 762              		@ sp needed
 763 0158 80BD     		pop	{r7, pc}
 764              	.L22:
 765 015a 00BF     		.align	2
 766              	.L21:
 767 015c 00000410 		.word	268697600
 768              		.cfi_endproc
 769              	.LFE341:
 771              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 772              		.align	1
 773              		.syntax unified
ARM GAS  /tmp/ccsHXxNI.s 			page 19


 774              		.thumb
 775              		.thumb_func
 776              		.fpu fpv5-d16
 778              	PeriphCommonClock_Config:
 779              	.LFB342:
 257:./BSP/system.c **** 
 258:./BSP/system.c **** static void PeriphCommonClock_Config(void)
 259:./BSP/system.c **** {
 780              		.loc 1 259 1
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 192
 783              		@ frame_needed = 1, uses_anonymous_args = 0
 784 0000 80B5     		push	{r7, lr}
 785              	.LCFI17:
 786              		.cfi_def_cfa_offset 8
 787              		.cfi_offset 7, -8
 788              		.cfi_offset 14, -4
 789 0002 B0B0     		sub	sp, sp, #192
 790              	.LCFI18:
 791              		.cfi_def_cfa_offset 200
 792 0004 00AF     		add	r7, sp, #0
 793              	.LCFI19:
 794              		.cfi_def_cfa_register 7
 260:./BSP/system.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 795              		.loc 1 260 28
 796 0006 3B46     		mov	r3, r7
 797 0008 C022     		movs	r2, #192
 798 000a 0021     		movs	r1, #0
 799 000c 1846     		mov	r0, r3
 800 000e FFF7FEFF 		bl	memset
 261:./BSP/system.c **** 
 262:./BSP/system.c ****   /** Initializes the peripherals clock
 263:./BSP/system.c ****   */
 264:./BSP/system.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 801              		.loc 1 264 44
 802 0012 4FF40023 		mov	r3, #524288
 803 0016 3B60     		str	r3, [r7]
 265:./BSP/system.c ****   PeriphClkInitStruct.PLL2.PLL2M = 2;
 804              		.loc 1 265 34
 805 0018 0223     		movs	r3, #2
 806 001a 7B60     		str	r3, [r7, #4]
 266:./BSP/system.c ****   PeriphClkInitStruct.PLL2.PLL2N = 12;
 807              		.loc 1 266 34
 808 001c 0C23     		movs	r3, #12
 809 001e BB60     		str	r3, [r7, #8]
 267:./BSP/system.c ****   PeriphClkInitStruct.PLL2.PLL2P = 2;
 810              		.loc 1 267 34
 811 0020 0223     		movs	r3, #2
 812 0022 FB60     		str	r3, [r7, #12]
 268:./BSP/system.c ****   PeriphClkInitStruct.PLL2.PLL2Q = 2;
 813              		.loc 1 268 34
 814 0024 0223     		movs	r3, #2
 815 0026 3B61     		str	r3, [r7, #16]
 269:./BSP/system.c ****   PeriphClkInitStruct.PLL2.PLL2R = 2;
 816              		.loc 1 269 34
 817 0028 0223     		movs	r3, #2
 818 002a 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccsHXxNI.s 			page 20


 270:./BSP/system.c ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 819              		.loc 1 270 36
 820 002c C023     		movs	r3, #192
 821 002e BB61     		str	r3, [r7, #24]
 271:./BSP/system.c ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOMEDIUM;
 822              		.loc 1 271 39
 823 0030 2023     		movs	r3, #32
 824 0032 FB61     		str	r3, [r7, #28]
 272:./BSP/system.c ****   PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 825              		.loc 1 272 38
 826 0034 0023     		movs	r3, #0
 827 0036 3B62     		str	r3, [r7, #32]
 273:./BSP/system.c ****   PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 828              		.loc 1 273 41
 829 0038 0023     		movs	r3, #0
 830 003a C7F8A430 		str	r3, [r7, #164]
 274:./BSP/system.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 831              		.loc 1 274 7
 832 003e 3B46     		mov	r3, r7
 833 0040 1846     		mov	r0, r3
 834 0042 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 835 0046 0346     		mov	r3, r0
 836              		.loc 1 274 6
 837 0048 002B     		cmp	r3, #0
 838 004a 04D0     		beq	.L25
 275:./BSP/system.c ****   {
 276:./BSP/system.c ****     Error_Handler(__FILE__, __LINE__);
 839              		.loc 1 276 5
 840 004c 4FF48A71 		mov	r1, #276
 841 0050 0348     		ldr	r0, .L26
 842 0052 FFF7FEFF 		bl	Error_Handler
 843              	.L25:
 277:./BSP/system.c ****   }
 278:./BSP/system.c **** }
 844              		.loc 1 278 1
 845 0056 00BF     		nop
 846 0058 C037     		adds	r7, r7, #192
 847              	.LCFI20:
 848              		.cfi_def_cfa_offset 8
 849 005a BD46     		mov	sp, r7
 850              	.LCFI21:
 851              		.cfi_def_cfa_register 13
 852              		@ sp needed
 853 005c 80BD     		pop	{r7, pc}
 854              	.L27:
 855 005e 00BF     		.align	2
 856              	.L26:
 857 0060 00000000 		.word	.LC0
 858              		.cfi_endproc
 859              	.LFE342:
 861              		.section	.text.CPU_CACHE_Enable,"ax",%progbits
 862              		.align	1
 863              		.syntax unified
 864              		.thumb
 865              		.thumb_func
 866              		.fpu fpv5-d16
 868              	CPU_CACHE_Enable:
ARM GAS  /tmp/ccsHXxNI.s 			page 21


 869              	.LFB343:
 279:./BSP/system.c **** 
 280:./BSP/system.c **** static void CPU_CACHE_Enable(void)
 281:./BSP/system.c **** {
 870              		.loc 1 281 1
 871              		.cfi_startproc
 872              		@ args = 0, pretend = 0, frame = 16
 873              		@ frame_needed = 1, uses_anonymous_args = 0
 874              		@ link register save eliminated.
 875 0000 80B4     		push	{r7}
 876              	.LCFI22:
 877              		.cfi_def_cfa_offset 4
 878              		.cfi_offset 7, -4
 879 0002 85B0     		sub	sp, sp, #20
 880              	.LCFI23:
 881              		.cfi_def_cfa_offset 24
 882 0004 00AF     		add	r7, sp, #0
 883              	.LCFI24:
 884              		.cfi_def_cfa_register 7
 885              	.LBB50:
 886              	.LBB51:
 887              		.file 2 "./Libraries/CMSIS/Core/Include/core_cm7.h"
   1:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**************************************************************************//**
   2:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * @file     core_cm7.h
   3:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * @version  V5.1.1
   5:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * @date     28. March 2019
   6:./Libraries/CMSIS/Core/Include/core_cm7.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*
   8:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:./Libraries/CMSIS/Core/Include/core_cm7.h ****  *
  10:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/Core/Include/core_cm7.h ****  *
  12:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/Core/Include/core_cm7.h ****  *
  16:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/Core/Include/core_cm7.h ****  *
  18:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/Core/Include/core_cm7.h ****  * limitations under the License.
  23:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
  24:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  25:./Libraries/CMSIS/Core/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:./Libraries/CMSIS/Core/Include/core_cm7.h **** #elif defined (__clang__)
  28:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
  30:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  31:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  34:./Libraries/CMSIS/Core/Include/core_cm7.h **** #include <stdint.h>
  35:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /tmp/ccsHXxNI.s 			page 22


  36:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifdef __cplusplus
  37:./Libraries/CMSIS/Core/Include/core_cm7.h ****  extern "C" {
  38:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
  39:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  40:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
  41:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:./Libraries/CMSIS/Core/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  44:./Libraries/CMSIS/Core/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:./Libraries/CMSIS/Core/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  47:./Libraries/CMSIS/Core/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:./Libraries/CMSIS/Core/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  50:./Libraries/CMSIS/Core/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:./Libraries/CMSIS/Core/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
  53:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  54:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  55:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*******************************************************************************
  56:./Libraries/CMSIS/Core/Include/core_cm7.h ****  *                 CMSIS definitions
  57:./Libraries/CMSIS/Core/Include/core_cm7.h ****  ******************************************************************************/
  58:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
  59:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
  61:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
  62:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  63:./Libraries/CMSIS/Core/Include/core_cm7.h **** #include "cmsis_version.h"
  64:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  65:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [31:1
  67:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( __CM_CMSIS_VERSION_SUB)                  /*!< \deprecated [15:0
  68:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:./Libraries/CMSIS/Core/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< \deprecated CMSIS
  70:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  71:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  72:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  73:./Libraries/CMSIS/Core/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:./Libraries/CMSIS/Core/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:./Libraries/CMSIS/Core/Include/core_cm7.h **** */
  76:./Libraries/CMSIS/Core/Include/core_cm7.h **** #if defined ( __CC_ARM )
  77:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  78:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
  80:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #else
  81:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
  83:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #endif
  84:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #else
  85:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
  86:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
  87:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
  88:./Libraries/CMSIS/Core/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined __ARM_FP
  90:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
  92:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #else
ARM GAS  /tmp/ccsHXxNI.s 			page 23


  93:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
  95:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #endif
  96:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #else
  97:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
  98:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
  99:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 100:./Libraries/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 101:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 104:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #else
 105:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 107:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #endif
 108:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #else
 109:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 110:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 111:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 112:./Libraries/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 113:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined __ARMVFP__
 114:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 116:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #else
 117:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 119:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #endif
 120:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #else
 121:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 122:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 123:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 124:./Libraries/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 125:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 126:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #else
 129:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #endif
 132:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #else
 133:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 134:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 135:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 136:./Libraries/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 137:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined __FPU_VFP__
 138:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #else
 141:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #endif
 144:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #else
 145:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 146:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 147:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 148:./Libraries/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 149:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
ARM GAS  /tmp/ccsHXxNI.s 			page 24


 150:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #else
 153:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:./Libraries/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #endif
 156:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #else
 157:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 159:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 160:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
 161:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 162:./Libraries/CMSIS/Core/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 164:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 165:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifdef __cplusplus
 166:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
 167:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
 168:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 169:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 170:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 171:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 172:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 173:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 174:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 175:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 176:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifdef __cplusplus
 177:./Libraries/CMSIS/Core/Include/core_cm7.h ****  extern "C" {
 178:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
 179:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 180:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* check device defines and use defaults */
 181:./Libraries/CMSIS/Core/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef __CM7_REV
 183:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 184:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 185:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 186:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 187:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 188:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 189:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 191:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 192:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 193:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 194:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 196:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 197:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 198:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 199:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 200:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 201:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 202:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 203:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 204:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 206:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /tmp/ccsHXxNI.s 			page 25


 207:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 208:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 209:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 211:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 212:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 213:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 214:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 216:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 217:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 218:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 219:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
 221:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
 222:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 223:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 224:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 225:./Libraries/CMSIS/Core/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 227:./Libraries/CMSIS/Core/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:./Libraries/CMSIS/Core/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:./Libraries/CMSIS/Core/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:./Libraries/CMSIS/Core/Include/core_cm7.h **** */
 231:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifdef __cplusplus
 232:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 233:./Libraries/CMSIS/Core/Include/core_cm7.h **** #else
 234:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 235:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
 236:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 237:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 238:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 239:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 241:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 242:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 243:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 244:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 245:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 246:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 247:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 248:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*******************************************************************************
 249:./Libraries/CMSIS/Core/Include/core_cm7.h ****  *                 Register Abstraction
 250:./Libraries/CMSIS/Core/Include/core_cm7.h ****   Core Register contain:
 251:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core Register
 252:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core NVIC Register
 253:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core SCB Register
 254:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core SysTick Register
 255:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core Debug Register
 256:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core MPU Register
 257:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core FPU Register
 258:./Libraries/CMSIS/Core/Include/core_cm7.h ****  ******************************************************************************/
 259:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 260:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 261:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 262:./Libraries/CMSIS/Core/Include/core_cm7.h **** */
 263:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /tmp/ccsHXxNI.s 			page 26


 264:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 265:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 266:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 267:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief      Core Register type definitions.
 268:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
 269:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 270:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 271:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 272:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 273:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 274:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef union
 275:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
 276:./Libraries/CMSIS/Core/Include/core_cm7.h ****   struct
 277:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
 278:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 279:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 280:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 281:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 282:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 283:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 284:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 285:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 286:./Libraries/CMSIS/Core/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 287:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 288:./Libraries/CMSIS/Core/Include/core_cm7.h **** } APSR_Type;
 289:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 290:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* APSR Register Definitions */
 291:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 292:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 293:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 294:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 295:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 296:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 297:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 298:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 299:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 300:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 301:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 302:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 303:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 304:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 305:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 306:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 307:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 308:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 309:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 310:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 311:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 312:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 313:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef union
 314:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
 315:./Libraries/CMSIS/Core/Include/core_cm7.h ****   struct
 316:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
 317:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 318:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 319:./Libraries/CMSIS/Core/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 320:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
ARM GAS  /tmp/ccsHXxNI.s 			page 27


 321:./Libraries/CMSIS/Core/Include/core_cm7.h **** } IPSR_Type;
 322:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 323:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* IPSR Register Definitions */
 324:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 325:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 326:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 327:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 328:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 329:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 330:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 331:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef union
 332:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
 333:./Libraries/CMSIS/Core/Include/core_cm7.h ****   struct
 334:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
 335:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 336:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 337:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 338:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 339:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 340:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 341:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 342:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 343:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 344:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 345:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 346:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 347:./Libraries/CMSIS/Core/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 348:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 349:./Libraries/CMSIS/Core/Include/core_cm7.h **** } xPSR_Type;
 350:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 351:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* xPSR Register Definitions */
 352:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 353:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 354:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 355:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 356:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 357:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 358:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 359:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 360:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 361:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 362:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 363:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 364:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 365:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 366:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 367:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 368:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 369:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 370:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 371:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 372:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 373:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 374:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 375:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 376:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 377:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
ARM GAS  /tmp/ccsHXxNI.s 			page 28


 378:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 379:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 380:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 381:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 382:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 383:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 384:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 385:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 386:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef union
 387:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
 388:./Libraries/CMSIS/Core/Include/core_cm7.h ****   struct
 389:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
 390:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 391:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 392:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 393:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 394:./Libraries/CMSIS/Core/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 395:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 396:./Libraries/CMSIS/Core/Include/core_cm7.h **** } CONTROL_Type;
 397:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 398:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* CONTROL Register Definitions */
 399:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 400:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 401:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 402:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 403:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 404:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 405:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 406:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 407:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 408:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 409:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 410:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 411:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 412:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 413:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 414:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 415:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
 416:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 417:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 418:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 419:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 420:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 421:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
 422:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
 423:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 424:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 425:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 426:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED1[24U];
 427:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 428:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 429:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 430:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 431:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 432:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 433:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 434:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
ARM GAS  /tmp/ccsHXxNI.s 			page 29


 435:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 436:./Libraries/CMSIS/Core/Include/core_cm7.h **** }  NVIC_Type;
 437:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 438:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 439:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 440:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 441:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 442:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 443:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 444:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 445:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 446:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 447:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 448:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 449:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
 450:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 451:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 452:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 453:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 454:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 455:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
 456:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
 457:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 458:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 459:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 460:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 461:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 462:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 463:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 464:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 465:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 466:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 467:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 468:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 469:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 470:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 471:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 472:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 473:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 474:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 475:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 476:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 477:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 478:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 479:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 480:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 481:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 482:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 483:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 484:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 485:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 486:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 487:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2
 488:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 489:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 490:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 491:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
ARM GAS  /tmp/ccsHXxNI.s 			page 30


 492:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 493:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 494:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 495:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 496:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 497:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 498:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 499:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 500:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 501:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 502:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 503:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 504:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 505:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 506:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 507:./Libraries/CMSIS/Core/Include/core_cm7.h **** } SCB_Type;
 508:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 509:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 510:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 511:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 512:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 513:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 514:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 515:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 516:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 517:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 518:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 519:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 520:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 521:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 522:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 523:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 524:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 525:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 526:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 527:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 528:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 529:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 530:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 531:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 532:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 533:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 534:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 535:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 536:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 537:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 538:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 539:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 540:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 541:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 542:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 543:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 544:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 545:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 546:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 547:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 548:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
ARM GAS  /tmp/ccsHXxNI.s 			page 31


 549:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 550:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 551:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 552:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 553:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 554:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 555:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 556:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 557:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 558:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 559:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 560:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 561:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 562:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 563:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 564:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 565:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 566:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 567:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 568:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 569:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 570:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 571:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 572:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 573:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 574:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 575:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 576:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 577:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 578:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 579:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 580:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 581:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 582:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 583:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 584:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 585:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 586:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 587:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 588:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 589:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 590:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 591:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 592:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 593:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 594:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 595:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 596:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 597:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 598:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 599:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 600:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 601:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 602:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 603:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 604:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 605:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
ARM GAS  /tmp/ccsHXxNI.s 			page 32


 606:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 607:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 608:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 609:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 610:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 611:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 612:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 613:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 614:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 615:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 616:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 617:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 618:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 619:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 620:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 621:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 622:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 623:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 624:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 625:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 626:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 627:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 628:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 629:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 630:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 631:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 632:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 633:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 634:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 635:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 636:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 637:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 638:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 639:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 640:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 641:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 642:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 643:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 644:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 645:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 646:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 647:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 648:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 649:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 650:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 651:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 652:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 653:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 654:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 655:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 656:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 657:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 658:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 659:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 660:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 661:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 662:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /tmp/ccsHXxNI.s 			page 33


 663:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 664:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 665:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 666:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 667:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 668:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 669:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 670:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 671:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 672:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 673:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 674:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 675:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 676:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 677:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 678:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 679:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 680:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 681:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 682:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 683:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 684:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 685:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 686:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 687:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 688:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 689:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 690:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 691:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 692:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 693:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 694:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 695:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 696:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 697:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 698:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 699:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 700:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 701:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 702:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 703:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 704:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 705:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 706:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 707:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 708:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 709:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 710:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 711:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 712:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 713:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 714:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 715:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 716:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 717:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 718:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 719:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
ARM GAS  /tmp/ccsHXxNI.s 			page 34


 720:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 721:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 722:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 723:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 724:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 725:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 726:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 727:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 728:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 729:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 730:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 731:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 732:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 733:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 734:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 735:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 736:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 737:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 738:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 739:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 740:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 741:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 742:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 743:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 744:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 745:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 746:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 747:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 748:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 749:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 750:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 751:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 752:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 753:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 754:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 755:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 756:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 757:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 758:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 759:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 760:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 761:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 762:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 763:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 764:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 765:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 766:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 767:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 768:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 769:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 770:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 771:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 772:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 773:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 774:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 775:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 776:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
ARM GAS  /tmp/ccsHXxNI.s 			page 35


 777:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 778:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 779:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 780:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 781:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 782:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 783:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 784:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 785:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 786:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 787:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 788:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 789:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 790:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 791:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 792:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 793:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 794:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 795:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 796:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 797:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 798:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 799:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 800:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 801:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 802:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 803:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 804:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 805:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 806:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 807:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 808:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 809:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 810:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 811:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 812:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 813:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 814:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 815:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 816:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 817:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 818:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 819:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 820:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 821:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 822:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 823:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 824:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 825:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 826:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 827:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 828:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 829:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 830:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 831:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 832:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 833:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
ARM GAS  /tmp/ccsHXxNI.s 			page 36


 834:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 835:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 836:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 837:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 838:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 839:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 840:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 841:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 842:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 843:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 844:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 845:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 846:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 847:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 848:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 849:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 850:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 851:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 852:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 853:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 854:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 855:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 856:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 857:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 858:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 859:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 860:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 861:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 862:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 863:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 864:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 865:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 866:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 867:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 868:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 869:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 870:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 871:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 872:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 873:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 874:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 875:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 876:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 877:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 878:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 879:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 880:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 881:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 882:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 883:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 884:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 885:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 886:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 887:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 888:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 889:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 890:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
ARM GAS  /tmp/ccsHXxNI.s 			page 37


 891:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 892:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 893:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 894:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 895:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 896:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 897:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 898:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 899:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 900:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 901:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 902:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 903:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 904:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 905:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 906:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 907:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 908:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 909:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 910:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 911:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 912:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 913:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 914:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 915:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
 916:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 917:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 918:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 919:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 920:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 921:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
 922:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
 923:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 924:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 925:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 926:./Libraries/CMSIS/Core/Include/core_cm7.h **** } SCnSCB_Type;
 927:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 928:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 929:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 930:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 931:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 932:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 933:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDYNADD_Pos         26U                                         /*!< ACTLR: 
 934:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDYNADD_Msk         (1UL << SCnSCB_ACTLR_DISDYNADD_Pos)         /*!< ACTLR: 
 935:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 936:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISISSCH1_Pos         21U                                         /*!< ACTLR: 
 937:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISISSCH1_Msk         (0x1FUL << SCnSCB_ACTLR_DISISSCH1_Pos)      /*!< ACTLR: 
 938:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 939:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDI_Pos             16U                                         /*!< ACTLR: 
 940:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDI_Msk             (0x1FUL << SCnSCB_ACTLR_DISDI_Pos)          /*!< ACTLR: 
 941:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 942:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISCRITAXIRUR_Pos     15U                                         /*!< ACTLR: 
 943:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISCRITAXIRUR_Msk     (1UL << SCnSCB_ACTLR_DISCRITAXIRUR_Pos)     /*!< ACTLR: 
 944:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 945:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACALLOC_Pos      14U                                         /*!< ACTLR: 
 946:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACALLOC_Msk      (1UL << SCnSCB_ACTLR_DISBTACALLOC_Pos)      /*!< ACTLR: 
 947:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /tmp/ccsHXxNI.s 			page 38


 948:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACREAD_Pos       13U                                         /*!< ACTLR: 
 949:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACREAD_Msk       (1UL << SCnSCB_ACTLR_DISBTACREAD_Pos)       /*!< ACTLR: 
 950:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 951:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 952:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 953:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 954:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 955:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 956:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 957:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 958:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 959:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 960:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 961:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 962:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 963:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 964:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 965:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 966:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 967:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 968:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 969:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 970:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 971:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 972:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 973:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
 974:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 975:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 976:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
 977:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 978:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
 979:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
 980:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
 981:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 982:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 983:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 984:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 985:./Libraries/CMSIS/Core/Include/core_cm7.h **** } SysTick_Type;
 986:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 987:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 988:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 989:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 990:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 991:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 992:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 993:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 994:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 995:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 996:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 997:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 998:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 999:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1000:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
1001:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
1002:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
1003:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1004:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SysTick Current Register Definitions */
ARM GAS  /tmp/ccsHXxNI.s 			page 39


1005:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
1006:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
1007:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1008:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
1009:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
1010:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
1011:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1012:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
1013:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
1014:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1015:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
1016:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
1017:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1018:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
1019:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1020:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1021:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1022:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1023:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1024:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1025:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1026:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1027:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1028:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1029:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1030:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1031:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
1032:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1033:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  union
1034:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1035:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1036:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1037:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1038:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1039:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1040:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1041:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1042:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1043:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1044:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1045:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[32U];
1046:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1047:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1048:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1049:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1050:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1051:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1052:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1053:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1054:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1055:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1056:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1057:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1058:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1059:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1060:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1061:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
ARM GAS  /tmp/ccsHXxNI.s 			page 40


1062:./Libraries/CMSIS/Core/Include/core_cm7.h **** } ITM_Type;
1063:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1064:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1065:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1066:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
1067:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1068:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1069:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1070:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1071:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1072:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1073:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1074:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1075:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1076:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1077:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1078:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1079:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1080:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1081:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1082:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1083:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1084:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1085:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1086:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1087:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1088:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1089:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1090:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1091:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1092:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1093:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1094:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1095:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1096:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1097:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1098:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1099:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1100:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1101:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1102:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1103:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1104:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1105:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1106:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1107:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1108:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1109:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1110:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1111:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1112:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1113:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1114:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1115:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1116:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1117:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1118:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
ARM GAS  /tmp/ccsHXxNI.s 			page 41


1119:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
1120:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1121:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1122:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1123:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1124:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1125:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1126:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1127:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1128:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1129:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1130:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1131:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1132:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1133:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1134:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1135:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1136:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1137:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1138:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1139:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1140:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1141:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1142:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1143:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1144:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1145:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1146:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1147:./Libraries/CMSIS/Core/Include/core_cm7.h **** } DWT_Type;
1148:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1149:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* DWT Control Register Definitions */
1150:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1151:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1152:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1153:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1154:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1155:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1156:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1157:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1158:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1159:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1160:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1161:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1162:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1163:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1164:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1165:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1166:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1167:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1168:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1169:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1170:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1171:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1172:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1173:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1174:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1175:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
ARM GAS  /tmp/ccsHXxNI.s 			page 42


1176:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1177:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1178:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1179:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1180:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1181:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1182:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1183:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1184:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1185:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1186:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1187:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1188:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1189:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1190:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1191:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1192:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1193:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1194:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1195:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1196:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1197:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1198:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1199:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1200:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1201:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1202:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1203:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1204:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1205:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1206:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1207:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1208:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1209:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1210:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1211:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1212:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1213:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1214:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1215:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1216:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1217:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1218:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1219:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1220:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1221:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1222:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1223:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1224:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1225:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1226:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1227:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1228:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1229:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1230:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1231:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1232:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
ARM GAS  /tmp/ccsHXxNI.s 			page 43


1233:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1234:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1235:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1236:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1237:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1238:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1239:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1240:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1241:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1242:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1243:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1244:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1245:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1246:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1247:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1248:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1249:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1250:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1251:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1252:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1253:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1254:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1255:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1256:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1257:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1258:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1259:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1260:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1261:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1262:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1263:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1264:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1265:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1266:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1267:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1268:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1269:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
1270:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1271:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1272:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1273:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1274:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1275:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1276:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1277:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1278:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1279:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1280:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1281:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1282:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1283:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1284:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1285:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1286:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1287:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1288:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1289:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
ARM GAS  /tmp/ccsHXxNI.s 			page 44


1290:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1291:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1292:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1293:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1294:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1295:./Libraries/CMSIS/Core/Include/core_cm7.h **** } TPI_Type;
1296:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1297:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1298:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1299:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1300:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1301:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1302:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1303:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1304:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1305:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1306:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1307:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1308:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1309:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1310:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1311:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1312:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1313:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1314:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1315:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1316:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1317:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1318:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1319:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1320:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1321:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1322:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1323:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1324:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1325:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1326:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1327:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1328:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1329:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1330:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1331:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1332:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1333:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1334:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1335:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1336:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1337:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1338:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1339:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1340:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1341:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1342:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1343:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1344:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1345:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1346:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
ARM GAS  /tmp/ccsHXxNI.s 			page 45


1347:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1348:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1349:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1350:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1351:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1352:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1353:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1354:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1355:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1356:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1357:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1358:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1359:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1360:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1361:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1362:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1363:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1364:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1365:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1366:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1367:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1368:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1369:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1370:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1371:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1372:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1373:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1374:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1375:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1376:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1377:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1378:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1379:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1380:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1381:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1382:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1383:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1384:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1385:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1386:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1387:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1388:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1389:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1390:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1391:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1392:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1393:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1394:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1395:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1396:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1397:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1398:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1399:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1400:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1401:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1402:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1403:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /tmp/ccsHXxNI.s 			page 46


1404:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1405:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1406:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1407:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1408:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1409:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1410:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1411:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1412:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1413:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1414:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1415:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1416:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1417:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1418:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1419:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1420:./Libraries/CMSIS/Core/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1421:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1422:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1423:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1424:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1425:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1426:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1427:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1428:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1429:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1430:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1431:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
1432:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1433:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1434:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1435:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1436:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1437:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1438:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1439:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1440:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1441:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1442:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1443:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1444:./Libraries/CMSIS/Core/Include/core_cm7.h **** } MPU_Type;
1445:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1446:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_RALIASES                  4U
1447:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1448:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* MPU Type Register Definitions */
1449:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1450:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1451:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1452:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1453:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1454:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1455:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1456:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1457:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1458:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* MPU Control Register Definitions */
1459:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1460:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
ARM GAS  /tmp/ccsHXxNI.s 			page 47


1461:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1462:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1463:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1464:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1465:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1466:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1467:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1468:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1469:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1470:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1471:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1472:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1473:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1474:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1475:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1476:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1477:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1478:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1479:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1480:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1481:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1482:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1483:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1484:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1485:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1486:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1487:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1488:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1489:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1490:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1491:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1492:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1493:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1494:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1495:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1496:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1497:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1498:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1499:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1500:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1501:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1502:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1503:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1504:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1505:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1506:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1507:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1508:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1509:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1510:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1511:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1512:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1513:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1514:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1515:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1516:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1517:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
ARM GAS  /tmp/ccsHXxNI.s 			page 48


1518:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1519:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1520:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1521:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1522:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1523:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1524:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1525:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1526:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1527:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
1528:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1529:./Libraries/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1530:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1531:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1532:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1533:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1534:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1535:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1536:./Libraries/CMSIS/Core/Include/core_cm7.h **** } FPU_Type;
1537:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1538:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1539:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1540:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1541:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1542:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1543:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1544:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1545:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1546:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1547:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1548:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1549:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1550:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1551:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1552:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1553:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1554:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1555:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1556:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1557:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1558:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1559:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1560:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1561:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1562:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1563:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1564:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1565:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1566:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1567:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1568:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1569:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1570:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1571:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1572:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1573:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1574:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
ARM GAS  /tmp/ccsHXxNI.s 			page 49


1575:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1576:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1577:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1578:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1579:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1580:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1581:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1582:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1583:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1584:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1585:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1586:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1587:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1588:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1589:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1590:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1591:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1592:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1593:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1594:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1595:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1596:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1597:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1598:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1599:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1600:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1601:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1602:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1603:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1604:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1605:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1606:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1607:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1608:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1609:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1610:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1611:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1612:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1613:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1614:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1615:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1616:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1617:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1618:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1619:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1620:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1621:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1622:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1623:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1624:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1625:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1626:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1627:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1628:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1629:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1630:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1631:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
ARM GAS  /tmp/ccsHXxNI.s 			page 50


1632:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1633:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1634:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1635:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1636:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1637:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1638:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1639:./Libraries/CMSIS/Core/Include/core_cm7.h **** typedef struct
1640:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1641:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1642:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1643:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1644:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1645:./Libraries/CMSIS/Core/Include/core_cm7.h **** } CoreDebug_Type;
1646:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1647:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1648:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1649:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1650:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1651:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1652:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1653:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1654:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1655:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1656:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1657:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1658:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1659:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1660:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1661:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1662:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1663:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1664:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1665:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1666:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1667:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1668:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1669:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1670:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1671:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1672:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1673:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1674:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1675:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1676:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1677:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1678:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1679:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1680:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1681:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1682:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1683:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1684:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1685:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1686:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1687:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1688:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
ARM GAS  /tmp/ccsHXxNI.s 			page 51


1689:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1690:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1691:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1692:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1693:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1694:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1695:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1696:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1697:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1698:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1699:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1700:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1701:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1702:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1703:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1704:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1705:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1706:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1707:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1708:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1709:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1710:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1711:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1712:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1713:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1714:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1715:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1716:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1717:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1718:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1719:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1720:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1721:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1722:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1723:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1724:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1725:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1726:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1727:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1728:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1729:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1730:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1731:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1732:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1733:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1734:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1735:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1736:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1737:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1738:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1739:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1740:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1741:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1742:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1743:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1744:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1745:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return           Masked and shifted value.
ARM GAS  /tmp/ccsHXxNI.s 			page 52


1746:./Libraries/CMSIS/Core/Include/core_cm7.h **** */
1747:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1748:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1749:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1750:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1751:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1752:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1753:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1754:./Libraries/CMSIS/Core/Include/core_cm7.h **** */
1755:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1756:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1757:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1758:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1759:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1760:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1761:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1762:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1763:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1764:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1765:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1766:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1767:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1768:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1769:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1770:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1771:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1772:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1773:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1774:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1775:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1776:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1777:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1778:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1779:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1780:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1781:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1782:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1783:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1784:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1785:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1786:./Libraries/CMSIS/Core/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1787:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1788:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1789:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
1790:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1791:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1792:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1793:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1794:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} */
1795:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1796:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1797:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1798:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*******************************************************************************
1799:./Libraries/CMSIS/Core/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1800:./Libraries/CMSIS/Core/Include/core_cm7.h ****   Core Function Interface contains:
1801:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core NVIC Functions
1802:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core SysTick Functions
ARM GAS  /tmp/ccsHXxNI.s 			page 53


1803:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core Debug Functions
1804:./Libraries/CMSIS/Core/Include/core_cm7.h ****   - Core Register Access Functions
1805:./Libraries/CMSIS/Core/Include/core_cm7.h ****  ******************************************************************************/
1806:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1807:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1808:./Libraries/CMSIS/Core/Include/core_cm7.h **** */
1809:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1810:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1811:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1812:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1813:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1814:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1815:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1816:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1817:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
1818:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1819:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1820:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1821:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1822:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1823:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
1824:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1825:./Libraries/CMSIS/Core/Include/core_cm7.h **** #else
1826:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1827:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1828:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1829:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1830:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1831:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1832:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1833:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1834:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1835:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1836:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1837:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1838:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1839:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1840:./Libraries/CMSIS/Core/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1841:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1842:./Libraries/CMSIS/Core/Include/core_cm7.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1843:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
1844:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1845:./Libraries/CMSIS/Core/Include/core_cm7.h **** #else
1846:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1847:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1848:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1849:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1850:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1851:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1852:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1853:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1854:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1855:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1856:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1857:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1858:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1859:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
ARM GAS  /tmp/ccsHXxNI.s 			page 54


1860:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1861:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1862:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1863:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Set Priority Grouping
1864:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1865:./Libraries/CMSIS/Core/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1866:./Libraries/CMSIS/Core/Include/core_cm7.h ****            Only values from 0..7 are used.
1867:./Libraries/CMSIS/Core/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1868:./Libraries/CMSIS/Core/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1869:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1870:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1871:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1872:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1873:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t reg_value;
1874:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1875:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1876:./Libraries/CMSIS/Core/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1877:./Libraries/CMSIS/Core/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1878:./Libraries/CMSIS/Core/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1879:./Libraries/CMSIS/Core/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1880:./Libraries/CMSIS/Core/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1881:./Libraries/CMSIS/Core/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1882:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
1883:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1884:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1885:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1886:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Priority Grouping
1887:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1888:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1889:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1890:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1891:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1892:./Libraries/CMSIS/Core/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1893:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
1894:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1895:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1896:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1897:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Enable Interrupt
1898:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1899:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1900:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1901:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1902:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1903:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1904:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1905:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1906:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __COMPILER_BARRIER();
1907:./Libraries/CMSIS/Core/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1908:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __COMPILER_BARRIER();
1909:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
1910:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
1911:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1912:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1913:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1914:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1915:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1916:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
ARM GAS  /tmp/ccsHXxNI.s 			page 55


1917:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1918:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1919:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1920:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1921:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1922:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1923:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1924:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1925:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1926:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
1927:./Libraries/CMSIS/Core/Include/core_cm7.h ****   else
1928:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1929:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return(0U);
1930:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
1931:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
1932:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1933:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1934:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1935:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Disable Interrupt
1936:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1937:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1938:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1939:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1940:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1941:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1942:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1943:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1944:./Libraries/CMSIS/Core/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1945:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
1946:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __ISB();
1947:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
1948:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
1949:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1950:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1951:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1952:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1953:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1954:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1955:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1956:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1957:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1958:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1959:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1960:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1961:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1962:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1963:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1964:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
1965:./Libraries/CMSIS/Core/Include/core_cm7.h ****   else
1966:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1967:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return(0U);
1968:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
1969:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
1970:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1971:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1972:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1973:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Set Pending Interrupt
ARM GAS  /tmp/ccsHXxNI.s 			page 56


1974:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1975:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1976:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1977:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1978:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1979:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1980:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1981:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1982:./Libraries/CMSIS/Core/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1983:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
1984:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
1985:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1986:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
1987:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
1988:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1989:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1990:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1991:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1992:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
1993:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1994:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
1995:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1996:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
1997:./Libraries/CMSIS/Core/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1998:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
1999:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2000:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2001:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2002:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2003:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Active Interrupt
2004:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
2005:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
2006:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
2007:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return             1  Interrupt status is active.
2008:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
2009:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2010:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
2011:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2012:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2013:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2014:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2015:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2016:./Libraries/CMSIS/Core/Include/core_cm7.h ****   else
2017:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2018:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return(0U);
2019:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2020:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2021:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2022:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2023:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2024:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Set Interrupt Priority
2025:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
2026:./Libraries/CMSIS/Core/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2027:./Libraries/CMSIS/Core/Include/core_cm7.h ****            or negative to specify a processor exception.
2028:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
2029:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
2030:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
ARM GAS  /tmp/ccsHXxNI.s 			page 57


2031:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2032:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
2033:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2034:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2035:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2036:./Libraries/CMSIS/Core/Include/core_cm7.h ****     NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2037:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2038:./Libraries/CMSIS/Core/Include/core_cm7.h ****   else
2039:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2040:./Libraries/CMSIS/Core/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2041:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2042:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2043:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2044:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2045:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2046:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2047:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2048:./Libraries/CMSIS/Core/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2049:./Libraries/CMSIS/Core/Include/core_cm7.h ****            or negative to specify a processor exception.
2050:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2051:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return             Interrupt Priority.
2052:./Libraries/CMSIS/Core/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2053:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2054:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2055:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2056:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2057:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2058:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2059:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)));
2060:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2061:./Libraries/CMSIS/Core/Include/core_cm7.h ****   else
2062:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2063:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
2064:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2065:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2066:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2067:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2068:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2069:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Encode Priority
2070:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2071:./Libraries/CMSIS/Core/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2072:./Libraries/CMSIS/Core/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2073:./Libraries/CMSIS/Core/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2074:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2075:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2076:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2077:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2078:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2079:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2080:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2081:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2082:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2083:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2084:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2085:./Libraries/CMSIS/Core/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2086:./Libraries/CMSIS/Core/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2087:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  /tmp/ccsHXxNI.s 			page 58


2088:./Libraries/CMSIS/Core/Include/core_cm7.h ****   return (
2089:./Libraries/CMSIS/Core/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
2090:./Libraries/CMSIS/Core/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
2091:./Libraries/CMSIS/Core/Include/core_cm7.h ****          );
2092:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2093:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2094:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2095:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2096:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Decode Priority
2097:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2098:./Libraries/CMSIS/Core/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2099:./Libraries/CMSIS/Core/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2100:./Libraries/CMSIS/Core/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2101:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2102:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2103:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2104:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2105:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2106:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2107:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2108:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2109:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2110:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2111:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2112:./Libraries/CMSIS/Core/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2113:./Libraries/CMSIS/Core/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2114:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2115:./Libraries/CMSIS/Core/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2116:./Libraries/CMSIS/Core/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2117:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2118:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2119:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2120:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2121:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2122:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2123:./Libraries/CMSIS/Core/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2124:./Libraries/CMSIS/Core/Include/core_cm7.h ****            or negative to specify a processor exception.
2125:./Libraries/CMSIS/Core/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2126:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2127:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2128:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2129:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2130:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2131:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
2132:./Libraries/CMSIS/Core/Include/core_cm7.h ****   (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
2133:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __DSB();
2134:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2135:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2136:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2137:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2138:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2139:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2140:./Libraries/CMSIS/Core/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2141:./Libraries/CMSIS/Core/Include/core_cm7.h ****            or negative to specify a processor exception.
2142:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2143:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2144:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
ARM GAS  /tmp/ccsHXxNI.s 			page 59


2145:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2146:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2147:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
2148:./Libraries/CMSIS/Core/Include/core_cm7.h ****   return (uint32_t)(* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4));
2149:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2150:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2151:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2152:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2153:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   System Reset
2154:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2155:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2156:./Libraries/CMSIS/Core/Include/core_cm7.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
2157:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2158:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2159:./Libraries/CMSIS/Core/Include/core_cm7.h ****                                                                        buffered write are completed
2160:./Libraries/CMSIS/Core/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2161:./Libraries/CMSIS/Core/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
2162:./Libraries/CMSIS/Core/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2163:./Libraries/CMSIS/Core/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2164:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2165:./Libraries/CMSIS/Core/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2166:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2167:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __NOP();
2168:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2169:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2170:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2171:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2172:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2173:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2174:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* ##########################  MPU functions  #################################### */
2175:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2176:./Libraries/CMSIS/Core/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2177:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2178:./Libraries/CMSIS/Core/Include/core_cm7.h **** #include "mpu_armv7.h"
2179:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2180:./Libraries/CMSIS/Core/Include/core_cm7.h **** #endif
2181:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2182:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2183:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2184:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2185:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2186:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2187:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2188:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
2189:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2190:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2191:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2192:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   get FPU type
2193:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details returns the FPU type
2194:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \returns
2195:./Libraries/CMSIS/Core/Include/core_cm7.h ****    - \b  0: No FPU
2196:./Libraries/CMSIS/Core/Include/core_cm7.h ****    - \b  1: Single precision FPU
2197:./Libraries/CMSIS/Core/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2198:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2199:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2200:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2201:./Libraries/CMSIS/Core/Include/core_cm7.h ****   uint32_t mvfr0;
ARM GAS  /tmp/ccsHXxNI.s 			page 60


2202:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2203:./Libraries/CMSIS/Core/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2204:./Libraries/CMSIS/Core/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2205:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2206:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2207:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2208:./Libraries/CMSIS/Core/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2209:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2210:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2211:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2212:./Libraries/CMSIS/Core/Include/core_cm7.h ****   else
2213:./Libraries/CMSIS/Core/Include/core_cm7.h ****   {
2214:./Libraries/CMSIS/Core/Include/core_cm7.h ****     return 0U;           /* No FPU */
2215:./Libraries/CMSIS/Core/Include/core_cm7.h ****   }
2216:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2217:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2218:./Libraries/CMSIS/Core/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2219:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2220:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2221:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2222:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2223:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2224:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2225:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2226:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2227:./Libraries/CMSIS/Core/Include/core_cm7.h ****   @{
2228:./Libraries/CMSIS/Core/Include/core_cm7.h ****  */
2229:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2230:./Libraries/CMSIS/Core/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2231:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2232:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2233:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2234:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define __SCB_DCACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
2235:./Libraries/CMSIS/Core/Include/core_cm7.h **** #define __SCB_ICACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
2236:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2237:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2238:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Enable I-Cache
2239:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Turns on I-Cache
2240:./Libraries/CMSIS/Core/Include/core_cm7.h ****   */
2241:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_EnableICache (void)
2242:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2243:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2244:./Libraries/CMSIS/Core/Include/core_cm7.h ****     if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
2245:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2246:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2247:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2248:./Libraries/CMSIS/Core/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2249:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2250:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2251:./Libraries/CMSIS/Core/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
2252:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2253:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2254:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
2255:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2256:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2257:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2258:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
ARM GAS  /tmp/ccsHXxNI.s 			page 61


2259:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Disable I-Cache
2260:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Turns off I-Cache
2261:./Libraries/CMSIS/Core/Include/core_cm7.h ****   */
2262:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_DisableICache (void)
2263:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2264:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2265:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2266:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2267:./Libraries/CMSIS/Core/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2268:./Libraries/CMSIS/Core/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2269:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2270:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2271:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
2272:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2273:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2274:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2275:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2276:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2277:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Invalidates I-Cache
2278:./Libraries/CMSIS/Core/Include/core_cm7.h ****   */
2279:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache (void)
2280:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2281:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2282:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2283:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2284:./Libraries/CMSIS/Core/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2285:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2286:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __ISB();
2287:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
2288:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2289:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2290:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2291:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2292:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   I-Cache Invalidate by address
2293:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Invalidates I-Cache for the given address.
2294:./Libraries/CMSIS/Core/Include/core_cm7.h ****            I-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
2295:./Libraries/CMSIS/Core/Include/core_cm7.h ****            I-Cache memory blocks which are part of given address + given size are invalidated.
2296:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param[in]   addr    address
2297:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \param[in]   isize   size of memory block (in number of bytes)
2298:./Libraries/CMSIS/Core/Include/core_cm7.h **** */
2299:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache_by_Addr (void *addr, int32_t isize)
2300:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2301:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2302:./Libraries/CMSIS/Core/Include/core_cm7.h ****     if ( isize > 0 ) {
2303:./Libraries/CMSIS/Core/Include/core_cm7.h ****        int32_t op_size = isize + (((uint32_t)addr) & (__SCB_ICACHE_LINE_SIZE - 1U));
2304:./Libraries/CMSIS/Core/Include/core_cm7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_ICACHE_LINE_SIZE - 1U) */;
2305:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2306:./Libraries/CMSIS/Core/Include/core_cm7.h ****       __DSB();
2307:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2308:./Libraries/CMSIS/Core/Include/core_cm7.h ****       do {
2309:./Libraries/CMSIS/Core/Include/core_cm7.h ****         SCB->ICIMVAU = op_addr;             /* register accepts only 32byte aligned values, only bi
2310:./Libraries/CMSIS/Core/Include/core_cm7.h ****         op_addr += __SCB_ICACHE_LINE_SIZE;
2311:./Libraries/CMSIS/Core/Include/core_cm7.h ****         op_size -= __SCB_ICACHE_LINE_SIZE;
2312:./Libraries/CMSIS/Core/Include/core_cm7.h ****       } while ( op_size > 0 );
2313:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2314:./Libraries/CMSIS/Core/Include/core_cm7.h ****       __DSB();
2315:./Libraries/CMSIS/Core/Include/core_cm7.h ****       __ISB();
ARM GAS  /tmp/ccsHXxNI.s 			page 62


2316:./Libraries/CMSIS/Core/Include/core_cm7.h ****     }
2317:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #endif
2318:./Libraries/CMSIS/Core/Include/core_cm7.h **** }
2319:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2320:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2321:./Libraries/CMSIS/Core/Include/core_cm7.h **** /**
2322:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \brief   Enable D-Cache
2323:./Libraries/CMSIS/Core/Include/core_cm7.h ****   \details Turns on D-Cache
2324:./Libraries/CMSIS/Core/Include/core_cm7.h ****   */
2325:./Libraries/CMSIS/Core/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_EnableDCache (void)
2326:./Libraries/CMSIS/Core/Include/core_cm7.h **** {
2327:./Libraries/CMSIS/Core/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2328:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t ccsidr;
2329:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t sets;
2330:./Libraries/CMSIS/Core/Include/core_cm7.h ****     uint32_t ways;
2331:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2332:./Libraries/CMSIS/Core/Include/core_cm7.h ****     if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 888              		.loc 2 2332 12
 889 0006 344B     		ldr	r3, .L37
 890 0008 5B69     		ldr	r3, [r3, #20]
 891              		.loc 2 2332 18
 892 000a 03F48033 		and	r3, r3, #65536
 893              		.loc 2 2332 8
 894 000e 002B     		cmp	r3, #0
 895 0010 38D1     		bne	.L35
2333:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2334:./Libraries/CMSIS/Core/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 896              		.loc 2 2334 8
 897 0012 314B     		ldr	r3, .L37
 898              		.loc 2 2334 17
 899 0014 0022     		movs	r2, #0
 900 0016 C3F88420 		str	r2, [r3, #132]
 901              	.LBB52:
 902              	.LBB53:
 903              		.file 3 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
ARM GAS  /tmp/ccsHXxNI.s 			page 63


  23:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccsHXxNI.s 			page 64


  80:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
ARM GAS  /tmp/ccsHXxNI.s 			page 65


 137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
ARM GAS  /tmp/ccsHXxNI.s 			page 66


 194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
ARM GAS  /tmp/ccsHXxNI.s 			page 67


 251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsHXxNI.s 			page 68


 308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
ARM GAS  /tmp/ccsHXxNI.s 			page 69


 365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
ARM GAS  /tmp/ccsHXxNI.s 			page 70


 422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccsHXxNI.s 			page 71


 479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsHXxNI.s 			page 72


 536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
ARM GAS  /tmp/ccsHXxNI.s 			page 73


 593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsHXxNI.s 			page 74


 650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
ARM GAS  /tmp/ccsHXxNI.s 			page 75


 707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  /tmp/ccsHXxNI.s 			page 76


 764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccsHXxNI.s 			page 77


 821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
ARM GAS  /tmp/ccsHXxNI.s 			page 78


 878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccsHXxNI.s 			page 79


 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 904              		.loc 3 946 3
 905              		.syntax unified
 906              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 907 001a BFF34F8F 		dsb 0xF
 908              	@ 0 "" 2
 947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 909              		.loc 3 947 1
 910              		.thumb
 911              		.syntax unified
 912 001e 00BF     		nop
 913              	.LBE53:
 914              	.LBE52:
2335:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2336:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2337:./Libraries/CMSIS/Core/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
 915              		.loc 2 2337 17
 916 0020 2D4B     		ldr	r3, .L37
 917              		.loc 2 2337 12
 918 0022 D3F88030 		ldr	r3, [r3, #128]
 919 0026 FB60     		str	r3, [r7, #12]
2338:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2339:./Libraries/CMSIS/Core/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2340:./Libraries/CMSIS/Core/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 920              		.loc 2 2340 12
 921 0028 FB68     		ldr	r3, [r7, #12]
 922 002a 5B0B     		lsrs	r3, r3, #13
 923              		.loc 2 2340 10
 924 002c C3F30E03 		ubfx	r3, r3, #0, #15
 925 0030 BB60     		str	r3, [r7, #8]
 926              	.L32:
2341:./Libraries/CMSIS/Core/Include/core_cm7.h ****     do {
2342:./Libraries/CMSIS/Core/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 927              		.loc 2 2342 14
 928 0032 FB68     		ldr	r3, [r7, #12]
 929 0034 DB08     		lsrs	r3, r3, #3
 930              		.loc 2 2342 12
 931 0036 C3F30903 		ubfx	r3, r3, #0, #10
 932 003a 7B60     		str	r3, [r7, #4]
 933              	.L31:
2343:./Libraries/CMSIS/Core/Include/core_cm7.h ****       do {
2344:./Libraries/CMSIS/Core/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 934              		.loc 2 2344 30
 935 003c BB68     		ldr	r3, [r7, #8]
 936 003e 5A01     		lsls	r2, r3, #5
 937              		.loc 2 2344 52
ARM GAS  /tmp/ccsHXxNI.s 			page 80


 938 0040 43F6E073 		movw	r3, #16352
 939 0044 1340     		ands	r3, r3, r2
2345:./Libraries/CMSIS/Core/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 940              		.loc 2 2345 30
 941 0046 7A68     		ldr	r2, [r7, #4]
 942 0048 9207     		lsls	r2, r2, #30
2344:./Libraries/CMSIS/Core/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 943              		.loc 2 2344 12
 944 004a 2349     		ldr	r1, .L37
2344:./Libraries/CMSIS/Core/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 945              		.loc 2 2344 73
 946 004c 1343     		orrs	r3, r3, r2
2344:./Libraries/CMSIS/Core/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 947              		.loc 2 2344 20
 948 004e C1F86032 		str	r3, [r1, #608]
2346:./Libraries/CMSIS/Core/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2347:./Libraries/CMSIS/Core/Include/core_cm7.h ****           __schedule_barrier();
2348:./Libraries/CMSIS/Core/Include/core_cm7.h ****         #endif
2349:./Libraries/CMSIS/Core/Include/core_cm7.h ****       } while (ways-- != 0U);
 949              		.loc 2 2349 20
 950 0052 7B68     		ldr	r3, [r7, #4]
 951 0054 5A1E     		subs	r2, r3, #1
 952 0056 7A60     		str	r2, [r7, #4]
 953              		.loc 2 2349 7
 954 0058 002B     		cmp	r3, #0
 955 005a EFD1     		bne	.L31
2350:./Libraries/CMSIS/Core/Include/core_cm7.h ****     } while(sets-- != 0U);
 956              		.loc 2 2350 17
 957 005c BB68     		ldr	r3, [r7, #8]
 958 005e 5A1E     		subs	r2, r3, #1
 959 0060 BA60     		str	r2, [r7, #8]
 960              		.loc 2 2350 5
 961 0062 002B     		cmp	r3, #0
 962 0064 E5D1     		bne	.L32
 963              	.LBB54:
 964              	.LBB55:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 965              		.loc 3 946 3
 966              		.syntax unified
 967              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 968 0066 BFF34F8F 		dsb 0xF
 969              	@ 0 "" 2
 970              		.loc 3 947 1
 971              		.thumb
 972              		.syntax unified
 973 006a 00BF     		nop
 974              	.LBE55:
 975              	.LBE54:
2351:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
2352:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
2353:./Libraries/CMSIS/Core/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 976              		.loc 2 2353 14
 977 006c 1A4B     		ldr	r3, .L37
 978 006e 5B69     		ldr	r3, [r3, #20]
 979 0070 194A     		ldr	r2, .L37
 980 0072 43F48033 		orr	r3, r3, #65536
 981 0076 5361     		str	r3, [r2, #20]
ARM GAS  /tmp/ccsHXxNI.s 			page 81


 982              	.LBB56:
 983              	.LBB57:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 984              		.loc 3 946 3
 985              		.syntax unified
 986              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 987 0078 BFF34F8F 		dsb 0xF
 988              	@ 0 "" 2
 989              		.loc 3 947 1
 990              		.thumb
 991              		.syntax unified
 992 007c 00BF     		nop
 993              	.LBE57:
 994              	.LBE56:
 995              	.LBB58:
 996              	.LBB59:
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 997              		.loc 3 935 3
 998              		.syntax unified
 999              	@ 935 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1000 007e BFF36F8F 		isb 0xF
 1001              	@ 0 "" 2
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1002              		.loc 3 936 1
 1003              		.thumb
 1004              		.syntax unified
 1005 0082 00E0     		b	.L30
 1006              	.L35:
 1007              	.LBE59:
 1008              	.LBE58:
2332:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 1009              		.loc 2 2332 36
 1010 0084 00BF     		nop
 1011              	.L30:
 1012              	.LBE51:
 1013              	.LBE50:
 1014              	.LBB60:
 1015              	.LBB61:
2244:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 1016              		.loc 2 2244 12
 1017 0086 144B     		ldr	r3, .L37
 1018 0088 5B69     		ldr	r3, [r3, #20]
2244:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 1019              		.loc 2 2244 18
 1020 008a 03F40033 		and	r3, r3, #131072
2244:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 1021              		.loc 2 2244 8
 1022 008e 002B     		cmp	r3, #0
 1023 0090 1BD1     		bne	.L36
 1024              	.LBB62:
 1025              	.LBB63:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1026              		.loc 3 946 3
 1027              		.syntax unified
 1028              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1029 0092 BFF34F8F 		dsb 0xF
 1030              	@ 0 "" 2
ARM GAS  /tmp/ccsHXxNI.s 			page 82


 1031              		.loc 3 947 1
 1032              		.thumb
 1033              		.syntax unified
 1034 0096 00BF     		nop
 1035              	.LBE63:
 1036              	.LBE62:
 1037              	.LBB64:
 1038              	.LBB65:
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1039              		.loc 3 935 3
 1040              		.syntax unified
 1041              	@ 935 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1042 0098 BFF36F8F 		isb 0xF
 1043              	@ 0 "" 2
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1044              		.loc 3 936 1
 1045              		.thumb
 1046              		.syntax unified
 1047 009c 00BF     		nop
 1048              	.LBE65:
 1049              	.LBE64:
2248:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
 1050              		.loc 2 2248 8
 1051 009e 0E4B     		ldr	r3, .L37
2248:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
 1052              		.loc 2 2248 18
 1053 00a0 0022     		movs	r2, #0
 1054 00a2 C3F85022 		str	r2, [r3, #592]
 1055              	.LBB66:
 1056              	.LBB67:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1057              		.loc 3 946 3
 1058              		.syntax unified
 1059              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1060 00a6 BFF34F8F 		dsb 0xF
 1061              	@ 0 "" 2
 1062              		.loc 3 947 1
 1063              		.thumb
 1064              		.syntax unified
 1065 00aa 00BF     		nop
 1066              	.LBE67:
 1067              	.LBE66:
 1068              	.LBB68:
 1069              	.LBB69:
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1070              		.loc 3 935 3
 1071              		.syntax unified
 1072              	@ 935 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1073 00ac BFF36F8F 		isb 0xF
 1074              	@ 0 "" 2
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1075              		.loc 3 936 1
 1076              		.thumb
 1077              		.syntax unified
 1078 00b0 00BF     		nop
 1079              	.LBE69:
 1080              	.LBE68:
ARM GAS  /tmp/ccsHXxNI.s 			page 83


2251:./Libraries/CMSIS/Core/Include/core_cm7.h ****     __DSB();
 1081              		.loc 2 2251 14
 1082 00b2 094B     		ldr	r3, .L37
 1083 00b4 5B69     		ldr	r3, [r3, #20]
 1084 00b6 084A     		ldr	r2, .L37
 1085 00b8 43F40033 		orr	r3, r3, #131072
 1086 00bc 5361     		str	r3, [r2, #20]
 1087              	.LBB70:
 1088              	.LBB71:
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1089              		.loc 3 946 3
 1090              		.syntax unified
 1091              	@ 946 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1092 00be BFF34F8F 		dsb 0xF
 1093              	@ 0 "" 2
 1094              		.loc 3 947 1
 1095              		.thumb
 1096              		.syntax unified
 1097 00c2 00BF     		nop
 1098              	.LBE71:
 1099              	.LBE70:
 1100              	.LBB72:
 1101              	.LBB73:
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1102              		.loc 3 935 3
 1103              		.syntax unified
 1104              	@ 935 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1105 00c4 BFF36F8F 		isb 0xF
 1106              	@ 0 "" 2
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1107              		.loc 3 936 1
 1108              		.thumb
 1109              		.syntax unified
 1110 00c8 00E0     		b	.L34
 1111              	.L36:
 1112              	.LBE73:
 1113              	.LBE72:
2244:./Libraries/CMSIS/Core/Include/core_cm7.h **** 
 1114              		.loc 2 2244 36
 1115 00ca 00BF     		nop
 1116              	.L34:
 1117              	.LBE61:
 1118              	.LBE60:
 282:./BSP/system.c ****   /* Enable D-Cache */
 283:./BSP/system.c ****   SCB_EnableDCache();
 284:./BSP/system.c **** 
 285:./BSP/system.c ****   /* Enable I-Cache */
 286:./BSP/system.c ****   SCB_EnableICache();
 287:./BSP/system.c **** }
 1119              		.loc 1 287 1
 1120 00cc 00BF     		nop
 1121 00ce 1437     		adds	r7, r7, #20
 1122              	.LCFI25:
 1123              		.cfi_def_cfa_offset 4
 1124 00d0 BD46     		mov	sp, r7
 1125              	.LCFI26:
 1126              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccsHXxNI.s 			page 84


 1127              		@ sp needed
 1128 00d2 5DF8047B 		ldr	r7, [sp], #4
 1129              	.LCFI27:
 1130              		.cfi_restore 7
 1131              		.cfi_def_cfa_offset 0
 1132 00d6 7047     		bx	lr
 1133              	.L38:
 1134              		.align	2
 1135              	.L37:
 1136 00d8 00ED00E0 		.word	-536810240
 1137              		.cfi_endproc
 1138              	.LFE343:
 1140              		.section	.text.CRC_Init,"ax",%progbits
 1141              		.align	1
 1142              		.syntax unified
 1143              		.thumb
 1144              		.thumb_func
 1145              		.fpu fpv5-d16
 1147              	CRC_Init:
 1148              	.LFB344:
 288:./BSP/system.c **** 
 289:./BSP/system.c **** static void CRC_Init(void)
 290:./BSP/system.c **** {
 1149              		.loc 1 290 1
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 40
 1152              		@ frame_needed = 1, uses_anonymous_args = 0
 1153 0000 80B5     		push	{r7, lr}
 1154              	.LCFI28:
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 7, -8
 1157              		.cfi_offset 14, -4
 1158 0002 8AB0     		sub	sp, sp, #40
 1159              	.LCFI29:
 1160              		.cfi_def_cfa_offset 48
 1161 0004 00AF     		add	r7, sp, #0
 1162              	.LCFI30:
 1163              		.cfi_def_cfa_register 7
 291:./BSP/system.c ****   __HAL_RCC_CRC_CLK_DISABLE();
 1164              		.loc 1 291 3
 1165 0006 124B     		ldr	r3, .L42
 1166 0008 D3F8E030 		ldr	r3, [r3, #224]
 1167 000c 104A     		ldr	r2, .L42
 1168 000e 23F40023 		bic	r3, r3, #524288
 1169 0012 C2F8E030 		str	r3, [r2, #224]
 292:./BSP/system.c ****   CRC_HandleTypeDef hcrc;
 293:./BSP/system.c ****   hcrc.Instance = CRC;
 1170              		.loc 1 293 17
 1171 0016 0F4B     		ldr	r3, .L42+4
 1172 0018 7B60     		str	r3, [r7, #4]
 294:./BSP/system.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 1173              		.loc 1 294 34
 1174 001a 0023     		movs	r3, #0
 1175 001c 3B72     		strb	r3, [r7, #8]
 295:./BSP/system.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 1176              		.loc 1 295 33
 1177 001e 0023     		movs	r3, #0
ARM GAS  /tmp/ccsHXxNI.s 			page 85


 1178 0020 7B72     		strb	r3, [r7, #9]
 296:./BSP/system.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 1179              		.loc 1 296 36
 1180 0022 0023     		movs	r3, #0
 1181 0024 BB61     		str	r3, [r7, #24]
 297:./BSP/system.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 1182              		.loc 1 297 37
 1183 0026 0023     		movs	r3, #0
 1184 0028 FB61     		str	r3, [r7, #28]
 298:./BSP/system.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 1185              		.loc 1 298 24
 1186 002a 0123     		movs	r3, #1
 1187 002c 7B62     		str	r3, [r7, #36]
 299:./BSP/system.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 1188              		.loc 1 299 7
 1189 002e 3B1D     		adds	r3, r7, #4
 1190 0030 1846     		mov	r0, r3
 1191 0032 FFF7FEFF 		bl	HAL_CRC_Init
 1192 0036 0346     		mov	r3, r0
 1193              		.loc 1 299 6
 1194 0038 002B     		cmp	r3, #0
 1195 003a 04D0     		beq	.L41
 300:./BSP/system.c ****   {
 301:./BSP/system.c ****     Error_Handler(__FILE__, __LINE__);
 1196              		.loc 1 301 5
 1197 003c 40F22D11 		movw	r1, #301
 1198 0040 0548     		ldr	r0, .L42+8
 1199 0042 FFF7FEFF 		bl	Error_Handler
 1200              	.L41:
 302:./BSP/system.c ****   }
 303:./BSP/system.c **** }
 1201              		.loc 1 303 1
 1202 0046 00BF     		nop
 1203 0048 2837     		adds	r7, r7, #40
 1204              	.LCFI31:
 1205              		.cfi_def_cfa_offset 8
 1206 004a BD46     		mov	sp, r7
 1207              	.LCFI32:
 1208              		.cfi_def_cfa_register 13
 1209              		@ sp needed
 1210 004c 80BD     		pop	{r7, pc}
 1211              	.L43:
 1212 004e 00BF     		.align	2
 1213              	.L42:
 1214 0050 00440258 		.word	1476543488
 1215 0054 004C0258 		.word	1476545536
 1216 0058 00000000 		.word	.LC0
 1217              		.cfi_endproc
 1218              	.LFE344:
 1220              		.section	.text.GPIO_Init,"ax",%progbits
 1221              		.align	1
 1222              		.syntax unified
 1223              		.thumb
 1224              		.thumb_func
 1225              		.fpu fpv5-d16
 1227              	GPIO_Init:
 1228              	.LFB345:
ARM GAS  /tmp/ccsHXxNI.s 			page 86


 304:./BSP/system.c **** 
 305:./BSP/system.c **** static void GPIO_Init(void)
 306:./BSP/system.c **** {
 1229              		.loc 1 306 1
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 40
 1232              		@ frame_needed = 1, uses_anonymous_args = 0
 1233 0000 80B5     		push	{r7, lr}
 1234              	.LCFI33:
 1235              		.cfi_def_cfa_offset 8
 1236              		.cfi_offset 7, -8
 1237              		.cfi_offset 14, -4
 1238 0002 8AB0     		sub	sp, sp, #40
 1239              	.LCFI34:
 1240              		.cfi_def_cfa_offset 48
 1241 0004 00AF     		add	r7, sp, #0
 1242              	.LCFI35:
 1243              		.cfi_def_cfa_register 7
 307:./BSP/system.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1244              		.loc 1 307 20
 1245 0006 07F11403 		add	r3, r7, #20
 1246 000a 0022     		movs	r2, #0
 1247 000c 1A60     		str	r2, [r3]
 1248 000e 5A60     		str	r2, [r3, #4]
 1249 0010 9A60     		str	r2, [r3, #8]
 1250 0012 DA60     		str	r2, [r3, #12]
 1251 0014 1A61     		str	r2, [r3, #16]
 1252              	.LBB74:
 308:./BSP/system.c **** 
 309:./BSP/system.c ****   /* GPIO Ports Clock Enable */
 310:./BSP/system.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1253              		.loc 1 310 3
 1254 0016 284B     		ldr	r3, .L45
 1255 0018 D3F8E030 		ldr	r3, [r3, #224]
 1256 001c 264A     		ldr	r2, .L45
 1257 001e 43F00103 		orr	r3, r3, #1
 1258 0022 C2F8E030 		str	r3, [r2, #224]
 1259 0026 244B     		ldr	r3, .L45
 1260 0028 D3F8E030 		ldr	r3, [r3, #224]
 1261 002c 03F00103 		and	r3, r3, #1
 1262 0030 3B61     		str	r3, [r7, #16]
 1263 0032 3B69     		ldr	r3, [r7, #16]
 1264              	.LBE74:
 1265              	.LBB75:
 311:./BSP/system.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 1266              		.loc 1 311 3
 1267 0034 204B     		ldr	r3, .L45
 1268 0036 D3F8E030 		ldr	r3, [r3, #224]
 1269 003a 1F4A     		ldr	r2, .L45
 1270 003c 43F00403 		orr	r3, r3, #4
 1271 0040 C2F8E030 		str	r3, [r2, #224]
 1272 0044 1C4B     		ldr	r3, .L45
 1273 0046 D3F8E030 		ldr	r3, [r3, #224]
 1274 004a 03F00403 		and	r3, r3, #4
 1275 004e FB60     		str	r3, [r7, #12]
 1276 0050 FB68     		ldr	r3, [r7, #12]
 1277              	.LBE75:
ARM GAS  /tmp/ccsHXxNI.s 			page 87


 1278              	.LBB76:
 312:./BSP/system.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 1279              		.loc 1 312 3
 1280 0052 194B     		ldr	r3, .L45
 1281 0054 D3F8E030 		ldr	r3, [r3, #224]
 1282 0058 174A     		ldr	r2, .L45
 1283 005a 43F08003 		orr	r3, r3, #128
 1284 005e C2F8E030 		str	r3, [r2, #224]
 1285 0062 154B     		ldr	r3, .L45
 1286 0064 D3F8E030 		ldr	r3, [r3, #224]
 1287 0068 03F08003 		and	r3, r3, #128
 1288 006c BB60     		str	r3, [r7, #8]
 1289 006e BB68     		ldr	r3, [r7, #8]
 1290              	.LBE76:
 1291              	.LBB77:
 313:./BSP/system.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 1292              		.loc 1 313 3
 1293 0070 114B     		ldr	r3, .L45
 1294 0072 D3F8E030 		ldr	r3, [r3, #224]
 1295 0076 104A     		ldr	r2, .L45
 1296 0078 43F00803 		orr	r3, r3, #8
 1297 007c C2F8E030 		str	r3, [r2, #224]
 1298 0080 0D4B     		ldr	r3, .L45
 1299 0082 D3F8E030 		ldr	r3, [r3, #224]
 1300 0086 03F00803 		and	r3, r3, #8
 1301 008a 7B60     		str	r3, [r7, #4]
 1302 008c 7B68     		ldr	r3, [r7, #4]
 1303              	.LBE77:
 314:./BSP/system.c **** 
 315:./BSP/system.c ****   /*Configure GPIO pin : CEC_CK_MCO1_Pin */
 316:./BSP/system.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 1304              		.loc 1 316 23
 1305 008e 4FF48073 		mov	r3, #256
 1306 0092 7B61     		str	r3, [r7, #20]
 317:./BSP/system.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1307              		.loc 1 317 24
 1308 0094 0223     		movs	r3, #2
 1309 0096 BB61     		str	r3, [r7, #24]
 318:./BSP/system.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1310              		.loc 1 318 24
 1311 0098 0023     		movs	r3, #0
 1312 009a FB61     		str	r3, [r7, #28]
 319:./BSP/system.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1313              		.loc 1 319 25
 1314 009c 0023     		movs	r3, #0
 1315 009e 3B62     		str	r3, [r7, #32]
 320:./BSP/system.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1316              		.loc 1 320 29
 1317 00a0 0023     		movs	r3, #0
 1318 00a2 7B62     		str	r3, [r7, #36]
 321:./BSP/system.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1319              		.loc 1 321 3
 1320 00a4 07F11403 		add	r3, r7, #20
 1321 00a8 1946     		mov	r1, r3
 1322 00aa 0448     		ldr	r0, .L45+4
 1323 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 322:./BSP/system.c **** }
ARM GAS  /tmp/ccsHXxNI.s 			page 88


 1324              		.loc 1 322 1
 1325 00b0 00BF     		nop
 1326 00b2 2837     		adds	r7, r7, #40
 1327              	.LCFI36:
 1328              		.cfi_def_cfa_offset 8
 1329 00b4 BD46     		mov	sp, r7
 1330              	.LCFI37:
 1331              		.cfi_def_cfa_register 13
 1332              		@ sp needed
 1333 00b6 80BD     		pop	{r7, pc}
 1334              	.L46:
 1335              		.align	2
 1336              	.L45:
 1337 00b8 00440258 		.word	1476543488
 1338 00bc 00000258 		.word	1476526080
 1339              		.cfi_endproc
 1340              	.LFE345:
 1342              		.section	.text.TEMP_SENSOR_Init,"ax",%progbits
 1343              		.align	1
 1344              		.syntax unified
 1345              		.thumb
 1346              		.thumb_func
 1347              		.fpu fpv5-d16
 1349              	TEMP_SENSOR_Init:
 1350              	.LFB346:
 323:./BSP/system.c **** 
 324:./BSP/system.c **** static uint32_t TEMP_SENSOR_Init(void)
 325:./BSP/system.c **** {
 1351              		.loc 1 325 1
 1352              		.cfi_startproc
 1353              		@ args = 0, pretend = 0, frame = 40
 1354              		@ frame_needed = 1, uses_anonymous_args = 0
 1355 0000 80B5     		push	{r7, lr}
 1356              	.LCFI38:
 1357              		.cfi_def_cfa_offset 8
 1358              		.cfi_offset 7, -8
 1359              		.cfi_offset 14, -4
 1360 0002 8AB0     		sub	sp, sp, #40
 1361              	.LCFI39:
 1362              		.cfi_def_cfa_offset 48
 1363 0004 00AF     		add	r7, sp, #0
 1364              	.LCFI40:
 1365              		.cfi_def_cfa_register 7
 326:./BSP/system.c ****   uint32_t ret = HAL_OK;
 1366              		.loc 1 326 12
 1367 0006 0023     		movs	r3, #0
 1368 0008 7B62     		str	r3, [r7, #36]
 1369              	.LBB78:
 327:./BSP/system.c **** 
 328:./BSP/system.c ****   ADC_ChannelConfTypeDef sConfig;
 329:./BSP/system.c **** 
 330:./BSP/system.c ****    /* ADCx Periph clock enable */
 331:./BSP/system.c ****    __HAL_RCC_ADC3_CLK_ENABLE();
 1370              		.loc 1 331 4
 1371 000a 454B     		ldr	r3, .L56
 1372 000c D3F8E030 		ldr	r3, [r3, #224]
 1373 0010 434A     		ldr	r2, .L56
ARM GAS  /tmp/ccsHXxNI.s 			page 89


 1374 0012 43F08073 		orr	r3, r3, #16777216
 1375 0016 C2F8E030 		str	r3, [r2, #224]
 1376 001a 414B     		ldr	r3, .L56
 1377 001c D3F8E030 		ldr	r3, [r3, #224]
 1378 0020 03F08073 		and	r3, r3, #16777216
 1379 0024 7B60     		str	r3, [r7, #4]
 1380 0026 7B68     		ldr	r3, [r7, #4]
 1381              	.LBE78:
 332:./BSP/system.c **** 
 333:./BSP/system.c ****   memset(&AdcHandle, 0, sizeof(AdcHandle));
 1382              		.loc 1 333 3
 1383 0028 6422     		movs	r2, #100
 1384 002a 0021     		movs	r1, #0
 1385 002c 3D48     		ldr	r0, .L56+4
 1386 002e FFF7FEFF 		bl	memset
 334:./BSP/system.c ****   memset(&sConfig, 0, sizeof(sConfig));
 1387              		.loc 1 334 3
 1388 0032 07F10803 		add	r3, r7, #8
 1389 0036 1C22     		movs	r2, #28
 1390 0038 0021     		movs	r1, #0
 1391 003a 1846     		mov	r0, r3
 1392 003c FFF7FEFF 		bl	memset
 335:./BSP/system.c **** 
 336:./BSP/system.c ****   /* Configure the ADC peripheral */
 337:./BSP/system.c ****   AdcHandle.Instance                      = ADC3;
 1393              		.loc 1 337 43
 1394 0040 384B     		ldr	r3, .L56+4
 1395 0042 394A     		ldr	r2, .L56+8
 1396 0044 1A60     		str	r2, [r3]
 338:./BSP/system.c **** 
 339:./BSP/system.c ****   /* Clear all control registers */
 340:./BSP/system.c ****   ADC_CLEAR_COMMON_CONTROL_REGISTER(&AdcHandle);
 1397              		.loc 1 340 3
 1398 0046 374B     		ldr	r3, .L56+4
 1399 0048 1B68     		ldr	r3, [r3]
 1400 004a 384A     		ldr	r2, .L56+12
 1401 004c 9342     		cmp	r3, r2
 1402 004e 04D0     		beq	.L48
 1403              		.loc 1 340 3 is_stmt 0 discriminator 2
 1404 0050 344B     		ldr	r3, .L56+4
 1405 0052 1B68     		ldr	r3, [r3]
 1406 0054 364A     		ldr	r2, .L56+16
 1407 0056 9342     		cmp	r3, r2
 1408 0058 01D1     		bne	.L49
 1409              	.L48:
 1410              		.loc 1 340 3 discriminator 3
 1411 005a 364B     		ldr	r3, .L56+20
 1412 005c 00E0     		b	.L50
 1413              	.L49:
 1414              		.loc 1 340 3 discriminator 4
 1415 005e 364B     		ldr	r3, .L56+24
 1416              	.L50:
 1417              		.loc 1 340 3 discriminator 6
 1418 0060 9968     		ldr	r1, [r3, #8]
 1419 0062 304B     		ldr	r3, .L56+4
 1420 0064 1B68     		ldr	r3, [r3]
 1421 0066 314A     		ldr	r2, .L56+12
ARM GAS  /tmp/ccsHXxNI.s 			page 90


 1422 0068 9342     		cmp	r3, r2
 1423 006a 04D0     		beq	.L51
 1424              		.loc 1 340 3 discriminator 8
 1425 006c 2D4B     		ldr	r3, .L56+4
 1426 006e 1B68     		ldr	r3, [r3]
 1427 0070 2F4A     		ldr	r2, .L56+16
 1428 0072 9342     		cmp	r3, r2
 1429 0074 01D1     		bne	.L52
 1430              	.L51:
 1431              		.loc 1 340 3 discriminator 9
 1432 0076 2F4A     		ldr	r2, .L56+20
 1433 0078 00E0     		b	.L53
 1434              	.L52:
 1435              		.loc 1 340 3 discriminator 10
 1436 007a 2F4A     		ldr	r2, .L56+24
 1437              	.L53:
 1438              		.loc 1 340 3 discriminator 12
 1439 007c 2F4B     		ldr	r3, .L56+28
 1440 007e 0B40     		ands	r3, r3, r1
 1441 0080 9360     		str	r3, [r2, #8]
 341:./BSP/system.c **** 
 342:./BSP/system.c ****   AdcHandle.Init.ClockPrescaler           = ADC_CLOCK_SYNC_PCLK_DIV4;
 1442              		.loc 1 342 43 is_stmt 1 discriminator 12
 1443 0082 284B     		ldr	r3, .L56+4
 1444 0084 4FF44032 		mov	r2, #196608
 1445 0088 5A60     		str	r2, [r3, #4]
 343:./BSP/system.c ****   AdcHandle.Init.Resolution               = ADC_RESOLUTION_12B;
 1446              		.loc 1 343 43 discriminator 12
 1447 008a 264B     		ldr	r3, .L56+4
 1448 008c 0822     		movs	r2, #8
 1449 008e 9A60     		str	r2, [r3, #8]
 344:./BSP/system.c ****   AdcHandle.Init.ScanConvMode             = ENABLE;
 1450              		.loc 1 344 43 discriminator 12
 1451 0090 244B     		ldr	r3, .L56+4
 1452 0092 0122     		movs	r2, #1
 1453 0094 DA60     		str	r2, [r3, #12]
 345:./BSP/system.c ****   AdcHandle.Init.ContinuousConvMode       = ENABLE;
 1454              		.loc 1 345 43 discriminator 12
 1455 0096 234B     		ldr	r3, .L56+4
 1456 0098 0122     		movs	r2, #1
 1457 009a 5A75     		strb	r2, [r3, #21]
 346:./BSP/system.c ****   AdcHandle.Init.DiscontinuousConvMode    = DISABLE;
 1458              		.loc 1 346 43 discriminator 12
 1459 009c 214B     		ldr	r3, .L56+4
 1460 009e 0022     		movs	r2, #0
 1461 00a0 1A77     		strb	r2, [r3, #28]
 347:./BSP/system.c ****   AdcHandle.Init.ExternalTrigConvEdge     = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1462              		.loc 1 347 43 discriminator 12
 1463 00a2 204B     		ldr	r3, .L56+4
 1464 00a4 0022     		movs	r2, #0
 1465 00a6 9A62     		str	r2, [r3, #40]
 348:./BSP/system.c ****   AdcHandle.Init.ExternalTrigConv         = ADC_EXTERNALTRIG_T1_CC1;
 1466              		.loc 1 348 43 discriminator 12
 1467 00a8 1E4B     		ldr	r3, .L56+4
 1468 00aa 4FF48062 		mov	r2, #1024
 1469 00ae 5A62     		str	r2, [r3, #36]
 349:./BSP/system.c ****   AdcHandle.Init.EOCSelection             = ADC_EOC_SEQ_CONV;
ARM GAS  /tmp/ccsHXxNI.s 			page 91


 1470              		.loc 1 349 43 discriminator 12
 1471 00b0 1C4B     		ldr	r3, .L56+4
 1472 00b2 0822     		movs	r2, #8
 1473 00b4 1A61     		str	r2, [r3, #16]
 350:./BSP/system.c ****   AdcHandle.Init.NbrOfConversion          = 1;
 1474              		.loc 1 350 43 discriminator 12
 1475 00b6 1B4B     		ldr	r3, .L56+4
 1476 00b8 0122     		movs	r2, #1
 1477 00ba 9A61     		str	r2, [r3, #24]
 351:./BSP/system.c ****   AdcHandle.Init.NbrOfDiscConversion      = 1;
 1478              		.loc 1 351 43 discriminator 12
 1479 00bc 194B     		ldr	r3, .L56+4
 1480 00be 0122     		movs	r2, #1
 1481 00c0 1A62     		str	r2, [r3, #32]
 352:./BSP/system.c ****   AdcHandle.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 1482              		.loc 1 352 43 discriminator 12
 1483 00c2 184B     		ldr	r3, .L56+4
 1484 00c4 0022     		movs	r2, #0
 1485 00c6 DA62     		str	r2, [r3, #44]
 353:./BSP/system.c ****   AdcHandle.Init.LowPowerAutoWait         = DISABLE;
 1486              		.loc 1 353 43 discriminator 12
 1487 00c8 164B     		ldr	r3, .L56+4
 1488 00ca 0022     		movs	r2, #0
 1489 00cc 1A75     		strb	r2, [r3, #20]
 354:./BSP/system.c ****   AdcHandle.Init.Overrun                  = ADC_OVR_DATA_OVERWRITTEN;
 1490              		.loc 1 354 43 discriminator 12
 1491 00ce 154B     		ldr	r3, .L56+4
 1492 00d0 4FF48052 		mov	r2, #4096
 1493 00d4 1A63     		str	r2, [r3, #48]
 355:./BSP/system.c **** 
 356:./BSP/system.c ****   *((uint32_t *) (ADC12_COMMON_BASE)) |= 0xC00000; // enable TSEN bit in  ADC CCR in common registe
 1494              		.loc 1 356 39 discriminator 12
 1495 00d6 174B     		ldr	r3, .L56+20
 1496 00d8 1B68     		ldr	r3, [r3]
 1497 00da 164A     		ldr	r2, .L56+20
 1498 00dc 43F44003 		orr	r3, r3, #12582912
 1499 00e0 1360     		str	r3, [r2]
 357:./BSP/system.c **** 
 358:./BSP/system.c ****   ret = HAL_ADC_Init(&AdcHandle);
 1500              		.loc 1 358 9 discriminator 12
 1501 00e2 1048     		ldr	r0, .L56+4
 1502 00e4 FFF7FEFF 		bl	HAL_ADC_Init
 1503 00e8 0346     		mov	r3, r0
 1504              		.loc 1 358 7 discriminator 12
 1505 00ea 7B62     		str	r3, [r7, #36]
 359:./BSP/system.c ****   if (ret == HAL_OK)
 1506              		.loc 1 359 6 discriminator 12
 1507 00ec 7B6A     		ldr	r3, [r7, #36]
 1508 00ee 002B     		cmp	r3, #0
 1509 00f0 11D1     		bne	.L54
 360:./BSP/system.c ****   {
 361:./BSP/system.c ****     /* Configure ADC Temperature Sensor Channel */
 362:./BSP/system.c ****     sConfig.Channel      = ADC_CHANNEL_TEMPSENSOR;                /* Sampled channel number */
 1510              		.loc 1 362 26
 1511 00f2 134B     		ldr	r3, .L56+32
 1512 00f4 BB60     		str	r3, [r7, #8]
 363:./BSP/system.c ****     sConfig.Rank         = ADC_REGULAR_RANK_1;          /* Rank of sampled channel number ADCx_CHAN
ARM GAS  /tmp/ccsHXxNI.s 			page 92


 1513              		.loc 1 363 26
 1514 00f6 0623     		movs	r3, #6
 1515 00f8 FB60     		str	r3, [r7, #12]
 364:./BSP/system.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_64CYCLES_5;   /* Sampling time (number of clock cycles un
 1516              		.loc 1 364 26
 1517 00fa 0523     		movs	r3, #5
 1518 00fc 3B61     		str	r3, [r7, #16]
 365:./BSP/system.c ****     sConfig.Offset       = 0;                           /* Parameter discarded because offset corre
 1519              		.loc 1 365 26
 1520 00fe 0023     		movs	r3, #0
 1521 0100 FB61     		str	r3, [r7, #28]
 366:./BSP/system.c ****     sConfig.OffsetNumber = ADC_OFFSET_NONE;             /* No offset subtraction */
 1522              		.loc 1 366 26
 1523 0102 0423     		movs	r3, #4
 1524 0104 BB61     		str	r3, [r7, #24]
 367:./BSP/system.c **** 
 368:./BSP/system.c ****     ret = HAL_ADC_ConfigChannel(&AdcHandle, &sConfig);
 1525              		.loc 1 368 11
 1526 0106 07F10803 		add	r3, r7, #8
 1527 010a 1946     		mov	r1, r3
 1528 010c 0548     		ldr	r0, .L56+4
 1529 010e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1530 0112 0346     		mov	r3, r0
 1531              		.loc 1 368 9
 1532 0114 7B62     		str	r3, [r7, #36]
 1533              	.L54:
 369:./BSP/system.c ****   }
 370:./BSP/system.c **** 
 371:./BSP/system.c ****   return ret;
 1534              		.loc 1 371 10
 1535 0116 7B6A     		ldr	r3, [r7, #36]
 372:./BSP/system.c **** }
 1536              		.loc 1 372 1
 1537 0118 1846     		mov	r0, r3
 1538 011a 2837     		adds	r7, r7, #40
 1539              	.LCFI41:
 1540              		.cfi_def_cfa_offset 8
 1541 011c BD46     		mov	sp, r7
 1542              	.LCFI42:
 1543              		.cfi_def_cfa_register 13
 1544              		@ sp needed
 1545 011e 80BD     		pop	{r7, pc}
 1546              	.L57:
 1547              		.align	2
 1548              	.L56:
 1549 0120 00440258 		.word	1476543488
 1550 0124 00000000 		.word	AdcHandle
 1551 0128 00600258 		.word	1476550656
 1552 012c 00200240 		.word	1073881088
 1553 0130 00210240 		.word	1073881344
 1554 0134 00230240 		.word	1073881856
 1555 0138 00630258 		.word	1476551424
 1556 013c E03000FE 		.word	-33541920
 1557 0140 000084CB 		.word	-880541696
 1558              		.cfi_endproc
 1559              	.LFE346:
 1561              		.section	.text.TEMP_SENSOR_Start,"ax",%progbits
ARM GAS  /tmp/ccsHXxNI.s 			page 93


 1562              		.align	1
 1563              		.global	TEMP_SENSOR_Start
 1564              		.syntax unified
 1565              		.thumb
 1566              		.thumb_func
 1567              		.fpu fpv5-d16
 1569              	TEMP_SENSOR_Start:
 1570              	.LFB347:
 373:./BSP/system.c **** 
 374:./BSP/system.c **** uint32_t TEMP_SENSOR_Start(void)
 375:./BSP/system.c **** {
 1571              		.loc 1 375 1
 1572              		.cfi_startproc
 1573              		@ args = 0, pretend = 0, frame = 0
 1574              		@ frame_needed = 1, uses_anonymous_args = 0
 1575 0000 80B5     		push	{r7, lr}
 1576              	.LCFI43:
 1577              		.cfi_def_cfa_offset 8
 1578              		.cfi_offset 7, -8
 1579              		.cfi_offset 14, -4
 1580 0002 00AF     		add	r7, sp, #0
 1581              	.LCFI44:
 1582              		.cfi_def_cfa_register 7
 376:./BSP/system.c ****   return HAL_ADC_Start(&AdcHandle);
 1583              		.loc 1 376 10
 1584 0004 0248     		ldr	r0, .L60
 1585 0006 FFF7FEFF 		bl	HAL_ADC_Start
 1586 000a 0346     		mov	r3, r0
 377:./BSP/system.c **** }
 1587              		.loc 1 377 1
 1588 000c 1846     		mov	r0, r3
 1589 000e 80BD     		pop	{r7, pc}
 1590              	.L61:
 1591              		.align	2
 1592              	.L60:
 1593 0010 00000000 		.word	AdcHandle
 1594              		.cfi_endproc
 1595              	.LFE347:
 1597              		.section	.text.TEMP_SENSOR_Stop,"ax",%progbits
 1598              		.align	1
 1599              		.global	TEMP_SENSOR_Stop
 1600              		.syntax unified
 1601              		.thumb
 1602              		.thumb_func
 1603              		.fpu fpv5-d16
 1605              	TEMP_SENSOR_Stop:
 1606              	.LFB348:
 378:./BSP/system.c **** 
 379:./BSP/system.c **** uint32_t TEMP_SENSOR_Stop(void)
 380:./BSP/system.c **** {
 1607              		.loc 1 380 1
 1608              		.cfi_startproc
 1609              		@ args = 0, pretend = 0, frame = 0
 1610              		@ frame_needed = 1, uses_anonymous_args = 0
 1611 0000 80B5     		push	{r7, lr}
 1612              	.LCFI45:
 1613              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccsHXxNI.s 			page 94


 1614              		.cfi_offset 7, -8
 1615              		.cfi_offset 14, -4
 1616 0002 00AF     		add	r7, sp, #0
 1617              	.LCFI46:
 1618              		.cfi_def_cfa_register 7
 381:./BSP/system.c ****   return HAL_ADC_Stop(&AdcHandle);
 1619              		.loc 1 381 10
 1620 0004 0248     		ldr	r0, .L64
 1621 0006 FFF7FEFF 		bl	HAL_ADC_Stop
 1622 000a 0346     		mov	r3, r0
 382:./BSP/system.c **** }
 1623              		.loc 1 382 1
 1624 000c 1846     		mov	r0, r3
 1625 000e 80BD     		pop	{r7, pc}
 1626              	.L65:
 1627              		.align	2
 1628              	.L64:
 1629 0010 00000000 		.word	AdcHandle
 1630              		.cfi_endproc
 1631              	.LFE348:
 1633              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1634              		.align	1
 1635              		.global	HAL_TIM_PeriodElapsedCallback
 1636              		.syntax unified
 1637              		.thumb
 1638              		.thumb_func
 1639              		.fpu fpv5-d16
 1641              	HAL_TIM_PeriodElapsedCallback:
 1642              	.LFB349:
 383:./BSP/system.c **** 
 384:./BSP/system.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 385:./BSP/system.c **** {
 1643              		.loc 1 385 1
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 8
 1646              		@ frame_needed = 1, uses_anonymous_args = 0
 1647 0000 80B5     		push	{r7, lr}
 1648              	.LCFI47:
 1649              		.cfi_def_cfa_offset 8
 1650              		.cfi_offset 7, -8
 1651              		.cfi_offset 14, -4
 1652 0002 82B0     		sub	sp, sp, #8
 1653              	.LCFI48:
 1654              		.cfi_def_cfa_offset 16
 1655 0004 00AF     		add	r7, sp, #0
 1656              	.LCFI49:
 1657              		.cfi_def_cfa_register 7
 1658 0006 7860     		str	r0, [r7, #4]
 386:./BSP/system.c ****   if (htim->Instance == TIM2) {
 1659              		.loc 1 386 11
 1660 0008 7B68     		ldr	r3, [r7, #4]
 1661 000a 1B68     		ldr	r3, [r3]
 1662              		.loc 1 386 6
 1663 000c B3F1804F 		cmp	r3, #1073741824
 1664 0010 01D1     		bne	.L68
 387:./BSP/system.c ****     HAL_IncTick();
 1665              		.loc 1 387 5
ARM GAS  /tmp/ccsHXxNI.s 			page 95


 1666 0012 FFF7FEFF 		bl	HAL_IncTick
 1667              	.L68:
 388:./BSP/system.c ****   }
 389:./BSP/system.c **** }
 1668              		.loc 1 389 1
 1669 0016 00BF     		nop
 1670 0018 0837     		adds	r7, r7, #8
 1671              	.LCFI50:
 1672              		.cfi_def_cfa_offset 8
 1673 001a BD46     		mov	sp, r7
 1674              	.LCFI51:
 1675              		.cfi_def_cfa_register 13
 1676              		@ sp needed
 1677 001c 80BD     		pop	{r7, pc}
 1678              		.cfi_endproc
 1679              	.LFE349:
 1681              		.section	.text.Error_Handler,"ax",%progbits
 1682              		.align	1
 1683              		.global	Error_Handler
 1684              		.syntax unified
 1685              		.thumb
 1686              		.thumb_func
 1687              		.fpu fpv5-d16
 1689              	Error_Handler:
 1690              	.LFB350:
 390:./BSP/system.c **** 
 391:./BSP/system.c **** 
 392:./BSP/system.c **** void Error_Handler(char *file, uint32_t line)
 393:./BSP/system.c **** {
 1691              		.loc 1 393 1
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 8
 1694              		@ frame_needed = 1, uses_anonymous_args = 0
 1695              		@ link register save eliminated.
 1696 0000 80B4     		push	{r7}
 1697              	.LCFI52:
 1698              		.cfi_def_cfa_offset 4
 1699              		.cfi_offset 7, -4
 1700 0002 83B0     		sub	sp, sp, #12
 1701              	.LCFI53:
 1702              		.cfi_def_cfa_offset 16
 1703 0004 00AF     		add	r7, sp, #0
 1704              	.LCFI54:
 1705              		.cfi_def_cfa_register 7
 1706 0006 7860     		str	r0, [r7, #4]
 1707 0008 3960     		str	r1, [r7]
 394:./BSP/system.c **** 	if (line == 0)
 1708              		.loc 1 394 5
 1709 000a 3B68     		ldr	r3, [r7]
 1710 000c 002B     		cmp	r3, #0
 1711 000e 00D0     		beq	.L73
 1712              	.L70:
 395:./BSP/system.c **** 	{
 396:./BSP/system.c **** 		return;
 397:./BSP/system.c **** 	}
 398:./BSP/system.c **** 	
 399:./BSP/system.c **** 	while(1)
ARM GAS  /tmp/ccsHXxNI.s 			page 96


 1713              		.loc 1 399 7 discriminator 1
 1714 0010 FEE7     		b	.L70
 1715              	.L73:
 396:./BSP/system.c **** 	}
 1716              		.loc 1 396 3
 1717 0012 00BF     		nop
 400:./BSP/system.c **** 	{
 401:./BSP/system.c **** 	}
 402:./BSP/system.c **** }
 1718              		.loc 1 402 1
 1719 0014 0C37     		adds	r7, r7, #12
 1720              	.LCFI55:
 1721              		.cfi_def_cfa_offset 4
 1722 0016 BD46     		mov	sp, r7
 1723              	.LCFI56:
 1724              		.cfi_def_cfa_register 13
 1725              		@ sp needed
 1726 0018 5DF8047B 		ldr	r7, [sp], #4
 1727              	.LCFI57:
 1728              		.cfi_restore 7
 1729              		.cfi_def_cfa_offset 0
 1730 001c 7047     		bx	lr
 1731              		.cfi_endproc
 1732              	.LFE350:
 1734              		.text
 1735              	.Letext0:
 1736              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1737              		.file 5 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1738              		.file 6 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 1739              		.file 7 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 1740              		.file 8 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1741              		.file 9 "/usr/include/newlib/sys/_types.h"
 1742              		.file 10 "/usr/include/newlib/sys/reent.h"
 1743              		.file 11 "/usr/include/newlib/sys/lock.h"
 1744              		.file 12 "/usr/include/newlib/math.h"
 1745              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1746              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 1747              		.file 15 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 1748              		.file 16 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 1749              		.file 17 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 1750              		.file 18 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 1751              		.file 19 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 1752              		.file 20 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_crc.h"
 1753              		.file 21 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1754              		.file 22 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 1755              		.file 23 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 1756              		.file 24 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1757              		.file 25 "/usr/include/newlib/stdlib.h"
 1758              		.file 26 "./BSP/Components/Inc/lcd.h"
ARM GAS  /tmp/ccsHXxNI.s 			page 97


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system.c
     /tmp/ccsHXxNI.s:17     .bss.AdcHandle:0000000000000000 $d
     /tmp/ccsHXxNI.s:20     .bss.AdcHandle:0000000000000000 AdcHandle
     /tmp/ccsHXxNI.s:23     .rodata:0000000000000000 $d
     /tmp/ccsHXxNI.s:27     .text.Hardware_Init:0000000000000000 $t
     /tmp/ccsHXxNI.s:35     .text.Hardware_Init:0000000000000000 Hardware_Init
     /tmp/ccsHXxNI.s:1689   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccsHXxNI.s:510    .text.MPU_Config:0000000000000000 MPU_Config
     /tmp/ccsHXxNI.s:250    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccsHXxNI.s:778    .text.PeriphCommonClock_Config:0000000000000000 PeriphCommonClock_Config
     /tmp/ccsHXxNI.s:213    .text.BSP_Init:0000000000000000 BSP_Init
     /tmp/ccsHXxNI.s:199    .text.Hardware_Init:00000000000000f4 $d
     /tmp/ccsHXxNI.s:207    .text.BSP_Init:0000000000000000 $t
     /tmp/ccsHXxNI.s:1349   .text.TEMP_SENSOR_Init:0000000000000000 TEMP_SENSOR_Init
     /tmp/ccsHXxNI.s:1227   .text.GPIO_Init:0000000000000000 GPIO_Init
     /tmp/ccsHXxNI.s:868    .text.CPU_CACHE_Enable:0000000000000000 CPU_CACHE_Enable
     /tmp/ccsHXxNI.s:1147   .text.CRC_Init:0000000000000000 CRC_Init
     /tmp/ccsHXxNI.s:244    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccsHXxNI.s:496    .text.SystemClock_Config:00000000000001dc $d
     /tmp/ccsHXxNI.s:504    .text.MPU_Config:0000000000000000 $t
     /tmp/ccsHXxNI.s:767    .text.MPU_Config:000000000000015c $d
     /tmp/ccsHXxNI.s:772    .text.PeriphCommonClock_Config:0000000000000000 $t
     /tmp/ccsHXxNI.s:857    .text.PeriphCommonClock_Config:0000000000000060 $d
     /tmp/ccsHXxNI.s:862    .text.CPU_CACHE_Enable:0000000000000000 $t
     /tmp/ccsHXxNI.s:1136   .text.CPU_CACHE_Enable:00000000000000d8 $d
     /tmp/ccsHXxNI.s:1141   .text.CRC_Init:0000000000000000 $t
     /tmp/ccsHXxNI.s:1214   .text.CRC_Init:0000000000000050 $d
     /tmp/ccsHXxNI.s:1221   .text.GPIO_Init:0000000000000000 $t
     /tmp/ccsHXxNI.s:1337   .text.GPIO_Init:00000000000000b8 $d
     /tmp/ccsHXxNI.s:1343   .text.TEMP_SENSOR_Init:0000000000000000 $t
     /tmp/ccsHXxNI.s:1549   .text.TEMP_SENSOR_Init:0000000000000120 $d
     /tmp/ccsHXxNI.s:1562   .text.TEMP_SENSOR_Start:0000000000000000 $t
     /tmp/ccsHXxNI.s:1569   .text.TEMP_SENSOR_Start:0000000000000000 TEMP_SENSOR_Start
     /tmp/ccsHXxNI.s:1593   .text.TEMP_SENSOR_Start:0000000000000010 $d
     /tmp/ccsHXxNI.s:1598   .text.TEMP_SENSOR_Stop:0000000000000000 $t
     /tmp/ccsHXxNI.s:1605   .text.TEMP_SENSOR_Stop:0000000000000000 TEMP_SENSOR_Stop
     /tmp/ccsHXxNI.s:1629   .text.TEMP_SENSOR_Stop:0000000000000010 $d
     /tmp/ccsHXxNI.s:1634   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccsHXxNI.s:1641   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccsHXxNI.s:1682   .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetREVID
HAL_PWR_EnableBkUpAccess
HAL_Init
HAL_HSEM_FastTake
HAL_HSEM_Release
IS42S32800J_Init
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_ClockConfig
HAL_RCC_MCOConfig
HAL_EnableCompensationCell
HAL_MPU_Disable
ARM GAS  /tmp/ccsHXxNI.s 			page 98


HAL_MPU_ConfigRegion
HAL_MPU_Enable
HAL_CRC_Init
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_ADC_Start
HAL_ADC_Stop
HAL_IncTick
