ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccicwxkB.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_add_f32.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_add_f32,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	arm_add_f32
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_add_f32:
  27              	.LVL0:
  28              	.LFB145:
  29              		.file 1 ".//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c"
   1:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** /* ----------------------------------------------------------------------
   2:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * Project:      CMSIS DSP Library
   3:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * Title:        arm_add_f32.c
   4:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * Description:  Floating-point vector addition
   5:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  *
   6:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * $Date:        18. March 2019
   7:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * $Revision:    V1.6.0
   8:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  *
   9:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * Target Processor: Cortex-M cores
  10:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * -------------------------------------------------------------------- */
  11:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** /*
  12:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  *
  14:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  *
  16:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * not use this file except in compliance with the License.
  18:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * You may obtain a copy of the License at
  19:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  *
  20:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  *
  22:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * See the License for the specific language governing permissions and
  26:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  * limitations under the License.
  27:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  */
  28:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  29:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #include "arm_math.h"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccicwxkB.s 			page 2


  30:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  31:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** /**
  32:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @ingroup groupMath
  33:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  */
  34:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  35:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** /**
  36:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @defgroup BasicAdd Vector Addition
  37:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  38:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   Element-by-element addition of two vectors.
  39:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  40:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   <pre>
  41:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****       pDst[n] = pSrcA[n] + pSrcB[n],   0 <= n < blockSize.
  42:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   </pre>
  43:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  44:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   There are separate functions for floating-point, Q7, Q15, and Q31 data types.
  45:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  */
  46:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  47:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** /**
  48:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @addtogroup BasicAdd
  49:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @{
  50:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  */
  51:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  52:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** /**
  53:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @brief         Floating-point vector addition.
  54:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @param[in]     pSrcA      points to first input vector
  55:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @param[in]     pSrcB      points to second input vector
  56:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @param[out]    pDst       points to output vector
  57:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @param[in]     blockSize  number of samples in each vector
  58:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   @return        none
  59:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****  */
  60:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  61:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** void arm_add_f32(
  62:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   const float32_t * pSrcA,
  63:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   const float32_t * pSrcB,
  64:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         float32_t * pDst,
  65:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         uint32_t blockSize)
  66:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** {
  30              		.loc 1 66 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  67:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         uint32_t blkCnt;                               /* Loop counter */
  35              		.loc 1 67 9 view .LVU1
  68:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  69:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #if defined(ARM_MATH_NEON)
  70:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     float32x4_t vec1;
  71:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     float32x4_t vec2;
  72:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     float32x4_t res;
  73:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  74:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* Compute 4 outputs at a time */
  75:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     blkCnt = blockSize >> 2U;
  76:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  77:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     while (blkCnt > 0U)
  78:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     {
  79:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         /* C = A + B */
  80:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccicwxkB.s 			page 3


  81:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     	/* Add and then store the results in the destination buffer. */
  82:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         vec1 = vld1q_f32(pSrcA);
  83:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         vec2 = vld1q_f32(pSrcB);
  84:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         res = vaddq_f32(vec1, vec2);
  85:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         vst1q_f32(pDst, res);
  86:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  87:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         /* Increment pointers */
  88:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         pSrcA += 4;
  89:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         pSrcB += 4; 
  90:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         pDst += 4;
  91:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         
  92:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         /* Decrement the loop counter */
  93:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****         blkCnt--;
  94:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     }
  95:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  96:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* Tail */
  97:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     blkCnt = blockSize & 0x3;
  98:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
  99:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #else
 100:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 101:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 102:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 103:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   blkCnt = blockSize >> 2U;
 104:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 105:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   while (blkCnt > 0U)
 106:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   {
 107:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* C = A + B */
 108:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 109:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* Add and store result in destination buffer. */
 110:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     *pDst++ = (*pSrcA++) + (*pSrcB++);
 111:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     *pDst++ = (*pSrcA++) + (*pSrcB++);
 112:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     *pDst++ = (*pSrcA++) + (*pSrcB++);
 113:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     *pDst++ = (*pSrcA++) + (*pSrcB++);
 114:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 115:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* Decrement loop counter */
 116:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     blkCnt--;
 117:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   }
 118:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 119:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   /* Loop unrolling: Compute remaining outputs */
 120:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   blkCnt = blockSize % 0x4U;
 121:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 122:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #else
 123:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 124:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   /* Initialize blkCnt with number of samples */
 125:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   blkCnt = blockSize;
  36              		.loc 1 125 3 view .LVU2
 126:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 127:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 128:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 129:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 130:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   while (blkCnt > 0U)
  37              		.loc 1 130 3 view .LVU3
  38              		.loc 1 130 9 view .LVU4
  39 0000 4BB1     		cbz	r3, .L1
  40              	.LVL1:
  41              	.L3:
 131:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccicwxkB.s 			page 4


 132:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* C = A + B */
 133:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 134:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* Add and store result in destination buffer. */
 135:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     *pDst++ = (*pSrcA++) + (*pSrcB++);
  42              		.loc 1 135 5 view .LVU5
  43              		.loc 1 135 26 is_stmt 0 view .LVU6
  44 0002 F0EC017A 		vldmia.32	r0!, {s15}
  45              	.LVL2:
 130:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   {
  46              		.loc 1 130 9 view .LVU7
  47 0006 013B     		subs	r3, r3, #1
  48              	.LVL3:
  49              		.loc 1 135 26 view .LVU8
  50 0008 B1EC017A 		vldmia.32	r1!, {s14}
  51              	.LVL4:
  52              		.loc 1 135 26 view .LVU9
  53 000c 77EE877A 		vadd.f32	s15, s15, s14
  54              		.loc 1 135 13 view .LVU10
  55 0010 E2EC017A 		vstmia.32	r2!, {s15}
  56              	.LVL5:
 136:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 137:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     /* Decrement loop counter */
 138:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****     blkCnt--;
  57              		.loc 1 138 5 is_stmt 1 view .LVU11
 130:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   {
  58              		.loc 1 130 9 view .LVU12
  59 0014 F5D1     		bne	.L3
  60              	.L1:
 139:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c ****   }
 140:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** 
 141:.//Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_add_f32.c **** }
  61              		.loc 1 141 1 is_stmt 0 view .LVU13
  62 0016 7047     		bx	lr
  63              		.cfi_endproc
  64              	.LFE145:
  66              		.text
  67              	.Letext0:
  68              		.file 2 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/
  69              		.file 3 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_std
  70              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock
  71              		.file 5 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_typ
  72              		.file 6 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/in
  73              		.file 7 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reen
  74              		.file 8 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
  75              		.file 9 ".//Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccicwxkB.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_add_f32.c
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccicwxkB.s:17     .text.arm_add_f32:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccicwxkB.s:26     .text.arm_add_f32:0000000000000000 arm_add_f32

NO UNDEFINED SYMBOLS
