ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"event_groups.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.xEventGroupCreateStatic,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	xEventGroupCreateStatic
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	xEventGroupCreateStatic:
  27              	.LVL0:
  28              	.LFB4:
  29              		.file 1 ".//Libraries/FreeRTOS/Source/event_groups.c"
   1:.//Libraries/FreeRTOS/Source/event_groups.c **** /*
   2:.//Libraries/FreeRTOS/Source/event_groups.c ****  * FreeRTOS Kernel V10.3.1
   3:.//Libraries/FreeRTOS/Source/event_groups.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:.//Libraries/FreeRTOS/Source/event_groups.c ****  *
   5:.//Libraries/FreeRTOS/Source/event_groups.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:.//Libraries/FreeRTOS/Source/event_groups.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:.//Libraries/FreeRTOS/Source/event_groups.c ****  * the Software without restriction, including without limitation the rights to
   8:.//Libraries/FreeRTOS/Source/event_groups.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:.//Libraries/FreeRTOS/Source/event_groups.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:.//Libraries/FreeRTOS/Source/event_groups.c ****  * subject to the following conditions:
  11:.//Libraries/FreeRTOS/Source/event_groups.c ****  *
  12:.//Libraries/FreeRTOS/Source/event_groups.c ****  * The above copyright notice and this permission notice shall be included in all
  13:.//Libraries/FreeRTOS/Source/event_groups.c ****  * copies or substantial portions of the Software.
  14:.//Libraries/FreeRTOS/Source/event_groups.c ****  *
  15:.//Libraries/FreeRTOS/Source/event_groups.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:.//Libraries/FreeRTOS/Source/event_groups.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:.//Libraries/FreeRTOS/Source/event_groups.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:.//Libraries/FreeRTOS/Source/event_groups.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:.//Libraries/FreeRTOS/Source/event_groups.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:.//Libraries/FreeRTOS/Source/event_groups.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:.//Libraries/FreeRTOS/Source/event_groups.c ****  *
  22:.//Libraries/FreeRTOS/Source/event_groups.c ****  * http://www.FreeRTOS.org
  23:.//Libraries/FreeRTOS/Source/event_groups.c ****  * http://aws.amazon.com/freertos
  24:.//Libraries/FreeRTOS/Source/event_groups.c ****  *
  25:.//Libraries/FreeRTOS/Source/event_groups.c ****  * 1 tab == 4 spaces!
  26:.//Libraries/FreeRTOS/Source/event_groups.c ****  */
  27:.//Libraries/FreeRTOS/Source/event_groups.c **** 
  28:.//Libraries/FreeRTOS/Source/event_groups.c **** /* Standard includes. */
  29:.//Libraries/FreeRTOS/Source/event_groups.c **** #include <stdlib.h>
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 2


  30:.//Libraries/FreeRTOS/Source/event_groups.c **** 
  31:.//Libraries/FreeRTOS/Source/event_groups.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:.//Libraries/FreeRTOS/Source/event_groups.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:.//Libraries/FreeRTOS/Source/event_groups.c **** task.h is included from an application file. */
  34:.//Libraries/FreeRTOS/Source/event_groups.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:.//Libraries/FreeRTOS/Source/event_groups.c **** 
  36:.//Libraries/FreeRTOS/Source/event_groups.c **** /* FreeRTOS includes. */
  37:.//Libraries/FreeRTOS/Source/event_groups.c **** #include "FreeRTOS.h"
  38:.//Libraries/FreeRTOS/Source/event_groups.c **** #include "task.h"
  39:.//Libraries/FreeRTOS/Source/event_groups.c **** #include "timers.h"
  40:.//Libraries/FreeRTOS/Source/event_groups.c **** #include "event_groups.h"
  41:.//Libraries/FreeRTOS/Source/event_groups.c **** 
  42:.//Libraries/FreeRTOS/Source/event_groups.c **** /* Lint e961, e750 and e9021 are suppressed as a MISRA exception justified
  43:.//Libraries/FreeRTOS/Source/event_groups.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  44:.//Libraries/FreeRTOS/Source/event_groups.c **** for the header files above, but not in this file, in order to generate the
  45:.//Libraries/FreeRTOS/Source/event_groups.c **** correct privileged Vs unprivileged linkage and placement. */
  46:.//Libraries/FreeRTOS/Source/event_groups.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021 See comment above. */
  47:.//Libraries/FreeRTOS/Source/event_groups.c **** 
  48:.//Libraries/FreeRTOS/Source/event_groups.c **** /* The following bit fields convey control information in a task's event list
  49:.//Libraries/FreeRTOS/Source/event_groups.c **** item value.  It is important they don't clash with the
  50:.//Libraries/FreeRTOS/Source/event_groups.c **** taskEVENT_LIST_ITEM_VALUE_IN_USE definition. */
  51:.//Libraries/FreeRTOS/Source/event_groups.c **** #if configUSE_16_BIT_TICKS == 1
  52:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x0100U
  53:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x0200U
  54:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x0400U
  55:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff00U
  56:.//Libraries/FreeRTOS/Source/event_groups.c **** #else
  57:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x01000000UL
  58:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x02000000UL
  59:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x04000000UL
  60:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff000000UL
  61:.//Libraries/FreeRTOS/Source/event_groups.c **** #endif
  62:.//Libraries/FreeRTOS/Source/event_groups.c **** 
  63:.//Libraries/FreeRTOS/Source/event_groups.c **** typedef struct EventGroupDef_t
  64:.//Libraries/FreeRTOS/Source/event_groups.c **** {
  65:.//Libraries/FreeRTOS/Source/event_groups.c **** 	EventBits_t uxEventBits;
  66:.//Libraries/FreeRTOS/Source/event_groups.c **** 	List_t xTasksWaitingForBits;		/*< List of tasks waiting for a bit to be set. */
  67:.//Libraries/FreeRTOS/Source/event_groups.c **** 
  68:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  69:.//Libraries/FreeRTOS/Source/event_groups.c **** 		UBaseType_t uxEventGroupNumber;
  70:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#endif
  71:.//Libraries/FreeRTOS/Source/event_groups.c **** 
  72:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  73:.//Libraries/FreeRTOS/Source/event_groups.c **** 		uint8_t ucStaticallyAllocated; /*< Set to pdTRUE if the event group is statically allocated to en
  74:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#endif
  75:.//Libraries/FreeRTOS/Source/event_groups.c **** } EventGroup_t;
  76:.//Libraries/FreeRTOS/Source/event_groups.c **** 
  77:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
  78:.//Libraries/FreeRTOS/Source/event_groups.c **** 
  79:.//Libraries/FreeRTOS/Source/event_groups.c **** /*
  80:.//Libraries/FreeRTOS/Source/event_groups.c ****  * Test the bits set in uxCurrentEventBits to see if the wait condition is met.
  81:.//Libraries/FreeRTOS/Source/event_groups.c ****  * The wait condition is defined by xWaitForAllBits.  If xWaitForAllBits is
  82:.//Libraries/FreeRTOS/Source/event_groups.c ****  * pdTRUE then the wait condition is met if all the bits set in uxBitsToWaitFor
  83:.//Libraries/FreeRTOS/Source/event_groups.c ****  * are also set in uxCurrentEventBits.  If xWaitForAllBits is pdFALSE then the
  84:.//Libraries/FreeRTOS/Source/event_groups.c ****  * wait condition is met if any of the bits set in uxBitsToWait for are also set
  85:.//Libraries/FreeRTOS/Source/event_groups.c ****  * in uxCurrentEventBits.
  86:.//Libraries/FreeRTOS/Source/event_groups.c ****  */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 3


  87:.//Libraries/FreeRTOS/Source/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
  88:.//Libraries/FreeRTOS/Source/event_groups.c **** 
  89:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
  90:.//Libraries/FreeRTOS/Source/event_groups.c **** 
  91:.//Libraries/FreeRTOS/Source/event_groups.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
  92:.//Libraries/FreeRTOS/Source/event_groups.c **** 
  93:.//Libraries/FreeRTOS/Source/event_groups.c **** 	EventGroupHandle_t xEventGroupCreateStatic( StaticEventGroup_t *pxEventGroupBuffer )
  94:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
  30              		.loc 1 94 2 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  95:.//Libraries/FreeRTOS/Source/event_groups.c **** 	EventGroup_t *pxEventBits;
  34              		.loc 1 95 2 view .LVU1
  96:.//Libraries/FreeRTOS/Source/event_groups.c **** 
  97:.//Libraries/FreeRTOS/Source/event_groups.c **** 		/* A StaticEventGroup_t object must be provided. */
  98:.//Libraries/FreeRTOS/Source/event_groups.c **** 		configASSERT( pxEventGroupBuffer );
  35              		.loc 1 98 3 view .LVU2
  36 0000 78B1     		cbz	r0, .L9
  37              		.loc 1 98 37 discriminator 2 view .LVU3
  38              	.LBB57:
  99:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 100:.//Libraries/FreeRTOS/Source/event_groups.c **** 		#if( configASSERT_DEFINED == 1 )
 101:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 102:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* Sanity check that the size of the structure used to declare a
 103:.//Libraries/FreeRTOS/Source/event_groups.c **** 			variable of type StaticEventGroup_t equals the size of the real
 104:.//Libraries/FreeRTOS/Source/event_groups.c **** 			event group structure. */
 105:.//Libraries/FreeRTOS/Source/event_groups.c **** 			volatile size_t xSize = sizeof( StaticEventGroup_t );
  39              		.loc 1 105 4 discriminator 2 view .LVU4
  40              		.loc 1 105 20 is_stmt 0 discriminator 2 view .LVU5
  41 0002 2023     		movs	r3, #32
  42              	.LBE57:
  94:.//Libraries/FreeRTOS/Source/event_groups.c **** 	EventGroup_t *pxEventBits;
  43              		.loc 1 94 2 discriminator 2 view .LVU6
  44 0004 10B5     		push	{r4, lr}
  45              	.LCFI0:
  46              		.cfi_def_cfa_offset 8
  47              		.cfi_offset 4, -8
  48              		.cfi_offset 14, -4
  49 0006 82B0     		sub	sp, sp, #8
  50              	.LCFI1:
  51              		.cfi_def_cfa_offset 16
  52              	.LBB60:
  53              		.loc 1 105 20 discriminator 2 view .LVU7
  54 0008 0193     		str	r3, [sp, #4]
 106:.//Libraries/FreeRTOS/Source/event_groups.c **** 			configASSERT( xSize == sizeof( EventGroup_t ) );
  55              		.loc 1 106 4 is_stmt 1 discriminator 2 view .LVU8
  56 000a 019B     		ldr	r3, [sp, #4]
  57 000c 202B     		cmp	r3, #32
  58 000e 11D0     		beq	.L4
  59              		.loc 1 106 4 view .LVU9
  60              	.LBB58:
  61              	.LBI58:
  62              		.file 2 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 4


   4:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 5


  61:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 6


 118:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 7


 175:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  63              		.loc 2 191 30 view .LVU10
  64              	.LBB59:
 192:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
  65              		.loc 2 193 1 view .LVU11
 194:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
  66              		.loc 2 195 2 view .LVU12
  67              		.syntax unified
  68              	@ 195 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  69 0010 4FF05003 			mov r3, #80												
  70 0014 83F31188 		msr basepri, r3											
  71 0018 BFF36F8F 		isb														
  72 001c BFF34F8F 		dsb														
  73              	
  74              	@ 0 "" 2
  75              	.LVL1:
  76              		.thumb
  77              		.syntax unified
  78              	.L5:
  79              		.loc 2 195 2 is_stmt 0 view .LVU13
  80              	.LBE59:
  81              	.LBE58:
  82              		.loc 1 106 4 is_stmt 1 discriminator 2 view .LVU14
  83              		.loc 1 106 4 discriminator 2 view .LVU15
  84              		.loc 1 106 4 discriminator 2 view .LVU16
  85              		.loc 1 106 4 discriminator 2 view .LVU17
  86              		.loc 1 106 4 discriminator 2 view .LVU18
  87              		.loc 1 106 4 discriminator 2 view .LVU19
  88 0020 FEE7     		b	.L5
  89              	.L9:
  90              	.LCFI2:
  91              		.cfi_def_cfa_offset 0
  92              		.cfi_restore 4
  93              		.cfi_restore 14
  94              	.LBE60:
  98:.//Libraries/FreeRTOS/Source/event_groups.c **** 
  95              		.loc 1 98 3 view .LVU20
  96              	.LBB61:
  97              	.LBI61:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 8


 191:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
  98              		.loc 2 191 30 view .LVU21
  99              	.LBB62:
 193:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 100              		.loc 2 193 1 view .LVU22
 101              		.loc 2 195 2 view .LVU23
 102              		.syntax unified
 103              	@ 195 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 104 0022 4FF05003 			mov r3, #80												
 105 0026 83F31188 		msr basepri, r3											
 106 002a BFF36F8F 		isb														
 107 002e BFF34F8F 		dsb														
 108              	
 109              	@ 0 "" 2
 110              	.LVL2:
 111              		.thumb
 112              		.syntax unified
 113              	.L3:
 114              		.loc 2 195 2 is_stmt 0 view .LVU24
 115              	.LBE62:
 116              	.LBE61:
  98:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 117              		.loc 1 98 3 is_stmt 1 discriminator 1 view .LVU25
  98:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 118              		.loc 1 98 3 discriminator 1 view .LVU26
  98:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 119              		.loc 1 98 3 discriminator 1 view .LVU27
  98:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 120              		.loc 1 98 3 discriminator 1 view .LVU28
  98:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 121              		.loc 1 98 3 discriminator 1 view .LVU29
  98:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 122              		.loc 1 98 3 discriminator 1 view .LVU30
 123 0032 FEE7     		b	.L3
 124              	.L4:
 125              	.LCFI3:
 126              		.cfi_def_cfa_offset 16
 127              		.cfi_offset 4, -8
 128              		.cfi_offset 14, -4
 107:.//Libraries/FreeRTOS/Source/event_groups.c **** 		} /*lint !e529 xSize is referenced if configASSERT() is defined. */
 108:.//Libraries/FreeRTOS/Source/event_groups.c **** 		#endif /* configASSERT_DEFINED */
 109:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 110:.//Libraries/FreeRTOS/Source/event_groups.c **** 		/* The user has provided a statically allocated event group - use it. */
 111:.//Libraries/FreeRTOS/Source/event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pxEventGroupBuffer; /*lint !e740 !e9087 EventGroup_t and StaticE
 112:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 113:.//Libraries/FreeRTOS/Source/event_groups.c **** 		if( pxEventBits != NULL )
 114:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 115:.//Libraries/FreeRTOS/Source/event_groups.c **** 			pxEventBits->uxEventBits = 0;
 129              		.loc 1 115 29 is_stmt 0 view .LVU31
 130 0034 0023     		movs	r3, #0
 131 0036 0446     		mov	r4, r0
 132              	.LBB63:
 106:.//Libraries/FreeRTOS/Source/event_groups.c **** 		} /*lint !e529 xSize is referenced if configASSERT() is defined. */
 133              		.loc 1 106 51 is_stmt 1 view .LVU32
 134              	.LBE63:
 111:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 135              		.loc 1 111 3 view .LVU33
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 9


 136              	.LVL3:
 113:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 137              		.loc 1 113 3 view .LVU34
 138              		.loc 1 115 4 view .LVU35
 139              		.loc 1 115 29 is_stmt 0 view .LVU36
 140 0038 40F8043B 		str	r3, [r0], #4
 141              	.LVL4:
 116:.//Libraries/FreeRTOS/Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 142              		.loc 1 116 4 is_stmt 1 view .LVU37
 143 003c FFF7FEFF 		bl	vListInitialise
 144              	.LVL5:
 117:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 118:.//Libraries/FreeRTOS/Source/event_groups.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 119:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 120:.//Libraries/FreeRTOS/Source/event_groups.c **** 				/* Both static and dynamic allocation can be used, so note that
 121:.//Libraries/FreeRTOS/Source/event_groups.c **** 				this event group was created statically in case the event group
 122:.//Libraries/FreeRTOS/Source/event_groups.c **** 				is later deleted. */
 123:.//Libraries/FreeRTOS/Source/event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdTRUE;
 145              		.loc 1 123 5 view .LVU38
 146              		.loc 1 123 40 is_stmt 0 view .LVU39
 147 0040 0123     		movs	r3, #1
 124:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 125:.//Libraries/FreeRTOS/Source/event_groups.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 126:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 127:.//Libraries/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 128:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 129:.//Libraries/FreeRTOS/Source/event_groups.c **** 		else
 130:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 131:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* xEventGroupCreateStatic should only ever be called with
 132:.//Libraries/FreeRTOS/Source/event_groups.c **** 			pxEventGroupBuffer pointing to a pre-allocated (compile time
 133:.//Libraries/FreeRTOS/Source/event_groups.c **** 			allocated) StaticEventGroup_t variable. */
 134:.//Libraries/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED();
 135:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 136:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 137:.//Libraries/FreeRTOS/Source/event_groups.c **** 		return pxEventBits;
 138:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 148              		.loc 1 138 2 view .LVU40
 149 0042 2046     		mov	r0, r4
 123:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 150              		.loc 1 123 40 view .LVU41
 151 0044 2377     		strb	r3, [r4, #28]
 127:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 152              		.loc 1 127 42 is_stmt 1 view .LVU42
 134:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 153              		.loc 1 134 36 view .LVU43
 137:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 154              		.loc 1 137 3 view .LVU44
 155              		.loc 1 138 2 is_stmt 0 view .LVU45
 156 0046 02B0     		add	sp, sp, #8
 157              	.LCFI4:
 158              		.cfi_def_cfa_offset 8
 159              		@ sp needed
 160 0048 10BD     		pop	{r4, pc}
 161              		.loc 1 138 2 view .LVU46
 162              		.cfi_endproc
 163              	.LFE4:
 165 004a 00BF     		.section	.text.xEventGroupCreate,"ax",%progbits
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 10


 166              		.align	1
 167              		.p2align 2,,3
 168              		.global	xEventGroupCreate
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu fpv5-d16
 174              	xEventGroupCreate:
 175              	.LFB5:
 139:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 140:.//Libraries/FreeRTOS/Source/event_groups.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 141:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 142:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 143:.//Libraries/FreeRTOS/Source/event_groups.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 144:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 145:.//Libraries/FreeRTOS/Source/event_groups.c **** 	EventGroupHandle_t xEventGroupCreate( void )
 146:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 176              		.loc 1 146 2 is_stmt 1 view -0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 147:.//Libraries/FreeRTOS/Source/event_groups.c **** 	EventGroup_t *pxEventBits;
 180              		.loc 1 147 2 view .LVU48
 148:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 149:.//Libraries/FreeRTOS/Source/event_groups.c **** 		/* Allocate the event group.  Justification for MISRA deviation as
 150:.//Libraries/FreeRTOS/Source/event_groups.c **** 		follows:  pvPortMalloc() always ensures returned memory blocks are
 151:.//Libraries/FreeRTOS/Source/event_groups.c **** 		aligned per the requirements of the MCU stack.  In this case
 152:.//Libraries/FreeRTOS/Source/event_groups.c **** 		pvPortMalloc() must return a pointer that is guaranteed to meet the
 153:.//Libraries/FreeRTOS/Source/event_groups.c **** 		alignment requirements of the EventGroup_t structure - which (if you
 154:.//Libraries/FreeRTOS/Source/event_groups.c **** 		follow it through) is the alignment requirements of the TickType_t type
 155:.//Libraries/FreeRTOS/Source/event_groups.c **** 		(EventBits_t being of TickType_t itself).  Therefore, whenever the
 156:.//Libraries/FreeRTOS/Source/event_groups.c **** 		stack alignment requirements are greater than or equal to the
 157:.//Libraries/FreeRTOS/Source/event_groups.c **** 		TickType_t alignment requirements the cast is safe.  In other cases,
 158:.//Libraries/FreeRTOS/Source/event_groups.c **** 		where the natural word size of the architecture is less than
 159:.//Libraries/FreeRTOS/Source/event_groups.c **** 		sizeof( TickType_t ), the TickType_t variables will be accessed in two
 160:.//Libraries/FreeRTOS/Source/event_groups.c **** 		or more reads operations, and the alignment requirements is only that
 161:.//Libraries/FreeRTOS/Source/event_groups.c **** 		of each individual read. */
 162:.//Libraries/FreeRTOS/Source/event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pvPortMalloc( sizeof( EventGroup_t ) ); /*lint !e9087 !e9079 see
 181              		.loc 1 162 3 view .LVU49
 146:.//Libraries/FreeRTOS/Source/event_groups.c **** 	EventGroup_t *pxEventBits;
 182              		.loc 1 146 2 is_stmt 0 view .LVU50
 183 0000 38B5     		push	{r3, r4, r5, lr}
 184              	.LCFI5:
 185              		.cfi_def_cfa_offset 16
 186              		.cfi_offset 3, -16
 187              		.cfi_offset 4, -12
 188              		.cfi_offset 5, -8
 189              		.cfi_offset 14, -4
 190              		.loc 1 162 36 view .LVU51
 191 0002 2020     		movs	r0, #32
 192 0004 FFF7FEFF 		bl	pvPortMalloc
 193              	.LVL6:
 163:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 164:.//Libraries/FreeRTOS/Source/event_groups.c **** 		if( pxEventBits != NULL )
 194              		.loc 1 164 3 is_stmt 1 view .LVU52
 195              		.loc 1 164 5 is_stmt 0 view .LVU53
 196 0008 0446     		mov	r4, r0
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 11


 197 000a 28B1     		cbz	r0, .L10
 165:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 166:.//Libraries/FreeRTOS/Source/event_groups.c **** 			pxEventBits->uxEventBits = 0;
 198              		.loc 1 166 4 is_stmt 1 view .LVU54
 199              		.loc 1 166 29 is_stmt 0 view .LVU55
 200 000c 0025     		movs	r5, #0
 201 000e 40F8045B 		str	r5, [r0], #4
 202              	.LVL7:
 167:.//Libraries/FreeRTOS/Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 203              		.loc 1 167 4 is_stmt 1 view .LVU56
 204 0012 FFF7FEFF 		bl	vListInitialise
 205              	.LVL8:
 168:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 169:.//Libraries/FreeRTOS/Source/event_groups.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 170:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 171:.//Libraries/FreeRTOS/Source/event_groups.c **** 				/* Both static and dynamic allocation can be used, so note this
 172:.//Libraries/FreeRTOS/Source/event_groups.c **** 				event group was allocated statically in case the event group is
 173:.//Libraries/FreeRTOS/Source/event_groups.c **** 				later deleted. */
 174:.//Libraries/FreeRTOS/Source/event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdFALSE;
 206              		.loc 1 174 5 view .LVU57
 207              		.loc 1 174 40 is_stmt 0 view .LVU58
 208 0016 2577     		strb	r5, [r4, #28]
 175:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 176:.//Libraries/FreeRTOS/Source/event_groups.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 177:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 178:.//Libraries/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 209              		.loc 1 178 42 is_stmt 1 view .LVU59
 179:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 180:.//Libraries/FreeRTOS/Source/event_groups.c **** 		else
 181:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 182:.//Libraries/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED(); /*lint !e9063 Else branch only exists to allow tracing and doe
 210              		.loc 1 182 36 view .LVU60
 183:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 184:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 185:.//Libraries/FreeRTOS/Source/event_groups.c **** 		return pxEventBits;
 211              		.loc 1 185 3 view .LVU61
 212              	.L10:
 186:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 213              		.loc 1 186 2 is_stmt 0 view .LVU62
 214 0018 2046     		mov	r0, r4
 215 001a 38BD     		pop	{r3, r4, r5, pc}
 216              		.loc 1 186 2 view .LVU63
 217              		.cfi_endproc
 218              	.LFE5:
 220              		.section	.text.xEventGroupWaitBits,"ax",%progbits
 221              		.align	1
 222              		.p2align 2,,3
 223              		.global	xEventGroupWaitBits
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu fpv5-d16
 229              	xEventGroupWaitBits:
 230              	.LVL9:
 231              	.LFB7:
 187:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 188:.//Libraries/FreeRTOS/Source/event_groups.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 12


 189:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 190:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 191:.//Libraries/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const E
 192:.//Libraries/FreeRTOS/Source/event_groups.c **** {
 193:.//Libraries/FreeRTOS/Source/event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 194:.//Libraries/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 195:.//Libraries/FreeRTOS/Source/event_groups.c **** BaseType_t xAlreadyYielded;
 196:.//Libraries/FreeRTOS/Source/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 197:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 198:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 199:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 200:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 201:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 202:.//Libraries/FreeRTOS/Source/event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 203:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 204:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#endif
 205:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 206:.//Libraries/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 207:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 208:.//Libraries/FreeRTOS/Source/event_groups.c **** 		uxOriginalBitValue = pxEventBits->uxEventBits;
 209:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 210:.//Libraries/FreeRTOS/Source/event_groups.c **** 		( void ) xEventGroupSetBits( xEventGroup, uxBitsToSet );
 211:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 212:.//Libraries/FreeRTOS/Source/event_groups.c **** 		if( ( ( uxOriginalBitValue | uxBitsToSet ) & uxBitsToWaitFor ) == uxBitsToWaitFor )
 213:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 214:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* All the rendezvous bits are now set - no need to block. */
 215:.//Libraries/FreeRTOS/Source/event_groups.c **** 			uxReturn = ( uxOriginalBitValue | uxBitsToSet );
 216:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 217:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* Rendezvous always clear the bits.  They will have been cleared
 218:.//Libraries/FreeRTOS/Source/event_groups.c **** 			already unless this is the only task in the rendezvous. */
 219:.//Libraries/FreeRTOS/Source/event_groups.c **** 			pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 220:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 221:.//Libraries/FreeRTOS/Source/event_groups.c **** 			xTicksToWait = 0;
 222:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 223:.//Libraries/FreeRTOS/Source/event_groups.c **** 		else
 224:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 225:.//Libraries/FreeRTOS/Source/event_groups.c **** 			if( xTicksToWait != ( TickType_t ) 0 )
 226:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 227:.//Libraries/FreeRTOS/Source/event_groups.c **** 				traceEVENT_GROUP_SYNC_BLOCK( xEventGroup, uxBitsToSet, uxBitsToWaitFor );
 228:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 229:.//Libraries/FreeRTOS/Source/event_groups.c **** 				/* Store the bits that the calling task is waiting for in the
 230:.//Libraries/FreeRTOS/Source/event_groups.c **** 				task's event list item so the kernel knows when a match is
 231:.//Libraries/FreeRTOS/Source/event_groups.c **** 				found.  Then enter the blocked state. */
 232:.//Libraries/FreeRTOS/Source/event_groups.c **** 				vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | eve
 233:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 234:.//Libraries/FreeRTOS/Source/event_groups.c **** 				/* This assignment is obsolete as uxReturn will get set after
 235:.//Libraries/FreeRTOS/Source/event_groups.c **** 				the task unblocks, but some compilers mistakenly generate a
 236:.//Libraries/FreeRTOS/Source/event_groups.c **** 				warning about uxReturn being returned without being set if the
 237:.//Libraries/FreeRTOS/Source/event_groups.c **** 				assignment is omitted. */
 238:.//Libraries/FreeRTOS/Source/event_groups.c **** 				uxReturn = 0;
 239:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 240:.//Libraries/FreeRTOS/Source/event_groups.c **** 			else
 241:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 242:.//Libraries/FreeRTOS/Source/event_groups.c **** 				/* The rendezvous bits were not set, but no block time was
 243:.//Libraries/FreeRTOS/Source/event_groups.c **** 				specified - just return the current event bit value. */
 244:.//Libraries/FreeRTOS/Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 245:.//Libraries/FreeRTOS/Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 13


 246:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 247:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 248:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 249:.//Libraries/FreeRTOS/Source/event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 250:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 251:.//Libraries/FreeRTOS/Source/event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 252:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 253:.//Libraries/FreeRTOS/Source/event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 254:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 255:.//Libraries/FreeRTOS/Source/event_groups.c **** 			portYIELD_WITHIN_API();
 256:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 257:.//Libraries/FreeRTOS/Source/event_groups.c **** 		else
 258:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 259:.//Libraries/FreeRTOS/Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 260:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 261:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 262:.//Libraries/FreeRTOS/Source/event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 263:.//Libraries/FreeRTOS/Source/event_groups.c **** 		point either the required bits were set or the block time expired.  If
 264:.//Libraries/FreeRTOS/Source/event_groups.c **** 		the required bits were set they will have been stored in the task's
 265:.//Libraries/FreeRTOS/Source/event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 266:.//Libraries/FreeRTOS/Source/event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 267:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 268:.//Libraries/FreeRTOS/Source/event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 269:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 270:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* The task timed out, just return the current event bit value. */
 271:.//Libraries/FreeRTOS/Source/event_groups.c **** 			taskENTER_CRITICAL();
 272:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 273:.//Libraries/FreeRTOS/Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 274:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 275:.//Libraries/FreeRTOS/Source/event_groups.c **** 				/* Although the task got here because it timed out before the
 276:.//Libraries/FreeRTOS/Source/event_groups.c **** 				bits it was waiting for were set, it is possible that since it
 277:.//Libraries/FreeRTOS/Source/event_groups.c **** 				unblocked another task has set the bits.  If this is the case
 278:.//Libraries/FreeRTOS/Source/event_groups.c **** 				then it needs to clear the bits before exiting. */
 279:.//Libraries/FreeRTOS/Source/event_groups.c **** 				if( ( uxReturn & uxBitsToWaitFor ) == uxBitsToWaitFor )
 280:.//Libraries/FreeRTOS/Source/event_groups.c **** 				{
 281:.//Libraries/FreeRTOS/Source/event_groups.c **** 					pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 282:.//Libraries/FreeRTOS/Source/event_groups.c **** 				}
 283:.//Libraries/FreeRTOS/Source/event_groups.c **** 				else
 284:.//Libraries/FreeRTOS/Source/event_groups.c **** 				{
 285:.//Libraries/FreeRTOS/Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 286:.//Libraries/FreeRTOS/Source/event_groups.c **** 				}
 287:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 288:.//Libraries/FreeRTOS/Source/event_groups.c **** 			taskEXIT_CRITICAL();
 289:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 290:.//Libraries/FreeRTOS/Source/event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 291:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 292:.//Libraries/FreeRTOS/Source/event_groups.c **** 		else
 293:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 294:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* The task unblocked because the bits were set. */
 295:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 296:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 297:.//Libraries/FreeRTOS/Source/event_groups.c **** 		/* Control bits might be set as the task had blocked should not be
 298:.//Libraries/FreeRTOS/Source/event_groups.c **** 		returned. */
 299:.//Libraries/FreeRTOS/Source/event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 300:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 301:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 302:.//Libraries/FreeRTOS/Source/event_groups.c **** 	traceEVENT_GROUP_SYNC_END( xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTimeoutOccurred );
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 14


 303:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 304:.//Libraries/FreeRTOS/Source/event_groups.c **** 	/* Prevent compiler warnings when trace macros are not used. */
 305:.//Libraries/FreeRTOS/Source/event_groups.c **** 	( void ) xTimeoutOccurred;
 306:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 307:.//Libraries/FreeRTOS/Source/event_groups.c **** 	return uxReturn;
 308:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 309:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 310:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 311:.//Libraries/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor,
 312:.//Libraries/FreeRTOS/Source/event_groups.c **** {
 232              		.loc 1 312 1 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ args = 4, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		.loc 1 312 1 is_stmt 0 view .LVU65
 237 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 238              	.LCFI6:
 239              		.cfi_def_cfa_offset 32
 240              		.cfi_offset 4, -32
 241              		.cfi_offset 5, -28
 242              		.cfi_offset 6, -24
 243              		.cfi_offset 7, -20
 244              		.cfi_offset 8, -16
 245              		.cfi_offset 9, -12
 246              		.cfi_offset 10, -8
 247              		.cfi_offset 14, -4
 313:.//Libraries/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 248              		.loc 1 313 1 is_stmt 1 view .LVU66
 249              	.LVL10:
 314:.//Libraries/FreeRTOS/Source/event_groups.c **** EventBits_t uxReturn, uxControlBits = 0;
 250              		.loc 1 314 1 view .LVU67
 315:.//Libraries/FreeRTOS/Source/event_groups.c **** BaseType_t xWaitConditionMet, xAlreadyYielded;
 251              		.loc 1 315 1 view .LVU68
 316:.//Libraries/FreeRTOS/Source/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 252              		.loc 1 316 1 view .LVU69
 317:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 318:.//Libraries/FreeRTOS/Source/event_groups.c **** 	/* Check the user is not attempting to wait on the bits used by the kernel
 319:.//Libraries/FreeRTOS/Source/event_groups.c **** 	itself, and that at least one bit is being requested. */
 320:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( xEventGroup );
 253              		.loc 1 320 2 view .LVU70
 312:.//Libraries/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 254              		.loc 1 312 1 is_stmt 0 view .LVU71
 255 0004 DDF820A0 		ldr	r10, [sp, #32]
 256              		.loc 1 320 2 view .LVU72
 257 0008 B0B1     		cbz	r0, .L47
 258              		.loc 1 320 29 is_stmt 1 discriminator 2 view .LVU73
 321:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 259              		.loc 1 321 2 discriminator 2 view .LVU74
 260 000a 11F07F49 		ands	r9, r1, #-16777216
 261 000e 0C46     		mov	r4, r1
 262 0010 09D1     		bne	.L48
 263              		.loc 1 321 74 discriminator 2 view .LVU75
 322:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 264              		.loc 1 322 2 discriminator 2 view .LVU76
 265 0012 D1B9     		cbnz	r1, .L21
 266              		.loc 1 322 2 view .LVU77
 267              	.LBB64:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 15


 268              	.LBI64:
 191:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 269              		.loc 2 191 30 view .LVU78
 270              	.LBB65:
 193:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 271              		.loc 2 193 1 view .LVU79
 272              		.loc 2 195 2 view .LVU80
 273              		.syntax unified
 274              	@ 195 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 275 0014 4FF05003 			mov r3, #80												
 276 0018 83F31188 		msr basepri, r3											
 277 001c BFF36F8F 		isb														
 278 0020 BFF34F8F 		dsb														
 279              	
 280              	@ 0 "" 2
 281              	.LVL11:
 282              		.thumb
 283              		.syntax unified
 284              	.L22:
 285              		.loc 2 195 2 is_stmt 0 view .LVU81
 286              	.LBE65:
 287              	.LBE64:
 288              		.loc 1 322 2 is_stmt 1 discriminator 3 view .LVU82
 289              		.loc 1 322 2 discriminator 3 view .LVU83
 290              		.loc 1 322 2 discriminator 3 view .LVU84
 291              		.loc 1 322 2 discriminator 3 view .LVU85
 292              		.loc 1 322 2 discriminator 3 view .LVU86
 293              		.loc 1 322 2 discriminator 3 view .LVU87
 294 0024 FEE7     		b	.L22
 295              	.LVL12:
 296              	.L48:
 321:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 297              		.loc 1 321 2 view .LVU88
 298              	.LBB66:
 299              	.LBI66:
 191:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 300              		.loc 2 191 30 view .LVU89
 301              	.LBB67:
 193:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 302              		.loc 2 193 1 view .LVU90
 303              		.loc 2 195 2 view .LVU91
 304              		.syntax unified
 305              	@ 195 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 306 0026 4FF05003 			mov r3, #80												
 307 002a 83F31188 		msr basepri, r3											
 308 002e BFF36F8F 		isb														
 309 0032 BFF34F8F 		dsb														
 310              	
 311              	@ 0 "" 2
 312              	.LVL13:
 313              		.thumb
 314              		.syntax unified
 315              	.L20:
 316              		.loc 2 195 2 is_stmt 0 view .LVU92
 317              	.LBE67:
 318              	.LBE66:
 321:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 16


 319              		.loc 1 321 2 is_stmt 1 discriminator 2 view .LVU93
 321:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 320              		.loc 1 321 2 discriminator 2 view .LVU94
 321:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 321              		.loc 1 321 2 discriminator 2 view .LVU95
 321:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 322              		.loc 1 321 2 discriminator 2 view .LVU96
 321:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 323              		.loc 1 321 2 discriminator 2 view .LVU97
 321:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 324              		.loc 1 321 2 discriminator 2 view .LVU98
 325 0036 FEE7     		b	.L20
 326              	.LVL14:
 327              	.L47:
 320:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 328              		.loc 1 320 2 view .LVU99
 329              	.LBB68:
 330              	.LBI68:
 191:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 331              		.loc 2 191 30 view .LVU100
 332              	.LBB69:
 193:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 333              		.loc 2 193 1 view .LVU101
 334              		.loc 2 195 2 view .LVU102
 335              		.syntax unified
 336              	@ 195 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 337 0038 4FF05003 			mov r3, #80												
 338 003c 83F31188 		msr basepri, r3											
 339 0040 BFF36F8F 		isb														
 340 0044 BFF34F8F 		dsb														
 341              	
 342              	@ 0 "" 2
 343              	.LVL15:
 344              		.thumb
 345              		.syntax unified
 346              	.L18:
 347              		.loc 2 195 2 is_stmt 0 view .LVU103
 348              	.LBE69:
 349              	.LBE68:
 320:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 350              		.loc 1 320 2 is_stmt 1 discriminator 1 view .LVU104
 320:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 351              		.loc 1 320 2 discriminator 1 view .LVU105
 320:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 352              		.loc 1 320 2 discriminator 1 view .LVU106
 320:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 353              		.loc 1 320 2 discriminator 1 view .LVU107
 320:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 354              		.loc 1 320 2 discriminator 1 view .LVU108
 320:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 355              		.loc 1 320 2 discriminator 1 view .LVU109
 356 0048 FEE7     		b	.L18
 357              	.LVL16:
 358              	.L21:
 359              		.loc 1 322 38 discriminator 2 view .LVU110
 323:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 324:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 17


 325:.//Libraries/FreeRTOS/Source/event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 360              		.loc 1 325 3 discriminator 2 view .LVU111
 361 004a 0646     		mov	r6, r0
 362 004c 1746     		mov	r7, r2
 363 004e 9846     		mov	r8, r3
 364 0050 FFF7FEFF 		bl	xTaskGetSchedulerState
 365              	.LVL17:
 366              		.loc 1 325 3 is_stmt 0 discriminator 2 view .LVU112
 367 0054 58B9     		cbnz	r0, .L23
 368              		.loc 1 325 3 discriminator 2 view .LVU113
 369 0056 BAF1000F 		cmp	r10, #0
 370 005a 08D0     		beq	.L23
 371              		.loc 1 325 3 is_stmt 1 view .LVU114
 372              	.LBB70:
 373              	.LBI70:
 191:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 374              		.loc 2 191 30 view .LVU115
 375              	.LBB71:
 193:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 376              		.loc 2 193 1 view .LVU116
 377              		.loc 2 195 2 view .LVU117
 378              		.syntax unified
 379              	@ 195 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 380 005c 4FF05003 			mov r3, #80												
 381 0060 83F31188 		msr basepri, r3											
 382 0064 BFF36F8F 		isb														
 383 0068 BFF34F8F 		dsb														
 384              	
 385              	@ 0 "" 2
 386              	.LVL18:
 387              		.thumb
 388              		.syntax unified
 389              	.L24:
 390              		.loc 2 195 2 is_stmt 0 view .LVU118
 391              	.LBE71:
 392              	.LBE70:
 393              		.loc 1 325 3 is_stmt 1 discriminator 4 view .LVU119
 394              		.loc 1 325 3 discriminator 4 view .LVU120
 395              		.loc 1 325 3 discriminator 4 view .LVU121
 396              		.loc 1 325 3 discriminator 4 view .LVU122
 397              		.loc 1 325 3 discriminator 4 view .LVU123
 398              		.loc 1 325 3 discriminator 4 view .LVU124
 399 006c FEE7     		b	.L24
 400              	.L23:
 401              		.loc 1 325 104 discriminator 8 view .LVU125
 326:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 327:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#endif
 328:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 329:.//Libraries/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 402              		.loc 1 329 2 discriminator 8 view .LVU126
 403 006e FFF7FEFF 		bl	vTaskSuspendAll
 404              	.LVL19:
 405              	.LBB72:
 330:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 331:.//Libraries/FreeRTOS/Source/event_groups.c **** 		const EventBits_t uxCurrentEventBits = pxEventBits->uxEventBits;
 406              		.loc 1 331 3 discriminator 8 view .LVU127
 407              		.loc 1 331 21 is_stmt 0 discriminator 8 view .LVU128
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 18


 408 0072 3568     		ldr	r5, [r6]
 409              	.LVL20:
 332:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 333:.//Libraries/FreeRTOS/Source/event_groups.c **** 		/* Check to see if the wait condition is already met or not. */
 334:.//Libraries/FreeRTOS/Source/event_groups.c **** 		xWaitConditionMet = prvTestWaitCondition( uxCurrentEventBits, uxBitsToWaitFor, xWaitForAllBits );
 410              		.loc 1 334 3 is_stmt 1 discriminator 8 view .LVU129
 411              	.LBB73:
 412              	.LBI73:
 335:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 336:.//Libraries/FreeRTOS/Source/event_groups.c **** 		if( xWaitConditionMet != pdFALSE )
 337:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 338:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* The wait condition has already been met so there is no need to
 339:.//Libraries/FreeRTOS/Source/event_groups.c **** 			block. */
 340:.//Libraries/FreeRTOS/Source/event_groups.c **** 			uxReturn = uxCurrentEventBits;
 341:.//Libraries/FreeRTOS/Source/event_groups.c **** 			xTicksToWait = ( TickType_t ) 0;
 342:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 343:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* Clear the wait bits if requested to do so. */
 344:.//Libraries/FreeRTOS/Source/event_groups.c **** 			if( xClearOnExit != pdFALSE )
 345:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 346:.//Libraries/FreeRTOS/Source/event_groups.c **** 				pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 347:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 348:.//Libraries/FreeRTOS/Source/event_groups.c **** 			else
 349:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 350:.//Libraries/FreeRTOS/Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 351:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 352:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 353:.//Libraries/FreeRTOS/Source/event_groups.c **** 		else if( xTicksToWait == ( TickType_t ) 0 )
 354:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 355:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* The wait condition has not been met, but no block time was
 356:.//Libraries/FreeRTOS/Source/event_groups.c **** 			specified, so just return the current value. */
 357:.//Libraries/FreeRTOS/Source/event_groups.c **** 			uxReturn = uxCurrentEventBits;
 358:.//Libraries/FreeRTOS/Source/event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 359:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 360:.//Libraries/FreeRTOS/Source/event_groups.c **** 		else
 361:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 362:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* The task is going to block to wait for its required bits to be
 363:.//Libraries/FreeRTOS/Source/event_groups.c **** 			set.  uxControlBits are used to remember the specified behaviour of
 364:.//Libraries/FreeRTOS/Source/event_groups.c **** 			this call to xEventGroupWaitBits() - for use when the event bits
 365:.//Libraries/FreeRTOS/Source/event_groups.c **** 			unblock the task. */
 366:.//Libraries/FreeRTOS/Source/event_groups.c **** 			if( xClearOnExit != pdFALSE )
 367:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 368:.//Libraries/FreeRTOS/Source/event_groups.c **** 				uxControlBits |= eventCLEAR_EVENTS_ON_EXIT_BIT;
 369:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 370:.//Libraries/FreeRTOS/Source/event_groups.c **** 			else
 371:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 372:.//Libraries/FreeRTOS/Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 373:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 374:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 375:.//Libraries/FreeRTOS/Source/event_groups.c **** 			if( xWaitForAllBits != pdFALSE )
 376:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 377:.//Libraries/FreeRTOS/Source/event_groups.c **** 				uxControlBits |= eventWAIT_FOR_ALL_BITS;
 378:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 379:.//Libraries/FreeRTOS/Source/event_groups.c **** 			else
 380:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 381:.//Libraries/FreeRTOS/Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 382:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 383:.//Libraries/FreeRTOS/Source/event_groups.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 19


 384:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* Store the bits that the calling task is waiting for in the
 385:.//Libraries/FreeRTOS/Source/event_groups.c **** 			task's event list item so the kernel knows when a match is
 386:.//Libraries/FreeRTOS/Source/event_groups.c **** 			found.  Then enter the blocked state. */
 387:.//Libraries/FreeRTOS/Source/event_groups.c **** 			vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | uxCo
 388:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 389:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* This is obsolete as it will get set after the task unblocks, but
 390:.//Libraries/FreeRTOS/Source/event_groups.c **** 			some compilers mistakenly generate a warning about the variable
 391:.//Libraries/FreeRTOS/Source/event_groups.c **** 			being returned without being set if it is not done. */
 392:.//Libraries/FreeRTOS/Source/event_groups.c **** 			uxReturn = 0;
 393:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 394:.//Libraries/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_WAIT_BITS_BLOCK( xEventGroup, uxBitsToWaitFor );
 395:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 396:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 397:.//Libraries/FreeRTOS/Source/event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 398:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 399:.//Libraries/FreeRTOS/Source/event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 400:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 401:.//Libraries/FreeRTOS/Source/event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 402:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 403:.//Libraries/FreeRTOS/Source/event_groups.c **** 			portYIELD_WITHIN_API();
 404:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 405:.//Libraries/FreeRTOS/Source/event_groups.c **** 		else
 406:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 407:.//Libraries/FreeRTOS/Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 408:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 409:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 410:.//Libraries/FreeRTOS/Source/event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 411:.//Libraries/FreeRTOS/Source/event_groups.c **** 		point either the required bits were set or the block time expired.  If
 412:.//Libraries/FreeRTOS/Source/event_groups.c **** 		the required bits were set they will have been stored in the task's
 413:.//Libraries/FreeRTOS/Source/event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 414:.//Libraries/FreeRTOS/Source/event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 415:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 416:.//Libraries/FreeRTOS/Source/event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 417:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 418:.//Libraries/FreeRTOS/Source/event_groups.c **** 			taskENTER_CRITICAL();
 419:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 420:.//Libraries/FreeRTOS/Source/event_groups.c **** 				/* The task timed out, just return the current event bit value. */
 421:.//Libraries/FreeRTOS/Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 422:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 423:.//Libraries/FreeRTOS/Source/event_groups.c **** 				/* It is possible that the event bits were updated between this
 424:.//Libraries/FreeRTOS/Source/event_groups.c **** 				task leaving the Blocked state and running again. */
 425:.//Libraries/FreeRTOS/Source/event_groups.c **** 				if( prvTestWaitCondition( uxReturn, uxBitsToWaitFor, xWaitForAllBits ) != pdFALSE )
 426:.//Libraries/FreeRTOS/Source/event_groups.c **** 				{
 427:.//Libraries/FreeRTOS/Source/event_groups.c **** 					if( xClearOnExit != pdFALSE )
 428:.//Libraries/FreeRTOS/Source/event_groups.c **** 					{
 429:.//Libraries/FreeRTOS/Source/event_groups.c **** 						pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 430:.//Libraries/FreeRTOS/Source/event_groups.c **** 					}
 431:.//Libraries/FreeRTOS/Source/event_groups.c **** 					else
 432:.//Libraries/FreeRTOS/Source/event_groups.c **** 					{
 433:.//Libraries/FreeRTOS/Source/event_groups.c **** 						mtCOVERAGE_TEST_MARKER();
 434:.//Libraries/FreeRTOS/Source/event_groups.c **** 					}
 435:.//Libraries/FreeRTOS/Source/event_groups.c **** 				}
 436:.//Libraries/FreeRTOS/Source/event_groups.c **** 				else
 437:.//Libraries/FreeRTOS/Source/event_groups.c **** 				{
 438:.//Libraries/FreeRTOS/Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 439:.//Libraries/FreeRTOS/Source/event_groups.c **** 				}
 440:.//Libraries/FreeRTOS/Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 20


 441:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 442:.//Libraries/FreeRTOS/Source/event_groups.c **** 			taskEXIT_CRITICAL();
 443:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 444:.//Libraries/FreeRTOS/Source/event_groups.c **** 		else
 445:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 446:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* The task unblocked because the bits were set. */
 447:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 448:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 449:.//Libraries/FreeRTOS/Source/event_groups.c **** 		/* The task blocked so control bits may have been set. */
 450:.//Libraries/FreeRTOS/Source/event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 451:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 452:.//Libraries/FreeRTOS/Source/event_groups.c **** 	traceEVENT_GROUP_WAIT_BITS_END( xEventGroup, uxBitsToWaitFor, xTimeoutOccurred );
 453:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 454:.//Libraries/FreeRTOS/Source/event_groups.c **** 	/* Prevent compiler warnings when trace macros are not used. */
 455:.//Libraries/FreeRTOS/Source/event_groups.c **** 	( void ) xTimeoutOccurred;
 456:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 457:.//Libraries/FreeRTOS/Source/event_groups.c **** 	return uxReturn;
 458:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 459:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 460:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 461:.//Libraries/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupClearBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear )
 462:.//Libraries/FreeRTOS/Source/event_groups.c **** {
 463:.//Libraries/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 464:.//Libraries/FreeRTOS/Source/event_groups.c **** EventBits_t uxReturn;
 465:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 466:.//Libraries/FreeRTOS/Source/event_groups.c **** 	/* Check the user is not attempting to clear the bits used by the kernel
 467:.//Libraries/FreeRTOS/Source/event_groups.c **** 	itself. */
 468:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( xEventGroup );
 469:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 470:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 471:.//Libraries/FreeRTOS/Source/event_groups.c **** 	taskENTER_CRITICAL();
 472:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 473:.//Libraries/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS( xEventGroup, uxBitsToClear );
 474:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 475:.//Libraries/FreeRTOS/Source/event_groups.c **** 		/* The value returned is the event group value prior to the bits being
 476:.//Libraries/FreeRTOS/Source/event_groups.c **** 		cleared. */
 477:.//Libraries/FreeRTOS/Source/event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 478:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 479:.//Libraries/FreeRTOS/Source/event_groups.c **** 		/* Clear the bits. */
 480:.//Libraries/FreeRTOS/Source/event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 481:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 482:.//Libraries/FreeRTOS/Source/event_groups.c **** 	taskEXIT_CRITICAL();
 483:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 484:.//Libraries/FreeRTOS/Source/event_groups.c **** 	return uxReturn;
 485:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 486:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 487:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 488:.//Libraries/FreeRTOS/Source/event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 489:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 490:.//Libraries/FreeRTOS/Source/event_groups.c **** 	BaseType_t xEventGroupClearBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsTo
 491:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 492:.//Libraries/FreeRTOS/Source/event_groups.c **** 		BaseType_t xReturn;
 493:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 494:.//Libraries/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS_FROM_ISR( xEventGroup, uxBitsToClear );
 495:.//Libraries/FreeRTOS/Source/event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGroup, ( 
 496:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 497:.//Libraries/FreeRTOS/Source/event_groups.c **** 		return xReturn;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 21


 498:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 499:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 500:.//Libraries/FreeRTOS/Source/event_groups.c **** #endif
 501:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 502:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 503:.//Libraries/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupGetBitsFromISR( EventGroupHandle_t xEventGroup )
 504:.//Libraries/FreeRTOS/Source/event_groups.c **** {
 505:.//Libraries/FreeRTOS/Source/event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 506:.//Libraries/FreeRTOS/Source/event_groups.c **** EventGroup_t const * const pxEventBits = xEventGroup;
 507:.//Libraries/FreeRTOS/Source/event_groups.c **** EventBits_t uxReturn;
 508:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 509:.//Libraries/FreeRTOS/Source/event_groups.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 510:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 511:.//Libraries/FreeRTOS/Source/event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 512:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 513:.//Libraries/FreeRTOS/Source/event_groups.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 514:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 515:.//Libraries/FreeRTOS/Source/event_groups.c **** 	return uxReturn;
 516:.//Libraries/FreeRTOS/Source/event_groups.c **** } /*lint !e818 EventGroupHandle_t is a typedef used in other functions to so can't be pointer to co
 517:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 518:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 519:.//Libraries/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )
 520:.//Libraries/FreeRTOS/Source/event_groups.c **** {
 521:.//Libraries/FreeRTOS/Source/event_groups.c **** ListItem_t *pxListItem, *pxNext;
 522:.//Libraries/FreeRTOS/Source/event_groups.c **** ListItem_t const *pxListEnd;
 523:.//Libraries/FreeRTOS/Source/event_groups.c **** List_t const * pxList;
 524:.//Libraries/FreeRTOS/Source/event_groups.c **** EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
 525:.//Libraries/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 526:.//Libraries/FreeRTOS/Source/event_groups.c **** BaseType_t xMatchFound = pdFALSE;
 527:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 528:.//Libraries/FreeRTOS/Source/event_groups.c **** 	/* Check the user is not attempting to set the bits used by the kernel
 529:.//Libraries/FreeRTOS/Source/event_groups.c **** 	itself. */
 530:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( xEventGroup );
 531:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 532:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 533:.//Libraries/FreeRTOS/Source/event_groups.c **** 	pxList = &( pxEventBits->xTasksWaitingForBits );
 534:.//Libraries/FreeRTOS/Source/event_groups.c **** 	pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 !e9087 The mini list structure is use
 535:.//Libraries/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 536:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 537:.//Libraries/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_SET_BITS( xEventGroup, uxBitsToSet );
 538:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 539:.//Libraries/FreeRTOS/Source/event_groups.c **** 		pxListItem = listGET_HEAD_ENTRY( pxList );
 540:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 541:.//Libraries/FreeRTOS/Source/event_groups.c **** 		/* Set the bits. */
 542:.//Libraries/FreeRTOS/Source/event_groups.c **** 		pxEventBits->uxEventBits |= uxBitsToSet;
 543:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 544:.//Libraries/FreeRTOS/Source/event_groups.c **** 		/* See if the new bit value should unblock any tasks. */
 545:.//Libraries/FreeRTOS/Source/event_groups.c **** 		while( pxListItem != pxListEnd )
 546:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 547:.//Libraries/FreeRTOS/Source/event_groups.c **** 			pxNext = listGET_NEXT( pxListItem );
 548:.//Libraries/FreeRTOS/Source/event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 549:.//Libraries/FreeRTOS/Source/event_groups.c **** 			xMatchFound = pdFALSE;
 550:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 551:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* Split the bits waited for from the control bits. */
 552:.//Libraries/FreeRTOS/Source/event_groups.c **** 			uxControlBits = uxBitsWaitedFor & eventEVENT_BITS_CONTROL_BYTES;
 553:.//Libraries/FreeRTOS/Source/event_groups.c **** 			uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
 554:.//Libraries/FreeRTOS/Source/event_groups.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 22


 555:.//Libraries/FreeRTOS/Source/event_groups.c **** 			if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
 556:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 557:.//Libraries/FreeRTOS/Source/event_groups.c **** 				/* Just looking for single bit being set. */
 558:.//Libraries/FreeRTOS/Source/event_groups.c **** 				if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
 559:.//Libraries/FreeRTOS/Source/event_groups.c **** 				{
 560:.//Libraries/FreeRTOS/Source/event_groups.c **** 					xMatchFound = pdTRUE;
 561:.//Libraries/FreeRTOS/Source/event_groups.c **** 				}
 562:.//Libraries/FreeRTOS/Source/event_groups.c **** 				else
 563:.//Libraries/FreeRTOS/Source/event_groups.c **** 				{
 564:.//Libraries/FreeRTOS/Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 565:.//Libraries/FreeRTOS/Source/event_groups.c **** 				}
 566:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 567:.//Libraries/FreeRTOS/Source/event_groups.c **** 			else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
 568:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 569:.//Libraries/FreeRTOS/Source/event_groups.c **** 				/* All bits are set. */
 570:.//Libraries/FreeRTOS/Source/event_groups.c **** 				xMatchFound = pdTRUE;
 571:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 572:.//Libraries/FreeRTOS/Source/event_groups.c **** 			else
 573:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 574:.//Libraries/FreeRTOS/Source/event_groups.c **** 				/* Need all bits to be set, but not all the bits were set. */
 575:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 576:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 577:.//Libraries/FreeRTOS/Source/event_groups.c **** 			if( xMatchFound != pdFALSE )
 578:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 579:.//Libraries/FreeRTOS/Source/event_groups.c **** 				/* The bits match.  Should the bits be cleared on exit? */
 580:.//Libraries/FreeRTOS/Source/event_groups.c **** 				if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
 581:.//Libraries/FreeRTOS/Source/event_groups.c **** 				{
 582:.//Libraries/FreeRTOS/Source/event_groups.c **** 					uxBitsToClear |= uxBitsWaitedFor;
 583:.//Libraries/FreeRTOS/Source/event_groups.c **** 				}
 584:.//Libraries/FreeRTOS/Source/event_groups.c **** 				else
 585:.//Libraries/FreeRTOS/Source/event_groups.c **** 				{
 586:.//Libraries/FreeRTOS/Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 587:.//Libraries/FreeRTOS/Source/event_groups.c **** 				}
 588:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 589:.//Libraries/FreeRTOS/Source/event_groups.c **** 				/* Store the actual event flag value in the task's event list
 590:.//Libraries/FreeRTOS/Source/event_groups.c **** 				item before removing the task from the event list.  The
 591:.//Libraries/FreeRTOS/Source/event_groups.c **** 				eventUNBLOCKED_DUE_TO_BIT_SET bit is set so the task knows
 592:.//Libraries/FreeRTOS/Source/event_groups.c **** 				that is was unblocked due to its required bits matching, rather
 593:.//Libraries/FreeRTOS/Source/event_groups.c **** 				than because it timed out. */
 594:.//Libraries/FreeRTOS/Source/event_groups.c **** 				vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCKED_DUE_TO
 595:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 596:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 597:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* Move onto the next list item.  Note pxListItem->pxNext is not
 598:.//Libraries/FreeRTOS/Source/event_groups.c **** 			used here as the list item may have been removed from the event list
 599:.//Libraries/FreeRTOS/Source/event_groups.c **** 			and inserted into the ready/pending reading list. */
 600:.//Libraries/FreeRTOS/Source/event_groups.c **** 			pxListItem = pxNext;
 601:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 602:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 603:.//Libraries/FreeRTOS/Source/event_groups.c **** 		/* Clear any bits that matched when the eventCLEAR_EVENTS_ON_EXIT_BIT
 604:.//Libraries/FreeRTOS/Source/event_groups.c **** 		bit was set in the control word. */
 605:.//Libraries/FreeRTOS/Source/event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 606:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 607:.//Libraries/FreeRTOS/Source/event_groups.c **** 	( void ) xTaskResumeAll();
 608:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 609:.//Libraries/FreeRTOS/Source/event_groups.c **** 	return pxEventBits->uxEventBits;
 610:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 611:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 23


 612:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 613:.//Libraries/FreeRTOS/Source/event_groups.c **** void vEventGroupDelete( EventGroupHandle_t xEventGroup )
 614:.//Libraries/FreeRTOS/Source/event_groups.c **** {
 615:.//Libraries/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 616:.//Libraries/FreeRTOS/Source/event_groups.c **** const List_t *pxTasksWaitingForBits = &( pxEventBits->xTasksWaitingForBits );
 617:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 618:.//Libraries/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 619:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 620:.//Libraries/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_DELETE( xEventGroup );
 621:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 622:.//Libraries/FreeRTOS/Source/event_groups.c **** 		while( listCURRENT_LIST_LENGTH( pxTasksWaitingForBits ) > ( UBaseType_t ) 0 )
 623:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 624:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* Unblock the task, returning 0 as the event list is being deleted
 625:.//Libraries/FreeRTOS/Source/event_groups.c **** 			and cannot therefore have any bits set. */
 626:.//Libraries/FreeRTOS/Source/event_groups.c **** 			configASSERT( pxTasksWaitingForBits->xListEnd.pxNext != ( const ListItem_t * ) &( pxTasksWaiting
 627:.//Libraries/FreeRTOS/Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 628:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 629:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 630:.//Libraries/FreeRTOS/Source/event_groups.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 631:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 632:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* The event group can only have been allocated dynamically - free
 633:.//Libraries/FreeRTOS/Source/event_groups.c **** 			it again. */
 634:.//Libraries/FreeRTOS/Source/event_groups.c **** 			vPortFree( pxEventBits );
 635:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 636:.//Libraries/FreeRTOS/Source/event_groups.c **** 		#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 637:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 638:.//Libraries/FreeRTOS/Source/event_groups.c **** 			/* The event group could have been allocated statically or
 639:.//Libraries/FreeRTOS/Source/event_groups.c **** 			dynamically, so check before attempting to free the memory. */
 640:.//Libraries/FreeRTOS/Source/event_groups.c **** 			if( pxEventBits->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 641:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 642:.//Libraries/FreeRTOS/Source/event_groups.c **** 				vPortFree( pxEventBits );
 643:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 644:.//Libraries/FreeRTOS/Source/event_groups.c **** 			else
 645:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 646:.//Libraries/FreeRTOS/Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 647:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 648:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 649:.//Libraries/FreeRTOS/Source/event_groups.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 650:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 651:.//Libraries/FreeRTOS/Source/event_groups.c **** 	( void ) xTaskResumeAll();
 652:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 653:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 654:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 655:.//Libraries/FreeRTOS/Source/event_groups.c **** /* For internal use only - execute a 'set bits' command that was pended from
 656:.//Libraries/FreeRTOS/Source/event_groups.c **** an interrupt. */
 657:.//Libraries/FreeRTOS/Source/event_groups.c **** void vEventGroupSetBitsCallback( void *pvEventGroup, const uint32_t ulBitsToSet )
 658:.//Libraries/FreeRTOS/Source/event_groups.c **** {
 659:.//Libraries/FreeRTOS/Source/event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet ); /*lint !e9079 Can't avoi
 660:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 661:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 662:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 663:.//Libraries/FreeRTOS/Source/event_groups.c **** /* For internal use only - execute a 'clear bits' command that was pended from
 664:.//Libraries/FreeRTOS/Source/event_groups.c **** an interrupt. */
 665:.//Libraries/FreeRTOS/Source/event_groups.c **** void vEventGroupClearBitsCallback( void *pvEventGroup, const uint32_t ulBitsToClear )
 666:.//Libraries/FreeRTOS/Source/event_groups.c **** {
 667:.//Libraries/FreeRTOS/Source/event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear ); /*lint !e9079 Can't 
 668:.//Libraries/FreeRTOS/Source/event_groups.c **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 24


 669:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 670:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 671:.//Libraries/FreeRTOS/Source/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
 413              		.loc 1 671 19 discriminator 8 view .LVU130
 414              	.LBB74:
 672:.//Libraries/FreeRTOS/Source/event_groups.c **** {
 673:.//Libraries/FreeRTOS/Source/event_groups.c **** BaseType_t xWaitConditionMet = pdFALSE;
 415              		.loc 1 673 1 discriminator 8 view .LVU131
 674:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 675:.//Libraries/FreeRTOS/Source/event_groups.c **** 	if( xWaitForAllBits == pdFALSE )
 416              		.loc 1 675 2 discriminator 8 view .LVU132
 417              		.loc 1 675 4 is_stmt 0 discriminator 8 view .LVU133
 418 0074 B8F1000F 		cmp	r8, #0
 419 0078 28D1     		bne	.L25
 676:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 677:.//Libraries/FreeRTOS/Source/event_groups.c **** 		/* Task only has to wait for one bit within uxBitsToWaitFor to be
 678:.//Libraries/FreeRTOS/Source/event_groups.c **** 		set.  Is one already set? */
 679:.//Libraries/FreeRTOS/Source/event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
 420              		.loc 1 679 3 is_stmt 1 view .LVU134
 421              		.loc 1 679 5 is_stmt 0 view .LVU135
 422 007a 2C42     		tst	r4, r5
 423 007c 29D1     		bne	.L26
 424              	.L27:
 425              	.LVL21:
 426              		.loc 1 679 5 view .LVU136
 427              	.LBE74:
 428              	.LBE73:
 353:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 429              		.loc 1 353 8 is_stmt 1 view .LVU137
 353:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 430              		.loc 1 353 10 is_stmt 0 view .LVU138
 431 007e BAF1000F 		cmp	r10, #0
 432 0082 2DD0     		beq	.L30
 366:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 433              		.loc 1 366 4 is_stmt 1 view .LVU139
 368:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 434              		.loc 1 368 19 is_stmt 0 view .LVU140
 435 0084 002F     		cmp	r7, #0
 436 0086 18BF     		it	ne
 437 0088 4FF08079 		movne	r9, #16777216
 438              	.LVL22:
 372:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 439              		.loc 1 372 29 is_stmt 1 view .LVU141
 375:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 440              		.loc 1 375 4 view .LVU142
 375:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 441              		.loc 1 375 6 is_stmt 0 view .LVU143
 442 008c B8F1000F 		cmp	r8, #0
 443 0090 01D0     		beq	.L32
 377:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 444              		.loc 1 377 5 is_stmt 1 view .LVU144
 377:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 445              		.loc 1 377 19 is_stmt 0 view .LVU145
 446 0092 49F08069 		orr	r9, r9, #67108864
 447              	.LVL23:
 448              	.L32:
 381:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 25


 449              		.loc 1 381 29 is_stmt 1 view .LVU146
 387:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 450              		.loc 1 387 4 view .LVU147
 451 0096 5246     		mov	r2, r10
 452 0098 49EA0401 		orr	r1, r9, r4
 453 009c 301D     		adds	r0, r6, #4
 454 009e FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 455              	.LVL24:
 392:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 456              		.loc 1 392 4 view .LVU148
 394:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 457              		.loc 1 394 68 view .LVU149
 458              	.LBE72:
 397:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 459              		.loc 1 397 2 view .LVU150
 397:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 460              		.loc 1 397 20 is_stmt 0 view .LVU151
 461 00a2 FFF7FEFF 		bl	xTaskResumeAll
 462              	.LVL25:
 399:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 463              		.loc 1 399 2 is_stmt 1 view .LVU152
 401:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 464              		.loc 1 401 3 view .LVU153
 401:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 465              		.loc 1 401 5 is_stmt 0 view .LVU154
 466 00a6 38B9     		cbnz	r0, .L33
 403:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 467              		.loc 1 403 4 is_stmt 1 view .LVU155
 468 00a8 184B     		ldr	r3, .L50
 469 00aa 4FF08052 		mov	r2, #268435456
 470 00ae 1A60     		str	r2, [r3]
 403:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 471              		.loc 1 403 4 view .LVU156
 472              		.syntax unified
 473              	@ 403 ".//Libraries/FreeRTOS/Source/event_groups.c" 1
 474 00b0 BFF34F8F 		dsb
 475              	@ 0 "" 2
 403:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 476              		.loc 1 403 4 view .LVU157
 477              	@ 403 ".//Libraries/FreeRTOS/Source/event_groups.c" 1
 478 00b4 BFF36F8F 		isb
 479              	@ 0 "" 2
 403:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 480              		.loc 1 403 26 view .LVU158
 481              		.thumb
 482              		.syntax unified
 483              	.L33:
 407:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 484              		.loc 1 407 28 view .LVU159
 414:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 485              		.loc 1 414 3 view .LVU160
 414:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 486              		.loc 1 414 14 is_stmt 0 view .LVU161
 487 00b8 FFF7FEFF 		bl	uxTaskResetEventItemValue
 488              	.LVL26:
 416:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 489              		.loc 1 416 5 view .LVU162
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 26


 490 00bc 8301     		lsls	r3, r0, #6
 414:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 491              		.loc 1 414 14 view .LVU163
 492 00be 0546     		mov	r5, r0
 493              	.LVL27:
 416:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 494              		.loc 1 416 3 is_stmt 1 view .LVU164
 416:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 495              		.loc 1 416 5 is_stmt 0 view .LVU165
 496 00c0 11D5     		bpl	.L49
 497              	.LVL28:
 498              	.L34:
 447:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 499              		.loc 1 447 3 is_stmt 1 view .LVU166
 450:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 500              		.loc 1 450 3 view .LVU167
 450:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 501              		.loc 1 450 12 is_stmt 0 view .LVU168
 502 00c2 25F07F45 		bic	r5, r5, #-16777216
 503              	.LVL29:
 452:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 504              		.loc 1 452 2 is_stmt 1 view .LVU169
 455:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 505              		.loc 1 455 2 view .LVU170
 457:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 506              		.loc 1 457 2 view .LVU171
 507              	.L16:
 458:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 508              		.loc 1 458 1 is_stmt 0 view .LVU172
 509 00c6 2846     		mov	r0, r5
 510 00c8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 511              	.LVL30:
 512              	.L25:
 513              	.LBB77:
 514              	.LBB76:
 515              	.LBB75:
 680:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 681:.//Libraries/FreeRTOS/Source/event_groups.c **** 			xWaitConditionMet = pdTRUE;
 682:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 683:.//Libraries/FreeRTOS/Source/event_groups.c **** 		else
 684:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 685:.//Libraries/FreeRTOS/Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 686:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 687:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 688:.//Libraries/FreeRTOS/Source/event_groups.c **** 	else
 689:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 690:.//Libraries/FreeRTOS/Source/event_groups.c **** 		/* Task has to wait for all the bits in uxBitsToWaitFor to be set.
 691:.//Libraries/FreeRTOS/Source/event_groups.c **** 		Are they set already? */
 692:.//Libraries/FreeRTOS/Source/event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
 516              		.loc 1 692 3 is_stmt 1 view .LVU173
 517              		.loc 1 692 5 is_stmt 0 view .LVU174
 518 00cc 34EA0503 		bics	r3, r4, r5
 519 00d0 D5D1     		bne	.L27
 520              	.L26:
 521              	.LVL31:
 522              		.loc 1 692 5 view .LVU175
 523              	.LBE75:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 27


 524              	.LBE76:
 340:.//Libraries/FreeRTOS/Source/event_groups.c **** 			xTicksToWait = ( TickType_t ) 0;
 525              		.loc 1 340 4 is_stmt 1 view .LVU176
 341:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 526              		.loc 1 341 4 view .LVU177
 344:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 527              		.loc 1 344 4 view .LVU178
 344:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 528              		.loc 1 344 6 is_stmt 0 view .LVU179
 529 00d2 2FB1     		cbz	r7, .L30
 346:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 530              		.loc 1 346 5 is_stmt 1 view .LVU180
 346:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 531              		.loc 1 346 30 is_stmt 0 view .LVU181
 532 00d4 25EA0404 		bic	r4, r5, r4
 533              	.LVL32:
 346:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 534              		.loc 1 346 30 view .LVU182
 535 00d8 3460     		str	r4, [r6]
 536              	.LVL33:
 394:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 537              		.loc 1 394 68 is_stmt 1 view .LVU183
 538              	.LBE77:
 397:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 539              		.loc 1 397 2 view .LVU184
 397:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 540              		.loc 1 397 20 is_stmt 0 view .LVU185
 541 00da FFF7FEFF 		bl	xTaskResumeAll
 542              	.LVL34:
 399:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 543              		.loc 1 399 2 is_stmt 1 view .LVU186
 544 00de F2E7     		b	.L16
 545              	.LVL35:
 546              	.L30:
 547              	.LBB78:
 394:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 548              		.loc 1 394 68 view .LVU187
 549              	.LBE78:
 397:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 550              		.loc 1 397 2 view .LVU188
 397:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 551              		.loc 1 397 20 is_stmt 0 view .LVU189
 552 00e0 FFF7FEFF 		bl	xTaskResumeAll
 553              	.LVL36:
 399:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 554              		.loc 1 399 2 is_stmt 1 view .LVU190
 555 00e4 EFE7     		b	.L16
 556              	.LVL37:
 557              	.L49:
 418:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 558              		.loc 1 418 4 view .LVU191
 559 00e6 FFF7FEFF 		bl	vPortEnterCritical
 560              	.LVL38:
 421:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 561              		.loc 1 421 5 view .LVU192
 421:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 562              		.loc 1 421 14 is_stmt 0 view .LVU193
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 28


 563 00ea 3568     		ldr	r5, [r6]
 564              	.LVL39:
 425:.//Libraries/FreeRTOS/Source/event_groups.c **** 				{
 565              		.loc 1 425 5 is_stmt 1 view .LVU194
 566              	.LBB79:
 567              	.LBI79:
 671:.//Libraries/FreeRTOS/Source/event_groups.c **** {
 568              		.loc 1 671 19 view .LVU195
 569              	.LBB80:
 673:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 570              		.loc 1 673 1 view .LVU196
 675:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 571              		.loc 1 675 2 view .LVU197
 675:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 572              		.loc 1 675 4 is_stmt 0 view .LVU198
 573 00ec B8F1000F 		cmp	r8, #0
 574 00f0 06D1     		bne	.L35
 679:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 575              		.loc 1 679 3 is_stmt 1 view .LVU199
 679:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 576              		.loc 1 679 5 is_stmt 0 view .LVU200
 577 00f2 2C42     		tst	r4, r5
 578 00f4 07D0     		beq	.L37
 579              	.L36:
 580              	.LVL40:
 679:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 581              		.loc 1 679 5 view .LVU201
 582              	.LBE80:
 583              	.LBE79:
 427:.//Libraries/FreeRTOS/Source/event_groups.c **** 					{
 584              		.loc 1 427 6 is_stmt 1 view .LVU202
 427:.//Libraries/FreeRTOS/Source/event_groups.c **** 					{
 585              		.loc 1 427 8 is_stmt 0 view .LVU203
 586 00f6 37B1     		cbz	r7, .L37
 429:.//Libraries/FreeRTOS/Source/event_groups.c **** 					}
 587              		.loc 1 429 7 is_stmt 1 view .LVU204
 429:.//Libraries/FreeRTOS/Source/event_groups.c **** 					}
 588              		.loc 1 429 32 is_stmt 0 view .LVU205
 589 00f8 25EA0404 		bic	r4, r5, r4
 590              	.LVL41:
 429:.//Libraries/FreeRTOS/Source/event_groups.c **** 					}
 591              		.loc 1 429 32 view .LVU206
 592 00fc 3460     		str	r4, [r6]
 593 00fe 02E0     		b	.L37
 594              	.LVL42:
 595              	.L35:
 596              	.LBB82:
 597              	.LBB81:
 598              		.loc 1 692 3 is_stmt 1 view .LVU207
 599              		.loc 1 692 5 is_stmt 0 view .LVU208
 600 0100 34EA0503 		bics	r3, r4, r5
 601 0104 F7D0     		beq	.L36
 602              	.LVL43:
 603              	.L37:
 604              		.loc 1 692 5 view .LVU209
 605              	.LBE81:
 606              	.LBE82:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 29


 438:.//Libraries/FreeRTOS/Source/event_groups.c **** 				}
 607              		.loc 1 438 30 is_stmt 1 view .LVU210
 440:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 608              		.loc 1 440 5 view .LVU211
 442:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 609              		.loc 1 442 4 view .LVU212
 610 0106 FFF7FEFF 		bl	vPortExitCritical
 611              	.LVL44:
 612 010a DAE7     		b	.L34
 613              	.L51:
 614              		.align	2
 615              	.L50:
 616 010c 04ED00E0 		.word	-536810236
 617              		.cfi_endproc
 618              	.LFE7:
 620              		.section	.text.xEventGroupClearBits,"ax",%progbits
 621              		.align	1
 622              		.p2align 2,,3
 623              		.global	xEventGroupClearBits
 624              		.syntax unified
 625              		.thumb
 626              		.thumb_func
 627              		.fpu fpv5-d16
 629              	xEventGroupClearBits:
 630              	.LVL45:
 631              	.LFB8:
 462:.//Libraries/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 632              		.loc 1 462 1 view -0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 463:.//Libraries/FreeRTOS/Source/event_groups.c **** EventBits_t uxReturn;
 636              		.loc 1 463 1 view .LVU214
 464:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 637              		.loc 1 464 1 view .LVU215
 468:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 638              		.loc 1 468 2 view .LVU216
 639 0000 68B1     		cbz	r0, .L59
 468:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 640              		.loc 1 468 29 discriminator 2 view .LVU217
 469:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 641              		.loc 1 469 2 discriminator 2 view .LVU218
 642 0002 11F07F4F 		tst	r1, #-16777216
 462:.//Libraries/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 643              		.loc 1 462 1 is_stmt 0 discriminator 2 view .LVU219
 644 0006 70B5     		push	{r4, r5, r6, lr}
 645              	.LCFI7:
 646              		.cfi_def_cfa_offset 16
 647              		.cfi_offset 4, -16
 648              		.cfi_offset 5, -12
 649              		.cfi_offset 6, -8
 650              		.cfi_offset 14, -4
 651 0008 0C46     		mov	r4, r1
 469:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 652              		.loc 1 469 2 discriminator 2 view .LVU220
 653 000a 11D0     		beq	.L55
 469:.//Libraries/FreeRTOS/Source/event_groups.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 30


 654              		.loc 1 469 2 is_stmt 1 view .LVU221
 655              	.LBB93:
 656              	.LBI93:
 191:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 657              		.loc 2 191 30 view .LVU222
 658              	.LBB94:
 193:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 659              		.loc 2 193 1 view .LVU223
 660              		.loc 2 195 2 view .LVU224
 661              		.syntax unified
 662              	@ 195 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 663 000c 4FF05003 			mov r3, #80												
 664 0010 83F31188 		msr basepri, r3											
 665 0014 BFF36F8F 		isb														
 666 0018 BFF34F8F 		dsb														
 667              	
 668              	@ 0 "" 2
 669              	.LVL46:
 670              		.thumb
 671              		.syntax unified
 672              	.L56:
 673              		.loc 2 195 2 is_stmt 0 view .LVU225
 674              	.LBE94:
 675              	.LBE93:
 469:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 676              		.loc 1 469 2 is_stmt 1 discriminator 2 view .LVU226
 469:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 677              		.loc 1 469 2 discriminator 2 view .LVU227
 469:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 678              		.loc 1 469 2 discriminator 2 view .LVU228
 469:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 679              		.loc 1 469 2 discriminator 2 view .LVU229
 469:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 680              		.loc 1 469 2 discriminator 2 view .LVU230
 469:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 681              		.loc 1 469 2 discriminator 2 view .LVU231
 682 001c FEE7     		b	.L56
 683              	.L59:
 684              	.LCFI8:
 685              		.cfi_def_cfa_offset 0
 686              		.cfi_restore 4
 687              		.cfi_restore 5
 688              		.cfi_restore 6
 689              		.cfi_restore 14
 468:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 690              		.loc 1 468 2 view .LVU232
 691              	.LBB95:
 692              	.LBI95:
 191:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 693              		.loc 2 191 30 view .LVU233
 694              	.LBB96:
 193:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 695              		.loc 2 193 1 view .LVU234
 696              		.loc 2 195 2 view .LVU235
 697              		.syntax unified
 698              	@ 195 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 699 001e 4FF05003 			mov r3, #80												
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 31


 700 0022 83F31188 		msr basepri, r3											
 701 0026 BFF36F8F 		isb														
 702 002a BFF34F8F 		dsb														
 703              	
 704              	@ 0 "" 2
 705              	.LVL47:
 706              		.thumb
 707              		.syntax unified
 708              	.L54:
 709              		.loc 2 195 2 is_stmt 0 view .LVU236
 710              	.LBE96:
 711              	.LBE95:
 468:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 712              		.loc 1 468 2 is_stmt 1 discriminator 1 view .LVU237
 468:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 713              		.loc 1 468 2 discriminator 1 view .LVU238
 468:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 714              		.loc 1 468 2 discriminator 1 view .LVU239
 468:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 715              		.loc 1 468 2 discriminator 1 view .LVU240
 468:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 716              		.loc 1 468 2 discriminator 1 view .LVU241
 468:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 717              		.loc 1 468 2 discriminator 1 view .LVU242
 718 002e FEE7     		b	.L54
 719              	.L55:
 720              	.LCFI9:
 721              		.cfi_def_cfa_offset 16
 722              		.cfi_offset 4, -16
 723              		.cfi_offset 5, -12
 724              		.cfi_offset 6, -8
 725              		.cfi_offset 14, -4
 468:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 726              		.loc 1 468 2 is_stmt 0 discriminator 1 view .LVU243
 727 0030 0546     		mov	r5, r0
 728              	.LVL48:
 729              	.LBB97:
 730              	.LBI97:
 461:.//Libraries/FreeRTOS/Source/event_groups.c **** {
 731              		.loc 1 461 13 is_stmt 1 view .LVU244
 732              	.LBB98:
 469:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 733              		.loc 1 469 72 view .LVU245
 471:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 734              		.loc 1 471 2 view .LVU246
 735 0032 FFF7FEFF 		bl	vPortEnterCritical
 736              	.LVL49:
 473:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 737              		.loc 1 473 60 view .LVU247
 477:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 738              		.loc 1 477 3 view .LVU248
 477:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 739              		.loc 1 477 12 is_stmt 0 view .LVU249
 740 0036 2E68     		ldr	r6, [r5]
 741              	.LVL50:
 480:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 742              		.loc 1 480 3 is_stmt 1 view .LVU250
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 32


 480:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 743              		.loc 1 480 28 is_stmt 0 view .LVU251
 744 0038 26EA0404 		bic	r4, r6, r4
 745              	.LVL51:
 480:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 746              		.loc 1 480 28 view .LVU252
 747 003c 2C60     		str	r4, [r5]
 482:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 748              		.loc 1 482 2 is_stmt 1 view .LVU253
 749 003e FFF7FEFF 		bl	vPortExitCritical
 750              	.LVL52:
 484:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 751              		.loc 1 484 2 view .LVU254
 484:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 752              		.loc 1 484 2 is_stmt 0 view .LVU255
 753              	.LBE98:
 754              	.LBE97:
 485:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 755              		.loc 1 485 1 view .LVU256
 756 0042 3046     		mov	r0, r6
 757 0044 70BD     		pop	{r4, r5, r6, pc}
 485:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 758              		.loc 1 485 1 view .LVU257
 759              		.cfi_endproc
 760              	.LFE8:
 762 0046 00BF     		.section	.text.vEventGroupClearBitsCallback,"ax",%progbits
 763              		.align	1
 764              		.p2align 2,,3
 765              		.global	vEventGroupClearBitsCallback
 766              		.syntax unified
 767              		.thumb
 768              		.thumb_func
 769              		.fpu fpv5-d16
 771              	vEventGroupClearBitsCallback:
 772              	.LVL53:
 773              	.LFB14:
 666:.//Libraries/FreeRTOS/Source/event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear ); /*lint !e9079 Can't 
 774              		.loc 1 666 1 is_stmt 1 view -0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              		@ link register save eliminated.
 667:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 779              		.loc 1 667 2 view .LVU259
 667:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 780              		.loc 1 667 11 is_stmt 0 view .LVU260
 781 0000 FFF7FEBF 		b	xEventGroupClearBits
 782              	.LVL54:
 667:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 783              		.loc 1 667 11 view .LVU261
 784              		.cfi_endproc
 785              	.LFE14:
 787              		.section	.text.xEventGroupClearBitsFromISR,"ax",%progbits
 788              		.align	1
 789              		.p2align 2,,3
 790              		.global	xEventGroupClearBitsFromISR
 791              		.syntax unified
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 33


 792              		.thumb
 793              		.thumb_func
 794              		.fpu fpv5-d16
 796              	xEventGroupClearBitsFromISR:
 797              	.LVL55:
 798              	.LFB9:
 491:.//Libraries/FreeRTOS/Source/event_groups.c **** 		BaseType_t xReturn;
 799              		.loc 1 491 2 is_stmt 1 view -0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 492:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 804              		.loc 1 492 3 view .LVU263
 494:.//Libraries/FreeRTOS/Source/event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGroup, ( 
 805              		.loc 1 494 69 view .LVU264
 495:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 806              		.loc 1 495 3 view .LVU265
 491:.//Libraries/FreeRTOS/Source/event_groups.c **** 		BaseType_t xReturn;
 807              		.loc 1 491 2 is_stmt 0 view .LVU266
 808 0000 10B4     		push	{r4}
 809              	.LCFI10:
 810              		.cfi_def_cfa_offset 4
 811              		.cfi_offset 4, -4
 491:.//Libraries/FreeRTOS/Source/event_groups.c **** 		BaseType_t xReturn;
 812              		.loc 1 491 2 view .LVU267
 813 0002 0446     		mov	r4, r0
 814 0004 0A46     		mov	r2, r1
 495:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 815              		.loc 1 495 13 view .LVU268
 816 0006 0023     		movs	r3, #0
 817 0008 0248     		ldr	r0, .L63
 818              	.LVL56:
 495:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 819              		.loc 1 495 13 view .LVU269
 820 000a 2146     		mov	r1, r4
 821              	.LVL57:
 498:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 822              		.loc 1 498 2 view .LVU270
 823 000c 5DF8044B 		ldr	r4, [sp], #4
 824              	.LCFI11:
 825              		.cfi_restore 4
 826              		.cfi_def_cfa_offset 0
 827              	.LVL58:
 495:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 828              		.loc 1 495 13 view .LVU271
 829 0010 FFF7FEBF 		b	xTimerPendFunctionCallFromISR
 830              	.LVL59:
 831              	.L64:
 495:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 832              		.loc 1 495 13 view .LVU272
 833              		.align	2
 834              	.L63:
 835 0014 00000000 		.word	vEventGroupClearBitsCallback
 836              		.cfi_endproc
 837              	.LFE9:
 839              		.section	.text.xEventGroupGetBitsFromISR,"ax",%progbits
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 34


 840              		.align	1
 841              		.p2align 2,,3
 842              		.global	xEventGroupGetBitsFromISR
 843              		.syntax unified
 844              		.thumb
 845              		.thumb_func
 846              		.fpu fpv5-d16
 848              	xEventGroupGetBitsFromISR:
 849              	.LVL60:
 850              	.LFB10:
 504:.//Libraries/FreeRTOS/Source/event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 851              		.loc 1 504 1 is_stmt 1 view -0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 505:.//Libraries/FreeRTOS/Source/event_groups.c **** EventGroup_t const * const pxEventBits = xEventGroup;
 856              		.loc 1 505 1 view .LVU274
 506:.//Libraries/FreeRTOS/Source/event_groups.c **** EventBits_t uxReturn;
 857              		.loc 1 506 1 view .LVU275
 507:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 858              		.loc 1 507 1 view .LVU276
 509:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 859              		.loc 1 509 2 view .LVU277
 860              	.LBB99:
 861              	.LBI99:
 196:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 862              		.loc 2 207 34 view .LVU278
 863              	.LBB100:
 208:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 864              		.loc 2 209 1 view .LVU279
 210:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 865              		.loc 2 211 2 view .LVU280
 866              		.syntax unified
 867              	@ 211 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 868 0000 EFF31183 			mrs r3, basepri											
 869 0004 4FF05002 		mov r2, #80												
 870 0008 82F31188 		msr basepri, r2											
 871 000c BFF36F8F 		isb														
 872 0010 BFF34F8F 		dsb														
 873              	
 874              	@ 0 "" 2
 875              	.LVL61:
 212:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 35


 213:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 876              		.loc 2 223 2 view .LVU281
 877              		.loc 2 223 2 is_stmt 0 view .LVU282
 878              		.thumb
 879              		.syntax unified
 880              	.LBE100:
 881              	.LBE99:
 511:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 882              		.loc 1 511 3 is_stmt 1 view .LVU283
 511:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 883              		.loc 1 511 12 is_stmt 0 view .LVU284
 884 0014 0068     		ldr	r0, [r0]
 885              	.LVL62:
 513:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 886              		.loc 1 513 2 is_stmt 1 view .LVU285
 887              	.LBB101:
 888              	.LBI101:
 224:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 889              		.loc 2 227 30 view .LVU286
 890              	.LBB102:
 228:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 891              		.loc 2 229 2 view .LVU287
 892              		.syntax unified
 893              	@ 229 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 894 0016 83F31188 			msr basepri, r3	
 895              	@ 0 "" 2
 896              	.LVL63:
 897              		.loc 2 229 2 is_stmt 0 view .LVU288
 898              		.thumb
 899              		.syntax unified
 900              	.LBE102:
 901              	.LBE101:
 515:.//Libraries/FreeRTOS/Source/event_groups.c **** } /*lint !e818 EventGroupHandle_t is a typedef used in other functions to so can't be pointer to co
 902              		.loc 1 515 2 is_stmt 1 view .LVU289
 516:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 903              		.loc 1 516 1 is_stmt 0 view .LVU290
 904 001a 7047     		bx	lr
 905              		.cfi_endproc
 906              	.LFE10:
 908              		.section	.text.xEventGroupSetBits,"ax",%progbits
 909              		.align	1
 910              		.p2align 2,,3
 911              		.global	xEventGroupSetBits
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 36


 912              		.syntax unified
 913              		.thumb
 914              		.thumb_func
 915              		.fpu fpv5-d16
 917              	xEventGroupSetBits:
 918              	.LVL64:
 919              	.LFB11:
 520:.//Libraries/FreeRTOS/Source/event_groups.c **** ListItem_t *pxListItem, *pxNext;
 920              		.loc 1 520 1 is_stmt 1 view -0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 0
 923              		@ frame_needed = 0, uses_anonymous_args = 0
 521:.//Libraries/FreeRTOS/Source/event_groups.c **** ListItem_t const *pxListEnd;
 924              		.loc 1 521 1 view .LVU292
 522:.//Libraries/FreeRTOS/Source/event_groups.c **** List_t const * pxList;
 925              		.loc 1 522 1 view .LVU293
 523:.//Libraries/FreeRTOS/Source/event_groups.c **** EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
 926              		.loc 1 523 1 view .LVU294
 524:.//Libraries/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 927              		.loc 1 524 1 view .LVU295
 525:.//Libraries/FreeRTOS/Source/event_groups.c **** BaseType_t xMatchFound = pdFALSE;
 928              		.loc 1 525 1 view .LVU296
 526:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 929              		.loc 1 526 1 view .LVU297
 530:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 930              		.loc 1 530 2 view .LVU298
 931 0000 70B1     		cbz	r0, .L84
 530:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 932              		.loc 1 530 29 discriminator 2 view .LVU299
 531:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 933              		.loc 1 531 2 discriminator 2 view .LVU300
 520:.//Libraries/FreeRTOS/Source/event_groups.c **** ListItem_t *pxListItem, *pxNext;
 934              		.loc 1 520 1 is_stmt 0 discriminator 2 view .LVU301
 935 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 936              	.LCFI12:
 937              		.cfi_def_cfa_offset 24
 938              		.cfi_offset 4, -24
 939              		.cfi_offset 5, -20
 940              		.cfi_offset 6, -16
 941              		.cfi_offset 7, -12
 942              		.cfi_offset 8, -8
 943              		.cfi_offset 14, -4
 531:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 944              		.loc 1 531 2 discriminator 2 view .LVU302
 945 0006 11F07F47 		ands	r7, r1, #-16777216
 946 000a 0C46     		mov	r4, r1
 947 000c 11D0     		beq	.L69
 531:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 948              		.loc 1 531 2 is_stmt 1 view .LVU303
 949              	.LBB113:
 950              	.LBI113:
 191:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 951              		.loc 2 191 30 view .LVU304
 952              	.LBB114:
 193:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 953              		.loc 2 193 1 view .LVU305
 195:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 37


 954              		.loc 2 195 2 view .LVU306
 955              		.syntax unified
 956              	@ 195 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 957 000e 4FF05003 			mov r3, #80												
 958 0012 83F31188 		msr basepri, r3											
 959 0016 BFF36F8F 		isb														
 960 001a BFF34F8F 		dsb														
 961              	
 962              	@ 0 "" 2
 963              	.LVL65:
 964              		.thumb
 965              		.syntax unified
 966              	.L70:
 195:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 967              		.loc 2 195 2 is_stmt 0 view .LVU307
 968              	.LBE114:
 969              	.LBE113:
 531:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 970              		.loc 1 531 2 is_stmt 1 discriminator 2 view .LVU308
 531:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 971              		.loc 1 531 2 discriminator 2 view .LVU309
 531:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 972              		.loc 1 531 2 discriminator 2 view .LVU310
 531:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 973              		.loc 1 531 2 discriminator 2 view .LVU311
 531:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 974              		.loc 1 531 2 discriminator 2 view .LVU312
 531:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 975              		.loc 1 531 2 discriminator 2 view .LVU313
 976 001e FEE7     		b	.L70
 977              	.L84:
 978              	.LCFI13:
 979              		.cfi_def_cfa_offset 0
 980              		.cfi_restore 4
 981              		.cfi_restore 5
 982              		.cfi_restore 6
 983              		.cfi_restore 7
 984              		.cfi_restore 8
 985              		.cfi_restore 14
 530:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 986              		.loc 1 530 2 view .LVU314
 987              	.LBB115:
 988              	.LBI115:
 191:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 989              		.loc 2 191 30 view .LVU315
 990              	.LBB116:
 193:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 991              		.loc 2 193 1 view .LVU316
 195:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 992              		.loc 2 195 2 view .LVU317
 993              		.syntax unified
 994              	@ 195 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 995 0020 4FF05003 			mov r3, #80												
 996 0024 83F31188 		msr basepri, r3											
 997 0028 BFF36F8F 		isb														
 998 002c BFF34F8F 		dsb														
 999              	
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 38


 1000              	@ 0 "" 2
 1001              	.LVL66:
 1002              		.thumb
 1003              		.syntax unified
 1004              	.L68:
 195:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1005              		.loc 2 195 2 is_stmt 0 view .LVU318
 1006              	.LBE116:
 1007              	.LBE115:
 530:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 1008              		.loc 1 530 2 is_stmt 1 discriminator 1 view .LVU319
 530:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 1009              		.loc 1 530 2 discriminator 1 view .LVU320
 530:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 1010              		.loc 1 530 2 discriminator 1 view .LVU321
 530:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 1011              		.loc 1 530 2 discriminator 1 view .LVU322
 530:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 1012              		.loc 1 530 2 discriminator 1 view .LVU323
 530:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 1013              		.loc 1 530 2 discriminator 1 view .LVU324
 1014 0030 FEE7     		b	.L68
 1015              	.L69:
 1016              	.LCFI14:
 1017              		.cfi_def_cfa_offset 24
 1018              		.cfi_offset 4, -24
 1019              		.cfi_offset 5, -20
 1020              		.cfi_offset 6, -16
 1021              		.cfi_offset 7, -12
 1022              		.cfi_offset 8, -8
 1023              		.cfi_offset 14, -4
 530:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 1024              		.loc 1 530 2 is_stmt 0 discriminator 1 view .LVU325
 1025 0032 0546     		mov	r5, r0
 1026              	.LVL67:
 1027              	.LBB117:
 1028              	.LBI117:
 519:.//Libraries/FreeRTOS/Source/event_groups.c **** {
 1029              		.loc 1 519 13 is_stmt 1 view .LVU326
 1030              	.LBB118:
 531:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1031              		.loc 1 531 70 view .LVU327
 533:.//Libraries/FreeRTOS/Source/event_groups.c **** 	pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 !e9087 The mini list structure is use
 1032              		.loc 1 533 2 view .LVU328
 534:.//Libraries/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 1033              		.loc 1 534 2 view .LVU329
 535:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 1034              		.loc 1 535 2 is_stmt 0 view .LVU330
 1035 0034 FFF7FEFF 		bl	vTaskSuspendAll
 1036              	.LVL68:
 534:.//Libraries/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 1037              		.loc 1 534 12 view .LVU331
 1038 0038 05F10C08 		add	r8, r5, #12
 1039              	.LVL69:
 535:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 1040              		.loc 1 535 2 is_stmt 1 view .LVU332
 537:.//Libraries/FreeRTOS/Source/event_groups.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 39


 1041              		.loc 1 537 56 view .LVU333
 539:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1042              		.loc 1 539 3 view .LVU334
 542:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1043              		.loc 1 542 28 is_stmt 0 view .LVU335
 1044 003c 2B68     		ldr	r3, [r5]
 539:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1045              		.loc 1 539 14 view .LVU336
 1046 003e 2E69     		ldr	r6, [r5, #16]
 1047              	.LVL70:
 542:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1048              		.loc 1 542 3 is_stmt 1 view .LVU337
 542:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1049              		.loc 1 542 28 is_stmt 0 view .LVU338
 1050 0040 2343     		orrs	r3, r3, r4
 545:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1051              		.loc 1 545 8 view .LVU339
 1052 0042 B045     		cmp	r8, r6
 542:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1053              		.loc 1 542 28 view .LVU340
 1054 0044 2B60     		str	r3, [r5]
 545:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1055              		.loc 1 545 3 is_stmt 1 view .LVU341
 1056              	.LVL71:
 545:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1057              		.loc 1 545 8 view .LVU342
 1058 0046 0AD1     		bne	.L76
 545:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1059              		.loc 1 545 8 is_stmt 0 view .LVU343
 1060 0048 1AE0     		b	.L71
 1061              	.LVL72:
 1062              	.L86:
 558:.//Libraries/FreeRTOS/Source/event_groups.c **** 				{
 1063              		.loc 1 558 7 view .LVU344
 1064 004a 1342     		tst	r3, r2
 1065 004c 05D0     		beq	.L74
 1066              	.L73:
 582:.//Libraries/FreeRTOS/Source/event_groups.c **** 				}
 1067              		.loc 1 582 6 is_stmt 1 view .LVU345
 580:.//Libraries/FreeRTOS/Source/event_groups.c **** 				{
 1068              		.loc 1 580 7 is_stmt 0 view .LVU346
 1069 004e E301     		lsls	r3, r4, #7
 582:.//Libraries/FreeRTOS/Source/event_groups.c **** 				}
 1070              		.loc 1 582 20 view .LVU347
 1071 0050 48BF     		it	mi
 1072 0052 1743     		orrmi	r7, r7, r2
 1073              	.LVL73:
 586:.//Libraries/FreeRTOS/Source/event_groups.c **** 				}
 1074              		.loc 1 586 30 is_stmt 1 view .LVU348
 594:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 1075              		.loc 1 594 5 view .LVU349
 1076 0054 FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 1077              	.LVL74:
 594:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 1078              		.loc 1 594 5 is_stmt 0 view .LVU350
 1079 0058 2B68     		ldr	r3, [r5]
 1080              	.L74:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 40


 1081              	.LVL75:
 545:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1082              		.loc 1 545 8 is_stmt 1 view .LVU351
 1083 005a B045     		cmp	r8, r6
 1084 005c 0ED0     		beq	.L85
 1085              	.LVL76:
 1086              	.L76:
 547:.//Libraries/FreeRTOS/Source/event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 1087              		.loc 1 547 4 view .LVU352
 558:.//Libraries/FreeRTOS/Source/event_groups.c **** 				{
 1088              		.loc 1 558 5 view .LVU353
 567:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 1089              		.loc 1 567 9 view .LVU354
 580:.//Libraries/FreeRTOS/Source/event_groups.c **** 				{
 1090              		.loc 1 580 5 view .LVU355
 1091 005e 3046     		mov	r0, r6
 594:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 1092              		.loc 1 594 5 is_stmt 0 view .LVU356
 1093 0060 43F00071 		orr	r1, r3, #33554432
 547:.//Libraries/FreeRTOS/Source/event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 1094              		.loc 1 547 11 view .LVU357
 1095 0064 7668     		ldr	r6, [r6, #4]
 1096              	.LVL77:
 548:.//Libraries/FreeRTOS/Source/event_groups.c **** 			xMatchFound = pdFALSE;
 1097              		.loc 1 548 4 is_stmt 1 view .LVU358
 548:.//Libraries/FreeRTOS/Source/event_groups.c **** 			xMatchFound = pdFALSE;
 1098              		.loc 1 548 20 is_stmt 0 view .LVU359
 1099 0066 0468     		ldr	r4, [r0]
 1100              	.LVL78:
 549:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1101              		.loc 1 549 4 is_stmt 1 view .LVU360
 552:.//Libraries/FreeRTOS/Source/event_groups.c **** 			uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
 1102              		.loc 1 552 4 view .LVU361
 553:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1103              		.loc 1 553 4 view .LVU362
 555:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 1104              		.loc 1 555 6 is_stmt 0 view .LVU363
 1105 0068 14F0806F 		tst	r4, #67108864
 553:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1106              		.loc 1 553 20 view .LVU364
 1107 006c 24F07F42 		bic	r2, r4, #-16777216
 1108              	.LVL79:
 555:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 1109              		.loc 1 555 4 is_stmt 1 view .LVU365
 555:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 1110              		.loc 1 555 6 is_stmt 0 view .LVU366
 1111 0070 EBD0     		beq	.L86
 567:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 1112              		.loc 1 567 11 view .LVU367
 1113 0072 32EA030C 		bics	ip, r2, r3
 1114 0076 EAD0     		beq	.L73
 1115              	.LVL80:
 545:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1116              		.loc 1 545 8 is_stmt 1 view .LVU368
 1117 0078 B045     		cmp	r8, r6
 1118 007a F0D1     		bne	.L76
 1119              	.LVL81:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 41


 1120              	.L85:
 545:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1121              		.loc 1 545 8 is_stmt 0 view .LVU369
 1122 007c 23EA0703 		bic	r3, r3, r7
 1123              	.LVL82:
 1124              	.L71:
 605:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1125              		.loc 1 605 3 is_stmt 1 view .LVU370
 605:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1126              		.loc 1 605 28 is_stmt 0 view .LVU371
 1127 0080 2B60     		str	r3, [r5]
 607:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1128              		.loc 1 607 2 is_stmt 1 view .LVU372
 607:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1129              		.loc 1 607 11 is_stmt 0 view .LVU373
 1130 0082 FFF7FEFF 		bl	xTaskResumeAll
 1131              	.LVL83:
 609:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 1132              		.loc 1 609 2 is_stmt 1 view .LVU374
 609:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 1133              		.loc 1 609 2 is_stmt 0 view .LVU375
 1134              	.LBE118:
 1135              	.LBE117:
 610:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 1136              		.loc 1 610 1 view .LVU376
 1137 0086 2868     		ldr	r0, [r5]
 1138 0088 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 610:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 1139              		.loc 1 610 1 view .LVU377
 1140              		.cfi_endproc
 1141              	.LFE11:
 1143              		.section	.text.xEventGroupSync,"ax",%progbits
 1144              		.align	1
 1145              		.p2align 2,,3
 1146              		.global	xEventGroupSync
 1147              		.syntax unified
 1148              		.thumb
 1149              		.thumb_func
 1150              		.fpu fpv5-d16
 1152              	xEventGroupSync:
 1153              	.LVL84:
 1154              	.LFB6:
 192:.//Libraries/FreeRTOS/Source/event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 1155              		.loc 1 192 1 is_stmt 1 view -0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 8
 1158              		@ frame_needed = 0, uses_anonymous_args = 0
 193:.//Libraries/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 1159              		.loc 1 193 1 view .LVU379
 194:.//Libraries/FreeRTOS/Source/event_groups.c **** BaseType_t xAlreadyYielded;
 1160              		.loc 1 194 1 view .LVU380
 195:.//Libraries/FreeRTOS/Source/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 1161              		.loc 1 195 1 view .LVU381
 196:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1162              		.loc 1 196 1 view .LVU382
 198:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 1163              		.loc 1 198 2 view .LVU383
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 42


 1164 0000 12F07F4F 		tst	r2, #-16777216
 1165 0004 08D0     		beq	.L88
 198:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 1166              		.loc 1 198 2 view .LVU384
 1167              	.LBB119:
 1168              	.LBI119:
 191:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1169              		.loc 2 191 30 view .LVU385
 1170              	.LBB120:
 193:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1171              		.loc 2 193 1 view .LVU386
 195:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1172              		.loc 2 195 2 view .LVU387
 1173              		.syntax unified
 1174              	@ 195 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1175 0006 4FF05003 			mov r3, #80												
 1176 000a 83F31188 		msr basepri, r3											
 1177 000e BFF36F8F 		isb														
 1178 0012 BFF34F8F 		dsb														
 1179              	
 1180              	@ 0 "" 2
 1181              	.LVL85:
 1182              		.thumb
 1183              		.syntax unified
 1184              	.L89:
 195:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1185              		.loc 2 195 2 is_stmt 0 view .LVU388
 1186              	.LBE120:
 1187              	.LBE119:
 198:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 1188              		.loc 1 198 2 is_stmt 1 discriminator 1 view .LVU389
 198:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 1189              		.loc 1 198 2 discriminator 1 view .LVU390
 198:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 1190              		.loc 1 198 2 discriminator 1 view .LVU391
 198:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 1191              		.loc 1 198 2 discriminator 1 view .LVU392
 198:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 1192              		.loc 1 198 2 discriminator 1 view .LVU393
 198:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 1193              		.loc 1 198 2 discriminator 1 view .LVU394
 1194 0016 FEE7     		b	.L89
 1195              	.LVL86:
 1196              	.L88:
 198:.//Libraries/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 1197              		.loc 1 198 74 discriminator 2 view .LVU395
 199:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1198              		.loc 1 199 2 discriminator 2 view .LVU396
 192:.//Libraries/FreeRTOS/Source/event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 1199              		.loc 1 192 1 is_stmt 0 discriminator 2 view .LVU397
 1200 0018 F0B5     		push	{r4, r5, r6, r7, lr}
 1201              	.LCFI15:
 1202              		.cfi_def_cfa_offset 20
 1203              		.cfi_offset 4, -20
 1204              		.cfi_offset 5, -16
 1205              		.cfi_offset 6, -12
 1206              		.cfi_offset 7, -8
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 43


 1207              		.cfi_offset 14, -4
 1208 001a 1646     		mov	r6, r2
 1209 001c 83B0     		sub	sp, sp, #12
 1210              	.LCFI16:
 1211              		.cfi_def_cfa_offset 32
 199:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1212              		.loc 1 199 2 discriminator 2 view .LVU398
 1213 001e 42B9     		cbnz	r2, .L90
 199:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1214              		.loc 1 199 2 is_stmt 1 view .LVU399
 1215              	.LBB121:
 1216              	.LBI121:
 191:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1217              		.loc 2 191 30 view .LVU400
 1218              	.LBB122:
 193:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1219              		.loc 2 193 1 view .LVU401
 195:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1220              		.loc 2 195 2 view .LVU402
 1221              		.syntax unified
 1222              	@ 195 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1223 0020 4FF05003 			mov r3, #80												
 1224 0024 83F31188 		msr basepri, r3											
 1225 0028 BFF36F8F 		isb														
 1226 002c BFF34F8F 		dsb														
 1227              	
 1228              	@ 0 "" 2
 1229              	.LVL87:
 1230              		.thumb
 1231              		.syntax unified
 1232              	.L91:
 195:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1233              		.loc 2 195 2 is_stmt 0 view .LVU403
 1234              	.LBE122:
 1235              	.LBE121:
 199:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1236              		.loc 1 199 2 is_stmt 1 discriminator 2 view .LVU404
 199:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1237              		.loc 1 199 2 discriminator 2 view .LVU405
 199:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1238              		.loc 1 199 2 discriminator 2 view .LVU406
 199:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1239              		.loc 1 199 2 discriminator 2 view .LVU407
 199:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1240              		.loc 1 199 2 discriminator 2 view .LVU408
 199:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1241              		.loc 1 199 2 discriminator 2 view .LVU409
 1242 0030 FEE7     		b	.L91
 1243              	.LVL88:
 1244              	.L90:
 199:.//Libraries/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1245              		.loc 1 199 38 discriminator 2 view .LVU410
 202:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1246              		.loc 1 202 3 discriminator 2 view .LVU411
 1247 0032 0191     		str	r1, [sp, #4]
 1248 0034 0546     		mov	r5, r0
 1249 0036 1F46     		mov	r7, r3
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 44


 1250 0038 FFF7FEFF 		bl	xTaskGetSchedulerState
 1251              	.LVL89:
 202:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1252              		.loc 1 202 3 is_stmt 0 discriminator 2 view .LVU412
 1253 003c 0199     		ldr	r1, [sp, #4]
 1254 003e C8B9     		cbnz	r0, .L92
 202:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1255              		.loc 1 202 3 discriminator 2 view .LVU413
 1256 0040 47B1     		cbz	r7, .L93
 202:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1257              		.loc 1 202 3 is_stmt 1 view .LVU414
 1258              	.LBB123:
 1259              	.LBI123:
 191:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1260              		.loc 2 191 30 view .LVU415
 1261              	.LBB124:
 193:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1262              		.loc 2 193 1 view .LVU416
 195:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1263              		.loc 2 195 2 view .LVU417
 1264              		.syntax unified
 1265              	@ 195 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1266 0042 4FF05003 			mov r3, #80												
 1267 0046 83F31188 		msr basepri, r3											
 1268 004a BFF36F8F 		isb														
 1269 004e BFF34F8F 		dsb														
 1270              	
 1271              	@ 0 "" 2
 1272              	.LVL90:
 1273              		.thumb
 1274              		.syntax unified
 1275              	.L94:
 195:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1276              		.loc 2 195 2 is_stmt 0 view .LVU418
 1277              	.LBE124:
 1278              	.LBE123:
 202:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1279              		.loc 1 202 3 is_stmt 1 discriminator 3 view .LVU419
 202:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1280              		.loc 1 202 3 discriminator 3 view .LVU420
 202:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1281              		.loc 1 202 3 discriminator 3 view .LVU421
 202:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1282              		.loc 1 202 3 discriminator 3 view .LVU422
 202:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1283              		.loc 1 202 3 discriminator 3 view .LVU423
 202:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1284              		.loc 1 202 3 discriminator 3 view .LVU424
 1285 0052 FEE7     		b	.L94
 1286              	.L93:
 202:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1287              		.loc 1 202 104 view .LVU425
 206:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 1288              		.loc 1 206 2 view .LVU426
 1289 0054 0191     		str	r1, [sp, #4]
 1290              	.LVL91:
 206:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 45


 1291              		.loc 1 206 2 is_stmt 0 view .LVU427
 1292 0056 FFF7FEFF 		bl	vTaskSuspendAll
 1293              	.LVL92:
 208:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1294              		.loc 1 208 3 is_stmt 1 view .LVU428
 208:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1295              		.loc 1 208 22 is_stmt 0 view .LVU429
 1296 005a 2C68     		ldr	r4, [r5]
 1297              	.LVL93:
 210:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1298              		.loc 1 210 3 is_stmt 1 view .LVU430
 210:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1299              		.loc 1 210 12 is_stmt 0 view .LVU431
 1300 005c 2846     		mov	r0, r5
 1301 005e 0199     		ldr	r1, [sp, #4]
 212:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1302              		.loc 1 212 30 view .LVU432
 1303 0060 0C43     		orrs	r4, r4, r1
 1304              	.LVL94:
 210:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1305              		.loc 1 210 12 view .LVU433
 1306 0062 FFF7FEFF 		bl	xEventGroupSetBits
 1307              	.LVL95:
 212:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1308              		.loc 1 212 3 is_stmt 1 view .LVU434
 212:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1309              		.loc 1 212 5 is_stmt 0 view .LVU435
 1310 0066 36EA0403 		bics	r3, r6, r4
 1311 006a 2AD0     		beq	.L102
 1312              	.L97:
 244:.//Libraries/FreeRTOS/Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 1313              		.loc 1 244 5 is_stmt 1 view .LVU436
 244:.//Libraries/FreeRTOS/Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 1314              		.loc 1 244 14 is_stmt 0 view .LVU437
 1315 006c 2C68     		ldr	r4, [r5]
 1316              	.LVL96:
 245:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 1317              		.loc 1 245 5 is_stmt 1 view .LVU438
 249:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1318              		.loc 1 249 2 view .LVU439
 249:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1319              		.loc 1 249 20 is_stmt 0 view .LVU440
 1320 006e FFF7FEFF 		bl	xTaskResumeAll
 1321              	.LVL97:
 251:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 1322              		.loc 1 251 2 is_stmt 1 view .LVU441
 1323 0072 2CE0     		b	.L87
 1324              	.LVL98:
 1325              	.L92:
 202:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1326              		.loc 1 202 104 discriminator 8 view .LVU442
 206:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 1327              		.loc 1 206 2 discriminator 8 view .LVU443
 1328 0074 0191     		str	r1, [sp, #4]
 1329              	.LVL99:
 206:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 1330              		.loc 1 206 2 is_stmt 0 discriminator 8 view .LVU444
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 46


 1331 0076 FFF7FEFF 		bl	vTaskSuspendAll
 1332              	.LVL100:
 208:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1333              		.loc 1 208 3 is_stmt 1 discriminator 8 view .LVU445
 208:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1334              		.loc 1 208 22 is_stmt 0 discriminator 8 view .LVU446
 1335 007a 2C68     		ldr	r4, [r5]
 1336              	.LVL101:
 210:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1337              		.loc 1 210 3 is_stmt 1 discriminator 8 view .LVU447
 210:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1338              		.loc 1 210 12 is_stmt 0 discriminator 8 view .LVU448
 1339 007c 2846     		mov	r0, r5
 1340 007e 0199     		ldr	r1, [sp, #4]
 212:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1341              		.loc 1 212 30 discriminator 8 view .LVU449
 1342 0080 0C43     		orrs	r4, r4, r1
 1343              	.LVL102:
 210:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1344              		.loc 1 210 12 discriminator 8 view .LVU450
 1345 0082 FFF7FEFF 		bl	xEventGroupSetBits
 1346              	.LVL103:
 212:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1347              		.loc 1 212 3 is_stmt 1 discriminator 8 view .LVU451
 212:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1348              		.loc 1 212 5 is_stmt 0 discriminator 8 view .LVU452
 1349 0086 36EA0403 		bics	r3, r6, r4
 1350 008a 1AD0     		beq	.L102
 225:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 1351              		.loc 1 225 4 is_stmt 1 view .LVU453
 225:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 1352              		.loc 1 225 6 is_stmt 0 view .LVU454
 1353 008c 002F     		cmp	r7, #0
 1354 008e EDD0     		beq	.L97
 227:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1355              		.loc 1 227 77 is_stmt 1 view .LVU455
 232:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1356              		.loc 1 232 5 view .LVU456
 1357 0090 3A46     		mov	r2, r7
 1358 0092 46F0A061 		orr	r1, r6, #83886080
 1359 0096 281D     		adds	r0, r5, #4
 1360 0098 FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 1361              	.LVL104:
 238:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 1362              		.loc 1 238 5 view .LVU457
 249:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1363              		.loc 1 249 2 view .LVU458
 249:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1364              		.loc 1 249 20 is_stmt 0 view .LVU459
 1365 009c FFF7FEFF 		bl	xTaskResumeAll
 1366              	.LVL105:
 251:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 1367              		.loc 1 251 2 is_stmt 1 view .LVU460
 253:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1368              		.loc 1 253 3 view .LVU461
 253:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1369              		.loc 1 253 5 is_stmt 0 view .LVU462
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 47


 1370 00a0 38B9     		cbnz	r0, .L99
 255:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 1371              		.loc 1 255 4 is_stmt 1 view .LVU463
 1372 00a2 124B     		ldr	r3, .L109
 1373 00a4 4FF08052 		mov	r2, #268435456
 1374 00a8 1A60     		str	r2, [r3]
 255:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 1375              		.loc 1 255 4 view .LVU464
 1376              		.syntax unified
 1377              	@ 255 ".//Libraries/FreeRTOS/Source/event_groups.c" 1
 1378 00aa BFF34F8F 		dsb
 1379              	@ 0 "" 2
 255:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 1380              		.loc 1 255 4 view .LVU465
 1381              	@ 255 ".//Libraries/FreeRTOS/Source/event_groups.c" 1
 1382 00ae BFF36F8F 		isb
 1383              	@ 0 "" 2
 255:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 1384              		.loc 1 255 26 view .LVU466
 1385              		.thumb
 1386              		.syntax unified
 1387              	.L99:
 259:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 1388              		.loc 1 259 28 view .LVU467
 266:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1389              		.loc 1 266 3 view .LVU468
 266:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1390              		.loc 1 266 14 is_stmt 0 view .LVU469
 1391 00b2 FFF7FEFF 		bl	uxTaskResetEventItemValue
 1392              	.LVL106:
 268:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1393              		.loc 1 268 5 view .LVU470
 1394 00b6 8301     		lsls	r3, r0, #6
 266:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1395              		.loc 1 266 14 view .LVU471
 1396 00b8 0446     		mov	r4, r0
 1397              	.LVL107:
 268:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1398              		.loc 1 268 3 is_stmt 1 view .LVU472
 268:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1399              		.loc 1 268 5 is_stmt 0 view .LVU473
 1400 00ba 0BD5     		bpl	.L108
 1401              	.LVL108:
 1402              	.L100:
 295:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1403              		.loc 1 295 3 is_stmt 1 view .LVU474
 299:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1404              		.loc 1 299 3 view .LVU475
 299:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1405              		.loc 1 299 12 is_stmt 0 view .LVU476
 1406 00bc 24F07F44 		bic	r4, r4, #-16777216
 1407              	.LVL109:
 302:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1408              		.loc 1 302 2 is_stmt 1 view .LVU477
 305:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1409              		.loc 1 305 2 view .LVU478
 307:.//Libraries/FreeRTOS/Source/event_groups.c **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 48


 1410              		.loc 1 307 2 view .LVU479
 307:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 1411              		.loc 1 307 9 is_stmt 0 view .LVU480
 1412 00c0 05E0     		b	.L87
 1413              	.LVL110:
 1414              	.L102:
 215:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1415              		.loc 1 215 4 is_stmt 1 view .LVU481
 219:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1416              		.loc 1 219 4 view .LVU482
 219:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1417              		.loc 1 219 29 is_stmt 0 view .LVU483
 1418 00c2 2B68     		ldr	r3, [r5]
 1419 00c4 23EA0603 		bic	r3, r3, r6
 1420 00c8 2B60     		str	r3, [r5]
 221:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 1421              		.loc 1 221 4 is_stmt 1 view .LVU484
 1422              	.LVL111:
 249:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1423              		.loc 1 249 2 view .LVU485
 249:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1424              		.loc 1 249 20 is_stmt 0 view .LVU486
 1425 00ca FFF7FEFF 		bl	xTaskResumeAll
 1426              	.LVL112:
 251:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 1427              		.loc 1 251 2 is_stmt 1 view .LVU487
 1428              	.L87:
 308:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 1429              		.loc 1 308 1 is_stmt 0 view .LVU488
 1430 00ce 2046     		mov	r0, r4
 1431 00d0 03B0     		add	sp, sp, #12
 1432              	.LCFI17:
 1433              		.cfi_remember_state
 1434              		.cfi_def_cfa_offset 20
 1435              		@ sp needed
 1436 00d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1437              	.LVL113:
 1438              	.L108:
 1439              	.LCFI18:
 1440              		.cfi_restore_state
 271:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 1441              		.loc 1 271 4 is_stmt 1 view .LVU489
 1442 00d4 FFF7FEFF 		bl	vPortEnterCritical
 1443              	.LVL114:
 273:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1444              		.loc 1 273 5 view .LVU490
 273:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1445              		.loc 1 273 14 is_stmt 0 view .LVU491
 1446 00d8 2C68     		ldr	r4, [r5]
 1447              	.LVL115:
 279:.//Libraries/FreeRTOS/Source/event_groups.c **** 				{
 1448              		.loc 1 279 5 is_stmt 1 view .LVU492
 279:.//Libraries/FreeRTOS/Source/event_groups.c **** 				{
 1449              		.loc 1 279 7 is_stmt 0 view .LVU493
 1450 00da 36EA0403 		bics	r3, r6, r4
 1451 00de 02D1     		bne	.L101
 281:.//Libraries/FreeRTOS/Source/event_groups.c **** 				}
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 49


 1452              		.loc 1 281 6 is_stmt 1 view .LVU494
 281:.//Libraries/FreeRTOS/Source/event_groups.c **** 				}
 1453              		.loc 1 281 31 is_stmt 0 view .LVU495
 1454 00e0 24EA0606 		bic	r6, r4, r6
 1455              	.LVL116:
 281:.//Libraries/FreeRTOS/Source/event_groups.c **** 				}
 1456              		.loc 1 281 31 view .LVU496
 1457 00e4 2E60     		str	r6, [r5]
 1458              	.L101:
 285:.//Libraries/FreeRTOS/Source/event_groups.c **** 				}
 1459              		.loc 1 285 30 is_stmt 1 view .LVU497
 288:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1460              		.loc 1 288 4 view .LVU498
 1461 00e6 FFF7FEFF 		bl	vPortExitCritical
 1462              	.LVL117:
 290:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 1463              		.loc 1 290 4 view .LVU499
 290:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 1464              		.loc 1 290 4 is_stmt 0 view .LVU500
 1465 00ea E7E7     		b	.L100
 1466              	.L110:
 1467              		.align	2
 1468              	.L109:
 1469 00ec 04ED00E0 		.word	-536810236
 1470              		.cfi_endproc
 1471              	.LFE6:
 1473              		.section	.text.vEventGroupSetBitsCallback,"ax",%progbits
 1474              		.align	1
 1475              		.p2align 2,,3
 1476              		.global	vEventGroupSetBitsCallback
 1477              		.syntax unified
 1478              		.thumb
 1479              		.thumb_func
 1480              		.fpu fpv5-d16
 1482              	vEventGroupSetBitsCallback:
 1483              	.LVL118:
 1484              	.LFB13:
 658:.//Libraries/FreeRTOS/Source/event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet ); /*lint !e9079 Can't avoi
 1485              		.loc 1 658 1 is_stmt 1 view -0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 0
 1488              		@ frame_needed = 0, uses_anonymous_args = 0
 1489              		@ link register save eliminated.
 659:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 1490              		.loc 1 659 2 view .LVU502
 659:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 1491              		.loc 1 659 11 is_stmt 0 view .LVU503
 1492 0000 FFF7FEBF 		b	xEventGroupSetBits
 1493              	.LVL119:
 659:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 1494              		.loc 1 659 11 view .LVU504
 1495              		.cfi_endproc
 1496              	.LFE13:
 1498              		.section	.text.vEventGroupDelete,"ax",%progbits
 1499              		.align	1
 1500              		.p2align 2,,3
 1501              		.global	vEventGroupDelete
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 50


 1502              		.syntax unified
 1503              		.thumb
 1504              		.thumb_func
 1505              		.fpu fpv5-d16
 1507              	vEventGroupDelete:
 1508              	.LVL120:
 1509              	.LFB12:
 614:.//Libraries/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 1510              		.loc 1 614 1 is_stmt 1 view -0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 0, uses_anonymous_args = 0
 615:.//Libraries/FreeRTOS/Source/event_groups.c **** const List_t *pxTasksWaitingForBits = &( pxEventBits->xTasksWaitingForBits );
 1514              		.loc 1 615 1 view .LVU506
 614:.//Libraries/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 1515              		.loc 1 614 1 is_stmt 0 view .LVU507
 1516 0000 38B5     		push	{r3, r4, r5, lr}
 1517              	.LCFI19:
 1518              		.cfi_def_cfa_offset 16
 1519              		.cfi_offset 3, -16
 1520              		.cfi_offset 4, -12
 1521              		.cfi_offset 5, -8
 1522              		.cfi_offset 14, -4
 614:.//Libraries/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 1523              		.loc 1 614 1 view .LVU508
 1524 0002 0446     		mov	r4, r0
 1525              	.LVL121:
 616:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1526              		.loc 1 616 1 is_stmt 1 view .LVU509
 618:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 1527              		.loc 1 618 2 view .LVU510
 1528 0004 FFF7FEFF 		bl	vTaskSuspendAll
 1529              	.LVL122:
 620:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1530              		.loc 1 620 41 view .LVU511
 622:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1531              		.loc 1 622 3 view .LVU512
 622:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1532              		.loc 1 622 8 view .LVU513
 622:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1533              		.loc 1 622 10 is_stmt 0 view .LVU514
 1534 0008 6368     		ldr	r3, [r4, #4]
 622:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1535              		.loc 1 622 8 view .LVU515
 1536 000a A3B1     		cbz	r3, .L119
 1537 000c 04F10C05 		add	r5, r4, #12
 1538 0010 03E0     		b	.L118
 1539              	.L116:
 627:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 1540              		.loc 1 627 4 discriminator 2 view .LVU516
 1541 0012 FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 1542              	.LVL123:
 622:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1543              		.loc 1 622 8 is_stmt 1 discriminator 2 view .LVU517
 622:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1544              		.loc 1 622 10 is_stmt 0 discriminator 2 view .LVU518
 1545 0016 6368     		ldr	r3, [r4, #4]
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 51


 622:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 1546              		.loc 1 622 8 discriminator 2 view .LVU519
 1547 0018 6BB1     		cbz	r3, .L119
 1548              	.L118:
 626:.//Libraries/FreeRTOS/Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 1549              		.loc 1 626 4 is_stmt 1 view .LVU520
 626:.//Libraries/FreeRTOS/Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 1550              		.loc 1 626 121 view .LVU521
 627:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 1551              		.loc 1 627 4 view .LVU522
 626:.//Libraries/FreeRTOS/Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 1552              		.loc 1 626 4 is_stmt 0 view .LVU523
 1553 001a 2069     		ldr	r0, [r4, #16]
 627:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 1554              		.loc 1 627 4 view .LVU524
 1555 001c 4FF00071 		mov	r1, #33554432
 626:.//Libraries/FreeRTOS/Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 1556              		.loc 1 626 4 view .LVU525
 1557 0020 A842     		cmp	r0, r5
 1558 0022 F6D1     		bne	.L116
 626:.//Libraries/FreeRTOS/Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 1559              		.loc 1 626 4 is_stmt 1 view .LVU526
 1560              	.LBB125:
 1561              	.LBI125:
 191:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1562              		.loc 2 191 30 view .LVU527
 1563              	.LBB126:
 193:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1564              		.loc 2 193 1 view .LVU528
 195:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1565              		.loc 2 195 2 view .LVU529
 1566              		.syntax unified
 1567              	@ 195 ".//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1568 0024 4FF05003 			mov r3, #80												
 1569 0028 83F31188 		msr basepri, r3											
 1570 002c BFF36F8F 		isb														
 1571 0030 BFF34F8F 		dsb														
 1572              	
 1573              	@ 0 "" 2
 1574              	.LVL124:
 1575              		.thumb
 1576              		.syntax unified
 1577              	.L117:
 195:.//Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1578              		.loc 2 195 2 is_stmt 0 view .LVU530
 1579              	.LBE126:
 1580              	.LBE125:
 626:.//Libraries/FreeRTOS/Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 1581              		.loc 1 626 4 is_stmt 1 discriminator 1 view .LVU531
 626:.//Libraries/FreeRTOS/Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 1582              		.loc 1 626 4 discriminator 1 view .LVU532
 626:.//Libraries/FreeRTOS/Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 1583              		.loc 1 626 4 discriminator 1 view .LVU533
 626:.//Libraries/FreeRTOS/Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 1584              		.loc 1 626 4 discriminator 1 view .LVU534
 626:.//Libraries/FreeRTOS/Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 1585              		.loc 1 626 4 discriminator 1 view .LVU535
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 52


 626:.//Libraries/FreeRTOS/Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 1586              		.loc 1 626 4 discriminator 1 view .LVU536
 1587 0034 FEE7     		b	.L117
 1588              	.L119:
 640:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 1589              		.loc 1 640 4 view .LVU537
 640:.//Libraries/FreeRTOS/Source/event_groups.c **** 			{
 1590              		.loc 1 640 6 is_stmt 0 view .LVU538
 1591 0036 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 1592 0038 1BB1     		cbz	r3, .L122
 646:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 1593              		.loc 1 646 29 is_stmt 1 view .LVU539
 651:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 1594              		.loc 1 651 2 view .LVU540
 652:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 1595              		.loc 1 652 1 is_stmt 0 view .LVU541
 1596 003a BDE83840 		pop	{r3, r4, r5, lr}
 1597              	.LCFI20:
 1598              		.cfi_remember_state
 1599              		.cfi_restore 14
 1600              		.cfi_restore 5
 1601              		.cfi_restore 4
 1602              		.cfi_restore 3
 1603              		.cfi_def_cfa_offset 0
 1604              	.LVL125:
 651:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 1605              		.loc 1 651 11 view .LVU542
 1606 003e FFF7FEBF 		b	xTaskResumeAll
 1607              	.LVL126:
 1608              	.L122:
 1609              	.LCFI21:
 1610              		.cfi_restore_state
 642:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 1611              		.loc 1 642 5 is_stmt 1 view .LVU543
 1612 0042 2046     		mov	r0, r4
 1613 0044 FFF7FEFF 		bl	vPortFree
 1614              	.LVL127:
 646:.//Libraries/FreeRTOS/Source/event_groups.c **** 			}
 1615              		.loc 1 646 29 view .LVU544
 651:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 1616              		.loc 1 651 2 view .LVU545
 652:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 1617              		.loc 1 652 1 is_stmt 0 view .LVU546
 1618 0048 BDE83840 		pop	{r3, r4, r5, lr}
 1619              	.LCFI22:
 1620              		.cfi_restore 14
 1621              		.cfi_restore 5
 1622              		.cfi_restore 4
 1623              		.cfi_restore 3
 1624              		.cfi_def_cfa_offset 0
 1625              	.LVL128:
 651:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 1626              		.loc 1 651 11 view .LVU547
 1627 004c FFF7FEBF 		b	xTaskResumeAll
 1628              	.LVL129:
 1629              		.cfi_endproc
 1630              	.LFE12:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 53


 1632              		.section	.text.xEventGroupSetBitsFromISR,"ax",%progbits
 1633              		.align	1
 1634              		.p2align 2,,3
 1635              		.global	xEventGroupSetBitsFromISR
 1636              		.syntax unified
 1637              		.thumb
 1638              		.thumb_func
 1639              		.fpu fpv5-d16
 1641              	xEventGroupSetBitsFromISR:
 1642              	.LVL130:
 1643              	.LFB16:
 693:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 694:.//Libraries/FreeRTOS/Source/event_groups.c **** 			xWaitConditionMet = pdTRUE;
 695:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 696:.//Libraries/FreeRTOS/Source/event_groups.c **** 		else
 697:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 698:.//Libraries/FreeRTOS/Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 699:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 700:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 701:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 702:.//Libraries/FreeRTOS/Source/event_groups.c **** 	return xWaitConditionMet;
 703:.//Libraries/FreeRTOS/Source/event_groups.c **** }
 704:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 705:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 706:.//Libraries/FreeRTOS/Source/event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 707:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 708:.//Libraries/FreeRTOS/Source/event_groups.c **** 	BaseType_t xEventGroupSetBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSe
 709:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 1644              		.loc 1 709 2 is_stmt 1 view -0
 1645              		.cfi_startproc
 1646              		@ args = 0, pretend = 0, frame = 0
 1647              		@ frame_needed = 0, uses_anonymous_args = 0
 1648              		@ link register save eliminated.
 710:.//Libraries/FreeRTOS/Source/event_groups.c **** 	BaseType_t xReturn;
 1649              		.loc 1 710 2 view .LVU549
 711:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 712:.//Libraries/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_SET_BITS_FROM_ISR( xEventGroup, uxBitsToSet );
 1650              		.loc 1 712 65 view .LVU550
 713:.//Libraries/FreeRTOS/Source/event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupSetBitsCallback, ( void * ) xEventGroup, ( ui
 1651              		.loc 1 713 3 view .LVU551
 709:.//Libraries/FreeRTOS/Source/event_groups.c **** 	BaseType_t xReturn;
 1652              		.loc 1 709 2 is_stmt 0 view .LVU552
 1653 0000 30B4     		push	{r4, r5}
 1654              	.LCFI23:
 1655              		.cfi_def_cfa_offset 8
 1656              		.cfi_offset 4, -8
 1657              		.cfi_offset 5, -4
 709:.//Libraries/FreeRTOS/Source/event_groups.c **** 	BaseType_t xReturn;
 1658              		.loc 1 709 2 view .LVU553
 1659 0002 0546     		mov	r5, r0
 1660 0004 0C46     		mov	r4, r1
 1661 0006 1346     		mov	r3, r2
 1662              		.loc 1 713 13 view .LVU554
 1663 0008 0248     		ldr	r0, .L125
 1664              	.LVL131:
 1665              		.loc 1 713 13 view .LVU555
 1666 000a 2946     		mov	r1, r5
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 54


 1667              	.LVL132:
 1668              		.loc 1 713 13 view .LVU556
 1669 000c 2246     		mov	r2, r4
 1670              	.LVL133:
 714:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 715:.//Libraries/FreeRTOS/Source/event_groups.c **** 		return xReturn;
 716:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1671              		.loc 1 716 2 view .LVU557
 1672 000e 30BC     		pop	{r4, r5}
 1673              	.LCFI24:
 1674              		.cfi_restore 5
 1675              		.cfi_restore 4
 1676              		.cfi_def_cfa_offset 0
 1677              	.LVL134:
 713:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1678              		.loc 1 713 13 view .LVU558
 1679 0010 FFF7FEBF 		b	xTimerPendFunctionCallFromISR
 1680              	.LVL135:
 1681              	.L126:
 713:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 1682              		.loc 1 713 13 view .LVU559
 1683              		.align	2
 1684              	.L125:
 1685 0014 00000000 		.word	vEventGroupSetBitsCallback
 1686              		.cfi_endproc
 1687              	.LFE16:
 1689              		.section	.text.uxEventGroupGetNumber,"ax",%progbits
 1690              		.align	1
 1691              		.p2align 2,,3
 1692              		.global	uxEventGroupGetNumber
 1693              		.syntax unified
 1694              		.thumb
 1695              		.thumb_func
 1696              		.fpu fpv5-d16
 1698              	uxEventGroupGetNumber:
 1699              	.LVL136:
 1700              	.LFB17:
 717:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 718:.//Libraries/FreeRTOS/Source/event_groups.c **** #endif
 719:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 720:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 721:.//Libraries/FreeRTOS/Source/event_groups.c **** #if (configUSE_TRACE_FACILITY == 1)
 722:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 723:.//Libraries/FreeRTOS/Source/event_groups.c **** 	UBaseType_t uxEventGroupGetNumber( void* xEventGroup )
 724:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 1701              		.loc 1 724 2 is_stmt 1 view -0
 1702              		.cfi_startproc
 1703              		@ args = 0, pretend = 0, frame = 0
 1704              		@ frame_needed = 0, uses_anonymous_args = 0
 1705              		@ link register save eliminated.
 725:.//Libraries/FreeRTOS/Source/event_groups.c **** 	UBaseType_t xReturn;
 1706              		.loc 1 725 2 view .LVU561
 726:.//Libraries/FreeRTOS/Source/event_groups.c **** 	EventGroup_t const *pxEventBits = ( EventGroup_t * ) xEventGroup; /*lint !e9087 !e9079 EventGroupH
 1707              		.loc 1 726 2 view .LVU562
 727:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 728:.//Libraries/FreeRTOS/Source/event_groups.c **** 		if( xEventGroup == NULL )
 1708              		.loc 1 728 3 view .LVU563
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 55


 1709              		.loc 1 728 5 is_stmt 0 view .LVU564
 1710 0000 00B1     		cbz	r0, .L127
 729:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 730:.//Libraries/FreeRTOS/Source/event_groups.c **** 			xReturn = 0;
 731:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 732:.//Libraries/FreeRTOS/Source/event_groups.c **** 		else
 733:.//Libraries/FreeRTOS/Source/event_groups.c **** 		{
 734:.//Libraries/FreeRTOS/Source/event_groups.c **** 			xReturn = pxEventBits->uxEventGroupNumber;
 1711              		.loc 1 734 4 is_stmt 1 view .LVU565
 1712              		.loc 1 734 12 is_stmt 0 view .LVU566
 1713 0002 8069     		ldr	r0, [r0, #24]
 1714              	.LVL137:
 1715              	.L127:
 735:.//Libraries/FreeRTOS/Source/event_groups.c **** 		}
 736:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 737:.//Libraries/FreeRTOS/Source/event_groups.c **** 		return xReturn;
 738:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1716              		.loc 1 738 2 view .LVU567
 1717 0004 7047     		bx	lr
 1718              		.cfi_endproc
 1719              	.LFE17:
 1721 0006 00BF     		.section	.text.vEventGroupSetNumber,"ax",%progbits
 1722              		.align	1
 1723              		.p2align 2,,3
 1724              		.global	vEventGroupSetNumber
 1725              		.syntax unified
 1726              		.thumb
 1727              		.thumb_func
 1728              		.fpu fpv5-d16
 1730              	vEventGroupSetNumber:
 1731              	.LVL138:
 1732              	.LFB18:
 739:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 740:.//Libraries/FreeRTOS/Source/event_groups.c **** #endif /* configUSE_TRACE_FACILITY */
 741:.//Libraries/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 742:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 743:.//Libraries/FreeRTOS/Source/event_groups.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 744:.//Libraries/FreeRTOS/Source/event_groups.c **** 
 745:.//Libraries/FreeRTOS/Source/event_groups.c **** 	void vEventGroupSetNumber( void * xEventGroup, UBaseType_t uxEventGroupNumber )
 746:.//Libraries/FreeRTOS/Source/event_groups.c **** 	{
 1733              		.loc 1 746 2 is_stmt 1 view -0
 1734              		.cfi_startproc
 1735              		@ args = 0, pretend = 0, frame = 0
 1736              		@ frame_needed = 0, uses_anonymous_args = 0
 1737              		@ link register save eliminated.
 747:.//Libraries/FreeRTOS/Source/event_groups.c **** 		( ( EventGroup_t * ) xEventGroup )->uxEventGroupNumber = uxEventGroupNumber; /*lint !e9087 !e9079
 1738              		.loc 1 747 3 view .LVU569
 1739              		.loc 1 747 58 is_stmt 0 view .LVU570
 1740 0000 8161     		str	r1, [r0, #24]
 748:.//Libraries/FreeRTOS/Source/event_groups.c **** 	}
 1741              		.loc 1 748 2 view .LVU571
 1742 0002 7047     		bx	lr
 1743              		.cfi_endproc
 1744              	.LFE18:
 1746              		.text
 1747              	.Letext0:
 1748              		.file 3 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/in
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 56


 1749              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/
 1750              		.file 5 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock
 1751              		.file 6 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_typ
 1752              		.file 7 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reen
 1753              		.file 8 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h
 1754              		.file 9 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_std
 1755              		.file 10 ".//User/code/Inc/FreeRTOSConfig.h"
 1756              		.file 11 ".//Libraries/FreeRTOS/Source/include/FreeRTOS.h"
 1757              		.file 12 ".//Libraries/FreeRTOS/Source/include/list.h"
 1758              		.file 13 ".//Libraries/FreeRTOS/Source/include/event_groups.h"
 1759              		.file 14 ".//Libraries/FreeRTOS/Source/include/timers.h"
 1760              		.file 15 ".//Libraries/FreeRTOS/Source/include/task.h"
 1761              		.file 16 ".//Libraries/FreeRTOS/Source/include/portable.h"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s 			page 57


DEFINED SYMBOLS
                            *ABS*:0000000000000000 event_groups.c
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:17     .text.xEventGroupCreateStatic:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:26     .text.xEventGroupCreateStatic:0000000000000000 xEventGroupCreateStatic
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:166    .text.xEventGroupCreate:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:174    .text.xEventGroupCreate:0000000000000000 xEventGroupCreate
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:221    .text.xEventGroupWaitBits:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:229    .text.xEventGroupWaitBits:0000000000000000 xEventGroupWaitBits
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:616    .text.xEventGroupWaitBits:000000000000010c $d
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:621    .text.xEventGroupClearBits:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:629    .text.xEventGroupClearBits:0000000000000000 xEventGroupClearBits
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:763    .text.vEventGroupClearBitsCallback:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:771    .text.vEventGroupClearBitsCallback:0000000000000000 vEventGroupClearBitsCallback
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:788    .text.xEventGroupClearBitsFromISR:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:796    .text.xEventGroupClearBitsFromISR:0000000000000000 xEventGroupClearBitsFromISR
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:835    .text.xEventGroupClearBitsFromISR:0000000000000014 $d
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:840    .text.xEventGroupGetBitsFromISR:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:848    .text.xEventGroupGetBitsFromISR:0000000000000000 xEventGroupGetBitsFromISR
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:909    .text.xEventGroupSetBits:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:917    .text.xEventGroupSetBits:0000000000000000 xEventGroupSetBits
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:1144   .text.xEventGroupSync:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:1152   .text.xEventGroupSync:0000000000000000 xEventGroupSync
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:1469   .text.xEventGroupSync:00000000000000ec $d
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:1474   .text.vEventGroupSetBitsCallback:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:1482   .text.vEventGroupSetBitsCallback:0000000000000000 vEventGroupSetBitsCallback
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:1499   .text.vEventGroupDelete:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:1507   .text.vEventGroupDelete:0000000000000000 vEventGroupDelete
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:1633   .text.xEventGroupSetBitsFromISR:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:1641   .text.xEventGroupSetBitsFromISR:0000000000000000 xEventGroupSetBitsFromISR
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:1685   .text.xEventGroupSetBitsFromISR:0000000000000014 $d
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:1690   .text.uxEventGroupGetNumber:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:1698   .text.uxEventGroupGetNumber:0000000000000000 uxEventGroupGetNumber
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:1722   .text.vEventGroupSetNumber:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccqiYqen.s:1730   .text.vEventGroupSetNumber:0000000000000000 vEventGroupSetNumber

UNDEFINED SYMBOLS
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskSuspendAll
vTaskPlaceOnUnorderedEventList
xTaskResumeAll
uxTaskResetEventItemValue
vPortEnterCritical
vPortExitCritical
xTimerPendFunctionCallFromISR
vTaskRemoveFromUnorderedEventList
vPortFree
