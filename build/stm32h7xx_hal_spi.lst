ARM GAS  /tmp/ccwjY1CM.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_spi.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_SPI_Init,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_SPI_Init
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_SPI_Init:
  26              	.LFB331:
  27              		.file 1 "./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c"
   1:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
   2:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ******************************************************************************
   3:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @file    stm32h7xx_hal_spi.c
   4:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @author  MCD Application Team
   5:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *           + IO operation functions
  10:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *           + Peripheral Control functions
  11:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *           + Peripheral State functions
  12:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
  13:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   @verbatim
  14:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ==============================================================================
  15:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                         ##### How to use this driver #####
  16:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ==============================================================================
  17:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     [..]
  18:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  20:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  23:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (##) SPI pins configuration
  26:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process or DMA process
  29:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  31:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
ARM GAS  /tmp/ccwjY1CM.s 			page 2


  32:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  33:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Enable the DMAx clock
  34:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
  35:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  36:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx handle to the hspi DMA Tx or Rx handle
  37:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  39:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  42:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****      [..]
  46:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        Callback registration:
  47:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  48:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1UL
  49:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  50:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  51:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  52:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  53:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  54:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  55:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
  56:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
  57:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
  58:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  59:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  60:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  61:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  62:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  63:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
  64:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           and a pointer to the user callback function.
  65:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  66:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  67:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
  68:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           weak function.
  69:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  70:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           and the Callback ID.
  71:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           This function allows to reset following callbacks:
  72:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  73:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  74:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
  75:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
  76:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
  77:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  78:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  79:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  80:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  81:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  82:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  83:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
  84:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
  85:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
  86:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
  87:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
  88:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
ARM GAS  /tmp/ccwjY1CM.s 			page 3


  89:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
  90:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
  91:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  92:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
  93:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
  94:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
  95:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
  96:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
  97:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
  98:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        or HAL_SPI_Init() function.
  99:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        When The compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        not defined, the callback registering feature is not available
 102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     [..]
 106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       Circular mode restriction:
 107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) The DMA circular mode cannot be used when the SPI is configured in these modes:
 108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (++) Master 2Lines RxOnly
 109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (++) Master 1Line Rx
 110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) The CRC feature is not managed when the DMA circular mode is enabled
 111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) The functions HAL_SPI_DMAPause()/ HAL_SPI_DMAResume() are not supported. Return always
 112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           HAL_ERROR with ErrorCode set to HAL_SPI_ERROR_NOT_SUPPORTED.
 113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           Those functions are maintained for backward compatibility reasons.
 114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   @endverbatim
 116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ******************************************************************************
 117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @attention
 118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
 119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * All rights reserved.</center></h2>
 121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
 122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * the "License"; You may not use this file except in compliance with the
 124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * License. You may obtain a copy of the License at:
 125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                        opensource.org/licenses/BSD-3-Clause
 126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
 127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ******************************************************************************
 128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #include "stm32h7xx_hal.h"
 132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @addtogroup STM32H7xx_HAL_Driver
 134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI SPI
 138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief SPI HAL module driver
 139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
ARM GAS  /tmp/ccwjY1CM.s 			page 4


 146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100UL
 149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #define MAX_FIFO_LENGTH     16UL
 150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
 152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagSta
 171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                     uint32_t Timeout, uint32_t Tickstart);
 172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_8BIT(SPI_HandleTypeDef *hspi);
 173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_16BIT(SPI_HandleTypeDef *hspi);
 174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_32BIT(SPI_HandleTypeDef *hspi);
 175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_8BIT(SPI_HandleTypeDef *hspi);
 176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_16BIT(SPI_HandleTypeDef *hspi);
 177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_32BIT(SPI_HandleTypeDef *hspi);
 178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_AbortTransfer(SPI_HandleTypeDef *hspi);
 179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_CloseTransfer(SPI_HandleTypeDef *hspi);
 180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static uint32_t SPI_GetPacketSize(SPI_HandleTypeDef *hspi);
 181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
 185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  *  @brief    Initialization and Configuration functions
 194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  *
 195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @verbatim
 196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  ===============================================================================
 197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  ===============================================================================
 199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
ARM GAS  /tmp/ccwjY1CM.s 			page 5


 203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           the selected configuration:
 207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) Mode
 208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) Direction
 209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) Data Size
 210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) Clock Polarity and Phase
 211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) NSS Management
 212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) BaudRate Prescaler
 213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) FirstBit
 214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) TIMode
 215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) CRC Calculation
 216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) CRC Length, used only with Data8 and Data16
 218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) FIFO reception threshold
 219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) FIFO transmission threshold
 220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           of the selected SPIx peripheral.
 223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @endverbatim
 225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
 233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
 234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
  28              		.loc 1 236 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 84B0     		sub	sp, sp, #16
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
 238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t crc_length;
 239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t crc_length = 0UL;
  44              		.loc 1 240 12
  45 0008 0023     		movs	r3, #0
  46 000a FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 6


 241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif
 242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t packet_length;
 243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi == NULL)
  47              		.loc 1 245 6
  48 000c 7B68     		ldr	r3, [r7, #4]
  49 000e 002B     		cmp	r3, #0
  50 0010 01D1     		bne	.L2
 246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
  51              		.loc 1 247 12
  52 0012 0123     		movs	r3, #1
  53 0014 EBE0     		b	.L3
  54              	.L2:
 248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check the parameters */
 251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_FIFOTHRESHOLD(hspi->Init.FifoThreshold));
 256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
 258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
 267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
 272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.TxCRCInitializationPattern));
 273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.RxCRCInitializationPattern));
 274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  55              		.loc 1 276 29
  56 0016 7B68     		ldr	r3, [r7, #4]
  57 0018 0022     		movs	r2, #0
  58 001a 9A62     		str	r2, [r3, #40]
 277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Verify that the SPI instance supports Data Size higher than 16bits */
 280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
  59              		.loc 1 280 9
  60 001c 7B68     		ldr	r3, [r7, #4]
  61 001e 1B68     		ldr	r3, [r3]
  62              		.loc 1 280 6
  63 0020 754A     		ldr	r2, .L15
ARM GAS  /tmp/ccwjY1CM.s 			page 7


  64 0022 9342     		cmp	r3, r2
  65 0024 0FD0     		beq	.L4
  66              		.loc 1 280 9 discriminator 1
  67 0026 7B68     		ldr	r3, [r7, #4]
  68 0028 1B68     		ldr	r3, [r3]
  69 002a 744A     		ldr	r2, .L15+4
  70 002c 9342     		cmp	r3, r2
  71 002e 0AD0     		beq	.L4
  72              		.loc 1 280 9 is_stmt 0 discriminator 2
  73 0030 7B68     		ldr	r3, [r7, #4]
  74 0032 1B68     		ldr	r3, [r3]
  75              		.loc 1 280 8 is_stmt 1 discriminator 2
  76 0034 724A     		ldr	r2, .L15+8
  77 0036 9342     		cmp	r3, r2
  78 0038 05D0     		beq	.L4
  79              		.loc 1 280 64 discriminator 3
  80 003a 7B68     		ldr	r3, [r7, #4]
  81 003c DB68     		ldr	r3, [r3, #12]
  82              		.loc 1 280 50 discriminator 3
  83 003e 0F2B     		cmp	r3, #15
  84 0040 01D9     		bls	.L4
 281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
  85              		.loc 1 282 12
  86 0042 0123     		movs	r3, #1
  87 0044 D3E0     		b	.L3
  88              	.L4:
 283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Verify that the SPI instance supports requested data packing */
 286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   packet_length = SPI_GetPacketSize(hspi);
  89              		.loc 1 286 19
  90 0046 7868     		ldr	r0, [r7, #4]
  91 0048 FFF7FEFF 		bl	SPI_GetPacketSize
  92 004c B860     		str	r0, [r7, #8]
 287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
  93              		.loc 1 287 10
  94 004e 7B68     		ldr	r3, [r7, #4]
  95 0050 1B68     		ldr	r3, [r3]
  96              		.loc 1 287 6
  97 0052 694A     		ldr	r2, .L15
  98 0054 9342     		cmp	r3, r2
  99 0056 0CD0     		beq	.L5
 100              		.loc 1 287 10 discriminator 1
 101 0058 7B68     		ldr	r3, [r7, #4]
 102 005a 1B68     		ldr	r3, [r3]
 103 005c 674A     		ldr	r2, .L15+4
 104 005e 9342     		cmp	r3, r2
 105 0060 07D0     		beq	.L5
 106              		.loc 1 287 10 is_stmt 0 discriminator 3
 107 0062 7B68     		ldr	r3, [r7, #4]
 108 0064 1B68     		ldr	r3, [r3]
 109              		.loc 1 287 9 is_stmt 1 discriminator 3
 110 0066 664A     		ldr	r2, .L15+8
 111 0068 9342     		cmp	r3, r2
 112 006a 02D0     		beq	.L5
 113              		.loc 1 287 51 discriminator 5
ARM GAS  /tmp/ccwjY1CM.s 			page 8


 114 006c BB68     		ldr	r3, [r7, #8]
 115 006e 082B     		cmp	r3, #8
 116 0070 11D8     		bhi	.L6
 117              	.L5:
 288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 118              		.loc 1 288 9 discriminator 7
 119 0072 7B68     		ldr	r3, [r7, #4]
 120 0074 1B68     		ldr	r3, [r3]
 287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 121              		.loc 1 287 94 discriminator 7
 122 0076 604A     		ldr	r2, .L15
 123 0078 9342     		cmp	r3, r2
 124 007a 09D0     		beq	.L7
 125              		.loc 1 288 9
 126 007c 7B68     		ldr	r3, [r7, #4]
 127 007e 1B68     		ldr	r3, [r3]
 128 0080 5E4A     		ldr	r2, .L15+4
 129 0082 9342     		cmp	r3, r2
 130 0084 04D0     		beq	.L7
 131              		.loc 1 288 9 is_stmt 0 discriminator 2
 132 0086 7B68     		ldr	r3, [r7, #4]
 133 0088 1B68     		ldr	r3, [r3]
 134 008a 5D4A     		ldr	r2, .L15+8
 135 008c 9342     		cmp	r3, r2
 136 008e 04D1     		bne	.L8
 137              	.L7:
 138              		.loc 1 288 50 is_stmt 1 discriminator 3
 139 0090 BB68     		ldr	r3, [r7, #8]
 140 0092 102B     		cmp	r3, #16
 141 0094 01D9     		bls	.L8
 142              	.L6:
 289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 143              		.loc 1 290 12
 144 0096 0123     		movs	r3, #1
 145 0098 A9E0     		b	.L3
 146              	.L8:
 291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
 294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Verify that the SPI instance supports CRC Length higher than 16bits */
 297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.CRCLength > SPI_CRC_LENGTH_16BIT)
 298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return HAL_ERROR;
 300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Align the CRC Length on the data size */
 303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Init.CRCLength == SPI_CRC_LENGTH_DATASIZE)
 304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       crc_length = (hspi->Init.DataSize >> SPI_CFG1_DSIZE_Pos) << SPI_CFG1_CRCSIZE_Pos;
 306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
 308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       crc_length = hspi->Init.CRCLength;
 310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
ARM GAS  /tmp/ccwjY1CM.s 			page 9


 311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Verify that the CRC Length is higher than DataSize */
 313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((hspi->Init.DataSize >> SPI_CFG1_DSIZE_Pos) > (crc_length >> SPI_CFG1_CRCSIZE_Pos))
 314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return HAL_ERROR;
 316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
 319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     crc_length = hspi->Init.DataSize << SPI_CFG1_CRCSIZE_Pos;
 321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
 147              		.loc 1 324 11
 148 009a 7B68     		ldr	r3, [r7, #4]
 149 009c 93F88130 		ldrb	r3, [r3, #129]
 150 00a0 DBB2     		uxtb	r3, r3
 151              		.loc 1 324 6
 152 00a2 002B     		cmp	r3, #0
 153 00a4 06D1     		bne	.L9
 325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
 154              		.loc 1 327 16
 155 00a6 7B68     		ldr	r3, [r7, #4]
 156 00a8 0022     		movs	r2, #0
 157 00aa 83F88020 		strb	r2, [r3, #128]
 328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
 330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Init the SPI Callback settings */
 331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
 332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
 336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
 158              		.loc 1 349 5
 159 00ae 7868     		ldr	r0, [r7, #4]
 160 00b0 FFF7FEFF 		bl	HAL_SPI_MspInit
 161              	.L9:
 350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccwjY1CM.s 			page 10


 353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 162              		.loc 1 353 15
 163 00b4 7B68     		ldr	r3, [r7, #4]
 164 00b6 0222     		movs	r2, #2
 165 00b8 83F88120 		strb	r2, [r3, #129]
 354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 166              		.loc 1 356 3
 167 00bc 7B68     		ldr	r3, [r7, #4]
 168 00be 1B68     		ldr	r3, [r3]
 169 00c0 1A68     		ldr	r2, [r3]
 170 00c2 7B68     		ldr	r3, [r7, #4]
 171 00c4 1B68     		ldr	r3, [r3]
 172 00c6 22F00102 		bic	r2, r2, #1
 173 00ca 1A60     		str	r2, [r3]
 357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
 360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   Communication speed, First bit, CRC calculation state, CRC Length */
 361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPIx NSS Software Management Configuration */
 363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.NSS
 174              		.loc 1 363 18
 175 00cc 7B68     		ldr	r3, [r7, #4]
 176 00ce 9B69     		ldr	r3, [r3, #24]
 177              		.loc 1 363 6
 178 00d0 B3F1806F 		cmp	r3, #67108864
 179 00d4 19D1     		bne	.L10
 180              		.loc 1 363 56 discriminator 1
 181 00d6 7B68     		ldr	r3, [r7, #4]
 182 00d8 5B68     		ldr	r3, [r3, #4]
 183              		.loc 1 363 40 discriminator 1
 184 00da B3F5800F 		cmp	r3, #4194304
 185 00de 03D1     		bne	.L11
 186              		.loc 1 363 96 discriminator 2
 187 00e0 7B68     		ldr	r3, [r7, #4]
 188 00e2 9B6B     		ldr	r3, [r3, #56]
 189              		.loc 1 363 82 discriminator 2
 190 00e4 002B     		cmp	r3, #0
 191 00e6 08D0     		beq	.L12
 192              	.L11:
 364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****      ((hspi->Init.Mode == SPI_MODE_SLAVE) && (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_HIGH))))
 193              		.loc 1 364 18 discriminator 4
 194 00e8 7B68     		ldr	r3, [r7, #4]
 195 00ea 5B68     		ldr	r3, [r3, #4]
 363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****      ((hspi->Init.Mode == SPI_MODE_SLAVE) && (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_HIGH))))
 196              		.loc 1 363 135 discriminator 4
 197 00ec 002B     		cmp	r3, #0
 198 00ee 0CD1     		bne	.L10
 199              		.loc 1 364 57
 200 00f0 7B68     		ldr	r3, [r7, #4]
 201 00f2 9B6B     		ldr	r3, [r3, #56]
 202              		.loc 1 364 43
 203 00f4 B3F1805F 		cmp	r3, #268435456
 204 00f8 07D1     		bne	.L10
 205              	.L12:
ARM GAS  /tmp/ccwjY1CM.s 			page 11


 365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_SSI);
 206              		.loc 1 366 5
 207 00fa 7B68     		ldr	r3, [r7, #4]
 208 00fc 1B68     		ldr	r3, [r3]
 209 00fe 1A68     		ldr	r2, [r3]
 210 0100 7B68     		ldr	r3, [r7, #4]
 211 0102 1B68     		ldr	r3, [r3]
 212 0104 42F48052 		orr	r2, r2, #4096
 213 0108 1A60     		str	r2, [r3]
 214              	.L10:
 367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPIx CFG1 Configuration */
 370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_l
 215              		.loc 1 370 3
 216 010a 7B68     		ldr	r3, [r7, #4]
 217 010c DA69     		ldr	r2, [r3, #28]
 218 010e 7B68     		ldr	r3, [r7, #4]
 219 0110 9B6A     		ldr	r3, [r3, #40]
 220 0112 1A43     		orrs	r2, r2, r3
 221 0114 FB68     		ldr	r3, [r7, #12]
 222 0116 1A43     		orrs	r2, r2, r3
 223 0118 7B68     		ldr	r3, [r7, #4]
 224 011a DB6B     		ldr	r3, [r3, #60]
 225 011c 42EA0301 		orr	r1, r2, r3
 226 0120 7B68     		ldr	r3, [r7, #4]
 227 0122 DA68     		ldr	r2, [r3, #12]
 228 0124 7B68     		ldr	r3, [r7, #4]
 229 0126 1B68     		ldr	r3, [r3]
 230 0128 0A43     		orrs	r2, r2, r1
 231 012a 9A60     		str	r2, [r3, #8]
 371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.FifoThreshold     | hspi->Init.DataSize));
 372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPIx CFG2 Configuration */
 374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode     | hspi->Init.TIMode           | hspi->In
 232              		.loc 1 374 3
 233 012c 7B68     		ldr	r3, [r7, #4]
 234 012e 5A6B     		ldr	r2, [r3, #52]
 235 0130 7B68     		ldr	r3, [r7, #4]
 236 0132 5B6A     		ldr	r3, [r3, #36]
 237 0134 1A43     		orrs	r2, r2, r3
 238 0136 7B68     		ldr	r3, [r7, #4]
 239 0138 9B6B     		ldr	r3, [r3, #56]
 240 013a 1A43     		orrs	r2, r2, r3
 241 013c 7B68     		ldr	r3, [r7, #4]
 242 013e 9B69     		ldr	r3, [r3, #24]
 243 0140 1A43     		orrs	r2, r2, r3
 244 0142 7B68     		ldr	r3, [r7, #4]
 245 0144 1B69     		ldr	r3, [r3, #16]
 246 0146 1A43     		orrs	r2, r2, r3
 247 0148 7B68     		ldr	r3, [r7, #4]
 248 014a 5B69     		ldr	r3, [r3, #20]
 249 014c 1A43     		orrs	r2, r2, r3
 250 014e 7B68     		ldr	r3, [r7, #4]
 251 0150 1B6A     		ldr	r3, [r3, #32]
 252 0152 1A43     		orrs	r2, r2, r3
ARM GAS  /tmp/ccwjY1CM.s 			page 12


 253 0154 7B68     		ldr	r3, [r7, #4]
 254 0156 5B68     		ldr	r3, [r3, #4]
 255 0158 1A43     		orrs	r2, r2, r3
 256 015a 7B68     		ldr	r3, [r7, #4]
 257 015c DB6C     		ldr	r3, [r3, #76]
 258 015e 1A43     		orrs	r2, r2, r3
 259 0160 7B68     		ldr	r3, [r7, #4]
 260 0162 9B68     		ldr	r3, [r3, #8]
 261 0164 1A43     		orrs	r2, r2, r3
 262 0166 7B68     		ldr	r3, [r7, #4]
 263 0168 9B6C     		ldr	r3, [r3, #72]
 264 016a 42EA0301 		orr	r1, r2, r3
 265 016e 7B68     		ldr	r3, [r7, #4]
 266 0170 9A6D     		ldr	r2, [r3, #88]
 267 0172 7B68     		ldr	r3, [r7, #4]
 268 0174 1B68     		ldr	r3, [r3]
 269 0176 0A43     		orrs	r2, r2, r1
 270 0178 DA60     		str	r2, [r3, #12]
 375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.NSS          | hspi->Init.CLKPolarity      | hspi->In
 376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.FirstBit     | hspi->Init.Mode             | hspi->In
 377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.Direction    | hspi->Init.MasterSSIdleness | hspi->In
 378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
 380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Initialize TXCRC Pattern Initial Value */
 385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Init.TxCRCInitializationPattern == SPI_CRC_INITIALIZATION_ALL_ONE_PATTERN)
 386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_TCRCINI);
 388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
 390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_TCRCINI);
 392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Initialize RXCRC Pattern Initial Value */
 395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Init.RxCRCInitializationPattern == SPI_CRC_INITIALIZATION_ALL_ONE_PATTERN)
 396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_RCRCINI);
 398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
 400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_RCRCINI);
 402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Enable 33/17 bits CRC computation */
 405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (crc_length == SPI_CRC_LENGTH_16BIT)) ||
 406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance))  && (crc_length == SPI_CRC_LENGTH_32BIT)))
 407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRC33_17);
 409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
 411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_CRC33_17);
 413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
ARM GAS  /tmp/ccwjY1CM.s 			page 13


 414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Write CRC polynomial in SPI Register */
 416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPOLY, hspi->Init.CRCPolynomial);
 417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Insure that Underrun configuration is managed only by Salve */
 421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_SLAVE)
 271              		.loc 1 421 17
 272 017a 7B68     		ldr	r3, [r7, #4]
 273 017c 5B68     		ldr	r3, [r3, #4]
 274              		.loc 1 421 6
 275 017e 002B     		cmp	r3, #0
 276 0180 13D1     		bne	.L13
 422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Set Default Underrun configuration */
 424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
 425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_DISABLE)
 426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif
 427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRDET, SPI_CFG1_UDRDET_0);
 277              		.loc 1 428 7
 278 0182 7B68     		ldr	r3, [r7, #4]
 279 0184 1B68     		ldr	r3, [r3]
 280 0186 9B68     		ldr	r3, [r3, #8]
 281 0188 23F4C052 		bic	r2, r3, #6144
 282 018c 7B68     		ldr	r3, [r7, #4]
 283 018e 1B68     		ldr	r3, [r3]
 284 0190 42F40062 		orr	r2, r2, #2048
 285 0194 9A60     		str	r2, [r3, #8]
 429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRCFG, SPI_CFG1_UDRCFG_1);
 286              		.loc 1 430 5
 287 0196 7B68     		ldr	r3, [r7, #4]
 288 0198 1B68     		ldr	r3, [r3]
 289 019a 9B68     		ldr	r3, [r3, #8]
 290 019c 23F4C062 		bic	r2, r3, #1536
 291 01a0 7B68     		ldr	r3, [r7, #4]
 292 01a2 1B68     		ldr	r3, [r3]
 293 01a4 42F48062 		orr	r2, r2, #1024
 294 01a8 9A60     		str	r2, [r3, #8]
 295              	.L13:
 431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 296              		.loc 1 435 3
 297 01aa 7B68     		ldr	r3, [r7, #4]
 298 01ac 1B68     		ldr	r3, [r3]
 299 01ae 1A6D     		ldr	r2, [r3, #80]
 300 01b0 7B68     		ldr	r3, [r7, #4]
 301 01b2 1B68     		ldr	r3, [r3]
 302 01b4 22F00102 		bic	r2, r2, #1
 303 01b8 1A65     		str	r2, [r3, #80]
 436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccwjY1CM.s 			page 14


 438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Insure that AFCNTR is managed only by Master */
 439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER)
 304              		.loc 1 439 18
 305 01ba 7B68     		ldr	r3, [r7, #4]
 306 01bc 5B68     		ldr	r3, [r3, #4]
 307              		.loc 1 439 24
 308 01be 03F48003 		and	r3, r3, #4194304
 309              		.loc 1 439 6
 310 01c2 002B     		cmp	r3, #0
 311 01c4 0AD0     		beq	.L14
 440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Alternate function GPIOs control */
 442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CFG2, SPI_CFG2_AFCNTR, (hspi->Init.MasterKeepIOState));
 312              		.loc 1 442 5
 313 01c6 7B68     		ldr	r3, [r7, #4]
 314 01c8 1B68     		ldr	r3, [r3]
 315 01ca DB68     		ldr	r3, [r3, #12]
 316 01cc 23F00041 		bic	r1, r3, #-2147483648
 317 01d0 7B68     		ldr	r3, [r7, #4]
 318 01d2 5A6D     		ldr	r2, [r3, #84]
 319 01d4 7B68     		ldr	r3, [r7, #4]
 320 01d6 1B68     		ldr	r3, [r3]
 321 01d8 0A43     		orrs	r2, r2, r1
 322 01da DA60     		str	r2, [r3, #12]
 323              	.L14:
 443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 324              		.loc 1 445 19
 325 01dc 7B68     		ldr	r3, [r7, #4]
 326 01de 0022     		movs	r2, #0
 327 01e0 C3F88420 		str	r2, [r3, #132]
 446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 328              		.loc 1 446 19
 329 01e4 7B68     		ldr	r3, [r7, #4]
 330 01e6 0122     		movs	r2, #1
 331 01e8 83F88120 		strb	r2, [r3, #129]
 447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_OK;
 332              		.loc 1 448 10
 333 01ec 0023     		movs	r3, #0
 334              	.L3:
 449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 335              		.loc 1 449 1
 336 01ee 1846     		mov	r0, r3
 337 01f0 1037     		adds	r7, r7, #16
 338              	.LCFI3:
 339              		.cfi_def_cfa_offset 8
 340 01f2 BD46     		mov	sp, r7
 341              	.LCFI4:
 342              		.cfi_def_cfa_register 13
 343              		@ sp needed
 344 01f4 80BD     		pop	{r7, pc}
 345              	.L16:
 346 01f6 00BF     		.align	2
 347              	.L15:
 348 01f8 00300140 		.word	1073819648
ARM GAS  /tmp/ccwjY1CM.s 			page 15


 349 01fc 00380040 		.word	1073756160
 350 0200 003C0040 		.word	1073757184
 351              		.cfi_endproc
 352              	.LFE331:
 354              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 355              		.align	1
 356              		.global	HAL_SPI_DeInit
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv5-d16
 362              	HAL_SPI_DeInit:
 363              	.LFB332:
 450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
 455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
 456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 364              		.loc 1 458 1
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 8
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368 0000 80B5     		push	{r7, lr}
 369              	.LCFI5:
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 7, -8
 372              		.cfi_offset 14, -4
 373 0002 82B0     		sub	sp, sp, #8
 374              	.LCFI6:
 375              		.cfi_def_cfa_offset 16
 376 0004 00AF     		add	r7, sp, #0
 377              	.LCFI7:
 378              		.cfi_def_cfa_register 7
 379 0006 7860     		str	r0, [r7, #4]
 459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi == NULL)
 380              		.loc 1 460 6
 381 0008 7B68     		ldr	r3, [r7, #4]
 382 000a 002B     		cmp	r3, #0
 383 000c 01D1     		bne	.L18
 461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 384              		.loc 1 462 12
 385 000e 0123     		movs	r3, #1
 386 0010 1BE0     		b	.L19
 387              	.L18:
 463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check SPI Instance parameter */
 466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 388              		.loc 1 468 15
ARM GAS  /tmp/ccwjY1CM.s 			page 16


 389 0012 7B68     		ldr	r3, [r7, #4]
 390 0014 0222     		movs	r2, #2
 391 0016 83F88120 		strb	r2, [r3, #129]
 469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 392              		.loc 1 471 3
 393 001a 7B68     		ldr	r3, [r7, #4]
 394 001c 1B68     		ldr	r3, [r3]
 395 001e 1A68     		ldr	r2, [r3]
 396 0020 7B68     		ldr	r3, [r7, #4]
 397 0022 1B68     		ldr	r3, [r3]
 398 0024 22F00102 		bic	r2, r2, #1
 399 0028 1A60     		str	r2, [r3]
 472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
 474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 400              		.loc 1 483 3
 401 002a 7868     		ldr	r0, [r7, #4]
 402 002c FFF7FEFF 		bl	HAL_SPI_MspDeInit
 484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 403              		.loc 1 486 19
 404 0030 7B68     		ldr	r3, [r7, #4]
 405 0032 0022     		movs	r2, #0
 406 0034 C3F88420 		str	r2, [r3, #132]
 487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 407              		.loc 1 487 15
 408 0038 7B68     		ldr	r3, [r7, #4]
 409 003a 0022     		movs	r2, #0
 410 003c 83F88120 		strb	r2, [r3, #129]
 488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Release Lock */
 490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 411              		.loc 1 490 3
 412 0040 7B68     		ldr	r3, [r7, #4]
 413 0042 0022     		movs	r2, #0
 414 0044 83F88020 		strb	r2, [r3, #128]
 491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_OK;
 415              		.loc 1 492 10
 416 0048 0023     		movs	r3, #0
 417              	.L19:
 493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 418              		.loc 1 493 1
 419 004a 1846     		mov	r0, r3
 420 004c 0837     		adds	r7, r7, #8
ARM GAS  /tmp/ccwjY1CM.s 			page 17


 421              	.LCFI8:
 422              		.cfi_def_cfa_offset 8
 423 004e BD46     		mov	sp, r7
 424              	.LCFI9:
 425              		.cfi_def_cfa_register 13
 426              		@ sp needed
 427 0050 80BD     		pop	{r7, pc}
 428              		.cfi_endproc
 429              	.LFE332:
 431              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 432              		.align	1
 433              		.weak	HAL_SPI_MspInit
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu fpv5-d16
 439              	HAL_SPI_MspInit:
 440              	.LFB333:
 494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
 499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
 500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 441              		.loc 1 502 1
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 8
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446 0000 80B4     		push	{r7}
 447              	.LCFI10:
 448              		.cfi_def_cfa_offset 4
 449              		.cfi_offset 7, -4
 450 0002 83B0     		sub	sp, sp, #12
 451              	.LCFI11:
 452              		.cfi_def_cfa_offset 16
 453 0004 00AF     		add	r7, sp, #0
 454              	.LCFI12:
 455              		.cfi_def_cfa_register 7
 456 0006 7860     		str	r0, [r7, #4]
 503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
 505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
 509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 457              		.loc 1 509 1
 458 0008 00BF     		nop
 459 000a 0C37     		adds	r7, r7, #12
 460              	.LCFI13:
 461              		.cfi_def_cfa_offset 4
 462 000c BD46     		mov	sp, r7
 463              	.LCFI14:
ARM GAS  /tmp/ccwjY1CM.s 			page 18


 464              		.cfi_def_cfa_register 13
 465              		@ sp needed
 466 000e 5DF8047B 		ldr	r7, [sp], #4
 467              	.LCFI15:
 468              		.cfi_restore 7
 469              		.cfi_def_cfa_offset 0
 470 0012 7047     		bx	lr
 471              		.cfi_endproc
 472              	.LFE333:
 474              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 475              		.align	1
 476              		.weak	HAL_SPI_MspDeInit
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 480              		.fpu fpv5-d16
 482              	HAL_SPI_MspDeInit:
 483              	.LFB334:
 510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
 515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
 516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 484              		.loc 1 518 1
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 8
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 489 0000 80B4     		push	{r7}
 490              	.LCFI16:
 491              		.cfi_def_cfa_offset 4
 492              		.cfi_offset 7, -4
 493 0002 83B0     		sub	sp, sp, #12
 494              	.LCFI17:
 495              		.cfi_def_cfa_offset 16
 496 0004 00AF     		add	r7, sp, #0
 497              	.LCFI18:
 498              		.cfi_def_cfa_register 7
 499 0006 7860     		str	r0, [r7, #4]
 519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
 521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
 525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 500              		.loc 1 525 1
 501 0008 00BF     		nop
 502 000a 0C37     		adds	r7, r7, #12
 503              	.LCFI19:
 504              		.cfi_def_cfa_offset 4
 505 000c BD46     		mov	sp, r7
 506              	.LCFI20:
ARM GAS  /tmp/ccwjY1CM.s 			page 19


 507              		.cfi_def_cfa_register 13
 508              		@ sp needed
 509 000e 5DF8047B 		ldr	r7, [sp], #4
 510              	.LCFI21:
 511              		.cfi_restore 7
 512              		.cfi_def_cfa_offset 0
 513 0012 7047     		bx	lr
 514              		.cfi_endproc
 515              	.LFE334:
 517              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 518              		.align	1
 519              		.global	HAL_SPI_Transmit
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 523              		.fpu fpv5-d16
 525              	HAL_SPI_Transmit:
 526              	.LFB335:
 526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
 528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Register a User SPI Callback
 530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
 535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
 536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (pCallback == NULL)
 542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update the error code */
 544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
 545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process locked */
 549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     switch (CallbackID)
 554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
 561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
ARM GAS  /tmp/ccwjY1CM.s 			page 20


 565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
 581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       default :
 596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Update the error code */
 597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Return error status */
 600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         status =  HAL_ERROR;
 601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     switch (CallbackID)
 607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       default :
 617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Update the error code */
 618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Return error status */
 621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         status =  HAL_ERROR;
ARM GAS  /tmp/ccwjY1CM.s 			page 21


 622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
 626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update the error code */
 628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Return error status */
 631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     status =  HAL_ERROR;
 632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Release Lock */
 635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return status;
 637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
 641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
 646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
 648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process locked */
 652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     switch (CallbackID)
 657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
 660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
 672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
ARM GAS  /tmp/ccwjY1CM.s 			page 22


 679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       default :
 699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Update the error code */
 700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Return error status */
 703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         status =  HAL_ERROR;
 704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     switch (CallbackID)
 710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       default :
 720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Update the error code */
 721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Return error status */
 724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         status =  HAL_ERROR;
 725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
 729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update the error code */
 731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Return error status */
 734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     status =  HAL_ERROR;
 735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccwjY1CM.s 			page 23


 736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Release Lock */
 738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return status;
 740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
 744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  *  @brief   Data transfers functions
 748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  *
 749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @verbatim
 750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ==============================================================================
 751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                       ##### IO operation functions #####
 752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  ===============================================================================
 753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  [..]
 754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     data transfers.
 756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     (#) There are two modes of transfer:
 760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        (##) Blocking mode: The communication is performed in polling mode.
 761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             after finishing transfer.
 763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        (##) No-Blocking mode: The communication is performed using Interrupts
 764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             The end of the data processing will be indicated through the
 766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             using DMA mode.
 768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @endverbatim
 776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
 782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
 783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData  : pointer to data buffer
 784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be sent
 785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Timeout: Timeout duration
 786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
 787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 527              		.loc 1 789 1
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 32
ARM GAS  /tmp/ccwjY1CM.s 			page 24


 530              		@ frame_needed = 1, uses_anonymous_args = 0
 531 0000 80B5     		push	{r7, lr}
 532              	.LCFI22:
 533              		.cfi_def_cfa_offset 8
 534              		.cfi_offset 7, -8
 535              		.cfi_offset 14, -4
 536 0002 8AB0     		sub	sp, sp, #40
 537              	.LCFI23:
 538              		.cfi_def_cfa_offset 48
 539 0004 02AF     		add	r7, sp, #8
 540              	.LCFI24:
 541              		.cfi_def_cfa 7, 40
 542 0006 F860     		str	r0, [r7, #12]
 543 0008 B960     		str	r1, [r7, #8]
 544 000a 3B60     		str	r3, [r7]
 545 000c 1346     		mov	r3, r2	@ movhi
 546 000e FB80     		strh	r3, [r7, #6]	@ movhi
 790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
 791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
 547              		.loc 1 791 57
 548 0010 FB68     		ldr	r3, [r7, #12]
 549 0012 1B68     		ldr	r3, [r3]
 550              		.loc 1 791 18
 551 0014 2033     		adds	r3, r3, #32
 552 0016 FB61     		str	r3, [r7, #28]
 792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
 793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t tickstart;
 795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 553              		.loc 1 795 21
 554 0018 0023     		movs	r3, #0
 555 001a FB76     		strb	r3, [r7, #27]
 796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
 798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));
 799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Locked */
 801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 556              		.loc 1 801 3
 557 001c FB68     		ldr	r3, [r7, #12]
 558 001e 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 559 0022 012B     		cmp	r3, #1
 560 0024 01D1     		bne	.L23
 561              		.loc 1 801 3 is_stmt 0 discriminator 1
 562 0026 0223     		movs	r3, #2
 563 0028 D7E1     		b	.L24
 564              	.L23:
 565              		.loc 1 801 3 discriminator 2
 566 002a FB68     		ldr	r3, [r7, #12]
 567 002c 0122     		movs	r2, #1
 568 002e 83F88020 		strb	r2, [r3, #128]
 802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 569              		.loc 1 804 15 is_stmt 1 discriminator 2
 570 0032 FFF7FEFF 		bl	HAL_GetTick
 571 0036 7861     		str	r0, [r7, #20]
ARM GAS  /tmp/ccwjY1CM.s 			page 25


 805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 572              		.loc 1 806 11 discriminator 2
 573 0038 FB68     		ldr	r3, [r7, #12]
 574 003a 93F88130 		ldrb	r3, [r3, #129]
 575 003e DBB2     		uxtb	r3, r3
 576              		.loc 1 806 6 discriminator 2
 577 0040 012B     		cmp	r3, #1
 578 0042 07D0     		beq	.L25
 807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 579              		.loc 1 808 15
 580 0044 0223     		movs	r3, #2
 581 0046 FB76     		strb	r3, [r7, #27]
 809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 582              		.loc 1 809 5
 583 0048 FB68     		ldr	r3, [r7, #12]
 584 004a 0022     		movs	r2, #0
 585 004c 83F88020 		strb	r2, [r3, #128]
 810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 586              		.loc 1 810 12
 587 0050 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 588 0052 C2E1     		b	.L24
 589              	.L25:
 811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
 590              		.loc 1 813 6
 591 0054 BB68     		ldr	r3, [r7, #8]
 592 0056 002B     		cmp	r3, #0
 593 0058 02D0     		beq	.L26
 594              		.loc 1 813 23 discriminator 1
 595 005a FB88     		ldrh	r3, [r7, #6]
 596 005c 002B     		cmp	r3, #0
 597 005e 07D1     		bne	.L27
 598              	.L26:
 814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 599              		.loc 1 815 15
 600 0060 0123     		movs	r3, #1
 601 0062 FB76     		strb	r3, [r7, #27]
 816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 602              		.loc 1 816 5
 603 0064 FB68     		ldr	r3, [r7, #12]
 604 0066 0022     		movs	r2, #0
 605 0068 83F88020 		strb	r2, [r3, #128]
 817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 606              		.loc 1 817 12
 607 006c FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 608 006e B4E1     		b	.L24
 609              	.L27:
 818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
 821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 610              		.loc 1 821 21
 611 0070 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 26


 612 0072 0322     		movs	r2, #3
 613 0074 83F88120 		strb	r2, [r3, #129]
 822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 614              		.loc 1 822 21
 615 0078 FB68     		ldr	r3, [r7, #12]
 616 007a 0022     		movs	r2, #0
 617 007c C3F88420 		str	r2, [r3, #132]
 823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 618              		.loc 1 823 21
 619 0080 FB68     		ldr	r3, [r7, #12]
 620 0082 BA68     		ldr	r2, [r7, #8]
 621 0084 DA65     		str	r2, [r3, #92]
 824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 622              		.loc 1 824 21
 623 0086 FB68     		ldr	r3, [r7, #12]
 624 0088 FA88     		ldrh	r2, [r7, #6]	@ movhi
 625 008a A3F86020 		strh	r2, [r3, #96]	@ movhi
 825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 626              		.loc 1 825 21
 627 008e FB68     		ldr	r3, [r7, #12]
 628 0090 FA88     		ldrh	r2, [r7, #6]	@ movhi
 629 0092 A3F86220 		strh	r2, [r3, #98]	@ movhi
 826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*Init field not used in handle to zero */
 828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = NULL;
 630              		.loc 1 828 21
 631 0096 FB68     		ldr	r3, [r7, #12]
 632 0098 0022     		movs	r2, #0
 633 009a 5A66     		str	r2, [r3, #100]
 829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = (uint16_t) 0UL;
 634              		.loc 1 829 21
 635 009c FB68     		ldr	r3, [r7, #12]
 636 009e 0022     		movs	r2, #0
 637 00a0 A3F86820 		strh	r2, [r3, #104]	@ movhi
 830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t) 0UL;
 638              		.loc 1 830 21
 639 00a4 FB68     		ldr	r3, [r7, #12]
 640 00a6 0022     		movs	r2, #0
 641 00a8 A3F86A20 		strh	r2, [r3, #106]	@ movhi
 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 642              		.loc 1 831 21
 643 00ac FB68     		ldr	r3, [r7, #12]
 644 00ae 0022     		movs	r2, #0
 645 00b0 5A67     		str	r2, [r3, #116]
 832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 646              		.loc 1 832 21
 647 00b2 FB68     		ldr	r3, [r7, #12]
 648 00b4 0022     		movs	r2, #0
 649 00b6 1A67     		str	r2, [r3, #112]
 833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 650              		.loc 1 835 17
 651 00b8 FB68     		ldr	r3, [r7, #12]
 652 00ba 9B68     		ldr	r3, [r3, #8]
 653              		.loc 1 835 6
 654 00bc B3F5C02F 		cmp	r3, #393216
ARM GAS  /tmp/ccwjY1CM.s 			page 27


 655 00c0 07D1     		bne	.L28
 836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 656              		.loc 1 837 5
 657 00c2 FB68     		ldr	r3, [r7, #12]
 658 00c4 1B68     		ldr	r3, [r3]
 659 00c6 1A68     		ldr	r2, [r3]
 660 00c8 FB68     		ldr	r3, [r7, #12]
 661 00ca 1B68     		ldr	r3, [r3]
 662 00cc 42F40062 		orr	r2, r2, #2048
 663 00d0 1A60     		str	r2, [r3]
 664              	.L28:
 838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
 841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 665              		.loc 1 841 3
 666 00d2 FB68     		ldr	r3, [r7, #12]
 667 00d4 1B68     		ldr	r3, [r3]
 668 00d6 5A68     		ldr	r2, [r3, #4]
 669 00d8 964B     		ldr	r3, .L55
 670 00da 1340     		ands	r3, r3, r2
 671 00dc F988     		ldrh	r1, [r7, #6]
 672 00de FA68     		ldr	r2, [r7, #12]
 673 00e0 1268     		ldr	r2, [r2]
 674 00e2 0B43     		orrs	r3, r3, r1
 675 00e4 5360     		str	r3, [r2, #4]
 842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
 844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
 676              		.loc 1 844 3
 677 00e6 FB68     		ldr	r3, [r7, #12]
 678 00e8 1B68     		ldr	r3, [r3]
 679 00ea 1A68     		ldr	r2, [r3]
 680 00ec FB68     		ldr	r3, [r7, #12]
 681 00ee 1B68     		ldr	r3, [r3]
 682 00f0 42F00102 		orr	r2, r2, #1
 683 00f4 1A60     		str	r2, [r3]
 845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
 684              		.loc 1 846 17
 685 00f6 FB68     		ldr	r3, [r7, #12]
 686 00f8 5B68     		ldr	r3, [r3, #4]
 687              		.loc 1 846 6
 688 00fa B3F5800F 		cmp	r3, #4194304
 689 00fe 07D1     		bne	.L29
 847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
 849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 690              		.loc 1 849 5
 691 0100 FB68     		ldr	r3, [r7, #12]
 692 0102 1B68     		ldr	r3, [r3]
 693 0104 1A68     		ldr	r2, [r3]
 694 0106 FB68     		ldr	r3, [r7, #12]
 695 0108 1B68     		ldr	r3, [r3]
 696 010a 42F40072 		orr	r2, r2, #512
 697 010e 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccwjY1CM.s 			page 28


 698              	.L29:
 850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 32 Bit mode */
 853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 699              		.loc 1 853 17
 700 0110 FB68     		ldr	r3, [r7, #12]
 701 0112 DB68     		ldr	r3, [r3, #12]
 702              		.loc 1 853 6
 703 0114 0F2B     		cmp	r3, #15
 704 0116 47D9     		bls	.L30
 854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transmit data in 32 Bit mode */
 856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->TxXferCount > 0UL)
 705              		.loc 1 856 11
 706 0118 3FE0     		b	.L31
 707              	.L35:
 857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Wait until TXP flag is set to send data */
 859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 708              		.loc 1 859 11
 709 011a FB68     		ldr	r3, [r7, #12]
 710 011c 1B68     		ldr	r3, [r3]
 711 011e 5B69     		ldr	r3, [r3, #20]
 712 0120 03F00203 		and	r3, r3, #2
 713              		.loc 1 859 10
 714 0124 022B     		cmp	r3, #2
 715 0126 14D1     		bne	.L32
 860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
 716              		.loc 1 861 71
 717 0128 FB68     		ldr	r3, [r7, #12]
 718 012a DA6D     		ldr	r2, [r3, #92]
 719              		.loc 1 861 33
 720 012c FB68     		ldr	r3, [r7, #12]
 721 012e 1B68     		ldr	r3, [r3]
 722              		.loc 1 861 53
 723 0130 1268     		ldr	r2, [r2]
 724              		.loc 1 861 51
 725 0132 1A62     		str	r2, [r3, #32]
 862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint32_t);
 726              		.loc 1 862 26
 727 0134 FB68     		ldr	r3, [r7, #12]
 728 0136 DB6D     		ldr	r3, [r3, #92]
 729 0138 1A1D     		adds	r2, r3, #4
 730 013a FB68     		ldr	r3, [r7, #12]
 731 013c DA65     		str	r2, [r3, #92]
 863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxXferCount--;
 732              		.loc 1 863 13
 733 013e FB68     		ldr	r3, [r7, #12]
 734 0140 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 735 0144 9BB2     		uxth	r3, r3
 736              		.loc 1 863 26
 737 0146 013B     		subs	r3, r3, #1
 738 0148 9AB2     		uxth	r2, r3
 739 014a FB68     		ldr	r3, [r7, #12]
 740 014c A3F86220 		strh	r2, [r3, #98]	@ movhi
ARM GAS  /tmp/ccwjY1CM.s 			page 29


 741 0150 23E0     		b	.L31
 742              	.L32:
 864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
 866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 743              		.loc 1 868 16
 744 0152 FFF7FEFF 		bl	HAL_GetTick
 745 0156 0246     		mov	r2, r0
 746              		.loc 1 868 30
 747 0158 7B69     		ldr	r3, [r7, #20]
 748 015a D31A     		subs	r3, r2, r3
 749              		.loc 1 868 12
 750 015c 3A68     		ldr	r2, [r7]
 751 015e 9A42     		cmp	r2, r3
 752 0160 03D8     		bhi	.L33
 753              		.loc 1 868 56 discriminator 1
 754 0162 3B68     		ldr	r3, [r7]
 755 0164 B3F1FF3F 		cmp	r3, #-1
 756 0168 02D1     		bne	.L34
 757              	.L33:
 758              		.loc 1 868 87 discriminator 3
 759 016a 3B68     		ldr	r3, [r7]
 760 016c 002B     		cmp	r3, #0
 761 016e 14D1     		bne	.L31
 762              	.L34:
 869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
 871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
 763              		.loc 1 871 11
 764 0170 F868     		ldr	r0, [r7, #12]
 765 0172 FFF7FEFF 		bl	SPI_CloseTransfer
 872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Process Unlocked */
 874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 766              		.loc 1 874 11
 767 0176 FB68     		ldr	r3, [r7, #12]
 768 0178 0022     		movs	r2, #0
 769 017a 83F88020 		strb	r2, [r3, #128]
 875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 770              		.loc 1 876 11
 771 017e FB68     		ldr	r3, [r7, #12]
 772 0180 D3F88430 		ldr	r3, [r3, #132]
 773 0184 43F48072 		orr	r2, r3, #256
 774 0188 FB68     		ldr	r3, [r7, #12]
 775 018a C3F88420 		str	r2, [r3, #132]
 877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 776              		.loc 1 877 23
 777 018e FB68     		ldr	r3, [r7, #12]
 778 0190 0122     		movs	r2, #1
 779 0192 83F88120 		strb	r2, [r3, #129]
 878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
 780              		.loc 1 878 18
 781 0196 0123     		movs	r3, #1
 782 0198 1FE1     		b	.L24
ARM GAS  /tmp/ccwjY1CM.s 			page 30


 783              	.L31:
 856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 784              		.loc 1 856 16
 785 019a FB68     		ldr	r3, [r7, #12]
 786 019c B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 787 01a0 9BB2     		uxth	r3, r3
 856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 788              		.loc 1 856 11
 789 01a2 002B     		cmp	r3, #0
 790 01a4 B9D1     		bne	.L35
 791 01a6 F2E0     		b	.L36
 792              	.L30:
 879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 793              		.loc 1 884 22
 794 01a8 FB68     		ldr	r3, [r7, #12]
 795 01aa DB68     		ldr	r3, [r3, #12]
 796              		.loc 1 884 11
 797 01ac 072B     		cmp	r3, #7
 798 01ae 40F2E780 		bls	.L45
 885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->TxXferCount > 0UL)
 799              		.loc 1 887 11
 800 01b2 5DE0     		b	.L38
 801              	.L44:
 888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Wait until TXP flag is set to send data */
 890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 802              		.loc 1 890 11
 803 01b4 FB68     		ldr	r3, [r7, #12]
 804 01b6 1B68     		ldr	r3, [r3]
 805 01b8 5B69     		ldr	r3, [r3, #20]
 806 01ba 03F00203 		and	r3, r3, #2
 807              		.loc 1 890 10
 808 01be 022B     		cmp	r3, #2
 809 01c0 32D1     		bne	.L39
 891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 810              		.loc 1 892 18
 811 01c2 FB68     		ldr	r3, [r7, #12]
 812 01c4 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 813 01c8 9BB2     		uxth	r3, r3
 814              		.loc 1 892 12
 815 01ca 012B     		cmp	r3, #1
 816 01cc 18D9     		bls	.L40
 817              		.loc 1 892 53 discriminator 1
 818 01ce FB68     		ldr	r3, [r7, #12]
 819 01d0 DB6B     		ldr	r3, [r3, #60]
 820              		.loc 1 892 39 discriminator 1
 821 01d2 002B     		cmp	r3, #0
 822 01d4 14D0     		beq	.L40
 893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
ARM GAS  /tmp/ccwjY1CM.s 			page 31


 894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
 823              		.loc 1 894 73
 824 01d6 FB68     		ldr	r3, [r7, #12]
 825 01d8 DA6D     		ldr	r2, [r3, #92]
 826              		.loc 1 894 35
 827 01da FB68     		ldr	r3, [r7, #12]
 828 01dc 1B68     		ldr	r3, [r3]
 829              		.loc 1 894 55
 830 01de 1268     		ldr	r2, [r2]
 831              		.loc 1 894 53
 832 01e0 1A62     		str	r2, [r3, #32]
 895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
 833              		.loc 1 895 28
 834 01e2 FB68     		ldr	r3, [r7, #12]
 835 01e4 DB6D     		ldr	r3, [r3, #92]
 836 01e6 1A1D     		adds	r2, r3, #4
 837 01e8 FB68     		ldr	r3, [r7, #12]
 838 01ea DA65     		str	r2, [r3, #92]
 896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
 839              		.loc 1 896 29
 840 01ec FB68     		ldr	r3, [r7, #12]
 841 01ee B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 842 01f2 9BB2     		uxth	r3, r3
 843 01f4 023B     		subs	r3, r3, #2
 844 01f6 9AB2     		uxth	r2, r3
 845 01f8 FB68     		ldr	r3, [r7, #12]
 846 01fa A3F86220 		strh	r2, [r3, #98]	@ movhi
 847 01fe 37E0     		b	.L38
 848              	.L40:
 897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
 899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
 901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *ptxdr_16bits = *((uint16_t *)hspi->pTxBuffPtr);
 849              		.loc 1 901 45
 850 0200 FB68     		ldr	r3, [r7, #12]
 851 0202 DB6D     		ldr	r3, [r3, #92]
 852              		.loc 1 901 27
 853 0204 1A88     		ldrh	r2, [r3]
 854              		.loc 1 901 25
 855 0206 FB69     		ldr	r3, [r7, #28]
 856 0208 1A80     		strh	r2, [r3]	@ movhi
 902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint16_t *)&hspi->Instance->TXDR) = *((uint16_t *)hspi->pTxBuffPtr);
 904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
 905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 857              		.loc 1 905 28
 858 020a FB68     		ldr	r3, [r7, #12]
 859 020c DB6D     		ldr	r3, [r3, #92]
 860 020e 9A1C     		adds	r2, r3, #2
 861 0210 FB68     		ldr	r3, [r7, #12]
 862 0212 DA65     		str	r2, [r3, #92]
 906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
 863              		.loc 1 906 15
 864 0214 FB68     		ldr	r3, [r7, #12]
 865 0216 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 866 021a 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccwjY1CM.s 			page 32


 867              		.loc 1 906 28
 868 021c 013B     		subs	r3, r3, #1
 869 021e 9AB2     		uxth	r2, r3
 870 0220 FB68     		ldr	r3, [r7, #12]
 871 0222 A3F86220 		strh	r2, [r3, #98]	@ movhi
 872 0226 23E0     		b	.L38
 873              	.L39:
 907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
 910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
 912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 874              		.loc 1 912 16
 875 0228 FFF7FEFF 		bl	HAL_GetTick
 876 022c 0246     		mov	r2, r0
 877              		.loc 1 912 30
 878 022e 7B69     		ldr	r3, [r7, #20]
 879 0230 D31A     		subs	r3, r2, r3
 880              		.loc 1 912 12
 881 0232 3A68     		ldr	r2, [r7]
 882 0234 9A42     		cmp	r2, r3
 883 0236 03D8     		bhi	.L42
 884              		.loc 1 912 56 discriminator 1
 885 0238 3B68     		ldr	r3, [r7]
 886 023a B3F1FF3F 		cmp	r3, #-1
 887 023e 02D1     		bne	.L43
 888              	.L42:
 889              		.loc 1 912 87 discriminator 3
 890 0240 3B68     		ldr	r3, [r7]
 891 0242 002B     		cmp	r3, #0
 892 0244 14D1     		bne	.L38
 893              	.L43:
 913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
 915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
 894              		.loc 1 915 11
 895 0246 F868     		ldr	r0, [r7, #12]
 896 0248 FFF7FEFF 		bl	SPI_CloseTransfer
 916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Process Unlocked */
 918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 897              		.loc 1 918 11
 898 024c FB68     		ldr	r3, [r7, #12]
 899 024e 0022     		movs	r2, #0
 900 0250 83F88020 		strb	r2, [r3, #128]
 919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 901              		.loc 1 920 11
 902 0254 FB68     		ldr	r3, [r7, #12]
 903 0256 D3F88430 		ldr	r3, [r3, #132]
 904 025a 43F48072 		orr	r2, r3, #256
 905 025e FB68     		ldr	r3, [r7, #12]
 906 0260 C3F88420 		str	r2, [r3, #132]
 921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 907              		.loc 1 921 23
 908 0264 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 33


 909 0266 0122     		movs	r2, #1
 910 0268 83F88120 		strb	r2, [r3, #129]
 922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
 911              		.loc 1 922 18
 912 026c 0123     		movs	r3, #1
 913 026e B4E0     		b	.L24
 914              	.L38:
 887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 915              		.loc 1 887 16
 916 0270 FB68     		ldr	r3, [r7, #12]
 917 0272 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 918 0276 9BB2     		uxth	r3, r3
 887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 919              		.loc 1 887 11
 920 0278 002B     		cmp	r3, #0
 921 027a 9BD1     		bne	.L44
 922 027c 87E0     		b	.L36
 923              	.L52:
 923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
 929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->TxXferCount > 0UL)
 931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Wait until TXP flag is set to send data */
 933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 924              		.loc 1 933 11
 925 027e FB68     		ldr	r3, [r7, #12]
 926 0280 1B68     		ldr	r3, [r3]
 927 0282 5B69     		ldr	r3, [r3, #20]
 928 0284 03F00203 		and	r3, r3, #2
 929              		.loc 1 933 10
 930 0288 022B     		cmp	r3, #2
 931 028a 55D1     		bne	.L46
 934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((hspi->TxXferCount > 3UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_03DATA))
 932              		.loc 1 935 18
 933 028c FB68     		ldr	r3, [r7, #12]
 934 028e B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 935 0292 9BB2     		uxth	r3, r3
 936              		.loc 1 935 12
 937 0294 032B     		cmp	r3, #3
 938 0296 18D9     		bls	.L47
 939              		.loc 1 935 53 discriminator 1
 940 0298 FB68     		ldr	r3, [r7, #12]
 941 029a DB6B     		ldr	r3, [r3, #60]
 942              		.loc 1 935 39 discriminator 1
 943 029c 402B     		cmp	r3, #64
 944 029e 14D9     		bls	.L47
 936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
 945              		.loc 1 937 73
 946 02a0 FB68     		ldr	r3, [r7, #12]
 947 02a2 DA6D     		ldr	r2, [r3, #92]
ARM GAS  /tmp/ccwjY1CM.s 			page 34


 948              		.loc 1 937 35
 949 02a4 FB68     		ldr	r3, [r7, #12]
 950 02a6 1B68     		ldr	r3, [r3]
 951              		.loc 1 937 55
 952 02a8 1268     		ldr	r2, [r2]
 953              		.loc 1 937 53
 954 02aa 1A62     		str	r2, [r3, #32]
 938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
 955              		.loc 1 938 28
 956 02ac FB68     		ldr	r3, [r7, #12]
 957 02ae DB6D     		ldr	r3, [r3, #92]
 958 02b0 1A1D     		adds	r2, r3, #4
 959 02b2 FB68     		ldr	r3, [r7, #12]
 960 02b4 DA65     		str	r2, [r3, #92]
 939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)4UL;
 961              		.loc 1 939 29
 962 02b6 FB68     		ldr	r3, [r7, #12]
 963 02b8 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 964 02bc 9BB2     		uxth	r3, r3
 965 02be 043B     		subs	r3, r3, #4
 966 02c0 9AB2     		uxth	r2, r3
 967 02c2 FB68     		ldr	r3, [r7, #12]
 968 02c4 A3F86220 		strh	r2, [r3, #98]	@ movhi
 969 02c8 5AE0     		b	.L45
 970              	.L47:
 940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA
 971              		.loc 1 941 23
 972 02ca FB68     		ldr	r3, [r7, #12]
 973 02cc B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 974 02d0 9BB2     		uxth	r3, r3
 975              		.loc 1 941 17
 976 02d2 012B     		cmp	r3, #1
 977 02d4 17D9     		bls	.L49
 978              		.loc 1 941 58 discriminator 1
 979 02d6 FB68     		ldr	r3, [r7, #12]
 980 02d8 DB6B     		ldr	r3, [r3, #60]
 981              		.loc 1 941 44 discriminator 1
 982 02da 002B     		cmp	r3, #0
 983 02dc 13D0     		beq	.L49
 942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
 944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *ptxdr_16bits = *((uint16_t *)hspi->pTxBuffPtr);
 984              		.loc 1 944 45
 985 02de FB68     		ldr	r3, [r7, #12]
 986 02e0 DB6D     		ldr	r3, [r3, #92]
 987              		.loc 1 944 27
 988 02e2 1A88     		ldrh	r2, [r3]
 989              		.loc 1 944 25
 990 02e4 FB69     		ldr	r3, [r7, #28]
 991 02e6 1A80     		strh	r2, [r3]	@ movhi
 945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint16_t *)&hspi->Instance->TXDR) = *((uint16_t *)hspi->pTxBuffPtr);
 947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
 948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 992              		.loc 1 948 28
 993 02e8 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 35


 994 02ea DB6D     		ldr	r3, [r3, #92]
 995 02ec 9A1C     		adds	r2, r3, #2
 996 02ee FB68     		ldr	r3, [r7, #12]
 997 02f0 DA65     		str	r2, [r3, #92]
 949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
 998              		.loc 1 949 29
 999 02f2 FB68     		ldr	r3, [r7, #12]
 1000 02f4 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 1001 02f8 9BB2     		uxth	r3, r3
 1002 02fa 023B     		subs	r3, r3, #2
 1003 02fc 9AB2     		uxth	r2, r3
 1004 02fe FB68     		ldr	r3, [r7, #12]
 1005 0300 A3F86220 		strh	r2, [r3, #98]	@ movhi
 1006 0304 3CE0     		b	.L45
 1007              	.L49:
 950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
 952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint8_t *)&hspi->Instance->TXDR) = *((uint8_t *)hspi->pTxBuffPtr);
 1008              		.loc 1 953 71
 1009 0306 FB68     		ldr	r3, [r7, #12]
 1010 0308 DA6D     		ldr	r2, [r3, #92]
 1011              		.loc 1 953 34
 1012 030a FB68     		ldr	r3, [r7, #12]
 1013 030c 1B68     		ldr	r3, [r3]
 1014              		.loc 1 953 29
 1015 030e 2033     		adds	r3, r3, #32
 1016              		.loc 1 953 54
 1017 0310 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1018              		.loc 1 953 52
 1019 0312 1A70     		strb	r2, [r3]
 954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint8_t);
 1020              		.loc 1 954 28
 1021 0314 FB68     		ldr	r3, [r7, #12]
 1022 0316 DB6D     		ldr	r3, [r3, #92]
 1023 0318 5A1C     		adds	r2, r3, #1
 1024 031a FB68     		ldr	r3, [r7, #12]
 1025 031c DA65     		str	r2, [r3, #92]
 955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
 1026              		.loc 1 955 15
 1027 031e FB68     		ldr	r3, [r7, #12]
 1028 0320 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 1029 0324 9BB2     		uxth	r3, r3
 1030              		.loc 1 955 28
 1031 0326 013B     		subs	r3, r3, #1
 1032 0328 9AB2     		uxth	r2, r3
 1033 032a FB68     		ldr	r3, [r7, #12]
 1034 032c A3F86220 		strh	r2, [r3, #98]	@ movhi
 1035 0330 26E0     		b	.L45
 1036              	.L56:
 1037 0332 00BF     		.align	2
 1038              	.L55:
 1039 0334 0000FFFF 		.word	-65536
 1040              	.L46:
 956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
ARM GAS  /tmp/ccwjY1CM.s 			page 36


 959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
 961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 1041              		.loc 1 961 16
 1042 0338 FFF7FEFF 		bl	HAL_GetTick
 1043 033c 0246     		mov	r2, r0
 1044              		.loc 1 961 30
 1045 033e 7B69     		ldr	r3, [r7, #20]
 1046 0340 D31A     		subs	r3, r2, r3
 1047              		.loc 1 961 12
 1048 0342 3A68     		ldr	r2, [r7]
 1049 0344 9A42     		cmp	r2, r3
 1050 0346 03D8     		bhi	.L50
 1051              		.loc 1 961 56 discriminator 1
 1052 0348 3B68     		ldr	r3, [r7]
 1053 034a B3F1FF3F 		cmp	r3, #-1
 1054 034e 02D1     		bne	.L51
 1055              	.L50:
 1056              		.loc 1 961 87 discriminator 3
 1057 0350 3B68     		ldr	r3, [r7]
 1058 0352 002B     		cmp	r3, #0
 1059 0354 14D1     		bne	.L45
 1060              	.L51:
 962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
 964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
 1061              		.loc 1 964 11
 1062 0356 F868     		ldr	r0, [r7, #12]
 1063 0358 FFF7FEFF 		bl	SPI_CloseTransfer
 965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Process Unlocked */
 967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 1064              		.loc 1 967 11
 1065 035c FB68     		ldr	r3, [r7, #12]
 1066 035e 0022     		movs	r2, #0
 1067 0360 83F88020 		strb	r2, [r3, #128]
 968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 1068              		.loc 1 969 11
 1069 0364 FB68     		ldr	r3, [r7, #12]
 1070 0366 D3F88430 		ldr	r3, [r3, #132]
 1071 036a 43F48072 		orr	r2, r3, #256
 1072 036e FB68     		ldr	r3, [r7, #12]
 1073 0370 C3F88420 		str	r2, [r3, #132]
 970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1074              		.loc 1 970 23
 1075 0374 FB68     		ldr	r3, [r7, #12]
 1076 0376 0122     		movs	r2, #1
 1077 0378 83F88120 		strb	r2, [r3, #129]
 971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
 1078              		.loc 1 971 18
 1079 037c 0123     		movs	r3, #1
 1080 037e 2CE0     		b	.L24
 1081              	.L45:
 930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1082              		.loc 1 930 16
 1083 0380 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 37


 1084 0382 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 1085 0386 9BB2     		uxth	r3, r3
 930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1086              		.loc 1 930 11
 1087 0388 002B     		cmp	r3, #0
 1088 038a 7FF478AF 		bne	.L52
 1089              	.L36:
 972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Wait for Tx (and CRC) data to be sent */
 978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, tickstart, Timeout) != HAL_OK)
 1090              		.loc 1 978 7
 1091 038e 3B68     		ldr	r3, [r7]
 1092 0390 0093     		str	r3, [sp]
 1093 0392 7B69     		ldr	r3, [r7, #20]
 1094 0394 0022     		movs	r2, #0
 1095 0396 0821     		movs	r1, #8
 1096 0398 F868     		ldr	r0, [r7, #12]
 1097 039a FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 1098 039e 0346     		mov	r3, r0
 1099              		.loc 1 978 6
 1100 03a0 002B     		cmp	r3, #0
 1101 03a2 07D0     		beq	.L53
 979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 1102              		.loc 1 980 5
 1103 03a4 FB68     		ldr	r3, [r7, #12]
 1104 03a6 D3F88430 		ldr	r3, [r3, #132]
 1105 03aa 43F02002 		orr	r2, r3, #32
 1106 03ae FB68     		ldr	r3, [r7, #12]
 1107 03b0 C3F88420 		str	r2, [r3, #132]
 1108              	.L53:
 981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call standard close procedure with error check */
 984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_CloseTransfer(hspi);
 1109              		.loc 1 984 3
 1110 03b4 F868     		ldr	r0, [r7, #12]
 1111 03b6 FFF7FEFF 		bl	SPI_CloseTransfer
 985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
 987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1112              		.loc 1 987 3
 1113 03ba FB68     		ldr	r3, [r7, #12]
 1114 03bc 0022     		movs	r2, #0
 1115 03be 83F88020 		strb	r2, [r3, #128]
 988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 1116              		.loc 1 989 15
 1117 03c2 FB68     		ldr	r3, [r7, #12]
 1118 03c4 0122     		movs	r2, #1
 1119 03c6 83F88120 		strb	r2, [r3, #129]
 990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
ARM GAS  /tmp/ccwjY1CM.s 			page 38


 1120              		.loc 1 991 11
 1121 03ca FB68     		ldr	r3, [r7, #12]
 1122 03cc D3F88430 		ldr	r3, [r3, #132]
 1123              		.loc 1 991 6
 1124 03d0 002B     		cmp	r3, #0
 1125 03d2 01D0     		beq	.L54
 992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 1126              		.loc 1 993 12
 1127 03d4 0123     		movs	r3, #1
 1128 03d6 00E0     		b	.L24
 1129              	.L54:
 994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 1130              		.loc 1 995 10
 1131 03d8 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1132              	.L24:
 996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 1133              		.loc 1 996 1
 1134 03da 1846     		mov	r0, r3
 1135 03dc 2037     		adds	r7, r7, #32
 1136              	.LCFI25:
 1137              		.cfi_def_cfa_offset 8
 1138 03de BD46     		mov	sp, r7
 1139              	.LCFI26:
 1140              		.cfi_def_cfa_register 13
 1141              		@ sp needed
 1142 03e0 80BD     		pop	{r7, pc}
 1143              		.cfi_endproc
 1144              	.LFE335:
 1146 03e2 00BF     		.section	.text.HAL_SPI_Receive,"ax",%progbits
 1147              		.align	1
 1148              		.global	HAL_SPI_Receive
 1149              		.syntax unified
 1150              		.thumb
 1151              		.thumb_func
 1152              		.fpu fpv5-d16
 1154              	HAL_SPI_Receive:
 1155              	.LFB336:
 997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
1000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
1002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData  : pointer to data buffer
1003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be received
1004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Timeout: Timeout duration
1005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
1008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 1156              		.loc 1 1008 1
 1157              		.cfi_startproc
 1158              		@ args = 0, pretend = 0, frame = 32
 1159              		@ frame_needed = 1, uses_anonymous_args = 0
 1160 0000 80B5     		push	{r7, lr}
 1161              	.LCFI27:
ARM GAS  /tmp/ccwjY1CM.s 			page 39


 1162              		.cfi_def_cfa_offset 8
 1163              		.cfi_offset 7, -8
 1164              		.cfi_offset 14, -4
 1165 0002 8AB0     		sub	sp, sp, #40
 1166              	.LCFI28:
 1167              		.cfi_def_cfa_offset 48
 1168 0004 02AF     		add	r7, sp, #8
 1169              	.LCFI29:
 1170              		.cfi_def_cfa 7, 40
 1171 0006 F860     		str	r0, [r7, #12]
 1172 0008 B960     		str	r1, [r7, #8]
 1173 000a 3B60     		str	r3, [r7]
 1174 000c 1346     		mov	r3, r2	@ movhi
 1175 000e FB80     		strh	r3, [r7, #6]	@ movhi
1009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t tickstart;
1010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1176              		.loc 1 1010 21
 1177 0010 0023     		movs	r3, #0
 1178 0012 FB77     		strb	r3, [r7, #31]
1011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
 1179              		.loc 1 1012 57
 1180 0014 FB68     		ldr	r3, [r7, #12]
 1181 0016 1B68     		ldr	r3, [r3]
 1182              		.loc 1 1012 18
 1183 0018 3033     		adds	r3, r3, #48
 1184 001a BB61     		str	r3, [r7, #24]
1013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_RXONLY(hspi->Init.Direction));
1017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 1185              		.loc 1 1018 18
 1186 001c FB68     		ldr	r3, [r7, #12]
 1187 001e 5B68     		ldr	r3, [r3, #4]
 1188              		.loc 1 1018 6
 1189 0020 B3F5800F 		cmp	r3, #4194304
 1190 0024 12D1     		bne	.L58
 1191              		.loc 1 1018 58 discriminator 1
 1192 0026 FB68     		ldr	r3, [r7, #12]
 1193 0028 9B68     		ldr	r3, [r3, #8]
 1194              		.loc 1 1018 44 discriminator 1
 1195 002a 002B     		cmp	r3, #0
 1196 002c 0ED1     		bne	.L58
1019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 1197              		.loc 1 1020 17
 1198 002e FB68     		ldr	r3, [r7, #12]
 1199 0030 0422     		movs	r2, #4
 1200 0032 83F88120 		strb	r2, [r3, #129]
1021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 1201              		.loc 1 1022 12
 1202 0036 FA88     		ldrh	r2, [r7, #6]
 1203 0038 3B68     		ldr	r3, [r7]
 1204 003a 0093     		str	r3, [sp]
ARM GAS  /tmp/ccwjY1CM.s 			page 40


 1205 003c 1346     		mov	r3, r2
 1206 003e BA68     		ldr	r2, [r7, #8]
 1207 0040 B968     		ldr	r1, [r7, #8]
 1208 0042 F868     		ldr	r0, [r7, #12]
 1209 0044 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1210 0048 0346     		mov	r3, r0
 1211 004a C7E1     		b	.L59
 1212              	.L58:
1023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Locked */
1026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 1213              		.loc 1 1026 3
 1214 004c FB68     		ldr	r3, [r7, #12]
 1215 004e 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 1216 0052 012B     		cmp	r3, #1
 1217 0054 01D1     		bne	.L60
 1218              		.loc 1 1026 3 is_stmt 0 discriminator 1
 1219 0056 0223     		movs	r3, #2
 1220 0058 C0E1     		b	.L59
 1221              	.L60:
 1222              		.loc 1 1026 3 discriminator 2
 1223 005a FB68     		ldr	r3, [r7, #12]
 1224 005c 0122     		movs	r2, #1
 1225 005e 83F88020 		strb	r2, [r3, #128]
1027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 1226              		.loc 1 1029 15 is_stmt 1 discriminator 2
 1227 0062 FFF7FEFF 		bl	HAL_GetTick
 1228 0066 7861     		str	r0, [r7, #20]
1030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 1229              		.loc 1 1031 11 discriminator 2
 1230 0068 FB68     		ldr	r3, [r7, #12]
 1231 006a 93F88130 		ldrb	r3, [r3, #129]
 1232 006e DBB2     		uxtb	r3, r3
 1233              		.loc 1 1031 6 discriminator 2
 1234 0070 012B     		cmp	r3, #1
 1235 0072 07D0     		beq	.L61
1032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 1236              		.loc 1 1033 15
 1237 0074 0223     		movs	r3, #2
 1238 0076 FB77     		strb	r3, [r7, #31]
1034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 1239              		.loc 1 1034 5
 1240 0078 FB68     		ldr	r3, [r7, #12]
 1241 007a 0022     		movs	r2, #0
 1242 007c 83F88020 		strb	r2, [r3, #128]
1035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 1243              		.loc 1 1035 12
 1244 0080 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1245 0082 ABE1     		b	.L59
 1246              	.L61:
1036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccwjY1CM.s 			page 41


1038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
 1247              		.loc 1 1038 6
 1248 0084 BB68     		ldr	r3, [r7, #8]
 1249 0086 002B     		cmp	r3, #0
 1250 0088 02D0     		beq	.L62
 1251              		.loc 1 1038 23 discriminator 1
 1252 008a FB88     		ldrh	r3, [r7, #6]
 1253 008c 002B     		cmp	r3, #0
 1254 008e 07D1     		bne	.L63
 1255              	.L62:
1039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1256              		.loc 1 1040 15
 1257 0090 0123     		movs	r3, #1
 1258 0092 FB77     		strb	r3, [r7, #31]
1041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 1259              		.loc 1 1041 5
 1260 0094 FB68     		ldr	r3, [r7, #12]
 1261 0096 0022     		movs	r2, #0
 1262 0098 83F88020 		strb	r2, [r3, #128]
1042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 1263              		.loc 1 1042 12
 1264 009c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1265 009e 9DE1     		b	.L59
 1266              	.L63:
1043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
1046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 1267              		.loc 1 1046 21
 1268 00a0 FB68     		ldr	r3, [r7, #12]
 1269 00a2 0422     		movs	r2, #4
 1270 00a4 83F88120 		strb	r2, [r3, #129]
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1271              		.loc 1 1047 21
 1272 00a8 FB68     		ldr	r3, [r7, #12]
 1273 00aa 0022     		movs	r2, #0
 1274 00ac C3F88420 		str	r2, [r3, #132]
1048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 1275              		.loc 1 1048 21
 1276 00b0 FB68     		ldr	r3, [r7, #12]
 1277 00b2 BA68     		ldr	r2, [r7, #8]
 1278 00b4 5A66     		str	r2, [r3, #100]
1049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1279              		.loc 1 1049 21
 1280 00b6 FB68     		ldr	r3, [r7, #12]
 1281 00b8 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1282 00ba A3F86820 		strh	r2, [r3, #104]	@ movhi
1050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1283              		.loc 1 1050 21
 1284 00be FB68     		ldr	r3, [r7, #12]
 1285 00c0 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1286 00c2 A3F86A20 		strh	r2, [r3, #106]	@ movhi
1051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*Init field not used in handle to zero */
1053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = NULL;
 1287              		.loc 1 1053 21
ARM GAS  /tmp/ccwjY1CM.s 			page 42


 1288 00c6 FB68     		ldr	r3, [r7, #12]
 1289 00c8 0022     		movs	r2, #0
 1290 00ca DA65     		str	r2, [r3, #92]
1054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = (uint16_t) 0UL;
 1291              		.loc 1 1054 21
 1292 00cc FB68     		ldr	r3, [r7, #12]
 1293 00ce 0022     		movs	r2, #0
 1294 00d0 A3F86020 		strh	r2, [r3, #96]	@ movhi
1055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
 1295              		.loc 1 1055 21
 1296 00d4 FB68     		ldr	r3, [r7, #12]
 1297 00d6 0022     		movs	r2, #0
 1298 00d8 A3F86220 		strh	r2, [r3, #98]	@ movhi
1056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1299              		.loc 1 1056 21
 1300 00dc FB68     		ldr	r3, [r7, #12]
 1301 00de 0022     		movs	r2, #0
 1302 00e0 1A67     		str	r2, [r3, #112]
1057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1303              		.loc 1 1057 21
 1304 00e2 FB68     		ldr	r3, [r7, #12]
 1305 00e4 0022     		movs	r2, #0
 1306 00e6 5A67     		str	r2, [r3, #116]
1058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction: 1Line */
1060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 1307              		.loc 1 1060 17
 1308 00e8 FB68     		ldr	r3, [r7, #12]
 1309 00ea 9B68     		ldr	r3, [r3, #8]
 1310              		.loc 1 1060 6
 1311 00ec B3F5C02F 		cmp	r3, #393216
 1312 00f0 07D1     		bne	.L64
1061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 1313              		.loc 1 1062 5
 1314 00f2 FB68     		ldr	r3, [r7, #12]
 1315 00f4 1B68     		ldr	r3, [r3]
 1316 00f6 1A68     		ldr	r2, [r3]
 1317 00f8 FB68     		ldr	r3, [r7, #12]
 1318 00fa 1B68     		ldr	r3, [r3]
 1319 00fc 22F40062 		bic	r2, r2, #2048
 1320 0100 1A60     		str	r2, [r3]
 1321              	.L64:
1063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
1066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 1322              		.loc 1 1066 3
 1323 0102 FB68     		ldr	r3, [r7, #12]
 1324 0104 1B68     		ldr	r3, [r3]
 1325 0106 5A68     		ldr	r2, [r3, #4]
 1326 0108 944B     		ldr	r3, .L88
 1327 010a 1340     		ands	r3, r3, r2
 1328 010c F988     		ldrh	r1, [r7, #6]
 1329 010e FA68     		ldr	r2, [r7, #12]
 1330 0110 1268     		ldr	r2, [r2]
 1331 0112 0B43     		orrs	r3, r3, r1
ARM GAS  /tmp/ccwjY1CM.s 			page 43


 1332 0114 5360     		str	r3, [r2, #4]
1067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
1069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
 1333              		.loc 1 1069 3
 1334 0116 FB68     		ldr	r3, [r7, #12]
 1335 0118 1B68     		ldr	r3, [r3]
 1336 011a 1A68     		ldr	r2, [r3]
 1337 011c FB68     		ldr	r3, [r7, #12]
 1338 011e 1B68     		ldr	r3, [r3]
 1339 0120 42F00102 		orr	r2, r2, #1
 1340 0124 1A60     		str	r2, [r3]
1070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
 1341              		.loc 1 1071 17
 1342 0126 FB68     		ldr	r3, [r7, #12]
 1343 0128 5B68     		ldr	r3, [r3, #4]
 1344              		.loc 1 1071 6
 1345 012a B3F5800F 		cmp	r3, #4194304
 1346 012e 07D1     		bne	.L65
1072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
1074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 1347              		.loc 1 1074 5
 1348 0130 FB68     		ldr	r3, [r7, #12]
 1349 0132 1B68     		ldr	r3, [r3]
 1350 0134 1A68     		ldr	r2, [r3]
 1351 0136 FB68     		ldr	r3, [r7, #12]
 1352 0138 1B68     		ldr	r3, [r3]
 1353 013a 42F40072 		orr	r2, r2, #512
 1354 013e 1A60     		str	r2, [r3]
 1355              	.L65:
1075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 32 Bit mode */
1078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 1356              		.loc 1 1078 17
 1357 0140 FB68     		ldr	r3, [r7, #12]
 1358 0142 DB68     		ldr	r3, [r3, #12]
 1359              		.loc 1 1078 6
 1360 0144 0F2B     		cmp	r3, #15
 1361 0146 48D9     		bls	.L66
1079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transfer loop */
1081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->RxXferCount > 0UL)
 1362              		.loc 1 1081 11
 1363 0148 40E0     		b	.L67
 1364              	.L71:
1082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check the RXWNE/EOT flag */
1084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_EOT)) != 0UL)
 1365              		.loc 1 1084 16
 1366 014a FB68     		ldr	r3, [r7, #12]
 1367 014c 1B68     		ldr	r3, [r3]
 1368              		.loc 1 1084 26
 1369 014e 5A69     		ldr	r2, [r3, #20]
 1370              		.loc 1 1084 31
ARM GAS  /tmp/ccwjY1CM.s 			page 44


 1371 0150 48F20803 		movw	r3, #32776
 1372 0154 1340     		ands	r3, r3, r2
 1373              		.loc 1 1084 10
 1374 0156 002B     		cmp	r3, #0
 1375 0158 14D0     		beq	.L68
1085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 1376              		.loc 1 1086 67
 1377 015a FB68     		ldr	r3, [r7, #12]
 1378 015c 1A68     		ldr	r2, [r3]
 1379              		.loc 1 1086 27
 1380 015e FB68     		ldr	r3, [r7, #12]
 1381 0160 5B6E     		ldr	r3, [r3, #100]
 1382              		.loc 1 1086 43
 1383 0162 126B     		ldr	r2, [r2, #48]
 1384              		.loc 1 1086 41
 1385 0164 1A60     		str	r2, [r3]
1087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint32_t);
 1386              		.loc 1 1087 26
 1387 0166 FB68     		ldr	r3, [r7, #12]
 1388 0168 5B6E     		ldr	r3, [r3, #100]
 1389 016a 1A1D     		adds	r2, r3, #4
 1390 016c FB68     		ldr	r3, [r7, #12]
 1391 016e 5A66     		str	r2, [r3, #100]
1088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount--;
 1392              		.loc 1 1088 13
 1393 0170 FB68     		ldr	r3, [r7, #12]
 1394 0172 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 1395 0176 9BB2     		uxth	r3, r3
 1396              		.loc 1 1088 26
 1397 0178 013B     		subs	r3, r3, #1
 1398 017a 9AB2     		uxth	r2, r3
 1399 017c FB68     		ldr	r3, [r7, #12]
 1400 017e A3F86A20 		strh	r2, [r3, #106]	@ movhi
 1401 0182 23E0     		b	.L67
 1402              	.L68:
1089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
1091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
1093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 1403              		.loc 1 1093 16
 1404 0184 FFF7FEFF 		bl	HAL_GetTick
 1405 0188 0246     		mov	r2, r0
 1406              		.loc 1 1093 30
 1407 018a 7B69     		ldr	r3, [r7, #20]
 1408 018c D31A     		subs	r3, r2, r3
 1409              		.loc 1 1093 12
 1410 018e 3A68     		ldr	r2, [r7]
 1411 0190 9A42     		cmp	r2, r3
 1412 0192 03D8     		bhi	.L69
 1413              		.loc 1 1093 56 discriminator 1
 1414 0194 3B68     		ldr	r3, [r7]
 1415 0196 B3F1FF3F 		cmp	r3, #-1
 1416 019a 02D1     		bne	.L70
 1417              	.L69:
 1418              		.loc 1 1093 87 discriminator 3
ARM GAS  /tmp/ccwjY1CM.s 			page 45


 1419 019c 3B68     		ldr	r3, [r7]
 1420 019e 002B     		cmp	r3, #0
 1421 01a0 14D1     		bne	.L67
 1422              	.L70:
1094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
1096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
 1423              		.loc 1 1096 11
 1424 01a2 F868     		ldr	r0, [r7, #12]
 1425 01a4 FFF7FEFF 		bl	SPI_CloseTransfer
1097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Process Unlocked */
1099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 1426              		.loc 1 1099 11
 1427 01a8 FB68     		ldr	r3, [r7, #12]
 1428 01aa 0022     		movs	r2, #0
 1429 01ac 83F88020 		strb	r2, [r3, #128]
1100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 1430              		.loc 1 1101 11
 1431 01b0 FB68     		ldr	r3, [r7, #12]
 1432 01b2 D3F88430 		ldr	r3, [r3, #132]
 1433 01b6 43F48072 		orr	r2, r3, #256
 1434 01ba FB68     		ldr	r3, [r7, #12]
 1435 01bc C3F88420 		str	r2, [r3, #132]
1102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1436              		.loc 1 1102 23
 1437 01c0 FB68     		ldr	r3, [r7, #12]
 1438 01c2 0122     		movs	r2, #1
 1439 01c4 83F88120 		strb	r2, [r3, #129]
1103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
 1440              		.loc 1 1103 18
 1441 01c8 0123     		movs	r3, #1
 1442 01ca 07E1     		b	.L59
 1443              	.L67:
1081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1444              		.loc 1 1081 16
 1445 01cc FB68     		ldr	r3, [r7, #12]
 1446 01ce B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 1447 01d2 9BB2     		uxth	r3, r3
1081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1448              		.loc 1 1081 11
 1449 01d4 002B     		cmp	r3, #0
 1450 01d6 B8D1     		bne	.L71
 1451 01d8 EDE0     		b	.L72
 1452              	.L66:
1104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
1109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 1453              		.loc 1 1109 22
 1454 01da FB68     		ldr	r3, [r7, #12]
 1455 01dc DB68     		ldr	r3, [r3, #12]
 1456              		.loc 1 1109 11
 1457 01de 072B     		cmp	r3, #7
ARM GAS  /tmp/ccwjY1CM.s 			page 46


 1458 01e0 40F2E280 		bls	.L80
1110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transfer loop */
1112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->RxXferCount > 0UL)
 1459              		.loc 1 1112 11
 1460 01e4 5BE0     		b	.L74
 1461              	.L79:
1113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check the RXWNE/FRLVL flag */
1115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_FRLVL)) != 0UL)
 1462              		.loc 1 1115 16
 1463 01e6 FB68     		ldr	r3, [r7, #12]
 1464 01e8 1B68     		ldr	r3, [r3]
 1465              		.loc 1 1115 26
 1466 01ea 5B69     		ldr	r3, [r3, #20]
 1467              		.loc 1 1115 31
 1468 01ec 03F46043 		and	r3, r3, #57344
 1469              		.loc 1 1115 10
 1470 01f0 002B     		cmp	r3, #0
 1471 01f2 30D0     		beq	.L75
1116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((hspi->Instance->SR & SPI_FLAG_RXWNE) != 0UL)
 1472              		.loc 1 1117 18
 1473 01f4 FB68     		ldr	r3, [r7, #12]
 1474 01f6 1B68     		ldr	r3, [r3]
 1475              		.loc 1 1117 28
 1476 01f8 5B69     		ldr	r3, [r3, #20]
 1477              		.loc 1 1117 33
 1478 01fa 03F40043 		and	r3, r3, #32768
 1479              		.loc 1 1117 12
 1480 01fe 002B     		cmp	r3, #0
 1481 0200 14D0     		beq	.L76
1118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 1482              		.loc 1 1119 69
 1483 0202 FB68     		ldr	r3, [r7, #12]
 1484 0204 1A68     		ldr	r2, [r3]
 1485              		.loc 1 1119 29
 1486 0206 FB68     		ldr	r3, [r7, #12]
 1487 0208 5B6E     		ldr	r3, [r3, #100]
 1488              		.loc 1 1119 45
 1489 020a 126B     		ldr	r2, [r2, #48]
 1490              		.loc 1 1119 43
 1491 020c 1A60     		str	r2, [r3]
1120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint32_t);
 1492              		.loc 1 1120 28
 1493 020e FB68     		ldr	r3, [r7, #12]
 1494 0210 5B6E     		ldr	r3, [r3, #100]
 1495 0212 1A1D     		adds	r2, r3, #4
 1496 0214 FB68     		ldr	r3, [r7, #12]
 1497 0216 5A66     		str	r2, [r3, #100]
1121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)2UL;
 1498              		.loc 1 1121 29
 1499 0218 FB68     		ldr	r3, [r7, #12]
 1500 021a B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 1501 021e 9BB2     		uxth	r3, r3
 1502 0220 023B     		subs	r3, r3, #2
ARM GAS  /tmp/ccwjY1CM.s 			page 47


 1503 0222 9AB2     		uxth	r2, r3
 1504 0224 FB68     		ldr	r3, [r7, #12]
 1505 0226 A3F86A20 		strh	r2, [r3, #106]	@ movhi
 1506 022a 38E0     		b	.L74
 1507              	.L76:
1122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
1124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 1508              		.loc 1 1126 29
 1509 022c FB68     		ldr	r3, [r7, #12]
 1510 022e 5B6E     		ldr	r3, [r3, #100]
 1511              		.loc 1 1126 45
 1512 0230 BA69     		ldr	r2, [r7, #24]
 1513 0232 1288     		ldrh	r2, [r2]	@ movhi
 1514 0234 92B2     		uxth	r2, r2
 1515              		.loc 1 1126 43
 1516 0236 1A80     		strh	r2, [r3]	@ movhi
1127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
1129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
 1517              		.loc 1 1130 28
 1518 0238 FB68     		ldr	r3, [r7, #12]
 1519 023a 5B6E     		ldr	r3, [r3, #100]
 1520 023c 9A1C     		adds	r2, r3, #2
 1521 023e FB68     		ldr	r3, [r7, #12]
 1522 0240 5A66     		str	r2, [r3, #100]
1131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount--;
 1523              		.loc 1 1131 15
 1524 0242 FB68     		ldr	r3, [r7, #12]
 1525 0244 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 1526 0248 9BB2     		uxth	r3, r3
 1527              		.loc 1 1131 28
 1528 024a 013B     		subs	r3, r3, #1
 1529 024c 9AB2     		uxth	r2, r3
 1530 024e FB68     		ldr	r3, [r7, #12]
 1531 0250 A3F86A20 		strh	r2, [r3, #106]	@ movhi
 1532 0254 23E0     		b	.L74
 1533              	.L75:
1132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
1135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
1137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 1534              		.loc 1 1137 16
 1535 0256 FFF7FEFF 		bl	HAL_GetTick
 1536 025a 0246     		mov	r2, r0
 1537              		.loc 1 1137 30
 1538 025c 7B69     		ldr	r3, [r7, #20]
 1539 025e D31A     		subs	r3, r2, r3
 1540              		.loc 1 1137 12
 1541 0260 3A68     		ldr	r2, [r7]
 1542 0262 9A42     		cmp	r2, r3
 1543 0264 03D8     		bhi	.L77
ARM GAS  /tmp/ccwjY1CM.s 			page 48


 1544              		.loc 1 1137 56 discriminator 1
 1545 0266 3B68     		ldr	r3, [r7]
 1546 0268 B3F1FF3F 		cmp	r3, #-1
 1547 026c 02D1     		bne	.L78
 1548              	.L77:
 1549              		.loc 1 1137 87 discriminator 3
 1550 026e 3B68     		ldr	r3, [r7]
 1551 0270 002B     		cmp	r3, #0
 1552 0272 14D1     		bne	.L74
 1553              	.L78:
1138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
1140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
 1554              		.loc 1 1140 11
 1555 0274 F868     		ldr	r0, [r7, #12]
 1556 0276 FFF7FEFF 		bl	SPI_CloseTransfer
1141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Process Unlocked */
1143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 1557              		.loc 1 1143 11
 1558 027a FB68     		ldr	r3, [r7, #12]
 1559 027c 0022     		movs	r2, #0
 1560 027e 83F88020 		strb	r2, [r3, #128]
1144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 1561              		.loc 1 1145 11
 1562 0282 FB68     		ldr	r3, [r7, #12]
 1563 0284 D3F88430 		ldr	r3, [r3, #132]
 1564 0288 43F48072 		orr	r2, r3, #256
 1565 028c FB68     		ldr	r3, [r7, #12]
 1566 028e C3F88420 		str	r2, [r3, #132]
1146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1567              		.loc 1 1146 23
 1568 0292 FB68     		ldr	r3, [r7, #12]
 1569 0294 0122     		movs	r2, #1
 1570 0296 83F88120 		strb	r2, [r3, #129]
1147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
 1571              		.loc 1 1147 18
 1572 029a 0123     		movs	r3, #1
 1573 029c 9EE0     		b	.L59
 1574              	.L74:
1112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1575              		.loc 1 1112 16
 1576 029e FB68     		ldr	r3, [r7, #12]
 1577 02a0 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 1578 02a4 9BB2     		uxth	r3, r3
1112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1579              		.loc 1 1112 11
 1580 02a6 002B     		cmp	r3, #0
 1581 02a8 9DD1     		bne	.L79
 1582 02aa 84E0     		b	.L72
 1583              	.L86:
1148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
ARM GAS  /tmp/ccwjY1CM.s 			page 49


1153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transfer loop */
1156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->RxXferCount > 0UL)
1157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check the RXWNE/FRLVL flag */
1159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_FRLVL)) != 0UL)
 1584              		.loc 1 1159 16
 1585 02ac FB68     		ldr	r3, [r7, #12]
 1586 02ae 1B68     		ldr	r3, [r3]
 1587              		.loc 1 1159 26
 1588 02b0 5B69     		ldr	r3, [r3, #20]
 1589              		.loc 1 1159 31
 1590 02b2 03F46043 		and	r3, r3, #57344
 1591              		.loc 1 1159 10
 1592 02b6 002B     		cmp	r3, #0
 1593 02b8 52D0     		beq	.L81
1160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((hspi->Instance->SR & SPI_FLAG_RXWNE) != 0UL)
 1594              		.loc 1 1161 18
 1595 02ba FB68     		ldr	r3, [r7, #12]
 1596 02bc 1B68     		ldr	r3, [r3]
 1597              		.loc 1 1161 28
 1598 02be 5B69     		ldr	r3, [r3, #20]
 1599              		.loc 1 1161 33
 1600 02c0 03F40043 		and	r3, r3, #32768
 1601              		.loc 1 1161 12
 1602 02c4 002B     		cmp	r3, #0
 1603 02c6 14D0     		beq	.L82
1162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 1604              		.loc 1 1163 69
 1605 02c8 FB68     		ldr	r3, [r7, #12]
 1606 02ca 1A68     		ldr	r2, [r3]
 1607              		.loc 1 1163 29
 1608 02cc FB68     		ldr	r3, [r7, #12]
 1609 02ce 5B6E     		ldr	r3, [r3, #100]
 1610              		.loc 1 1163 45
 1611 02d0 126B     		ldr	r2, [r2, #48]
 1612              		.loc 1 1163 43
 1613 02d2 1A60     		str	r2, [r3]
1164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint32_t);
 1614              		.loc 1 1164 28
 1615 02d4 FB68     		ldr	r3, [r7, #12]
 1616 02d6 5B6E     		ldr	r3, [r3, #100]
 1617 02d8 1A1D     		adds	r2, r3, #4
 1618 02da FB68     		ldr	r3, [r7, #12]
 1619 02dc 5A66     		str	r2, [r3, #100]
1165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)4UL;
 1620              		.loc 1 1165 29
 1621 02de FB68     		ldr	r3, [r7, #12]
 1622 02e0 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 1623 02e4 9BB2     		uxth	r3, r3
 1624 02e6 043B     		subs	r3, r3, #4
 1625 02e8 9AB2     		uxth	r2, r3
 1626 02ea FB68     		ldr	r3, [r7, #12]
 1627 02ec A3F86A20 		strh	r2, [r3, #106]	@ movhi
ARM GAS  /tmp/ccwjY1CM.s 			page 50


 1628 02f0 5AE0     		b	.L80
 1629              	.L82:
1166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else if ((hspi->Instance->SR & SPI_FLAG_FRLVL) > SPI_RX_FIFO_1PACKET)
 1630              		.loc 1 1167 23
 1631 02f2 FB68     		ldr	r3, [r7, #12]
 1632 02f4 1B68     		ldr	r3, [r3]
 1633              		.loc 1 1167 33
 1634 02f6 5B69     		ldr	r3, [r3, #20]
 1635              		.loc 1 1167 38
 1636 02f8 03F4C043 		and	r3, r3, #24576
 1637              		.loc 1 1167 17
 1638 02fc B3F5005F 		cmp	r3, #8192
 1639 0300 14D9     		bls	.L83
1168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 1640              		.loc 1 1170 29
 1641 0302 FB68     		ldr	r3, [r7, #12]
 1642 0304 5B6E     		ldr	r3, [r3, #100]
 1643              		.loc 1 1170 45
 1644 0306 BA69     		ldr	r2, [r7, #24]
 1645 0308 1288     		ldrh	r2, [r2]	@ movhi
 1646 030a 92B2     		uxth	r2, r2
 1647              		.loc 1 1170 43
 1648 030c 1A80     		strh	r2, [r3]	@ movhi
1171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
1173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
 1649              		.loc 1 1174 28
 1650 030e FB68     		ldr	r3, [r7, #12]
 1651 0310 5B6E     		ldr	r3, [r3, #100]
 1652 0312 9A1C     		adds	r2, r3, #2
 1653 0314 FB68     		ldr	r3, [r7, #12]
 1654 0316 5A66     		str	r2, [r3, #100]
1175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)2UL;
 1655              		.loc 1 1175 29
 1656 0318 FB68     		ldr	r3, [r7, #12]
 1657 031a B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 1658 031e 9BB2     		uxth	r3, r3
 1659 0320 023B     		subs	r3, r3, #2
 1660 0322 9AB2     		uxth	r2, r3
 1661 0324 FB68     		ldr	r3, [r7, #12]
 1662 0326 A3F86A20 		strh	r2, [r3, #106]	@ movhi
 1663 032a 3DE0     		b	.L80
 1664              	.L83:
1176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
1178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 1665              		.loc 1 1179 67
 1666 032c FB68     		ldr	r3, [r7, #12]
 1667 032e 1B68     		ldr	r3, [r3]
 1668              		.loc 1 1179 62
 1669 0330 03F13002 		add	r2, r3, #48
 1670              		.loc 1 1179 28
ARM GAS  /tmp/ccwjY1CM.s 			page 51


 1671 0334 FB68     		ldr	r3, [r7, #12]
 1672 0336 5B6E     		ldr	r3, [r3, #100]
 1673              		.loc 1 1179 44
 1674 0338 1278     		ldrb	r2, [r2]
 1675 033a D2B2     		uxtb	r2, r2
 1676              		.loc 1 1179 42
 1677 033c 1A70     		strb	r2, [r3]
1180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint8_t);
 1678              		.loc 1 1180 28
 1679 033e FB68     		ldr	r3, [r7, #12]
 1680 0340 5B6E     		ldr	r3, [r3, #100]
 1681 0342 5A1C     		adds	r2, r3, #1
 1682 0344 FB68     		ldr	r3, [r7, #12]
 1683 0346 5A66     		str	r2, [r3, #100]
1181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount--;
 1684              		.loc 1 1181 15
 1685 0348 FB68     		ldr	r3, [r7, #12]
 1686 034a B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 1687 034e 9BB2     		uxth	r3, r3
 1688              		.loc 1 1181 28
 1689 0350 013B     		subs	r3, r3, #1
 1690 0352 9AB2     		uxth	r2, r3
 1691 0354 FB68     		ldr	r3, [r7, #12]
 1692 0356 A3F86A20 		strh	r2, [r3, #106]	@ movhi
 1693 035a 25E0     		b	.L80
 1694              	.L89:
 1695              		.align	2
 1696              	.L88:
 1697 035c 0000FFFF 		.word	-65536
 1698              	.L81:
1182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
1185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
1187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 1699              		.loc 1 1187 16
 1700 0360 FFF7FEFF 		bl	HAL_GetTick
 1701 0364 0246     		mov	r2, r0
 1702              		.loc 1 1187 30
 1703 0366 7B69     		ldr	r3, [r7, #20]
 1704 0368 D31A     		subs	r3, r2, r3
 1705              		.loc 1 1187 12
 1706 036a 3A68     		ldr	r2, [r7]
 1707 036c 9A42     		cmp	r2, r3
 1708 036e 03D8     		bhi	.L84
 1709              		.loc 1 1187 56 discriminator 1
 1710 0370 3B68     		ldr	r3, [r7]
 1711 0372 B3F1FF3F 		cmp	r3, #-1
 1712 0376 02D1     		bne	.L85
 1713              	.L84:
 1714              		.loc 1 1187 87 discriminator 3
 1715 0378 3B68     		ldr	r3, [r7]
 1716 037a 002B     		cmp	r3, #0
 1717 037c 14D1     		bne	.L80
 1718              	.L85:
1188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
ARM GAS  /tmp/ccwjY1CM.s 			page 52


1189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
1190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
 1719              		.loc 1 1190 11
 1720 037e F868     		ldr	r0, [r7, #12]
 1721 0380 FFF7FEFF 		bl	SPI_CloseTransfer
1191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Process Unlocked */
1193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 1722              		.loc 1 1193 11
 1723 0384 FB68     		ldr	r3, [r7, #12]
 1724 0386 0022     		movs	r2, #0
 1725 0388 83F88020 		strb	r2, [r3, #128]
1194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 1726              		.loc 1 1195 11
 1727 038c FB68     		ldr	r3, [r7, #12]
 1728 038e D3F88430 		ldr	r3, [r3, #132]
 1729 0392 43F48072 		orr	r2, r3, #256
 1730 0396 FB68     		ldr	r3, [r7, #12]
 1731 0398 C3F88420 		str	r2, [r3, #132]
1196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1732              		.loc 1 1196 23
 1733 039c FB68     		ldr	r3, [r7, #12]
 1734 039e 0122     		movs	r2, #1
 1735 03a0 83F88120 		strb	r2, [r3, #129]
1197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
 1736              		.loc 1 1197 18
 1737 03a4 0123     		movs	r3, #1
 1738 03a6 19E0     		b	.L59
 1739              	.L80:
1156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1740              		.loc 1 1156 16
 1741 03a8 FB68     		ldr	r3, [r7, #12]
 1742 03aa B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 1743 03ae 9BB2     		uxth	r3, r3
1156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1744              		.loc 1 1156 11
 1745 03b0 002B     		cmp	r3, #0
 1746 03b2 7FF47BAF 		bne	.L86
 1747              	.L72:
1198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
1204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Wait for crc data to be received */
1207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, tickstart, Timeout) != HAL_OK)
1208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
1210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call standard close procedure with error check */
ARM GAS  /tmp/ccwjY1CM.s 			page 53


1215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_CloseTransfer(hspi);
 1748              		.loc 1 1215 3
 1749 03b6 F868     		ldr	r0, [r7, #12]
 1750 03b8 FFF7FEFF 		bl	SPI_CloseTransfer
1216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
1218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1751              		.loc 1 1218 3
 1752 03bc FB68     		ldr	r3, [r7, #12]
 1753 03be 0022     		movs	r2, #0
 1754 03c0 83F88020 		strb	r2, [r3, #128]
1219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 1755              		.loc 1 1220 15
 1756 03c4 FB68     		ldr	r3, [r7, #12]
 1757 03c6 0122     		movs	r2, #1
 1758 03c8 83F88120 		strb	r2, [r3, #129]
1221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 1759              		.loc 1 1222 11
 1760 03cc FB68     		ldr	r3, [r7, #12]
 1761 03ce D3F88430 		ldr	r3, [r3, #132]
 1762              		.loc 1 1222 6
 1763 03d2 002B     		cmp	r3, #0
 1764 03d4 01D0     		beq	.L87
1223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 1765              		.loc 1 1224 12
 1766 03d6 0123     		movs	r3, #1
 1767 03d8 00E0     		b	.L59
 1768              	.L87:
1225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 1769              		.loc 1 1226 10
 1770 03da FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1771              	.L59:
1227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 1772              		.loc 1 1227 1
 1773 03dc 1846     		mov	r0, r3
 1774 03de 2037     		adds	r7, r7, #32
 1775              	.LCFI30:
 1776              		.cfi_def_cfa_offset 8
 1777 03e0 BD46     		mov	sp, r7
 1778              	.LCFI31:
 1779              		.cfi_def_cfa_register 13
 1780              		@ sp needed
 1781 03e2 80BD     		pop	{r7, pc}
 1782              		.cfi_endproc
 1783              	.LFE336:
 1785              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 1786              		.align	1
 1787              		.global	HAL_SPI_TransmitReceive
 1788              		.syntax unified
 1789              		.thumb
 1790              		.thumb_func
 1791              		.fpu fpv5-d16
 1793              	HAL_SPI_TransmitReceive:
ARM GAS  /tmp/ccwjY1CM.s 			page 54


 1794              	.LFB337:
1228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
1231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
1232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
1233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
1234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
1235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be sent and received
1236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Timeout: Timeout duration
1237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
1240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                           uint32_t Timeout)
1241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 1795              		.loc 1 1241 1
 1796              		.cfi_startproc
 1797              		@ args = 4, pretend = 0, frame = 48
 1798              		@ frame_needed = 1, uses_anonymous_args = 0
 1799 0000 80B5     		push	{r7, lr}
 1800              	.LCFI32:
 1801              		.cfi_def_cfa_offset 8
 1802              		.cfi_offset 7, -8
 1803              		.cfi_offset 14, -4
 1804 0002 8EB0     		sub	sp, sp, #56
 1805              	.LCFI33:
 1806              		.cfi_def_cfa_offset 64
 1807 0004 02AF     		add	r7, sp, #8
 1808              	.LCFI34:
 1809              		.cfi_def_cfa 7, 56
 1810 0006 F860     		str	r0, [r7, #12]
 1811 0008 B960     		str	r1, [r7, #8]
 1812 000a 7A60     		str	r2, [r7, #4]
 1813 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1814              		.loc 1 1243 21
 1815 000e 0023     		movs	r3, #0
 1816 0010 87F82B30 		strb	r3, [r7, #43]
1244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
 1817              		.loc 1 1245 57
 1818 0014 FB68     		ldr	r3, [r7, #12]
 1819 0016 1B68     		ldr	r3, [r3]
 1820              		.loc 1 1245 18
 1821 0018 2033     		adds	r3, r3, #32
 1822 001a 7B62     		str	r3, [r7, #36]
1246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
 1823              		.loc 1 1246 57
 1824 001c FB68     		ldr	r3, [r7, #12]
 1825 001e 1B68     		ldr	r3, [r3]
 1826              		.loc 1 1246 18
 1827 0020 3033     		adds	r3, r3, #48
 1828 0022 3B62     		str	r3, [r7, #32]
1247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t   tickstart;
ARM GAS  /tmp/ccwjY1CM.s 			page 55


1250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t   tmp_mode;
1251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint16_t   initial_TxXferCount;
1252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint16_t   initial_RxXferCount;
1253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Locked */
1258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 1829              		.loc 1 1258 3
 1830 0024 FB68     		ldr	r3, [r7, #12]
 1831 0026 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 1832 002a 012B     		cmp	r3, #1
 1833 002c 01D1     		bne	.L91
 1834              		.loc 1 1258 3 is_stmt 0 discriminator 1
 1835 002e 0223     		movs	r3, #2
 1836 0030 CEE2     		b	.L92
 1837              	.L91:
 1838              		.loc 1 1258 3 discriminator 2
 1839 0032 FB68     		ldr	r3, [r7, #12]
 1840 0034 0122     		movs	r2, #1
 1841 0036 83F88020 		strb	r2, [r3, #128]
1259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 1842              		.loc 1 1261 15 is_stmt 1 discriminator 2
 1843 003a FFF7FEFF 		bl	HAL_GetTick
 1844 003e F861     		str	r0, [r7, #28]
1262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   initial_TxXferCount = Size;
 1845              		.loc 1 1263 23 discriminator 2
 1846 0040 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1847 0042 FB85     		strh	r3, [r7, #46]	@ movhi
1264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   initial_RxXferCount = Size;
 1848              		.loc 1 1264 23 discriminator 2
 1849 0044 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1850 0046 BB85     		strh	r3, [r7, #44]	@ movhi
1265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_state           = hspi->State;
 1851              		.loc 1 1265 23 discriminator 2
 1852 0048 FB68     		ldr	r3, [r7, #12]
 1853 004a 93F88130 		ldrb	r3, [r3, #129]
 1854 004e FB76     		strb	r3, [r7, #27]
1266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1855              		.loc 1 1266 23 discriminator 2
 1856 0050 FB68     		ldr	r3, [r7, #12]
 1857 0052 5B68     		ldr	r3, [r3, #4]
 1858 0054 7B61     		str	r3, [r7, #20]
1267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
 1859              		.loc 1 1268 6 discriminator 2
 1860 0056 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1861 0058 012B     		cmp	r3, #1
 1862 005a 14D0     		beq	.L93
 1863              		.loc 1 1268 7 discriminator 1
 1864 005c 7B69     		ldr	r3, [r7, #20]
 1865 005e B3F5800F 		cmp	r3, #4194304
 1866 0062 06D1     		bne	.L94
ARM GAS  /tmp/ccwjY1CM.s 			page 56


1269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1867              		.loc 1 1269 54
 1868 0064 FB68     		ldr	r3, [r7, #12]
 1869 0066 9B68     		ldr	r3, [r3, #8]
 1870              		.loc 1 1269 40
 1871 0068 002B     		cmp	r3, #0
 1872 006a 02D1     		bne	.L94
 1873              		.loc 1 1269 90 discriminator 1
 1874 006c FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1875 006e 042B     		cmp	r3, #4
 1876 0070 09D0     		beq	.L93
 1877              	.L94:
1270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 1878              		.loc 1 1271 15
 1879 0072 0223     		movs	r3, #2
 1880 0074 87F82B30 		strb	r3, [r7, #43]
1272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 1881              		.loc 1 1272 5
 1882 0078 FB68     		ldr	r3, [r7, #12]
 1883 007a 0022     		movs	r2, #0
 1884 007c 83F88020 		strb	r2, [r3, #128]
1273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 1885              		.loc 1 1273 12
 1886 0080 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1887 0084 A4E2     		b	.L92
 1888              	.L93:
1274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0UL))
 1889              		.loc 1 1276 6
 1890 0086 BB68     		ldr	r3, [r7, #8]
 1891 0088 002B     		cmp	r3, #0
 1892 008a 05D0     		beq	.L95
 1893              		.loc 1 1276 25 discriminator 1
 1894 008c 7B68     		ldr	r3, [r7, #4]
 1895 008e 002B     		cmp	r3, #0
 1896 0090 02D0     		beq	.L95
 1897              		.loc 1 1276 46 discriminator 2
 1898 0092 7B88     		ldrh	r3, [r7, #2]
 1899 0094 002B     		cmp	r3, #0
 1900 0096 09D1     		bne	.L96
 1901              	.L95:
1277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1902              		.loc 1 1278 15
 1903 0098 0123     		movs	r3, #1
 1904 009a 87F82B30 		strb	r3, [r7, #43]
1279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 1905              		.loc 1 1279 5
 1906 009e FB68     		ldr	r3, [r7, #12]
 1907 00a0 0022     		movs	r2, #0
 1908 00a2 83F88020 		strb	r2, [r3, #128]
1280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 1909              		.loc 1 1280 12
 1910 00a6 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1911 00aa 91E2     		b	.L92
ARM GAS  /tmp/ccwjY1CM.s 			page 57


 1912              	.L96:
1281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 1913              		.loc 1 1284 11
 1914 00ac FB68     		ldr	r3, [r7, #12]
 1915 00ae 93F88130 		ldrb	r3, [r3, #129]
 1916 00b2 DBB2     		uxtb	r3, r3
 1917              		.loc 1 1284 6
 1918 00b4 042B     		cmp	r3, #4
 1919 00b6 03D0     		beq	.L97
1285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 1920              		.loc 1 1286 17
 1921 00b8 FB68     		ldr	r3, [r7, #12]
 1922 00ba 0522     		movs	r2, #5
 1923 00bc 83F88120 		strb	r2, [r3, #129]
 1924              	.L97:
1287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
1290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1925              		.loc 1 1290 21
 1926 00c0 FB68     		ldr	r3, [r7, #12]
 1927 00c2 0022     		movs	r2, #0
 1928 00c4 C3F88420 		str	r2, [r3, #132]
1291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1929              		.loc 1 1291 21
 1930 00c8 FB68     		ldr	r3, [r7, #12]
 1931 00ca 7A68     		ldr	r2, [r7, #4]
 1932 00cc 5A66     		str	r2, [r3, #100]
1292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1933              		.loc 1 1292 21
 1934 00ce FB68     		ldr	r3, [r7, #12]
 1935 00d0 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1936 00d2 A3F86A20 		strh	r2, [r3, #106]	@ movhi
1293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1937              		.loc 1 1293 21
 1938 00d6 FB68     		ldr	r3, [r7, #12]
 1939 00d8 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1940 00da A3F86820 		strh	r2, [r3, #104]	@ movhi
1294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1941              		.loc 1 1294 21
 1942 00de FB68     		ldr	r3, [r7, #12]
 1943 00e0 BA68     		ldr	r2, [r7, #8]
 1944 00e2 DA65     		str	r2, [r3, #92]
1295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1945              		.loc 1 1295 21
 1946 00e4 FB68     		ldr	r3, [r7, #12]
 1947 00e6 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1948 00e8 A3F86220 		strh	r2, [r3, #98]	@ movhi
1296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1949              		.loc 1 1296 21
 1950 00ec FB68     		ldr	r3, [r7, #12]
 1951 00ee 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1952 00f0 A3F86020 		strh	r2, [r3, #96]	@ movhi
ARM GAS  /tmp/ccwjY1CM.s 			page 58


1297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*Init field not used in handle to zero */
1299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1953              		.loc 1 1299 21
 1954 00f4 FB68     		ldr	r3, [r7, #12]
 1955 00f6 0022     		movs	r2, #0
 1956 00f8 1A67     		str	r2, [r3, #112]
1300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1957              		.loc 1 1300 21
 1958 00fa FB68     		ldr	r3, [r7, #12]
 1959 00fc 0022     		movs	r2, #0
 1960 00fe 5A67     		str	r2, [r3, #116]
1301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
1303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 1961              		.loc 1 1303 3
 1962 0100 FB68     		ldr	r3, [r7, #12]
 1963 0102 1B68     		ldr	r3, [r3]
 1964 0104 5A68     		ldr	r2, [r3, #4]
 1965 0106 9F4B     		ldr	r3, .L128
 1966 0108 1340     		ands	r3, r3, r2
 1967 010a 7988     		ldrh	r1, [r7, #2]
 1968 010c FA68     		ldr	r2, [r7, #12]
 1969 010e 1268     		ldr	r2, [r2]
 1970 0110 0B43     		orrs	r3, r3, r1
 1971 0112 5360     		str	r3, [r2, #4]
1304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
 1972              		.loc 1 1305 3
 1973 0114 FB68     		ldr	r3, [r7, #12]
 1974 0116 1B68     		ldr	r3, [r3]
 1975 0118 1A68     		ldr	r2, [r3]
 1976 011a FB68     		ldr	r3, [r7, #12]
 1977 011c 1B68     		ldr	r3, [r3]
 1978 011e 42F00102 		orr	r2, r2, #1
 1979 0122 1A60     		str	r2, [r3]
1306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
 1980              		.loc 1 1307 17
 1981 0124 FB68     		ldr	r3, [r7, #12]
 1982 0126 5B68     		ldr	r3, [r3, #4]
 1983              		.loc 1 1307 6
 1984 0128 B3F5800F 		cmp	r3, #4194304
 1985 012c 07D1     		bne	.L98
1308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
1310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 1986              		.loc 1 1310 5
 1987 012e FB68     		ldr	r3, [r7, #12]
 1988 0130 1B68     		ldr	r3, [r3]
 1989 0132 1A68     		ldr	r2, [r3]
 1990 0134 FB68     		ldr	r3, [r7, #12]
 1991 0136 1B68     		ldr	r3, [r3]
 1992 0138 42F40072 		orr	r2, r2, #512
 1993 013c 1A60     		str	r2, [r3]
 1994              	.L98:
1311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccwjY1CM.s 			page 59


1312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit and Receive data in 32 Bit mode */
1314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 1995              		.loc 1 1314 17
 1996 013e FB68     		ldr	r3, [r7, #12]
 1997 0140 DB68     		ldr	r3, [r3, #12]
 1998              		.loc 1 1314 6
 1999 0142 0F2B     		cmp	r3, #15
 2000 0144 70D9     		bls	.L99
1315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while ((initial_TxXferCount > 0UL) || (initial_RxXferCount > 0UL))
 2001              		.loc 1 1316 11
 2002 0146 68E0     		b	.L100
 2003              	.L105:
1317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check TXP flag */
1319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP)) && (initial_TxXferCount > 0UL))
 2004              		.loc 1 1319 12
 2005 0148 FB68     		ldr	r3, [r7, #12]
 2006 014a 1B68     		ldr	r3, [r3]
 2007 014c 5B69     		ldr	r3, [r3, #20]
 2008 014e 03F00203 		and	r3, r3, #2
 2009              		.loc 1 1319 10
 2010 0152 022B     		cmp	r3, #2
 2011 0154 1AD1     		bne	.L101
 2012              		.loc 1 1319 52 discriminator 1
 2013 0156 FB8D     		ldrh	r3, [r7, #46]
 2014 0158 002B     		cmp	r3, #0
 2015 015a 17D0     		beq	.L101
1320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
 2016              		.loc 1 1321 71
 2017 015c FB68     		ldr	r3, [r7, #12]
 2018 015e DA6D     		ldr	r2, [r3, #92]
 2019              		.loc 1 1321 33
 2020 0160 FB68     		ldr	r3, [r7, #12]
 2021 0162 1B68     		ldr	r3, [r3]
 2022              		.loc 1 1321 53
 2023 0164 1268     		ldr	r2, [r2]
 2024              		.loc 1 1321 51
 2025 0166 1A62     		str	r2, [r3, #32]
1322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint32_t);
 2026              		.loc 1 1322 26
 2027 0168 FB68     		ldr	r3, [r7, #12]
 2028 016a DB6D     		ldr	r3, [r3, #92]
 2029 016c 1A1D     		adds	r2, r3, #4
 2030 016e FB68     		ldr	r3, [r7, #12]
 2031 0170 DA65     		str	r2, [r3, #92]
1323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxXferCount --;
 2032              		.loc 1 1323 13
 2033 0172 FB68     		ldr	r3, [r7, #12]
 2034 0174 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 2035 0178 9BB2     		uxth	r3, r3
 2036              		.loc 1 1323 27
 2037 017a 013B     		subs	r3, r3, #1
 2038 017c 9AB2     		uxth	r2, r3
 2039 017e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 60


 2040 0180 A3F86220 		strh	r2, [r3, #98]	@ movhi
1324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_TxXferCount = hspi->TxXferCount;
 2041              		.loc 1 1324 29
 2042 0184 FB68     		ldr	r3, [r7, #12]
 2043 0186 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 2044 018a FB85     		strh	r3, [r7, #46]	@ movhi
 2045              	.L101:
1325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check RXWNE/EOT flag */
1328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_EOT)) != 0UL) && (initial_RxXferCount >
 2046              		.loc 1 1328 17
 2047 018c FB68     		ldr	r3, [r7, #12]
 2048 018e 1B68     		ldr	r3, [r3]
 2049              		.loc 1 1328 27
 2050 0190 5A69     		ldr	r2, [r3, #20]
 2051              		.loc 1 1328 32
 2052 0192 48F20803 		movw	r3, #32776
 2053 0196 1340     		ands	r3, r3, r2
 2054              		.loc 1 1328 10
 2055 0198 002B     		cmp	r3, #0
 2056 019a 1AD0     		beq	.L102
 2057              		.loc 1 1328 75 discriminator 1
 2058 019c BB8D     		ldrh	r3, [r7, #44]
 2059 019e 002B     		cmp	r3, #0
 2060 01a0 17D0     		beq	.L102
1329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 2061              		.loc 1 1330 67
 2062 01a2 FB68     		ldr	r3, [r7, #12]
 2063 01a4 1A68     		ldr	r2, [r3]
 2064              		.loc 1 1330 27
 2065 01a6 FB68     		ldr	r3, [r7, #12]
 2066 01a8 5B6E     		ldr	r3, [r3, #100]
 2067              		.loc 1 1330 43
 2068 01aa 126B     		ldr	r2, [r2, #48]
 2069              		.loc 1 1330 41
 2070 01ac 1A60     		str	r2, [r3]
1331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint32_t);
 2071              		.loc 1 1331 26
 2072 01ae FB68     		ldr	r3, [r7, #12]
 2073 01b0 5B6E     		ldr	r3, [r3, #100]
 2074 01b2 1A1D     		adds	r2, r3, #4
 2075 01b4 FB68     		ldr	r3, [r7, #12]
 2076 01b6 5A66     		str	r2, [r3, #100]
1332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount --;
 2077              		.loc 1 1332 13
 2078 01b8 FB68     		ldr	r3, [r7, #12]
 2079 01ba B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 2080 01be 9BB2     		uxth	r3, r3
 2081              		.loc 1 1332 27
 2082 01c0 013B     		subs	r3, r3, #1
 2083 01c2 9AB2     		uxth	r2, r3
 2084 01c4 FB68     		ldr	r3, [r7, #12]
 2085 01c6 A3F86A20 		strh	r2, [r3, #106]	@ movhi
1333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_RxXferCount = hspi->RxXferCount;
 2086              		.loc 1 1333 29
ARM GAS  /tmp/ccwjY1CM.s 			page 61


 2087 01ca FB68     		ldr	r3, [r7, #12]
 2088 01cc B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 2089 01d0 BB85     		strh	r3, [r7, #44]	@ movhi
 2090              	.L102:
1334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Timeout management */
1337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 
 2091              		.loc 1 1337 14
 2092 01d2 FFF7FEFF 		bl	HAL_GetTick
 2093 01d6 0246     		mov	r2, r0
 2094              		.loc 1 1337 28
 2095 01d8 FB69     		ldr	r3, [r7, #28]
 2096 01da D31A     		subs	r3, r2, r3
 2097              		.loc 1 1337 10
 2098 01dc BA6B     		ldr	r2, [r7, #56]
 2099 01de 9A42     		cmp	r2, r3
 2100 01e0 03D8     		bhi	.L103
 2101              		.loc 1 1337 54 discriminator 1
 2102 01e2 BB6B     		ldr	r3, [r7, #56]
 2103 01e4 B3F1FF3F 		cmp	r3, #-1
 2104 01e8 02D1     		bne	.L104
 2105              	.L103:
 2106              		.loc 1 1337 85 discriminator 3
 2107 01ea BB6B     		ldr	r3, [r7, #56]
 2108 01ec 002B     		cmp	r3, #0
 2109 01ee 14D1     		bne	.L100
 2110              	.L104:
1338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Call standard close procedure with error check */
1340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SPI_CloseTransfer(hspi);
 2111              		.loc 1 1340 9
 2112 01f0 F868     		ldr	r0, [r7, #12]
 2113 01f2 FFF7FEFF 		bl	SPI_CloseTransfer
1341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Process Unlocked */
1343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 2114              		.loc 1 1343 9
 2115 01f6 FB68     		ldr	r3, [r7, #12]
 2116 01f8 0022     		movs	r2, #0
 2117 01fa 83F88020 		strb	r2, [r3, #128]
1344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 2118              		.loc 1 1345 9
 2119 01fe FB68     		ldr	r3, [r7, #12]
 2120 0200 D3F88430 		ldr	r3, [r3, #132]
 2121 0204 43F48072 		orr	r2, r3, #256
 2122 0208 FB68     		ldr	r3, [r7, #12]
 2123 020a C3F88420 		str	r2, [r3, #132]
1346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 2124              		.loc 1 1346 21
 2125 020e FB68     		ldr	r3, [r7, #12]
 2126 0210 0122     		movs	r2, #1
 2127 0212 83F88120 		strb	r2, [r3, #129]
1347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return HAL_ERROR;
 2128              		.loc 1 1347 16
 2129 0216 0123     		movs	r3, #1
ARM GAS  /tmp/ccwjY1CM.s 			page 62


 2130 0218 DAE1     		b	.L92
 2131              	.L100:
1316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 2132              		.loc 1 1316 11
 2133 021a FB8D     		ldrh	r3, [r7, #46]
 2134 021c 002B     		cmp	r3, #0
 2135 021e 93D1     		bne	.L105
1316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 2136              		.loc 1 1316 40 discriminator 1
 2137 0220 BB8D     		ldrh	r3, [r7, #44]
 2138 0222 002B     		cmp	r3, #0
 2139 0224 90D1     		bne	.L105
 2140 0226 ACE1     		b	.L106
 2141              	.L99:
1348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 2142              		.loc 1 1352 22
 2143 0228 FB68     		ldr	r3, [r7, #12]
 2144 022a DB68     		ldr	r3, [r3, #12]
 2145              		.loc 1 1352 11
 2146 022c 072B     		cmp	r3, #7
 2147 022e 40F2A081 		bls	.L116
1353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while ((initial_TxXferCount > 0UL) || (initial_RxXferCount > 0UL))
 2148              		.loc 1 1354 11
 2149 0232 A9E0     		b	.L108
 2150              	.L115:
1355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check TXP flag */
1357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP) && (initial_TxXferCount > 0UL))
 2151              		.loc 1 1357 11
 2152 0234 FB68     		ldr	r3, [r7, #12]
 2153 0236 1B68     		ldr	r3, [r3]
 2154 0238 5B69     		ldr	r3, [r3, #20]
 2155 023a 03F00203 		and	r3, r3, #2
 2156              		.loc 1 1357 10
 2157 023e 022B     		cmp	r3, #2
 2158 0240 39D1     		bne	.L109
 2159              		.loc 1 1357 50 discriminator 1
 2160 0242 FB8D     		ldrh	r3, [r7, #46]
 2161 0244 002B     		cmp	r3, #0
 2162 0246 36D0     		beq	.L109
1358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((initial_TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 2163              		.loc 1 1359 12
 2164 0248 FB8D     		ldrh	r3, [r7, #46]
 2165 024a 012B     		cmp	r3, #1
 2166 024c 1CD9     		bls	.L110
 2167              		.loc 1 1359 55 discriminator 1
 2168 024e FB68     		ldr	r3, [r7, #12]
 2169 0250 DB6B     		ldr	r3, [r3, #60]
 2170              		.loc 1 1359 41 discriminator 1
 2171 0252 002B     		cmp	r3, #0
 2172 0254 18D0     		beq	.L110
ARM GAS  /tmp/ccwjY1CM.s 			page 63


1360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
 2173              		.loc 1 1361 73
 2174 0256 FB68     		ldr	r3, [r7, #12]
 2175 0258 DA6D     		ldr	r2, [r3, #92]
 2176              		.loc 1 1361 35
 2177 025a FB68     		ldr	r3, [r7, #12]
 2178 025c 1B68     		ldr	r3, [r3]
 2179              		.loc 1 1361 55
 2180 025e 1268     		ldr	r2, [r2]
 2181              		.loc 1 1361 53
 2182 0260 1A62     		str	r2, [r3, #32]
1362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
 2183              		.loc 1 1362 28
 2184 0262 FB68     		ldr	r3, [r7, #12]
 2185 0264 DB6D     		ldr	r3, [r3, #92]
 2186 0266 1A1D     		adds	r2, r3, #4
 2187 0268 FB68     		ldr	r3, [r7, #12]
 2188 026a DA65     		str	r2, [r3, #92]
1363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
 2189              		.loc 1 1363 29
 2190 026c FB68     		ldr	r3, [r7, #12]
 2191 026e B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 2192 0272 9BB2     		uxth	r3, r3
 2193 0274 023B     		subs	r3, r3, #2
 2194 0276 9AB2     		uxth	r2, r3
 2195 0278 FB68     		ldr	r3, [r7, #12]
 2196 027a A3F86220 		strh	r2, [r3, #98]	@ movhi
1364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_TxXferCount = hspi->TxXferCount;
 2197              		.loc 1 1364 31
 2198 027e FB68     		ldr	r3, [r7, #12]
 2199 0280 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 2200 0284 FB85     		strh	r3, [r7, #46]	@ movhi
 2201 0286 16E0     		b	.L109
 2202              	.L110:
1365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
1367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *ptxdr_16bits = *((uint16_t *)hspi->pTxBuffPtr);
 2203              		.loc 1 1369 45
 2204 0288 FB68     		ldr	r3, [r7, #12]
 2205 028a DB6D     		ldr	r3, [r3, #92]
 2206              		.loc 1 1369 27
 2207 028c 1A88     		ldrh	r2, [r3]
 2208              		.loc 1 1369 25
 2209 028e 7B6A     		ldr	r3, [r7, #36]
 2210 0290 1A80     		strh	r2, [r3]	@ movhi
1370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint16_t *)&hspi->Instance->TXDR) = *((uint16_t *)hspi->pTxBuffPtr);
1372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 2211              		.loc 1 1373 28
 2212 0292 FB68     		ldr	r3, [r7, #12]
 2213 0294 DB6D     		ldr	r3, [r3, #92]
 2214 0296 9A1C     		adds	r2, r3, #2
 2215 0298 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 64


 2216 029a DA65     		str	r2, [r3, #92]
1374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
 2217              		.loc 1 1374 15
 2218 029c FB68     		ldr	r3, [r7, #12]
 2219 029e B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 2220 02a2 9BB2     		uxth	r3, r3
 2221              		.loc 1 1374 28
 2222 02a4 013B     		subs	r3, r3, #1
 2223 02a6 9AB2     		uxth	r2, r3
 2224 02a8 FB68     		ldr	r3, [r7, #12]
 2225 02aa A3F86220 		strh	r2, [r3, #98]	@ movhi
1375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_TxXferCount = hspi->TxXferCount;
 2226              		.loc 1 1375 31
 2227 02ae FB68     		ldr	r3, [r7, #12]
 2228 02b0 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 2229 02b4 FB85     		strh	r3, [r7, #46]	@ movhi
 2230              	.L109:
1376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check RXWNE/FRLVL flag */
1380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_FRLVL)) != 0UL) && (initial_RxXferCount
 2231              		.loc 1 1380 17
 2232 02b6 FB68     		ldr	r3, [r7, #12]
 2233 02b8 1B68     		ldr	r3, [r3]
 2234              		.loc 1 1380 27
 2235 02ba 5B69     		ldr	r3, [r3, #20]
 2236              		.loc 1 1380 32
 2237 02bc 03F46043 		and	r3, r3, #57344
 2238              		.loc 1 1380 10
 2239 02c0 002B     		cmp	r3, #0
 2240 02c2 3AD0     		beq	.L111
 2241              		.loc 1 1380 77 discriminator 1
 2242 02c4 BB8D     		ldrh	r3, [r7, #44]
 2243 02c6 002B     		cmp	r3, #0
 2244 02c8 37D0     		beq	.L111
1381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((hspi->Instance->SR & SPI_FLAG_RXWNE) != 0UL)
 2245              		.loc 1 1382 18
 2246 02ca FB68     		ldr	r3, [r7, #12]
 2247 02cc 1B68     		ldr	r3, [r3]
 2248              		.loc 1 1382 28
 2249 02ce 5B69     		ldr	r3, [r3, #20]
 2250              		.loc 1 1382 33
 2251 02d0 03F40043 		and	r3, r3, #32768
 2252              		.loc 1 1382 12
 2253 02d4 002B     		cmp	r3, #0
 2254 02d6 18D0     		beq	.L112
1383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 2255              		.loc 1 1384 69
 2256 02d8 FB68     		ldr	r3, [r7, #12]
 2257 02da 1A68     		ldr	r2, [r3]
 2258              		.loc 1 1384 29
 2259 02dc FB68     		ldr	r3, [r7, #12]
 2260 02de 5B6E     		ldr	r3, [r3, #100]
 2261              		.loc 1 1384 45
ARM GAS  /tmp/ccwjY1CM.s 			page 65


 2262 02e0 126B     		ldr	r2, [r2, #48]
 2263              		.loc 1 1384 43
 2264 02e2 1A60     		str	r2, [r3]
1385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint32_t);
 2265              		.loc 1 1385 28
 2266 02e4 FB68     		ldr	r3, [r7, #12]
 2267 02e6 5B6E     		ldr	r3, [r3, #100]
 2268 02e8 1A1D     		adds	r2, r3, #4
 2269 02ea FB68     		ldr	r3, [r7, #12]
 2270 02ec 5A66     		str	r2, [r3, #100]
1386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)2UL;
 2271              		.loc 1 1386 29
 2272 02ee FB68     		ldr	r3, [r7, #12]
 2273 02f0 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 2274 02f4 9BB2     		uxth	r3, r3
 2275 02f6 023B     		subs	r3, r3, #2
 2276 02f8 9AB2     		uxth	r2, r3
 2277 02fa FB68     		ldr	r3, [r7, #12]
 2278 02fc A3F86A20 		strh	r2, [r3, #106]	@ movhi
1387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_RxXferCount = hspi->RxXferCount;
 2279              		.loc 1 1387 31
 2280 0300 FB68     		ldr	r3, [r7, #12]
 2281 0302 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 2282 0306 BB85     		strh	r3, [r7, #44]	@ movhi
 2283 0308 17E0     		b	.L111
 2284              	.L112:
1388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
1390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 2285              		.loc 1 1392 29
 2286 030a FB68     		ldr	r3, [r7, #12]
 2287 030c 5B6E     		ldr	r3, [r3, #100]
 2288              		.loc 1 1392 45
 2289 030e 3A6A     		ldr	r2, [r7, #32]
 2290 0310 1288     		ldrh	r2, [r2]	@ movhi
 2291 0312 92B2     		uxth	r2, r2
 2292              		.loc 1 1392 43
 2293 0314 1A80     		strh	r2, [r3]	@ movhi
1393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
1395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
 2294              		.loc 1 1396 28
 2295 0316 FB68     		ldr	r3, [r7, #12]
 2296 0318 5B6E     		ldr	r3, [r3, #100]
 2297 031a 9A1C     		adds	r2, r3, #2
 2298 031c FB68     		ldr	r3, [r7, #12]
 2299 031e 5A66     		str	r2, [r3, #100]
1397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount--;
 2300              		.loc 1 1397 15
 2301 0320 FB68     		ldr	r3, [r7, #12]
 2302 0322 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 2303 0326 9BB2     		uxth	r3, r3
 2304              		.loc 1 1397 28
 2305 0328 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccwjY1CM.s 			page 66


 2306 032a 9AB2     		uxth	r2, r3
 2307 032c FB68     		ldr	r3, [r7, #12]
 2308 032e A3F86A20 		strh	r2, [r3, #106]	@ movhi
1398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_RxXferCount = hspi->RxXferCount;
 2309              		.loc 1 1398 31
 2310 0332 FB68     		ldr	r3, [r7, #12]
 2311 0334 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 2312 0338 BB85     		strh	r3, [r7, #44]	@ movhi
 2313              	.L111:
1399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Timeout management */
1403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 
 2314              		.loc 1 1403 14
 2315 033a FFF7FEFF 		bl	HAL_GetTick
 2316 033e 0246     		mov	r2, r0
 2317              		.loc 1 1403 28
 2318 0340 FB69     		ldr	r3, [r7, #28]
 2319 0342 D31A     		subs	r3, r2, r3
 2320              		.loc 1 1403 10
 2321 0344 BA6B     		ldr	r2, [r7, #56]
 2322 0346 9A42     		cmp	r2, r3
 2323 0348 03D8     		bhi	.L113
 2324              		.loc 1 1403 54 discriminator 1
 2325 034a BB6B     		ldr	r3, [r7, #56]
 2326 034c B3F1FF3F 		cmp	r3, #-1
 2327 0350 02D1     		bne	.L114
 2328              	.L113:
 2329              		.loc 1 1403 85 discriminator 3
 2330 0352 BB6B     		ldr	r3, [r7, #56]
 2331 0354 002B     		cmp	r3, #0
 2332 0356 17D1     		bne	.L108
 2333              	.L114:
1404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Call standard close procedure with error check */
1406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SPI_CloseTransfer(hspi);
 2334              		.loc 1 1406 9
 2335 0358 F868     		ldr	r0, [r7, #12]
 2336 035a FFF7FEFF 		bl	SPI_CloseTransfer
1407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Process Unlocked */
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 2337              		.loc 1 1409 9
 2338 035e FB68     		ldr	r3, [r7, #12]
 2339 0360 0022     		movs	r2, #0
 2340 0362 83F88020 		strb	r2, [r3, #128]
1410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 2341              		.loc 1 1411 9
 2342 0366 FB68     		ldr	r3, [r7, #12]
 2343 0368 D3F88430 		ldr	r3, [r3, #132]
 2344 036c 43F48072 		orr	r2, r3, #256
 2345 0370 FB68     		ldr	r3, [r7, #12]
 2346 0372 C3F88420 		str	r2, [r3, #132]
1412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 2347              		.loc 1 1412 21
ARM GAS  /tmp/ccwjY1CM.s 			page 67


 2348 0376 FB68     		ldr	r3, [r7, #12]
 2349 0378 0122     		movs	r2, #1
 2350 037a 83F88120 		strb	r2, [r3, #129]
1413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return HAL_ERROR;
 2351              		.loc 1 1413 16
 2352 037e 0123     		movs	r3, #1
 2353 0380 26E1     		b	.L92
 2354              	.L129:
 2355 0382 00BF     		.align	2
 2356              	.L128:
 2357 0384 0000FFFF 		.word	-65536
 2358              	.L108:
1354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 2359              		.loc 1 1354 11
 2360 0388 FB8D     		ldrh	r3, [r7, #46]
 2361 038a 002B     		cmp	r3, #0
 2362 038c 7FF452AF 		bne	.L115
1354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 2363              		.loc 1 1354 40 discriminator 1
 2364 0390 BB8D     		ldrh	r3, [r7, #44]
 2365 0392 002B     		cmp	r3, #0
 2366 0394 7FF44EAF 		bne	.L115
 2367 0398 F3E0     		b	.L106
 2368              	.L125:
1414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while ((initial_TxXferCount > 0UL) || (initial_RxXferCount > 0UL))
1421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* check TXP flag */
1423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP)) && (initial_TxXferCount > 0UL))
 2369              		.loc 1 1423 12
 2370 039a FB68     		ldr	r3, [r7, #12]
 2371 039c 1B68     		ldr	r3, [r3]
 2372 039e 5B69     		ldr	r3, [r3, #20]
 2373 03a0 03F00203 		and	r3, r3, #2
 2374              		.loc 1 1423 10
 2375 03a4 022B     		cmp	r3, #2
 2376 03a6 5AD1     		bne	.L117
 2377              		.loc 1 1423 52 discriminator 1
 2378 03a8 FB8D     		ldrh	r3, [r7, #46]
 2379 03aa 002B     		cmp	r3, #0
 2380 03ac 57D0     		beq	.L117
1424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((initial_TxXferCount > 3UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_03DATA))
 2381              		.loc 1 1425 12
 2382 03ae FB8D     		ldrh	r3, [r7, #46]
 2383 03b0 032B     		cmp	r3, #3
 2384 03b2 1CD9     		bls	.L118
 2385              		.loc 1 1425 55 discriminator 1
 2386 03b4 FB68     		ldr	r3, [r7, #12]
 2387 03b6 DB6B     		ldr	r3, [r3, #60]
 2388              		.loc 1 1425 41 discriminator 1
 2389 03b8 402B     		cmp	r3, #64
ARM GAS  /tmp/ccwjY1CM.s 			page 68


 2390 03ba 18D9     		bls	.L118
1426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
 2391              		.loc 1 1427 73
 2392 03bc FB68     		ldr	r3, [r7, #12]
 2393 03be DA6D     		ldr	r2, [r3, #92]
 2394              		.loc 1 1427 35
 2395 03c0 FB68     		ldr	r3, [r7, #12]
 2396 03c2 1B68     		ldr	r3, [r3]
 2397              		.loc 1 1427 55
 2398 03c4 1268     		ldr	r2, [r2]
 2399              		.loc 1 1427 53
 2400 03c6 1A62     		str	r2, [r3, #32]
1428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
 2401              		.loc 1 1428 28
 2402 03c8 FB68     		ldr	r3, [r7, #12]
 2403 03ca DB6D     		ldr	r3, [r3, #92]
 2404 03cc 1A1D     		adds	r2, r3, #4
 2405 03ce FB68     		ldr	r3, [r7, #12]
 2406 03d0 DA65     		str	r2, [r3, #92]
1429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)4UL;
 2407              		.loc 1 1429 29
 2408 03d2 FB68     		ldr	r3, [r7, #12]
 2409 03d4 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 2410 03d8 9BB2     		uxth	r3, r3
 2411 03da 043B     		subs	r3, r3, #4
 2412 03dc 9AB2     		uxth	r2, r3
 2413 03de FB68     		ldr	r3, [r7, #12]
 2414 03e0 A3F86220 		strh	r2, [r3, #98]	@ movhi
1430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_TxXferCount = hspi->TxXferCount;
 2415              		.loc 1 1430 31
 2416 03e4 FB68     		ldr	r3, [r7, #12]
 2417 03e6 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 2418 03ea FB85     		strh	r3, [r7, #46]	@ movhi
 2419 03ec 37E0     		b	.L117
 2420              	.L118:
1431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else if ((initial_TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DA
 2421              		.loc 1 1432 17
 2422 03ee FB8D     		ldrh	r3, [r7, #46]
 2423 03f0 012B     		cmp	r3, #1
 2424 03f2 1BD9     		bls	.L119
 2425              		.loc 1 1432 60 discriminator 1
 2426 03f4 FB68     		ldr	r3, [r7, #12]
 2427 03f6 DB6B     		ldr	r3, [r3, #60]
 2428              		.loc 1 1432 46 discriminator 1
 2429 03f8 002B     		cmp	r3, #0
 2430 03fa 17D0     		beq	.L119
1433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *ptxdr_16bits = *((uint16_t *)hspi->pTxBuffPtr);
 2431              		.loc 1 1435 45
 2432 03fc FB68     		ldr	r3, [r7, #12]
 2433 03fe DB6D     		ldr	r3, [r3, #92]
 2434              		.loc 1 1435 27
 2435 0400 1A88     		ldrh	r2, [r3]
 2436              		.loc 1 1435 25
ARM GAS  /tmp/ccwjY1CM.s 			page 69


 2437 0402 7B6A     		ldr	r3, [r7, #36]
 2438 0404 1A80     		strh	r2, [r3]	@ movhi
1436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint16_t *)&hspi->Instance->TXDR) = *((uint16_t *)hspi->pTxBuffPtr);
1438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 2439              		.loc 1 1439 28
 2440 0406 FB68     		ldr	r3, [r7, #12]
 2441 0408 DB6D     		ldr	r3, [r3, #92]
 2442 040a 9A1C     		adds	r2, r3, #2
 2443 040c FB68     		ldr	r3, [r7, #12]
 2444 040e DA65     		str	r2, [r3, #92]
1440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
 2445              		.loc 1 1440 29
 2446 0410 FB68     		ldr	r3, [r7, #12]
 2447 0412 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 2448 0416 9BB2     		uxth	r3, r3
 2449 0418 023B     		subs	r3, r3, #2
 2450 041a 9AB2     		uxth	r2, r3
 2451 041c FB68     		ldr	r3, [r7, #12]
 2452 041e A3F86220 		strh	r2, [r3, #98]	@ movhi
1441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_TxXferCount = hspi->TxXferCount;
 2453              		.loc 1 1441 31
 2454 0422 FB68     		ldr	r3, [r7, #12]
 2455 0424 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 2456 0428 FB85     		strh	r3, [r7, #46]	@ movhi
 2457 042a 18E0     		b	.L117
 2458              	.L119:
1442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
1444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint8_t *)&hspi->Instance->TXDR) = *((uint8_t *)hspi->pTxBuffPtr);
 2459              		.loc 1 1445 71
 2460 042c FB68     		ldr	r3, [r7, #12]
 2461 042e DA6D     		ldr	r2, [r3, #92]
 2462              		.loc 1 1445 34
 2463 0430 FB68     		ldr	r3, [r7, #12]
 2464 0432 1B68     		ldr	r3, [r3]
 2465              		.loc 1 1445 29
 2466 0434 2033     		adds	r3, r3, #32
 2467              		.loc 1 1445 54
 2468 0436 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2469              		.loc 1 1445 52
 2470 0438 1A70     		strb	r2, [r3]
1446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint8_t);
 2471              		.loc 1 1446 28
 2472 043a FB68     		ldr	r3, [r7, #12]
 2473 043c DB6D     		ldr	r3, [r3, #92]
 2474 043e 5A1C     		adds	r2, r3, #1
 2475 0440 FB68     		ldr	r3, [r7, #12]
 2476 0442 DA65     		str	r2, [r3, #92]
1447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
 2477              		.loc 1 1447 15
 2478 0444 FB68     		ldr	r3, [r7, #12]
 2479 0446 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 2480 044a 9BB2     		uxth	r3, r3
 2481              		.loc 1 1447 28
ARM GAS  /tmp/ccwjY1CM.s 			page 70


 2482 044c 013B     		subs	r3, r3, #1
 2483 044e 9AB2     		uxth	r2, r3
 2484 0450 FB68     		ldr	r3, [r7, #12]
 2485 0452 A3F86220 		strh	r2, [r3, #98]	@ movhi
1448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_TxXferCount = hspi->TxXferCount;
 2486              		.loc 1 1448 31
 2487 0456 FB68     		ldr	r3, [r7, #12]
 2488 0458 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 2489 045c FB85     		strh	r3, [r7, #46]	@ movhi
 2490              	.L117:
1449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Wait until RXWNE/FRLVL flag is reset */
1453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_FRLVL)) != 0UL) && (initial_RxXferCount
 2491              		.loc 1 1453 17
 2492 045e FB68     		ldr	r3, [r7, #12]
 2493 0460 1B68     		ldr	r3, [r3]
 2494              		.loc 1 1453 27
 2495 0462 5B69     		ldr	r3, [r3, #20]
 2496              		.loc 1 1453 32
 2497 0464 03F46043 		and	r3, r3, #57344
 2498              		.loc 1 1453 10
 2499 0468 002B     		cmp	r3, #0
 2500 046a 5ED0     		beq	.L120
 2501              		.loc 1 1453 77 discriminator 1
 2502 046c BB8D     		ldrh	r3, [r7, #44]
 2503 046e 002B     		cmp	r3, #0
 2504 0470 5BD0     		beq	.L120
1454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((hspi->Instance->SR & SPI_FLAG_RXWNE) != 0UL)
 2505              		.loc 1 1455 18
 2506 0472 FB68     		ldr	r3, [r7, #12]
 2507 0474 1B68     		ldr	r3, [r3]
 2508              		.loc 1 1455 28
 2509 0476 5B69     		ldr	r3, [r3, #20]
 2510              		.loc 1 1455 33
 2511 0478 03F40043 		and	r3, r3, #32768
 2512              		.loc 1 1455 12
 2513 047c 002B     		cmp	r3, #0
 2514 047e 18D0     		beq	.L121
1456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 2515              		.loc 1 1457 69
 2516 0480 FB68     		ldr	r3, [r7, #12]
 2517 0482 1A68     		ldr	r2, [r3]
 2518              		.loc 1 1457 29
 2519 0484 FB68     		ldr	r3, [r7, #12]
 2520 0486 5B6E     		ldr	r3, [r3, #100]
 2521              		.loc 1 1457 45
 2522 0488 126B     		ldr	r2, [r2, #48]
 2523              		.loc 1 1457 43
 2524 048a 1A60     		str	r2, [r3]
1458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint32_t);
 2525              		.loc 1 1458 28
 2526 048c FB68     		ldr	r3, [r7, #12]
 2527 048e 5B6E     		ldr	r3, [r3, #100]
ARM GAS  /tmp/ccwjY1CM.s 			page 71


 2528 0490 1A1D     		adds	r2, r3, #4
 2529 0492 FB68     		ldr	r3, [r7, #12]
 2530 0494 5A66     		str	r2, [r3, #100]
1459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)4UL;
 2531              		.loc 1 1459 29
 2532 0496 FB68     		ldr	r3, [r7, #12]
 2533 0498 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 2534 049c 9BB2     		uxth	r3, r3
 2535 049e 043B     		subs	r3, r3, #4
 2536 04a0 9AB2     		uxth	r2, r3
 2537 04a2 FB68     		ldr	r3, [r7, #12]
 2538 04a4 A3F86A20 		strh	r2, [r3, #106]	@ movhi
1460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_RxXferCount = hspi->RxXferCount;
 2539              		.loc 1 1460 31
 2540 04a8 FB68     		ldr	r3, [r7, #12]
 2541 04aa B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 2542 04ae BB85     		strh	r3, [r7, #44]	@ movhi
 2543 04b0 3BE0     		b	.L120
 2544              	.L121:
1461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else if ((hspi->Instance->SR & SPI_FLAG_FRLVL) > SPI_RX_FIFO_1PACKET)
 2545              		.loc 1 1462 23
 2546 04b2 FB68     		ldr	r3, [r7, #12]
 2547 04b4 1B68     		ldr	r3, [r3]
 2548              		.loc 1 1462 33
 2549 04b6 5B69     		ldr	r3, [r3, #20]
 2550              		.loc 1 1462 38
 2551 04b8 03F4C043 		and	r3, r3, #24576
 2552              		.loc 1 1462 17
 2553 04bc B3F5005F 		cmp	r3, #8192
 2554 04c0 18D9     		bls	.L122
1463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 2555              		.loc 1 1465 29
 2556 04c2 FB68     		ldr	r3, [r7, #12]
 2557 04c4 5B6E     		ldr	r3, [r3, #100]
 2558              		.loc 1 1465 45
 2559 04c6 3A6A     		ldr	r2, [r7, #32]
 2560 04c8 1288     		ldrh	r2, [r2]	@ movhi
 2561 04ca 92B2     		uxth	r2, r2
 2562              		.loc 1 1465 43
 2563 04cc 1A80     		strh	r2, [r3]	@ movhi
1466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
1468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
 2564              		.loc 1 1469 28
 2565 04ce FB68     		ldr	r3, [r7, #12]
 2566 04d0 5B6E     		ldr	r3, [r3, #100]
 2567 04d2 9A1C     		adds	r2, r3, #2
 2568 04d4 FB68     		ldr	r3, [r7, #12]
 2569 04d6 5A66     		str	r2, [r3, #100]
1470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)2UL;
 2570              		.loc 1 1470 29
 2571 04d8 FB68     		ldr	r3, [r7, #12]
 2572 04da B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
ARM GAS  /tmp/ccwjY1CM.s 			page 72


 2573 04de 9BB2     		uxth	r3, r3
 2574 04e0 023B     		subs	r3, r3, #2
 2575 04e2 9AB2     		uxth	r2, r3
 2576 04e4 FB68     		ldr	r3, [r7, #12]
 2577 04e6 A3F86A20 		strh	r2, [r3, #106]	@ movhi
1471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_RxXferCount = hspi->RxXferCount;
 2578              		.loc 1 1471 31
 2579 04ea FB68     		ldr	r3, [r7, #12]
 2580 04ec B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 2581 04f0 BB85     		strh	r3, [r7, #44]	@ movhi
 2582 04f2 1AE0     		b	.L120
 2583              	.L122:
1472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
1474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 2584              		.loc 1 1475 67
 2585 04f4 FB68     		ldr	r3, [r7, #12]
 2586 04f6 1B68     		ldr	r3, [r3]
 2587              		.loc 1 1475 62
 2588 04f8 03F13002 		add	r2, r3, #48
 2589              		.loc 1 1475 28
 2590 04fc FB68     		ldr	r3, [r7, #12]
 2591 04fe 5B6E     		ldr	r3, [r3, #100]
 2592              		.loc 1 1475 44
 2593 0500 1278     		ldrb	r2, [r2]
 2594 0502 D2B2     		uxtb	r2, r2
 2595              		.loc 1 1475 42
 2596 0504 1A70     		strb	r2, [r3]
1476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint8_t);
 2597              		.loc 1 1476 28
 2598 0506 FB68     		ldr	r3, [r7, #12]
 2599 0508 5B6E     		ldr	r3, [r3, #100]
 2600 050a 5A1C     		adds	r2, r3, #1
 2601 050c FB68     		ldr	r3, [r7, #12]
 2602 050e 5A66     		str	r2, [r3, #100]
1477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount--;
 2603              		.loc 1 1477 15
 2604 0510 FB68     		ldr	r3, [r7, #12]
 2605 0512 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 2606 0516 9BB2     		uxth	r3, r3
 2607              		.loc 1 1477 28
 2608 0518 013B     		subs	r3, r3, #1
 2609 051a 9AB2     		uxth	r2, r3
 2610 051c FB68     		ldr	r3, [r7, #12]
 2611 051e A3F86A20 		strh	r2, [r3, #106]	@ movhi
1478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_RxXferCount = hspi->RxXferCount;
 2612              		.loc 1 1478 31
 2613 0522 FB68     		ldr	r3, [r7, #12]
 2614 0524 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 2615 0528 BB85     		strh	r3, [r7, #44]	@ movhi
 2616              	.L120:
1479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Timeout management */
1483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 
ARM GAS  /tmp/ccwjY1CM.s 			page 73


 2617              		.loc 1 1483 14
 2618 052a FFF7FEFF 		bl	HAL_GetTick
 2619 052e 0246     		mov	r2, r0
 2620              		.loc 1 1483 28
 2621 0530 FB69     		ldr	r3, [r7, #28]
 2622 0532 D31A     		subs	r3, r2, r3
 2623              		.loc 1 1483 10
 2624 0534 BA6B     		ldr	r2, [r7, #56]
 2625 0536 9A42     		cmp	r2, r3
 2626 0538 03D8     		bhi	.L123
 2627              		.loc 1 1483 54 discriminator 1
 2628 053a BB6B     		ldr	r3, [r7, #56]
 2629 053c B3F1FF3F 		cmp	r3, #-1
 2630 0540 02D1     		bne	.L124
 2631              	.L123:
 2632              		.loc 1 1483 85 discriminator 3
 2633 0542 BB6B     		ldr	r3, [r7, #56]
 2634 0544 002B     		cmp	r3, #0
 2635 0546 14D1     		bne	.L116
 2636              	.L124:
1484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Call standard close procedure with error check */
1486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SPI_CloseTransfer(hspi);
 2637              		.loc 1 1486 9
 2638 0548 F868     		ldr	r0, [r7, #12]
 2639 054a FFF7FEFF 		bl	SPI_CloseTransfer
1487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Process Unlocked */
1489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 2640              		.loc 1 1489 9
 2641 054e FB68     		ldr	r3, [r7, #12]
 2642 0550 0022     		movs	r2, #0
 2643 0552 83F88020 		strb	r2, [r3, #128]
1490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 2644              		.loc 1 1491 9
 2645 0556 FB68     		ldr	r3, [r7, #12]
 2646 0558 D3F88430 		ldr	r3, [r3, #132]
 2647 055c 43F48072 		orr	r2, r3, #256
 2648 0560 FB68     		ldr	r3, [r7, #12]
 2649 0562 C3F88420 		str	r2, [r3, #132]
1492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 2650              		.loc 1 1492 21
 2651 0566 FB68     		ldr	r3, [r7, #12]
 2652 0568 0122     		movs	r2, #1
 2653 056a 83F88120 		strb	r2, [r3, #129]
1493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return HAL_ERROR;
 2654              		.loc 1 1493 16
 2655 056e 0123     		movs	r3, #1
 2656 0570 2EE0     		b	.L92
 2657              	.L116:
1420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 2658              		.loc 1 1420 11
 2659 0572 FB8D     		ldrh	r3, [r7, #46]
 2660 0574 002B     		cmp	r3, #0
 2661 0576 7FF410AF 		bne	.L125
1420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
ARM GAS  /tmp/ccwjY1CM.s 			page 74


 2662              		.loc 1 1420 40 discriminator 1
 2663 057a BB8D     		ldrh	r3, [r7, #44]
 2664 057c 002B     		cmp	r3, #0
 2665 057e 7FF40CAF 		bne	.L125
 2666              	.L106:
1494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Wait for Tx/Rx (and CRC) data to be sent/received */
1499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, tickstart, Timeout) != HAL_OK)
 2667              		.loc 1 1499 7
 2668 0582 BB6B     		ldr	r3, [r7, #56]
 2669 0584 0093     		str	r3, [sp]
 2670 0586 FB69     		ldr	r3, [r7, #28]
 2671 0588 0022     		movs	r2, #0
 2672 058a 0821     		movs	r1, #8
 2673 058c F868     		ldr	r0, [r7, #12]
 2674 058e FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 2675 0592 0346     		mov	r3, r0
 2676              		.loc 1 1499 6
 2677 0594 002B     		cmp	r3, #0
 2678 0596 07D0     		beq	.L126
1500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 2679              		.loc 1 1501 5
 2680 0598 FB68     		ldr	r3, [r7, #12]
 2681 059a D3F88430 		ldr	r3, [r3, #132]
 2682 059e 43F02002 		orr	r2, r3, #32
 2683 05a2 FB68     		ldr	r3, [r7, #12]
 2684 05a4 C3F88420 		str	r2, [r3, #132]
 2685              	.L126:
1502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call standard close procedure with error check */
1505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_CloseTransfer(hspi);
 2686              		.loc 1 1505 3
 2687 05a8 F868     		ldr	r0, [r7, #12]
 2688 05aa FFF7FEFF 		bl	SPI_CloseTransfer
1506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
1508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2689              		.loc 1 1508 3
 2690 05ae FB68     		ldr	r3, [r7, #12]
 2691 05b0 0022     		movs	r2, #0
 2692 05b2 83F88020 		strb	r2, [r3, #128]
1509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 2693              		.loc 1 1510 15
 2694 05b6 FB68     		ldr	r3, [r7, #12]
 2695 05b8 0122     		movs	r2, #1
 2696 05ba 83F88120 		strb	r2, [r3, #129]
1511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 2697              		.loc 1 1512 11
 2698 05be FB68     		ldr	r3, [r7, #12]
 2699 05c0 D3F88430 		ldr	r3, [r3, #132]
ARM GAS  /tmp/ccwjY1CM.s 			page 75


 2700              		.loc 1 1512 6
 2701 05c4 002B     		cmp	r3, #0
 2702 05c6 01D0     		beq	.L127
1513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 2703              		.loc 1 1514 12
 2704 05c8 0123     		movs	r3, #1
 2705 05ca 01E0     		b	.L92
 2706              	.L127:
1515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 2707              		.loc 1 1516 10
 2708 05cc 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 2709              	.L92:
1517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 2710              		.loc 1 1517 1
 2711 05d0 1846     		mov	r0, r3
 2712 05d2 3037     		adds	r7, r7, #48
 2713              	.LCFI35:
 2714              		.cfi_def_cfa_offset 8
 2715 05d4 BD46     		mov	sp, r7
 2716              	.LCFI36:
 2717              		.cfi_def_cfa_register 13
 2718              		@ sp needed
 2719 05d6 80BD     		pop	{r7, pc}
 2720              		.cfi_endproc
 2721              	.LFE337:
 2723              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 2724              		.align	1
 2725              		.global	HAL_SPI_Transmit_IT
 2726              		.syntax unified
 2727              		.thumb
 2728              		.thumb_func
 2729              		.fpu fpv5-d16
 2731              	HAL_SPI_Transmit_IT:
 2732              	.LFB338:
1518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
1522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
1523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
1525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 2733              		.loc 1 1528 1
 2734              		.cfi_startproc
 2735              		@ args = 0, pretend = 0, frame = 24
 2736              		@ frame_needed = 1, uses_anonymous_args = 0
 2737              		@ link register save eliminated.
 2738 0000 80B4     		push	{r7}
 2739              	.LCFI37:
 2740              		.cfi_def_cfa_offset 4
 2741              		.cfi_offset 7, -4
 2742 0002 87B0     		sub	sp, sp, #28
ARM GAS  /tmp/ccwjY1CM.s 			page 76


 2743              	.LCFI38:
 2744              		.cfi_def_cfa_offset 32
 2745 0004 00AF     		add	r7, sp, #0
 2746              	.LCFI39:
 2747              		.cfi_def_cfa_register 7
 2748 0006 F860     		str	r0, [r7, #12]
 2749 0008 B960     		str	r1, [r7, #8]
 2750 000a 1346     		mov	r3, r2
 2751 000c FB80     		strh	r3, [r7, #6]	@ movhi
1529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2752              		.loc 1 1529 21
 2753 000e 0023     		movs	r3, #0
 2754 0010 FB75     		strb	r3, [r7, #23]
1530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));
1533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Locked */
1535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2755              		.loc 1 1535 3
 2756 0012 FB68     		ldr	r3, [r7, #12]
 2757 0014 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 2758 0018 012B     		cmp	r3, #1
 2759 001a 01D1     		bne	.L131
 2760              		.loc 1 1535 3 is_stmt 0 discriminator 1
 2761 001c 0223     		movs	r3, #2
 2762 001e 8DE0     		b	.L132
 2763              	.L131:
 2764              		.loc 1 1535 3 discriminator 2
 2765 0020 FB68     		ldr	r3, [r7, #12]
 2766 0022 0122     		movs	r2, #1
 2767 0024 83F88020 		strb	r2, [r3, #128]
1536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
 2768              		.loc 1 1537 6 is_stmt 1 discriminator 2
 2769 0028 BB68     		ldr	r3, [r7, #8]
 2770 002a 002B     		cmp	r3, #0
 2771 002c 02D0     		beq	.L133
 2772              		.loc 1 1537 23 discriminator 1
 2773 002e FB88     		ldrh	r3, [r7, #6]
 2774 0030 002B     		cmp	r3, #0
 2775 0032 07D1     		bne	.L134
 2776              	.L133:
1538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2777              		.loc 1 1539 15
 2778 0034 0123     		movs	r3, #1
 2779 0036 FB75     		strb	r3, [r7, #23]
1540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 2780              		.loc 1 1540 5
 2781 0038 FB68     		ldr	r3, [r7, #12]
 2782 003a 0022     		movs	r2, #0
 2783 003c 83F88020 		strb	r2, [r3, #128]
1541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 2784              		.loc 1 1541 12
 2785 0040 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2786 0042 7BE0     		b	.L132
ARM GAS  /tmp/ccwjY1CM.s 			page 77


 2787              	.L134:
1542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 2788              		.loc 1 1544 11
 2789 0044 FB68     		ldr	r3, [r7, #12]
 2790 0046 93F88130 		ldrb	r3, [r3, #129]
 2791 004a DBB2     		uxtb	r3, r3
 2792              		.loc 1 1544 6
 2793 004c 012B     		cmp	r3, #1
 2794 004e 07D0     		beq	.L135
1545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 2795              		.loc 1 1546 15
 2796 0050 0223     		movs	r3, #2
 2797 0052 FB75     		strb	r3, [r7, #23]
1547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 2798              		.loc 1 1547 5
 2799 0054 FB68     		ldr	r3, [r7, #12]
 2800 0056 0022     		movs	r2, #0
 2801 0058 83F88020 		strb	r2, [r3, #128]
1548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 2802              		.loc 1 1548 12
 2803 005c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2804 005e 6DE0     		b	.L132
 2805              	.L135:
1549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
1552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 2806              		.loc 1 1552 21
 2807 0060 FB68     		ldr	r3, [r7, #12]
 2808 0062 0322     		movs	r2, #3
 2809 0064 83F88120 		strb	r2, [r3, #129]
1553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2810              		.loc 1 1553 21
 2811 0068 FB68     		ldr	r3, [r7, #12]
 2812 006a 0022     		movs	r2, #0
 2813 006c C3F88420 		str	r2, [r3, #132]
1554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2814              		.loc 1 1554 21
 2815 0070 FB68     		ldr	r3, [r7, #12]
 2816 0072 BA68     		ldr	r2, [r7, #8]
 2817 0074 DA65     		str	r2, [r3, #92]
1555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2818              		.loc 1 1555 21
 2819 0076 FB68     		ldr	r3, [r7, #12]
 2820 0078 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2821 007a A3F86020 		strh	r2, [r3, #96]	@ movhi
1556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2822              		.loc 1 1556 21
 2823 007e FB68     		ldr	r3, [r7, #12]
 2824 0080 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2825 0082 A3F86220 		strh	r2, [r3, #98]	@ movhi
1557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = NULL;
ARM GAS  /tmp/ccwjY1CM.s 			page 78


 2826              		.loc 1 1559 21
 2827 0086 FB68     		ldr	r3, [r7, #12]
 2828 0088 0022     		movs	r2, #0
 2829 008a 5A66     		str	r2, [r3, #100]
1560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = (uint16_t) 0UL;
 2830              		.loc 1 1560 21
 2831 008c FB68     		ldr	r3, [r7, #12]
 2832 008e 0022     		movs	r2, #0
 2833 0090 A3F86820 		strh	r2, [r3, #104]	@ movhi
1561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t) 0UL;
 2834              		.loc 1 1561 21
 2835 0094 FB68     		ldr	r3, [r7, #12]
 2836 0096 0022     		movs	r2, #0
 2837 0098 A3F86A20 		strh	r2, [r3, #106]	@ movhi
1562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2838              		.loc 1 1562 21
 2839 009c FB68     		ldr	r3, [r7, #12]
 2840 009e 0022     		movs	r2, #0
 2841 00a0 1A67     		str	r2, [r3, #112]
1563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the function for IT treatment */
1565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 2842              		.loc 1 1565 17
 2843 00a2 FB68     		ldr	r3, [r7, #12]
 2844 00a4 DB68     		ldr	r3, [r3, #12]
 2845              		.loc 1 1565 6
 2846 00a6 0F2B     		cmp	r3, #15
 2847 00a8 03D9     		bls	.L136
1566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_32BIT;
 2848              		.loc 1 1567 17
 2849 00aa FB68     		ldr	r3, [r7, #12]
 2850 00ac 264A     		ldr	r2, .L141
 2851 00ae 5A67     		str	r2, [r3, #116]
 2852 00b0 0AE0     		b	.L137
 2853              	.L136:
1568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 2854              		.loc 1 1569 22
 2855 00b2 FB68     		ldr	r3, [r7, #12]
 2856 00b4 DB68     		ldr	r3, [r3, #12]
 2857              		.loc 1 1569 11
 2858 00b6 072B     		cmp	r3, #7
 2859 00b8 03D9     		bls	.L138
1570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
 2860              		.loc 1 1571 17
 2861 00ba FB68     		ldr	r3, [r7, #12]
 2862 00bc 234A     		ldr	r2, .L141+4
 2863 00be 5A67     		str	r2, [r3, #116]
 2864 00c0 02E0     		b	.L137
 2865              	.L138:
1572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
 2866              		.loc 1 1575 17
ARM GAS  /tmp/ccwjY1CM.s 			page 79


 2867 00c2 FB68     		ldr	r3, [r7, #12]
 2868 00c4 224A     		ldr	r2, .L141+8
 2869 00c6 5A67     		str	r2, [r3, #116]
 2870              	.L137:
1576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2871              		.loc 1 1579 17
 2872 00c8 FB68     		ldr	r3, [r7, #12]
 2873 00ca 9B68     		ldr	r3, [r3, #8]
 2874              		.loc 1 1579 6
 2875 00cc B3F5C02F 		cmp	r3, #393216
 2876 00d0 07D1     		bne	.L139
1580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 2877              		.loc 1 1581 5
 2878 00d2 FB68     		ldr	r3, [r7, #12]
 2879 00d4 1B68     		ldr	r3, [r3]
 2880 00d6 1A68     		ldr	r2, [r3]
 2881 00d8 FB68     		ldr	r3, [r7, #12]
 2882 00da 1B68     		ldr	r3, [r3]
 2883 00dc 42F40062 		orr	r2, r2, #2048
 2884 00e0 1A60     		str	r2, [r3]
 2885              	.L139:
1582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
1585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 2886              		.loc 1 1585 3
 2887 00e2 FB68     		ldr	r3, [r7, #12]
 2888 00e4 1B68     		ldr	r3, [r3]
 2889 00e6 5A68     		ldr	r2, [r3, #4]
 2890 00e8 1A4B     		ldr	r3, .L141+12
 2891 00ea 1340     		ands	r3, r3, r2
 2892 00ec F988     		ldrh	r1, [r7, #6]
 2893 00ee FA68     		ldr	r2, [r7, #12]
 2894 00f0 1268     		ldr	r2, [r2]
 2895 00f2 0B43     		orrs	r3, r3, r1
 2896 00f4 5360     		str	r3, [r2, #4]
1586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
1588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
 2897              		.loc 1 1588 3
 2898 00f6 FB68     		ldr	r3, [r7, #12]
 2899 00f8 1B68     		ldr	r3, [r3]
 2900 00fa 1A68     		ldr	r2, [r3]
 2901 00fc FB68     		ldr	r3, [r7, #12]
 2902 00fe 1B68     		ldr	r3, [r3]
 2903 0100 42F00102 		orr	r2, r2, #1
 2904 0104 1A60     		str	r2, [r3]
1589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable EOT, TXP, FRE, MODF, UDR and TSERF interrupts */
1591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_UDR | SPI_IT_FRE | SPI_IT_MODF | SPI_
 2905              		.loc 1 1591 3
 2906 0106 FB68     		ldr	r3, [r7, #12]
 2907 0108 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccwjY1CM.s 			page 80


 2908 010a 1969     		ldr	r1, [r3, #16]
 2909 010c FB68     		ldr	r3, [r7, #12]
 2910 010e 1A68     		ldr	r2, [r3]
 2911 0110 40F22A73 		movw	r3, #1834
 2912 0114 0B43     		orrs	r3, r3, r1
 2913 0116 1361     		str	r3, [r2, #16]
1592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
 2914              		.loc 1 1593 17
 2915 0118 FB68     		ldr	r3, [r7, #12]
 2916 011a 5B68     		ldr	r3, [r3, #4]
 2917              		.loc 1 1593 6
 2918 011c B3F5800F 		cmp	r3, #4194304
 2919 0120 07D1     		bne	.L140
1594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
1596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 2920              		.loc 1 1596 5
 2921 0122 FB68     		ldr	r3, [r7, #12]
 2922 0124 1B68     		ldr	r3, [r3]
 2923 0126 1A68     		ldr	r2, [r3]
 2924 0128 FB68     		ldr	r3, [r7, #12]
 2925 012a 1B68     		ldr	r3, [r3]
 2926 012c 42F40072 		orr	r2, r2, #512
 2927 0130 1A60     		str	r2, [r3]
 2928              	.L140:
1597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2929              		.loc 1 1599 3
 2930 0132 FB68     		ldr	r3, [r7, #12]
 2931 0134 0022     		movs	r2, #0
 2932 0136 83F88020 		strb	r2, [r3, #128]
1600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 2933              		.loc 1 1600 10
 2934 013a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2935              	.L132:
1601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 2936              		.loc 1 1601 1
 2937 013c 1846     		mov	r0, r3
 2938 013e 1C37     		adds	r7, r7, #28
 2939              	.LCFI40:
 2940              		.cfi_def_cfa_offset 4
 2941 0140 BD46     		mov	sp, r7
 2942              	.LCFI41:
 2943              		.cfi_def_cfa_register 13
 2944              		@ sp needed
 2945 0142 5DF8047B 		ldr	r7, [sp], #4
 2946              	.LCFI42:
 2947              		.cfi_restore 7
 2948              		.cfi_def_cfa_offset 0
 2949 0146 7047     		bx	lr
 2950              	.L142:
 2951              		.align	2
 2952              	.L141:
 2953 0148 00000000 		.word	SPI_TxISR_32BIT
 2954 014c 00000000 		.word	SPI_TxISR_16BIT
ARM GAS  /tmp/ccwjY1CM.s 			page 81


 2955 0150 00000000 		.word	SPI_TxISR_8BIT
 2956 0154 0000FFFF 		.word	-65536
 2957              		.cfi_endproc
 2958              	.LFE338:
 2960              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 2961              		.align	1
 2962              		.global	HAL_SPI_Receive_IT
 2963              		.syntax unified
 2964              		.thumb
 2965              		.thumb_func
 2966              		.fpu fpv5-d16
 2968              	HAL_SPI_Receive_IT:
 2969              	.LFB339:
1602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
1606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
1607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
1609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 2970              		.loc 1 1612 1
 2971              		.cfi_startproc
 2972              		@ args = 0, pretend = 0, frame = 24
 2973              		@ frame_needed = 1, uses_anonymous_args = 0
 2974 0000 80B5     		push	{r7, lr}
 2975              	.LCFI43:
 2976              		.cfi_def_cfa_offset 8
 2977              		.cfi_offset 7, -8
 2978              		.cfi_offset 14, -4
 2979 0002 86B0     		sub	sp, sp, #24
 2980              	.LCFI44:
 2981              		.cfi_def_cfa_offset 32
 2982 0004 00AF     		add	r7, sp, #0
 2983              	.LCFI45:
 2984              		.cfi_def_cfa_register 7
 2985 0006 F860     		str	r0, [r7, #12]
 2986 0008 B960     		str	r1, [r7, #8]
 2987 000a 1346     		mov	r3, r2
 2988 000c FB80     		strh	r3, [r7, #6]	@ movhi
1613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2989              		.loc 1 1613 21
 2990 000e 0023     		movs	r3, #0
 2991 0010 FB75     		strb	r3, [r7, #23]
1614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_RXONLY(hspi->Init.Direction));
1617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 2992              		.loc 1 1618 18
 2993 0012 FB68     		ldr	r3, [r7, #12]
 2994 0014 9B68     		ldr	r3, [r3, #8]
 2995              		.loc 1 1618 6
 2996 0016 002B     		cmp	r3, #0
ARM GAS  /tmp/ccwjY1CM.s 			page 82


 2997 0018 10D1     		bne	.L144
 2998              		.loc 1 1618 68 discriminator 1
 2999 001a FB68     		ldr	r3, [r7, #12]
 3000 001c 5B68     		ldr	r3, [r3, #4]
 3001              		.loc 1 1618 54 discriminator 1
 3002 001e B3F5800F 		cmp	r3, #4194304
 3003 0022 0BD1     		bne	.L144
1619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 3004              		.loc 1 1620 17
 3005 0024 FB68     		ldr	r3, [r7, #12]
 3006 0026 0422     		movs	r2, #4
 3007 0028 83F88120 		strb	r2, [r3, #129]
1621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
 3008              		.loc 1 1622 12
 3009 002c FB88     		ldrh	r3, [r7, #6]
 3010 002e BA68     		ldr	r2, [r7, #8]
 3011 0030 B968     		ldr	r1, [r7, #8]
 3012 0032 F868     		ldr	r0, [r7, #12]
 3013 0034 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 3014 0038 0346     		mov	r3, r0
 3015 003a 94E0     		b	.L145
 3016              	.L144:
1623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Locked */
1626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 3017              		.loc 1 1626 3
 3018 003c FB68     		ldr	r3, [r7, #12]
 3019 003e 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 3020 0042 012B     		cmp	r3, #1
 3021 0044 01D1     		bne	.L146
 3022              		.loc 1 1626 3 is_stmt 0 discriminator 1
 3023 0046 0223     		movs	r3, #2
 3024 0048 8DE0     		b	.L145
 3025              	.L146:
 3026              		.loc 1 1626 3 discriminator 2
 3027 004a FB68     		ldr	r3, [r7, #12]
 3028 004c 0122     		movs	r2, #1
 3029 004e 83F88020 		strb	r2, [r3, #128]
1627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 3030              		.loc 1 1628 11 is_stmt 1 discriminator 2
 3031 0052 FB68     		ldr	r3, [r7, #12]
 3032 0054 93F88130 		ldrb	r3, [r3, #129]
 3033 0058 DBB2     		uxtb	r3, r3
 3034              		.loc 1 1628 6 discriminator 2
 3035 005a 012B     		cmp	r3, #1
 3036 005c 07D0     		beq	.L147
1629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 3037              		.loc 1 1630 15
 3038 005e 0223     		movs	r3, #2
 3039 0060 FB75     		strb	r3, [r7, #23]
1631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 3040              		.loc 1 1631 5
ARM GAS  /tmp/ccwjY1CM.s 			page 83


 3041 0062 FB68     		ldr	r3, [r7, #12]
 3042 0064 0022     		movs	r2, #0
 3043 0066 83F88020 		strb	r2, [r3, #128]
1632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3044              		.loc 1 1632 12
 3045 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3046 006c 7BE0     		b	.L145
 3047              	.L147:
1633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
 3048              		.loc 1 1635 6
 3049 006e BB68     		ldr	r3, [r7, #8]
 3050 0070 002B     		cmp	r3, #0
 3051 0072 02D0     		beq	.L148
 3052              		.loc 1 1635 23 discriminator 1
 3053 0074 FB88     		ldrh	r3, [r7, #6]
 3054 0076 002B     		cmp	r3, #0
 3055 0078 07D1     		bne	.L149
 3056              	.L148:
1636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3057              		.loc 1 1637 15
 3058 007a 0123     		movs	r3, #1
 3059 007c FB75     		strb	r3, [r7, #23]
1638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 3060              		.loc 1 1638 5
 3061 007e FB68     		ldr	r3, [r7, #12]
 3062 0080 0022     		movs	r2, #0
 3063 0082 83F88020 		strb	r2, [r3, #128]
1639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3064              		.loc 1 1639 12
 3065 0086 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3066 0088 6DE0     		b	.L145
 3067              	.L149:
1640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
1643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 3068              		.loc 1 1643 21
 3069 008a FB68     		ldr	r3, [r7, #12]
 3070 008c 0422     		movs	r2, #4
 3071 008e 83F88120 		strb	r2, [r3, #129]
1644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3072              		.loc 1 1644 21
 3073 0092 FB68     		ldr	r3, [r7, #12]
 3074 0094 0022     		movs	r2, #0
 3075 0096 C3F88420 		str	r2, [r3, #132]
1645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 3076              		.loc 1 1645 21
 3077 009a FB68     		ldr	r3, [r7, #12]
 3078 009c BA68     		ldr	r2, [r7, #8]
 3079 009e 5A66     		str	r2, [r3, #100]
1646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3080              		.loc 1 1646 21
 3081 00a0 FB68     		ldr	r3, [r7, #12]
 3082 00a2 FA88     		ldrh	r2, [r7, #6]	@ movhi
ARM GAS  /tmp/ccwjY1CM.s 			page 84


 3083 00a4 A3F86820 		strh	r2, [r3, #104]	@ movhi
1647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3084              		.loc 1 1647 21
 3085 00a8 FB68     		ldr	r3, [r7, #12]
 3086 00aa FA88     		ldrh	r2, [r7, #6]	@ movhi
 3087 00ac A3F86A20 		strh	r2, [r3, #106]	@ movhi
1648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = NULL;
 3088              		.loc 1 1650 21
 3089 00b0 FB68     		ldr	r3, [r7, #12]
 3090 00b2 0022     		movs	r2, #0
 3091 00b4 DA65     		str	r2, [r3, #92]
1651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = (uint16_t) 0UL;
 3092              		.loc 1 1651 21
 3093 00b6 FB68     		ldr	r3, [r7, #12]
 3094 00b8 0022     		movs	r2, #0
 3095 00ba A3F86020 		strh	r2, [r3, #96]	@ movhi
1652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
 3096              		.loc 1 1652 21
 3097 00be FB68     		ldr	r3, [r7, #12]
 3098 00c0 0022     		movs	r2, #0
 3099 00c2 A3F86220 		strh	r2, [r3, #98]	@ movhi
1653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3100              		.loc 1 1653 21
 3101 00c6 FB68     		ldr	r3, [r7, #12]
 3102 00c8 0022     		movs	r2, #0
 3103 00ca 5A67     		str	r2, [r3, #116]
1654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the function for IT treatment */
1656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 3104              		.loc 1 1656 17
 3105 00cc FB68     		ldr	r3, [r7, #12]
 3106 00ce DB68     		ldr	r3, [r3, #12]
 3107              		.loc 1 1656 6
 3108 00d0 0F2B     		cmp	r3, #15
 3109 00d2 03D9     		bls	.L150
1657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_32BIT;
 3110              		.loc 1 1658 17
 3111 00d4 FB68     		ldr	r3, [r7, #12]
 3112 00d6 264A     		ldr	r2, .L155
 3113 00d8 1A67     		str	r2, [r3, #112]
 3114 00da 0AE0     		b	.L151
 3115              	.L150:
1659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 3116              		.loc 1 1660 22
 3117 00dc FB68     		ldr	r3, [r7, #12]
 3118 00de DB68     		ldr	r3, [r3, #12]
 3119              		.loc 1 1660 11
 3120 00e0 072B     		cmp	r3, #7
 3121 00e2 03D9     		bls	.L152
1661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
 3122              		.loc 1 1662 17
 3123 00e4 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 85


 3124 00e6 234A     		ldr	r2, .L155+4
 3125 00e8 1A67     		str	r2, [r3, #112]
 3126 00ea 02E0     		b	.L151
 3127              	.L152:
1663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
 3128              		.loc 1 1666 17
 3129 00ec FB68     		ldr	r3, [r7, #12]
 3130 00ee 224A     		ldr	r2, .L155+8
 3131 00f0 1A67     		str	r2, [r3, #112]
 3132              	.L151:
1667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 3133              		.loc 1 1670 17
 3134 00f2 FB68     		ldr	r3, [r7, #12]
 3135 00f4 9B68     		ldr	r3, [r3, #8]
 3136              		.loc 1 1670 6
 3137 00f6 B3F5C02F 		cmp	r3, #393216
 3138 00fa 07D1     		bne	.L153
1671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 3139              		.loc 1 1672 5
 3140 00fc FB68     		ldr	r3, [r7, #12]
 3141 00fe 1B68     		ldr	r3, [r3]
 3142 0100 1A68     		ldr	r2, [r3]
 3143 0102 FB68     		ldr	r3, [r7, #12]
 3144 0104 1B68     		ldr	r3, [r3]
 3145 0106 22F40062 		bic	r2, r2, #2048
 3146 010a 1A60     		str	r2, [r3]
 3147              	.L153:
1673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             process unlock */
1678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
1680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 3148              		.loc 1 1680 3
 3149 010c FB68     		ldr	r3, [r7, #12]
 3150 010e 1B68     		ldr	r3, [r3]
 3151 0110 5A68     		ldr	r2, [r3, #4]
 3152 0112 1A4B     		ldr	r3, .L155+12
 3153 0114 1340     		ands	r3, r3, r2
 3154 0116 F988     		ldrh	r1, [r7, #6]
 3155 0118 FA68     		ldr	r2, [r7, #12]
 3156 011a 1268     		ldr	r2, [r2]
 3157 011c 0B43     		orrs	r3, r3, r1
 3158 011e 5360     		str	r3, [r2, #4]
1681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
1683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
 3159              		.loc 1 1683 3
ARM GAS  /tmp/ccwjY1CM.s 			page 86


 3160 0120 FB68     		ldr	r3, [r7, #12]
 3161 0122 1B68     		ldr	r3, [r3]
 3162 0124 1A68     		ldr	r2, [r3]
 3163 0126 FB68     		ldr	r3, [r7, #12]
 3164 0128 1B68     		ldr	r3, [r3]
 3165 012a 42F00102 		orr	r2, r2, #1
 3166 012e 1A60     		str	r2, [r3]
1684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable EOT, RXP, OVR, FRE, MODF and TSERF interrupts */
1686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_RXP | SPI_IT_OVR | SPI_IT_FRE | SPI_IT_MODF | SPI_
 3167              		.loc 1 1686 3
 3168 0130 FB68     		ldr	r3, [r7, #12]
 3169 0132 1B68     		ldr	r3, [r3]
 3170 0134 1969     		ldr	r1, [r3, #16]
 3171 0136 FB68     		ldr	r3, [r7, #12]
 3172 0138 1A68     		ldr	r2, [r3]
 3173 013a 40F24973 		movw	r3, #1865
 3174 013e 0B43     		orrs	r3, r3, r1
 3175 0140 1361     		str	r3, [r2, #16]
1687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
 3176              		.loc 1 1688 17
 3177 0142 FB68     		ldr	r3, [r7, #12]
 3178 0144 5B68     		ldr	r3, [r3, #4]
 3179              		.loc 1 1688 6
 3180 0146 B3F5800F 		cmp	r3, #4194304
 3181 014a 07D1     		bne	.L154
1689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
1691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 3182              		.loc 1 1691 5
 3183 014c FB68     		ldr	r3, [r7, #12]
 3184 014e 1B68     		ldr	r3, [r3]
 3185 0150 1A68     		ldr	r2, [r3]
 3186 0152 FB68     		ldr	r3, [r7, #12]
 3187 0154 1B68     		ldr	r3, [r3]
 3188 0156 42F40072 		orr	r2, r2, #512
 3189 015a 1A60     		str	r2, [r3]
 3190              	.L154:
1692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
1695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 3191              		.loc 1 1695 3
 3192 015c FB68     		ldr	r3, [r7, #12]
 3193 015e 0022     		movs	r2, #0
 3194 0160 83F88020 		strb	r2, [r3, #128]
1696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 3195              		.loc 1 1696 10
 3196 0164 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3197              	.L145:
1697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 3198              		.loc 1 1697 1
 3199 0166 1846     		mov	r0, r3
 3200 0168 1837     		adds	r7, r7, #24
 3201              	.LCFI46:
 3202              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccwjY1CM.s 			page 87


 3203 016a BD46     		mov	sp, r7
 3204              	.LCFI47:
 3205              		.cfi_def_cfa_register 13
 3206              		@ sp needed
 3207 016c 80BD     		pop	{r7, pc}
 3208              	.L156:
 3209 016e 00BF     		.align	2
 3210              	.L155:
 3211 0170 00000000 		.word	SPI_RxISR_32BIT
 3212 0174 00000000 		.word	SPI_RxISR_16BIT
 3213 0178 00000000 		.word	SPI_RxISR_8BIT
 3214 017c 0000FFFF 		.word	-65536
 3215              		.cfi_endproc
 3216              	.LFE339:
 3218              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 3219              		.align	1
 3220              		.global	HAL_SPI_TransmitReceive_IT
 3221              		.syntax unified
 3222              		.thumb
 3223              		.thumb_func
 3224              		.fpu fpv5-d16
 3226              	HAL_SPI_TransmitReceive_IT:
 3227              	.LFB340:
1698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
1702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
1703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
1704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
1705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be sent and received
1706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 3228              		.loc 1 1709 1
 3229              		.cfi_startproc
 3230              		@ args = 0, pretend = 0, frame = 40
 3231              		@ frame_needed = 1, uses_anonymous_args = 0
 3232              		@ link register save eliminated.
 3233 0000 80B4     		push	{r7}
 3234              	.LCFI48:
 3235              		.cfi_def_cfa_offset 4
 3236              		.cfi_offset 7, -4
 3237 0002 8BB0     		sub	sp, sp, #44
 3238              	.LCFI49:
 3239              		.cfi_def_cfa_offset 48
 3240 0004 00AF     		add	r7, sp, #0
 3241              	.LCFI50:
 3242              		.cfi_def_cfa_register 7
 3243 0006 F860     		str	r0, [r7, #12]
 3244 0008 B960     		str	r1, [r7, #8]
 3245 000a 7A60     		str	r2, [r7, #4]
 3246 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef  tmp_state;
1711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3247              		.loc 1 1711 21
ARM GAS  /tmp/ccwjY1CM.s 			page 88


 3248 000e 0023     		movs	r3, #0
 3249 0010 FB77     		strb	r3, [r7, #31]
1712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t max_fifo_length = 0UL;
 3250              		.loc 1 1712 12
 3251 0012 0023     		movs	r3, #0
 3252 0014 7B62     		str	r3, [r7, #36]
1713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t tmp_TxXferCount;
1714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   #if defined (__GNUC__)
1715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
 3253              		.loc 1 1715 57
 3254 0016 FB68     		ldr	r3, [r7, #12]
 3255 0018 1B68     		ldr	r3, [r3]
 3256              		.loc 1 1715 18
 3257 001a 2033     		adds	r3, r3, #32
 3258 001c BB61     		str	r3, [r7, #24]
1716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   #endif /* __GNUC__ */
1717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t  tmp_mode;
1718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process locked */
1723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 3259              		.loc 1 1723 3
 3260 001e FB68     		ldr	r3, [r7, #12]
 3261 0020 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 3262 0024 012B     		cmp	r3, #1
 3263 0026 01D1     		bne	.L158
 3264              		.loc 1 1723 3 is_stmt 0 discriminator 1
 3265 0028 0223     		movs	r3, #2
 3266 002a 7FE1     		b	.L159
 3267              	.L158:
 3268              		.loc 1 1723 3 discriminator 2
 3269 002c FB68     		ldr	r3, [r7, #12]
 3270 002e 0122     		movs	r2, #1
 3271 0030 83F88020 		strb	r2, [r3, #128]
1724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init temporary variables */
1726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_state  = hspi->State;
 3272              		.loc 1 1726 14 is_stmt 1 discriminator 2
 3273 0034 FB68     		ldr	r3, [r7, #12]
 3274 0036 93F88130 		ldrb	r3, [r3, #129]
 3275 003a FB75     		strb	r3, [r7, #23]
1727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_mode   = hspi->Init.Mode;
 3276              		.loc 1 1727 14 discriminator 2
 3277 003c FB68     		ldr	r3, [r7, #12]
 3278 003e 5B68     		ldr	r3, [r3, #4]
 3279 0040 3B61     		str	r3, [r7, #16]
1728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
 3280              		.loc 1 1729 6 discriminator 2
 3281 0042 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3282 0044 012B     		cmp	r3, #1
 3283 0046 12D0     		beq	.L160
 3284              		.loc 1 1729 7 discriminator 1
 3285 0048 3B69     		ldr	r3, [r7, #16]
 3286 004a B3F5800F 		cmp	r3, #4194304
ARM GAS  /tmp/ccwjY1CM.s 			page 89


 3287 004e 06D1     		bne	.L161
1730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 3288              		.loc 1 1730 54
 3289 0050 FB68     		ldr	r3, [r7, #12]
 3290 0052 9B68     		ldr	r3, [r3, #8]
 3291              		.loc 1 1730 40
 3292 0054 002B     		cmp	r3, #0
 3293 0056 02D1     		bne	.L161
 3294              		.loc 1 1730 90 discriminator 1
 3295 0058 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3296 005a 042B     		cmp	r3, #4
 3297 005c 07D0     		beq	.L160
 3298              	.L161:
1731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 3299              		.loc 1 1732 15
 3300 005e 0223     		movs	r3, #2
 3301 0060 FB77     		strb	r3, [r7, #31]
1733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 3302              		.loc 1 1733 5
 3303 0062 FB68     		ldr	r3, [r7, #12]
 3304 0064 0022     		movs	r2, #0
 3305 0066 83F88020 		strb	r2, [r3, #128]
1734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3306              		.loc 1 1734 12
 3307 006a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3308 006c 5EE1     		b	.L159
 3309              	.L160:
1735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0UL))
 3310              		.loc 1 1737 6
 3311 006e BB68     		ldr	r3, [r7, #8]
 3312 0070 002B     		cmp	r3, #0
 3313 0072 05D0     		beq	.L162
 3314              		.loc 1 1737 25 discriminator 1
 3315 0074 7B68     		ldr	r3, [r7, #4]
 3316 0076 002B     		cmp	r3, #0
 3317 0078 02D0     		beq	.L162
 3318              		.loc 1 1737 46 discriminator 2
 3319 007a 7B88     		ldrh	r3, [r7, #2]
 3320 007c 002B     		cmp	r3, #0
 3321 007e 07D1     		bne	.L163
 3322              	.L162:
1738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3323              		.loc 1 1739 15
 3324 0080 0123     		movs	r3, #1
 3325 0082 FB77     		strb	r3, [r7, #31]
1740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 3326              		.loc 1 1740 5
 3327 0084 FB68     		ldr	r3, [r7, #12]
 3328 0086 0022     		movs	r2, #0
 3329 0088 83F88020 		strb	r2, [r3, #128]
1741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3330              		.loc 1 1741 12
 3331 008c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
ARM GAS  /tmp/ccwjY1CM.s 			page 90


 3332 008e 4DE1     		b	.L159
 3333              	.L163:
1742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 3334              		.loc 1 1745 11
 3335 0090 FB68     		ldr	r3, [r7, #12]
 3336 0092 93F88130 		ldrb	r3, [r3, #129]
 3337 0096 DBB2     		uxtb	r3, r3
 3338              		.loc 1 1745 6
 3339 0098 042B     		cmp	r3, #4
 3340 009a 03D0     		beq	.L164
1746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 3341              		.loc 1 1747 17
 3342 009c FB68     		ldr	r3, [r7, #12]
 3343 009e 0522     		movs	r2, #5
 3344 00a0 83F88120 		strb	r2, [r3, #129]
 3345              	.L164:
1748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
1751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3346              		.loc 1 1751 21
 3347 00a4 FB68     		ldr	r3, [r7, #12]
 3348 00a6 0022     		movs	r2, #0
 3349 00a8 C3F88420 		str	r2, [r3, #132]
1752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 3350              		.loc 1 1752 21
 3351 00ac FB68     		ldr	r3, [r7, #12]
 3352 00ae BA68     		ldr	r2, [r7, #8]
 3353 00b0 DA65     		str	r2, [r3, #92]
1753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 3354              		.loc 1 1753 21
 3355 00b2 FB68     		ldr	r3, [r7, #12]
 3356 00b4 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3357 00b6 A3F86020 		strh	r2, [r3, #96]	@ movhi
1754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3358              		.loc 1 1754 21
 3359 00ba FB68     		ldr	r3, [r7, #12]
 3360 00bc 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3361 00be A3F86220 		strh	r2, [r3, #98]	@ movhi
1755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 3362              		.loc 1 1755 21
 3363 00c2 FB68     		ldr	r3, [r7, #12]
 3364 00c4 7A68     		ldr	r2, [r7, #4]
 3365 00c6 5A66     		str	r2, [r3, #100]
1756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3366              		.loc 1 1756 21
 3367 00c8 FB68     		ldr	r3, [r7, #12]
 3368 00ca 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3369 00cc A3F86820 		strh	r2, [r3, #104]	@ movhi
1757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3370              		.loc 1 1757 21
 3371 00d0 FB68     		ldr	r3, [r7, #12]
 3372 00d2 7A88     		ldrh	r2, [r7, #2]	@ movhi
ARM GAS  /tmp/ccwjY1CM.s 			page 91


 3373 00d4 A3F86A20 		strh	r2, [r3, #106]	@ movhi
1758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_TxXferCount = hspi->TxXferCount;
 3374              		.loc 1 1758 25
 3375 00d8 FB68     		ldr	r3, [r7, #12]
 3376 00da B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3377 00de 9BB2     		uxth	r3, r3
 3378              		.loc 1 1758 19
 3379 00e0 3B62     		str	r3, [r7, #32]
1759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the function for IT treatment */
1761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 3380              		.loc 1 1761 17
 3381 00e2 FB68     		ldr	r3, [r7, #12]
 3382 00e4 DB68     		ldr	r3, [r3, #12]
 3383              		.loc 1 1761 6
 3384 00e6 0F2B     		cmp	r3, #15
 3385 00e8 06D9     		bls	.L165
1762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR     = SPI_TxISR_32BIT;
 3386              		.loc 1 1763 21
 3387 00ea FB68     		ldr	r3, [r7, #12]
 3388 00ec 924A     		ldr	r2, .L180
 3389 00ee 5A67     		str	r2, [r3, #116]
1764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR     = SPI_RxISR_32BIT;
 3390              		.loc 1 1764 21
 3391 00f0 FB68     		ldr	r3, [r7, #12]
 3392 00f2 924A     		ldr	r2, .L180+4
 3393 00f4 1A67     		str	r2, [r3, #112]
 3394 00f6 10E0     		b	.L166
 3395              	.L165:
1765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 3396              		.loc 1 1766 22
 3397 00f8 FB68     		ldr	r3, [r7, #12]
 3398 00fa DB68     		ldr	r3, [r3, #12]
 3399              		.loc 1 1766 11
 3400 00fc 072B     		cmp	r3, #7
 3401 00fe 06D9     		bls	.L167
1767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR     = SPI_RxISR_16BIT;
 3402              		.loc 1 1768 21
 3403 0100 FB68     		ldr	r3, [r7, #12]
 3404 0102 8F4A     		ldr	r2, .L180+8
 3405 0104 1A67     		str	r2, [r3, #112]
1769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR     = SPI_TxISR_16BIT;
 3406              		.loc 1 1769 21
 3407 0106 FB68     		ldr	r3, [r7, #12]
 3408 0108 8E4A     		ldr	r2, .L180+12
 3409 010a 5A67     		str	r2, [r3, #116]
 3410 010c 05E0     		b	.L166
 3411              	.L167:
1770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR     = SPI_RxISR_8BIT;
 3412              		.loc 1 1773 21
 3413 010e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 92


 3414 0110 8D4A     		ldr	r2, .L180+16
 3415 0112 1A67     		str	r2, [r3, #112]
1774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR     = SPI_TxISR_8BIT;
 3416              		.loc 1 1774 21
 3417 0114 FB68     		ldr	r3, [r7, #12]
 3418 0116 8D4A     		ldr	r2, .L180+20
 3419 0118 5A67     		str	r2, [r3, #116]
 3420              	.L166:
1775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
1778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 3421              		.loc 1 1778 3
 3422 011a FB68     		ldr	r3, [r7, #12]
 3423 011c 1B68     		ldr	r3, [r3]
 3424 011e 5A68     		ldr	r2, [r3, #4]
 3425 0120 8B4B     		ldr	r3, .L180+24
 3426 0122 1340     		ands	r3, r3, r2
 3427 0124 7988     		ldrh	r1, [r7, #2]
 3428 0126 FA68     		ldr	r2, [r7, #12]
 3429 0128 1268     		ldr	r2, [r2]
 3430 012a 0B43     		orrs	r3, r3, r1
 3431 012c 5360     		str	r3, [r2, #4]
1779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
1781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
 3432              		.loc 1 1781 3
 3433 012e FB68     		ldr	r3, [r7, #12]
 3434 0130 1B68     		ldr	r3, [r3]
 3435 0132 1A68     		ldr	r2, [r3]
 3436 0134 FB68     		ldr	r3, [r7, #12]
 3437 0136 1B68     		ldr	r3, [r3]
 3438 0138 42F00102 		orr	r2, r2, #1
 3439 013c 1A60     		str	r2, [r3]
1782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Fill in the TxFIFO */
1784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP)) && (tmp_TxXferCount != 0UL))
 3440              		.loc 1 1784 9
 3441 013e CFE0     		b	.L168
 3442              	.L178:
1785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (max_fifo_length < MAX_FIFO_LENGTH)
 3443              		.loc 1 1786 8
 3444 0140 7B6A     		ldr	r3, [r7, #36]
 3445 0142 0F2B     		cmp	r3, #15
 3446 0144 00F2C480 		bhi	.L169
1787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Transmit data in 32 Bit mode */
1789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 3447              		.loc 1 1789 21
 3448 0148 FB68     		ldr	r3, [r7, #12]
 3449 014a DB68     		ldr	r3, [r3, #12]
 3450              		.loc 1 1789 10
 3451 014c 0F2B     		cmp	r3, #15
 3452 014e 19D9     		bls	.L170
1790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
ARM GAS  /tmp/ccwjY1CM.s 			page 93


 3453              		.loc 1 1791 71
 3454 0150 FB68     		ldr	r3, [r7, #12]
 3455 0152 DA6D     		ldr	r2, [r3, #92]
 3456              		.loc 1 1791 33
 3457 0154 FB68     		ldr	r3, [r7, #12]
 3458 0156 1B68     		ldr	r3, [r3]
 3459              		.loc 1 1791 53
 3460 0158 1268     		ldr	r2, [r2]
 3461              		.loc 1 1791 51
 3462 015a 1A62     		str	r2, [r3, #32]
1792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint32_t);
 3463              		.loc 1 1792 26
 3464 015c FB68     		ldr	r3, [r7, #12]
 3465 015e DB6D     		ldr	r3, [r3, #92]
 3466 0160 1A1D     		adds	r2, r3, #4
 3467 0162 FB68     		ldr	r3, [r7, #12]
 3468 0164 DA65     		str	r2, [r3, #92]
1793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxXferCount--;
 3469              		.loc 1 1793 13
 3470 0166 FB68     		ldr	r3, [r7, #12]
 3471 0168 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3472 016c 9BB2     		uxth	r3, r3
 3473              		.loc 1 1793 26
 3474 016e 013B     		subs	r3, r3, #1
 3475 0170 9AB2     		uxth	r2, r3
 3476 0172 FB68     		ldr	r3, [r7, #12]
 3477 0174 A3F86220 		strh	r2, [r3, #98]	@ movhi
1794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         tmp_TxXferCount = hspi->TxXferCount;
 3478              		.loc 1 1794 31
 3479 0178 FB68     		ldr	r3, [r7, #12]
 3480 017a B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3481 017e 9BB2     		uxth	r3, r3
 3482              		.loc 1 1794 25
 3483 0180 3B62     		str	r3, [r7, #32]
 3484 0182 A1E0     		b	.L171
 3485              	.L170:
1795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Transmit data in 16 Bit mode */
1797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 3486              		.loc 1 1797 26
 3487 0184 FB68     		ldr	r3, [r7, #12]
 3488 0186 DB68     		ldr	r3, [r3, #12]
 3489              		.loc 1 1797 15
 3490 0188 072B     		cmp	r3, #7
 3491 018a 3CD9     		bls	.L172
1798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 3492              		.loc 1 1799 18
 3493 018c FB68     		ldr	r3, [r7, #12]
 3494 018e B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3495 0192 9BB2     		uxth	r3, r3
 3496              		.loc 1 1799 12
 3497 0194 012B     		cmp	r3, #1
 3498 0196 1DD9     		bls	.L173
 3499              		.loc 1 1799 53 discriminator 1
 3500 0198 FB68     		ldr	r3, [r7, #12]
 3501 019a DB6B     		ldr	r3, [r3, #60]
ARM GAS  /tmp/ccwjY1CM.s 			page 94


 3502              		.loc 1 1799 39 discriminator 1
 3503 019c 002B     		cmp	r3, #0
 3504 019e 19D0     		beq	.L173
1800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
 3505              		.loc 1 1801 73
 3506 01a0 FB68     		ldr	r3, [r7, #12]
 3507 01a2 DA6D     		ldr	r2, [r3, #92]
 3508              		.loc 1 1801 35
 3509 01a4 FB68     		ldr	r3, [r7, #12]
 3510 01a6 1B68     		ldr	r3, [r3]
 3511              		.loc 1 1801 55
 3512 01a8 1268     		ldr	r2, [r2]
 3513              		.loc 1 1801 53
 3514 01aa 1A62     		str	r2, [r3, #32]
1802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
 3515              		.loc 1 1802 28
 3516 01ac FB68     		ldr	r3, [r7, #12]
 3517 01ae DB6D     		ldr	r3, [r3, #92]
 3518 01b0 1A1D     		adds	r2, r3, #4
 3519 01b2 FB68     		ldr	r3, [r7, #12]
 3520 01b4 DA65     		str	r2, [r3, #92]
1803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
 3521              		.loc 1 1803 29
 3522 01b6 FB68     		ldr	r3, [r7, #12]
 3523 01b8 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3524 01bc 9BB2     		uxth	r3, r3
 3525 01be 023B     		subs	r3, r3, #2
 3526 01c0 9AB2     		uxth	r2, r3
 3527 01c2 FB68     		ldr	r3, [r7, #12]
 3528 01c4 A3F86220 		strh	r2, [r3, #98]	@ movhi
1804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           tmp_TxXferCount = hspi->TxXferCount;
 3529              		.loc 1 1804 33
 3530 01c8 FB68     		ldr	r3, [r7, #12]
 3531 01ca B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3532 01ce 9BB2     		uxth	r3, r3
 3533              		.loc 1 1804 27
 3534 01d0 3B62     		str	r3, [r7, #32]
 3535 01d2 79E0     		b	.L171
 3536              	.L173:
1805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
1807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *ptxdr_16bits = *((uint16_t *)hspi->pTxBuffPtr);
 3537              		.loc 1 1809 45
 3538 01d4 FB68     		ldr	r3, [r7, #12]
 3539 01d6 DB6D     		ldr	r3, [r3, #92]
 3540              		.loc 1 1809 27
 3541 01d8 1A88     		ldrh	r2, [r3]
 3542              		.loc 1 1809 25
 3543 01da BB69     		ldr	r3, [r7, #24]
 3544 01dc 1A80     		strh	r2, [r3]	@ movhi
1810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint16_t *)&hspi->Instance->TXDR) = *((uint16_t *)hspi->pTxBuffPtr);
1812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
ARM GAS  /tmp/ccwjY1CM.s 			page 95


 3545              		.loc 1 1813 28
 3546 01de FB68     		ldr	r3, [r7, #12]
 3547 01e0 DB6D     		ldr	r3, [r3, #92]
 3548 01e2 9A1C     		adds	r2, r3, #2
 3549 01e4 FB68     		ldr	r3, [r7, #12]
 3550 01e6 DA65     		str	r2, [r3, #92]
1814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
 3551              		.loc 1 1814 15
 3552 01e8 FB68     		ldr	r3, [r7, #12]
 3553 01ea B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3554 01ee 9BB2     		uxth	r3, r3
 3555              		.loc 1 1814 28
 3556 01f0 013B     		subs	r3, r3, #1
 3557 01f2 9AB2     		uxth	r2, r3
 3558 01f4 FB68     		ldr	r3, [r7, #12]
 3559 01f6 A3F86220 		strh	r2, [r3, #98]	@ movhi
1815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           tmp_TxXferCount = hspi->TxXferCount;
 3560              		.loc 1 1815 33
 3561 01fa FB68     		ldr	r3, [r7, #12]
 3562 01fc B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3563 0200 9BB2     		uxth	r3, r3
 3564              		.loc 1 1815 27
 3565 0202 3B62     		str	r3, [r7, #32]
 3566 0204 60E0     		b	.L171
 3567              	.L172:
1816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Transmit data in 8 Bit mode */
1819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
1820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((hspi->TxXferCount > 3UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_03DATA))
 3568              		.loc 1 1821 18
 3569 0206 FB68     		ldr	r3, [r7, #12]
 3570 0208 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3571 020c 9BB2     		uxth	r3, r3
 3572              		.loc 1 1821 12
 3573 020e 032B     		cmp	r3, #3
 3574 0210 1DD9     		bls	.L175
 3575              		.loc 1 1821 53 discriminator 1
 3576 0212 FB68     		ldr	r3, [r7, #12]
 3577 0214 DB6B     		ldr	r3, [r3, #60]
 3578              		.loc 1 1821 39 discriminator 1
 3579 0216 402B     		cmp	r3, #64
 3580 0218 19D9     		bls	.L175
1822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
 3581              		.loc 1 1823 73
 3582 021a FB68     		ldr	r3, [r7, #12]
 3583 021c DA6D     		ldr	r2, [r3, #92]
 3584              		.loc 1 1823 35
 3585 021e FB68     		ldr	r3, [r7, #12]
 3586 0220 1B68     		ldr	r3, [r3]
 3587              		.loc 1 1823 55
 3588 0222 1268     		ldr	r2, [r2]
 3589              		.loc 1 1823 53
 3590 0224 1A62     		str	r2, [r3, #32]
1824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
ARM GAS  /tmp/ccwjY1CM.s 			page 96


 3591              		.loc 1 1824 28
 3592 0226 FB68     		ldr	r3, [r7, #12]
 3593 0228 DB6D     		ldr	r3, [r3, #92]
 3594 022a 1A1D     		adds	r2, r3, #4
 3595 022c FB68     		ldr	r3, [r7, #12]
 3596 022e DA65     		str	r2, [r3, #92]
1825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)4UL;
 3597              		.loc 1 1825 29
 3598 0230 FB68     		ldr	r3, [r7, #12]
 3599 0232 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3600 0236 9BB2     		uxth	r3, r3
 3601 0238 043B     		subs	r3, r3, #4
 3602 023a 9AB2     		uxth	r2, r3
 3603 023c FB68     		ldr	r3, [r7, #12]
 3604 023e A3F86220 		strh	r2, [r3, #98]	@ movhi
1826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           tmp_TxXferCount = hspi->TxXferCount;
 3605              		.loc 1 1826 33
 3606 0242 FB68     		ldr	r3, [r7, #12]
 3607 0244 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3608 0248 9BB2     		uxth	r3, r3
 3609              		.loc 1 1826 27
 3610 024a 3B62     		str	r3, [r7, #32]
 3611 024c 3CE0     		b	.L171
 3612              	.L175:
1827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA
 3613              		.loc 1 1828 23
 3614 024e FB68     		ldr	r3, [r7, #12]
 3615 0250 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3616 0254 9BB2     		uxth	r3, r3
 3617              		.loc 1 1828 17
 3618 0256 012B     		cmp	r3, #1
 3619 0258 1CD9     		bls	.L176
 3620              		.loc 1 1828 58 discriminator 1
 3621 025a FB68     		ldr	r3, [r7, #12]
 3622 025c DB6B     		ldr	r3, [r3, #60]
 3623              		.loc 1 1828 44 discriminator 1
 3624 025e 002B     		cmp	r3, #0
 3625 0260 18D0     		beq	.L176
1829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *ptxdr_16bits = *((uint16_t *)hspi->pTxBuffPtr);
 3626              		.loc 1 1831 45
 3627 0262 FB68     		ldr	r3, [r7, #12]
 3628 0264 DB6D     		ldr	r3, [r3, #92]
 3629              		.loc 1 1831 27
 3630 0266 1A88     		ldrh	r2, [r3]
 3631              		.loc 1 1831 25
 3632 0268 BB69     		ldr	r3, [r7, #24]
 3633 026a 1A80     		strh	r2, [r3]	@ movhi
1832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint16_t *)&hspi->Instance->TXDR) = *((uint16_t *)hspi->pTxBuffPtr);
1834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 3634              		.loc 1 1835 28
 3635 026c FB68     		ldr	r3, [r7, #12]
 3636 026e DB6D     		ldr	r3, [r3, #92]
ARM GAS  /tmp/ccwjY1CM.s 			page 97


 3637 0270 9A1C     		adds	r2, r3, #2
 3638 0272 FB68     		ldr	r3, [r7, #12]
 3639 0274 DA65     		str	r2, [r3, #92]
1836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
 3640              		.loc 1 1836 29
 3641 0276 FB68     		ldr	r3, [r7, #12]
 3642 0278 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3643 027c 9BB2     		uxth	r3, r3
 3644 027e 023B     		subs	r3, r3, #2
 3645 0280 9AB2     		uxth	r2, r3
 3646 0282 FB68     		ldr	r3, [r7, #12]
 3647 0284 A3F86220 		strh	r2, [r3, #98]	@ movhi
1837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           tmp_TxXferCount = hspi->TxXferCount;
 3648              		.loc 1 1837 33
 3649 0288 FB68     		ldr	r3, [r7, #12]
 3650 028a B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3651 028e 9BB2     		uxth	r3, r3
 3652              		.loc 1 1837 27
 3653 0290 3B62     		str	r3, [r7, #32]
 3654 0292 19E0     		b	.L171
 3655              	.L176:
1838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
1840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint8_t *)&hspi->Instance->TXDR) = *((uint8_t *)hspi->pTxBuffPtr);
 3656              		.loc 1 1841 71
 3657 0294 FB68     		ldr	r3, [r7, #12]
 3658 0296 DA6D     		ldr	r2, [r3, #92]
 3659              		.loc 1 1841 34
 3660 0298 FB68     		ldr	r3, [r7, #12]
 3661 029a 1B68     		ldr	r3, [r3]
 3662              		.loc 1 1841 29
 3663 029c 2033     		adds	r3, r3, #32
 3664              		.loc 1 1841 54
 3665 029e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3666              		.loc 1 1841 52
 3667 02a0 1A70     		strb	r2, [r3]
1842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint8_t);
 3668              		.loc 1 1842 28
 3669 02a2 FB68     		ldr	r3, [r7, #12]
 3670 02a4 DB6D     		ldr	r3, [r3, #92]
 3671 02a6 5A1C     		adds	r2, r3, #1
 3672 02a8 FB68     		ldr	r3, [r7, #12]
 3673 02aa DA65     		str	r2, [r3, #92]
1843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
 3674              		.loc 1 1843 15
 3675 02ac FB68     		ldr	r3, [r7, #12]
 3676 02ae B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3677 02b2 9BB2     		uxth	r3, r3
 3678              		.loc 1 1843 28
 3679 02b4 013B     		subs	r3, r3, #1
 3680 02b6 9AB2     		uxth	r2, r3
 3681 02b8 FB68     		ldr	r3, [r7, #12]
 3682 02ba A3F86220 		strh	r2, [r3, #98]	@ movhi
1844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           tmp_TxXferCount = hspi->TxXferCount;
 3683              		.loc 1 1844 33
 3684 02be FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 98


 3685 02c0 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3686 02c4 9BB2     		uxth	r3, r3
 3687              		.loc 1 1844 27
 3688 02c6 3B62     		str	r3, [r7, #32]
 3689              	.L171:
1845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       max_fifo_length++;
 3690              		.loc 1 1848 22
 3691 02c8 7B6A     		ldr	r3, [r7, #36]
 3692 02ca 0133     		adds	r3, r3, #1
 3693 02cc 7B62     		str	r3, [r7, #36]
 3694 02ce 07E0     		b	.L168
 3695              	.L169:
1849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
1851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_BUSY;
 3696              		.loc 1 1852 17
 3697 02d0 0223     		movs	r3, #2
 3698 02d2 FB77     		strb	r3, [r7, #31]
1853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
 3699              		.loc 1 1853 7
 3700 02d4 FB68     		ldr	r3, [r7, #12]
 3701 02d6 0022     		movs	r2, #0
 3702 02d8 83F88020 		strb	r2, [r3, #128]
1854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
 3703              		.loc 1 1854 14
 3704 02dc FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3705 02de 25E0     		b	.L159
 3706              	.L168:
1784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3707              		.loc 1 1784 11
 3708 02e0 FB68     		ldr	r3, [r7, #12]
 3709 02e2 1B68     		ldr	r3, [r3]
 3710 02e4 5B69     		ldr	r3, [r3, #20]
 3711 02e6 03F00203 		and	r3, r3, #2
1784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3712              		.loc 1 1784 9
 3713 02ea 022B     		cmp	r3, #2
 3714 02ec 03D1     		bne	.L177
1784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3715              		.loc 1 1784 51 discriminator 1
 3716 02ee 3B6A     		ldr	r3, [r7, #32]
 3717 02f0 002B     		cmp	r3, #0
 3718 02f2 7FF425AF 		bne	.L178
 3719              	.L177:
1855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable EOT, DXP, UDR, OVR, FRE, MODF and TSERF interrupts */
1859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_DXP | SPI_IT_UDR | SPI_IT_OVR | SPI_IT_FRE | SPI_I
 3720              		.loc 1 1859 3
 3721 02f6 FB68     		ldr	r3, [r7, #12]
 3722 02f8 1B68     		ldr	r3, [r3]
 3723 02fa 1969     		ldr	r1, [r3, #16]
ARM GAS  /tmp/ccwjY1CM.s 			page 99


 3724 02fc FB68     		ldr	r3, [r7, #12]
 3725 02fe 1A68     		ldr	r2, [r3]
 3726 0300 40F26C73 		movw	r3, #1900
 3727 0304 0B43     		orrs	r3, r3, r1
 3728 0306 1361     		str	r3, [r2, #16]
1860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
 3729              		.loc 1 1861 17
 3730 0308 FB68     		ldr	r3, [r7, #12]
 3731 030a 5B68     		ldr	r3, [r3, #4]
 3732              		.loc 1 1861 6
 3733 030c B3F5800F 		cmp	r3, #4194304
 3734 0310 07D1     		bne	.L179
1862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
1864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 3735              		.loc 1 1864 5
 3736 0312 FB68     		ldr	r3, [r7, #12]
 3737 0314 1B68     		ldr	r3, [r3]
 3738 0316 1A68     		ldr	r2, [r3]
 3739 0318 FB68     		ldr	r3, [r7, #12]
 3740 031a 1B68     		ldr	r3, [r3]
 3741 031c 42F40072 		orr	r2, r2, #512
 3742 0320 1A60     		str	r2, [r3]
 3743              	.L179:
1865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
1868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 3744              		.loc 1 1868 3
 3745 0322 FB68     		ldr	r3, [r7, #12]
 3746 0324 0022     		movs	r2, #0
 3747 0326 83F88020 		strb	r2, [r3, #128]
1869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 3748              		.loc 1 1869 10
 3749 032a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3750              	.L159:
1870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 3751              		.loc 1 1870 1
 3752 032c 1846     		mov	r0, r3
 3753 032e 2C37     		adds	r7, r7, #44
 3754              	.LCFI51:
 3755              		.cfi_def_cfa_offset 4
 3756 0330 BD46     		mov	sp, r7
 3757              	.LCFI52:
 3758              		.cfi_def_cfa_register 13
 3759              		@ sp needed
 3760 0332 5DF8047B 		ldr	r7, [sp], #4
 3761              	.LCFI53:
 3762              		.cfi_restore 7
 3763              		.cfi_def_cfa_offset 0
 3764 0336 7047     		bx	lr
 3765              	.L181:
 3766              		.align	2
 3767              	.L180:
 3768 0338 00000000 		.word	SPI_TxISR_32BIT
 3769 033c 00000000 		.word	SPI_RxISR_32BIT
ARM GAS  /tmp/ccwjY1CM.s 			page 100


 3770 0340 00000000 		.word	SPI_RxISR_16BIT
 3771 0344 00000000 		.word	SPI_TxISR_16BIT
 3772 0348 00000000 		.word	SPI_RxISR_8BIT
 3773 034c 00000000 		.word	SPI_TxISR_8BIT
 3774 0350 0000FFFF 		.word	-65536
 3775              		.cfi_endproc
 3776              	.LFE340:
 3778              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 3779              		.align	1
 3780              		.global	HAL_SPI_Transmit_DMA
 3781              		.syntax unified
 3782              		.thumb
 3783              		.thumb_func
 3784              		.fpu fpv5-d16
 3786              	HAL_SPI_Transmit_DMA:
 3787              	.LFB341:
1871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
1873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit an additional amount of data in blocking mode.
1875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
1876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
1877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
1879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Reload_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size
1882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef  tmp_state;
1885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
1887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
1890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_TX)
1897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* check if there is already a request to reload */
1899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
1900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
1902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
1904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Insert the new number of data to be sent just after the current one */
1907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, (Size & 0xFFFFFFFFUL) << 16UL);
1908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Set the transaction information */
1910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.Requested   = 1UL;
1911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.pTxBuffPtr  = (uint8_t *)pData;
ARM GAS  /tmp/ccwjY1CM.s 			page 101


1912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.TxXferSize  = Size;
1913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     tmp_state = hspi->State;
1915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if the current transmit is already completed */
1917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (((hspi->Instance->CR2 & SPI_CR2_TSER) != 0UL) && (tmp_state == HAL_SPI_STATE_READY))
1918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TSERF);
1920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, 0UL);
1921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->Reload.Requested = 0UL;
1922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
1923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
1925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
1937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
1939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Receive an additional amount of data in blocking mode.
1941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
1942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
1943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
1945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Reload_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef  tmp_state;
1951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
1953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
1956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
1963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* check if there is already a request to reload */
1965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
1966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
1968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
ARM GAS  /tmp/ccwjY1CM.s 			page 102


1969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
1970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Insert the new number of data that will be received just after the current one */
1973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, (Size & 0xFFFFFFFFUL) << 16UL);
1974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Set the transaction information */
1976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.Requested   = 1UL;
1977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.pRxBuffPtr  = (uint8_t *)pData;
1978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.RxXferSize  = Size;
1979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     tmp_state = hspi->State;
1981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if the current reception is already completed */
1983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (((hspi->Instance->CR2 & SPI_CR2_TSER) != 0UL) && (tmp_state == HAL_SPI_STATE_READY))
1984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TSERF);
1986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, 0UL);
1987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->Reload.Requested = 0UL;
1988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
1989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
1991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
2001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
2003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
2005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit and receive an additional amount of data in blocking mode.
2007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
2008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
2009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
2010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
2011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be sent and received
2012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
2013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Reload_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint
2015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef  tmp_state;
2018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
2020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
2021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0UL))
2023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
ARM GAS  /tmp/ccwjY1CM.s 			page 103


2026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_TX_RX)
2030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* check if there is already a request to reload */
2032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
2033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
2035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
2036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
2037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Insert the new number of data that will be sent and received just after the current one */
2040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, (Size & 0xFFFFFFFFUL) << 16UL);
2041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Set the transaction information */
2043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.Requested   = 1UL;
2044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.pTxBuffPtr  = (uint8_t *)pTxData;
2045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.TxXferSize  = Size;
2046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.pRxBuffPtr  = (uint8_t *)pRxData;
2047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.RxXferSize  = Size;
2048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     tmp_state = hspi->State;
2050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if the current transmit is already completed */
2052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (((hspi->Instance->CR2 & SPI_CR2_TSER) != 0UL) && (tmp_state == HAL_SPI_STATE_READY))
2053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TSERF);
2055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, 0UL);
2056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->Reload.Requested = 0UL;
2057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
2058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
2059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
2060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
2070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
2072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
2075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
2076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
2077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
2078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
2079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
2080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
2082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
ARM GAS  /tmp/ccwjY1CM.s 			page 104


 3788              		.loc 1 2082 1
 3789              		.cfi_startproc
 3790              		@ args = 0, pretend = 0, frame = 24
 3791              		@ frame_needed = 1, uses_anonymous_args = 0
 3792 0000 80B5     		push	{r7, lr}
 3793              	.LCFI54:
 3794              		.cfi_def_cfa_offset 8
 3795              		.cfi_offset 7, -8
 3796              		.cfi_offset 14, -4
 3797 0002 86B0     		sub	sp, sp, #24
 3798              	.LCFI55:
 3799              		.cfi_def_cfa_offset 32
 3800 0004 00AF     		add	r7, sp, #0
 3801              	.LCFI56:
 3802              		.cfi_def_cfa_register 7
 3803 0006 F860     		str	r0, [r7, #12]
 3804 0008 B960     		str	r1, [r7, #8]
 3805 000a 1346     		mov	r3, r2
 3806 000c FB80     		strh	r3, [r7, #6]	@ movhi
2083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3807              		.loc 1 2083 21
 3808 000e 0023     		movs	r3, #0
 3809 0010 FB75     		strb	r3, [r7, #23]
2084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
2086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));
2087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Locked */
2089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 3810              		.loc 1 2089 3
 3811 0012 FB68     		ldr	r3, [r7, #12]
 3812 0014 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 3813 0018 012B     		cmp	r3, #1
 3814 001a 01D1     		bne	.L183
 3815              		.loc 1 2089 3 is_stmt 0 discriminator 1
 3816 001c 0223     		movs	r3, #2
 3817 001e 28E1     		b	.L184
 3818              	.L183:
 3819              		.loc 1 2089 3 discriminator 2
 3820 0020 FB68     		ldr	r3, [r7, #12]
 3821 0022 0122     		movs	r2, #1
 3822 0024 83F88020 		strb	r2, [r3, #128]
2090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 3823              		.loc 1 2091 11 is_stmt 1 discriminator 2
 3824 0028 FB68     		ldr	r3, [r7, #12]
 3825 002a 93F88130 		ldrb	r3, [r3, #129]
 3826 002e DBB2     		uxtb	r3, r3
 3827              		.loc 1 2091 6 discriminator 2
 3828 0030 012B     		cmp	r3, #1
 3829 0032 07D0     		beq	.L185
2092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 3830              		.loc 1 2093 15
 3831 0034 0223     		movs	r3, #2
 3832 0036 FB75     		strb	r3, [r7, #23]
2094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
ARM GAS  /tmp/ccwjY1CM.s 			page 105


 3833              		.loc 1 2094 5
 3834 0038 FB68     		ldr	r3, [r7, #12]
 3835 003a 0022     		movs	r2, #0
 3836 003c 83F88020 		strb	r2, [r3, #128]
2095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3837              		.loc 1 2095 12
 3838 0040 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3839 0042 16E1     		b	.L184
 3840              	.L185:
2096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
 3841              		.loc 1 2098 6
 3842 0044 BB68     		ldr	r3, [r7, #8]
 3843 0046 002B     		cmp	r3, #0
 3844 0048 02D0     		beq	.L186
 3845              		.loc 1 2098 23 discriminator 1
 3846 004a FB88     		ldrh	r3, [r7, #6]
 3847 004c 002B     		cmp	r3, #0
 3848 004e 07D1     		bne	.L187
 3849              	.L186:
2099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3850              		.loc 1 2100 15
 3851 0050 0123     		movs	r3, #1
 3852 0052 FB75     		strb	r3, [r7, #23]
2101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 3853              		.loc 1 2101 5
 3854 0054 FB68     		ldr	r3, [r7, #12]
 3855 0056 0022     		movs	r2, #0
 3856 0058 83F88020 		strb	r2, [r3, #128]
2102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3857              		.loc 1 2102 12
 3858 005c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3859 005e 08E1     		b	.L184
 3860              	.L187:
2103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
2106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 3861              		.loc 1 2106 21
 3862 0060 FB68     		ldr	r3, [r7, #12]
 3863 0062 0322     		movs	r2, #3
 3864 0064 83F88120 		strb	r2, [r3, #129]
2107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3865              		.loc 1 2107 21
 3866 0068 FB68     		ldr	r3, [r7, #12]
 3867 006a 0022     		movs	r2, #0
 3868 006c C3F88420 		str	r2, [r3, #132]
2108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 3869              		.loc 1 2108 21
 3870 0070 FB68     		ldr	r3, [r7, #12]
 3871 0072 BA68     		ldr	r2, [r7, #8]
 3872 0074 DA65     		str	r2, [r3, #92]
2109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 3873              		.loc 1 2109 21
 3874 0076 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 106


 3875 0078 FA88     		ldrh	r2, [r7, #6]	@ movhi
 3876 007a A3F86020 		strh	r2, [r3, #96]	@ movhi
2110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3877              		.loc 1 2110 21
 3878 007e FB68     		ldr	r3, [r7, #12]
 3879 0080 FA88     		ldrh	r2, [r7, #6]	@ movhi
 3880 0082 A3F86220 		strh	r2, [r3, #98]	@ movhi
2111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init field not used in handle to zero */
2113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = NULL;
 3881              		.loc 1 2113 21
 3882 0086 FB68     		ldr	r3, [r7, #12]
 3883 0088 0022     		movs	r2, #0
 3884 008a 5A66     		str	r2, [r3, #100]
2114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3885              		.loc 1 2114 21
 3886 008c FB68     		ldr	r3, [r7, #12]
 3887 008e 0022     		movs	r2, #0
 3888 0090 5A67     		str	r2, [r3, #116]
2115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 3889              		.loc 1 2115 21
 3890 0092 FB68     		ldr	r3, [r7, #12]
 3891 0094 0022     		movs	r2, #0
 3892 0096 1A67     		str	r2, [r3, #112]
2116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = (uint16_t)0UL;
 3893              		.loc 1 2116 21
 3894 0098 FB68     		ldr	r3, [r7, #12]
 3895 009a 0022     		movs	r2, #0
 3896 009c A3F86820 		strh	r2, [r3, #104]	@ movhi
2117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t)0UL;
 3897              		.loc 1 2117 21
 3898 00a0 FB68     		ldr	r3, [r7, #12]
 3899 00a2 0022     		movs	r2, #0
 3900 00a4 A3F86A20 		strh	r2, [r3, #106]	@ movhi
2118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
2120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 3901              		.loc 1 2120 17
 3902 00a8 FB68     		ldr	r3, [r7, #12]
 3903 00aa 9B68     		ldr	r3, [r3, #8]
 3904              		.loc 1 2120 6
 3905 00ac B3F5C02F 		cmp	r3, #393216
 3906 00b0 07D1     		bne	.L188
2121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 3907              		.loc 1 2122 5
 3908 00b2 FB68     		ldr	r3, [r7, #12]
 3909 00b4 1B68     		ldr	r3, [r3]
 3910 00b6 1A68     		ldr	r2, [r3]
 3911 00b8 FB68     		ldr	r3, [r7, #12]
 3912 00ba 1B68     		ldr	r3, [r3]
 3913 00bc 42F40062 		orr	r2, r2, #2048
 3914 00c0 1A60     		str	r2, [r3]
 3915              	.L188:
2123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Packing mode management is enabled by the DMA settings */
ARM GAS  /tmp/ccwjY1CM.s 			page 107


2126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.MemDataAlignment != DMA_MD
 3916              		.loc 1 2126 19
 3917 00c2 FB68     		ldr	r3, [r7, #12]
 3918 00c4 DB68     		ldr	r3, [r3, #12]
 3919              		.loc 1 2126 6
 3920 00c6 0F2B     		cmp	r3, #15
 3921 00c8 05D9     		bls	.L189
 3922              		.loc 1 2126 59 discriminator 1
 3923 00ca FB68     		ldr	r3, [r7, #12]
 3924 00cc 9B6F     		ldr	r3, [r3, #120]
 3925              		.loc 1 2126 73 discriminator 1
 3926 00ce 9B69     		ldr	r3, [r3, #24]
 3927              		.loc 1 2126 51 discriminator 1
 3928 00d0 B3F5804F 		cmp	r3, #16384
 3929 00d4 0FD1     		bne	.L190
 3930              	.L189:
2127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MD
 3931              		.loc 1 2127 19 discriminator 3
 3932 00d6 FB68     		ldr	r3, [r7, #12]
 3933 00d8 DB68     		ldr	r3, [r3, #12]
2126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MD
 3934              		.loc 1 2126 119 discriminator 3
 3935 00da 072B     		cmp	r3, #7
 3936 00dc 13D9     		bls	.L191
 3937              		.loc 1 2127 59
 3938 00de FB68     		ldr	r3, [r7, #12]
 3939 00e0 9B6F     		ldr	r3, [r3, #120]
 3940              		.loc 1 2127 73
 3941 00e2 9B69     		ldr	r3, [r3, #24]
 3942              		.loc 1 2127 50
 3943 00e4 B3F5005F 		cmp	r3, #8192
 3944 00e8 0DD0     		beq	.L191
2128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                      (hspi->hdmatx->Init.MemDataAlignment != DMA_MD
 3945              		.loc 1 2128 59 discriminator 1
 3946 00ea FB68     		ldr	r3, [r7, #12]
 3947 00ec 9B6F     		ldr	r3, [r3, #120]
 3948              		.loc 1 2128 73 discriminator 1
 3949 00ee 9B69     		ldr	r3, [r3, #24]
2127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MD
 3950              		.loc 1 2127 119 discriminator 1
 3951 00f0 B3F5804F 		cmp	r3, #16384
 3952 00f4 07D0     		beq	.L191
 3953              	.L190:
2129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Restriction the DMA data received is not allowed in this mode */
2131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3954              		.loc 1 2131 15
 3955 00f6 0123     		movs	r3, #1
 3956 00f8 FB75     		strb	r3, [r7, #23]
2132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 3957              		.loc 1 2132 5
 3958 00fa FB68     		ldr	r3, [r7, #12]
 3959 00fc 0022     		movs	r2, #0
 3960 00fe 83F88020 		strb	r2, [r3, #128]
2133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3961              		.loc 1 2133 12
 3962 0102 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  /tmp/ccwjY1CM.s 			page 108


 3963 0104 B5E0     		b	.L184
 3964              	.L191:
2134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Adjust XferCount according to DMA alignment / Data size */
2137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 3965              		.loc 1 2137 17
 3966 0106 FB68     		ldr	r3, [r7, #12]
 3967 0108 DB68     		ldr	r3, [r3, #12]
 3968              		.loc 1 2137 6
 3969 010a 072B     		cmp	r3, #7
 3970 010c 20D8     		bhi	.L192
2138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 3971              		.loc 1 2139 13
 3972 010e FB68     		ldr	r3, [r7, #12]
 3973 0110 9B6F     		ldr	r3, [r3, #120]
 3974              		.loc 1 2139 27
 3975 0112 9B69     		ldr	r3, [r3, #24]
 3976              		.loc 1 2139 8
 3977 0114 B3F5005F 		cmp	r3, #8192
 3978 0118 09D1     		bne	.L193
2140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 3979              		.loc 1 2141 32
 3980 011a FB68     		ldr	r3, [r7, #12]
 3981 011c B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 3982 0120 9BB2     		uxth	r3, r3
 3983              		.loc 1 2141 46
 3984 0122 0133     		adds	r3, r3, #1
 3985              		.loc 1 2141 64
 3986 0124 5B10     		asrs	r3, r3, #1
 3987              		.loc 1 2141 25
 3988 0126 9AB2     		uxth	r2, r3
 3989 0128 FB68     		ldr	r3, [r7, #12]
 3990 012a A3F86220 		strh	r2, [r3, #98]	@ movhi
 3991              	.L193:
2142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 3992              		.loc 1 2143 13
 3993 012e FB68     		ldr	r3, [r7, #12]
 3994 0130 9B6F     		ldr	r3, [r3, #120]
 3995              		.loc 1 2143 27
 3996 0132 9B69     		ldr	r3, [r3, #24]
 3997              		.loc 1 2143 8
 3998 0134 B3F5804F 		cmp	r3, #16384
 3999 0138 1ED1     		bne	.L194
2144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 3UL) >> 2UL;
 4000              		.loc 1 2145 32
 4001 013a FB68     		ldr	r3, [r7, #12]
 4002 013c B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 4003 0140 9BB2     		uxth	r3, r3
 4004              		.loc 1 2145 46
 4005 0142 0333     		adds	r3, r3, #3
 4006              		.loc 1 2145 64
 4007 0144 9B10     		asrs	r3, r3, #2
ARM GAS  /tmp/ccwjY1CM.s 			page 109


 4008              		.loc 1 2145 25
 4009 0146 9AB2     		uxth	r2, r3
 4010 0148 FB68     		ldr	r3, [r7, #12]
 4011 014a A3F86220 		strh	r2, [r3, #98]	@ movhi
 4012 014e 13E0     		b	.L194
 4013              	.L192:
2146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
 4014              		.loc 1 2148 22
 4015 0150 FB68     		ldr	r3, [r7, #12]
 4016 0152 DB68     		ldr	r3, [r3, #12]
 4017              		.loc 1 2148 11
 4018 0154 0F2B     		cmp	r3, #15
 4019 0156 0FD8     		bhi	.L194
2149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 4020              		.loc 1 2150 13
 4021 0158 FB68     		ldr	r3, [r7, #12]
 4022 015a 9B6F     		ldr	r3, [r3, #120]
 4023              		.loc 1 2150 27
 4024 015c 9B69     		ldr	r3, [r3, #24]
 4025              		.loc 1 2150 8
 4026 015e B3F5804F 		cmp	r3, #16384
 4027 0162 09D1     		bne	.L194
2151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 4028              		.loc 1 2152 32
 4029 0164 FB68     		ldr	r3, [r7, #12]
 4030 0166 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 4031 016a 9BB2     		uxth	r3, r3
 4032              		.loc 1 2152 46
 4033 016c 0133     		adds	r3, r3, #1
 4034              		.loc 1 2152 64
 4035 016e 5B10     		asrs	r3, r3, #1
 4036              		.loc 1 2152 25
 4037 0170 9AB2     		uxth	r2, r3
 4038 0172 FB68     		ldr	r3, [r7, #12]
 4039 0174 A3F86220 		strh	r2, [r3, #98]	@ movhi
 4040              	.L194:
2153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Adjustment done */
2158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
2161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 4041              		.loc 1 2161 7
 4042 0178 FB68     		ldr	r3, [r7, #12]
 4043 017a 9B6F     		ldr	r3, [r3, #120]
 4044              		.loc 1 2161 38
 4045 017c 3F4A     		ldr	r2, .L199
 4046 017e 1A64     		str	r2, [r3, #64]
2162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
ARM GAS  /tmp/ccwjY1CM.s 			page 110


2164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 4047              		.loc 1 2164 7
 4048 0180 FB68     		ldr	r3, [r7, #12]
 4049 0182 9B6F     		ldr	r3, [r3, #120]
 4050              		.loc 1 2164 34
 4051 0184 3E4A     		ldr	r2, .L199+4
 4052 0186 DA63     		str	r2, [r3, #60]
2165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA error callback */
2167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 4053              		.loc 1 2167 7
 4054 0188 FB68     		ldr	r3, [r7, #12]
 4055 018a 9B6F     		ldr	r3, [r3, #120]
 4056              		.loc 1 2167 35
 4057 018c 3D4A     		ldr	r2, .L199+8
 4058 018e DA64     		str	r2, [r3, #76]
2168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
 4059              		.loc 1 2170 7
 4060 0190 FB68     		ldr	r3, [r7, #12]
 4061 0192 9B6F     		ldr	r3, [r3, #120]
 4062              		.loc 1 2170 35
 4063 0194 0022     		movs	r2, #0
 4064 0196 1A65     		str	r2, [r3, #80]
2171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Clear TXDMAEN bit*/
2173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 4065              		.loc 1 2173 3
 4066 0198 FB68     		ldr	r3, [r7, #12]
 4067 019a 1B68     		ldr	r3, [r3]
 4068 019c 9A68     		ldr	r2, [r3, #8]
 4069 019e FB68     		ldr	r3, [r7, #12]
 4070 01a0 1B68     		ldr	r3, [r3]
 4071 01a2 22F40042 		bic	r2, r2, #32768
 4072 01a6 9A60     		str	r2, [r3, #8]
2174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
2176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
 4073              		.loc 1 2176 17
 4074 01a8 FB68     		ldr	r3, [r7, #12]
 4075 01aa 986F     		ldr	r0, [r3, #120]
 4076              		.loc 1 2176 62
 4077 01ac FB68     		ldr	r3, [r7, #12]
 4078 01ae DB6D     		ldr	r3, [r3, #92]
 4079              		.loc 1 2176 17
 4080 01b0 1946     		mov	r1, r3
 4081              		.loc 1 2176 91
 4082 01b2 FB68     		ldr	r3, [r7, #12]
 4083 01b4 1B68     		ldr	r3, [r3]
 4084              		.loc 1 2176 86
 4085 01b6 2033     		adds	r3, r3, #32
 4086              		.loc 1 2176 17
 4087 01b8 1A46     		mov	r2, r3
 4088              		.loc 1 2176 113
 4089 01ba FB68     		ldr	r3, [r7, #12]
 4090 01bc B3F86230 		ldrh	r3, [r3, #98]	@ movhi
ARM GAS  /tmp/ccwjY1CM.s 			page 111


 4091 01c0 9BB2     		uxth	r3, r3
 4092              		.loc 1 2176 17
 4093 01c2 FFF7FEFF 		bl	HAL_DMA_Start_IT
 4094 01c6 0346     		mov	r3, r0
 4095              		.loc 1 2176 6
 4096 01c8 002B     		cmp	r3, #0
 4097 01ca 0FD0     		beq	.L195
2177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update SPI error code */
2179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 4098              		.loc 1 2179 5
 4099 01cc FB68     		ldr	r3, [r7, #12]
 4100 01ce D3F88430 		ldr	r3, [r3, #132]
 4101 01d2 43F01002 		orr	r2, r3, #16
 4102 01d6 FB68     		ldr	r3, [r7, #12]
 4103 01d8 C3F88420 		str	r2, [r3, #132]
2180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 4104              		.loc 1 2180 15
 4105 01dc 0123     		movs	r3, #1
 4106 01de FB75     		strb	r3, [r7, #23]
2181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4107              		.loc 1 2181 17
 4108 01e0 FB68     		ldr	r3, [r7, #12]
 4109 01e2 0122     		movs	r2, #1
 4110 01e4 83F88120 		strb	r2, [r3, #129]
2182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 4111              		.loc 1 2182 12
 4112 01e8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4113 01ea 42E0     		b	.L184
 4114              	.L195:
2183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
2186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
 4115              		.loc 1 2186 11
 4116 01ec FB68     		ldr	r3, [r7, #12]
 4117 01ee 9B6F     		ldr	r3, [r3, #120]
 4118              		.loc 1 2186 25
 4119 01f0 DB69     		ldr	r3, [r3, #28]
 4120              		.loc 1 2186 6
 4121 01f2 B3F5807F 		cmp	r3, #256
 4122 01f6 08D1     		bne	.L196
2187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, 0UL);
 4123              		.loc 1 2188 5
 4124 01f8 FB68     		ldr	r3, [r7, #12]
 4125 01fa 1B68     		ldr	r3, [r3]
 4126 01fc 5968     		ldr	r1, [r3, #4]
 4127 01fe FB68     		ldr	r3, [r7, #12]
 4128 0200 1A68     		ldr	r2, [r3]
 4129 0202 214B     		ldr	r3, .L199+12
 4130 0204 0B40     		ands	r3, r3, r1
 4131 0206 5360     		str	r3, [r2, #4]
 4132 0208 09E0     		b	.L197
 4133              	.L196:
2189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
ARM GAS  /tmp/ccwjY1CM.s 			page 112


2191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 4134              		.loc 1 2192 5
 4135 020a FB68     		ldr	r3, [r7, #12]
 4136 020c 1B68     		ldr	r3, [r3]
 4137 020e 5A68     		ldr	r2, [r3, #4]
 4138 0210 1D4B     		ldr	r3, .L199+12
 4139 0212 1340     		ands	r3, r3, r2
 4140 0214 F988     		ldrh	r1, [r7, #6]
 4141 0216 FA68     		ldr	r2, [r7, #12]
 4142 0218 1268     		ldr	r2, [r2]
 4143 021a 0B43     		orrs	r3, r3, r1
 4144 021c 5360     		str	r3, [r2, #4]
 4145              	.L197:
2193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable Tx DMA Request */
2196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 4146              		.loc 1 2196 3
 4147 021e FB68     		ldr	r3, [r7, #12]
 4148 0220 1B68     		ldr	r3, [r3]
 4149 0222 9A68     		ldr	r2, [r3, #8]
 4150 0224 FB68     		ldr	r3, [r7, #12]
 4151 0226 1B68     		ldr	r3, [r3]
 4152 0228 42F40042 		orr	r2, r2, #32768
 4153 022c 9A60     		str	r2, [r3, #8]
2197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_UDR | SPI_IT_FRE | SPI_IT_MODF));
 4154              		.loc 1 2199 3
 4155 022e FB68     		ldr	r3, [r7, #12]
 4156 0230 1B68     		ldr	r3, [r3]
 4157 0232 1A69     		ldr	r2, [r3, #16]
 4158 0234 FB68     		ldr	r3, [r7, #12]
 4159 0236 1B68     		ldr	r3, [r3]
 4160 0238 42F44872 		orr	r2, r2, #800
 4161 023c 1A61     		str	r2, [r3, #16]
2200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
2202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
 4162              		.loc 1 2202 3
 4163 023e FB68     		ldr	r3, [r7, #12]
 4164 0240 1B68     		ldr	r3, [r3]
 4165 0242 1A68     		ldr	r2, [r3]
 4166 0244 FB68     		ldr	r3, [r7, #12]
 4167 0246 1B68     		ldr	r3, [r3]
 4168 0248 42F00102 		orr	r2, r2, #1
 4169 024c 1A60     		str	r2, [r3]
2203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
 4170              		.loc 1 2204 17
 4171 024e FB68     		ldr	r3, [r7, #12]
 4172 0250 5B68     		ldr	r3, [r3, #4]
 4173              		.loc 1 2204 6
 4174 0252 B3F5800F 		cmp	r3, #4194304
 4175 0256 07D1     		bne	.L198
2205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccwjY1CM.s 			page 113


2206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
2207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 4176              		.loc 1 2207 5
 4177 0258 FB68     		ldr	r3, [r7, #12]
 4178 025a 1B68     		ldr	r3, [r3]
 4179 025c 1A68     		ldr	r2, [r3]
 4180 025e FB68     		ldr	r3, [r7, #12]
 4181 0260 1B68     		ldr	r3, [r3]
 4182 0262 42F40072 		orr	r2, r2, #512
 4183 0266 1A60     		str	r2, [r3]
 4184              	.L198:
2208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
2211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 4185              		.loc 1 2211 3
 4186 0268 FB68     		ldr	r3, [r7, #12]
 4187 026a 0022     		movs	r2, #0
 4188 026c 83F88020 		strb	r2, [r3, #128]
2212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 4189              		.loc 1 2212 10
 4190 0270 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4191              	.L184:
2213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 4192              		.loc 1 2213 1
 4193 0272 1846     		mov	r0, r3
 4194 0274 1837     		adds	r7, r7, #24
 4195              	.LCFI57:
 4196              		.cfi_def_cfa_offset 8
 4197 0276 BD46     		mov	sp, r7
 4198              	.LCFI58:
 4199              		.cfi_def_cfa_register 13
 4200              		@ sp needed
 4201 0278 80BD     		pop	{r7, pc}
 4202              	.L200:
 4203 027a 00BF     		.align	2
 4204              	.L199:
 4205 027c 00000000 		.word	SPI_DMAHalfTransmitCplt
 4206 0280 00000000 		.word	SPI_DMATransmitCplt
 4207 0284 00000000 		.word	SPI_DMAError
 4208 0288 0000FFFF 		.word	-65536
 4209              		.cfi_endproc
 4210              	.LFE341:
 4212              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 4213              		.align	1
 4214              		.global	HAL_SPI_Receive_DMA
 4215              		.syntax unified
 4216              		.thumb
 4217              		.thumb_func
 4218              		.fpu fpv5-d16
 4220              	HAL_SPI_Receive_DMA:
 4221              	.LFB342:
2214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
2217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
2218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
ARM GAS  /tmp/ccwjY1CM.s 			page 114


2219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
2220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
2221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
2222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
2223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
2225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 4222              		.loc 1 2225 1
 4223              		.cfi_startproc
 4224              		@ args = 0, pretend = 0, frame = 24
 4225              		@ frame_needed = 1, uses_anonymous_args = 0
 4226 0000 80B5     		push	{r7, lr}
 4227              	.LCFI59:
 4228              		.cfi_def_cfa_offset 8
 4229              		.cfi_offset 7, -8
 4230              		.cfi_offset 14, -4
 4231 0002 86B0     		sub	sp, sp, #24
 4232              	.LCFI60:
 4233              		.cfi_def_cfa_offset 32
 4234 0004 00AF     		add	r7, sp, #0
 4235              	.LCFI61:
 4236              		.cfi_def_cfa_register 7
 4237 0006 F860     		str	r0, [r7, #12]
 4238 0008 B960     		str	r1, [r7, #8]
 4239 000a 1346     		mov	r3, r2
 4240 000c FB80     		strh	r3, [r7, #6]	@ movhi
2226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 4241              		.loc 1 2226 21
 4242 000e 0023     		movs	r3, #0
 4243 0010 FB75     		strb	r3, [r7, #23]
2227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
2229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_RXONLY(hspi->Init.Direction));
2230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 4244              		.loc 1 2231 18
 4245 0012 FB68     		ldr	r3, [r7, #12]
 4246 0014 9B68     		ldr	r3, [r3, #8]
 4247              		.loc 1 2231 6
 4248 0016 002B     		cmp	r3, #0
 4249 0018 10D1     		bne	.L202
 4250              		.loc 1 2231 68 discriminator 1
 4251 001a FB68     		ldr	r3, [r7, #12]
 4252 001c 5B68     		ldr	r3, [r3, #4]
 4253              		.loc 1 2231 54 discriminator 1
 4254 001e B3F5800F 		cmp	r3, #4194304
 4255 0022 0BD1     		bne	.L202
2232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 4256              		.loc 1 2233 17
 4257 0024 FB68     		ldr	r3, [r7, #12]
 4258 0026 0422     		movs	r2, #4
 4259 0028 83F88120 		strb	r2, [r3, #129]
2234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
2235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
 4260              		.loc 1 2235 12
 4261 002c FB88     		ldrh	r3, [r7, #6]
ARM GAS  /tmp/ccwjY1CM.s 			page 115


 4262 002e BA68     		ldr	r2, [r7, #8]
 4263 0030 B968     		ldr	r1, [r7, #8]
 4264 0032 F868     		ldr	r0, [r7, #12]
 4265 0034 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 4266 0038 0346     		mov	r3, r0
 4267 003a 2CE1     		b	.L203
 4268              	.L202:
2236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Locked */
2239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 4269              		.loc 1 2239 3
 4270 003c FB68     		ldr	r3, [r7, #12]
 4271 003e 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 4272 0042 012B     		cmp	r3, #1
 4273 0044 01D1     		bne	.L204
 4274              		.loc 1 2239 3 is_stmt 0 discriminator 1
 4275 0046 0223     		movs	r3, #2
 4276 0048 25E1     		b	.L203
 4277              	.L204:
 4278              		.loc 1 2239 3 discriminator 2
 4279 004a FB68     		ldr	r3, [r7, #12]
 4280 004c 0122     		movs	r2, #1
 4281 004e 83F88020 		strb	r2, [r3, #128]
2240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 4282              		.loc 1 2241 11 is_stmt 1 discriminator 2
 4283 0052 FB68     		ldr	r3, [r7, #12]
 4284 0054 93F88130 		ldrb	r3, [r3, #129]
 4285 0058 DBB2     		uxtb	r3, r3
 4286              		.loc 1 2241 6 discriminator 2
 4287 005a 012B     		cmp	r3, #1
 4288 005c 07D0     		beq	.L205
2242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 4289              		.loc 1 2243 15
 4290 005e 0223     		movs	r3, #2
 4291 0060 FB75     		strb	r3, [r7, #23]
2244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 4292              		.loc 1 2244 5
 4293 0062 FB68     		ldr	r3, [r7, #12]
 4294 0064 0022     		movs	r2, #0
 4295 0066 83F88020 		strb	r2, [r3, #128]
2245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 4296              		.loc 1 2245 12
 4297 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4298 006c 13E1     		b	.L203
 4299              	.L205:
2246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
 4300              		.loc 1 2248 6
 4301 006e BB68     		ldr	r3, [r7, #8]
 4302 0070 002B     		cmp	r3, #0
 4303 0072 02D0     		beq	.L206
 4304              		.loc 1 2248 23 discriminator 1
 4305 0074 FB88     		ldrh	r3, [r7, #6]
ARM GAS  /tmp/ccwjY1CM.s 			page 116


 4306 0076 002B     		cmp	r3, #0
 4307 0078 07D1     		bne	.L207
 4308              	.L206:
2249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 4309              		.loc 1 2250 15
 4310 007a 0123     		movs	r3, #1
 4311 007c FB75     		strb	r3, [r7, #23]
2251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 4312              		.loc 1 2251 5
 4313 007e FB68     		ldr	r3, [r7, #12]
 4314 0080 0022     		movs	r2, #0
 4315 0082 83F88020 		strb	r2, [r3, #128]
2252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 4316              		.loc 1 2252 12
 4317 0086 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4318 0088 05E1     		b	.L203
 4319              	.L207:
2253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
2256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 4320              		.loc 1 2256 21
 4321 008a FB68     		ldr	r3, [r7, #12]
 4322 008c 0422     		movs	r2, #4
 4323 008e 83F88120 		strb	r2, [r3, #129]
2257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 4324              		.loc 1 2257 21
 4325 0092 FB68     		ldr	r3, [r7, #12]
 4326 0094 0022     		movs	r2, #0
 4327 0096 C3F88420 		str	r2, [r3, #132]
2258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 4328              		.loc 1 2258 21
 4329 009a FB68     		ldr	r3, [r7, #12]
 4330 009c BA68     		ldr	r2, [r7, #8]
 4331 009e 5A66     		str	r2, [r3, #100]
2259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 4332              		.loc 1 2259 21
 4333 00a0 FB68     		ldr	r3, [r7, #12]
 4334 00a2 FA88     		ldrh	r2, [r7, #6]	@ movhi
 4335 00a4 A3F86820 		strh	r2, [r3, #104]	@ movhi
2260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 4336              		.loc 1 2260 21
 4337 00a8 FB68     		ldr	r3, [r7, #12]
 4338 00aa FA88     		ldrh	r2, [r7, #6]	@ movhi
 4339 00ac A3F86A20 		strh	r2, [r3, #106]	@ movhi
2261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*Init field not used in handle to zero */
2263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 4340              		.loc 1 2263 21
 4341 00b0 FB68     		ldr	r3, [r7, #12]
 4342 00b2 0022     		movs	r2, #0
 4343 00b4 1A67     		str	r2, [r3, #112]
2264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 4344              		.loc 1 2264 21
 4345 00b6 FB68     		ldr	r3, [r7, #12]
 4346 00b8 0022     		movs	r2, #0
ARM GAS  /tmp/ccwjY1CM.s 			page 117


 4347 00ba 5A67     		str	r2, [r3, #116]
2265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = (uint16_t) 0UL;
 4348              		.loc 1 2265 21
 4349 00bc FB68     		ldr	r3, [r7, #12]
 4350 00be 0022     		movs	r2, #0
 4351 00c0 A3F86020 		strh	r2, [r3, #96]	@ movhi
2266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
 4352              		.loc 1 2266 21
 4353 00c4 FB68     		ldr	r3, [r7, #12]
 4354 00c6 0022     		movs	r2, #0
 4355 00c8 A3F86220 		strh	r2, [r3, #98]	@ movhi
2267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
2269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 4356              		.loc 1 2269 17
 4357 00cc FB68     		ldr	r3, [r7, #12]
 4358 00ce 9B68     		ldr	r3, [r3, #8]
 4359              		.loc 1 2269 6
 4360 00d0 B3F5C02F 		cmp	r3, #393216
 4361 00d4 07D1     		bne	.L208
2270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 4362              		.loc 1 2271 5
 4363 00d6 FB68     		ldr	r3, [r7, #12]
 4364 00d8 1B68     		ldr	r3, [r3]
 4365 00da 1A68     		ldr	r2, [r3]
 4366 00dc FB68     		ldr	r3, [r7, #12]
 4367 00de 1B68     		ldr	r3, [r3]
 4368 00e0 22F40062 		bic	r2, r2, #2048
 4369 00e4 1A60     		str	r2, [r3]
 4370              	.L208:
2272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Packing mode management is enabled by the DMA settings */
2275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 4371              		.loc 1 2275 19
 4372 00e6 FB68     		ldr	r3, [r7, #12]
 4373 00e8 DB68     		ldr	r3, [r3, #12]
 4374              		.loc 1 2275 6
 4375 00ea 0F2B     		cmp	r3, #15
 4376 00ec 05D9     		bls	.L209
 4377              		.loc 1 2275 59 discriminator 1
 4378 00ee FB68     		ldr	r3, [r7, #12]
 4379 00f0 DB6F     		ldr	r3, [r3, #124]
 4380              		.loc 1 2275 73 discriminator 1
 4381 00f2 9B69     		ldr	r3, [r3, #24]
 4382              		.loc 1 2275 51 discriminator 1
 4383 00f4 B3F5804F 		cmp	r3, #16384
 4384 00f8 0FD1     		bne	.L210
 4385              	.L209:
2276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 4386              		.loc 1 2276 19 discriminator 3
 4387 00fa FB68     		ldr	r3, [r7, #12]
 4388 00fc DB68     		ldr	r3, [r3, #12]
2275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 4389              		.loc 1 2275 119 discriminator 3
 4390 00fe 072B     		cmp	r3, #7
ARM GAS  /tmp/ccwjY1CM.s 			page 118


 4391 0100 13D9     		bls	.L211
 4392              		.loc 1 2276 59
 4393 0102 FB68     		ldr	r3, [r7, #12]
 4394 0104 DB6F     		ldr	r3, [r3, #124]
 4395              		.loc 1 2276 73
 4396 0106 9B69     		ldr	r3, [r3, #24]
 4397              		.loc 1 2276 50
 4398 0108 B3F5005F 		cmp	r3, #8192
 4399 010c 0DD0     		beq	.L211
2277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                      (hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 4400              		.loc 1 2277 59 discriminator 1
 4401 010e FB68     		ldr	r3, [r7, #12]
 4402 0110 DB6F     		ldr	r3, [r3, #124]
 4403              		.loc 1 2277 73 discriminator 1
 4404 0112 9B69     		ldr	r3, [r3, #24]
2276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 4405              		.loc 1 2276 119 discriminator 1
 4406 0114 B3F5804F 		cmp	r3, #16384
 4407 0118 07D0     		beq	.L211
 4408              	.L210:
2278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Restriction the DMA data received is not allowed in this mode */
2280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 4409              		.loc 1 2280 15
 4410 011a 0123     		movs	r3, #1
 4411 011c FB75     		strb	r3, [r7, #23]
2281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 4412              		.loc 1 2281 5
 4413 011e FB68     		ldr	r3, [r7, #12]
 4414 0120 0022     		movs	r2, #0
 4415 0122 83F88020 		strb	r2, [r3, #128]
2282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 4416              		.loc 1 2282 12
 4417 0126 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4418 0128 B5E0     		b	.L203
 4419              	.L211:
2283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Clear RXDMAEN bit */
2286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_RXDMAEN);
 4420              		.loc 1 2286 3
 4421 012a FB68     		ldr	r3, [r7, #12]
 4422 012c 1B68     		ldr	r3, [r3]
 4423 012e 9A68     		ldr	r2, [r3, #8]
 4424 0130 FB68     		ldr	r3, [r7, #12]
 4425 0132 1B68     		ldr	r3, [r3]
 4426 0134 22F48042 		bic	r2, r2, #16384
 4427 0138 9A60     		str	r2, [r3, #8]
2287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Adjust XferCount according to DMA alignment / Data size */
2289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 4428              		.loc 1 2289 17
 4429 013a FB68     		ldr	r3, [r7, #12]
 4430 013c DB68     		ldr	r3, [r3, #12]
 4431              		.loc 1 2289 6
 4432 013e 072B     		cmp	r3, #7
 4433 0140 20D8     		bhi	.L212
ARM GAS  /tmp/ccwjY1CM.s 			page 119


2290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 4434              		.loc 1 2291 13
 4435 0142 FB68     		ldr	r3, [r7, #12]
 4436 0144 DB6F     		ldr	r3, [r3, #124]
 4437              		.loc 1 2291 27
 4438 0146 9B69     		ldr	r3, [r3, #24]
 4439              		.loc 1 2291 8
 4440 0148 B3F5005F 		cmp	r3, #8192
 4441 014c 09D1     		bne	.L213
2292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 1UL) >> 1UL;
 4442              		.loc 1 2293 32
 4443 014e FB68     		ldr	r3, [r7, #12]
 4444 0150 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 4445 0154 9BB2     		uxth	r3, r3
 4446              		.loc 1 2293 46
 4447 0156 0133     		adds	r3, r3, #1
 4448              		.loc 1 2293 64
 4449 0158 5B10     		asrs	r3, r3, #1
 4450              		.loc 1 2293 25
 4451 015a 9AB2     		uxth	r2, r3
 4452 015c FB68     		ldr	r3, [r7, #12]
 4453 015e A3F86A20 		strh	r2, [r3, #106]	@ movhi
 4454              	.L213:
2294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 4455              		.loc 1 2295 13
 4456 0162 FB68     		ldr	r3, [r7, #12]
 4457 0164 DB6F     		ldr	r3, [r3, #124]
 4458              		.loc 1 2295 27
 4459 0166 9B69     		ldr	r3, [r3, #24]
 4460              		.loc 1 2295 8
 4461 0168 B3F5804F 		cmp	r3, #16384
 4462 016c 1ED1     		bne	.L214
2296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 3UL) >> 2UL;
 4463              		.loc 1 2297 32
 4464 016e FB68     		ldr	r3, [r7, #12]
 4465 0170 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 4466 0174 9BB2     		uxth	r3, r3
 4467              		.loc 1 2297 46
 4468 0176 0333     		adds	r3, r3, #3
 4469              		.loc 1 2297 64
 4470 0178 9B10     		asrs	r3, r3, #2
 4471              		.loc 1 2297 25
 4472 017a 9AB2     		uxth	r2, r3
 4473 017c FB68     		ldr	r3, [r7, #12]
 4474 017e A3F86A20 		strh	r2, [r3, #106]	@ movhi
 4475 0182 13E0     		b	.L214
 4476              	.L212:
2298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
 4477              		.loc 1 2300 22
 4478 0184 FB68     		ldr	r3, [r7, #12]
 4479 0186 DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 120


 4480              		.loc 1 2300 11
 4481 0188 0F2B     		cmp	r3, #15
 4482 018a 0FD8     		bhi	.L214
2301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 4483              		.loc 1 2302 13
 4484 018c FB68     		ldr	r3, [r7, #12]
 4485 018e DB6F     		ldr	r3, [r3, #124]
 4486              		.loc 1 2302 27
 4487 0190 9B69     		ldr	r3, [r3, #24]
 4488              		.loc 1 2302 8
 4489 0192 B3F5804F 		cmp	r3, #16384
 4490 0196 09D1     		bne	.L214
2303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 1UL) >> 1UL;
 4491              		.loc 1 2304 32
 4492 0198 FB68     		ldr	r3, [r7, #12]
 4493 019a B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 4494 019e 9BB2     		uxth	r3, r3
 4495              		.loc 1 2304 46
 4496 01a0 0133     		adds	r3, r3, #1
 4497              		.loc 1 2304 64
 4498 01a2 5B10     		asrs	r3, r3, #1
 4499              		.loc 1 2304 25
 4500 01a4 9AB2     		uxth	r2, r3
 4501 01a6 FB68     		ldr	r3, [r7, #12]
 4502 01a8 A3F86A20 		strh	r2, [r3, #106]	@ movhi
 4503              	.L214:
2305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Adjustment done */
2310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
2313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 4504              		.loc 1 2313 7
 4505 01ac FB68     		ldr	r3, [r7, #12]
 4506 01ae DB6F     		ldr	r3, [r3, #124]
 4507              		.loc 1 2313 38
 4508 01b0 3B4A     		ldr	r2, .L219
 4509 01b2 1A64     		str	r2, [r3, #64]
2314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
2316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
 4510              		.loc 1 2316 7
 4511 01b4 FB68     		ldr	r3, [r7, #12]
 4512 01b6 DB6F     		ldr	r3, [r3, #124]
 4513              		.loc 1 2316 34
 4514 01b8 3A4A     		ldr	r2, .L219+4
 4515 01ba DA63     		str	r2, [r3, #60]
2317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA error callback */
2319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 4516              		.loc 1 2319 7
 4517 01bc FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 121


 4518 01be DB6F     		ldr	r3, [r3, #124]
 4519              		.loc 1 2319 35
 4520 01c0 394A     		ldr	r2, .L219+8
 4521 01c2 DA64     		str	r2, [r3, #76]
2320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 4522              		.loc 1 2322 7
 4523 01c4 FB68     		ldr	r3, [r7, #12]
 4524 01c6 DB6F     		ldr	r3, [r3, #124]
 4525              		.loc 1 2322 35
 4526 01c8 0022     		movs	r2, #0
 4527 01ca 1A65     		str	r2, [r3, #80]
2323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->RXDR, (uint32_t)hspi->pRx
 4528              		.loc 1 2325 17
 4529 01cc FB68     		ldr	r3, [r7, #12]
 4530 01ce D86F     		ldr	r0, [r3, #124]
 4531              		.loc 1 2325 63
 4532 01d0 FB68     		ldr	r3, [r7, #12]
 4533 01d2 1B68     		ldr	r3, [r3]
 4534              		.loc 1 2325 58
 4535 01d4 3033     		adds	r3, r3, #48
 4536              		.loc 1 2325 17
 4537 01d6 1946     		mov	r1, r3
 4538              		.loc 1 2325 95
 4539 01d8 FB68     		ldr	r3, [r7, #12]
 4540 01da 5B6E     		ldr	r3, [r3, #100]
 4541              		.loc 1 2325 17
 4542 01dc 1A46     		mov	r2, r3
 4543              		.loc 1 2325 113
 4544 01de FB68     		ldr	r3, [r7, #12]
 4545 01e0 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 4546 01e4 9BB2     		uxth	r3, r3
 4547              		.loc 1 2325 17
 4548 01e6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 4549 01ea 0346     		mov	r3, r0
 4550              		.loc 1 2325 6
 4551 01ec 002B     		cmp	r3, #0
 4552 01ee 0FD0     		beq	.L215
2326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update SPI error code */
2328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 4553              		.loc 1 2328 5
 4554 01f0 FB68     		ldr	r3, [r7, #12]
 4555 01f2 D3F88430 		ldr	r3, [r3, #132]
 4556 01f6 43F01002 		orr	r2, r3, #16
 4557 01fa FB68     		ldr	r3, [r7, #12]
 4558 01fc C3F88420 		str	r2, [r3, #132]
2329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 4559              		.loc 1 2329 15
 4560 0200 0123     		movs	r3, #1
 4561 0202 FB75     		strb	r3, [r7, #23]
2330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4562              		.loc 1 2330 17
 4563 0204 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 122


 4564 0206 0122     		movs	r2, #1
 4565 0208 83F88120 		strb	r2, [r3, #129]
2331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 4566              		.loc 1 2331 12
 4567 020c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4568 020e 42E0     		b	.L203
 4569              	.L215:
2332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
2335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmarx->Init.Mode == DMA_CIRCULAR)
 4570              		.loc 1 2335 11
 4571 0210 FB68     		ldr	r3, [r7, #12]
 4572 0212 DB6F     		ldr	r3, [r3, #124]
 4573              		.loc 1 2335 25
 4574 0214 DB69     		ldr	r3, [r3, #28]
 4575              		.loc 1 2335 6
 4576 0216 B3F5807F 		cmp	r3, #256
 4577 021a 08D1     		bne	.L216
2336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, 0UL);
 4578              		.loc 1 2337 5
 4579 021c FB68     		ldr	r3, [r7, #12]
 4580 021e 1B68     		ldr	r3, [r3]
 4581 0220 5968     		ldr	r1, [r3, #4]
 4582 0222 FB68     		ldr	r3, [r7, #12]
 4583 0224 1A68     		ldr	r2, [r3]
 4584 0226 214B     		ldr	r3, .L219+12
 4585 0228 0B40     		ands	r3, r3, r1
 4586 022a 5360     		str	r3, [r2, #4]
 4587 022c 09E0     		b	.L217
 4588              	.L216:
2338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 4589              		.loc 1 2341 5
 4590 022e FB68     		ldr	r3, [r7, #12]
 4591 0230 1B68     		ldr	r3, [r3]
 4592 0232 5A68     		ldr	r2, [r3, #4]
 4593 0234 1D4B     		ldr	r3, .L219+12
 4594 0236 1340     		ands	r3, r3, r2
 4595 0238 F988     		ldrh	r1, [r7, #6]
 4596 023a FA68     		ldr	r2, [r7, #12]
 4597 023c 1268     		ldr	r2, [r2]
 4598 023e 0B43     		orrs	r3, r3, r1
 4599 0240 5360     		str	r3, [r2, #4]
 4600              	.L217:
2342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable Rx DMA Request */
2345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CFG1, SPI_CFG1_RXDMAEN);
 4601              		.loc 1 2345 3
 4602 0242 FB68     		ldr	r3, [r7, #12]
 4603 0244 1B68     		ldr	r3, [r3]
 4604 0246 9A68     		ldr	r2, [r3, #8]
 4605 0248 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 123


 4606 024a 1B68     		ldr	r3, [r3]
 4607 024c 42F48042 		orr	r2, r2, #16384
 4608 0250 9A60     		str	r2, [r3, #8]
2346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_OVR | SPI_IT_FRE | SPI_IT_MODF));
 4609              		.loc 1 2348 3
 4610 0252 FB68     		ldr	r3, [r7, #12]
 4611 0254 1B68     		ldr	r3, [r3]
 4612 0256 1A69     		ldr	r2, [r3, #16]
 4613 0258 FB68     		ldr	r3, [r7, #12]
 4614 025a 1B68     		ldr	r3, [r3]
 4615 025c 42F45072 		orr	r2, r2, #832
 4616 0260 1A61     		str	r2, [r3, #16]
2349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
2351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
 4617              		.loc 1 2351 3
 4618 0262 FB68     		ldr	r3, [r7, #12]
 4619 0264 1B68     		ldr	r3, [r3]
 4620 0266 1A68     		ldr	r2, [r3]
 4621 0268 FB68     		ldr	r3, [r7, #12]
 4622 026a 1B68     		ldr	r3, [r3]
 4623 026c 42F00102 		orr	r2, r2, #1
 4624 0270 1A60     		str	r2, [r3]
2352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
 4625              		.loc 1 2353 17
 4626 0272 FB68     		ldr	r3, [r7, #12]
 4627 0274 5B68     		ldr	r3, [r3, #4]
 4628              		.loc 1 2353 6
 4629 0276 B3F5800F 		cmp	r3, #4194304
 4630 027a 07D1     		bne	.L218
2354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
2356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 4631              		.loc 1 2356 5
 4632 027c FB68     		ldr	r3, [r7, #12]
 4633 027e 1B68     		ldr	r3, [r3]
 4634 0280 1A68     		ldr	r2, [r3]
 4635 0282 FB68     		ldr	r3, [r7, #12]
 4636 0284 1B68     		ldr	r3, [r3]
 4637 0286 42F40072 		orr	r2, r2, #512
 4638 028a 1A60     		str	r2, [r3]
 4639              	.L218:
2357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
2360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 4640              		.loc 1 2360 3
 4641 028c FB68     		ldr	r3, [r7, #12]
 4642 028e 0022     		movs	r2, #0
 4643 0290 83F88020 		strb	r2, [r3, #128]
2361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 4644              		.loc 1 2361 10
 4645 0294 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4646              	.L203:
ARM GAS  /tmp/ccwjY1CM.s 			page 124


2362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 4647              		.loc 1 2362 1
 4648 0296 1846     		mov	r0, r3
 4649 0298 1837     		adds	r7, r7, #24
 4650              	.LCFI62:
 4651              		.cfi_def_cfa_offset 8
 4652 029a BD46     		mov	sp, r7
 4653              	.LCFI63:
 4654              		.cfi_def_cfa_register 13
 4655              		@ sp needed
 4656 029c 80BD     		pop	{r7, pc}
 4657              	.L220:
 4658 029e 00BF     		.align	2
 4659              	.L219:
 4660 02a0 00000000 		.word	SPI_DMAHalfReceiveCplt
 4661 02a4 00000000 		.word	SPI_DMAReceiveCplt
 4662 02a8 00000000 		.word	SPI_DMAError
 4663 02ac 0000FFFF 		.word	-65536
 4664              		.cfi_endproc
 4665              	.LFE342:
 4667              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 4668              		.align	1
 4669              		.global	HAL_SPI_TransmitReceive_DMA
 4670              		.syntax unified
 4671              		.thumb
 4672              		.thumb_func
 4673              		.fpu fpv5-d16
 4675              	HAL_SPI_TransmitReceive_DMA:
 4676              	.LFB343:
2363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
2366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
2367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
2368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
2369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
2370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be sent
2371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
2372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
2373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
2375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                               uint16_t Size)
2376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 4677              		.loc 1 2376 1
 4678              		.cfi_startproc
 4679              		@ args = 0, pretend = 0, frame = 24
 4680              		@ frame_needed = 1, uses_anonymous_args = 0
 4681 0000 80B5     		push	{r7, lr}
 4682              	.LCFI64:
 4683              		.cfi_def_cfa_offset 8
 4684              		.cfi_offset 7, -8
 4685              		.cfi_offset 14, -4
 4686 0002 86B0     		sub	sp, sp, #24
 4687              	.LCFI65:
 4688              		.cfi_def_cfa_offset 32
 4689 0004 00AF     		add	r7, sp, #0
 4690              	.LCFI66:
ARM GAS  /tmp/ccwjY1CM.s 			page 125


 4691              		.cfi_def_cfa_register 7
 4692 0006 F860     		str	r0, [r7, #12]
 4693 0008 B960     		str	r1, [r7, #8]
 4694 000a 7A60     		str	r2, [r7, #4]
 4695 000c 7B80     		strh	r3, [r7, #2]	@ movhi
2377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
2378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 4696              		.loc 1 2378 21
 4697 000e 0023     		movs	r3, #0
 4698 0010 FB75     		strb	r3, [r7, #23]
2379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t             tmp_mode;
2381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
2383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
2384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process locked */
2386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 4699              		.loc 1 2386 3
 4700 0012 FB68     		ldr	r3, [r7, #12]
 4701 0014 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 4702 0018 012B     		cmp	r3, #1
 4703 001a 01D1     		bne	.L222
 4704              		.loc 1 2386 3 is_stmt 0 discriminator 1
 4705 001c 0223     		movs	r3, #2
 4706 001e ACE1     		b	.L223
 4707              	.L222:
 4708              		.loc 1 2386 3 discriminator 2
 4709 0020 FB68     		ldr	r3, [r7, #12]
 4710 0022 0122     		movs	r2, #1
 4711 0024 83F88020 		strb	r2, [r3, #128]
2387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init temporary variables */
2389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_state   = hspi->State;
 4712              		.loc 1 2389 15 is_stmt 1 discriminator 2
 4713 0028 FB68     		ldr	r3, [r7, #12]
 4714 002a 93F88130 		ldrb	r3, [r3, #129]
 4715 002e BB75     		strb	r3, [r7, #22]
2390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_mode    = hspi->Init.Mode;
 4716              		.loc 1 2390 15 discriminator 2
 4717 0030 FB68     		ldr	r3, [r7, #12]
 4718 0032 5B68     		ldr	r3, [r3, #4]
 4719 0034 3B61     		str	r3, [r7, #16]
2391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (!(((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 4720              		.loc 1 2392 6 discriminator 2
 4721 0036 3B69     		ldr	r3, [r7, #16]
 4722 0038 B3F5800F 		cmp	r3, #4194304
 4723 003c 06D1     		bne	.L224
 4724              		.loc 1 2392 54 discriminator 2
 4725 003e FB68     		ldr	r3, [r7, #12]
 4726 0040 9B68     		ldr	r3, [r3, #8]
 4727              		.loc 1 2392 40 discriminator 2
 4728 0042 002B     		cmp	r3, #0
 4729 0044 02D1     		bne	.L224
 4730              		.loc 1 2392 90 discriminator 4
 4731 0046 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  /tmp/ccwjY1CM.s 			page 126


 4732 0048 042B     		cmp	r3, #4
 4733 004a 0AD0     		beq	.L225
 4734              	.L224:
 4735              		.loc 1 2392 7 discriminator 5
 4736 004c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4737 004e 012B     		cmp	r3, #1
 4738 0050 07D0     		beq	.L225
2393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 4739              		.loc 1 2394 15
 4740 0052 0223     		movs	r3, #2
 4741 0054 FB75     		strb	r3, [r7, #23]
2395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 4742              		.loc 1 2395 5
 4743 0056 FB68     		ldr	r3, [r7, #12]
 4744 0058 0022     		movs	r2, #0
 4745 005a 83F88020 		strb	r2, [r3, #128]
2396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 4746              		.loc 1 2396 12
 4747 005e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4748 0060 8BE1     		b	.L223
 4749              	.L225:
2397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0UL))
 4750              		.loc 1 2399 6
 4751 0062 BB68     		ldr	r3, [r7, #8]
 4752 0064 002B     		cmp	r3, #0
 4753 0066 05D0     		beq	.L226
 4754              		.loc 1 2399 25 discriminator 1
 4755 0068 7B68     		ldr	r3, [r7, #4]
 4756 006a 002B     		cmp	r3, #0
 4757 006c 02D0     		beq	.L226
 4758              		.loc 1 2399 46 discriminator 2
 4759 006e 7B88     		ldrh	r3, [r7, #2]
 4760 0070 002B     		cmp	r3, #0
 4761 0072 07D1     		bne	.L227
 4762              	.L226:
2400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 4763              		.loc 1 2401 15
 4764 0074 0123     		movs	r3, #1
 4765 0076 FB75     		strb	r3, [r7, #23]
2402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 4766              		.loc 1 2402 5
 4767 0078 FB68     		ldr	r3, [r7, #12]
 4768 007a 0022     		movs	r2, #0
 4769 007c 83F88020 		strb	r2, [r3, #128]
2403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 4770              		.loc 1 2403 12
 4771 0080 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4772 0082 7AE1     		b	.L223
 4773              	.L227:
2404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
2407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
ARM GAS  /tmp/ccwjY1CM.s 			page 127


 4774              		.loc 1 2407 11
 4775 0084 FB68     		ldr	r3, [r7, #12]
 4776 0086 93F88130 		ldrb	r3, [r3, #129]
 4777 008a DBB2     		uxtb	r3, r3
 4778              		.loc 1 2407 6
 4779 008c 042B     		cmp	r3, #4
 4780 008e 03D0     		beq	.L228
2408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 4781              		.loc 1 2409 17
 4782 0090 FB68     		ldr	r3, [r7, #12]
 4783 0092 0522     		movs	r2, #5
 4784 0094 83F88120 		strb	r2, [r3, #129]
 4785              	.L228:
2410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
2413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 4786              		.loc 1 2413 21
 4787 0098 FB68     		ldr	r3, [r7, #12]
 4788 009a 0022     		movs	r2, #0
 4789 009c C3F88420 		str	r2, [r3, #132]
2414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 4790              		.loc 1 2414 21
 4791 00a0 FB68     		ldr	r3, [r7, #12]
 4792 00a2 BA68     		ldr	r2, [r7, #8]
 4793 00a4 DA65     		str	r2, [r3, #92]
2415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 4794              		.loc 1 2415 21
 4795 00a6 FB68     		ldr	r3, [r7, #12]
 4796 00a8 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4797 00aa A3F86020 		strh	r2, [r3, #96]	@ movhi
2416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 4798              		.loc 1 2416 21
 4799 00ae FB68     		ldr	r3, [r7, #12]
 4800 00b0 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4801 00b2 A3F86220 		strh	r2, [r3, #98]	@ movhi
2417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 4802              		.loc 1 2417 21
 4803 00b6 FB68     		ldr	r3, [r7, #12]
 4804 00b8 7A68     		ldr	r2, [r7, #4]
 4805 00ba 5A66     		str	r2, [r3, #100]
2418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 4806              		.loc 1 2418 21
 4807 00bc FB68     		ldr	r3, [r7, #12]
 4808 00be 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4809 00c0 A3F86820 		strh	r2, [r3, #104]	@ movhi
2419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 4810              		.loc 1 2419 21
 4811 00c4 FB68     		ldr	r3, [r7, #12]
 4812 00c6 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4813 00c8 A3F86A20 		strh	r2, [r3, #106]	@ movhi
2420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init field not used in handle to zero */
2422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 4814              		.loc 1 2422 21
 4815 00cc FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 128


 4816 00ce 0022     		movs	r2, #0
 4817 00d0 1A67     		str	r2, [r3, #112]
2423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 4818              		.loc 1 2423 21
 4819 00d2 FB68     		ldr	r3, [r7, #12]
 4820 00d4 0022     		movs	r2, #0
 4821 00d6 5A67     		str	r2, [r3, #116]
2424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Reset the Tx/Rx DMA bits */
2426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 4822              		.loc 1 2426 3
 4823 00d8 FB68     		ldr	r3, [r7, #12]
 4824 00da 1B68     		ldr	r3, [r3]
 4825 00dc 9A68     		ldr	r2, [r3, #8]
 4826 00de FB68     		ldr	r3, [r7, #12]
 4827 00e0 1B68     		ldr	r3, [r3]
 4828 00e2 22F44042 		bic	r2, r2, #49152
 4829 00e6 9A60     		str	r2, [r3, #8]
2427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Packing mode management is enabled by the DMA settings */
2429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 4830              		.loc 1 2429 19
 4831 00e8 FB68     		ldr	r3, [r7, #12]
 4832 00ea DB68     		ldr	r3, [r3, #12]
 4833              		.loc 1 2429 6
 4834 00ec 0F2B     		cmp	r3, #15
 4835 00ee 05D9     		bls	.L229
 4836              		.loc 1 2429 59 discriminator 1
 4837 00f0 FB68     		ldr	r3, [r7, #12]
 4838 00f2 DB6F     		ldr	r3, [r3, #124]
 4839              		.loc 1 2429 73 discriminator 1
 4840 00f4 9B69     		ldr	r3, [r3, #24]
 4841              		.loc 1 2429 51 discriminator 1
 4842 00f6 B3F5804F 		cmp	r3, #16384
 4843 00fa 0FD1     		bne	.L230
 4844              	.L229:
2430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 4845              		.loc 1 2430 19 discriminator 3
 4846 00fc FB68     		ldr	r3, [r7, #12]
 4847 00fe DB68     		ldr	r3, [r3, #12]
2429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 4848              		.loc 1 2429 119 discriminator 3
 4849 0100 072B     		cmp	r3, #7
 4850 0102 13D9     		bls	.L231
 4851              		.loc 1 2430 59
 4852 0104 FB68     		ldr	r3, [r7, #12]
 4853 0106 DB6F     		ldr	r3, [r3, #124]
 4854              		.loc 1 2430 73
 4855 0108 9B69     		ldr	r3, [r3, #24]
 4856              		.loc 1 2430 50
 4857 010a B3F5005F 		cmp	r3, #8192
 4858 010e 0DD0     		beq	.L231
2431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                      (hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 4859              		.loc 1 2431 59 discriminator 1
 4860 0110 FB68     		ldr	r3, [r7, #12]
 4861 0112 DB6F     		ldr	r3, [r3, #124]
 4862              		.loc 1 2431 73 discriminator 1
ARM GAS  /tmp/ccwjY1CM.s 			page 129


 4863 0114 9B69     		ldr	r3, [r3, #24]
2430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 4864              		.loc 1 2430 119 discriminator 1
 4865 0116 B3F5804F 		cmp	r3, #16384
 4866 011a 07D0     		beq	.L231
 4867              	.L230:
2432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Restriction the DMA data received is not allowed in this mode */
2434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 4868              		.loc 1 2434 15
 4869 011c 0123     		movs	r3, #1
 4870 011e FB75     		strb	r3, [r7, #23]
2435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Process Unlocked */
2436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 4871              		.loc 1 2436 5
 4872 0120 FB68     		ldr	r3, [r7, #12]
 4873 0122 0022     		movs	r2, #0
 4874 0124 83F88020 		strb	r2, [r3, #128]
2437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 4875              		.loc 1 2437 12
 4876 0128 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4877 012a 26E1     		b	.L223
 4878              	.L231:
2438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Adjust XferCount according to DMA alignment / Data size */
2441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 4879              		.loc 1 2441 17
 4880 012c FB68     		ldr	r3, [r7, #12]
 4881 012e DB68     		ldr	r3, [r3, #12]
 4882              		.loc 1 2441 6
 4883 0130 072B     		cmp	r3, #7
 4884 0132 40D8     		bhi	.L232
2442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 4885              		.loc 1 2443 13
 4886 0134 FB68     		ldr	r3, [r7, #12]
 4887 0136 9B6F     		ldr	r3, [r3, #120]
 4888              		.loc 1 2443 27
 4889 0138 9B69     		ldr	r3, [r3, #24]
 4890              		.loc 1 2443 8
 4891 013a B3F5005F 		cmp	r3, #8192
 4892 013e 09D1     		bne	.L233
2444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 4893              		.loc 1 2445 32
 4894 0140 FB68     		ldr	r3, [r7, #12]
 4895 0142 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 4896 0146 9BB2     		uxth	r3, r3
 4897              		.loc 1 2445 46
 4898 0148 0133     		adds	r3, r3, #1
 4899              		.loc 1 2445 64
 4900 014a 5B10     		asrs	r3, r3, #1
 4901              		.loc 1 2445 25
 4902 014c 9AB2     		uxth	r2, r3
 4903 014e FB68     		ldr	r3, [r7, #12]
 4904 0150 A3F86220 		strh	r2, [r3, #98]	@ movhi
ARM GAS  /tmp/ccwjY1CM.s 			page 130


 4905              	.L233:
2446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 4906              		.loc 1 2447 13
 4907 0154 FB68     		ldr	r3, [r7, #12]
 4908 0156 9B6F     		ldr	r3, [r3, #120]
 4909              		.loc 1 2447 27
 4910 0158 9B69     		ldr	r3, [r3, #24]
 4911              		.loc 1 2447 8
 4912 015a B3F5804F 		cmp	r3, #16384
 4913 015e 09D1     		bne	.L234
2448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 3UL) >> 2UL;
 4914              		.loc 1 2449 32
 4915 0160 FB68     		ldr	r3, [r7, #12]
 4916 0162 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 4917 0166 9BB2     		uxth	r3, r3
 4918              		.loc 1 2449 46
 4919 0168 0333     		adds	r3, r3, #3
 4920              		.loc 1 2449 64
 4921 016a 9B10     		asrs	r3, r3, #2
 4922              		.loc 1 2449 25
 4923 016c 9AB2     		uxth	r2, r3
 4924 016e FB68     		ldr	r3, [r7, #12]
 4925 0170 A3F86220 		strh	r2, [r3, #98]	@ movhi
 4926              	.L234:
2450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 4927              		.loc 1 2451 13
 4928 0174 FB68     		ldr	r3, [r7, #12]
 4929 0176 DB6F     		ldr	r3, [r3, #124]
 4930              		.loc 1 2451 27
 4931 0178 9B69     		ldr	r3, [r3, #24]
 4932              		.loc 1 2451 8
 4933 017a B3F5005F 		cmp	r3, #8192
 4934 017e 09D1     		bne	.L235
2452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 1UL) >> 1UL;
 4935              		.loc 1 2453 32
 4936 0180 FB68     		ldr	r3, [r7, #12]
 4937 0182 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 4938 0186 9BB2     		uxth	r3, r3
 4939              		.loc 1 2453 46
 4940 0188 0133     		adds	r3, r3, #1
 4941              		.loc 1 2453 64
 4942 018a 5B10     		asrs	r3, r3, #1
 4943              		.loc 1 2453 25
 4944 018c 9AB2     		uxth	r2, r3
 4945 018e FB68     		ldr	r3, [r7, #12]
 4946 0190 A3F86A20 		strh	r2, [r3, #106]	@ movhi
 4947              	.L235:
2454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 4948              		.loc 1 2455 13
 4949 0194 FB68     		ldr	r3, [r7, #12]
 4950 0196 DB6F     		ldr	r3, [r3, #124]
 4951              		.loc 1 2455 27
ARM GAS  /tmp/ccwjY1CM.s 			page 131


 4952 0198 9B69     		ldr	r3, [r3, #24]
 4953              		.loc 1 2455 8
 4954 019a B3F5804F 		cmp	r3, #16384
 4955 019e 2ED1     		bne	.L236
2456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 3UL) >> 2UL;
 4956              		.loc 1 2457 32
 4957 01a0 FB68     		ldr	r3, [r7, #12]
 4958 01a2 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 4959 01a6 9BB2     		uxth	r3, r3
 4960              		.loc 1 2457 46
 4961 01a8 0333     		adds	r3, r3, #3
 4962              		.loc 1 2457 64
 4963 01aa 9B10     		asrs	r3, r3, #2
 4964              		.loc 1 2457 25
 4965 01ac 9AB2     		uxth	r2, r3
 4966 01ae FB68     		ldr	r3, [r7, #12]
 4967 01b0 A3F86A20 		strh	r2, [r3, #106]	@ movhi
 4968 01b4 23E0     		b	.L236
 4969              	.L232:
2458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
 4970              		.loc 1 2460 22
 4971 01b6 FB68     		ldr	r3, [r7, #12]
 4972 01b8 DB68     		ldr	r3, [r3, #12]
 4973              		.loc 1 2460 11
 4974 01ba 0F2B     		cmp	r3, #15
 4975 01bc 1FD8     		bhi	.L236
2461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 4976              		.loc 1 2462 13
 4977 01be FB68     		ldr	r3, [r7, #12]
 4978 01c0 9B6F     		ldr	r3, [r3, #120]
 4979              		.loc 1 2462 27
 4980 01c2 9B69     		ldr	r3, [r3, #24]
 4981              		.loc 1 2462 8
 4982 01c4 B3F5804F 		cmp	r3, #16384
 4983 01c8 09D1     		bne	.L237
2463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 4984              		.loc 1 2464 32
 4985 01ca FB68     		ldr	r3, [r7, #12]
 4986 01cc B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 4987 01d0 9BB2     		uxth	r3, r3
 4988              		.loc 1 2464 46
 4989 01d2 0133     		adds	r3, r3, #1
 4990              		.loc 1 2464 64
 4991 01d4 5B10     		asrs	r3, r3, #1
 4992              		.loc 1 2464 25
 4993 01d6 9AB2     		uxth	r2, r3
 4994 01d8 FB68     		ldr	r3, [r7, #12]
 4995 01da A3F86220 		strh	r2, [r3, #98]	@ movhi
 4996              	.L237:
2465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 4997              		.loc 1 2466 13
ARM GAS  /tmp/ccwjY1CM.s 			page 132


 4998 01de FB68     		ldr	r3, [r7, #12]
 4999 01e0 DB6F     		ldr	r3, [r3, #124]
 5000              		.loc 1 2466 27
 5001 01e2 9B69     		ldr	r3, [r3, #24]
 5002              		.loc 1 2466 8
 5003 01e4 B3F5804F 		cmp	r3, #16384
 5004 01e8 09D1     		bne	.L236
2467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 1UL) >> 1UL;
 5005              		.loc 1 2468 32
 5006 01ea FB68     		ldr	r3, [r7, #12]
 5007 01ec B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 5008 01f0 9BB2     		uxth	r3, r3
 5009              		.loc 1 2468 46
 5010 01f2 0133     		adds	r3, r3, #1
 5011              		.loc 1 2468 64
 5012 01f4 5B10     		asrs	r3, r3, #1
 5013              		.loc 1 2468 25
 5014 01f6 9AB2     		uxth	r2, r3
 5015 01f8 FB68     		ldr	r3, [r7, #12]
 5016 01fa A3F86A20 		strh	r2, [r3, #106]	@ movhi
 5017              	.L236:
2469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Adjustment done */
2474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
2477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 5018              		.loc 1 2477 11
 5019 01fe FB68     		ldr	r3, [r7, #12]
 5020 0200 93F88130 		ldrb	r3, [r3, #129]
 5021 0204 DBB2     		uxtb	r3, r3
 5022              		.loc 1 2477 6
 5023 0206 042B     		cmp	r3, #4
 5024 0208 08D1     		bne	.L238
2478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
2480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 5025              		.loc 1 2480 9
 5026 020a FB68     		ldr	r3, [r7, #12]
 5027 020c DB6F     		ldr	r3, [r3, #124]
 5028              		.loc 1 2480 40
 5029 020e 5D4A     		ldr	r2, .L245
 5030 0210 1A64     		str	r2, [r3, #64]
2481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 5031              		.loc 1 2481 9
 5032 0212 FB68     		ldr	r3, [r7, #12]
 5033 0214 DB6F     		ldr	r3, [r3, #124]
 5034              		.loc 1 2481 40
 5035 0216 5C4A     		ldr	r2, .L245+4
 5036 0218 DA63     		str	r2, [r3, #60]
 5037 021a 07E0     		b	.L239
 5038              	.L238:
2482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccwjY1CM.s 			page 133


2483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
2486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
 5039              		.loc 1 2486 9
 5040 021c FB68     		ldr	r3, [r7, #12]
 5041 021e DB6F     		ldr	r3, [r3, #124]
 5042              		.loc 1 2486 40
 5043 0220 5A4A     		ldr	r2, .L245+8
 5044 0222 1A64     		str	r2, [r3, #64]
2487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 5045              		.loc 1 2487 9
 5046 0224 FB68     		ldr	r3, [r7, #12]
 5047 0226 DB6F     		ldr	r3, [r3, #124]
 5048              		.loc 1 2487 40
 5049 0228 594A     		ldr	r2, .L245+12
 5050 022a DA63     		str	r2, [r3, #60]
 5051              	.L239:
2488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA error callback */
2491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 5052              		.loc 1 2491 7
 5053 022c FB68     		ldr	r3, [r7, #12]
 5054 022e DB6F     		ldr	r3, [r3, #124]
 5055              		.loc 1 2491 35
 5056 0230 584A     		ldr	r2, .L245+16
 5057 0232 DA64     		str	r2, [r3, #76]
2492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA AbortCallback */
2494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 5058              		.loc 1 2494 7
 5059 0234 FB68     		ldr	r3, [r7, #12]
 5060 0236 DB6F     		ldr	r3, [r3, #124]
 5061              		.loc 1 2494 35
 5062 0238 0022     		movs	r2, #0
 5063 023a 1A65     		str	r2, [r3, #80]
2495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->RXDR, (uint32_t)hspi->pRx
 5064              		.loc 1 2497 17
 5065 023c FB68     		ldr	r3, [r7, #12]
 5066 023e D86F     		ldr	r0, [r3, #124]
 5067              		.loc 1 2497 63
 5068 0240 FB68     		ldr	r3, [r7, #12]
 5069 0242 1B68     		ldr	r3, [r3]
 5070              		.loc 1 2497 58
 5071 0244 3033     		adds	r3, r3, #48
 5072              		.loc 1 2497 17
 5073 0246 1946     		mov	r1, r3
 5074              		.loc 1 2497 95
 5075 0248 FB68     		ldr	r3, [r7, #12]
 5076 024a 5B6E     		ldr	r3, [r3, #100]
 5077              		.loc 1 2497 17
 5078 024c 1A46     		mov	r2, r3
 5079              		.loc 1 2497 113
 5080 024e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 134


 5081 0250 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 5082 0254 9BB2     		uxth	r3, r3
 5083              		.loc 1 2497 17
 5084 0256 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5085 025a 0346     		mov	r3, r0
 5086              		.loc 1 2497 6
 5087 025c 002B     		cmp	r3, #0
 5088 025e 0FD0     		beq	.L240
2498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update SPI error code */
2500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 5089              		.loc 1 2500 5
 5090 0260 FB68     		ldr	r3, [r7, #12]
 5091 0262 D3F88430 		ldr	r3, [r3, #132]
 5092 0266 43F01002 		orr	r2, r3, #16
 5093 026a FB68     		ldr	r3, [r7, #12]
 5094 026c C3F88420 		str	r2, [r3, #132]
2501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 5095              		.loc 1 2501 15
 5096 0270 0123     		movs	r3, #1
 5097 0272 FB75     		strb	r3, [r7, #23]
2502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5098              		.loc 1 2502 17
 5099 0274 FB68     		ldr	r3, [r7, #12]
 5100 0276 0122     		movs	r2, #1
 5101 0278 83F88120 		strb	r2, [r3, #129]
2503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 5102              		.loc 1 2503 12
 5103 027c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5104 027e 7CE0     		b	.L223
 5105              	.L240:
2504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable Rx DMA Request */
2507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CFG1, SPI_CFG1_RXDMAEN);
 5106              		.loc 1 2507 3
 5107 0280 FB68     		ldr	r3, [r7, #12]
 5108 0282 1B68     		ldr	r3, [r3]
 5109 0284 9A68     		ldr	r2, [r3, #8]
 5110 0286 FB68     		ldr	r3, [r7, #12]
 5111 0288 1B68     		ldr	r3, [r3]
 5112 028a 42F48042 		orr	r2, r2, #16384
 5113 028e 9A60     		str	r2, [r3, #8]
2508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
2510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   is performed in DMA reception complete callback  */
2511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
 5114              		.loc 1 2511 7
 5115 0290 FB68     		ldr	r3, [r7, #12]
 5116 0292 9B6F     		ldr	r3, [r3, #120]
 5117              		.loc 1 2511 38
 5118 0294 0022     		movs	r2, #0
 5119 0296 1A64     		str	r2, [r3, #64]
2512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 5120              		.loc 1 2512 7
 5121 0298 FB68     		ldr	r3, [r7, #12]
 5122 029a 9B6F     		ldr	r3, [r3, #120]
ARM GAS  /tmp/ccwjY1CM.s 			page 135


 5123              		.loc 1 2512 38
 5124 029c 0022     		movs	r2, #0
 5125 029e DA63     		str	r2, [r3, #60]
2513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 5126              		.loc 1 2513 7
 5127 02a0 FB68     		ldr	r3, [r7, #12]
 5128 02a2 9B6F     		ldr	r3, [r3, #120]
 5129              		.loc 1 2513 38
 5130 02a4 0022     		movs	r2, #0
 5131 02a6 DA64     		str	r2, [r3, #76]
2514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 5132              		.loc 1 2514 7
 5133 02a8 FB68     		ldr	r3, [r7, #12]
 5134 02aa 9B6F     		ldr	r3, [r3, #120]
 5135              		.loc 1 2514 38
 5136 02ac 0022     		movs	r2, #0
 5137 02ae 1A65     		str	r2, [r3, #80]
2515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
2517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
 5138              		.loc 1 2517 17
 5139 02b0 FB68     		ldr	r3, [r7, #12]
 5140 02b2 986F     		ldr	r0, [r3, #120]
 5141              		.loc 1 2517 62
 5142 02b4 FB68     		ldr	r3, [r7, #12]
 5143 02b6 DB6D     		ldr	r3, [r3, #92]
 5144              		.loc 1 2517 17
 5145 02b8 1946     		mov	r1, r3
 5146              		.loc 1 2517 91
 5147 02ba FB68     		ldr	r3, [r7, #12]
 5148 02bc 1B68     		ldr	r3, [r3]
 5149              		.loc 1 2517 86
 5150 02be 2033     		adds	r3, r3, #32
 5151              		.loc 1 2517 17
 5152 02c0 1A46     		mov	r2, r3
 5153              		.loc 1 2517 113
 5154 02c2 FB68     		ldr	r3, [r7, #12]
 5155 02c4 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 5156 02c8 9BB2     		uxth	r3, r3
 5157              		.loc 1 2517 17
 5158 02ca FFF7FEFF 		bl	HAL_DMA_Start_IT
 5159 02ce 0346     		mov	r3, r0
 5160              		.loc 1 2517 6
 5161 02d0 002B     		cmp	r3, #0
 5162 02d2 0FD0     		beq	.L241
2518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update SPI error code */
2520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 5163              		.loc 1 2520 5
 5164 02d4 FB68     		ldr	r3, [r7, #12]
 5165 02d6 D3F88430 		ldr	r3, [r3, #132]
 5166 02da 43F01002 		orr	r2, r3, #16
 5167 02de FB68     		ldr	r3, [r7, #12]
 5168 02e0 C3F88420 		str	r2, [r3, #132]
2521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 5169              		.loc 1 2521 15
 5170 02e4 0123     		movs	r3, #1
ARM GAS  /tmp/ccwjY1CM.s 			page 136


 5171 02e6 FB75     		strb	r3, [r7, #23]
2522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5172              		.loc 1 2522 17
 5173 02e8 FB68     		ldr	r3, [r7, #12]
 5174 02ea 0122     		movs	r2, #1
 5175 02ec 83F88120 		strb	r2, [r3, #129]
2523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 5176              		.loc 1 2523 12
 5177 02f0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5178 02f2 42E0     		b	.L223
 5179              	.L241:
2524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
 5180              		.loc 1 2526 11
 5181 02f4 FB68     		ldr	r3, [r7, #12]
 5182 02f6 9B6F     		ldr	r3, [r3, #120]
 5183              		.loc 1 2526 25
 5184 02f8 DB69     		ldr	r3, [r3, #28]
 5185              		.loc 1 2526 6
 5186 02fa B3F5807F 		cmp	r3, #256
 5187 02fe 08D1     		bne	.L242
2527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, 0UL);
 5188              		.loc 1 2528 5
 5189 0300 FB68     		ldr	r3, [r7, #12]
 5190 0302 1B68     		ldr	r3, [r3]
 5191 0304 5968     		ldr	r1, [r3, #4]
 5192 0306 FB68     		ldr	r3, [r7, #12]
 5193 0308 1A68     		ldr	r2, [r3]
 5194 030a 234B     		ldr	r3, .L245+20
 5195 030c 0B40     		ands	r3, r3, r1
 5196 030e 5360     		str	r3, [r2, #4]
 5197 0310 09E0     		b	.L243
 5198              	.L242:
2529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 5199              		.loc 1 2532 5
 5200 0312 FB68     		ldr	r3, [r7, #12]
 5201 0314 1B68     		ldr	r3, [r3]
 5202 0316 5A68     		ldr	r2, [r3, #4]
 5203 0318 1F4B     		ldr	r3, .L245+20
 5204 031a 1340     		ands	r3, r3, r2
 5205 031c 7988     		ldrh	r1, [r7, #2]
 5206 031e FA68     		ldr	r2, [r7, #12]
 5207 0320 1268     		ldr	r2, [r2]
 5208 0322 0B43     		orrs	r3, r3, r1
 5209 0324 5360     		str	r3, [r2, #4]
 5210              	.L243:
2533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable Tx DMA Request */
2536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 5211              		.loc 1 2536 3
 5212 0326 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccwjY1CM.s 			page 137


 5213 0328 1B68     		ldr	r3, [r3]
 5214 032a 9A68     		ldr	r2, [r3, #8]
 5215 032c FB68     		ldr	r3, [r7, #12]
 5216 032e 1B68     		ldr	r3, [r3]
 5217 0330 42F40042 		orr	r2, r2, #32768
 5218 0334 9A60     		str	r2, [r3, #8]
2537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_OVR | SPI_IT_UDR | SPI_IT_FRE | SPI_IT_MODF));
 5219              		.loc 1 2539 3
 5220 0336 FB68     		ldr	r3, [r7, #12]
 5221 0338 1B68     		ldr	r3, [r3]
 5222 033a 1A69     		ldr	r2, [r3, #16]
 5223 033c FB68     		ldr	r3, [r7, #12]
 5224 033e 1B68     		ldr	r3, [r3]
 5225 0340 42F45872 		orr	r2, r2, #864
 5226 0344 1A61     		str	r2, [r3, #16]
2540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
2542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
 5227              		.loc 1 2542 3
 5228 0346 FB68     		ldr	r3, [r7, #12]
 5229 0348 1B68     		ldr	r3, [r3]
 5230 034a 1A68     		ldr	r2, [r3]
 5231 034c FB68     		ldr	r3, [r7, #12]
 5232 034e 1B68     		ldr	r3, [r3]
 5233 0350 42F00102 		orr	r2, r2, #1
 5234 0354 1A60     		str	r2, [r3]
2543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
 5235              		.loc 1 2544 17
 5236 0356 FB68     		ldr	r3, [r7, #12]
 5237 0358 5B68     		ldr	r3, [r3, #4]
 5238              		.loc 1 2544 6
 5239 035a B3F5800F 		cmp	r3, #4194304
 5240 035e 07D1     		bne	.L244
2545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
2547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 5241              		.loc 1 2547 5
 5242 0360 FB68     		ldr	r3, [r7, #12]
 5243 0362 1B68     		ldr	r3, [r3]
 5244 0364 1A68     		ldr	r2, [r3]
 5245 0366 FB68     		ldr	r3, [r7, #12]
 5246 0368 1B68     		ldr	r3, [r3]
 5247 036a 42F40072 		orr	r2, r2, #512
 5248 036e 1A60     		str	r2, [r3]
 5249              	.L244:
2548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
2551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 5250              		.loc 1 2551 3
 5251 0370 FB68     		ldr	r3, [r7, #12]
 5252 0372 0022     		movs	r2, #0
 5253 0374 83F88020 		strb	r2, [r3, #128]
2552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
ARM GAS  /tmp/ccwjY1CM.s 			page 138


 5254              		.loc 1 2552 10
 5255 0378 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5256              	.L223:
2553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 5257              		.loc 1 2553 1
 5258 037a 1846     		mov	r0, r3
 5259 037c 1837     		adds	r7, r7, #24
 5260              	.LCFI67:
 5261              		.cfi_def_cfa_offset 8
 5262 037e BD46     		mov	sp, r7
 5263              	.LCFI68:
 5264              		.cfi_def_cfa_register 13
 5265              		@ sp needed
 5266 0380 80BD     		pop	{r7, pc}
 5267              	.L246:
 5268 0382 00BF     		.align	2
 5269              	.L245:
 5270 0384 00000000 		.word	SPI_DMAHalfReceiveCplt
 5271 0388 00000000 		.word	SPI_DMAReceiveCplt
 5272 038c 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 5273 0390 00000000 		.word	SPI_DMATransmitReceiveCplt
 5274 0394 00000000 		.word	SPI_DMAError
 5275 0398 0000FFFF 		.word	-65536
 5276              		.cfi_endproc
 5277              	.LFE343:
 5279              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 5280              		.align	1
 5281              		.global	HAL_SPI_Abort
 5282              		.syntax unified
 5283              		.thumb
 5284              		.thumb_func
 5285              		.fpu fpv5-d16
 5287              	HAL_SPI_Abort:
 5288              	.LFB344:
2554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
2557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi SPI handle.
2558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure performs following operations :
2561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Disable SPI Interrupts (depending of transfer direction)
2562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Disable the DMA transfer in the peripheral register (if enabled)
2563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Set handle State to READY.
2565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
2567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** */
2568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
2569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 5289              		.loc 1 2569 1
 5290              		.cfi_startproc
 5291              		@ args = 0, pretend = 0, frame = 16
 5292              		@ frame_needed = 1, uses_anonymous_args = 0
 5293 0000 80B5     		push	{r7, lr}
 5294              	.LCFI69:
 5295              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccwjY1CM.s 			page 139


 5296              		.cfi_offset 7, -8
 5297              		.cfi_offset 14, -4
 5298 0002 84B0     		sub	sp, sp, #16
 5299              	.LCFI70:
 5300              		.cfi_def_cfa_offset 24
 5301 0004 00AF     		add	r7, sp, #0
 5302              	.LCFI71:
 5303              		.cfi_def_cfa_register 7
 5304 0006 7860     		str	r0, [r7, #4]
2570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint32_t count;
2573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process locked */
2575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 5305              		.loc 1 2575 3
 5306 0008 7B68     		ldr	r3, [r7, #4]
 5307 000a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 5308 000e 012B     		cmp	r3, #1
 5309 0010 01D1     		bne	.L248
 5310              		.loc 1 2575 3 is_stmt 0 discriminator 1
 5311 0012 0223     		movs	r3, #2
 5312 0014 9AE0     		b	.L249
 5313              	.L248:
 5314              		.loc 1 2575 3 discriminator 2
 5315 0016 7B68     		ldr	r3, [r7, #4]
 5316 0018 0122     		movs	r2, #1
 5317 001a 83F88020 		strb	r2, [r3, #128]
2576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set hspi->state to aborting to avoid any interaction */
2578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 5318              		.loc 1 2578 15 is_stmt 1 discriminator 2
 5319 001e 7B68     		ldr	r3, [r7, #4]
 5320 0020 0722     		movs	r2, #7
 5321 0022 83F88120 		strb	r2, [r3, #129]
2579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Initialized local variable  */
2581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   errorcode = HAL_OK;
 5322              		.loc 1 2581 13 discriminator 2
 5323 0026 0023     		movs	r3, #0
 5324 0028 FB73     		strb	r3, [r7, #15]
2582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24UL / 1000UL);
 5325              		.loc 1 2582 57 discriminator 2
 5326 002a 4A4B     		ldr	r3, .L257
 5327 002c 1B68     		ldr	r3, [r3]
 5328 002e 4A4A     		ldr	r2, .L257+4
 5329 0030 A2FB0323 		umull	r2, r3, r2, r3
 5330 0034 5B0A     		lsrs	r3, r3, #9
 5331              		.loc 1 2582 31 discriminator 2
 5332 0036 6422     		movs	r2, #100
 5333 0038 02FB03F3 		mul	r3, r2, r3
 5334              		.loc 1 2582 9 discriminator 2
 5335 003c BB60     		str	r3, [r7, #8]
2583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* If master communication on going, make sure current frame is done before closing the connectio
2585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR1, SPI_CR1_CSTART))
 5336              		.loc 1 2585 7 discriminator 2
ARM GAS  /tmp/ccwjY1CM.s 			page 140


 5337 003e 7B68     		ldr	r3, [r7, #4]
 5338 0040 1B68     		ldr	r3, [r3]
 5339 0042 1B68     		ldr	r3, [r3]
 5340 0044 03F40073 		and	r3, r3, #512
 5341              		.loc 1 2585 6 discriminator 2
 5342 0048 B3F5007F 		cmp	r3, #512
 5343 004c 1ED1     		bne	.L250
2586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSUSP);
 5344              		.loc 1 2587 5
 5345 004e 7B68     		ldr	r3, [r7, #4]
 5346 0050 1B68     		ldr	r3, [r3]
 5347 0052 1A68     		ldr	r2, [r3]
 5348 0054 7B68     		ldr	r3, [r7, #4]
 5349 0056 1B68     		ldr	r3, [r3]
 5350 0058 42F48062 		orr	r2, r2, #1024
 5351 005c 1A60     		str	r2, [r3]
 5352              	.L252:
2588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
2589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       count--;
 5353              		.loc 1 2590 12
 5354 005e BB68     		ldr	r3, [r7, #8]
 5355 0060 013B     		subs	r3, r3, #1
 5356 0062 BB60     		str	r3, [r7, #8]
2591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
 5357              		.loc 1 2591 17
 5358 0064 BB68     		ldr	r3, [r7, #8]
 5359              		.loc 1 2591 10
 5360 0066 002B     		cmp	r3, #0
 5361 0068 08D1     		bne	.L251
2592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 5362              		.loc 1 2593 9
 5363 006a 7B68     		ldr	r3, [r7, #4]
 5364 006c D3F88430 		ldr	r3, [r3, #132]
 5365 0070 43F04002 		orr	r2, r3, #64
 5366 0074 7B68     		ldr	r3, [r7, #4]
 5367 0076 C3F88420 		str	r2, [r3, #132]
2594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 5368              		.loc 1 2594 9
 5369 007a 07E0     		b	.L250
 5370              	.L251:
2595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (HAL_IS_BIT_SET(hspi->Instance->CR1, SPI_CR1_CSTART));
 5371              		.loc 1 2597 12
 5372 007c 7B68     		ldr	r3, [r7, #4]
 5373 007e 1B68     		ldr	r3, [r3]
 5374 0080 1B68     		ldr	r3, [r3]
 5375 0082 03F40073 		and	r3, r3, #512
 5376              		.loc 1 2597 5
 5377 0086 B3F5007F 		cmp	r3, #512
 5378 008a E8D0     		beq	.L252
 5379              	.L250:
2598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccwjY1CM.s 			page 141


2600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN))
 5380              		.loc 1 2601 7
 5381 008c 7B68     		ldr	r3, [r7, #4]
 5382 008e 1B68     		ldr	r3, [r3]
 5383 0090 9B68     		ldr	r3, [r3, #8]
 5384 0092 03F40043 		and	r3, r3, #32768
 5385              		.loc 1 2601 6
 5386 0096 B3F5004F 		cmp	r3, #32768
 5387 009a 1BD1     		bne	.L253
2602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
 5388              		.loc 1 2603 13
 5389 009c 7B68     		ldr	r3, [r7, #4]
 5390 009e 9B6F     		ldr	r3, [r3, #120]
 5391              		.loc 1 2603 8
 5392 00a0 002B     		cmp	r3, #0
 5393 00a2 17D0     		beq	.L253
2604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
 5394              		.loc 1 2606 11
 5395 00a4 7B68     		ldr	r3, [r7, #4]
 5396 00a6 9B6F     		ldr	r3, [r3, #120]
 5397              		.loc 1 2606 39
 5398 00a8 0022     		movs	r2, #0
 5399 00aa 1A65     		str	r2, [r3, #80]
2607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
 5400              		.loc 1 2609 11
 5401 00ac 7B68     		ldr	r3, [r7, #4]
 5402 00ae 9B6F     		ldr	r3, [r3, #120]
 5403 00b0 1846     		mov	r0, r3
 5404 00b2 FFF7FEFF 		bl	HAL_DMA_Abort
 5405 00b6 0346     		mov	r3, r0
 5406              		.loc 1 2609 10
 5407 00b8 002B     		cmp	r3, #0
 5408 00ba 0BD0     		beq	.L253
2610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (HAL_DMA_GetError(hspi->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 5409              		.loc 1 2611 13
 5410 00bc 7B68     		ldr	r3, [r7, #4]
 5411 00be 9B6F     		ldr	r3, [r3, #120]
 5412 00c0 1846     		mov	r0, r3
 5413 00c2 FFF7FEFF 		bl	HAL_DMA_GetError
 5414 00c6 0346     		mov	r3, r0
 5415              		.loc 1 2611 12
 5416 00c8 202B     		cmp	r3, #32
 5417 00ca 03D1     		bne	.L253
2612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5418              		.loc 1 2613 27
 5419 00cc 7B68     		ldr	r3, [r7, #4]
 5420 00ce 4022     		movs	r2, #64
 5421 00d0 C3F88420 		str	r2, [r3, #132]
 5422              	.L253:
ARM GAS  /tmp/ccwjY1CM.s 			page 142


2614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CFG1, SPI_CFG1_RXDMAEN))
 5423              		.loc 1 2620 7
 5424 00d4 7B68     		ldr	r3, [r7, #4]
 5425 00d6 1B68     		ldr	r3, [r3]
 5426 00d8 9B68     		ldr	r3, [r3, #8]
 5427 00da 03F48043 		and	r3, r3, #16384
 5428              		.loc 1 2620 6
 5429 00de B3F5804F 		cmp	r3, #16384
 5430 00e2 1BD1     		bne	.L254
2621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
 5431              		.loc 1 2622 13
 5432 00e4 7B68     		ldr	r3, [r7, #4]
 5433 00e6 DB6F     		ldr	r3, [r3, #124]
 5434              		.loc 1 2622 8
 5435 00e8 002B     		cmp	r3, #0
 5436 00ea 17D0     		beq	.L254
2623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
 5437              		.loc 1 2625 11
 5438 00ec 7B68     		ldr	r3, [r7, #4]
 5439 00ee DB6F     		ldr	r3, [r3, #124]
 5440              		.loc 1 2625 39
 5441 00f0 0022     		movs	r2, #0
 5442 00f2 1A65     		str	r2, [r3, #80]
2626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
 5443              		.loc 1 2628 11
 5444 00f4 7B68     		ldr	r3, [r7, #4]
 5445 00f6 DB6F     		ldr	r3, [r3, #124]
 5446 00f8 1846     		mov	r0, r3
 5447 00fa FFF7FEFF 		bl	HAL_DMA_Abort
 5448 00fe 0346     		mov	r3, r0
 5449              		.loc 1 2628 10
 5450 0100 002B     		cmp	r3, #0
 5451 0102 0BD0     		beq	.L254
2629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (HAL_DMA_GetError(hspi->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 5452              		.loc 1 2630 13
 5453 0104 7B68     		ldr	r3, [r7, #4]
 5454 0106 DB6F     		ldr	r3, [r3, #124]
 5455 0108 1846     		mov	r0, r3
 5456 010a FFF7FEFF 		bl	HAL_DMA_GetError
 5457 010e 0346     		mov	r3, r0
 5458              		.loc 1 2630 12
 5459 0110 202B     		cmp	r3, #32
 5460 0112 03D1     		bne	.L254
2631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
ARM GAS  /tmp/ccwjY1CM.s 			page 143


 5461              		.loc 1 2632 27
 5462 0114 7B68     		ldr	r3, [r7, #4]
 5463 0116 4022     		movs	r2, #64
 5464 0118 C3F88420 		str	r2, [r3, #132]
 5465              	.L254:
2633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Proceed with abort procedure */
2639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_AbortTransfer(hspi);
 5466              		.loc 1 2639 3
 5467 011c 7868     		ldr	r0, [r7, #4]
 5468 011e FFF7FEFF 		bl	SPI_AbortTransfer
2640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check error during Abort procedure */
2642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
 5469              		.loc 1 2642 11
 5470 0122 7B68     		ldr	r3, [r7, #4]
 5471 0124 D3F88430 		ldr	r3, [r3, #132]
 5472              		.loc 1 2642 6
 5473 0128 402B     		cmp	r3, #64
 5474 012a 02D1     		bne	.L255
2643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 5475              		.loc 1 2645 15
 5476 012c 0123     		movs	r3, #1
 5477 012e FB73     		strb	r3, [r7, #15]
 5478 0130 03E0     		b	.L256
 5479              	.L255:
2646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Reset errorCode */
2650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 5480              		.loc 1 2650 21
 5481 0132 7B68     		ldr	r3, [r7, #4]
 5482 0134 0022     		movs	r2, #0
 5483 0136 C3F88420 		str	r2, [r3, #132]
 5484              	.L256:
2651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
2654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 5485              		.loc 1 2654 3
 5486 013a 7B68     		ldr	r3, [r7, #4]
 5487 013c 0022     		movs	r2, #0
 5488 013e 83F88020 		strb	r2, [r3, #128]
2655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Restore hspi->state to ready */
2657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 5489              		.loc 1 2657 15
 5490 0142 7B68     		ldr	r3, [r7, #4]
 5491 0144 0122     		movs	r2, #1
 5492 0146 83F88120 		strb	r2, [r3, #129]
ARM GAS  /tmp/ccwjY1CM.s 			page 144


2658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 5493              		.loc 1 2659 10
 5494 014a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5495              	.L249:
2660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 5496              		.loc 1 2660 1
 5497 014c 1846     		mov	r0, r3
 5498 014e 1037     		adds	r7, r7, #16
 5499              	.LCFI72:
 5500              		.cfi_def_cfa_offset 8
 5501 0150 BD46     		mov	sp, r7
 5502              	.LCFI73:
 5503              		.cfi_def_cfa_register 13
 5504              		@ sp needed
 5505 0152 80BD     		pop	{r7, pc}
 5506              	.L258:
 5507              		.align	2
 5508              	.L257:
 5509 0154 00000000 		.word	SystemCoreClock
 5510 0158 F1197605 		.word	91625969
 5511              		.cfi_endproc
 5512              	.LFE344:
 5514              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 5515              		.align	1
 5516              		.global	HAL_SPI_Abort_IT
 5517              		.syntax unified
 5518              		.thumb
 5519              		.thumb_func
 5520              		.fpu fpv5-d16
 5522              	HAL_SPI_Abort_IT:
 5523              	.LFB345:
2661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
2664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi SPI handle.
2665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure performs following operations :
2668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Disable SPI Interrupts (depending of transfer direction)
2669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Disable the DMA transfer in the peripheral register (if enabled)
2670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Set handle State to READY
2672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + At abort completion, call user abort complete callback.
2673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
2676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** */
2677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 5524              		.loc 1 2678 1
 5525              		.cfi_startproc
 5526              		@ args = 0, pretend = 0, frame = 24
 5527              		@ frame_needed = 1, uses_anonymous_args = 0
 5528 0000 80B5     		push	{r7, lr}
 5529              	.LCFI74:
 5530              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccwjY1CM.s 			page 145


 5531              		.cfi_offset 7, -8
 5532              		.cfi_offset 14, -4
 5533 0002 86B0     		sub	sp, sp, #24
 5534              	.LCFI75:
 5535              		.cfi_def_cfa_offset 32
 5536 0004 00AF     		add	r7, sp, #0
 5537              	.LCFI76:
 5538              		.cfi_def_cfa_register 7
 5539 0006 7860     		str	r0, [r7, #4]
2679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint32_t count;
2681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t dma_tx_abort_done = 1UL, dma_rx_abort_done = 1UL;
 5540              		.loc 1 2681 12
 5541 0008 0123     		movs	r3, #1
 5542 000a 3B61     		str	r3, [r7, #16]
 5543              		.loc 1 2681 37
 5544 000c 0123     		movs	r3, #1
 5545 000e FB60     		str	r3, [r7, #12]
2682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set hspi->state to aborting to avoid any interaction */
2684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 5546              		.loc 1 2684 15
 5547 0010 7B68     		ldr	r3, [r7, #4]
 5548 0012 0722     		movs	r2, #7
 5549 0014 83F88120 		strb	r2, [r3, #129]
2685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Initialized local variable  */
2687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   errorcode = HAL_OK;
 5550              		.loc 1 2687 13
 5551 0018 0023     		movs	r3, #0
 5552 001a FB75     		strb	r3, [r7, #23]
2688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24UL / 1000UL);
 5553              		.loc 1 2688 57
 5554 001c 554B     		ldr	r3, .L271
 5555 001e 1B68     		ldr	r3, [r3]
 5556 0020 554A     		ldr	r2, .L271+4
 5557 0022 A2FB0323 		umull	r2, r3, r2, r3
 5558 0026 5B0A     		lsrs	r3, r3, #9
 5559              		.loc 1 2688 31
 5560 0028 6422     		movs	r2, #100
 5561 002a 02FB03F3 		mul	r3, r2, r3
 5562              		.loc 1 2688 9
 5563 002e BB60     		str	r3, [r7, #8]
2689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* If master communication on going, make sure current frame is done before closing the connectio
2691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR1, SPI_CR1_CSTART))
 5564              		.loc 1 2691 7
 5565 0030 7B68     		ldr	r3, [r7, #4]
 5566 0032 1B68     		ldr	r3, [r3]
 5567 0034 1B68     		ldr	r3, [r3]
 5568 0036 03F40073 		and	r3, r3, #512
 5569              		.loc 1 2691 6
 5570 003a B3F5007F 		cmp	r3, #512
 5571 003e 1ED1     		bne	.L260
2692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSUSP);
 5572              		.loc 1 2693 5
ARM GAS  /tmp/ccwjY1CM.s 			page 146


 5573 0040 7B68     		ldr	r3, [r7, #4]
 5574 0042 1B68     		ldr	r3, [r3]
 5575 0044 1A68     		ldr	r2, [r3]
 5576 0046 7B68     		ldr	r3, [r7, #4]
 5577 0048 1B68     		ldr	r3, [r3]
 5578 004a 42F48062 		orr	r2, r2, #1024
 5579 004e 1A60     		str	r2, [r3]
 5580              	.L262:
2694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
2695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       count--;
 5581              		.loc 1 2696 12
 5582 0050 BB68     		ldr	r3, [r7, #8]
 5583 0052 013B     		subs	r3, r3, #1
 5584 0054 BB60     		str	r3, [r7, #8]
2697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
 5585              		.loc 1 2697 17
 5586 0056 BB68     		ldr	r3, [r7, #8]
 5587              		.loc 1 2697 10
 5588 0058 002B     		cmp	r3, #0
 5589 005a 08D1     		bne	.L261
2698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 5590              		.loc 1 2699 9
 5591 005c 7B68     		ldr	r3, [r7, #4]
 5592 005e D3F88430 		ldr	r3, [r3, #132]
 5593 0062 43F04002 		orr	r2, r3, #64
 5594 0066 7B68     		ldr	r3, [r7, #4]
 5595 0068 C3F88420 		str	r2, [r3, #132]
2700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 5596              		.loc 1 2700 9
 5597 006c 07E0     		b	.L260
 5598              	.L261:
2701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (HAL_IS_BIT_SET(hspi->Instance->CR1, SPI_CR1_CSTART));
 5599              		.loc 1 2703 12
 5600 006e 7B68     		ldr	r3, [r7, #4]
 5601 0070 1B68     		ldr	r3, [r3]
 5602 0072 1B68     		ldr	r3, [r3]
 5603 0074 03F40073 		and	r3, r3, #512
 5604              		.loc 1 2703 5
 5605 0078 B3F5007F 		cmp	r3, #512
 5606 007c E8D0     		beq	.L262
 5607              	.L260:
2704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****      before any call to DMA Abort functions */
2708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if(hspi->hdmatx != NULL)
 5608              		.loc 1 2709 10
 5609 007e 7B68     		ldr	r3, [r7, #4]
 5610 0080 9B6F     		ldr	r3, [r3, #120]
 5611              		.loc 1 2709 5
 5612 0082 002B     		cmp	r3, #0
 5613 0084 28D0     		beq	.L263
ARM GAS  /tmp/ccwjY1CM.s 			page 147


2710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN))
 5614              		.loc 1 2711 9
 5615 0086 7B68     		ldr	r3, [r7, #4]
 5616 0088 1B68     		ldr	r3, [r3]
 5617 008a 9B68     		ldr	r3, [r3, #8]
 5618 008c 03F40043 		and	r3, r3, #32768
 5619              		.loc 1 2711 8
 5620 0090 B3F5004F 		cmp	r3, #32768
 5621 0094 1CD1     		bne	.L264
2712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Set DMA Abort Complete callback if SPI DMA Tx request if enabled */
2714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
 5622              		.loc 1 2714 11
 5623 0096 7B68     		ldr	r3, [r7, #4]
 5624 0098 9B6F     		ldr	r3, [r3, #120]
 5625              		.loc 1 2714 39
 5626 009a 384A     		ldr	r2, .L271+8
 5627 009c 1A65     		str	r2, [r3, #80]
2715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       dma_tx_abort_done = 0UL;
 5628              		.loc 1 2716 25
 5629 009e 0023     		movs	r3, #0
 5630 00a0 3B61     		str	r3, [r7, #16]
2717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
 5631              		.loc 1 2719 11
 5632 00a2 7B68     		ldr	r3, [r7, #4]
 5633 00a4 9B6F     		ldr	r3, [r3, #120]
 5634 00a6 1846     		mov	r0, r3
 5635 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5636 00ac 0346     		mov	r3, r0
 5637              		.loc 1 2719 10
 5638 00ae 002B     		cmp	r3, #0
 5639 00b0 12D0     		beq	.L263
2720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (HAL_DMA_GetError(hspi->hdmatx) == HAL_DMA_ERROR_NO_XFER)
 5640              		.loc 1 2721 13
 5641 00b2 7B68     		ldr	r3, [r7, #4]
 5642 00b4 9B6F     		ldr	r3, [r3, #120]
 5643 00b6 1846     		mov	r0, r3
 5644 00b8 FFF7FEFF 		bl	HAL_DMA_GetError
 5645 00bc 0346     		mov	r3, r0
 5646              		.loc 1 2721 12
 5647 00be 802B     		cmp	r3, #128
 5648 00c0 0AD1     		bne	.L263
2722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           dma_tx_abort_done = 1UL;
 5649              		.loc 1 2723 29
 5650 00c2 0123     		movs	r3, #1
 5651 00c4 3B61     		str	r3, [r7, #16]
2724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = NULL;
 5652              		.loc 1 2724 15
 5653 00c6 7B68     		ldr	r3, [r7, #4]
 5654 00c8 9B6F     		ldr	r3, [r3, #120]
 5655              		.loc 1 2724 43
ARM GAS  /tmp/ccwjY1CM.s 			page 148


 5656 00ca 0022     		movs	r2, #0
 5657 00cc 1A65     		str	r2, [r3, #80]
 5658 00ce 03E0     		b	.L263
 5659              	.L264:
2725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
2729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
 5660              		.loc 1 2730 11
 5661 00d0 7B68     		ldr	r3, [r7, #4]
 5662 00d2 9B6F     		ldr	r3, [r3, #120]
 5663              		.loc 1 2730 39
 5664 00d4 0022     		movs	r2, #0
 5665 00d6 1A65     		str	r2, [r3, #80]
 5666              	.L263:
2731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if(hspi->hdmarx != NULL)
 5667              		.loc 1 2734 10
 5668 00d8 7B68     		ldr	r3, [r7, #4]
 5669 00da DB6F     		ldr	r3, [r3, #124]
 5670              		.loc 1 2734 5
 5671 00dc 002B     		cmp	r3, #0
 5672 00de 28D0     		beq	.L265
2735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CFG1, SPI_CFG1_RXDMAEN))
 5673              		.loc 1 2736 9
 5674 00e0 7B68     		ldr	r3, [r7, #4]
 5675 00e2 1B68     		ldr	r3, [r3]
 5676 00e4 9B68     		ldr	r3, [r3, #8]
 5677 00e6 03F48043 		and	r3, r3, #16384
 5678              		.loc 1 2736 8
 5679 00ea B3F5804F 		cmp	r3, #16384
 5680 00ee 1CD1     		bne	.L266
2737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Set DMA Abort Complete callback if SPI DMA Rx request if enabled */
2739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
 5681              		.loc 1 2739 11
 5682 00f0 7B68     		ldr	r3, [r7, #4]
 5683 00f2 DB6F     		ldr	r3, [r3, #124]
 5684              		.loc 1 2739 39
 5685 00f4 224A     		ldr	r2, .L271+12
 5686 00f6 1A65     		str	r2, [r3, #80]
2740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       dma_rx_abort_done = 0UL;
 5687              		.loc 1 2741 25
 5688 00f8 0023     		movs	r3, #0
 5689 00fa FB60     		str	r3, [r7, #12]
2742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) != HAL_OK)
 5690              		.loc 1 2744 11
 5691 00fc 7B68     		ldr	r3, [r7, #4]
 5692 00fe DB6F     		ldr	r3, [r3, #124]
ARM GAS  /tmp/ccwjY1CM.s 			page 149


 5693 0100 1846     		mov	r0, r3
 5694 0102 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5695 0106 0346     		mov	r3, r0
 5696              		.loc 1 2744 10
 5697 0108 002B     		cmp	r3, #0
 5698 010a 12D0     		beq	.L265
2745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (HAL_DMA_GetError(hspi->hdmarx) == HAL_DMA_ERROR_NO_XFER)
 5699              		.loc 1 2746 13
 5700 010c 7B68     		ldr	r3, [r7, #4]
 5701 010e DB6F     		ldr	r3, [r3, #124]
 5702 0110 1846     		mov	r0, r3
 5703 0112 FFF7FEFF 		bl	HAL_DMA_GetError
 5704 0116 0346     		mov	r3, r0
 5705              		.loc 1 2746 12
 5706 0118 802B     		cmp	r3, #128
 5707 011a 0AD1     		bne	.L265
2747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           dma_rx_abort_done = 1UL;
 5708              		.loc 1 2748 29
 5709 011c 0123     		movs	r3, #1
 5710 011e FB60     		str	r3, [r7, #12]
2749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = NULL;
 5711              		.loc 1 2749 15
 5712 0120 7B68     		ldr	r3, [r7, #4]
 5713 0122 DB6F     		ldr	r3, [r3, #124]
 5714              		.loc 1 2749 43
 5715 0124 0022     		movs	r2, #0
 5716 0126 1A65     		str	r2, [r3, #80]
 5717 0128 03E0     		b	.L265
 5718              	.L266:
2750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
2754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
 5719              		.loc 1 2755 11
 5720 012a 7B68     		ldr	r3, [r7, #4]
 5721 012c DB6F     		ldr	r3, [r3, #124]
 5722              		.loc 1 2755 39
 5723 012e 0022     		movs	r2, #0
 5724 0130 1A65     		str	r2, [r3, #80]
 5725              	.L265:
2756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* If no running DMA transfer, finish cleanup and call callbacks */
2760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((dma_tx_abort_done == 1UL) && (dma_rx_abort_done == 1UL))
 5726              		.loc 1 2760 6
 5727 0132 3B69     		ldr	r3, [r7, #16]
 5728 0134 012B     		cmp	r3, #1
 5729 0136 18D1     		bne	.L267
 5730              		.loc 1 2760 34 discriminator 1
 5731 0138 FB68     		ldr	r3, [r7, #12]
 5732 013a 012B     		cmp	r3, #1
 5733 013c 15D1     		bne	.L267
ARM GAS  /tmp/ccwjY1CM.s 			page 150


2761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Proceed with abort procedure */
2763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_AbortTransfer(hspi);
 5734              		.loc 1 2763 5
 5735 013e 7868     		ldr	r0, [r7, #4]
 5736 0140 FFF7FEFF 		bl	SPI_AbortTransfer
2764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check error during Abort procedure */
2766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
 5737              		.loc 1 2766 13
 5738 0144 7B68     		ldr	r3, [r7, #4]
 5739 0146 D3F88430 		ldr	r3, [r3, #132]
 5740              		.loc 1 2766 8
 5741 014a 402B     		cmp	r3, #64
 5742 014c 02D1     		bne	.L268
2767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
 5743              		.loc 1 2769 17
 5744 014e 0123     		movs	r3, #1
 5745 0150 FB75     		strb	r3, [r7, #23]
 5746 0152 03E0     		b	.L269
 5747              	.L268:
2770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
2772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Reset errorCode */
2774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 5748              		.loc 1 2774 23
 5749 0154 7B68     		ldr	r3, [r7, #4]
 5750 0156 0022     		movs	r2, #0
 5751 0158 C3F88420 		str	r2, [r3, #132]
 5752              	.L269:
2775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Restore hspi->state to ready */
2778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5753              		.loc 1 2778 17
 5754 015c 7B68     		ldr	r3, [r7, #4]
 5755 015e 0122     		movs	r2, #1
 5756 0160 83F88120 		strb	r2, [r3, #129]
2779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call user Abort complete callback */
2781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
2782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
2784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
 5757              		.loc 1 2784 5
 5758 0164 7868     		ldr	r0, [r7, #4]
 5759 0166 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5760              	.L267:
2785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 5761              		.loc 1 2788 10
 5762 016a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  /tmp/ccwjY1CM.s 			page 151


2789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 5763              		.loc 1 2789 1
 5764 016c 1846     		mov	r0, r3
 5765 016e 1837     		adds	r7, r7, #24
 5766              	.LCFI77:
 5767              		.cfi_def_cfa_offset 8
 5768 0170 BD46     		mov	sp, r7
 5769              	.LCFI78:
 5770              		.cfi_def_cfa_register 13
 5771              		@ sp needed
 5772 0172 80BD     		pop	{r7, pc}
 5773              	.L272:
 5774              		.align	2
 5775              	.L271:
 5776 0174 00000000 		.word	SystemCoreClock
 5777 0178 F1197605 		.word	91625969
 5778 017c 00000000 		.word	SPI_DMATxAbortCallback
 5779 0180 00000000 		.word	SPI_DMARxAbortCallback
 5780              		.cfi_endproc
 5781              	.LFE345:
 5783              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 5784              		.align	1
 5785              		.global	HAL_SPI_DMAPause
 5786              		.syntax unified
 5787              		.thumb
 5788              		.thumb_func
 5789              		.fpu fpv5-d16
 5791              	HAL_SPI_DMAPause:
 5792              	.LFB346:
2790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         This API is not supported, it is maintained for backward compatibility.
2794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL_ERROR
2797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 5793              		.loc 1 2799 1
 5794              		.cfi_startproc
 5795              		@ args = 0, pretend = 0, frame = 8
 5796              		@ frame_needed = 1, uses_anonymous_args = 0
 5797              		@ link register save eliminated.
 5798 0000 80B4     		push	{r7}
 5799              	.LCFI79:
 5800              		.cfi_def_cfa_offset 4
 5801              		.cfi_offset 7, -4
 5802 0002 83B0     		sub	sp, sp, #12
 5803              	.LCFI80:
 5804              		.cfi_def_cfa_offset 16
 5805 0004 00AF     		add	r7, sp, #0
 5806              	.LCFI81:
 5807              		.cfi_def_cfa_register 7
 5808 0006 7860     		str	r0, [r7, #4]
2800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set error code to not supported */
2801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_NOT_SUPPORTED);
ARM GAS  /tmp/ccwjY1CM.s 			page 152


 5809              		.loc 1 2801 3
 5810 0008 7B68     		ldr	r3, [r7, #4]
 5811 000a D3F88430 		ldr	r3, [r3, #132]
 5812 000e 43F48062 		orr	r2, r3, #1024
 5813 0012 7B68     		ldr	r3, [r7, #4]
 5814 0014 C3F88420 		str	r2, [r3, #132]
2802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_ERROR;
 5815              		.loc 1 2803 10
 5816 0018 0123     		movs	r3, #1
2804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 5817              		.loc 1 2804 1
 5818 001a 1846     		mov	r0, r3
 5819 001c 0C37     		adds	r7, r7, #12
 5820              	.LCFI82:
 5821              		.cfi_def_cfa_offset 4
 5822 001e BD46     		mov	sp, r7
 5823              	.LCFI83:
 5824              		.cfi_def_cfa_register 13
 5825              		@ sp needed
 5826 0020 5DF8047B 		ldr	r7, [sp], #4
 5827              	.LCFI84:
 5828              		.cfi_restore 7
 5829              		.cfi_def_cfa_offset 0
 5830 0024 7047     		bx	lr
 5831              		.cfi_endproc
 5832              	.LFE346:
 5834              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 5835              		.align	1
 5836              		.global	HAL_SPI_DMAResume
 5837              		.syntax unified
 5838              		.thumb
 5839              		.thumb_func
 5840              		.fpu fpv5-d16
 5842              	HAL_SPI_DMAResume:
 5843              	.LFB347:
2805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         This API is not supported, it is maintained for backward compatibility.
2809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL_ERROR
2812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 5844              		.loc 1 2814 1
 5845              		.cfi_startproc
 5846              		@ args = 0, pretend = 0, frame = 8
 5847              		@ frame_needed = 1, uses_anonymous_args = 0
 5848              		@ link register save eliminated.
 5849 0000 80B4     		push	{r7}
 5850              	.LCFI85:
 5851              		.cfi_def_cfa_offset 4
 5852              		.cfi_offset 7, -4
 5853 0002 83B0     		sub	sp, sp, #12
 5854              	.LCFI86:
ARM GAS  /tmp/ccwjY1CM.s 			page 153


 5855              		.cfi_def_cfa_offset 16
 5856 0004 00AF     		add	r7, sp, #0
 5857              	.LCFI87:
 5858              		.cfi_def_cfa_register 7
 5859 0006 7860     		str	r0, [r7, #4]
2815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set error code to not supported */
2816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_NOT_SUPPORTED);
 5860              		.loc 1 2816 3
 5861 0008 7B68     		ldr	r3, [r7, #4]
 5862 000a D3F88430 		ldr	r3, [r3, #132]
 5863 000e 43F48062 		orr	r2, r3, #1024
 5864 0012 7B68     		ldr	r3, [r7, #4]
 5865 0014 C3F88420 		str	r2, [r3, #132]
2817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_ERROR;
 5866              		.loc 1 2818 10
 5867 0018 0123     		movs	r3, #1
2819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 5868              		.loc 1 2819 1
 5869 001a 1846     		mov	r0, r3
 5870 001c 0C37     		adds	r7, r7, #12
 5871              	.LCFI88:
 5872              		.cfi_def_cfa_offset 4
 5873 001e BD46     		mov	sp, r7
 5874              	.LCFI89:
 5875              		.cfi_def_cfa_register 13
 5876              		@ sp needed
 5877 0020 5DF8047B 		ldr	r7, [sp], #4
 5878              	.LCFI90:
 5879              		.cfi_restore 7
 5880              		.cfi_def_cfa_offset 0
 5881 0024 7047     		bx	lr
 5882              		.cfi_endproc
 5883              	.LFE347:
 5885              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 5886              		.align	1
 5887              		.global	HAL_SPI_DMAStop
 5888              		.syntax unified
 5889              		.thumb
 5890              		.thumb_func
 5891              		.fpu fpv5-d16
 5893              	HAL_SPI_DMAStop:
 5894              	.LFB348:
2820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
2823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         This API is not supported, it is maintained for backward compatibility.
2824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL_ERROR
2827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 5895              		.loc 1 2829 1
 5896              		.cfi_startproc
 5897              		@ args = 0, pretend = 0, frame = 8
 5898              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccwjY1CM.s 			page 154


 5899              		@ link register save eliminated.
 5900 0000 80B4     		push	{r7}
 5901              	.LCFI91:
 5902              		.cfi_def_cfa_offset 4
 5903              		.cfi_offset 7, -4
 5904 0002 83B0     		sub	sp, sp, #12
 5905              	.LCFI92:
 5906              		.cfi_def_cfa_offset 16
 5907 0004 00AF     		add	r7, sp, #0
 5908              	.LCFI93:
 5909              		.cfi_def_cfa_register 7
 5910 0006 7860     		str	r0, [r7, #4]
2830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set error code to not supported */
2831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_NOT_SUPPORTED);
 5911              		.loc 1 2831 3
 5912 0008 7B68     		ldr	r3, [r7, #4]
 5913 000a D3F88430 		ldr	r3, [r3, #132]
 5914 000e 43F48062 		orr	r2, r3, #1024
 5915 0012 7B68     		ldr	r3, [r7, #4]
 5916 0014 C3F88420 		str	r2, [r3, #132]
2832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_ERROR;
 5917              		.loc 1 2833 10
 5918 0018 0123     		movs	r3, #1
2834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 5919              		.loc 1 2834 1
 5920 001a 1846     		mov	r0, r3
 5921 001c 0C37     		adds	r7, r7, #12
 5922              	.LCFI94:
 5923              		.cfi_def_cfa_offset 4
 5924 001e BD46     		mov	sp, r7
 5925              	.LCFI95:
 5926              		.cfi_def_cfa_register 13
 5927              		@ sp needed
 5928 0020 5DF8047B 		ldr	r7, [sp], #4
 5929              	.LCFI96:
 5930              		.cfi_restore 7
 5931              		.cfi_def_cfa_offset 0
 5932 0024 7047     		bx	lr
 5933              		.cfi_endproc
 5934              	.LFE348:
 5936              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 5937              		.align	1
 5938              		.global	HAL_SPI_IRQHandler
 5939              		.syntax unified
 5940              		.thumb
 5941              		.thumb_func
 5942              		.fpu fpv5-d16
 5944              	HAL_SPI_IRQHandler:
 5945              	.LFB349:
2835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
2841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
ARM GAS  /tmp/ccwjY1CM.s 			page 155


2842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 5946              		.loc 1 2843 1
 5947              		.cfi_startproc
 5948              		@ args = 0, pretend = 0, frame = 40
 5949              		@ frame_needed = 1, uses_anonymous_args = 0
 5950 0000 80B5     		push	{r7, lr}
 5951              	.LCFI97:
 5952              		.cfi_def_cfa_offset 8
 5953              		.cfi_offset 7, -8
 5954              		.cfi_offset 14, -4
 5955 0002 8AB0     		sub	sp, sp, #40
 5956              	.LCFI98:
 5957              		.cfi_def_cfa_offset 48
 5958 0004 00AF     		add	r7, sp, #0
 5959              	.LCFI99:
 5960              		.cfi_def_cfa_register 7
 5961 0006 7860     		str	r0, [r7, #4]
2844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->IER;
 5962              		.loc 1 2844 27
 5963 0008 7B68     		ldr	r3, [r7, #4]
 5964 000a 1B68     		ldr	r3, [r3]
 5965              		.loc 1 2844 12
 5966 000c 1B69     		ldr	r3, [r3, #16]
 5967 000e 3B62     		str	r3, [r7, #32]
2845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 5968              		.loc 1 2845 27
 5969 0010 7B68     		ldr	r3, [r7, #4]
 5970 0012 1B68     		ldr	r3, [r3]
 5971              		.loc 1 2845 12
 5972 0014 5B69     		ldr	r3, [r3, #20]
 5973 0016 FB61     		str	r3, [r7, #28]
2846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t trigger  = itsource & itflag;
 5974              		.loc 1 2846 12
 5975 0018 3A6A     		ldr	r2, [r7, #32]
 5976 001a FB69     		ldr	r3, [r7, #28]
 5977 001c 1340     		ands	r3, r3, r2
 5978 001e BB61     		str	r3, [r7, #24]
2847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t cfg1     = hspi->Instance->CFG1;
 5979              		.loc 1 2847 27
 5980 0020 7B68     		ldr	r3, [r7, #4]
 5981 0022 1B68     		ldr	r3, [r3]
 5982              		.loc 1 2847 12
 5983 0024 9B68     		ldr	r3, [r3, #8]
 5984 0026 7B61     		str	r3, [r7, #20]
2848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t handled  = 0UL;
 5985              		.loc 1 2848 12
 5986 0028 0023     		movs	r3, #0
 5987 002a 7B62     		str	r3, [r7, #36]
2849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef State = hspi->State;
 5988              		.loc 1 2850 24
 5989 002c 7B68     		ldr	r3, [r7, #4]
 5990 002e 93F88130 		ldrb	r3, [r3, #129]
 5991 0032 FB74     		strb	r3, [r7, #19]
2851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
2852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
ARM GAS  /tmp/ccwjY1CM.s 			page 156


 5992              		.loc 1 2852 57
 5993 0034 7B68     		ldr	r3, [r7, #4]
 5994 0036 1B68     		ldr	r3, [r3]
 5995              		.loc 1 2852 18
 5996 0038 3033     		adds	r3, r3, #48
 5997 003a FB60     		str	r3, [r7, #12]
2853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
2854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI in mode Transmitter and Receiver ------------------------------------*/
2857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_
 5998              		.loc 1 2857 7
 5999 003c BB69     		ldr	r3, [r7, #24]
 6000 003e 03F04003 		and	r3, r3, #64
 6001              		.loc 1 2857 6
 6002 0042 002B     		cmp	r3, #0
 6003 0044 13D1     		bne	.L280
 6004              		.loc 1 2857 48 discriminator 1
 6005 0046 BB69     		ldr	r3, [r7, #24]
 6006 0048 03F02003 		and	r3, r3, #32
 6007              		.loc 1 2857 45 discriminator 1
 6008 004c 002B     		cmp	r3, #0
 6009 004e 0ED1     		bne	.L280
 6010              		.loc 1 2857 89 discriminator 2
 6011 0050 BB69     		ldr	r3, [r7, #24]
 6012 0052 03F00403 		and	r3, r3, #4
 6013              		.loc 1 2857 86 discriminator 2
 6014 0056 002B     		cmp	r3, #0
 6015 0058 09D0     		beq	.L280
2858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR(hspi);
 6016              		.loc 1 2859 9
 6017 005a 7B68     		ldr	r3, [r7, #4]
 6018 005c 5B6F     		ldr	r3, [r3, #116]
 6019              		.loc 1 2859 5
 6020 005e 7868     		ldr	r0, [r7, #4]
 6021 0060 9847     		blx	r3
 6022              	.LVL0:
2860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR(hspi);
 6023              		.loc 1 2860 9
 6024 0062 7B68     		ldr	r3, [r7, #4]
 6025 0064 1B6F     		ldr	r3, [r3, #112]
 6026              		.loc 1 2860 5
 6027 0066 7868     		ldr	r0, [r7, #4]
 6028 0068 9847     		blx	r3
 6029              	.LVL1:
2861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     handled = 1UL;
 6030              		.loc 1 2861 13
 6031 006a 0123     		movs	r3, #1
 6032 006c 7B62     		str	r3, [r7, #36]
 6033              	.L280:
2862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && HAL_IS_BIT_
 6034              		.loc 1 2865 7
 6035 006e BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/ccwjY1CM.s 			page 157


 6036 0070 03F04003 		and	r3, r3, #64
 6037              		.loc 1 2865 6
 6038 0074 002B     		cmp	r3, #0
 6039 0076 0FD1     		bne	.L281
 6040              		.loc 1 2865 48 discriminator 1
 6041 0078 BB69     		ldr	r3, [r7, #24]
 6042 007a 03F00103 		and	r3, r3, #1
 6043              		.loc 1 2865 45 discriminator 1
 6044 007e 002B     		cmp	r3, #0
 6045 0080 0AD0     		beq	.L281
 6046              		.loc 1 2865 89 discriminator 2
 6047 0082 BB69     		ldr	r3, [r7, #24]
 6048 0084 03F00403 		and	r3, r3, #4
 6049              		.loc 1 2865 86 discriminator 2
 6050 0088 002B     		cmp	r3, #0
 6051 008a 05D1     		bne	.L281
2866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR(hspi);
 6052              		.loc 1 2867 9
 6053 008c 7B68     		ldr	r3, [r7, #4]
 6054 008e 1B6F     		ldr	r3, [r3, #112]
 6055              		.loc 1 2867 5
 6056 0090 7868     		ldr	r0, [r7, #4]
 6057 0092 9847     		blx	r3
 6058              	.LVL2:
2868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     handled = 1UL;
 6059              		.loc 1 2868 13
 6060 0094 0123     		movs	r3, #1
 6061 0096 7B62     		str	r3, [r7, #36]
 6062              	.L281:
2869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && HAL_IS_BIT_
 6063              		.loc 1 2872 7
 6064 0098 BB69     		ldr	r3, [r7, #24]
 6065 009a 03F02003 		and	r3, r3, #32
 6066              		.loc 1 2872 6
 6067 009e 002B     		cmp	r3, #0
 6068 00a0 0FD1     		bne	.L282
 6069              		.loc 1 2872 48 discriminator 1
 6070 00a2 BB69     		ldr	r3, [r7, #24]
 6071 00a4 03F00203 		and	r3, r3, #2
 6072              		.loc 1 2872 45 discriminator 1
 6073 00a8 002B     		cmp	r3, #0
 6074 00aa 0AD0     		beq	.L282
 6075              		.loc 1 2872 89 discriminator 2
 6076 00ac BB69     		ldr	r3, [r7, #24]
 6077 00ae 03F00403 		and	r3, r3, #4
 6078              		.loc 1 2872 86 discriminator 2
 6079 00b2 002B     		cmp	r3, #0
 6080 00b4 05D1     		bne	.L282
2873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR(hspi);
 6081              		.loc 1 2874 9
 6082 00b6 7B68     		ldr	r3, [r7, #4]
 6083 00b8 5B6F     		ldr	r3, [r3, #116]
ARM GAS  /tmp/ccwjY1CM.s 			page 158


 6084              		.loc 1 2874 5
 6085 00ba 7868     		ldr	r0, [r7, #4]
 6086 00bc 9847     		blx	r3
 6087              	.LVL3:
2875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     handled = 1UL;
 6088              		.loc 1 2875 13
 6089 00be 0123     		movs	r3, #1
 6090 00c0 7B62     		str	r3, [r7, #36]
 6091              	.L282:
2876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
2879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI Reload  -------------------------------------------------*/
2880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(trigger, SPI_FLAG_TSERF))
2881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.Requested = 0UL;
2883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_TSERFFLAG(hspi);
2884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
2886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (handled != 0UL)
 6092              		.loc 1 2887 6
 6093 00c2 7B6A     		ldr	r3, [r7, #36]
 6094 00c4 002B     		cmp	r3, #0
 6095 00c6 40F06F81 		bne	.L306
2888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return;
2890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI End Of Transfer: DMA or IT based transfer */
2893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(trigger, SPI_FLAG_EOT))
 6096              		.loc 1 2893 7
 6097 00ca BB69     		ldr	r3, [r7, #24]
 6098 00cc 03F00803 		and	r3, r3, #8
 6099              		.loc 1 2893 6
 6100 00d0 002B     		cmp	r3, #0
 6101 00d2 00F0A080 		beq	.L285
2894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Clear EOT/TXTF/SUSP flag */
2896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_EOTFLAG(hspi);
 6102              		.loc 1 2896 5
 6103 00d6 7B68     		ldr	r3, [r7, #4]
 6104 00d8 1B68     		ldr	r3, [r3]
 6105 00da 9A69     		ldr	r2, [r3, #24]
 6106 00dc 7B68     		ldr	r3, [r7, #4]
 6107 00de 1B68     		ldr	r3, [r3]
 6108 00e0 42F00802 		orr	r2, r2, #8
 6109 00e4 9A61     		str	r2, [r3, #24]
2897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 6110              		.loc 1 2897 5
 6111 00e6 7B68     		ldr	r3, [r7, #4]
 6112 00e8 1B68     		ldr	r3, [r3]
 6113 00ea 9A69     		ldr	r2, [r3, #24]
 6114 00ec 7B68     		ldr	r3, [r7, #4]
 6115 00ee 1B68     		ldr	r3, [r3]
 6116 00f0 42F01002 		orr	r2, r2, #16
 6117 00f4 9A61     		str	r2, [r3, #24]
ARM GAS  /tmp/ccwjY1CM.s 			page 159


2898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 6118              		.loc 1 2898 5
 6119 00f6 7B68     		ldr	r3, [r7, #4]
 6120 00f8 1B68     		ldr	r3, [r3]
 6121 00fa 9A69     		ldr	r2, [r3, #24]
 6122 00fc 7B68     		ldr	r3, [r7, #4]
 6123 00fe 1B68     		ldr	r3, [r3]
 6124 0100 42F40062 		orr	r2, r2, #2048
 6125 0104 9A61     		str	r2, [r3, #24]
2899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable EOT interrupt */
2901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_EOT);
 6126              		.loc 1 2901 5
 6127 0106 7B68     		ldr	r3, [r7, #4]
 6128 0108 1B68     		ldr	r3, [r3]
 6129 010a 1A69     		ldr	r2, [r3, #16]
 6130 010c 7B68     		ldr	r3, [r7, #4]
 6131 010e 1B68     		ldr	r3, [r3]
 6132 0110 22F00802 		bic	r2, r2, #8
 6133 0114 1A61     		str	r2, [r3, #16]
2902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* DMA Normal Mode */
2904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (HAL_IS_BIT_CLR(cfg1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN) ||                    // IT based
 6134              		.loc 1 2904 9
 6135 0116 7B69     		ldr	r3, [r7, #20]
 6136 0118 03F44043 		and	r3, r3, #49152
 6137              		.loc 1 2904 8
 6138 011c 002B     		cmp	r3, #0
 6139 011e 0FD0     		beq	.L286
 6140              		.loc 1 2904 67 discriminator 1
 6141 0120 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6142 0122 042B     		cmp	r3, #4
 6143 0124 04D0     		beq	.L287
2905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((State != HAL_SPI_STATE_BUSY_RX) && (hspi->hdmatx->Init.Mode == DMA_NORMAL)) ||  // DMA is u
 6144              		.loc 1 2905 49
 6145 0126 7B68     		ldr	r3, [r7, #4]
 6146 0128 9B6F     		ldr	r3, [r3, #120]
 6147              		.loc 1 2905 63
 6148 012a DB69     		ldr	r3, [r3, #28]
 6149              		.loc 1 2905 41
 6150 012c 002B     		cmp	r3, #0
 6151 012e 07D0     		beq	.L286
 6152              	.L287:
 6153              		.loc 1 2905 85 discriminator 1
 6154 0130 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6155 0132 032B     		cmp	r3, #3
 6156 0134 59D0     		beq	.L288
2906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((State != HAL_SPI_STATE_BUSY_TX) && (hspi->hdmarx->Init.Mode == DMA_NORMAL)))    // DMA is u
 6157              		.loc 1 2906 49
 6158 0136 7B68     		ldr	r3, [r7, #4]
 6159 0138 DB6F     		ldr	r3, [r3, #124]
 6160              		.loc 1 2906 63
 6161 013a DB69     		ldr	r3, [r3, #28]
 6162              		.loc 1 2906 41
 6163 013c 002B     		cmp	r3, #0
 6164 013e 54D1     		bne	.L288
 6165              	.L286:
ARM GAS  /tmp/ccwjY1CM.s 			page 160


2907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* For the IT based receive extra polling maybe required for last packet */
2909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_IS_BIT_CLR(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
 6166              		.loc 1 2909 11
 6167 0140 7B68     		ldr	r3, [r7, #4]
 6168 0142 1B68     		ldr	r3, [r3]
 6169 0144 9B68     		ldr	r3, [r3, #8]
 6170 0146 03F44043 		and	r3, r3, #49152
 6171              		.loc 1 2909 10
 6172 014a 002B     		cmp	r3, #0
 6173 014c 3DD1     		bne	.L289
2910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Pooling remaining data */
2912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         while (hspi->RxXferCount != 0UL)
 6174              		.loc 1 2912 15
 6175 014e 36E0     		b	.L290
 6176              	.L294:
2913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Receive data in 32 Bit mode */
2915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 6177              		.loc 1 2915 25
 6178 0150 7B68     		ldr	r3, [r7, #4]
 6179 0152 DB68     		ldr	r3, [r3, #12]
 6180              		.loc 1 2915 14
 6181 0154 0F2B     		cmp	r3, #15
 6182 0156 0BD9     		bls	.L291
2916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
2917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 6183              		.loc 1 2917 71
 6184 0158 7B68     		ldr	r3, [r7, #4]
 6185 015a 1A68     		ldr	r2, [r3]
 6186              		.loc 1 2917 31
 6187 015c 7B68     		ldr	r3, [r7, #4]
 6188 015e 5B6E     		ldr	r3, [r3, #100]
 6189              		.loc 1 2917 47
 6190 0160 126B     		ldr	r2, [r2, #48]
 6191              		.loc 1 2917 45
 6192 0162 1A60     		str	r2, [r3]
2918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             hspi->pRxBuffPtr += sizeof(uint32_t);
 6193              		.loc 1 2918 30
 6194 0164 7B68     		ldr	r3, [r7, #4]
 6195 0166 5B6E     		ldr	r3, [r3, #100]
 6196 0168 1A1D     		adds	r2, r3, #4
 6197 016a 7B68     		ldr	r3, [r7, #4]
 6198 016c 5A66     		str	r2, [r3, #100]
 6199 016e 1DE0     		b	.L292
 6200              	.L291:
2919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
2920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Receive data in 16 Bit mode */
2921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 6201              		.loc 1 2921 30
 6202 0170 7B68     		ldr	r3, [r7, #4]
 6203 0172 DB68     		ldr	r3, [r3, #12]
 6204              		.loc 1 2921 19
 6205 0174 072B     		cmp	r3, #7
 6206 0176 0BD9     		bls	.L293
2922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
ARM GAS  /tmp/ccwjY1CM.s 			page 161


2923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
2924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 6207              		.loc 1 2924 31
 6208 0178 7B68     		ldr	r3, [r7, #4]
 6209 017a 5B6E     		ldr	r3, [r3, #100]
 6210              		.loc 1 2924 47
 6211 017c FA68     		ldr	r2, [r7, #12]
 6212 017e 1288     		ldrh	r2, [r2]	@ movhi
 6213 0180 92B2     		uxth	r2, r2
 6214              		.loc 1 2924 45
 6215 0182 1A80     		strh	r2, [r3]	@ movhi
2925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
2926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
2927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
2928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             hspi->pRxBuffPtr += sizeof(uint16_t);
 6216              		.loc 1 2928 30
 6217 0184 7B68     		ldr	r3, [r7, #4]
 6218 0186 5B6E     		ldr	r3, [r3, #100]
 6219 0188 9A1C     		adds	r2, r3, #2
 6220 018a 7B68     		ldr	r3, [r7, #4]
 6221 018c 5A66     		str	r2, [r3, #100]
 6222 018e 0DE0     		b	.L292
 6223              	.L293:
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
2930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Receive data in 8 Bit mode */
2931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           else
2932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
2933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 6224              		.loc 1 2933 69
 6225 0190 7B68     		ldr	r3, [r7, #4]
 6226 0192 1B68     		ldr	r3, [r3]
 6227              		.loc 1 2933 64
 6228 0194 03F13002 		add	r2, r3, #48
 6229              		.loc 1 2933 30
 6230 0198 7B68     		ldr	r3, [r7, #4]
 6231 019a 5B6E     		ldr	r3, [r3, #100]
 6232              		.loc 1 2933 46
 6233 019c 1278     		ldrb	r2, [r2]
 6234 019e D2B2     		uxtb	r2, r2
 6235              		.loc 1 2933 44
 6236 01a0 1A70     		strb	r2, [r3]
2934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             hspi->pRxBuffPtr += sizeof(uint8_t);
 6237              		.loc 1 2934 30
 6238 01a2 7B68     		ldr	r3, [r7, #4]
 6239 01a4 5B6E     		ldr	r3, [r3, #100]
 6240 01a6 5A1C     		adds	r2, r3, #1
 6241 01a8 7B68     		ldr	r3, [r7, #4]
 6242 01aa 5A66     		str	r2, [r3, #100]
 6243              	.L292:
2935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
2936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount--;
 6244              		.loc 1 2937 15
 6245 01ac 7B68     		ldr	r3, [r7, #4]
 6246 01ae B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 6247 01b2 9BB2     		uxth	r3, r3
 6248              		.loc 1 2937 28
ARM GAS  /tmp/ccwjY1CM.s 			page 162


 6249 01b4 013B     		subs	r3, r3, #1
 6250 01b6 9AB2     		uxth	r2, r3
 6251 01b8 7B68     		ldr	r3, [r7, #4]
 6252 01ba A3F86A20 		strh	r2, [r3, #106]	@ movhi
 6253              	.L290:
2912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 6254              		.loc 1 2912 20
 6255 01be 7B68     		ldr	r3, [r7, #4]
 6256 01c0 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 6257 01c4 9BB2     		uxth	r3, r3
2912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 6258              		.loc 1 2912 15
 6259 01c6 002B     		cmp	r3, #0
 6260 01c8 C2D1     		bne	.L294
 6261              	.L289:
2938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Call SPI Standard close procedure */
2942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SPI_CloseTransfer(hspi);
 6262              		.loc 1 2942 7
 6263 01ca 7868     		ldr	r0, [r7, #4]
 6264 01cc FFF7FEFF 		bl	SPI_CloseTransfer
2943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
 6265              		.loc 1 2944 19
 6266 01d0 7B68     		ldr	r3, [r7, #4]
 6267 01d2 0122     		movs	r2, #1
 6268 01d4 83F88120 		strb	r2, [r3, #129]
2945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 6269              		.loc 1 2945 15
 6270 01d8 7B68     		ldr	r3, [r7, #4]
 6271 01da D3F88430 		ldr	r3, [r3, #132]
 6272              		.loc 1 2945 10
 6273 01de 002B     		cmp	r3, #0
 6274 01e0 03D0     		beq	.L288
2946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
2948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
2950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
 6275              		.loc 1 2950 9
 6276 01e2 7868     		ldr	r0, [r7, #4]
 6277 01e4 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return;
 6278              		.loc 1 2952 9
 6279 01e8 E3E0     		b	.L279
 6280              	.L288:
2953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
2957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call appropriate user callback */
2958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (State == HAL_SPI_STATE_BUSY_TX_RX)
2959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxRxCpltCallback(hspi);
ARM GAS  /tmp/ccwjY1CM.s 			page 163


2961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else if (State == HAL_SPI_STATE_BUSY_RX)
2963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
2965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else if (State == HAL_SPI_STATE_BUSY_TX)
2967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxCpltCallback(hspi);
2969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
2971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call appropriate user callback */
2972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (State == HAL_SPI_STATE_BUSY_TX_RX)
 6281              		.loc 1 2972 8
 6282 01ea FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6283 01ec 052B     		cmp	r3, #5
 6284 01ee 03D1     		bne	.L295
2973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_TxRxCpltCallback(hspi);
 6285              		.loc 1 2974 7
 6286 01f0 7868     		ldr	r0, [r7, #4]
 6287 01f2 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
2975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else if (State == HAL_SPI_STATE_BUSY_RX)
2977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
2979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else if (State == HAL_SPI_STATE_BUSY_TX)
2981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_TxCpltCallback(hspi);
2983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 	else
2986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* End of the appropriate call */
2988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return;
 6288              		.loc 1 2990 5
 6289 01f6 D9E0     		b	.L307
 6290              	.L295:
2976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 6291              		.loc 1 2976 13
 6292 01f8 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6293 01fa 042B     		cmp	r3, #4
 6294 01fc 03D1     		bne	.L297
2978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 6295              		.loc 1 2978 7
 6296 01fe 7868     		ldr	r0, [r7, #4]
 6297 0200 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 6298              		.loc 1 2990 5
 6299 0204 D2E0     		b	.L307
 6300              	.L297:
2980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 6301              		.loc 1 2980 13
 6302 0206 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6303 0208 032B     		cmp	r3, #3
 6304 020a 40F0CF80 		bne	.L307
ARM GAS  /tmp/ccwjY1CM.s 			page 164


2982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 6305              		.loc 1 2982 7
 6306 020e 7868     		ldr	r0, [r7, #4]
 6307 0210 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 6308              		.loc 1 2990 5
 6309 0214 CAE0     		b	.L307
 6310              	.L285:
2991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(itflag, SPI_FLAG_SUSP) && HAL_IS_BIT_SET(itsource, SPI_FLAG_EOT))
 6311              		.loc 1 2993 7
 6312 0216 FB69     		ldr	r3, [r7, #28]
 6313 0218 03F40063 		and	r3, r3, #2048
 6314              		.loc 1 2993 6
 6315 021c 002B     		cmp	r3, #0
 6316 021e 0DD0     		beq	.L298
 6317              		.loc 1 2993 48 discriminator 1
 6318 0220 3B6A     		ldr	r3, [r7, #32]
 6319 0222 03F00803 		and	r3, r3, #8
 6320              		.loc 1 2993 45 discriminator 1
 6321 0226 002B     		cmp	r3, #0
 6322 0228 08D0     		beq	.L298
2994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Abort on going, clear SUSP flag to avoid infinite looping */
2996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 6323              		.loc 1 2996 5
 6324 022a 7B68     		ldr	r3, [r7, #4]
 6325 022c 1B68     		ldr	r3, [r3]
 6326 022e 9A69     		ldr	r2, [r3, #24]
 6327 0230 7B68     		ldr	r3, [r7, #4]
 6328 0232 1B68     		ldr	r3, [r3]
 6329 0234 42F40062 		orr	r2, r2, #2048
 6330 0238 9A61     		str	r2, [r3, #24]
2997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return;
 6331              		.loc 1 2998 5
 6332 023a BAE0     		b	.L279
 6333              	.L298:
2999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
3002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((trigger & (SPI_FLAG_MODF | SPI_FLAG_OVR | SPI_FLAG_FRE | SPI_FLAG_UDR)) != 0UL)
 6334              		.loc 1 3002 16
 6335 023c BB69     		ldr	r3, [r7, #24]
 6336 023e 03F45873 		and	r3, r3, #864
 6337              		.loc 1 3002 6
 6338 0242 002B     		cmp	r3, #0
 6339 0244 00F0B580 		beq	.L279
3003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
3005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((trigger & SPI_FLAG_OVR) != 0UL)
 6340              		.loc 1 3005 18
 6341 0248 BB69     		ldr	r3, [r7, #24]
 6342 024a 03F04003 		and	r3, r3, #64
 6343              		.loc 1 3005 8
 6344 024e 002B     		cmp	r3, #0
 6345 0250 0FD0     		beq	.L299
ARM GAS  /tmp/ccwjY1CM.s 			page 165


3006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 6346              		.loc 1 3007 7
 6347 0252 7B68     		ldr	r3, [r7, #4]
 6348 0254 D3F88430 		ldr	r3, [r3, #132]
 6349 0258 43F00402 		orr	r2, r3, #4
 6350 025c 7B68     		ldr	r3, [r7, #4]
 6351 025e C3F88420 		str	r2, [r3, #132]
3008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
 6352              		.loc 1 3008 7
 6353 0262 7B68     		ldr	r3, [r7, #4]
 6354 0264 1B68     		ldr	r3, [r3]
 6355 0266 9A69     		ldr	r2, [r3, #24]
 6356 0268 7B68     		ldr	r3, [r7, #4]
 6357 026a 1B68     		ldr	r3, [r3]
 6358 026c 42F04002 		orr	r2, r2, #64
 6359 0270 9A61     		str	r2, [r3, #24]
 6360              	.L299:
3009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
3012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((trigger & SPI_FLAG_MODF) != 0UL)
 6361              		.loc 1 3012 18
 6362 0272 BB69     		ldr	r3, [r7, #24]
 6363 0274 03F40073 		and	r3, r3, #512
 6364              		.loc 1 3012 8
 6365 0278 002B     		cmp	r3, #0
 6366 027a 0FD0     		beq	.L300
3013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 6367              		.loc 1 3014 7
 6368 027c 7B68     		ldr	r3, [r7, #4]
 6369 027e D3F88430 		ldr	r3, [r3, #132]
 6370 0282 43F00102 		orr	r2, r3, #1
 6371 0286 7B68     		ldr	r3, [r7, #4]
 6372 0288 C3F88420 		str	r2, [r3, #132]
3015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 6373              		.loc 1 3015 7
 6374 028c 7B68     		ldr	r3, [r7, #4]
 6375 028e 1B68     		ldr	r3, [r3]
 6376 0290 9A69     		ldr	r2, [r3, #24]
 6377 0292 7B68     		ldr	r3, [r7, #4]
 6378 0294 1B68     		ldr	r3, [r3]
 6379 0296 42F40072 		orr	r2, r2, #512
 6380 029a 9A61     		str	r2, [r3, #24]
 6381              	.L300:
3016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
3019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((trigger & SPI_FLAG_FRE) != 0UL)
 6382              		.loc 1 3019 18
 6383 029c BB69     		ldr	r3, [r7, #24]
 6384 029e 03F48073 		and	r3, r3, #256
 6385              		.loc 1 3019 8
 6386 02a2 002B     		cmp	r3, #0
 6387 02a4 0FD0     		beq	.L301
3020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
ARM GAS  /tmp/ccwjY1CM.s 			page 166


3021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 6388              		.loc 1 3021 7
 6389 02a6 7B68     		ldr	r3, [r7, #4]
 6390 02a8 D3F88430 		ldr	r3, [r3, #132]
 6391 02ac 43F00802 		orr	r2, r3, #8
 6392 02b0 7B68     		ldr	r3, [r7, #4]
 6393 02b2 C3F88420 		str	r2, [r3, #132]
3022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
 6394              		.loc 1 3022 7
 6395 02b6 7B68     		ldr	r3, [r7, #4]
 6396 02b8 1B68     		ldr	r3, [r3]
 6397 02ba 9A69     		ldr	r2, [r3, #24]
 6398 02bc 7B68     		ldr	r3, [r7, #4]
 6399 02be 1B68     		ldr	r3, [r3]
 6400 02c0 42F48072 		orr	r2, r2, #256
 6401 02c4 9A61     		str	r2, [r3, #24]
 6402              	.L301:
3023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* SPI Underrun error interrupt occurred ------------------------------------*/
3026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((trigger & SPI_FLAG_UDR) != 0UL)
 6403              		.loc 1 3026 18
 6404 02c6 BB69     		ldr	r3, [r7, #24]
 6405 02c8 03F02003 		and	r3, r3, #32
 6406              		.loc 1 3026 8
 6407 02cc 002B     		cmp	r3, #0
 6408 02ce 0FD0     		beq	.L302
3027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 6409              		.loc 1 3028 7
 6410 02d0 7B68     		ldr	r3, [r7, #4]
 6411 02d2 D3F88430 		ldr	r3, [r3, #132]
 6412 02d6 43F08002 		orr	r2, r3, #128
 6413 02da 7B68     		ldr	r3, [r7, #4]
 6414 02dc C3F88420 		str	r2, [r3, #132]
3029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_UDRFLAG(hspi);
 6415              		.loc 1 3029 7
 6416 02e0 7B68     		ldr	r3, [r7, #4]
 6417 02e2 1B68     		ldr	r3, [r3]
 6418 02e4 9A69     		ldr	r2, [r3, #24]
 6419 02e6 7B68     		ldr	r3, [r7, #4]
 6420 02e8 1B68     		ldr	r3, [r3]
 6421 02ea 42F02002 		orr	r2, r2, #32
 6422 02ee 9A61     		str	r2, [r3, #24]
 6423              	.L302:
3030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 6424              		.loc 1 3032 13
 6425 02f0 7B68     		ldr	r3, [r7, #4]
 6426 02f2 D3F88430 		ldr	r3, [r3, #132]
 6427              		.loc 1 3032 8
 6428 02f6 002B     		cmp	r3, #0
 6429 02f8 5AD0     		beq	.L308
3033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable SPI peripheral */
3035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
ARM GAS  /tmp/ccwjY1CM.s 			page 167


 6430              		.loc 1 3035 7
 6431 02fa 7B68     		ldr	r3, [r7, #4]
 6432 02fc 1B68     		ldr	r3, [r3]
 6433 02fe 1A68     		ldr	r2, [r3]
 6434 0300 7B68     		ldr	r3, [r7, #4]
 6435 0302 1B68     		ldr	r3, [r3]
 6436 0304 22F00102 		bic	r2, r2, #1
 6437 0308 1A60     		str	r2, [r3]
3036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable all interrupts */
3038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_EOT | SPI_IT_RXP | SPI_IT_TXP | SPI_IT_MODF | SPI_IT_OVR | 
 6438              		.loc 1 3038 7
 6439 030a 7B68     		ldr	r3, [r7, #4]
 6440 030c 1B68     		ldr	r3, [r3]
 6441 030e 1969     		ldr	r1, [r3, #16]
 6442 0310 7B68     		ldr	r3, [r7, #4]
 6443 0312 1A68     		ldr	r2, [r3]
 6444 0314 284B     		ldr	r3, .L309
 6445 0316 0B40     		ands	r3, r3, r1
 6446 0318 1361     		str	r3, [r2, #16]
3039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
3041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_IS_BIT_SET(cfg1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
 6447              		.loc 1 3041 11
 6448 031a 7B69     		ldr	r3, [r7, #20]
 6449 031c 03F44043 		and	r3, r3, #49152
 6450              		.loc 1 3041 10
 6451 0320 B3F5404F 		cmp	r3, #49152
 6452 0324 38D1     		bne	.L304
3042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
3043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Disable the SPI DMA requests */
3044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 6453              		.loc 1 3044 9
 6454 0326 7B68     		ldr	r3, [r7, #4]
 6455 0328 1B68     		ldr	r3, [r3]
 6456 032a 9A68     		ldr	r2, [r3, #8]
 6457 032c 7B68     		ldr	r3, [r7, #4]
 6458 032e 1B68     		ldr	r3, [r3]
 6459 0330 22F44042 		bic	r2, r2, #49152
 6460 0334 9A60     		str	r2, [r3, #8]
3045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
3047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
 6461              		.loc 1 3047 17
 6462 0336 7B68     		ldr	r3, [r7, #4]
 6463 0338 DB6F     		ldr	r3, [r3, #124]
 6464              		.loc 1 3047 12
 6465 033a 002B     		cmp	r3, #0
 6466 033c 13D0     		beq	.L305
3048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
3049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
3050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
3051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 6467              		.loc 1 3051 15
 6468 033e 7B68     		ldr	r3, [r7, #4]
 6469 0340 DB6F     		ldr	r3, [r3, #124]
 6470              		.loc 1 3051 43
ARM GAS  /tmp/ccwjY1CM.s 			page 168


 6471 0342 1E4A     		ldr	r2, .L309+4
 6472 0344 1A65     		str	r2, [r3, #80]
3052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 6473              		.loc 1 3052 25
 6474 0346 7B68     		ldr	r3, [r7, #4]
 6475 0348 DB6F     		ldr	r3, [r3, #124]
 6476 034a 1846     		mov	r0, r3
 6477 034c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6478 0350 0346     		mov	r3, r0
 6479              		.loc 1 3052 14
 6480 0352 002B     		cmp	r3, #0
 6481 0354 07D0     		beq	.L305
3053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
3054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 6482              		.loc 1 3054 13
 6483 0356 7B68     		ldr	r3, [r7, #4]
 6484 0358 D3F88430 		ldr	r3, [r3, #132]
 6485 035c 43F04002 		orr	r2, r3, #64
 6486 0360 7B68     		ldr	r3, [r7, #4]
 6487 0362 C3F88420 		str	r2, [r3, #132]
 6488              	.L305:
3055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
3056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
3057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
3058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
 6489              		.loc 1 3058 17
 6490 0366 7B68     		ldr	r3, [r7, #4]
 6491 0368 9B6F     		ldr	r3, [r3, #120]
 6492              		.loc 1 3058 12
 6493 036a 002B     		cmp	r3, #0
 6494 036c 20D0     		beq	.L308
3059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
3060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
3061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
3062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 6495              		.loc 1 3062 15
 6496 036e 7B68     		ldr	r3, [r7, #4]
 6497 0370 9B6F     		ldr	r3, [r3, #120]
 6498              		.loc 1 3062 43
 6499 0372 124A     		ldr	r2, .L309+4
 6500 0374 1A65     		str	r2, [r3, #80]
3063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 6501              		.loc 1 3063 25
 6502 0376 7B68     		ldr	r3, [r7, #4]
 6503 0378 9B6F     		ldr	r3, [r3, #120]
 6504 037a 1846     		mov	r0, r3
 6505 037c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6506 0380 0346     		mov	r3, r0
 6507              		.loc 1 3063 14
 6508 0382 002B     		cmp	r3, #0
 6509 0384 14D0     		beq	.L308
3064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
3065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 6510              		.loc 1 3065 13
 6511 0386 7B68     		ldr	r3, [r7, #4]
 6512 0388 D3F88430 		ldr	r3, [r3, #132]
 6513 038c 43F04002 		orr	r2, r3, #64
ARM GAS  /tmp/ccwjY1CM.s 			page 169


 6514 0390 7B68     		ldr	r3, [r7, #4]
 6515 0392 C3F88420 		str	r2, [r3, #132]
3066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
3067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
3068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
3069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
3070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
3071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Restore hspi->State to Ready */
3072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Call user error callback */
3075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
3077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
3079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
3081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return;
 6516              		.loc 1 3082 5
 6517 0396 0BE0     		b	.L308
 6518              	.L304:
3072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 6519              		.loc 1 3072 21
 6520 0398 7B68     		ldr	r3, [r7, #4]
 6521 039a 0122     		movs	r2, #1
 6522 039c 83F88120 		strb	r2, [r3, #129]
3078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6523              		.loc 1 3078 9
 6524 03a0 7868     		ldr	r0, [r7, #4]
 6525 03a2 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 6526              		.loc 1 3082 5
 6527 03a6 03E0     		b	.L308
 6528              	.L306:
2889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 6529              		.loc 1 2889 5
 6530 03a8 00BF     		nop
 6531 03aa 02E0     		b	.L279
 6532              	.L307:
2990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 6533              		.loc 1 2990 5
 6534 03ac 00BF     		nop
 6535 03ae 00E0     		b	.L279
 6536              	.L308:
 6537              		.loc 1 3082 5
 6538 03b0 00BF     		nop
 6539              	.L279:
3083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 6540              		.loc 1 3084 1
 6541 03b2 2837     		adds	r7, r7, #40
 6542              	.LCFI100:
 6543              		.cfi_def_cfa_offset 8
 6544 03b4 BD46     		mov	sp, r7
 6545              	.LCFI101:
 6546              		.cfi_def_cfa_register 13
 6547              		@ sp needed
ARM GAS  /tmp/ccwjY1CM.s 			page 170


 6548 03b6 80BD     		pop	{r7, pc}
 6549              	.L310:
 6550              		.align	2
 6551              	.L309:
 6552 03b8 94FCFFFF 		.word	-876
 6553 03bc 00000000 		.word	SPI_DMAAbortOnError
 6554              		.cfi_endproc
 6555              	.LFE349:
 6557              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 6558              		.align	1
 6559              		.weak	HAL_SPI_TxCpltCallback
 6560              		.syntax unified
 6561              		.thumb
 6562              		.thumb_func
 6563              		.fpu fpv5-d16
 6565              	HAL_SPI_TxCpltCallback:
 6566              	.LFB350:
3085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Tx Transfer completed callback.
3088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
3093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 6567              		.loc 1 3093 1
 6568              		.cfi_startproc
 6569              		@ args = 0, pretend = 0, frame = 8
 6570              		@ frame_needed = 1, uses_anonymous_args = 0
 6571              		@ link register save eliminated.
 6572 0000 80B4     		push	{r7}
 6573              	.LCFI102:
 6574              		.cfi_def_cfa_offset 4
 6575              		.cfi_offset 7, -4
 6576 0002 83B0     		sub	sp, sp, #12
 6577              	.LCFI103:
 6578              		.cfi_def_cfa_offset 16
 6579 0004 00AF     		add	r7, sp, #0
 6580              	.LCFI104:
 6581              		.cfi_def_cfa_register 7
 6582 0006 7860     		str	r0, [r7, #4]
3094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
3099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 6583              		.loc 1 3100 1
 6584 0008 00BF     		nop
 6585 000a 0C37     		adds	r7, r7, #12
 6586              	.LCFI105:
 6587              		.cfi_def_cfa_offset 4
 6588 000c BD46     		mov	sp, r7
 6589              	.LCFI106:
 6590              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccwjY1CM.s 			page 171


 6591              		@ sp needed
 6592 000e 5DF8047B 		ldr	r7, [sp], #4
 6593              	.LCFI107:
 6594              		.cfi_restore 7
 6595              		.cfi_def_cfa_offset 0
 6596 0012 7047     		bx	lr
 6597              		.cfi_endproc
 6598              	.LFE350:
 6600              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 6601              		.align	1
 6602              		.weak	HAL_SPI_RxCpltCallback
 6603              		.syntax unified
 6604              		.thumb
 6605              		.thumb_func
 6606              		.fpu fpv5-d16
 6608              	HAL_SPI_RxCpltCallback:
 6609              	.LFB351:
3101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Rx Transfer completed callback.
3104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
3109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 6610              		.loc 1 3109 1
 6611              		.cfi_startproc
 6612              		@ args = 0, pretend = 0, frame = 8
 6613              		@ frame_needed = 1, uses_anonymous_args = 0
 6614              		@ link register save eliminated.
 6615 0000 80B4     		push	{r7}
 6616              	.LCFI108:
 6617              		.cfi_def_cfa_offset 4
 6618              		.cfi_offset 7, -4
 6619 0002 83B0     		sub	sp, sp, #12
 6620              	.LCFI109:
 6621              		.cfi_def_cfa_offset 16
 6622 0004 00AF     		add	r7, sp, #0
 6623              	.LCFI110:
 6624              		.cfi_def_cfa_register 7
 6625 0006 7860     		str	r0, [r7, #4]
3110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
3115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 6626              		.loc 1 3116 1
 6627 0008 00BF     		nop
 6628 000a 0C37     		adds	r7, r7, #12
 6629              	.LCFI111:
 6630              		.cfi_def_cfa_offset 4
 6631 000c BD46     		mov	sp, r7
 6632              	.LCFI112:
 6633              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccwjY1CM.s 			page 172


 6634              		@ sp needed
 6635 000e 5DF8047B 		ldr	r7, [sp], #4
 6636              	.LCFI113:
 6637              		.cfi_restore 7
 6638              		.cfi_def_cfa_offset 0
 6639 0012 7047     		bx	lr
 6640              		.cfi_endproc
 6641              	.LFE351:
 6643              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 6644              		.align	1
 6645              		.weak	HAL_SPI_TxRxCpltCallback
 6646              		.syntax unified
 6647              		.thumb
 6648              		.thumb_func
 6649              		.fpu fpv5-d16
 6651              	HAL_SPI_TxRxCpltCallback:
 6652              	.LFB352:
3117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Tx and Rx Transfer completed callback.
3120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
3125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 6653              		.loc 1 3125 1
 6654              		.cfi_startproc
 6655              		@ args = 0, pretend = 0, frame = 8
 6656              		@ frame_needed = 1, uses_anonymous_args = 0
 6657              		@ link register save eliminated.
 6658 0000 80B4     		push	{r7}
 6659              	.LCFI114:
 6660              		.cfi_def_cfa_offset 4
 6661              		.cfi_offset 7, -4
 6662 0002 83B0     		sub	sp, sp, #12
 6663              	.LCFI115:
 6664              		.cfi_def_cfa_offset 16
 6665 0004 00AF     		add	r7, sp, #0
 6666              	.LCFI116:
 6667              		.cfi_def_cfa_register 7
 6668 0006 7860     		str	r0, [r7, #4]
3126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
3131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 6669              		.loc 1 3132 1
 6670 0008 00BF     		nop
 6671 000a 0C37     		adds	r7, r7, #12
 6672              	.LCFI117:
 6673              		.cfi_def_cfa_offset 4
 6674 000c BD46     		mov	sp, r7
 6675              	.LCFI118:
 6676              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccwjY1CM.s 			page 173


 6677              		@ sp needed
 6678 000e 5DF8047B 		ldr	r7, [sp], #4
 6679              	.LCFI119:
 6680              		.cfi_restore 7
 6681              		.cfi_def_cfa_offset 0
 6682 0012 7047     		bx	lr
 6683              		.cfi_endproc
 6684              	.LFE352:
 6686              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 6687              		.align	1
 6688              		.weak	HAL_SPI_TxHalfCpltCallback
 6689              		.syntax unified
 6690              		.thumb
 6691              		.thumb_func
 6692              		.fpu fpv5-d16
 6694              	HAL_SPI_TxHalfCpltCallback:
 6695              	.LFB353:
3133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Tx Half Transfer completed callback.
3136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
3141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 6696              		.loc 1 3141 1
 6697              		.cfi_startproc
 6698              		@ args = 0, pretend = 0, frame = 8
 6699              		@ frame_needed = 1, uses_anonymous_args = 0
 6700              		@ link register save eliminated.
 6701 0000 80B4     		push	{r7}
 6702              	.LCFI120:
 6703              		.cfi_def_cfa_offset 4
 6704              		.cfi_offset 7, -4
 6705 0002 83B0     		sub	sp, sp, #12
 6706              	.LCFI121:
 6707              		.cfi_def_cfa_offset 16
 6708 0004 00AF     		add	r7, sp, #0
 6709              	.LCFI122:
 6710              		.cfi_def_cfa_register 7
 6711 0006 7860     		str	r0, [r7, #4]
3142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
3147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 6712              		.loc 1 3148 1
 6713 0008 00BF     		nop
 6714 000a 0C37     		adds	r7, r7, #12
 6715              	.LCFI123:
 6716              		.cfi_def_cfa_offset 4
 6717 000c BD46     		mov	sp, r7
 6718              	.LCFI124:
 6719              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccwjY1CM.s 			page 174


 6720              		@ sp needed
 6721 000e 5DF8047B 		ldr	r7, [sp], #4
 6722              	.LCFI125:
 6723              		.cfi_restore 7
 6724              		.cfi_def_cfa_offset 0
 6725 0012 7047     		bx	lr
 6726              		.cfi_endproc
 6727              	.LFE353:
 6729              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 6730              		.align	1
 6731              		.weak	HAL_SPI_RxHalfCpltCallback
 6732              		.syntax unified
 6733              		.thumb
 6734              		.thumb_func
 6735              		.fpu fpv5-d16
 6737              	HAL_SPI_RxHalfCpltCallback:
 6738              	.LFB354:
3149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Rx Half Transfer completed callback.
3152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
3157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 6739              		.loc 1 3157 1
 6740              		.cfi_startproc
 6741              		@ args = 0, pretend = 0, frame = 8
 6742              		@ frame_needed = 1, uses_anonymous_args = 0
 6743              		@ link register save eliminated.
 6744 0000 80B4     		push	{r7}
 6745              	.LCFI126:
 6746              		.cfi_def_cfa_offset 4
 6747              		.cfi_offset 7, -4
 6748 0002 83B0     		sub	sp, sp, #12
 6749              	.LCFI127:
 6750              		.cfi_def_cfa_offset 16
 6751 0004 00AF     		add	r7, sp, #0
 6752              	.LCFI128:
 6753              		.cfi_def_cfa_register 7
 6754 0006 7860     		str	r0, [r7, #4]
3158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
3163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 6755              		.loc 1 3164 1
 6756 0008 00BF     		nop
 6757 000a 0C37     		adds	r7, r7, #12
 6758              	.LCFI129:
 6759              		.cfi_def_cfa_offset 4
 6760 000c BD46     		mov	sp, r7
 6761              	.LCFI130:
 6762              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccwjY1CM.s 			page 175


 6763              		@ sp needed
 6764 000e 5DF8047B 		ldr	r7, [sp], #4
 6765              	.LCFI131:
 6766              		.cfi_restore 7
 6767              		.cfi_def_cfa_offset 0
 6768 0012 7047     		bx	lr
 6769              		.cfi_endproc
 6770              	.LFE354:
 6772              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 6773              		.align	1
 6774              		.weak	HAL_SPI_TxRxHalfCpltCallback
 6775              		.syntax unified
 6776              		.thumb
 6777              		.thumb_func
 6778              		.fpu fpv5-d16
 6780              	HAL_SPI_TxRxHalfCpltCallback:
 6781              	.LFB355:
3165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Tx and Rx Half Transfer callback.
3168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
3173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 6782              		.loc 1 3173 1
 6783              		.cfi_startproc
 6784              		@ args = 0, pretend = 0, frame = 8
 6785              		@ frame_needed = 1, uses_anonymous_args = 0
 6786              		@ link register save eliminated.
 6787 0000 80B4     		push	{r7}
 6788              	.LCFI132:
 6789              		.cfi_def_cfa_offset 4
 6790              		.cfi_offset 7, -4
 6791 0002 83B0     		sub	sp, sp, #12
 6792              	.LCFI133:
 6793              		.cfi_def_cfa_offset 16
 6794 0004 00AF     		add	r7, sp, #0
 6795              	.LCFI134:
 6796              		.cfi_def_cfa_register 7
 6797 0006 7860     		str	r0, [r7, #4]
3174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
3179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 6798              		.loc 1 3180 1
 6799 0008 00BF     		nop
 6800 000a 0C37     		adds	r7, r7, #12
 6801              	.LCFI135:
 6802              		.cfi_def_cfa_offset 4
 6803 000c BD46     		mov	sp, r7
 6804              	.LCFI136:
 6805              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccwjY1CM.s 			page 176


 6806              		@ sp needed
 6807 000e 5DF8047B 		ldr	r7, [sp], #4
 6808              	.LCFI137:
 6809              		.cfi_restore 7
 6810              		.cfi_def_cfa_offset 0
 6811 0012 7047     		bx	lr
 6812              		.cfi_endproc
 6813              	.LFE355:
 6815              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 6816              		.align	1
 6817              		.weak	HAL_SPI_ErrorCallback
 6818              		.syntax unified
 6819              		.thumb
 6820              		.thumb_func
 6821              		.fpu fpv5-d16
 6823              	HAL_SPI_ErrorCallback:
 6824              	.LFB356:
3181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief SPI error callback.
3184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
3189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 6825              		.loc 1 3189 1
 6826              		.cfi_startproc
 6827              		@ args = 0, pretend = 0, frame = 8
 6828              		@ frame_needed = 1, uses_anonymous_args = 0
 6829              		@ link register save eliminated.
 6830 0000 80B4     		push	{r7}
 6831              	.LCFI138:
 6832              		.cfi_def_cfa_offset 4
 6833              		.cfi_offset 7, -4
 6834 0002 83B0     		sub	sp, sp, #12
 6835              	.LCFI139:
 6836              		.cfi_def_cfa_offset 16
 6837 0004 00AF     		add	r7, sp, #0
 6838              	.LCFI140:
 6839              		.cfi_def_cfa_register 7
 6840 0006 7860     		str	r0, [r7, #4]
3190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
3195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
3197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
3198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 6841              		.loc 1 3199 1
 6842 0008 00BF     		nop
 6843 000a 0C37     		adds	r7, r7, #12
 6844              	.LCFI141:
 6845              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccwjY1CM.s 			page 177


 6846 000c BD46     		mov	sp, r7
 6847              	.LCFI142:
 6848              		.cfi_def_cfa_register 13
 6849              		@ sp needed
 6850 000e 5DF8047B 		ldr	r7, [sp], #4
 6851              	.LCFI143:
 6852              		.cfi_restore 7
 6853              		.cfi_def_cfa_offset 0
 6854 0012 7047     		bx	lr
 6855              		.cfi_endproc
 6856              	.LFE356:
 6858              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 6859              		.align	1
 6860              		.weak	HAL_SPI_AbortCpltCallback
 6861              		.syntax unified
 6862              		.thumb
 6863              		.thumb_func
 6864              		.fpu fpv5-d16
 6866              	HAL_SPI_AbortCpltCallback:
 6867              	.LFB357:
3200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
3203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi SPI handle.
3204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
3207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 6868              		.loc 1 3207 1
 6869              		.cfi_startproc
 6870              		@ args = 0, pretend = 0, frame = 8
 6871              		@ frame_needed = 1, uses_anonymous_args = 0
 6872              		@ link register save eliminated.
 6873 0000 80B4     		push	{r7}
 6874              	.LCFI144:
 6875              		.cfi_def_cfa_offset 4
 6876              		.cfi_offset 7, -4
 6877 0002 83B0     		sub	sp, sp, #12
 6878              	.LCFI145:
 6879              		.cfi_def_cfa_offset 16
 6880 0004 00AF     		add	r7, sp, #0
 6881              	.LCFI146:
 6882              		.cfi_def_cfa_register 7
 6883 0006 7860     		str	r0, [r7, #4]
3208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
3213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 6884              		.loc 1 3214 1
 6885 0008 00BF     		nop
 6886 000a 0C37     		adds	r7, r7, #12
 6887              	.LCFI147:
 6888              		.cfi_def_cfa_offset 4
 6889 000c BD46     		mov	sp, r7
ARM GAS  /tmp/ccwjY1CM.s 			page 178


 6890              	.LCFI148:
 6891              		.cfi_def_cfa_register 13
 6892              		@ sp needed
 6893 000e 5DF8047B 		ldr	r7, [sp], #4
 6894              	.LCFI149:
 6895              		.cfi_restore 7
 6896              		.cfi_def_cfa_offset 0
 6897 0012 7047     		bx	lr
 6898              		.cfi_endproc
 6899              	.LFE357:
 6901              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 6902              		.align	1
 6903              		.global	HAL_SPI_GetState
 6904              		.syntax unified
 6905              		.thumb
 6906              		.thumb_func
 6907              		.fpu fpv5-d16
 6909              	HAL_SPI_GetState:
 6910              	.LFB358:
3215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
3218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
3221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief   SPI control functions
3222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
3223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @verbatim
3224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  ===============================================================================
3225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
3226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  ===============================================================================
3227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     [..]
3228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
3229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
3230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
3231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @endverbatim
3232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
3233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Return the SPI handle state.
3237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval SPI state
3240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
3242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 6911              		.loc 1 3242 1
 6912              		.cfi_startproc
 6913              		@ args = 0, pretend = 0, frame = 8
 6914              		@ frame_needed = 1, uses_anonymous_args = 0
 6915              		@ link register save eliminated.
 6916 0000 80B4     		push	{r7}
 6917              	.LCFI150:
 6918              		.cfi_def_cfa_offset 4
 6919              		.cfi_offset 7, -4
 6920 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccwjY1CM.s 			page 179


 6921              	.LCFI151:
 6922              		.cfi_def_cfa_offset 16
 6923 0004 00AF     		add	r7, sp, #0
 6924              	.LCFI152:
 6925              		.cfi_def_cfa_register 7
 6926 0006 7860     		str	r0, [r7, #4]
3243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Return SPI handle state */
3244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return hspi->State;
 6927              		.loc 1 3244 14
 6928 0008 7B68     		ldr	r3, [r7, #4]
 6929 000a 93F88130 		ldrb	r3, [r3, #129]
 6930 000e DBB2     		uxtb	r3, r3
3245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 6931              		.loc 1 3245 1
 6932 0010 1846     		mov	r0, r3
 6933 0012 0C37     		adds	r7, r7, #12
 6934              	.LCFI153:
 6935              		.cfi_def_cfa_offset 4
 6936 0014 BD46     		mov	sp, r7
 6937              	.LCFI154:
 6938              		.cfi_def_cfa_register 13
 6939              		@ sp needed
 6940 0016 5DF8047B 		ldr	r7, [sp], #4
 6941              	.LCFI155:
 6942              		.cfi_restore 7
 6943              		.cfi_def_cfa_offset 0
 6944 001a 7047     		bx	lr
 6945              		.cfi_endproc
 6946              	.LFE358:
 6948              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 6949              		.align	1
 6950              		.global	HAL_SPI_GetError
 6951              		.syntax unified
 6952              		.thumb
 6953              		.thumb_func
 6954              		.fpu fpv5-d16
 6956              	HAL_SPI_GetError:
 6957              	.LFB359:
3246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Return the SPI error code.
3249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval SPI error code in bitmap format
3252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
3254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 6958              		.loc 1 3254 1
 6959              		.cfi_startproc
 6960              		@ args = 0, pretend = 0, frame = 8
 6961              		@ frame_needed = 1, uses_anonymous_args = 0
 6962              		@ link register save eliminated.
 6963 0000 80B4     		push	{r7}
 6964              	.LCFI156:
 6965              		.cfi_def_cfa_offset 4
 6966              		.cfi_offset 7, -4
 6967 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccwjY1CM.s 			page 180


 6968              	.LCFI157:
 6969              		.cfi_def_cfa_offset 16
 6970 0004 00AF     		add	r7, sp, #0
 6971              	.LCFI158:
 6972              		.cfi_def_cfa_register 7
 6973 0006 7860     		str	r0, [r7, #4]
3255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Return SPI ErrorCode */
3256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return hspi->ErrorCode;
 6974              		.loc 1 3256 14
 6975 0008 7B68     		ldr	r3, [r7, #4]
 6976 000a D3F88430 		ldr	r3, [r3, #132]
3257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 6977              		.loc 1 3257 1
 6978 000e 1846     		mov	r0, r3
 6979 0010 0C37     		adds	r7, r7, #12
 6980              	.LCFI159:
 6981              		.cfi_def_cfa_offset 4
 6982 0012 BD46     		mov	sp, r7
 6983              	.LCFI160:
 6984              		.cfi_def_cfa_register 13
 6985              		@ sp needed
 6986 0014 5DF8047B 		ldr	r7, [sp], #4
 6987              	.LCFI161:
 6988              		.cfi_restore 7
 6989              		.cfi_def_cfa_offset 0
 6990 0018 7047     		bx	lr
 6991              		.cfi_endproc
 6992              	.LFE359:
 6994              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 6995              		.align	1
 6996              		.syntax unified
 6997              		.thumb
 6998              		.thumb_func
 6999              		.fpu fpv5-d16
 7001              	SPI_DMATransmitCplt:
 7002              	.LFB360:
3258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
3261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
3265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
3268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief   Private functions
3269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
3270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief DMA SPI transmit process complete callback.
3274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/ccwjY1CM.s 			page 181


3279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 7003              		.loc 1 3279 1
 7004              		.cfi_startproc
 7005              		@ args = 0, pretend = 0, frame = 16
 7006              		@ frame_needed = 1, uses_anonymous_args = 0
 7007 0000 80B5     		push	{r7, lr}
 7008              	.LCFI162:
 7009              		.cfi_def_cfa_offset 8
 7010              		.cfi_offset 7, -8
 7011              		.cfi_offset 14, -4
 7012 0002 84B0     		sub	sp, sp, #16
 7013              	.LCFI163:
 7014              		.cfi_def_cfa_offset 24
 7015 0004 00AF     		add	r7, sp, #0
 7016              	.LCFI164:
 7017              		.cfi_def_cfa_register 7
 7018 0006 7860     		str	r0, [r7, #4]
3280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7019              		.loc 1 3280 22
 7020 0008 7B68     		ldr	r3, [r7, #4]
 7021 000a 9B6B     		ldr	r3, [r3, #56]
 7022 000c FB60     		str	r3, [r7, #12]
3281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_ABORT)
 7023              		.loc 1 3282 11
 7024 000e FB68     		ldr	r3, [r7, #12]
 7025 0010 93F88130 		ldrb	r3, [r3, #129]
 7026 0014 DBB2     		uxtb	r3, r3
 7027              		.loc 1 3282 6
 7028 0016 072B     		cmp	r3, #7
 7029 0018 11D0     		beq	.L326
3283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
 7030              		.loc 1 3284 13
 7031 001a FB68     		ldr	r3, [r7, #12]
 7032 001c 9B6F     		ldr	r3, [r3, #120]
 7033              		.loc 1 3284 27
 7034 001e DB69     		ldr	r3, [r3, #28]
 7035              		.loc 1 3284 8
 7036 0020 B3F5807F 		cmp	r3, #256
 7037 0024 03D1     		bne	.L325
3285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxCpltCallback(hspi);
3288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_TxCpltCallback(hspi);
 7038              		.loc 1 3289 7
 7039 0026 F868     		ldr	r0, [r7, #12]
 7040 0028 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
3290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Enable EOT interrupt */
3295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
3296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccwjY1CM.s 			page 182


3298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 7041              		.loc 1 3298 1
 7042 002c 07E0     		b	.L326
 7043              	.L325:
3295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 7044              		.loc 1 3295 7
 7045 002e FB68     		ldr	r3, [r7, #12]
 7046 0030 1B68     		ldr	r3, [r3]
 7047 0032 1A69     		ldr	r2, [r3, #16]
 7048 0034 FB68     		ldr	r3, [r7, #12]
 7049 0036 1B68     		ldr	r3, [r3]
 7050 0038 42F00802 		orr	r2, r2, #8
 7051 003c 1A61     		str	r2, [r3, #16]
 7052              	.L326:
 7053              		.loc 1 3298 1
 7054 003e 00BF     		nop
 7055 0040 1037     		adds	r7, r7, #16
 7056              	.LCFI165:
 7057              		.cfi_def_cfa_offset 8
 7058 0042 BD46     		mov	sp, r7
 7059              	.LCFI166:
 7060              		.cfi_def_cfa_register 13
 7061              		@ sp needed
 7062 0044 80BD     		pop	{r7, pc}
 7063              		.cfi_endproc
 7064              	.LFE360:
 7066              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 7067              		.align	1
 7068              		.syntax unified
 7069              		.thumb
 7070              		.thumb_func
 7071              		.fpu fpv5-d16
 7073              	SPI_DMAReceiveCplt:
 7074              	.LFB361:
3299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief DMA SPI receive process complete callback.
3302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 7075              		.loc 1 3307 1
 7076              		.cfi_startproc
 7077              		@ args = 0, pretend = 0, frame = 16
 7078              		@ frame_needed = 1, uses_anonymous_args = 0
 7079 0000 80B5     		push	{r7, lr}
 7080              	.LCFI167:
 7081              		.cfi_def_cfa_offset 8
 7082              		.cfi_offset 7, -8
 7083              		.cfi_offset 14, -4
 7084 0002 84B0     		sub	sp, sp, #16
 7085              	.LCFI168:
 7086              		.cfi_def_cfa_offset 24
 7087 0004 00AF     		add	r7, sp, #0
 7088              	.LCFI169:
ARM GAS  /tmp/ccwjY1CM.s 			page 183


 7089              		.cfi_def_cfa_register 7
 7090 0006 7860     		str	r0, [r7, #4]
3308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7091              		.loc 1 3308 22
 7092 0008 7B68     		ldr	r3, [r7, #4]
 7093 000a 9B6B     		ldr	r3, [r3, #56]
 7094 000c FB60     		str	r3, [r7, #12]
3309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_ABORT)
 7095              		.loc 1 3310 11
 7096 000e FB68     		ldr	r3, [r7, #12]
 7097 0010 93F88130 		ldrb	r3, [r3, #129]
 7098 0014 DBB2     		uxtb	r3, r3
 7099              		.loc 1 3310 6
 7100 0016 072B     		cmp	r3, #7
 7101 0018 11D0     		beq	.L330
3311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.Mode == DMA_CIRCULAR)
 7102              		.loc 1 3312 13
 7103 001a FB68     		ldr	r3, [r7, #12]
 7104 001c DB6F     		ldr	r3, [r3, #124]
 7105              		.loc 1 3312 27
 7106 001e DB69     		ldr	r3, [r3, #28]
 7107              		.loc 1 3312 8
 7108 0020 B3F5807F 		cmp	r3, #256
 7109 0024 03D1     		bne	.L329
3313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
3316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
 7110              		.loc 1 3317 7
 7111 0026 F868     		ldr	r0, [r7, #12]
 7112 0028 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
3318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Enable EOT interrupt */
3323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
3324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 7113              		.loc 1 3326 1
 7114 002c 07E0     		b	.L330
 7115              	.L329:
3323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 7116              		.loc 1 3323 7
 7117 002e FB68     		ldr	r3, [r7, #12]
 7118 0030 1B68     		ldr	r3, [r3]
 7119 0032 1A69     		ldr	r2, [r3, #16]
 7120 0034 FB68     		ldr	r3, [r7, #12]
 7121 0036 1B68     		ldr	r3, [r3]
 7122 0038 42F00802 		orr	r2, r2, #8
 7123 003c 1A61     		str	r2, [r3, #16]
 7124              	.L330:
 7125              		.loc 1 3326 1
ARM GAS  /tmp/ccwjY1CM.s 			page 184


 7126 003e 00BF     		nop
 7127 0040 1037     		adds	r7, r7, #16
 7128              	.LCFI170:
 7129              		.cfi_def_cfa_offset 8
 7130 0042 BD46     		mov	sp, r7
 7131              	.LCFI171:
 7132              		.cfi_def_cfa_register 13
 7133              		@ sp needed
 7134 0044 80BD     		pop	{r7, pc}
 7135              		.cfi_endproc
 7136              	.LFE361:
 7138              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 7139              		.align	1
 7140              		.syntax unified
 7141              		.thumb
 7142              		.thumb_func
 7143              		.fpu fpv5-d16
 7145              	SPI_DMATransmitReceiveCplt:
 7146              	.LFB362:
3327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
3330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 7147              		.loc 1 3335 1
 7148              		.cfi_startproc
 7149              		@ args = 0, pretend = 0, frame = 16
 7150              		@ frame_needed = 1, uses_anonymous_args = 0
 7151 0000 80B5     		push	{r7, lr}
 7152              	.LCFI172:
 7153              		.cfi_def_cfa_offset 8
 7154              		.cfi_offset 7, -8
 7155              		.cfi_offset 14, -4
 7156 0002 84B0     		sub	sp, sp, #16
 7157              	.LCFI173:
 7158              		.cfi_def_cfa_offset 24
 7159 0004 00AF     		add	r7, sp, #0
 7160              	.LCFI174:
 7161              		.cfi_def_cfa_register 7
 7162 0006 7860     		str	r0, [r7, #4]
3336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7163              		.loc 1 3336 22
 7164 0008 7B68     		ldr	r3, [r7, #4]
 7165 000a 9B6B     		ldr	r3, [r3, #56]
 7166 000c FB60     		str	r3, [r7, #12]
3337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_ABORT)
 7167              		.loc 1 3338 11
 7168 000e FB68     		ldr	r3, [r7, #12]
 7169 0010 93F88130 		ldrb	r3, [r3, #129]
 7170 0014 DBB2     		uxtb	r3, r3
 7171              		.loc 1 3338 6
 7172 0016 072B     		cmp	r3, #7
ARM GAS  /tmp/ccwjY1CM.s 			page 185


 7173 0018 11D0     		beq	.L334
3339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
 7174              		.loc 1 3340 13
 7175 001a FB68     		ldr	r3, [r7, #12]
 7176 001c 9B6F     		ldr	r3, [r3, #120]
 7177              		.loc 1 3340 27
 7178 001e DB69     		ldr	r3, [r3, #28]
 7179              		.loc 1 3340 8
 7180 0020 B3F5807F 		cmp	r3, #256
 7181 0024 03D1     		bne	.L333
3341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxRxCpltCallback(hspi);
3344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_TxRxCpltCallback(hspi);
 7182              		.loc 1 3345 7
 7183 0026 F868     		ldr	r0, [r7, #12]
 7184 0028 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
3346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Enable EOT interrupt */
3351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
3352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 7185              		.loc 1 3354 1
 7186 002c 07E0     		b	.L334
 7187              	.L333:
3351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 7188              		.loc 1 3351 7
 7189 002e FB68     		ldr	r3, [r7, #12]
 7190 0030 1B68     		ldr	r3, [r3]
 7191 0032 1A69     		ldr	r2, [r3, #16]
 7192 0034 FB68     		ldr	r3, [r7, #12]
 7193 0036 1B68     		ldr	r3, [r3]
 7194 0038 42F00802 		orr	r2, r2, #8
 7195 003c 1A61     		str	r2, [r3, #16]
 7196              	.L334:
 7197              		.loc 1 3354 1
 7198 003e 00BF     		nop
 7199 0040 1037     		adds	r7, r7, #16
 7200              	.LCFI175:
 7201              		.cfi_def_cfa_offset 8
 7202 0042 BD46     		mov	sp, r7
 7203              	.LCFI176:
 7204              		.cfi_def_cfa_register 13
 7205              		@ sp needed
 7206 0044 80BD     		pop	{r7, pc}
 7207              		.cfi_endproc
 7208              	.LFE362:
 7210              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 7211              		.align	1
 7212              		.syntax unified
 7213              		.thumb
ARM GAS  /tmp/ccwjY1CM.s 			page 186


 7214              		.thumb_func
 7215              		.fpu fpv5-d16
 7217              	SPI_DMAHalfTransmitCplt:
 7218              	.LFB363:
3355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
3358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
3363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 7219              		.loc 1 3363 1
 7220              		.cfi_startproc
 7221              		@ args = 0, pretend = 0, frame = 16
 7222              		@ frame_needed = 1, uses_anonymous_args = 0
 7223 0000 80B5     		push	{r7, lr}
 7224              	.LCFI177:
 7225              		.cfi_def_cfa_offset 8
 7226              		.cfi_offset 7, -8
 7227              		.cfi_offset 14, -4
 7228 0002 84B0     		sub	sp, sp, #16
 7229              	.LCFI178:
 7230              		.cfi_def_cfa_offset 24
 7231 0004 00AF     		add	r7, sp, #0
 7232              	.LCFI179:
 7233              		.cfi_def_cfa_register 7
 7234 0006 7860     		str	r0, [r7, #4]
3364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7235              		.loc 1 3364 22
 7236 0008 7B68     		ldr	r3, [r7, #4]
 7237 000a 9B6B     		ldr	r3, [r3, #56]
 7238 000c FB60     		str	r3, [r7, #12]
3365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
3368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
 7239              		.loc 1 3369 3
 7240 000e F868     		ldr	r0, [r7, #12]
 7241 0010 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
3370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 7242              		.loc 1 3371 1
 7243 0014 00BF     		nop
 7244 0016 1037     		adds	r7, r7, #16
 7245              	.LCFI180:
 7246              		.cfi_def_cfa_offset 8
 7247 0018 BD46     		mov	sp, r7
 7248              	.LCFI181:
 7249              		.cfi_def_cfa_register 13
 7250              		@ sp needed
 7251 001a 80BD     		pop	{r7, pc}
 7252              		.cfi_endproc
 7253              	.LFE363:
 7255              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
ARM GAS  /tmp/ccwjY1CM.s 			page 187


 7256              		.align	1
 7257              		.syntax unified
 7258              		.thumb
 7259              		.thumb_func
 7260              		.fpu fpv5-d16
 7262              	SPI_DMAHalfReceiveCplt:
 7263              	.LFB364:
3372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
3375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
3380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 7264              		.loc 1 3380 1
 7265              		.cfi_startproc
 7266              		@ args = 0, pretend = 0, frame = 16
 7267              		@ frame_needed = 1, uses_anonymous_args = 0
 7268 0000 80B5     		push	{r7, lr}
 7269              	.LCFI182:
 7270              		.cfi_def_cfa_offset 8
 7271              		.cfi_offset 7, -8
 7272              		.cfi_offset 14, -4
 7273 0002 84B0     		sub	sp, sp, #16
 7274              	.LCFI183:
 7275              		.cfi_def_cfa_offset 24
 7276 0004 00AF     		add	r7, sp, #0
 7277              	.LCFI184:
 7278              		.cfi_def_cfa_register 7
 7279 0006 7860     		str	r0, [r7, #4]
3381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7280              		.loc 1 3381 22
 7281 0008 7B68     		ldr	r3, [r7, #4]
 7282 000a 9B6B     		ldr	r3, [r3, #56]
 7283 000c FB60     		str	r3, [r7, #12]
3382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
3385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
 7284              		.loc 1 3386 3
 7285 000e F868     		ldr	r0, [r7, #12]
 7286 0010 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
3387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 7287              		.loc 1 3388 1
 7288 0014 00BF     		nop
 7289 0016 1037     		adds	r7, r7, #16
 7290              	.LCFI185:
 7291              		.cfi_def_cfa_offset 8
 7292 0018 BD46     		mov	sp, r7
 7293              	.LCFI186:
 7294              		.cfi_def_cfa_register 13
 7295              		@ sp needed
 7296 001a 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccwjY1CM.s 			page 188


 7297              		.cfi_endproc
 7298              	.LFE364:
 7300              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 7301              		.align	1
 7302              		.syntax unified
 7303              		.thumb
 7304              		.thumb_func
 7305              		.fpu fpv5-d16
 7307              	SPI_DMAHalfTransmitReceiveCplt:
 7308              	.LFB365:
3389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
3392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 7309              		.loc 1 3397 1
 7310              		.cfi_startproc
 7311              		@ args = 0, pretend = 0, frame = 16
 7312              		@ frame_needed = 1, uses_anonymous_args = 0
 7313 0000 80B5     		push	{r7, lr}
 7314              	.LCFI187:
 7315              		.cfi_def_cfa_offset 8
 7316              		.cfi_offset 7, -8
 7317              		.cfi_offset 14, -4
 7318 0002 84B0     		sub	sp, sp, #16
 7319              	.LCFI188:
 7320              		.cfi_def_cfa_offset 24
 7321 0004 00AF     		add	r7, sp, #0
 7322              	.LCFI189:
 7323              		.cfi_def_cfa_register 7
 7324 0006 7860     		str	r0, [r7, #4]
3398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7325              		.loc 1 3398 22
 7326 0008 7B68     		ldr	r3, [r7, #4]
 7327 000a 9B6B     		ldr	r3, [r3, #56]
 7328 000c FB60     		str	r3, [r7, #12]
3399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
3402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
 7329              		.loc 1 3403 3
 7330 000e F868     		ldr	r0, [r7, #12]
 7331 0010 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
3404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 7332              		.loc 1 3405 1
 7333 0014 00BF     		nop
 7334 0016 1037     		adds	r7, r7, #16
 7335              	.LCFI190:
 7336              		.cfi_def_cfa_offset 8
 7337 0018 BD46     		mov	sp, r7
 7338              	.LCFI191:
ARM GAS  /tmp/ccwjY1CM.s 			page 189


 7339              		.cfi_def_cfa_register 13
 7340              		@ sp needed
 7341 001a 80BD     		pop	{r7, pc}
 7342              		.cfi_endproc
 7343              	.LFE365:
 7345              		.section	.text.SPI_DMAError,"ax",%progbits
 7346              		.align	1
 7347              		.syntax unified
 7348              		.thumb
 7349              		.thumb_func
 7350              		.fpu fpv5-d16
 7352              	SPI_DMAError:
 7353              	.LFB366:
3406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
3409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
3414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 7354              		.loc 1 3414 1
 7355              		.cfi_startproc
 7356              		@ args = 0, pretend = 0, frame = 16
 7357              		@ frame_needed = 1, uses_anonymous_args = 0
 7358 0000 80B5     		push	{r7, lr}
 7359              	.LCFI192:
 7360              		.cfi_def_cfa_offset 8
 7361              		.cfi_offset 7, -8
 7362              		.cfi_offset 14, -4
 7363 0002 84B0     		sub	sp, sp, #16
 7364              	.LCFI193:
 7365              		.cfi_def_cfa_offset 24
 7366 0004 00AF     		add	r7, sp, #0
 7367              	.LCFI194:
 7368              		.cfi_def_cfa_register 7
 7369 0006 7860     		str	r0, [r7, #4]
3415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7370              		.loc 1 3415 22
 7371 0008 7B68     		ldr	r3, [r7, #4]
 7372 000a 9B6B     		ldr	r3, [r3, #56]
 7373 000c FB60     		str	r3, [r7, #12]
3416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* if DMA error is FIFO error ignore it */
3418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_FE)
 7374              		.loc 1 3418 7
 7375 000e 7868     		ldr	r0, [r7, #4]
 7376 0010 FFF7FEFF 		bl	HAL_DMA_GetError
 7377 0014 0346     		mov	r3, r0
 7378              		.loc 1 3418 6
 7379 0016 022B     		cmp	r3, #2
 7380 0018 11D0     		beq	.L340
3419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call SPI standard close procedure */
3421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_CloseTransfer(hspi);
 7381              		.loc 1 3421 5
ARM GAS  /tmp/ccwjY1CM.s 			page 190


 7382 001a F868     		ldr	r0, [r7, #12]
 7383 001c FFF7FEFF 		bl	SPI_CloseTransfer
3422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 7384              		.loc 1 3423 5
 7385 0020 FB68     		ldr	r3, [r7, #12]
 7386 0022 D3F88430 		ldr	r3, [r3, #132]
 7387 0026 43F01002 		orr	r2, r3, #16
 7388 002a FB68     		ldr	r3, [r7, #12]
 7389 002c C3F88420 		str	r2, [r3, #132]
3424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 7390              		.loc 1 3424 17
 7391 0030 FB68     		ldr	r3, [r7, #12]
 7392 0032 0122     		movs	r2, #1
 7393 0034 83F88120 		strb	r2, [r3, #129]
3425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
 7394              		.loc 1 3428 5
 7395 0038 F868     		ldr	r0, [r7, #12]
 7396 003a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 7397              	.L340:
3429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 7398              		.loc 1 3431 1
 7399 003e 00BF     		nop
 7400 0040 1037     		adds	r7, r7, #16
 7401              	.LCFI195:
 7402              		.cfi_def_cfa_offset 8
 7403 0042 BD46     		mov	sp, r7
 7404              	.LCFI196:
 7405              		.cfi_def_cfa_register 13
 7406              		@ sp needed
 7407 0044 80BD     		pop	{r7, pc}
 7408              		.cfi_endproc
 7409              	.LFE366:
 7411              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 7412              		.align	1
 7413              		.syntax unified
 7414              		.thumb
 7415              		.thumb_func
 7416              		.fpu fpv5-d16
 7418              	SPI_DMAAbortOnError:
 7419              	.LFB367:
3432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
3435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma DMA handle.
3437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 7420              		.loc 1 3440 1
 7421              		.cfi_startproc
ARM GAS  /tmp/ccwjY1CM.s 			page 191


 7422              		@ args = 0, pretend = 0, frame = 16
 7423              		@ frame_needed = 1, uses_anonymous_args = 0
 7424 0000 80B5     		push	{r7, lr}
 7425              	.LCFI197:
 7426              		.cfi_def_cfa_offset 8
 7427              		.cfi_offset 7, -8
 7428              		.cfi_offset 14, -4
 7429 0002 84B0     		sub	sp, sp, #16
 7430              	.LCFI198:
 7431              		.cfi_def_cfa_offset 24
 7432 0004 00AF     		add	r7, sp, #0
 7433              	.LCFI199:
 7434              		.cfi_def_cfa_register 7
 7435 0006 7860     		str	r0, [r7, #4]
3441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7436              		.loc 1 3441 22
 7437 0008 7B68     		ldr	r3, [r7, #4]
 7438 000a 9B6B     		ldr	r3, [r3, #56]
 7439 000c FB60     		str	r3, [r7, #12]
3442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t) 0UL;
 7440              		.loc 1 3442 21
 7441 000e FB68     		ldr	r3, [r7, #12]
 7442 0010 0022     		movs	r2, #0
 7443 0012 A3F86A20 		strh	r2, [r3, #106]	@ movhi
3443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
 7444              		.loc 1 3443 21
 7445 0016 FB68     		ldr	r3, [r7, #12]
 7446 0018 0022     		movs	r2, #0
 7447 001a A3F86220 		strh	r2, [r3, #98]	@ movhi
3444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 7448              		.loc 1 3446 15
 7449 001e FB68     		ldr	r3, [r7, #12]
 7450 0020 0122     		movs	r2, #1
 7451 0022 83F88120 		strb	r2, [r3, #129]
3447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
 7452              		.loc 1 3451 3
 7453 0026 F868     		ldr	r0, [r7, #12]
 7454 0028 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
3452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 7455              		.loc 1 3453 1
 7456 002c 00BF     		nop
 7457 002e 1037     		adds	r7, r7, #16
 7458              	.LCFI200:
 7459              		.cfi_def_cfa_offset 8
 7460 0030 BD46     		mov	sp, r7
 7461              	.LCFI201:
 7462              		.cfi_def_cfa_register 13
 7463              		@ sp needed
 7464 0032 80BD     		pop	{r7, pc}
 7465              		.cfi_endproc
ARM GAS  /tmp/ccwjY1CM.s 			page 192


 7466              	.LFE367:
 7468              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 7469              		.align	1
 7470              		.syntax unified
 7471              		.thumb
 7472              		.thumb_func
 7473              		.fpu fpv5-d16
 7475              	SPI_DMATxAbortCallback:
 7476              	.LFB368:
3454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
3457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
3460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma DMA handle.
3461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 7477              		.loc 1 3464 1
 7478              		.cfi_startproc
 7479              		@ args = 0, pretend = 0, frame = 16
 7480              		@ frame_needed = 1, uses_anonymous_args = 0
 7481 0000 80B5     		push	{r7, lr}
 7482              	.LCFI202:
 7483              		.cfi_def_cfa_offset 8
 7484              		.cfi_offset 7, -8
 7485              		.cfi_offset 14, -4
 7486 0002 84B0     		sub	sp, sp, #16
 7487              	.LCFI203:
 7488              		.cfi_def_cfa_offset 24
 7489 0004 00AF     		add	r7, sp, #0
 7490              	.LCFI204:
 7491              		.cfi_def_cfa_register 7
 7492 0006 7860     		str	r0, [r7, #4]
3465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7493              		.loc 1 3465 22
 7494 0008 7B68     		ldr	r3, [r7, #4]
 7495 000a 9B6B     		ldr	r3, [r3, #56]
 7496 000c FB60     		str	r3, [r7, #12]
3466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
 7497              		.loc 1 3467 7
 7498 000e FB68     		ldr	r3, [r7, #12]
 7499 0010 9B6F     		ldr	r3, [r3, #120]
 7500              		.loc 1 3467 35
 7501 0012 0022     		movs	r2, #0
 7502 0014 1A65     		str	r2, [r3, #80]
3468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
 7503              		.loc 1 3470 11
 7504 0016 FB68     		ldr	r3, [r7, #12]
 7505 0018 DB6F     		ldr	r3, [r3, #124]
 7506              		.loc 1 3470 6
 7507 001a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccwjY1CM.s 			page 193


 7508 001c 04D0     		beq	.L343
3471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
 7509              		.loc 1 3472 13
 7510 001e FB68     		ldr	r3, [r7, #12]
 7511 0020 DB6F     		ldr	r3, [r3, #124]
 7512              		.loc 1 3472 21
 7513 0022 1B6D     		ldr	r3, [r3, #80]
 7514              		.loc 1 3472 8
 7515 0024 002B     		cmp	r3, #0
 7516 0026 0AD1     		bne	.L345
 7517              	.L343:
3473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return;
3475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call the Abort procedure */
3479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_AbortTransfer(hspi);
 7518              		.loc 1 3479 3
 7519 0028 F868     		ldr	r0, [r7, #12]
 7520 002a FFF7FEFF 		bl	SPI_AbortTransfer
3480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 7521              		.loc 1 3482 15
 7522 002e FB68     		ldr	r3, [r7, #12]
 7523 0030 0122     		movs	r2, #1
 7524 0032 83F88120 		strb	r2, [r3, #129]
3483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call user Abort complete callback */
3485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
 7525              		.loc 1 3488 3
 7526 0036 F868     		ldr	r0, [r7, #12]
 7527 0038 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 7528 003c 00E0     		b	.L342
 7529              	.L345:
3474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 7530              		.loc 1 3474 7
 7531 003e 00BF     		nop
 7532              	.L342:
3489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 7533              		.loc 1 3490 1
 7534 0040 1037     		adds	r7, r7, #16
 7535              	.LCFI205:
 7536              		.cfi_def_cfa_offset 8
 7537 0042 BD46     		mov	sp, r7
 7538              	.LCFI206:
 7539              		.cfi_def_cfa_register 13
 7540              		@ sp needed
 7541 0044 80BD     		pop	{r7, pc}
 7542              		.cfi_endproc
 7543              	.LFE368:
ARM GAS  /tmp/ccwjY1CM.s 			page 194


 7545              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 7546              		.align	1
 7547              		.syntax unified
 7548              		.thumb
 7549              		.thumb_func
 7550              		.fpu fpv5-d16
 7552              	SPI_DMARxAbortCallback:
 7553              	.LFB369:
3491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
3494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
3497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma DMA handle.
3498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 7554              		.loc 1 3501 1
 7555              		.cfi_startproc
 7556              		@ args = 0, pretend = 0, frame = 16
 7557              		@ frame_needed = 1, uses_anonymous_args = 0
 7558 0000 80B5     		push	{r7, lr}
 7559              	.LCFI207:
 7560              		.cfi_def_cfa_offset 8
 7561              		.cfi_offset 7, -8
 7562              		.cfi_offset 14, -4
 7563 0002 84B0     		sub	sp, sp, #16
 7564              	.LCFI208:
 7565              		.cfi_def_cfa_offset 24
 7566 0004 00AF     		add	r7, sp, #0
 7567              	.LCFI209:
 7568              		.cfi_def_cfa_register 7
 7569 0006 7860     		str	r0, [r7, #4]
3502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7570              		.loc 1 3502 22
 7571 0008 7B68     		ldr	r3, [r7, #4]
 7572 000a 9B6B     		ldr	r3, [r3, #56]
 7573 000c FB60     		str	r3, [r7, #12]
3503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 7574              		.loc 1 3504 7
 7575 000e FB68     		ldr	r3, [r7, #12]
 7576 0010 DB6F     		ldr	r3, [r3, #124]
 7577              		.loc 1 3504 35
 7578 0012 0022     		movs	r2, #0
 7579 0014 1A65     		str	r2, [r3, #80]
3505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
 7580              		.loc 1 3507 11
 7581 0016 FB68     		ldr	r3, [r7, #12]
 7582 0018 9B6F     		ldr	r3, [r3, #120]
 7583              		.loc 1 3507 6
 7584 001a 002B     		cmp	r3, #0
 7585 001c 04D0     		beq	.L347
ARM GAS  /tmp/ccwjY1CM.s 			page 195


3508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
 7586              		.loc 1 3509 13
 7587 001e FB68     		ldr	r3, [r7, #12]
 7588 0020 9B6F     		ldr	r3, [r3, #120]
 7589              		.loc 1 3509 21
 7590 0022 1B6D     		ldr	r3, [r3, #80]
 7591              		.loc 1 3509 8
 7592 0024 002B     		cmp	r3, #0
 7593 0026 0AD1     		bne	.L349
 7594              	.L347:
3510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return;
3512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call the Abort procedure */
3516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_AbortTransfer(hspi);
 7595              		.loc 1 3516 3
 7596 0028 F868     		ldr	r0, [r7, #12]
 7597 002a FFF7FEFF 		bl	SPI_AbortTransfer
3517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 7598              		.loc 1 3519 15
 7599 002e FB68     		ldr	r3, [r7, #12]
 7600 0030 0122     		movs	r2, #1
 7601 0032 83F88120 		strb	r2, [r3, #129]
3520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call user Abort complete callback */
3522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
 7602              		.loc 1 3525 3
 7603 0036 F868     		ldr	r0, [r7, #12]
 7604 0038 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 7605 003c 00E0     		b	.L346
 7606              	.L349:
3511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 7607              		.loc 1 3511 7
 7608 003e 00BF     		nop
 7609              	.L346:
3526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 7610              		.loc 1 3527 1
 7611 0040 1037     		adds	r7, r7, #16
 7612              	.LCFI210:
 7613              		.cfi_def_cfa_offset 8
 7614 0042 BD46     		mov	sp, r7
 7615              	.LCFI211:
 7616              		.cfi_def_cfa_register 13
 7617              		@ sp needed
 7618 0044 80BD     		pop	{r7, pc}
 7619              		.cfi_endproc
 7620              	.LFE369:
 7622              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
ARM GAS  /tmp/ccwjY1CM.s 			page 196


 7623              		.align	1
 7624              		.syntax unified
 7625              		.thumb
 7626              		.thumb_func
 7627              		.fpu fpv5-d16
 7629              	SPI_RxISR_8BIT:
 7630              	.LFB370:
3528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_8BIT(SPI_HandleTypeDef *hspi)
3536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 7631              		.loc 1 3536 1
 7632              		.cfi_startproc
 7633              		@ args = 0, pretend = 0, frame = 8
 7634              		@ frame_needed = 1, uses_anonymous_args = 0
 7635              		@ link register save eliminated.
 7636 0000 80B4     		push	{r7}
 7637              	.LCFI212:
 7638              		.cfi_def_cfa_offset 4
 7639              		.cfi_offset 7, -4
 7640 0002 83B0     		sub	sp, sp, #12
 7641              	.LCFI213:
 7642              		.cfi_def_cfa_offset 16
 7643 0004 00AF     		add	r7, sp, #0
 7644              	.LCFI214:
 7645              		.cfi_def_cfa_register 7
 7646 0006 7860     		str	r0, [r7, #4]
3537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
3538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((uint8_t *)hspi->pRxBuffPtr) = (*(__IO uint8_t *)&hspi->Instance->RXDR);
 7647              		.loc 1 3538 59
 7648 0008 7B68     		ldr	r3, [r7, #4]
 7649 000a 1B68     		ldr	r3, [r3]
 7650              		.loc 1 3538 54
 7651 000c 03F13002 		add	r2, r3, #48
 7652              		.loc 1 3538 20
 7653 0010 7B68     		ldr	r3, [r7, #4]
 7654 0012 5B6E     		ldr	r3, [r3, #100]
 7655              		.loc 1 3538 37
 7656 0014 1278     		ldrb	r2, [r2]
 7657 0016 D2B2     		uxtb	r2, r2
 7658              		.loc 1 3538 34
 7659 0018 1A70     		strb	r2, [r3]
3539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint8_t);
 7660              		.loc 1 3539 20
 7661 001a 7B68     		ldr	r3, [r7, #4]
 7662 001c 5B6E     		ldr	r3, [r3, #100]
 7663 001e 5A1C     		adds	r2, r3, #1
 7664 0020 7B68     		ldr	r3, [r7, #4]
 7665 0022 5A66     		str	r2, [r3, #100]
3540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount--;
 7666              		.loc 1 3540 7
 7667 0024 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccwjY1CM.s 			page 197


 7668 0026 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 7669 002a 9BB2     		uxth	r3, r3
 7670              		.loc 1 3540 20
 7671 002c 013B     		subs	r3, r3, #1
 7672 002e 9AB2     		uxth	r2, r3
 7673 0030 7B68     		ldr	r3, [r7, #4]
 7674 0032 A3F86A20 		strh	r2, [r3, #106]	@ movhi
3541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->RxXferCount == 0UL)
 7675              		.loc 1 3543 11
 7676 0036 7B68     		ldr	r3, [r7, #4]
 7677 0038 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 7678 003c 9BB2     		uxth	r3, r3
 7679              		.loc 1 3543 6
 7680 003e 002B     		cmp	r3, #0
 7681 0040 07D1     		bne	.L352
3544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
3546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferSize  = hspi->Reload.RxXferSize;
3550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = hspi->Reload.RxXferSize;
3551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pRxBuffPtr  = hspi->Reload.pRxBuffPtr;
3552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable RXP interrupts */
3556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
3557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable RXP interrupts */
3560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
 7682              		.loc 1 3560 5
 7683 0042 7B68     		ldr	r3, [r7, #4]
 7684 0044 1B68     		ldr	r3, [r3]
 7685 0046 1A69     		ldr	r2, [r3, #16]
 7686 0048 7B68     		ldr	r3, [r7, #4]
 7687 004a 1B68     		ldr	r3, [r3]
 7688 004c 22F00102 		bic	r2, r2, #1
 7689 0050 1A61     		str	r2, [r3, #16]
 7690              	.L352:
3561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
3562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 7691              		.loc 1 3563 1
 7692 0052 00BF     		nop
 7693 0054 0C37     		adds	r7, r7, #12
 7694              	.LCFI215:
 7695              		.cfi_def_cfa_offset 4
 7696 0056 BD46     		mov	sp, r7
 7697              	.LCFI216:
 7698              		.cfi_def_cfa_register 13
 7699              		@ sp needed
 7700 0058 5DF8047B 		ldr	r7, [sp], #4
 7701              	.LCFI217:
ARM GAS  /tmp/ccwjY1CM.s 			page 198


 7702              		.cfi_restore 7
 7703              		.cfi_def_cfa_offset 0
 7704 005c 7047     		bx	lr
 7705              		.cfi_endproc
 7706              	.LFE370:
 7708              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 7709              		.align	1
 7710              		.syntax unified
 7711              		.thumb
 7712              		.thumb_func
 7713              		.fpu fpv5-d16
 7715              	SPI_RxISR_16BIT:
 7716              	.LFB371:
3564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_16BIT(SPI_HandleTypeDef *hspi)
3573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 7717              		.loc 1 3573 1
 7718              		.cfi_startproc
 7719              		@ args = 0, pretend = 0, frame = 16
 7720              		@ frame_needed = 1, uses_anonymous_args = 0
 7721              		@ link register save eliminated.
 7722 0000 80B4     		push	{r7}
 7723              	.LCFI218:
 7724              		.cfi_def_cfa_offset 4
 7725              		.cfi_offset 7, -4
 7726 0002 85B0     		sub	sp, sp, #20
 7727              	.LCFI219:
 7728              		.cfi_def_cfa_offset 24
 7729 0004 00AF     		add	r7, sp, #0
 7730              	.LCFI220:
 7731              		.cfi_def_cfa_register 7
 7732 0006 7860     		str	r0, [r7, #4]
3574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
3576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
 7733              		.loc 1 3576 57
 7734 0008 7B68     		ldr	r3, [r7, #4]
 7735 000a 1B68     		ldr	r3, [r3]
 7736              		.loc 1 3576 18
 7737 000c 3033     		adds	r3, r3, #48
 7738 000e FB60     		str	r3, [r7, #12]
3577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 7739              		.loc 1 3578 21
 7740 0010 7B68     		ldr	r3, [r7, #4]
 7741 0012 5B6E     		ldr	r3, [r3, #100]
 7742              		.loc 1 3578 37
 7743 0014 FA68     		ldr	r2, [r7, #12]
 7744 0016 1288     		ldrh	r2, [r2]	@ movhi
 7745 0018 92B2     		uxth	r2, r2
ARM GAS  /tmp/ccwjY1CM.s 			page 199


 7746              		.loc 1 3578 35
 7747 001a 1A80     		strh	r2, [r3]	@ movhi
3579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (*(__IO uint16_t *)&hspi->Instance->RXDR);
3581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
3582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 7748              		.loc 1 3582 20
 7749 001c 7B68     		ldr	r3, [r7, #4]
 7750 001e 5B6E     		ldr	r3, [r3, #100]
 7751 0020 9A1C     		adds	r2, r3, #2
 7752 0022 7B68     		ldr	r3, [r7, #4]
 7753 0024 5A66     		str	r2, [r3, #100]
3583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount--;
 7754              		.loc 1 3583 7
 7755 0026 7B68     		ldr	r3, [r7, #4]
 7756 0028 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 7757 002c 9BB2     		uxth	r3, r3
 7758              		.loc 1 3583 20
 7759 002e 013B     		subs	r3, r3, #1
 7760 0030 9AB2     		uxth	r2, r3
 7761 0032 7B68     		ldr	r3, [r7, #4]
 7762 0034 A3F86A20 		strh	r2, [r3, #106]	@ movhi
3584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->RxXferCount == 0UL)
 7763              		.loc 1 3586 11
 7764 0038 7B68     		ldr	r3, [r7, #4]
 7765 003a B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 7766 003e 9BB2     		uxth	r3, r3
 7767              		.loc 1 3586 6
 7768 0040 002B     		cmp	r3, #0
 7769 0042 07D1     		bne	.L355
3587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
3589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferSize  = hspi->Reload.RxXferSize;
3593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = hspi->Reload.RxXferSize;
3594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pRxBuffPtr  = hspi->Reload.pRxBuffPtr;
3595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable RXP interrupts */
3599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
3600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable RXP interrupts */
3603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
 7770              		.loc 1 3603 5
 7771 0044 7B68     		ldr	r3, [r7, #4]
 7772 0046 1B68     		ldr	r3, [r3]
 7773 0048 1A69     		ldr	r2, [r3, #16]
 7774 004a 7B68     		ldr	r3, [r7, #4]
 7775 004c 1B68     		ldr	r3, [r3]
 7776 004e 22F00102 		bic	r2, r2, #1
 7777 0052 1A61     		str	r2, [r3, #16]
ARM GAS  /tmp/ccwjY1CM.s 			page 200


 7778              	.L355:
3604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
3605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 7779              		.loc 1 3606 1
 7780 0054 00BF     		nop
 7781 0056 1437     		adds	r7, r7, #20
 7782              	.LCFI221:
 7783              		.cfi_def_cfa_offset 4
 7784 0058 BD46     		mov	sp, r7
 7785              	.LCFI222:
 7786              		.cfi_def_cfa_register 13
 7787              		@ sp needed
 7788 005a 5DF8047B 		ldr	r7, [sp], #4
 7789              	.LCFI223:
 7790              		.cfi_restore 7
 7791              		.cfi_def_cfa_offset 0
 7792 005e 7047     		bx	lr
 7793              		.cfi_endproc
 7794              	.LFE371:
 7796              		.section	.text.SPI_RxISR_32BIT,"ax",%progbits
 7797              		.align	1
 7798              		.syntax unified
 7799              		.thumb
 7800              		.thumb_func
 7801              		.fpu fpv5-d16
 7803              	SPI_RxISR_32BIT:
 7804              	.LFB372:
3607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Manage the 32-bit receive in Interrupt context.
3611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_32BIT(SPI_HandleTypeDef *hspi)
3616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 7805              		.loc 1 3616 1
 7806              		.cfi_startproc
 7807              		@ args = 0, pretend = 0, frame = 8
 7808              		@ frame_needed = 1, uses_anonymous_args = 0
 7809              		@ link register save eliminated.
 7810 0000 80B4     		push	{r7}
 7811              	.LCFI224:
 7812              		.cfi_def_cfa_offset 4
 7813              		.cfi_offset 7, -4
 7814 0002 83B0     		sub	sp, sp, #12
 7815              	.LCFI225:
 7816              		.cfi_def_cfa_offset 16
 7817 0004 00AF     		add	r7, sp, #0
 7818              	.LCFI226:
 7819              		.cfi_def_cfa_register 7
 7820 0006 7860     		str	r0, [r7, #4]
3617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 32 Bit mode */
3618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((uint32_t *)hspi->pRxBuffPtr) = (*(__IO uint32_t *)&hspi->Instance->RXDR);
 7821              		.loc 1 3618 61
ARM GAS  /tmp/ccwjY1CM.s 			page 201


 7822 0008 7B68     		ldr	r3, [r7, #4]
 7823 000a 1A68     		ldr	r2, [r3]
 7824              		.loc 1 3618 21
 7825 000c 7B68     		ldr	r3, [r7, #4]
 7826 000e 5B6E     		ldr	r3, [r3, #100]
 7827              		.loc 1 3618 38
 7828 0010 126B     		ldr	r2, [r2, #48]
 7829              		.loc 1 3618 35
 7830 0012 1A60     		str	r2, [r3]
3619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint32_t);
 7831              		.loc 1 3619 20
 7832 0014 7B68     		ldr	r3, [r7, #4]
 7833 0016 5B6E     		ldr	r3, [r3, #100]
 7834 0018 1A1D     		adds	r2, r3, #4
 7835 001a 7B68     		ldr	r3, [r7, #4]
 7836 001c 5A66     		str	r2, [r3, #100]
3620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount--;
 7837              		.loc 1 3620 7
 7838 001e 7B68     		ldr	r3, [r7, #4]
 7839 0020 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 7840 0024 9BB2     		uxth	r3, r3
 7841              		.loc 1 3620 20
 7842 0026 013B     		subs	r3, r3, #1
 7843 0028 9AB2     		uxth	r2, r3
 7844 002a 7B68     		ldr	r3, [r7, #4]
 7845 002c A3F86A20 		strh	r2, [r3, #106]	@ movhi
3621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->RxXferCount == 0UL)
 7846              		.loc 1 3623 11
 7847 0030 7B68     		ldr	r3, [r7, #4]
 7848 0032 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 7849 0036 9BB2     		uxth	r3, r3
 7850              		.loc 1 3623 6
 7851 0038 002B     		cmp	r3, #0
 7852 003a 07D1     		bne	.L358
3624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
3626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferSize  = hspi->Reload.RxXferSize;
3630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = hspi->Reload.RxXferSize;
3631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pRxBuffPtr  = hspi->Reload.pRxBuffPtr;
3632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable RXP interrupts */
3636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
3637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable RXP interrupts */
3640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
 7853              		.loc 1 3640 5
 7854 003c 7B68     		ldr	r3, [r7, #4]
 7855 003e 1B68     		ldr	r3, [r3]
 7856 0040 1A69     		ldr	r2, [r3, #16]
ARM GAS  /tmp/ccwjY1CM.s 			page 202


 7857 0042 7B68     		ldr	r3, [r7, #4]
 7858 0044 1B68     		ldr	r3, [r3]
 7859 0046 22F00102 		bic	r2, r2, #1
 7860 004a 1A61     		str	r2, [r3, #16]
 7861              	.L358:
3641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
3642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 7862              		.loc 1 3643 1
 7863 004c 00BF     		nop
 7864 004e 0C37     		adds	r7, r7, #12
 7865              	.LCFI227:
 7866              		.cfi_def_cfa_offset 4
 7867 0050 BD46     		mov	sp, r7
 7868              	.LCFI228:
 7869              		.cfi_def_cfa_register 13
 7870              		@ sp needed
 7871 0052 5DF8047B 		ldr	r7, [sp], #4
 7872              	.LCFI229:
 7873              		.cfi_restore 7
 7874              		.cfi_def_cfa_offset 0
 7875 0056 7047     		bx	lr
 7876              		.cfi_endproc
 7877              	.LFE372:
 7879              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 7880              		.align	1
 7881              		.syntax unified
 7882              		.thumb
 7883              		.thumb_func
 7884              		.fpu fpv5-d16
 7886              	SPI_TxISR_8BIT:
 7887              	.LFB373:
3644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_8BIT(SPI_HandleTypeDef *hspi)
3653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 7888              		.loc 1 3653 1
 7889              		.cfi_startproc
 7890              		@ args = 0, pretend = 0, frame = 8
 7891              		@ frame_needed = 1, uses_anonymous_args = 0
 7892              		@ link register save eliminated.
 7893 0000 80B4     		push	{r7}
 7894              	.LCFI230:
 7895              		.cfi_def_cfa_offset 4
 7896              		.cfi_offset 7, -4
 7897 0002 83B0     		sub	sp, sp, #12
 7898              	.LCFI231:
 7899              		.cfi_def_cfa_offset 16
 7900 0004 00AF     		add	r7, sp, #0
 7901              	.LCFI232:
 7902              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccwjY1CM.s 			page 203


 7903 0006 7860     		str	r0, [r7, #4]
3654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
3655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->TXDR = *((uint8_t *)hspi->pTxBuffPtr);
 7904              		.loc 1 3655 61
 7905 0008 7B68     		ldr	r3, [r7, #4]
 7906 000a DA6D     		ldr	r2, [r3, #92]
 7907              		.loc 1 3655 25
 7908 000c 7B68     		ldr	r3, [r7, #4]
 7909 000e 1B68     		ldr	r3, [r3]
 7910              		.loc 1 3655 20
 7911 0010 2033     		adds	r3, r3, #32
 7912              		.loc 1 3655 44
 7913 0012 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7914              		.loc 1 3655 42
 7915 0014 1A70     		strb	r2, [r3]
3656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint8_t);
 7916              		.loc 1 3656 20
 7917 0016 7B68     		ldr	r3, [r7, #4]
 7918 0018 DB6D     		ldr	r3, [r3, #92]
 7919 001a 5A1C     		adds	r2, r3, #1
 7920 001c 7B68     		ldr	r3, [r7, #4]
 7921 001e DA65     		str	r2, [r3, #92]
3657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount--;
 7922              		.loc 1 3657 7
 7923 0020 7B68     		ldr	r3, [r7, #4]
 7924 0022 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 7925 0026 9BB2     		uxth	r3, r3
 7926              		.loc 1 3657 20
 7927 0028 013B     		subs	r3, r3, #1
 7928 002a 9AB2     		uxth	r2, r3
 7929 002c 7B68     		ldr	r3, [r7, #4]
 7930 002e A3F86220 		strh	r2, [r3, #98]	@ movhi
3658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->TxXferCount == 0UL)
 7931              		.loc 1 3660 11
 7932 0032 7B68     		ldr	r3, [r7, #4]
 7933 0034 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 7934 0038 9BB2     		uxth	r3, r3
 7935              		.loc 1 3660 6
 7936 003a 002B     		cmp	r3, #0
 7937 003c 07D1     		bne	.L361
3661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
3663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferSize  = hspi->Reload.TxXferSize;
3667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = hspi->Reload.TxXferSize;
3668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pTxBuffPtr  = hspi->Reload.pTxBuffPtr;
3669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable TXP interrupts */
3673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
3674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
ARM GAS  /tmp/ccwjY1CM.s 			page 204


3676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable TXP interrupts */
3677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
 7938              		.loc 1 3677 5
 7939 003e 7B68     		ldr	r3, [r7, #4]
 7940 0040 1B68     		ldr	r3, [r3]
 7941 0042 1A69     		ldr	r2, [r3, #16]
 7942 0044 7B68     		ldr	r3, [r7, #4]
 7943 0046 1B68     		ldr	r3, [r3]
 7944 0048 22F00202 		bic	r2, r2, #2
 7945 004c 1A61     		str	r2, [r3, #16]
 7946              	.L361:
3678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
3679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 7947              		.loc 1 3680 1
 7948 004e 00BF     		nop
 7949 0050 0C37     		adds	r7, r7, #12
 7950              	.LCFI233:
 7951              		.cfi_def_cfa_offset 4
 7952 0052 BD46     		mov	sp, r7
 7953              	.LCFI234:
 7954              		.cfi_def_cfa_register 13
 7955              		@ sp needed
 7956 0054 5DF8047B 		ldr	r7, [sp], #4
 7957              	.LCFI235:
 7958              		.cfi_restore 7
 7959              		.cfi_def_cfa_offset 0
 7960 0058 7047     		bx	lr
 7961              		.cfi_endproc
 7962              	.LFE373:
 7964              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 7965              		.align	1
 7966              		.syntax unified
 7967              		.thumb
 7968              		.thumb_func
 7969              		.fpu fpv5-d16
 7971              	SPI_TxISR_16BIT:
 7972              	.LFB374:
3681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_16BIT(SPI_HandleTypeDef *hspi)
3689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 7973              		.loc 1 3689 1
 7974              		.cfi_startproc
 7975              		@ args = 0, pretend = 0, frame = 16
 7976              		@ frame_needed = 1, uses_anonymous_args = 0
 7977              		@ link register save eliminated.
 7978 0000 80B4     		push	{r7}
 7979              	.LCFI236:
 7980              		.cfi_def_cfa_offset 4
 7981              		.cfi_offset 7, -4
 7982 0002 85B0     		sub	sp, sp, #20
ARM GAS  /tmp/ccwjY1CM.s 			page 205


 7983              	.LCFI237:
 7984              		.cfi_def_cfa_offset 24
 7985 0004 00AF     		add	r7, sp, #0
 7986              	.LCFI238:
 7987              		.cfi_def_cfa_register 7
 7988 0006 7860     		str	r0, [r7, #4]
3690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
3692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
 7989              		.loc 1 3692 57
 7990 0008 7B68     		ldr	r3, [r7, #4]
 7991 000a 1B68     		ldr	r3, [r3]
 7992              		.loc 1 3692 18
 7993 000c 2033     		adds	r3, r3, #32
 7994 000e FB60     		str	r3, [r7, #12]
3693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *ptxdr_16bits = *((uint16_t *)hspi->pTxBuffPtr);
 7995              		.loc 1 3694 37
 7996 0010 7B68     		ldr	r3, [r7, #4]
 7997 0012 DB6D     		ldr	r3, [r3, #92]
 7998              		.loc 1 3694 19
 7999 0014 1A88     		ldrh	r2, [r3]
 8000              		.loc 1 3694 17
 8001 0016 FB68     		ldr	r3, [r7, #12]
 8002 0018 1A80     		strh	r2, [r3]	@ movhi
3695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((__IO uint16_t *)&hspi->Instance->TXDR) = *((uint16_t *)hspi->pTxBuffPtr);
3697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
3698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 8003              		.loc 1 3698 20
 8004 001a 7B68     		ldr	r3, [r7, #4]
 8005 001c DB6D     		ldr	r3, [r3, #92]
 8006 001e 9A1C     		adds	r2, r3, #2
 8007 0020 7B68     		ldr	r3, [r7, #4]
 8008 0022 DA65     		str	r2, [r3, #92]
3699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount--;
 8009              		.loc 1 3699 7
 8010 0024 7B68     		ldr	r3, [r7, #4]
 8011 0026 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 8012 002a 9BB2     		uxth	r3, r3
 8013              		.loc 1 3699 20
 8014 002c 013B     		subs	r3, r3, #1
 8015 002e 9AB2     		uxth	r2, r3
 8016 0030 7B68     		ldr	r3, [r7, #4]
 8017 0032 A3F86220 		strh	r2, [r3, #98]	@ movhi
3700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->TxXferCount == 0UL)
 8018              		.loc 1 3702 11
 8019 0036 7B68     		ldr	r3, [r7, #4]
 8020 0038 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 8021 003c 9BB2     		uxth	r3, r3
 8022              		.loc 1 3702 6
 8023 003e 002B     		cmp	r3, #0
 8024 0040 07D1     		bne	.L364
3703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
ARM GAS  /tmp/ccwjY1CM.s 			page 206


3705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferSize  = hspi->Reload.TxXferSize;
3709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = hspi->Reload.TxXferSize;
3710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pTxBuffPtr  = hspi->Reload.pTxBuffPtr;
3711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable TXP interrupts */
3715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
3716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable TXP interrupts */
3719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
 8025              		.loc 1 3719 5
 8026 0042 7B68     		ldr	r3, [r7, #4]
 8027 0044 1B68     		ldr	r3, [r3]
 8028 0046 1A69     		ldr	r2, [r3, #16]
 8029 0048 7B68     		ldr	r3, [r7, #4]
 8030 004a 1B68     		ldr	r3, [r3]
 8031 004c 22F00202 		bic	r2, r2, #2
 8032 0050 1A61     		str	r2, [r3, #16]
 8033              	.L364:
3720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
3721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 8034              		.loc 1 3722 1
 8035 0052 00BF     		nop
 8036 0054 1437     		adds	r7, r7, #20
 8037              	.LCFI239:
 8038              		.cfi_def_cfa_offset 4
 8039 0056 BD46     		mov	sp, r7
 8040              	.LCFI240:
 8041              		.cfi_def_cfa_register 13
 8042              		@ sp needed
 8043 0058 5DF8047B 		ldr	r7, [sp], #4
 8044              	.LCFI241:
 8045              		.cfi_restore 7
 8046              		.cfi_def_cfa_offset 0
 8047 005c 7047     		bx	lr
 8048              		.cfi_endproc
 8049              	.LFE374:
 8051              		.section	.text.SPI_TxISR_32BIT,"ax",%progbits
 8052              		.align	1
 8053              		.syntax unified
 8054              		.thumb
 8055              		.thumb_func
 8056              		.fpu fpv5-d16
 8058              	SPI_TxISR_32BIT:
 8059              	.LFB375:
3723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Handle the data 32-bit transmit in Interrupt mode.
3726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
ARM GAS  /tmp/ccwjY1CM.s 			page 207


3729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_32BIT(SPI_HandleTypeDef *hspi)
3731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 8060              		.loc 1 3731 1
 8061              		.cfi_startproc
 8062              		@ args = 0, pretend = 0, frame = 8
 8063              		@ frame_needed = 1, uses_anonymous_args = 0
 8064              		@ link register save eliminated.
 8065 0000 80B4     		push	{r7}
 8066              	.LCFI242:
 8067              		.cfi_def_cfa_offset 4
 8068              		.cfi_offset 7, -4
 8069 0002 83B0     		sub	sp, sp, #12
 8070              	.LCFI243:
 8071              		.cfi_def_cfa_offset 16
 8072 0004 00AF     		add	r7, sp, #0
 8073              	.LCFI244:
 8074              		.cfi_def_cfa_register 7
 8075 0006 7860     		str	r0, [r7, #4]
3732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 32 Bit mode */
3733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
 8076              		.loc 1 3733 65
 8077 0008 7B68     		ldr	r3, [r7, #4]
 8078 000a DA6D     		ldr	r2, [r3, #92]
 8079              		.loc 1 3733 27
 8080 000c 7B68     		ldr	r3, [r7, #4]
 8081 000e 1B68     		ldr	r3, [r3]
 8082              		.loc 1 3733 47
 8083 0010 1268     		ldr	r2, [r2]
 8084              		.loc 1 3733 45
 8085 0012 1A62     		str	r2, [r3, #32]
3734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint32_t);
 8086              		.loc 1 3734 20
 8087 0014 7B68     		ldr	r3, [r7, #4]
 8088 0016 DB6D     		ldr	r3, [r3, #92]
 8089 0018 1A1D     		adds	r2, r3, #4
 8090 001a 7B68     		ldr	r3, [r7, #4]
 8091 001c DA65     		str	r2, [r3, #92]
3735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount--;
 8092              		.loc 1 3735 7
 8093 001e 7B68     		ldr	r3, [r7, #4]
 8094 0020 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 8095 0024 9BB2     		uxth	r3, r3
 8096              		.loc 1 3735 20
 8097 0026 013B     		subs	r3, r3, #1
 8098 0028 9AB2     		uxth	r2, r3
 8099 002a 7B68     		ldr	r3, [r7, #4]
 8100 002c A3F86220 		strh	r2, [r3, #98]	@ movhi
3736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->TxXferCount == 0UL)
 8101              		.loc 1 3738 11
 8102 0030 7B68     		ldr	r3, [r7, #4]
 8103 0032 B3F86230 		ldrh	r3, [r3, #98]	@ movhi
 8104 0036 9BB2     		uxth	r3, r3
 8105              		.loc 1 3738 6
 8106 0038 002B     		cmp	r3, #0
ARM GAS  /tmp/ccwjY1CM.s 			page 208


 8107 003a 07D1     		bne	.L367
3739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
3741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferSize  = hspi->Reload.TxXferSize;
3745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = hspi->Reload.TxXferSize;
3746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pTxBuffPtr  = hspi->Reload.pTxBuffPtr;
3747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable TXP interrupts */
3751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
3752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable TXP interrupts */
3755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
 8108              		.loc 1 3755 5
 8109 003c 7B68     		ldr	r3, [r7, #4]
 8110 003e 1B68     		ldr	r3, [r3]
 8111 0040 1A69     		ldr	r2, [r3, #16]
 8112 0042 7B68     		ldr	r3, [r7, #4]
 8113 0044 1B68     		ldr	r3, [r3]
 8114 0046 22F00202 		bic	r2, r2, #2
 8115 004a 1A61     		str	r2, [r3, #16]
 8116              	.L367:
3756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
3757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 8117              		.loc 1 3758 1
 8118 004c 00BF     		nop
 8119 004e 0C37     		adds	r7, r7, #12
 8120              	.LCFI245:
 8121              		.cfi_def_cfa_offset 4
 8122 0050 BD46     		mov	sp, r7
 8123              	.LCFI246:
 8124              		.cfi_def_cfa_register 13
 8125              		@ sp needed
 8126 0052 5DF8047B 		ldr	r7, [sp], #4
 8127              	.LCFI247:
 8128              		.cfi_restore 7
 8129              		.cfi_def_cfa_offset 0
 8130 0056 7047     		bx	lr
 8131              		.cfi_endproc
 8132              	.LFE375:
 8134              		.section	.text.SPI_AbortTransfer,"ax",%progbits
 8135              		.align	1
 8136              		.syntax unified
 8137              		.thumb
 8138              		.thumb_func
 8139              		.fpu fpv5-d16
 8141              	SPI_AbortTransfer:
 8142              	.LFB376:
3759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Abort Transfer and clear flags.
ARM GAS  /tmp/ccwjY1CM.s 			page 209


3762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_AbortTransfer(SPI_HandleTypeDef *hspi)
3767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 8143              		.loc 1 3767 1
 8144              		.cfi_startproc
 8145              		@ args = 0, pretend = 0, frame = 8
 8146              		@ frame_needed = 1, uses_anonymous_args = 0
 8147              		@ link register save eliminated.
 8148 0000 80B4     		push	{r7}
 8149              	.LCFI248:
 8150              		.cfi_def_cfa_offset 4
 8151              		.cfi_offset 7, -4
 8152 0002 83B0     		sub	sp, sp, #12
 8153              	.LCFI249:
 8154              		.cfi_def_cfa_offset 16
 8155 0004 00AF     		add	r7, sp, #0
 8156              	.LCFI250:
 8157              		.cfi_def_cfa_register 7
 8158 0006 7860     		str	r0, [r7, #4]
3768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable SPI peripheral */
3769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 8159              		.loc 1 3769 3
 8160 0008 7B68     		ldr	r3, [r7, #4]
 8161 000a 1B68     		ldr	r3, [r3]
 8162 000c 1A68     		ldr	r2, [r3]
 8163 000e 7B68     		ldr	r3, [r7, #4]
 8164 0010 1B68     		ldr	r3, [r3]
 8165 0012 22F00102 		bic	r2, r2, #1
 8166 0016 1A60     		str	r2, [r3]
3770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable ITs */
3772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_RXP | SPI_IT_DXP | SPI_IT_UDR | SPI_
 8167              		.loc 1 3772 3
 8168 0018 7B68     		ldr	r3, [r7, #4]
 8169 001a 1B68     		ldr	r3, [r3]
 8170 001c 1969     		ldr	r1, [r3, #16]
 8171 001e 7B68     		ldr	r3, [r7, #4]
 8172 0020 1A68     		ldr	r2, [r3]
 8173 0022 284B     		ldr	r3, .L369
 8174 0024 0B40     		ands	r3, r3, r1
 8175 0026 1361     		str	r3, [r2, #16]
3773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Clear the Status flags in the SR register */
3775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_EOTFLAG(hspi);
 8176              		.loc 1 3775 3
 8177 0028 7B68     		ldr	r3, [r7, #4]
 8178 002a 1B68     		ldr	r3, [r3]
 8179 002c 9A69     		ldr	r2, [r3, #24]
 8180 002e 7B68     		ldr	r3, [r7, #4]
 8181 0030 1B68     		ldr	r3, [r3]
 8182 0032 42F00802 		orr	r2, r2, #8
 8183 0036 9A61     		str	r2, [r3, #24]
3776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 8184              		.loc 1 3776 3
ARM GAS  /tmp/ccwjY1CM.s 			page 210


 8185 0038 7B68     		ldr	r3, [r7, #4]
 8186 003a 1B68     		ldr	r3, [r3]
 8187 003c 9A69     		ldr	r2, [r3, #24]
 8188 003e 7B68     		ldr	r3, [r7, #4]
 8189 0040 1B68     		ldr	r3, [r3]
 8190 0042 42F01002 		orr	r2, r2, #16
 8191 0046 9A61     		str	r2, [r3, #24]
3777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable Tx DMA Request */
3779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 8192              		.loc 1 3779 3
 8193 0048 7B68     		ldr	r3, [r7, #4]
 8194 004a 1B68     		ldr	r3, [r3]
 8195 004c 9A68     		ldr	r2, [r3, #8]
 8196 004e 7B68     		ldr	r3, [r7, #4]
 8197 0050 1B68     		ldr	r3, [r3]
 8198 0052 22F44042 		bic	r2, r2, #49152
 8199 0056 9A60     		str	r2, [r3, #8]
3780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8200              		.loc 1 3782 3
 8201 0058 7B68     		ldr	r3, [r7, #4]
 8202 005a 1B68     		ldr	r3, [r3]
 8203 005c 9A69     		ldr	r2, [r3, #24]
 8204 005e 7B68     		ldr	r3, [r7, #4]
 8205 0060 1B68     		ldr	r3, [r3]
 8206 0062 42F04002 		orr	r2, r2, #64
 8207 0066 9A61     		str	r2, [r3, #24]
3783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_UDRFLAG(hspi);
 8208              		.loc 1 3783 3
 8209 0068 7B68     		ldr	r3, [r7, #4]
 8210 006a 1B68     		ldr	r3, [r3]
 8211 006c 9A69     		ldr	r2, [r3, #24]
 8212 006e 7B68     		ldr	r3, [r7, #4]
 8213 0070 1B68     		ldr	r3, [r3]
 8214 0072 42F02002 		orr	r2, r2, #32
 8215 0076 9A61     		str	r2, [r3, #24]
3784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 8216              		.loc 1 3784 3
 8217 0078 7B68     		ldr	r3, [r7, #4]
 8218 007a 1B68     		ldr	r3, [r3]
 8219 007c 9A69     		ldr	r2, [r3, #24]
 8220 007e 7B68     		ldr	r3, [r7, #4]
 8221 0080 1B68     		ldr	r3, [r3]
 8222 0082 42F48072 		orr	r2, r2, #256
 8223 0086 9A61     		str	r2, [r3, #24]
3785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8224              		.loc 1 3785 3
 8225 0088 7B68     		ldr	r3, [r7, #4]
 8226 008a 1B68     		ldr	r3, [r3]
 8227 008c 9A69     		ldr	r2, [r3, #24]
 8228 008e 7B68     		ldr	r3, [r7, #4]
 8229 0090 1B68     		ldr	r3, [r3]
 8230 0092 42F40072 		orr	r2, r2, #512
 8231 0096 9A61     		str	r2, [r3, #24]
3786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_SUSPFLAG(hspi);
ARM GAS  /tmp/ccwjY1CM.s 			page 211


 8232              		.loc 1 3786 3
 8233 0098 7B68     		ldr	r3, [r7, #4]
 8234 009a 1B68     		ldr	r3, [r3]
 8235 009c 9A69     		ldr	r2, [r3, #24]
 8236 009e 7B68     		ldr	r3, [r7, #4]
 8237 00a0 1B68     		ldr	r3, [r3]
 8238 00a2 42F40062 		orr	r2, r2, #2048
 8239 00a6 9A61     		str	r2, [r3, #24]
3787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t)0UL;
 8240              		.loc 1 3792 21
 8241 00a8 7B68     		ldr	r3, [r7, #4]
 8242 00aa 0022     		movs	r2, #0
 8243 00ac A3F86220 		strh	r2, [r3, #98]	@ movhi
3793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t)0UL;
 8244              		.loc 1 3793 21
 8245 00b0 7B68     		ldr	r3, [r7, #4]
 8246 00b2 0022     		movs	r2, #0
 8247 00b4 A3F86A20 		strh	r2, [r3, #106]	@ movhi
3794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 8248              		.loc 1 3794 1
 8249 00b8 00BF     		nop
 8250 00ba 0C37     		adds	r7, r7, #12
 8251              	.LCFI251:
 8252              		.cfi_def_cfa_offset 4
 8253 00bc BD46     		mov	sp, r7
 8254              	.LCFI252:
 8255              		.cfi_def_cfa_register 13
 8256              		@ sp needed
 8257 00be 5DF8047B 		ldr	r7, [sp], #4
 8258              	.LCFI253:
 8259              		.cfi_restore 7
 8260              		.cfi_def_cfa_offset 0
 8261 00c2 7047     		bx	lr
 8262              	.L370:
 8263              		.align	2
 8264              	.L369:
 8265 00c4 90FCFFFF 		.word	-880
 8266              		.cfi_endproc
 8267              	.LFE376:
 8269              		.section	.text.SPI_CloseTransfer,"ax",%progbits
 8270              		.align	1
 8271              		.syntax unified
 8272              		.thumb
 8273              		.thumb_func
 8274              		.fpu fpv5-d16
 8276              	SPI_CloseTransfer:
 8277              	.LFB377:
3795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Close Transfer and clear flags.
3799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccwjY1CM.s 			page 212


3800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL_ERROR: if any error detected
3802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** *         HAL_OK: if nothing detected
3803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_CloseTransfer(SPI_HandleTypeDef *hspi)
3805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 8278              		.loc 1 3805 1
 8279              		.cfi_startproc
 8280              		@ args = 0, pretend = 0, frame = 16
 8281              		@ frame_needed = 1, uses_anonymous_args = 0
 8282              		@ link register save eliminated.
 8283 0000 80B4     		push	{r7}
 8284              	.LCFI254:
 8285              		.cfi_def_cfa_offset 4
 8286              		.cfi_offset 7, -4
 8287 0002 85B0     		sub	sp, sp, #20
 8288              	.LCFI255:
 8289              		.cfi_def_cfa_offset 24
 8290 0004 00AF     		add	r7, sp, #0
 8291              	.LCFI256:
 8292              		.cfi_def_cfa_register 7
 8293 0006 7860     		str	r0, [r7, #4]
3806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t itflag = hspi->Instance->SR;
 8294              		.loc 1 3806 25
 8295 0008 7B68     		ldr	r3, [r7, #4]
 8296 000a 1B68     		ldr	r3, [r3]
 8297              		.loc 1 3806 12
 8298 000c 5B69     		ldr	r3, [r3, #20]
 8299 000e FB60     		str	r3, [r7, #12]
3807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_EOTFLAG(hspi);
 8300              		.loc 1 3808 3
 8301 0010 7B68     		ldr	r3, [r7, #4]
 8302 0012 1B68     		ldr	r3, [r3]
 8303 0014 9A69     		ldr	r2, [r3, #24]
 8304 0016 7B68     		ldr	r3, [r7, #4]
 8305 0018 1B68     		ldr	r3, [r3]
 8306 001a 42F00802 		orr	r2, r2, #8
 8307 001e 9A61     		str	r2, [r3, #24]
3809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 8308              		.loc 1 3809 3
 8309 0020 7B68     		ldr	r3, [r7, #4]
 8310 0022 1B68     		ldr	r3, [r3]
 8311 0024 9A69     		ldr	r2, [r3, #24]
 8312 0026 7B68     		ldr	r3, [r7, #4]
 8313 0028 1B68     		ldr	r3, [r3]
 8314 002a 42F01002 		orr	r2, r2, #16
 8315 002e 9A61     		str	r2, [r3, #24]
3810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable SPI peripheral */
3812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 8316              		.loc 1 3812 3
 8317 0030 7B68     		ldr	r3, [r7, #4]
 8318 0032 1B68     		ldr	r3, [r3]
 8319 0034 1A68     		ldr	r2, [r3]
 8320 0036 7B68     		ldr	r3, [r7, #4]
 8321 0038 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccwjY1CM.s 			page 213


 8322 003a 22F00102 		bic	r2, r2, #1
 8323 003e 1A60     		str	r2, [r3]
3813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable ITs */
3815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_RXP | SPI_IT_DXP | SPI_IT_UDR | SPI_
 8324              		.loc 1 3815 3
 8325 0040 7B68     		ldr	r3, [r7, #4]
 8326 0042 1B68     		ldr	r3, [r3]
 8327 0044 1969     		ldr	r1, [r3, #16]
 8328 0046 7B68     		ldr	r3, [r7, #4]
 8329 0048 1A68     		ldr	r2, [r3]
 8330 004a 3C4B     		ldr	r3, .L376
 8331 004c 0B40     		ands	r3, r3, r1
 8332 004e 1361     		str	r3, [r2, #16]
3816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable Tx DMA Request */
3818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 8333              		.loc 1 3818 3
 8334 0050 7B68     		ldr	r3, [r7, #4]
 8335 0052 1B68     		ldr	r3, [r3]
 8336 0054 9A68     		ldr	r2, [r3, #8]
 8337 0056 7B68     		ldr	r3, [r7, #4]
 8338 0058 1B68     		ldr	r3, [r3]
 8339 005a 22F44042 		bic	r2, r2, #49152
 8340 005e 9A60     		str	r2, [r3, #8]
3819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Report UnderRun error for non RX Only communication */
3821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8341              		.loc 1 3821 11
 8342 0060 7B68     		ldr	r3, [r7, #4]
 8343 0062 93F88130 		ldrb	r3, [r3, #129]
 8344 0066 DBB2     		uxtb	r3, r3
 8345              		.loc 1 3821 6
 8346 0068 042B     		cmp	r3, #4
 8347 006a 14D0     		beq	.L372
3822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((itflag & SPI_FLAG_UDR) != 0UL)
 8348              		.loc 1 3823 17
 8349 006c FB68     		ldr	r3, [r7, #12]
 8350 006e 03F02003 		and	r3, r3, #32
 8351              		.loc 1 3823 8
 8352 0072 002B     		cmp	r3, #0
 8353 0074 0FD0     		beq	.L372
3824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 8354              		.loc 1 3825 7
 8355 0076 7B68     		ldr	r3, [r7, #4]
 8356 0078 D3F88430 		ldr	r3, [r3, #132]
 8357 007c 43F08002 		orr	r2, r3, #128
 8358 0080 7B68     		ldr	r3, [r7, #4]
 8359 0082 C3F88420 		str	r2, [r3, #132]
3826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_UDRFLAG(hspi);
 8360              		.loc 1 3826 7
 8361 0086 7B68     		ldr	r3, [r7, #4]
 8362 0088 1B68     		ldr	r3, [r3]
 8363 008a 9A69     		ldr	r2, [r3, #24]
 8364 008c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccwjY1CM.s 			page 214


 8365 008e 1B68     		ldr	r3, [r3]
 8366 0090 42F02002 		orr	r2, r2, #32
 8367 0094 9A61     		str	r2, [r3, #24]
 8368              	.L372:
3827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Report OverRun error for non TX Only communication */
3831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 8369              		.loc 1 3831 11
 8370 0096 7B68     		ldr	r3, [r7, #4]
 8371 0098 93F88130 		ldrb	r3, [r3, #129]
 8372 009c DBB2     		uxtb	r3, r3
 8373              		.loc 1 3831 6
 8374 009e 032B     		cmp	r3, #3
 8375 00a0 14D0     		beq	.L373
3832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((itflag & SPI_FLAG_OVR) != 0UL)
 8376              		.loc 1 3833 17
 8377 00a2 FB68     		ldr	r3, [r7, #12]
 8378 00a4 03F04003 		and	r3, r3, #64
 8379              		.loc 1 3833 8
 8380 00a8 002B     		cmp	r3, #0
 8381 00aa 0FD0     		beq	.L373
3834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8382              		.loc 1 3835 7
 8383 00ac 7B68     		ldr	r3, [r7, #4]
 8384 00ae D3F88430 		ldr	r3, [r3, #132]
 8385 00b2 43F00402 		orr	r2, r3, #4
 8386 00b6 7B68     		ldr	r3, [r7, #4]
 8387 00b8 C3F88420 		str	r2, [r3, #132]
3836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8388              		.loc 1 3836 7
 8389 00bc 7B68     		ldr	r3, [r7, #4]
 8390 00be 1B68     		ldr	r3, [r3]
 8391 00c0 9A69     		ldr	r2, [r3, #24]
 8392 00c2 7B68     		ldr	r3, [r7, #4]
 8393 00c4 1B68     		ldr	r3, [r3]
 8394 00c6 42F04002 		orr	r2, r2, #64
 8395 00ca 9A61     		str	r2, [r3, #24]
 8396              	.L373:
3837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
3840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if CRC error occurred */
3841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((itflag & SPI_FLAG_CRCERR) != 0UL)
3844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
3845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
3848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccwjY1CM.s 			page 215


3852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI Mode Fault error interrupt occurred -------------------------------*/
3853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((itflag & SPI_FLAG_MODF) != 0UL)
 8397              		.loc 1 3853 15
 8398 00cc FB68     		ldr	r3, [r7, #12]
 8399 00ce 03F40073 		and	r3, r3, #512
 8400              		.loc 1 3853 6
 8401 00d2 002B     		cmp	r3, #0
 8402 00d4 0FD0     		beq	.L374
3854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8403              		.loc 1 3855 5
 8404 00d6 7B68     		ldr	r3, [r7, #4]
 8405 00d8 D3F88430 		ldr	r3, [r3, #132]
 8406 00dc 43F00102 		orr	r2, r3, #1
 8407 00e0 7B68     		ldr	r3, [r7, #4]
 8408 00e2 C3F88420 		str	r2, [r3, #132]
3856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8409              		.loc 1 3856 5
 8410 00e6 7B68     		ldr	r3, [r7, #4]
 8411 00e8 1B68     		ldr	r3, [r3]
 8412 00ea 9A69     		ldr	r2, [r3, #24]
 8413 00ec 7B68     		ldr	r3, [r7, #4]
 8414 00ee 1B68     		ldr	r3, [r3]
 8415 00f0 42F40072 		orr	r2, r2, #512
 8416 00f4 9A61     		str	r2, [r3, #24]
 8417              	.L374:
3857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI Frame error interrupt occurred ------------------------------------*/
3860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((itflag & SPI_FLAG_FRE) != 0UL)
 8418              		.loc 1 3860 15
 8419 00f6 FB68     		ldr	r3, [r7, #12]
 8420 00f8 03F48073 		and	r3, r3, #256
 8421              		.loc 1 3860 6
 8422 00fc 002B     		cmp	r3, #0
 8423 00fe 0FD0     		beq	.L375
3861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 8424              		.loc 1 3862 5
 8425 0100 7B68     		ldr	r3, [r7, #4]
 8426 0102 D3F88430 		ldr	r3, [r3, #132]
 8427 0106 43F00802 		orr	r2, r3, #8
 8428 010a 7B68     		ldr	r3, [r7, #4]
 8429 010c C3F88420 		str	r2, [r3, #132]
3863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
 8430              		.loc 1 3863 5
 8431 0110 7B68     		ldr	r3, [r7, #4]
 8432 0112 1B68     		ldr	r3, [r3]
 8433 0114 9A69     		ldr	r2, [r3, #24]
 8434 0116 7B68     		ldr	r3, [r7, #4]
 8435 0118 1B68     		ldr	r3, [r3]
 8436 011a 42F48072 		orr	r2, r2, #256
 8437 011e 9A61     		str	r2, [r3, #24]
 8438              	.L375:
3864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t)0UL;
ARM GAS  /tmp/ccwjY1CM.s 			page 216


 8439              		.loc 1 3866 21
 8440 0120 7B68     		ldr	r3, [r7, #4]
 8441 0122 0022     		movs	r2, #0
 8442 0124 A3F86220 		strh	r2, [r3, #98]	@ movhi
3867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t)0UL;
 8443              		.loc 1 3867 21
 8444 0128 7B68     		ldr	r3, [r7, #4]
 8445 012a 0022     		movs	r2, #0
 8446 012c A3F86A20 		strh	r2, [r3, #106]	@ movhi
3868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 8447              		.loc 1 3868 1
 8448 0130 00BF     		nop
 8449 0132 1437     		adds	r7, r7, #20
 8450              	.LCFI257:
 8451              		.cfi_def_cfa_offset 4
 8452 0134 BD46     		mov	sp, r7
 8453              	.LCFI258:
 8454              		.cfi_def_cfa_register 13
 8455              		@ sp needed
 8456 0136 5DF8047B 		ldr	r7, [sp], #4
 8457              	.LCFI259:
 8458              		.cfi_restore 7
 8459              		.cfi_def_cfa_offset 0
 8460 013a 7047     		bx	lr
 8461              	.L377:
 8462              		.align	2
 8463              	.L376:
 8464 013c 90FCFFFF 		.word	-880
 8465              		.cfi_endproc
 8466              	.LFE377:
 8468              		.section	.text.SPI_WaitOnFlagUntilTimeout,"ax",%progbits
 8469              		.align	1
 8470              		.syntax unified
 8471              		.thumb
 8472              		.thumb_func
 8473              		.fpu fpv5-d16
 8475              	SPI_WaitOnFlagUntilTimeout:
 8476              	.LFB378:
3869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Handle SPI Communication Timeout.
3872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param hspi: pointer to a SPI_HandleTypeDef structure that contains
3873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *              the configuration information for SPI module.
3874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param Flag: SPI flag to check
3875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param Status: flag state to check
3876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param Timeout: Timeout duration
3877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param Tickstart: Tick start value
3878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
3879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagSta
3881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                     uint32_t Tickstart, uint32_t Timeout)
3882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 8477              		.loc 1 3882 1
 8478              		.cfi_startproc
 8479              		@ args = 4, pretend = 0, frame = 16
 8480              		@ frame_needed = 1, uses_anonymous_args = 0
 8481 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccwjY1CM.s 			page 217


 8482              	.LCFI260:
 8483              		.cfi_def_cfa_offset 8
 8484              		.cfi_offset 7, -8
 8485              		.cfi_offset 14, -4
 8486 0002 84B0     		sub	sp, sp, #16
 8487              	.LCFI261:
 8488              		.cfi_def_cfa_offset 24
 8489 0004 00AF     		add	r7, sp, #0
 8490              	.LCFI262:
 8491              		.cfi_def_cfa_register 7
 8492 0006 F860     		str	r0, [r7, #12]
 8493 0008 B960     		str	r1, [r7, #8]
 8494 000a 3B60     		str	r3, [r7]
 8495 000c 1346     		mov	r3, r2
 8496 000e FB71     		strb	r3, [r7, #7]
3883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Wait until flag is set */
3884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 8497              		.loc 1 3884 9
 8498 0010 10E0     		b	.L379
 8499              	.L383:
3885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check for the Timeout */
3887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((((HAL_GetTick() - Tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U
 8500              		.loc 1 3887 12
 8501 0012 FFF7FEFF 		bl	HAL_GetTick
 8502 0016 0246     		mov	r2, r0
 8503              		.loc 1 3887 26
 8504 0018 3B68     		ldr	r3, [r7]
 8505 001a D31A     		subs	r3, r2, r3
 8506              		.loc 1 3887 8
 8507 001c BA69     		ldr	r2, [r7, #24]
 8508 001e 9A42     		cmp	r2, r3
 8509 0020 03D8     		bhi	.L380
 8510              		.loc 1 3887 52 discriminator 1
 8511 0022 BB69     		ldr	r3, [r7, #24]
 8512 0024 B3F1FF3F 		cmp	r3, #-1
 8513 0028 02D1     		bne	.L381
 8514              	.L380:
 8515              		.loc 1 3887 83 discriminator 3
 8516 002a BB69     		ldr	r3, [r7, #24]
 8517 002c 002B     		cmp	r3, #0
 8518 002e 01D1     		bne	.L379
 8519              	.L381:
3888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return HAL_TIMEOUT;
 8520              		.loc 1 3889 14
 8521 0030 0323     		movs	r3, #3
 8522 0032 0FE0     		b	.L382
 8523              	.L379:
3884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 8524              		.loc 1 3884 11
 8525 0034 FB68     		ldr	r3, [r7, #12]
 8526 0036 1B68     		ldr	r3, [r3]
 8527 0038 5A69     		ldr	r2, [r3, #20]
 8528 003a BB68     		ldr	r3, [r7, #8]
 8529 003c 1340     		ands	r3, r3, r2
3884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccwjY1CM.s 			page 218


 8530              		.loc 1 3884 48
 8531 003e BA68     		ldr	r2, [r7, #8]
 8532 0040 9A42     		cmp	r2, r3
 8533 0042 0CBF     		ite	eq
 8534 0044 0123     		moveq	r3, #1
 8535 0046 0023     		movne	r3, #0
 8536 0048 DBB2     		uxtb	r3, r3
 8537 004a 1A46     		mov	r2, r3
3884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 8538              		.loc 1 3884 57
 8539 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
3884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 8540              		.loc 1 3884 9
 8541 004e 9A42     		cmp	r2, r3
 8542 0050 DFD0     		beq	.L383
3890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_OK;
 8543              		.loc 1 3892 10
 8544 0052 0023     		movs	r3, #0
 8545              	.L382:
3893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 8546              		.loc 1 3893 1
 8547 0054 1846     		mov	r0, r3
 8548 0056 1037     		adds	r7, r7, #16
 8549              	.LCFI263:
 8550              		.cfi_def_cfa_offset 8
 8551 0058 BD46     		mov	sp, r7
 8552              	.LCFI264:
 8553              		.cfi_def_cfa_register 13
 8554              		@ sp needed
 8555 005a 80BD     		pop	{r7, pc}
 8556              		.cfi_endproc
 8557              	.LFE378:
 8559              		.section	.text.SPI_GetPacketSize,"ax",%progbits
 8560              		.align	1
 8561              		.syntax unified
 8562              		.thumb
 8563              		.thumb_func
 8564              		.fpu fpv5-d16
 8566              	SPI_GetPacketSize:
 8567              	.LFB379:
3894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Compute configured packet size from fifo perspective.
3897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval Packet size occupied in the fifo
3900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static uint32_t SPI_GetPacketSize(SPI_HandleTypeDef *hspi)
3902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 8568              		.loc 1 3902 1
 8569              		.cfi_startproc
 8570              		@ args = 0, pretend = 0, frame = 16
 8571              		@ frame_needed = 1, uses_anonymous_args = 0
 8572              		@ link register save eliminated.
 8573 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccwjY1CM.s 			page 219


 8574              	.LCFI265:
 8575              		.cfi_def_cfa_offset 4
 8576              		.cfi_offset 7, -4
 8577 0002 85B0     		sub	sp, sp, #20
 8578              	.LCFI266:
 8579              		.cfi_def_cfa_offset 24
 8580 0004 00AF     		add	r7, sp, #0
 8581              	.LCFI267:
 8582              		.cfi_def_cfa_register 7
 8583 0006 7860     		str	r0, [r7, #4]
3903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
 8584              		.loc 1 3903 41
 8585 0008 7B68     		ldr	r3, [r7, #4]
 8586 000a DB6B     		ldr	r3, [r3, #60]
 8587              		.loc 1 3903 56
 8588 000c 5B09     		lsrs	r3, r3, #5
 8589              		.loc 1 3903 12
 8590 000e 0133     		adds	r3, r3, #1
 8591 0010 FB60     		str	r3, [r7, #12]
3904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t data_size       = (hspi->Init.DataSize      >> SPI_CFG1_DSIZE_Pos) + 1UL;
 8592              		.loc 1 3904 56
 8593 0012 7B68     		ldr	r3, [r7, #4]
 8594 0014 DB68     		ldr	r3, [r3, #12]
 8595              		.loc 1 3904 12
 8596 0016 0133     		adds	r3, r3, #1
 8597 0018 BB60     		str	r3, [r7, #8]
3905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Convert data size to Byte */
3907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   data_size = (data_size + 7UL) / 8UL;
 8598              		.loc 1 3907 26
 8599 001a BB68     		ldr	r3, [r7, #8]
 8600 001c 0733     		adds	r3, r3, #7
 8601              		.loc 1 3907 13
 8602 001e DB08     		lsrs	r3, r3, #3
 8603 0020 BB60     		str	r3, [r7, #8]
3908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return data_size * fifo_threashold;
 8604              		.loc 1 3909 20
 8605 0022 BB68     		ldr	r3, [r7, #8]
 8606 0024 FA68     		ldr	r2, [r7, #12]
 8607 0026 02FB03F3 		mul	r3, r2, r3
3910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 8608              		.loc 1 3910 1
 8609 002a 1846     		mov	r0, r3
 8610 002c 1437     		adds	r7, r7, #20
 8611              	.LCFI268:
 8612              		.cfi_def_cfa_offset 4
 8613 002e BD46     		mov	sp, r7
 8614              	.LCFI269:
 8615              		.cfi_def_cfa_register 13
 8616              		@ sp needed
 8617 0030 5DF8047B 		ldr	r7, [sp], #4
 8618              	.LCFI270:
 8619              		.cfi_restore 7
 8620              		.cfi_def_cfa_offset 0
 8621 0034 7047     		bx	lr
 8622              		.cfi_endproc
ARM GAS  /tmp/ccwjY1CM.s 			page 220


 8623              	.LFE379:
 8625              		.text
 8626              	.Letext0:
 8627              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 8628              		.file 3 "./Libraries/CMSIS/Core/Include/core_cm7.h"
 8629              		.file 4 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 8630              		.file 5 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 8631              		.file 6 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 8632              		.file 7 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 8633              		.file 8 "/usr/include/newlib/sys/_types.h"
 8634              		.file 9 "/usr/include/newlib/sys/reent.h"
 8635              		.file 10 "/usr/include/newlib/sys/lock.h"
 8636              		.file 11 "/usr/include/newlib/math.h"
 8637              		.file 12 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 8638              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 8639              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 8640              		.file 15 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_spi.h"
 8641              		.file 16 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 8642              		.file 17 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccwjY1CM.s 			page 221


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_spi.c
     /tmp/ccwjY1CM.s:17     .text.HAL_SPI_Init:0000000000000000 $t
     /tmp/ccwjY1CM.s:25     .text.HAL_SPI_Init:0000000000000000 HAL_SPI_Init
     /tmp/ccwjY1CM.s:8566   .text.SPI_GetPacketSize:0000000000000000 SPI_GetPacketSize
     /tmp/ccwjY1CM.s:439    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccwjY1CM.s:348    .text.HAL_SPI_Init:00000000000001f8 $d
     /tmp/ccwjY1CM.s:355    .text.HAL_SPI_DeInit:0000000000000000 $t
     /tmp/ccwjY1CM.s:362    .text.HAL_SPI_DeInit:0000000000000000 HAL_SPI_DeInit
     /tmp/ccwjY1CM.s:482    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccwjY1CM.s:432    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccwjY1CM.s:475    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccwjY1CM.s:518    .text.HAL_SPI_Transmit:0000000000000000 $t
     /tmp/ccwjY1CM.s:525    .text.HAL_SPI_Transmit:0000000000000000 HAL_SPI_Transmit
     /tmp/ccwjY1CM.s:8276   .text.SPI_CloseTransfer:0000000000000000 SPI_CloseTransfer
     /tmp/ccwjY1CM.s:1039   .text.HAL_SPI_Transmit:0000000000000334 $d
     /tmp/ccwjY1CM.s:1042   .text.HAL_SPI_Transmit:0000000000000338 $t
     /tmp/ccwjY1CM.s:8475   .text.SPI_WaitOnFlagUntilTimeout:0000000000000000 SPI_WaitOnFlagUntilTimeout
     /tmp/ccwjY1CM.s:1147   .text.HAL_SPI_Receive:0000000000000000 $t
     /tmp/ccwjY1CM.s:1154   .text.HAL_SPI_Receive:0000000000000000 HAL_SPI_Receive
     /tmp/ccwjY1CM.s:1793   .text.HAL_SPI_TransmitReceive:0000000000000000 HAL_SPI_TransmitReceive
     /tmp/ccwjY1CM.s:1697   .text.HAL_SPI_Receive:000000000000035c $d
     /tmp/ccwjY1CM.s:1700   .text.HAL_SPI_Receive:0000000000000360 $t
     /tmp/ccwjY1CM.s:1786   .text.HAL_SPI_TransmitReceive:0000000000000000 $t
     /tmp/ccwjY1CM.s:2357   .text.HAL_SPI_TransmitReceive:0000000000000384 $d
     /tmp/ccwjY1CM.s:2360   .text.HAL_SPI_TransmitReceive:0000000000000388 $t
     /tmp/ccwjY1CM.s:2724   .text.HAL_SPI_Transmit_IT:0000000000000000 $t
     /tmp/ccwjY1CM.s:2731   .text.HAL_SPI_Transmit_IT:0000000000000000 HAL_SPI_Transmit_IT
     /tmp/ccwjY1CM.s:2953   .text.HAL_SPI_Transmit_IT:0000000000000148 $d
     /tmp/ccwjY1CM.s:8058   .text.SPI_TxISR_32BIT:0000000000000000 SPI_TxISR_32BIT
     /tmp/ccwjY1CM.s:7971   .text.SPI_TxISR_16BIT:0000000000000000 SPI_TxISR_16BIT
     /tmp/ccwjY1CM.s:7886   .text.SPI_TxISR_8BIT:0000000000000000 SPI_TxISR_8BIT
     /tmp/ccwjY1CM.s:2961   .text.HAL_SPI_Receive_IT:0000000000000000 $t
     /tmp/ccwjY1CM.s:2968   .text.HAL_SPI_Receive_IT:0000000000000000 HAL_SPI_Receive_IT
     /tmp/ccwjY1CM.s:3226   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 HAL_SPI_TransmitReceive_IT
     /tmp/ccwjY1CM.s:3211   .text.HAL_SPI_Receive_IT:0000000000000170 $d
     /tmp/ccwjY1CM.s:7803   .text.SPI_RxISR_32BIT:0000000000000000 SPI_RxISR_32BIT
     /tmp/ccwjY1CM.s:7715   .text.SPI_RxISR_16BIT:0000000000000000 SPI_RxISR_16BIT
     /tmp/ccwjY1CM.s:7629   .text.SPI_RxISR_8BIT:0000000000000000 SPI_RxISR_8BIT
     /tmp/ccwjY1CM.s:3219   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccwjY1CM.s:3768   .text.HAL_SPI_TransmitReceive_IT:0000000000000338 $d
     /tmp/ccwjY1CM.s:3779   .text.HAL_SPI_Transmit_DMA:0000000000000000 $t
     /tmp/ccwjY1CM.s:3786   .text.HAL_SPI_Transmit_DMA:0000000000000000 HAL_SPI_Transmit_DMA
     /tmp/ccwjY1CM.s:4205   .text.HAL_SPI_Transmit_DMA:000000000000027c $d
     /tmp/ccwjY1CM.s:7217   .text.SPI_DMAHalfTransmitCplt:0000000000000000 SPI_DMAHalfTransmitCplt
     /tmp/ccwjY1CM.s:7001   .text.SPI_DMATransmitCplt:0000000000000000 SPI_DMATransmitCplt
     /tmp/ccwjY1CM.s:7352   .text.SPI_DMAError:0000000000000000 SPI_DMAError
     /tmp/ccwjY1CM.s:4213   .text.HAL_SPI_Receive_DMA:0000000000000000 $t
     /tmp/ccwjY1CM.s:4220   .text.HAL_SPI_Receive_DMA:0000000000000000 HAL_SPI_Receive_DMA
     /tmp/ccwjY1CM.s:4675   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 HAL_SPI_TransmitReceive_DMA
     /tmp/ccwjY1CM.s:4660   .text.HAL_SPI_Receive_DMA:00000000000002a0 $d
     /tmp/ccwjY1CM.s:7262   .text.SPI_DMAHalfReceiveCplt:0000000000000000 SPI_DMAHalfReceiveCplt
     /tmp/ccwjY1CM.s:7073   .text.SPI_DMAReceiveCplt:0000000000000000 SPI_DMAReceiveCplt
     /tmp/ccwjY1CM.s:4668   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 $t
     /tmp/ccwjY1CM.s:5270   .text.HAL_SPI_TransmitReceive_DMA:0000000000000384 $d
     /tmp/ccwjY1CM.s:7307   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/ccwjY1CM.s:7145   .text.SPI_DMATransmitReceiveCplt:0000000000000000 SPI_DMATransmitReceiveCplt
ARM GAS  /tmp/ccwjY1CM.s 			page 222


     /tmp/ccwjY1CM.s:5280   .text.HAL_SPI_Abort:0000000000000000 $t
     /tmp/ccwjY1CM.s:5287   .text.HAL_SPI_Abort:0000000000000000 HAL_SPI_Abort
     /tmp/ccwjY1CM.s:8141   .text.SPI_AbortTransfer:0000000000000000 SPI_AbortTransfer
     /tmp/ccwjY1CM.s:5509   .text.HAL_SPI_Abort:0000000000000154 $d
     /tmp/ccwjY1CM.s:5515   .text.HAL_SPI_Abort_IT:0000000000000000 $t
     /tmp/ccwjY1CM.s:5522   .text.HAL_SPI_Abort_IT:0000000000000000 HAL_SPI_Abort_IT
     /tmp/ccwjY1CM.s:6866   .text.HAL_SPI_AbortCpltCallback:0000000000000000 HAL_SPI_AbortCpltCallback
     /tmp/ccwjY1CM.s:5776   .text.HAL_SPI_Abort_IT:0000000000000174 $d
     /tmp/ccwjY1CM.s:7475   .text.SPI_DMATxAbortCallback:0000000000000000 SPI_DMATxAbortCallback
     /tmp/ccwjY1CM.s:7552   .text.SPI_DMARxAbortCallback:0000000000000000 SPI_DMARxAbortCallback
     /tmp/ccwjY1CM.s:5784   .text.HAL_SPI_DMAPause:0000000000000000 $t
     /tmp/ccwjY1CM.s:5791   .text.HAL_SPI_DMAPause:0000000000000000 HAL_SPI_DMAPause
     /tmp/ccwjY1CM.s:5835   .text.HAL_SPI_DMAResume:0000000000000000 $t
     /tmp/ccwjY1CM.s:5842   .text.HAL_SPI_DMAResume:0000000000000000 HAL_SPI_DMAResume
     /tmp/ccwjY1CM.s:5886   .text.HAL_SPI_DMAStop:0000000000000000 $t
     /tmp/ccwjY1CM.s:5893   .text.HAL_SPI_DMAStop:0000000000000000 HAL_SPI_DMAStop
     /tmp/ccwjY1CM.s:5937   .text.HAL_SPI_IRQHandler:0000000000000000 $t
     /tmp/ccwjY1CM.s:5944   .text.HAL_SPI_IRQHandler:0000000000000000 HAL_SPI_IRQHandler
     /tmp/ccwjY1CM.s:6823   .text.HAL_SPI_ErrorCallback:0000000000000000 HAL_SPI_ErrorCallback
     /tmp/ccwjY1CM.s:6651   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccwjY1CM.s:6608   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/ccwjY1CM.s:6565   .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/ccwjY1CM.s:6552   .text.HAL_SPI_IRQHandler:00000000000003b8 $d
     /tmp/ccwjY1CM.s:7418   .text.SPI_DMAAbortOnError:0000000000000000 SPI_DMAAbortOnError
     /tmp/ccwjY1CM.s:6558   .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccwjY1CM.s:6601   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/ccwjY1CM.s:6644   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccwjY1CM.s:6687   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccwjY1CM.s:6694   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 HAL_SPI_TxHalfCpltCallback
     /tmp/ccwjY1CM.s:6730   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccwjY1CM.s:6737   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 HAL_SPI_RxHalfCpltCallback
     /tmp/ccwjY1CM.s:6773   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 $t
     /tmp/ccwjY1CM.s:6780   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/ccwjY1CM.s:6816   .text.HAL_SPI_ErrorCallback:0000000000000000 $t
     /tmp/ccwjY1CM.s:6859   .text.HAL_SPI_AbortCpltCallback:0000000000000000 $t
     /tmp/ccwjY1CM.s:6902   .text.HAL_SPI_GetState:0000000000000000 $t
     /tmp/ccwjY1CM.s:6909   .text.HAL_SPI_GetState:0000000000000000 HAL_SPI_GetState
     /tmp/ccwjY1CM.s:6949   .text.HAL_SPI_GetError:0000000000000000 $t
     /tmp/ccwjY1CM.s:6956   .text.HAL_SPI_GetError:0000000000000000 HAL_SPI_GetError
     /tmp/ccwjY1CM.s:6995   .text.SPI_DMATransmitCplt:0000000000000000 $t
     /tmp/ccwjY1CM.s:7067   .text.SPI_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccwjY1CM.s:7139   .text.SPI_DMATransmitReceiveCplt:0000000000000000 $t
     /tmp/ccwjY1CM.s:7211   .text.SPI_DMAHalfTransmitCplt:0000000000000000 $t
     /tmp/ccwjY1CM.s:7256   .text.SPI_DMAHalfReceiveCplt:0000000000000000 $t
     /tmp/ccwjY1CM.s:7301   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 $t
     /tmp/ccwjY1CM.s:7346   .text.SPI_DMAError:0000000000000000 $t
     /tmp/ccwjY1CM.s:7412   .text.SPI_DMAAbortOnError:0000000000000000 $t
     /tmp/ccwjY1CM.s:7469   .text.SPI_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccwjY1CM.s:7546   .text.SPI_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccwjY1CM.s:7623   .text.SPI_RxISR_8BIT:0000000000000000 $t
     /tmp/ccwjY1CM.s:7709   .text.SPI_RxISR_16BIT:0000000000000000 $t
     /tmp/ccwjY1CM.s:7797   .text.SPI_RxISR_32BIT:0000000000000000 $t
     /tmp/ccwjY1CM.s:7880   .text.SPI_TxISR_8BIT:0000000000000000 $t
     /tmp/ccwjY1CM.s:7965   .text.SPI_TxISR_16BIT:0000000000000000 $t
     /tmp/ccwjY1CM.s:8052   .text.SPI_TxISR_32BIT:0000000000000000 $t
     /tmp/ccwjY1CM.s:8135   .text.SPI_AbortTransfer:0000000000000000 $t
     /tmp/ccwjY1CM.s:8265   .text.SPI_AbortTransfer:00000000000000c4 $d
ARM GAS  /tmp/ccwjY1CM.s 			page 223


     /tmp/ccwjY1CM.s:8270   .text.SPI_CloseTransfer:0000000000000000 $t
     /tmp/ccwjY1CM.s:8464   .text.SPI_CloseTransfer:000000000000013c $d
     /tmp/ccwjY1CM.s:8469   .text.SPI_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccwjY1CM.s:8560   .text.SPI_GetPacketSize:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
SystemCoreClock
HAL_DMA_Abort_IT
