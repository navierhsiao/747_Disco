ARM GAS  /tmp/ccNaYeKW.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"lcd.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.rodata.LcdRegData27,"a"
  17              		.align	2
  20              	LcdRegData27:
  21 0000 0000031F 		.ascii	"\000\000\003\037"
  22              		.section	.rodata.LcdRegData28,"a"
  23              		.align	2
  26              	LcdRegData28:
  27 0000 000001DF 		.ascii	"\000\000\001\337"
  28              		.section	.text.lcd_init,"ax",%progbits
  29              		.align	1
  30              		.global	lcd_init
  31              		.arch armv7e-m
  32              		.syntax unified
  33              		.thumb
  34              		.thumb_func
  35              		.fpu fpv5-d16
  37              	lcd_init:
  38              	.LFB338:
  39              		.file 1 "./BSP/Components/Src/lcd.c"
   1:./BSP/Components/Src/lcd.c **** #include "../../system.h"
   2:./BSP/Components/Src/lcd.c **** 
   3:./BSP/Components/Src/lcd.c **** static const uint8_t LcdRegData27[] = {0x00, 0x00, 0x03, 0x1F};
   4:./BSP/Components/Src/lcd.c **** static const uint8_t LcdRegData28[] = {0x00, 0x00, 0x01, 0xDF};
   5:./BSP/Components/Src/lcd.c **** 
   6:./BSP/Components/Src/lcd.c **** void LCD_write_reg(lcd_objectTypeDef *object,uint16_t reg, uint8_t *data, uint16_t length);
   7:./BSP/Components/Src/lcd.c **** void LCD_read_reg(lcd_objectTypeDef *object,uint16_t reg, uint8_t *data, uint16_t length);
   8:./BSP/Components/Src/lcd.c **** 
   9:./BSP/Components/Src/lcd.c **** void lcd_readID(lcd_objectTypeDef *object);
  10:./BSP/Components/Src/lcd.c **** void lcd_setBrightness(lcd_objectTypeDef *object,uint32_t brightness);
  11:./BSP/Components/Src/lcd.c **** void lcd_displayOnOFF(lcd_objectTypeDef *object,uint8_t state);
  12:./BSP/Components/Src/lcd.c **** void lcd_setOrientation(lcd_objectTypeDef *object,uint32_t orientation);
  13:./BSP/Components/Src/lcd.c **** void lcd_getXsize(lcd_objectTypeDef *object,uint32_t *xSize);
  14:./BSP/Components/Src/lcd.c **** void lcd_getYsize(lcd_objectTypeDef *object,uint32_t *ySize);
  15:./BSP/Components/Src/lcd.c **** 
  16:./BSP/Components/Src/lcd.c **** void lcd_init(lcd_objectTypeDef *object,uint32_t colorCoding,uint32_t orientation)
  17:./BSP/Components/Src/lcd.c **** {
  40              		.loc 1 17 1
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 72
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44 0000 90B5     		push	{r4, r7, lr}
  45              	.LCFI0:
ARM GAS  /tmp/ccNaYeKW.s 			page 2


  46              		.cfi_def_cfa_offset 12
  47              		.cfi_offset 4, -12
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 95B0     		sub	sp, sp, #84
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 96
  53 0004 02AF     		add	r7, sp, #8
  54              	.LCFI2:
  55              		.cfi_def_cfa 7, 88
  56 0006 F860     		str	r0, [r7, #12]
  57 0008 B960     		str	r1, [r7, #8]
  58 000a 7A60     		str	r2, [r7, #4]
  18:./BSP/Components/Src/lcd.c ****   LTDC_DSI_object_Init(&object->dsi_object);
  59              		.loc 1 18 3
  60 000c FB68     		ldr	r3, [r7, #12]
  61 000e 1846     		mov	r0, r3
  62 0010 FFF7FEFF 		bl	LTDC_DSI_object_Init
  19:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg=LCD_write_reg;
  63              		.loc 1 19 24
  64 0014 FB68     		ldr	r3, [r7, #12]
  65 0016 AB4A     		ldr	r2, .L8
  66 0018 C3F85021 		str	r2, [r3, #336]
  20:./BSP/Components/Src/lcd.c ****   object->lcd_read_reg=LCD_read_reg;
  67              		.loc 1 20 23
  68 001c FB68     		ldr	r3, [r7, #12]
  69 001e AA4A     		ldr	r2, .L8+4
  70 0020 C3F85421 		str	r2, [r3, #340]
  21:./BSP/Components/Src/lcd.c **** 
  22:./BSP/Components/Src/lcd.c ****   object->lcd_readID=lcd_readID;
  71              		.loc 1 22 21
  72 0024 FB68     		ldr	r3, [r7, #12]
  73 0026 A94A     		ldr	r2, .L8+8
  74 0028 C3F85821 		str	r2, [r3, #344]
  23:./BSP/Components/Src/lcd.c ****   object->lcd_setBrightness=lcd_setBrightness;
  75              		.loc 1 23 28
  76 002c FB68     		ldr	r3, [r7, #12]
  77 002e A84A     		ldr	r2, .L8+12
  78 0030 C3F85C21 		str	r2, [r3, #348]
  24:./BSP/Components/Src/lcd.c ****   object->lcd_displayOnOFF=lcd_displayOnOFF;
  79              		.loc 1 24 27
  80 0034 FB68     		ldr	r3, [r7, #12]
  81 0036 A74A     		ldr	r2, .L8+16
  82 0038 C3F86021 		str	r2, [r3, #352]
  25:./BSP/Components/Src/lcd.c ****   object->lcd_setOrientation=lcd_setOrientation;
  83              		.loc 1 25 29
  84 003c FB68     		ldr	r3, [r7, #12]
  85 003e A64A     		ldr	r2, .L8+20
  86 0040 C3F86421 		str	r2, [r3, #356]
  26:./BSP/Components/Src/lcd.c ****   object->lcd_getXsize=lcd_getXsize;
  87              		.loc 1 26 23
  88 0044 FB68     		ldr	r3, [r7, #12]
  89 0046 A54A     		ldr	r2, .L8+24
  90 0048 C3F86821 		str	r2, [r3, #360]
  27:./BSP/Components/Src/lcd.c ****   object->lcd_getYsize=lcd_getYsize;
  91              		.loc 1 27 23
  92 004c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccNaYeKW.s 			page 3


  93 004e A44A     		ldr	r2, .L8+28
  94 0050 C3F86C21 		str	r2, [r3, #364]
  28:./BSP/Components/Src/lcd.c **** 
  29:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data1[]  = {0x80,0x09,0x01};
  30:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data2[]  = {0x80,0x09};
  31:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data3[]  = {0x00,0x09,0x0F,0x0E,0x07,0x10,0x0B,0x0A,0x04,0x07,0x0B,0
  32:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data4[]  = {0x00,0x09,0x0F,0x0E,0x07,0x10,0x0B,0x0A,0x04,0x07,0x0B,0
  33:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data5[]  = {0x79,0x79};
  34:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data6[]  = {0x00,0x01};
  35:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data7[]  = {0x85,0x01,0x00,0x84,0x01,0x00};
  36:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data8[]  = {0x18,0x04,0x03,0x39,0x00,0x00,0x00,0x18,0x03,0x03,0x3A,0
  37:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data9[]  = {0x18,0x02,0x03,0x3B,0x00,0x00,0x00,0x18,0x01,0x03,0x3C,0
  38:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data10[] = {0x01,0x01,0x20,0x20,0x00,0x00,0x01,0x02,0x00,0x00};
  39:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data11[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
  40:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data12[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0
  41:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data13[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0
  42:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data14[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
  43:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data15[] = {0x00,0x04,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0
  44:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data16[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x04,0x04,0x04,0
  45:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data17[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
  46:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data18[] = {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
  47:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data19[] = {0x00,0x26,0x09,0x0B,0x01,0x25,0x00,0x00,0x00,0x00};
  48:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data20[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0
  49:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data21[] = {0x25,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0
  50:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data22[] = {0x00,0x25,0x0C,0x0A,0x02,0x26,0x00,0x00,0x00,0x00};
  51:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data23[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0
  52:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data24[] = {0x26,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0
  53:./BSP/Components/Src/lcd.c ****   static const uint8_t lcd_reg_data25[] = {0xFF,0xFF,0xFF};
  54:./BSP/Components/Src/lcd.c **** 
  55:./BSP/Components/Src/lcd.c ****   static const uint8_t short_reg_data[] = {
  56:./BSP/Components/Src/lcd.c ****     0x00,0x00,0x80,0x30,0x8A,0x40,0xB1,0xA9,0x91,0x34,0xB4,0x50,0x4E,0x81,0x66,0xA1,0x08,
  57:./BSP/Components/Src/lcd.c ****     0x92,0x01,0x95,0x94,0x33,0xA3,0x1B,0x82,0x83,0x83,0x0E,0xA6,0xA0,0xB0,0xC0,0xD0,0x90,
  58:./BSP/Components/Src/lcd.c ****     0xE0,0xF0,0x00,OTM8009A_COLMOD_RGB565,OTM8009A_COLMOD_RGB888,0x7F,0x2C,0x02,0xFF,0x00,
  59:./BSP/Components/Src/lcd.c ****     0x00,0x00,0x66,0xB6,0x06,0xB1,0x06
  60:./BSP/Components/Src/lcd.c ****   };
  61:./BSP/Components/Src/lcd.c ****   
  62:./BSP/Components/Src/lcd.c ****   /* Enable CMD2 to access vendor specific commands                               */
  63:./BSP/Components/Src/lcd.c ****   /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */ 
  64:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object,OTM8009A_CMD_NOP,&short_reg_data[1],0);
  95              		.loc 1 64 9
  96 0054 FB68     		ldr	r3, [r7, #12]
  97 0056 D3F85041 		ldr	r4, [r3, #336]
  98              		.loc 1 64 3
  99 005a 0023     		movs	r3, #0
 100 005c A14A     		ldr	r2, .L8+32
 101 005e 0021     		movs	r1, #0
 102 0060 F868     		ldr	r0, [r7, #12]
 103 0062 A047     		blx	r4
 104              	.LVL0:
  65:./BSP/Components/Src/lcd.c ****   
  66:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object,0xFF, lcd_reg_data1, 3);
 105              		.loc 1 66 9
 106 0064 FB68     		ldr	r3, [r7, #12]
 107 0066 D3F85041 		ldr	r4, [r3, #336]
 108              		.loc 1 66 3
 109 006a 0323     		movs	r3, #3
 110 006c 9E4A     		ldr	r2, .L8+36
ARM GAS  /tmp/ccNaYeKW.s 			page 4


 111 006e FF21     		movs	r1, #255
 112 0070 F868     		ldr	r0, [r7, #12]
 113 0072 A047     		blx	r4
 114              	.LVL1:
  67:./BSP/Components/Src/lcd.c ****   /* Enter ORISE Command 2 */
  68:./BSP/Components/Src/lcd.c ****   /* Shift address to 0x80 */
  69:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 115              		.loc 1 69 9
 116 0074 FB68     		ldr	r3, [r7, #12]
 117 0076 D3F85041 		ldr	r4, [r3, #336]
 118              		.loc 1 69 3
 119 007a 0023     		movs	r3, #0
 120 007c 9B4A     		ldr	r2, .L8+40
 121 007e 0021     		movs	r1, #0
 122 0080 F868     		ldr	r0, [r7, #12]
 123 0082 A047     		blx	r4
 124              	.LVL2:
  70:./BSP/Components/Src/lcd.c ****   
  71:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xFF, lcd_reg_data2, 2);
 125              		.loc 1 71 9
 126 0084 FB68     		ldr	r3, [r7, #12]
 127 0086 D3F85041 		ldr	r4, [r3, #336]
 128              		.loc 1 71 3
 129 008a 0223     		movs	r3, #2
 130 008c 984A     		ldr	r2, .L8+44
 131 008e FF21     		movs	r1, #255
 132 0090 F868     		ldr	r0, [r7, #12]
 133 0092 A047     		blx	r4
 134              	.LVL3:
  72:./BSP/Components/Src/lcd.c ****   
  73:./BSP/Components/Src/lcd.c ****   /////////////////////////////////////////////////////////////////////
  74:./BSP/Components/Src/lcd.c ****   /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  75:./BSP/Components/Src/lcd.c ****   /* Set SD_PT                                                       */
  76:./BSP/Components/Src/lcd.c ****   /* -> Source output level during porch and non-display area to GND */
  77:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 135              		.loc 1 77 9
 136 0094 FB68     		ldr	r3, [r7, #12]
 137 0096 D3F85041 		ldr	r4, [r3, #336]
 138              		.loc 1 77 3
 139 009a 0023     		movs	r3, #0
 140 009c 934A     		ldr	r2, .L8+40
 141 009e 0021     		movs	r1, #0
 142 00a0 F868     		ldr	r0, [r7, #12]
 143 00a2 A047     		blx	r4
 144              	.LVL4:
  78:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xC4, &short_reg_data[3], 0);
 145              		.loc 1 78 9
 146 00a4 FB68     		ldr	r3, [r7, #12]
 147 00a6 D3F85041 		ldr	r4, [r3, #336]
 148              		.loc 1 78 3
 149 00aa 0023     		movs	r3, #0
 150 00ac 914A     		ldr	r2, .L8+48
 151 00ae C421     		movs	r1, #196
 152 00b0 F868     		ldr	r0, [r7, #12]
 153 00b2 A047     		blx	r4
 154              	.LVL5:
  79:./BSP/Components/Src/lcd.c ****   
ARM GAS  /tmp/ccNaYeKW.s 			page 5


  80:./BSP/Components/Src/lcd.c ****   HAL_Delay(10);
 155              		.loc 1 80 3
 156 00b4 0A20     		movs	r0, #10
 157 00b6 FFF7FEFF 		bl	HAL_Delay
  81:./BSP/Components/Src/lcd.c ****   /* Not documented */
  82:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[4], 0);
 158              		.loc 1 82 9
 159 00ba FB68     		ldr	r3, [r7, #12]
 160 00bc D3F85041 		ldr	r4, [r3, #336]
 161              		.loc 1 82 3
 162 00c0 0023     		movs	r3, #0
 163 00c2 8D4A     		ldr	r2, .L8+52
 164 00c4 0021     		movs	r1, #0
 165 00c6 F868     		ldr	r0, [r7, #12]
 166 00c8 A047     		blx	r4
 167              	.LVL6:
  83:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xC4, &short_reg_data[5], 0);
 168              		.loc 1 83 9
 169 00ca FB68     		ldr	r3, [r7, #12]
 170 00cc D3F85041 		ldr	r4, [r3, #336]
 171              		.loc 1 83 3
 172 00d0 0023     		movs	r3, #0
 173 00d2 8A4A     		ldr	r2, .L8+56
 174 00d4 C421     		movs	r1, #196
 175 00d6 F868     		ldr	r0, [r7, #12]
 176 00d8 A047     		blx	r4
 177              	.LVL7:
  84:./BSP/Components/Src/lcd.c ****   HAL_Delay(10);
 178              		.loc 1 84 3
 179 00da 0A20     		movs	r0, #10
 180 00dc FFF7FEFF 		bl	HAL_Delay
  85:./BSP/Components/Src/lcd.c ****   /////////////////////////////////////////////////////////////////////
  86:./BSP/Components/Src/lcd.c ****   
  87:./BSP/Components/Src/lcd.c ****   /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  88:./BSP/Components/Src/lcd.c ****   /* Set gvdd_en_test                                     */
  89:./BSP/Components/Src/lcd.c ****   /* -> enable GVDD test mode !!!                         */
  90:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[6], 0);
 181              		.loc 1 90 9
 182 00e0 FB68     		ldr	r3, [r7, #12]
 183 00e2 D3F85041 		ldr	r4, [r3, #336]
 184              		.loc 1 90 3
 185 00e6 0023     		movs	r3, #0
 186 00e8 854A     		ldr	r2, .L8+60
 187 00ea 0021     		movs	r1, #0
 188 00ec F868     		ldr	r0, [r7, #12]
 189 00ee A047     		blx	r4
 190              	.LVL8:
  91:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xC5, &short_reg_data[7], 0);
 191              		.loc 1 91 9
 192 00f0 FB68     		ldr	r3, [r7, #12]
 193 00f2 D3F85041 		ldr	r4, [r3, #336]
 194              		.loc 1 91 3
 195 00f6 0023     		movs	r3, #0
 196 00f8 824A     		ldr	r2, .L8+64
 197 00fa C521     		movs	r1, #197
 198 00fc F868     		ldr	r0, [r7, #12]
 199 00fe A047     		blx	r4
ARM GAS  /tmp/ccNaYeKW.s 			page 6


 200              	.LVL9:
  92:./BSP/Components/Src/lcd.c ****   
  93:./BSP/Components/Src/lcd.c ****   /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  94:./BSP/Components/Src/lcd.c ****   /* Set pump 4 vgh voltage                                    */
  95:./BSP/Components/Src/lcd.c ****   /* -> from 15.0v down to 13.0v                               */
  96:./BSP/Components/Src/lcd.c ****   /* Set pump 5 vgh voltage                                    */
  97:./BSP/Components/Src/lcd.c ****   /* -> from -12.0v downto -9.0v                               */
  98:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[8], 0);
 201              		.loc 1 98 9
 202 0100 FB68     		ldr	r3, [r7, #12]
 203 0102 D3F85041 		ldr	r4, [r3, #336]
 204              		.loc 1 98 3
 205 0106 0023     		movs	r3, #0
 206 0108 7F4A     		ldr	r2, .L8+68
 207 010a 0021     		movs	r1, #0
 208 010c F868     		ldr	r0, [r7, #12]
 209 010e A047     		blx	r4
 210              	.LVL10:
  99:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xC5, &short_reg_data[9], 0);
 211              		.loc 1 99 9
 212 0110 FB68     		ldr	r3, [r7, #12]
 213 0112 D3F85041 		ldr	r4, [r3, #336]
 214              		.loc 1 99 3
 215 0116 0023     		movs	r3, #0
 216 0118 7C4A     		ldr	r2, .L8+72
 217 011a C521     		movs	r1, #197
 218 011c F868     		ldr	r0, [r7, #12]
 219 011e A047     		blx	r4
 220              	.LVL11:
 100:./BSP/Components/Src/lcd.c ****   
 101:./BSP/Components/Src/lcd.c ****   /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
 102:./BSP/Components/Src/lcd.c ****   /* -> Column inversion                                */
 103:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[10], 0);
 221              		.loc 1 103 9
 222 0120 FB68     		ldr	r3, [r7, #12]
 223 0122 D3F85041 		ldr	r4, [r3, #336]
 224              		.loc 1 103 3
 225 0126 0023     		movs	r3, #0
 226 0128 794A     		ldr	r2, .L8+76
 227 012a 0021     		movs	r1, #0
 228 012c F868     		ldr	r0, [r7, #12]
 229 012e A047     		blx	r4
 230              	.LVL12:
 104:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xC0, &short_reg_data[11], 0);
 231              		.loc 1 104 9
 232 0130 FB68     		ldr	r3, [r7, #12]
 233 0132 D3F85041 		ldr	r4, [r3, #336]
 234              		.loc 1 104 3
 235 0136 0023     		movs	r3, #0
 236 0138 764A     		ldr	r2, .L8+80
 237 013a C021     		movs	r1, #192
 238 013c F868     		ldr	r0, [r7, #12]
 239 013e A047     		blx	r4
 240              	.LVL13:
 105:./BSP/Components/Src/lcd.c ****   
 106:./BSP/Components/Src/lcd.c ****   /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
 107:./BSP/Components/Src/lcd.c ****   /* VCOM Voltage settings                            */
ARM GAS  /tmp/ccNaYeKW.s 			page 7


 108:./BSP/Components/Src/lcd.c ****   /* -> from -1.0000v downto -1.2625v                 */
 109:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 241              		.loc 1 109 9
 242 0140 FB68     		ldr	r3, [r7, #12]
 243 0142 D3F85041 		ldr	r4, [r3, #336]
 244              		.loc 1 109 3
 245 0146 0023     		movs	r3, #0
 246 0148 664A     		ldr	r2, .L8+32
 247 014a 0021     		movs	r1, #0
 248 014c F868     		ldr	r0, [r7, #12]
 249 014e A047     		blx	r4
 250              	.LVL14:
 110:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xD9, &short_reg_data[12], 0);
 251              		.loc 1 110 9
 252 0150 FB68     		ldr	r3, [r7, #12]
 253 0152 D3F85041 		ldr	r4, [r3, #336]
 254              		.loc 1 110 3
 255 0156 0023     		movs	r3, #0
 256 0158 6F4A     		ldr	r2, .L8+84
 257 015a D921     		movs	r1, #217
 258 015c F868     		ldr	r0, [r7, #12]
 259 015e A047     		blx	r4
 260              	.LVL15:
 111:./BSP/Components/Src/lcd.c ****   
 112:./BSP/Components/Src/lcd.c ****   /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
 113:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 261              		.loc 1 113 9
 262 0160 FB68     		ldr	r3, [r7, #12]
 263 0162 D3F85041 		ldr	r4, [r3, #336]
 264              		.loc 1 113 3
 265 0166 0023     		movs	r3, #0
 266 0168 6C4A     		ldr	r2, .L8+88
 267 016a 0021     		movs	r1, #0
 268 016c F868     		ldr	r0, [r7, #12]
 269 016e A047     		blx	r4
 270              	.LVL16:
 114:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xC1, &short_reg_data[14], 0);
 271              		.loc 1 114 9
 272 0170 FB68     		ldr	r3, [r7, #12]
 273 0172 D3F85041 		ldr	r4, [r3, #336]
 274              		.loc 1 114 3
 275 0176 0023     		movs	r3, #0
 276 0178 694A     		ldr	r2, .L8+92
 277 017a C121     		movs	r1, #193
 278 017c F868     		ldr	r0, [r7, #12]
 279 017e A047     		blx	r4
 280              	.LVL17:
 115:./BSP/Components/Src/lcd.c ****   
 116:./BSP/Components/Src/lcd.c ****   /* Video mode internal */
 117:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[15], 0);
 281              		.loc 1 117 9
 282 0180 FB68     		ldr	r3, [r7, #12]
 283 0182 D3F85041 		ldr	r4, [r3, #336]
 284              		.loc 1 117 3
 285 0186 0023     		movs	r3, #0
 286 0188 664A     		ldr	r2, .L8+96
 287 018a 0021     		movs	r1, #0
ARM GAS  /tmp/ccNaYeKW.s 			page 8


 288 018c F868     		ldr	r0, [r7, #12]
 289 018e A047     		blx	r4
 290              	.LVL18:
 118:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xC1, &short_reg_data[16], 0);
 291              		.loc 1 118 9
 292 0190 FB68     		ldr	r3, [r7, #12]
 293 0192 D3F85041 		ldr	r4, [r3, #336]
 294              		.loc 1 118 3
 295 0196 0023     		movs	r3, #0
 296 0198 634A     		ldr	r2, .L8+100
 297 019a C121     		movs	r1, #193
 298 019c F868     		ldr	r0, [r7, #12]
 299 019e A047     		blx	r4
 300              	.LVL19:
 119:./BSP/Components/Src/lcd.c ****   
 120:./BSP/Components/Src/lcd.c ****   /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
 121:./BSP/Components/Src/lcd.c ****   /* Set pump 4&5 x6                                     */
 122:./BSP/Components/Src/lcd.c ****   /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
 123:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[17], 0);
 301              		.loc 1 123 9
 302 01a0 FB68     		ldr	r3, [r7, #12]
 303 01a2 D3F85041 		ldr	r4, [r3, #336]
 304              		.loc 1 123 3
 305 01a6 0023     		movs	r3, #0
 306 01a8 604A     		ldr	r2, .L8+104
 307 01aa 0021     		movs	r1, #0
 308 01ac F868     		ldr	r0, [r7, #12]
 309 01ae A047     		blx	r4
 310              	.LVL20:
 124:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xC5, &short_reg_data[18], 0);
 311              		.loc 1 124 9
 312 01b0 FB68     		ldr	r3, [r7, #12]
 313 01b2 D3F85041 		ldr	r4, [r3, #336]
 314              		.loc 1 124 3
 315 01b6 0023     		movs	r3, #0
 316 01b8 5D4A     		ldr	r2, .L8+108
 317 01ba C521     		movs	r1, #197
 318 01bc F868     		ldr	r0, [r7, #12]
 319 01be A047     		blx	r4
 320              	.LVL21:
 125:./BSP/Components/Src/lcd.c ****   
 126:./BSP/Components/Src/lcd.c ****   /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
 127:./BSP/Components/Src/lcd.c ****   /* Change pump4 clock ratio                              */
 128:./BSP/Components/Src/lcd.c ****   /* -> from 1 line to 1/2 line                            */
 129:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[19], 0);
 321              		.loc 1 129 9
 322 01c0 FB68     		ldr	r3, [r7, #12]
 323 01c2 D3F85041 		ldr	r4, [r3, #336]
 324              		.loc 1 129 3
 325 01c6 0023     		movs	r3, #0
 326 01c8 5A4A     		ldr	r2, .L8+112
 327 01ca 0021     		movs	r1, #0
 328 01cc F868     		ldr	r0, [r7, #12]
 329 01ce A047     		blx	r4
 330              	.LVL22:
 130:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xC5, &short_reg_data[9], 0);
 331              		.loc 1 130 9
ARM GAS  /tmp/ccNaYeKW.s 			page 9


 332 01d0 FB68     		ldr	r3, [r7, #12]
 333 01d2 D3F85041 		ldr	r4, [r3, #336]
 334              		.loc 1 130 3
 335 01d6 0023     		movs	r3, #0
 336 01d8 4C4A     		ldr	r2, .L8+72
 337 01da C521     		movs	r1, #197
 338 01dc F868     		ldr	r0, [r7, #12]
 339 01de A047     		blx	r4
 340              	.LVL23:
 131:./BSP/Components/Src/lcd.c ****   
 132:./BSP/Components/Src/lcd.c ****   /* GVDD/NGVDD settings */
 133:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 341              		.loc 1 133 9
 342 01e0 FB68     		ldr	r3, [r7, #12]
 343 01e2 D3F85041 		ldr	r4, [r3, #336]
 344              		.loc 1 133 3
 345 01e6 0023     		movs	r3, #0
 346 01e8 3E4A     		ldr	r2, .L8+32
 347 01ea 0021     		movs	r1, #0
 348 01ec F868     		ldr	r0, [r7, #12]
 349 01ee A047     		blx	r4
 350              	.LVL24:
 134:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xD8, lcd_reg_data5, 2);
 351              		.loc 1 134 9
 352 01f0 FB68     		ldr	r3, [r7, #12]
 353 01f2 D3F85041 		ldr	r4, [r3, #336]
 354              		.loc 1 134 3
 355 01f6 0223     		movs	r3, #2
 356 01f8 4F4A     		ldr	r2, .L8+116
 357 01fa D821     		movs	r1, #216
 358 01fc F868     		ldr	r0, [r7, #12]
 359 01fe A047     		blx	r4
 360              	.LVL25:
 135:./BSP/Components/Src/lcd.c ****   
 136:./BSP/Components/Src/lcd.c ****   /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
 137:./BSP/Components/Src/lcd.c ****   /* Rewrite the default value !                           */
 138:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[20], 0);
 361              		.loc 1 138 9
 362 0200 FB68     		ldr	r3, [r7, #12]
 363 0202 D3F85041 		ldr	r4, [r3, #336]
 364              		.loc 1 138 3
 365 0206 0023     		movs	r3, #0
 366 0208 4C4A     		ldr	r2, .L8+120
 367 020a 0021     		movs	r1, #0
 368 020c F868     		ldr	r0, [r7, #12]
 369 020e A047     		blx	r4
 370              	.LVL26:
 139:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xC5, &short_reg_data[21], 0);
 371              		.loc 1 139 9
 372 0210 FB68     		ldr	r3, [r7, #12]
 373 0212 D3F85041 		ldr	r4, [r3, #336]
 374              		.loc 1 139 3
 375 0216 0023     		movs	r3, #0
 376 0218 494A     		ldr	r2, .L8+124
 377 021a C521     		movs	r1, #197
 378 021c F868     		ldr	r0, [r7, #12]
 379 021e A047     		blx	r4
ARM GAS  /tmp/ccNaYeKW.s 			page 10


 380              	.LVL27:
 140:./BSP/Components/Src/lcd.c ****   
 141:./BSP/Components/Src/lcd.c ****   /* Panel display timing Setting 3 */
 142:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[22], 0);
 381              		.loc 1 142 9
 382 0220 FB68     		ldr	r3, [r7, #12]
 383 0222 D3F85041 		ldr	r4, [r3, #336]
 384              		.loc 1 142 3
 385 0226 0023     		movs	r3, #0
 386 0228 464A     		ldr	r2, .L8+128
 387 022a 0021     		movs	r1, #0
 388 022c F868     		ldr	r0, [r7, #12]
 389 022e A047     		blx	r4
 390              	.LVL28:
 143:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xC0, &short_reg_data[23], 0);
 391              		.loc 1 143 9
 392 0230 FB68     		ldr	r3, [r7, #12]
 393 0232 D3F85041 		ldr	r4, [r3, #336]
 394              		.loc 1 143 3
 395 0236 0023     		movs	r3, #0
 396 0238 434A     		ldr	r2, .L8+132
 397 023a C021     		movs	r1, #192
 398 023c F868     		ldr	r0, [r7, #12]
 399 023e A047     		blx	r4
 400              	.LVL29:
 144:./BSP/Components/Src/lcd.c ****   
 145:./BSP/Components/Src/lcd.c ****   /* Power control 1 */
 146:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[24], 0);
 401              		.loc 1 146 9
 402 0240 FB68     		ldr	r3, [r7, #12]
 403 0242 D3F85041 		ldr	r4, [r3, #336]
 404              		.loc 1 146 3
 405 0246 0023     		movs	r3, #0
 406 0248 404A     		ldr	r2, .L8+136
 407 024a 0021     		movs	r1, #0
 408 024c F868     		ldr	r0, [r7, #12]
 409 024e A047     		blx	r4
 410              	.LVL30:
 147:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xC5, &short_reg_data[25], 0);
 411              		.loc 1 147 9
 412 0250 FB68     		ldr	r3, [r7, #12]
 413 0252 D3F85041 		ldr	r4, [r3, #336]
 414              		.loc 1 147 3
 415 0256 0023     		movs	r3, #0
 416 0258 3D4A     		ldr	r2, .L8+140
 417 025a C521     		movs	r1, #197
 418 025c F868     		ldr	r0, [r7, #12]
 419 025e A047     		blx	r4
 420              	.LVL31:
 148:./BSP/Components/Src/lcd.c ****   
 149:./BSP/Components/Src/lcd.c ****   /* Source driver precharge */
 150:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 421              		.loc 1 150 9
 422 0260 FB68     		ldr	r3, [r7, #12]
 423 0262 D3F85041 		ldr	r4, [r3, #336]
 424              		.loc 1 150 3
 425 0266 0023     		movs	r3, #0
ARM GAS  /tmp/ccNaYeKW.s 			page 11


 426 0268 2C4A     		ldr	r2, .L8+88
 427 026a 0021     		movs	r1, #0
 428 026c F868     		ldr	r0, [r7, #12]
 429 026e A047     		blx	r4
 430              	.LVL32:
 151:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xC4, &short_reg_data[26], 0);
 431              		.loc 1 151 9
 432 0270 FB68     		ldr	r3, [r7, #12]
 433 0272 D3F85041 		ldr	r4, [r3, #336]
 434              		.loc 1 151 3
 435 0276 0023     		movs	r3, #0
 436 0278 364A     		ldr	r2, .L8+144
 437 027a C421     		movs	r1, #196
 438 027c F868     		ldr	r0, [r7, #12]
 439 027e A047     		blx	r4
 440              	.LVL33:
 152:./BSP/Components/Src/lcd.c ****   
 153:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[15], 0);
 441              		.loc 1 153 9
 442 0280 FB68     		ldr	r3, [r7, #12]
 443 0282 D3F85041 		ldr	r4, [r3, #336]
 444              		.loc 1 153 3
 445 0286 0023     		movs	r3, #0
 446 0288 264A     		ldr	r2, .L8+96
 447 028a 0021     		movs	r1, #0
 448 028c F868     		ldr	r0, [r7, #12]
 449 028e A047     		blx	r4
 450              	.LVL34:
 154:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xC1, &short_reg_data[27], 0);
 451              		.loc 1 154 9
 452 0290 FB68     		ldr	r3, [r7, #12]
 453 0292 D3F85041 		ldr	r4, [r3, #336]
 454              		.loc 1 154 3
 455 0296 0023     		movs	r3, #0
 456 0298 2F4A     		ldr	r2, .L8+148
 457 029a C121     		movs	r1, #193
 458 029c F868     		ldr	r0, [r7, #12]
 459 029e A047     		blx	r4
 460              	.LVL35:
 155:./BSP/Components/Src/lcd.c ****   
 156:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[28], 0);
 461              		.loc 1 156 9
 462 02a0 FB68     		ldr	r3, [r7, #12]
 463 02a2 D3F85041 		ldr	r4, [r3, #336]
 464              		.loc 1 156 3
 465 02a6 0023     		movs	r3, #0
 466 02a8 2C4A     		ldr	r2, .L8+152
 467 02aa 0021     		movs	r1, #0
 468 02ac F868     		ldr	r0, [r7, #12]
 469 02ae A047     		blx	r4
 470              	.LVL36:
 157:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xB3, lcd_reg_data6, 2);
 471              		.loc 1 157 9
 472 02b0 FB68     		ldr	r3, [r7, #12]
 473 02b2 D3F85041 		ldr	r4, [r3, #336]
 474              		.loc 1 157 3
 475 02b6 0223     		movs	r3, #2
ARM GAS  /tmp/ccNaYeKW.s 			page 12


 476 02b8 294A     		ldr	r2, .L8+156
 477 02ba B321     		movs	r1, #179
 478 02bc F868     		ldr	r0, [r7, #12]
 479 02be A047     		blx	r4
 480              	.LVL37:
 481 02c0 50E0     		b	.L9
 482              	.L10:
 483 02c2 00BF     		.align	2
 484              	.L8:
 485 02c4 00000000 		.word	LCD_write_reg
 486 02c8 00000000 		.word	LCD_read_reg
 487 02cc 00000000 		.word	lcd_readID
 488 02d0 00000000 		.word	lcd_setBrightness
 489 02d4 00000000 		.word	lcd_displayOnOFF
 490 02d8 00000000 		.word	lcd_setOrientation
 491 02dc 00000000 		.word	lcd_getXsize
 492 02e0 00000000 		.word	lcd_getYsize
 493 02e4 01000000 		.word	short_reg_data.16639+1
 494 02e8 00000000 		.word	lcd_reg_data1.16614
 495 02ec 02000000 		.word	short_reg_data.16639+2
 496 02f0 00000000 		.word	lcd_reg_data2.16615
 497 02f4 03000000 		.word	short_reg_data.16639+3
 498 02f8 04000000 		.word	short_reg_data.16639+4
 499 02fc 05000000 		.word	short_reg_data.16639+5
 500 0300 06000000 		.word	short_reg_data.16639+6
 501 0304 07000000 		.word	short_reg_data.16639+7
 502 0308 08000000 		.word	short_reg_data.16639+8
 503 030c 09000000 		.word	short_reg_data.16639+9
 504 0310 0A000000 		.word	short_reg_data.16639+10
 505 0314 0B000000 		.word	short_reg_data.16639+11
 506 0318 0C000000 		.word	short_reg_data.16639+12
 507 031c 0D000000 		.word	short_reg_data.16639+13
 508 0320 0E000000 		.word	short_reg_data.16639+14
 509 0324 0F000000 		.word	short_reg_data.16639+15
 510 0328 10000000 		.word	short_reg_data.16639+16
 511 032c 11000000 		.word	short_reg_data.16639+17
 512 0330 12000000 		.word	short_reg_data.16639+18
 513 0334 13000000 		.word	short_reg_data.16639+19
 514 0338 00000000 		.word	lcd_reg_data5.16618
 515 033c 14000000 		.word	short_reg_data.16639+20
 516 0340 15000000 		.word	short_reg_data.16639+21
 517 0344 16000000 		.word	short_reg_data.16639+22
 518 0348 17000000 		.word	short_reg_data.16639+23
 519 034c 18000000 		.word	short_reg_data.16639+24
 520 0350 19000000 		.word	short_reg_data.16639+25
 521 0354 1A000000 		.word	short_reg_data.16639+26
 522 0358 1B000000 		.word	short_reg_data.16639+27
 523 035c 1C000000 		.word	short_reg_data.16639+28
 524 0360 00000000 		.word	lcd_reg_data6.16619
 525              	.L9:
 158:./BSP/Components/Src/lcd.c ****   
 159:./BSP/Components/Src/lcd.c ****   /* GOAVST */
 160:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 526              		.loc 1 160 9
 527 0364 FB68     		ldr	r3, [r7, #12]
 528 0366 D3F85041 		ldr	r4, [r3, #336]
 529              		.loc 1 160 3
ARM GAS  /tmp/ccNaYeKW.s 			page 13


 530 036a 0023     		movs	r3, #0
 531 036c A94A     		ldr	r2, .L11
 532 036e 0021     		movs	r1, #0
 533 0370 F868     		ldr	r0, [r7, #12]
 534 0372 A047     		blx	r4
 535              	.LVL38:
 161:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCE, lcd_reg_data7, 6);
 536              		.loc 1 161 9
 537 0374 FB68     		ldr	r3, [r7, #12]
 538 0376 D3F85041 		ldr	r4, [r3, #336]
 539              		.loc 1 161 3
 540 037a 0623     		movs	r3, #6
 541 037c A64A     		ldr	r2, .L11+4
 542 037e CE21     		movs	r1, #206
 543 0380 F868     		ldr	r0, [r7, #12]
 544 0382 A047     		blx	r4
 545              	.LVL39:
 162:./BSP/Components/Src/lcd.c ****   
 163:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 546              		.loc 1 163 9
 547 0384 FB68     		ldr	r3, [r7, #12]
 548 0386 D3F85041 		ldr	r4, [r3, #336]
 549              		.loc 1 163 3
 550 038a 0023     		movs	r3, #0
 551 038c A34A     		ldr	r2, .L11+8
 552 038e 0021     		movs	r1, #0
 553 0390 F868     		ldr	r0, [r7, #12]
 554 0392 A047     		blx	r4
 555              	.LVL40:
 164:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCE, lcd_reg_data8, 14);
 556              		.loc 1 164 9
 557 0394 FB68     		ldr	r3, [r7, #12]
 558 0396 D3F85041 		ldr	r4, [r3, #336]
 559              		.loc 1 164 3
 560 039a 0E23     		movs	r3, #14
 561 039c A04A     		ldr	r2, .L11+12
 562 039e CE21     		movs	r1, #206
 563 03a0 F868     		ldr	r0, [r7, #12]
 564 03a2 A047     		blx	r4
 565              	.LVL41:
 165:./BSP/Components/Src/lcd.c ****   
 166:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 566              		.loc 1 166 9
 567 03a4 FB68     		ldr	r3, [r7, #12]
 568 03a6 D3F85041 		ldr	r4, [r3, #336]
 569              		.loc 1 166 3
 570 03aa 0023     		movs	r3, #0
 571 03ac 9D4A     		ldr	r2, .L11+16
 572 03ae 0021     		movs	r1, #0
 573 03b0 F868     		ldr	r0, [r7, #12]
 574 03b2 A047     		blx	r4
 575              	.LVL42:
 167:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCE, lcd_reg_data9, 14);
 576              		.loc 1 167 9
 577 03b4 FB68     		ldr	r3, [r7, #12]
 578 03b6 D3F85041 		ldr	r4, [r3, #336]
 579              		.loc 1 167 3
ARM GAS  /tmp/ccNaYeKW.s 			page 14


 580 03ba 0E23     		movs	r3, #14
 581 03bc 9A4A     		ldr	r2, .L11+20
 582 03be CE21     		movs	r1, #206
 583 03c0 F868     		ldr	r0, [r7, #12]
 584 03c2 A047     		blx	r4
 585              	.LVL43:
 168:./BSP/Components/Src/lcd.c ****   
 169:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 586              		.loc 1 169 9
 587 03c4 FB68     		ldr	r3, [r7, #12]
 588 03c6 D3F85041 		ldr	r4, [r3, #336]
 589              		.loc 1 169 3
 590 03ca 0023     		movs	r3, #0
 591 03cc 974A     		ldr	r2, .L11+24
 592 03ce 0021     		movs	r1, #0
 593 03d0 F868     		ldr	r0, [r7, #12]
 594 03d2 A047     		blx	r4
 595              	.LVL44:
 170:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCF, lcd_reg_data10, 10);
 596              		.loc 1 170 9
 597 03d4 FB68     		ldr	r3, [r7, #12]
 598 03d6 D3F85041 		ldr	r4, [r3, #336]
 599              		.loc 1 170 3
 600 03da 0A23     		movs	r3, #10
 601 03dc 944A     		ldr	r2, .L11+28
 602 03de CF21     		movs	r1, #207
 603 03e0 F868     		ldr	r0, [r7, #12]
 604 03e2 A047     		blx	r4
 605              	.LVL45:
 171:./BSP/Components/Src/lcd.c ****   
 172:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 606              		.loc 1 172 9
 607 03e4 FB68     		ldr	r3, [r7, #12]
 608 03e6 D3F85041 		ldr	r4, [r3, #336]
 609              		.loc 1 172 3
 610 03ea 0023     		movs	r3, #0
 611 03ec 914A     		ldr	r2, .L11+32
 612 03ee 0021     		movs	r1, #0
 613 03f0 F868     		ldr	r0, [r7, #12]
 614 03f2 A047     		blx	r4
 615              	.LVL46:
 173:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCF, &short_reg_data[45], 0);
 616              		.loc 1 173 9
 617 03f4 FB68     		ldr	r3, [r7, #12]
 618 03f6 D3F85041 		ldr	r4, [r3, #336]
 619              		.loc 1 173 3
 620 03fa 0023     		movs	r3, #0
 621 03fc 8E4A     		ldr	r2, .L11+36
 622 03fe CF21     		movs	r1, #207
 623 0400 F868     		ldr	r0, [r7, #12]
 624 0402 A047     		blx	r4
 625              	.LVL47:
 174:./BSP/Components/Src/lcd.c ****   
 175:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 626              		.loc 1 175 9
 627 0404 FB68     		ldr	r3, [r7, #12]
 628 0406 D3F85041 		ldr	r4, [r3, #336]
ARM GAS  /tmp/ccNaYeKW.s 			page 15


 629              		.loc 1 175 3
 630 040a 0023     		movs	r3, #0
 631 040c 814A     		ldr	r2, .L11
 632 040e 0021     		movs	r1, #0
 633 0410 F868     		ldr	r0, [r7, #12]
 634 0412 A047     		blx	r4
 635              	.LVL48:
 176:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCB, lcd_reg_data11, 10);
 636              		.loc 1 176 9
 637 0414 FB68     		ldr	r3, [r7, #12]
 638 0416 D3F85041 		ldr	r4, [r3, #336]
 639              		.loc 1 176 3
 640 041a 0A23     		movs	r3, #10
 641 041c 874A     		ldr	r2, .L11+40
 642 041e CB21     		movs	r1, #203
 643 0420 F868     		ldr	r0, [r7, #12]
 644 0422 A047     		blx	r4
 645              	.LVL49:
 177:./BSP/Components/Src/lcd.c ****   
 178:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[33], 0);
 646              		.loc 1 178 9
 647 0424 FB68     		ldr	r3, [r7, #12]
 648 0426 D3F85041 		ldr	r4, [r3, #336]
 649              		.loc 1 178 3
 650 042a 0023     		movs	r3, #0
 651 042c 844A     		ldr	r2, .L11+44
 652 042e 0021     		movs	r1, #0
 653 0430 F868     		ldr	r0, [r7, #12]
 654 0432 A047     		blx	r4
 655              	.LVL50:
 179:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCB, lcd_reg_data12, 15);
 656              		.loc 1 179 9
 657 0434 FB68     		ldr	r3, [r7, #12]
 658 0436 D3F85041 		ldr	r4, [r3, #336]
 659              		.loc 1 179 3
 660 043a 0F23     		movs	r3, #15
 661 043c 814A     		ldr	r2, .L11+48
 662 043e CB21     		movs	r1, #203
 663 0440 F868     		ldr	r0, [r7, #12]
 664 0442 A047     		blx	r4
 665              	.LVL51:
 180:./BSP/Components/Src/lcd.c ****   
 181:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 666              		.loc 1 181 9
 667 0444 FB68     		ldr	r3, [r7, #12]
 668 0446 D3F85041 		ldr	r4, [r3, #336]
 669              		.loc 1 181 3
 670 044a 0023     		movs	r3, #0
 671 044c 734A     		ldr	r2, .L11+8
 672 044e 0021     		movs	r1, #0
 673 0450 F868     		ldr	r0, [r7, #12]
 674 0452 A047     		blx	r4
 675              	.LVL52:
 182:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCB, lcd_reg_data13, 15);
 676              		.loc 1 182 9
 677 0454 FB68     		ldr	r3, [r7, #12]
 678 0456 D3F85041 		ldr	r4, [r3, #336]
ARM GAS  /tmp/ccNaYeKW.s 			page 16


 679              		.loc 1 182 3
 680 045a 0F23     		movs	r3, #15
 681 045c 7A4A     		ldr	r2, .L11+52
 682 045e CB21     		movs	r1, #203
 683 0460 F868     		ldr	r0, [r7, #12]
 684 0462 A047     		blx	r4
 685              	.LVL53:
 183:./BSP/Components/Src/lcd.c ****   
 184:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 686              		.loc 1 184 9
 687 0464 FB68     		ldr	r3, [r7, #12]
 688 0466 D3F85041 		ldr	r4, [r3, #336]
 689              		.loc 1 184 3
 690 046a 0023     		movs	r3, #0
 691 046c 6D4A     		ldr	r2, .L11+16
 692 046e 0021     		movs	r1, #0
 693 0470 F868     		ldr	r0, [r7, #12]
 694 0472 A047     		blx	r4
 695              	.LVL54:
 185:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCB, lcd_reg_data14, 10);
 696              		.loc 1 185 9
 697 0474 FB68     		ldr	r3, [r7, #12]
 698 0476 D3F85041 		ldr	r4, [r3, #336]
 699              		.loc 1 185 3
 700 047a 0A23     		movs	r3, #10
 701 047c 734A     		ldr	r2, .L11+56
 702 047e CB21     		movs	r1, #203
 703 0480 F868     		ldr	r0, [r7, #12]
 704 0482 A047     		blx	r4
 705              	.LVL55:
 186:./BSP/Components/Src/lcd.c ****   
 187:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 706              		.loc 1 187 9
 707 0484 FB68     		ldr	r3, [r7, #12]
 708 0486 D3F85041 		ldr	r4, [r3, #336]
 709              		.loc 1 187 3
 710 048a 0023     		movs	r3, #0
 711 048c 674A     		ldr	r2, .L11+24
 712 048e 0021     		movs	r1, #0
 713 0490 F868     		ldr	r0, [r7, #12]
 714 0492 A047     		blx	r4
 715              	.LVL56:
 188:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCB, lcd_reg_data15, 15);
 716              		.loc 1 188 9
 717 0494 FB68     		ldr	r3, [r7, #12]
 718 0496 D3F85041 		ldr	r4, [r3, #336]
 719              		.loc 1 188 3
 720 049a 0F23     		movs	r3, #15
 721 049c 6C4A     		ldr	r2, .L11+60
 722 049e CB21     		movs	r1, #203
 723 04a0 F868     		ldr	r0, [r7, #12]
 724 04a2 A047     		blx	r4
 725              	.LVL57:
 189:./BSP/Components/Src/lcd.c ****   
 190:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 726              		.loc 1 190 9
 727 04a4 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccNaYeKW.s 			page 17


 728 04a6 D3F85041 		ldr	r4, [r3, #336]
 729              		.loc 1 190 3
 730 04aa 0023     		movs	r3, #0
 731 04ac 614A     		ldr	r2, .L11+32
 732 04ae 0021     		movs	r1, #0
 733 04b0 F868     		ldr	r0, [r7, #12]
 734 04b2 A047     		blx	r4
 735              	.LVL58:
 191:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCB, lcd_reg_data16, 15);
 736              		.loc 1 191 9
 737 04b4 FB68     		ldr	r3, [r7, #12]
 738 04b6 D3F85041 		ldr	r4, [r3, #336]
 739              		.loc 1 191 3
 740 04ba 0F23     		movs	r3, #15
 741 04bc 654A     		ldr	r2, .L11+64
 742 04be CB21     		movs	r1, #203
 743 04c0 F868     		ldr	r0, [r7, #12]
 744 04c2 A047     		blx	r4
 745              	.LVL59:
 192:./BSP/Components/Src/lcd.c ****   
 193:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[34], 0);
 746              		.loc 1 193 9
 747 04c4 FB68     		ldr	r3, [r7, #12]
 748 04c6 D3F85041 		ldr	r4, [r3, #336]
 749              		.loc 1 193 3
 750 04ca 0023     		movs	r3, #0
 751 04cc 624A     		ldr	r2, .L11+68
 752 04ce 0021     		movs	r1, #0
 753 04d0 F868     		ldr	r0, [r7, #12]
 754 04d2 A047     		blx	r4
 755              	.LVL60:
 194:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCB, lcd_reg_data17, 10);
 756              		.loc 1 194 9
 757 04d4 FB68     		ldr	r3, [r7, #12]
 758 04d6 D3F85041 		ldr	r4, [r3, #336]
 759              		.loc 1 194 3
 760 04da 0A23     		movs	r3, #10
 761 04dc 5F4A     		ldr	r2, .L11+72
 762 04de CB21     		movs	r1, #203
 763 04e0 F868     		ldr	r0, [r7, #12]
 764 04e2 A047     		blx	r4
 765              	.LVL61:
 195:./BSP/Components/Src/lcd.c ****   
 196:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[35], 0);
 766              		.loc 1 196 9
 767 04e4 FB68     		ldr	r3, [r7, #12]
 768 04e6 D3F85041 		ldr	r4, [r3, #336]
 769              		.loc 1 196 3
 770 04ea 0023     		movs	r3, #0
 771 04ec 5C4A     		ldr	r2, .L11+76
 772 04ee 0021     		movs	r1, #0
 773 04f0 F868     		ldr	r0, [r7, #12]
 774 04f2 A047     		blx	r4
 775              	.LVL62:
 197:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCB, lcd_reg_data18, 10);
 776              		.loc 1 197 9
 777 04f4 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccNaYeKW.s 			page 18


 778 04f6 D3F85041 		ldr	r4, [r3, #336]
 779              		.loc 1 197 3
 780 04fa 0A23     		movs	r3, #10
 781 04fc 594A     		ldr	r2, .L11+80
 782 04fe CB21     		movs	r1, #203
 783 0500 F868     		ldr	r0, [r7, #12]
 784 0502 A047     		blx	r4
 785              	.LVL63:
 198:./BSP/Components/Src/lcd.c ****   
 199:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 786              		.loc 1 199 9
 787 0504 FB68     		ldr	r3, [r7, #12]
 788 0506 D3F85041 		ldr	r4, [r3, #336]
 789              		.loc 1 199 3
 790 050a 0023     		movs	r3, #0
 791 050c 414A     		ldr	r2, .L11
 792 050e 0021     		movs	r1, #0
 793 0510 F868     		ldr	r0, [r7, #12]
 794 0512 A047     		blx	r4
 795              	.LVL64:
 200:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCC, lcd_reg_data19, 10);
 796              		.loc 1 200 9
 797 0514 FB68     		ldr	r3, [r7, #12]
 798 0516 D3F85041 		ldr	r4, [r3, #336]
 799              		.loc 1 200 3
 800 051a 0A23     		movs	r3, #10
 801 051c 524A     		ldr	r2, .L11+84
 802 051e CC21     		movs	r1, #204
 803 0520 F868     		ldr	r0, [r7, #12]
 804 0522 A047     		blx	r4
 805              	.LVL65:
 201:./BSP/Components/Src/lcd.c ****   
 202:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[33], 0);
 806              		.loc 1 202 9
 807 0524 FB68     		ldr	r3, [r7, #12]
 808 0526 D3F85041 		ldr	r4, [r3, #336]
 809              		.loc 1 202 3
 810 052a 0023     		movs	r3, #0
 811 052c 444A     		ldr	r2, .L11+44
 812 052e 0021     		movs	r1, #0
 813 0530 F868     		ldr	r0, [r7, #12]
 814 0532 A047     		blx	r4
 815              	.LVL66:
 203:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCC, lcd_reg_data20, 15);
 816              		.loc 1 203 9
 817 0534 FB68     		ldr	r3, [r7, #12]
 818 0536 D3F85041 		ldr	r4, [r3, #336]
 819              		.loc 1 203 3
 820 053a 0F23     		movs	r3, #15
 821 053c 4B4A     		ldr	r2, .L11+88
 822 053e CC21     		movs	r1, #204
 823 0540 F868     		ldr	r0, [r7, #12]
 824 0542 A047     		blx	r4
 825              	.LVL67:
 204:./BSP/Components/Src/lcd.c ****   
 205:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 826              		.loc 1 205 9
ARM GAS  /tmp/ccNaYeKW.s 			page 19


 827 0544 FB68     		ldr	r3, [r7, #12]
 828 0546 D3F85041 		ldr	r4, [r3, #336]
 829              		.loc 1 205 3
 830 054a 0023     		movs	r3, #0
 831 054c 334A     		ldr	r2, .L11+8
 832 054e 0021     		movs	r1, #0
 833 0550 F868     		ldr	r0, [r7, #12]
 834 0552 A047     		blx	r4
 835              	.LVL68:
 206:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCC, lcd_reg_data21, 15);
 836              		.loc 1 206 9
 837 0554 FB68     		ldr	r3, [r7, #12]
 838 0556 D3F85041 		ldr	r4, [r3, #336]
 839              		.loc 1 206 3
 840 055a 0F23     		movs	r3, #15
 841 055c 444A     		ldr	r2, .L11+92
 842 055e CC21     		movs	r1, #204
 843 0560 F868     		ldr	r0, [r7, #12]
 844 0562 A047     		blx	r4
 845              	.LVL69:
 207:./BSP/Components/Src/lcd.c ****   
 208:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 846              		.loc 1 208 9
 847 0564 FB68     		ldr	r3, [r7, #12]
 848 0566 D3F85041 		ldr	r4, [r3, #336]
 849              		.loc 1 208 3
 850 056a 0023     		movs	r3, #0
 851 056c 2D4A     		ldr	r2, .L11+16
 852 056e 0021     		movs	r1, #0
 853 0570 F868     		ldr	r0, [r7, #12]
 854 0572 A047     		blx	r4
 855              	.LVL70:
 209:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCC, lcd_reg_data22, 10);
 856              		.loc 1 209 9
 857 0574 FB68     		ldr	r3, [r7, #12]
 858 0576 D3F85041 		ldr	r4, [r3, #336]
 859              		.loc 1 209 3
 860 057a 0A23     		movs	r3, #10
 861 057c 3D4A     		ldr	r2, .L11+96
 862 057e CC21     		movs	r1, #204
 863 0580 F868     		ldr	r0, [r7, #12]
 864 0582 A047     		blx	r4
 865              	.LVL71:
 210:./BSP/Components/Src/lcd.c ****   
 211:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 866              		.loc 1 211 9
 867 0584 FB68     		ldr	r3, [r7, #12]
 868 0586 D3F85041 		ldr	r4, [r3, #336]
 869              		.loc 1 211 3
 870 058a 0023     		movs	r3, #0
 871 058c 274A     		ldr	r2, .L11+24
 872 058e 0021     		movs	r1, #0
 873 0590 F868     		ldr	r0, [r7, #12]
 874 0592 A047     		blx	r4
 875              	.LVL72:
 212:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCC, lcd_reg_data23, 15);
 876              		.loc 1 212 9
ARM GAS  /tmp/ccNaYeKW.s 			page 20


 877 0594 FB68     		ldr	r3, [r7, #12]
 878 0596 D3F85041 		ldr	r4, [r3, #336]
 879              		.loc 1 212 3
 880 059a 0F23     		movs	r3, #15
 881 059c 364A     		ldr	r2, .L11+100
 882 059e CC21     		movs	r1, #204
 883 05a0 F868     		ldr	r0, [r7, #12]
 884 05a2 A047     		blx	r4
 885              	.LVL73:
 213:./BSP/Components/Src/lcd.c ****   
 214:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 886              		.loc 1 214 9
 887 05a4 FB68     		ldr	r3, [r7, #12]
 888 05a6 D3F85041 		ldr	r4, [r3, #336]
 889              		.loc 1 214 3
 890 05aa 0023     		movs	r3, #0
 891 05ac 214A     		ldr	r2, .L11+32
 892 05ae 0021     		movs	r1, #0
 893 05b0 F868     		ldr	r0, [r7, #12]
 894 05b2 A047     		blx	r4
 895              	.LVL74:
 215:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xCC, lcd_reg_data24, 15);
 896              		.loc 1 215 9
 897 05b4 FB68     		ldr	r3, [r7, #12]
 898 05b6 D3F85041 		ldr	r4, [r3, #336]
 899              		.loc 1 215 3
 900 05ba 0F23     		movs	r3, #15
 901 05bc 2F4A     		ldr	r2, .L11+104
 902 05be CC21     		movs	r1, #204
 903 05c0 F868     		ldr	r0, [r7, #12]
 904 05c2 A047     		blx	r4
 905              	.LVL75:
 216:./BSP/Components/Src/lcd.c ****   
 217:./BSP/Components/Src/lcd.c ****   /////////////////////////////////////////////////////////////////////////////
 218:./BSP/Components/Src/lcd.c ****   /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
 219:./BSP/Components/Src/lcd.c ****   /* Pump 1 min and max DM                                */
 220:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 906              		.loc 1 220 9
 907 05c4 FB68     		ldr	r3, [r7, #12]
 908 05c6 D3F85041 		ldr	r4, [r3, #336]
 909              		.loc 1 220 3
 910 05ca 0023     		movs	r3, #0
 911 05cc 2C4A     		ldr	r2, .L11+108
 912 05ce 0021     		movs	r1, #0
 913 05d0 F868     		ldr	r0, [r7, #12]
 914 05d2 A047     		blx	r4
 915              	.LVL76:
 221:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xC5, &short_reg_data[46], 0);
 916              		.loc 1 221 9
 917 05d4 FB68     		ldr	r3, [r7, #12]
 918 05d6 D3F85041 		ldr	r4, [r3, #336]
 919              		.loc 1 221 3
 920 05da 0023     		movs	r3, #0
 921 05dc 294A     		ldr	r2, .L11+112
 922 05de C521     		movs	r1, #197
 923 05e0 F868     		ldr	r0, [r7, #12]
 924 05e2 A047     		blx	r4
ARM GAS  /tmp/ccNaYeKW.s 			page 21


 925              	.LVL77:
 222:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[47], 0);
 926              		.loc 1 222 9
 927 05e4 FB68     		ldr	r3, [r7, #12]
 928 05e6 D3F85041 		ldr	r4, [r3, #336]
 929              		.loc 1 222 3
 930 05ea 0023     		movs	r3, #0
 931 05ec 264A     		ldr	r2, .L11+116
 932 05ee 0021     		movs	r1, #0
 933 05f0 F868     		ldr	r0, [r7, #12]
 934 05f2 A047     		blx	r4
 935              	.LVL78:
 223:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xF5, &short_reg_data[48], 0);
 936              		.loc 1 223 9
 937 05f4 FB68     		ldr	r3, [r7, #12]
 938 05f6 D3F85041 		ldr	r4, [r3, #336]
 939              		.loc 1 223 3
 940 05fa 0023     		movs	r3, #0
 941 05fc 234A     		ldr	r2, .L11+120
 942 05fe F521     		movs	r1, #245
 943 0600 F868     		ldr	r0, [r7, #12]
 944 0602 A047     		blx	r4
 945              	.LVL79:
 224:./BSP/Components/Src/lcd.c ****   /////////////////////////////////////////////////////////////////////////////
 225:./BSP/Components/Src/lcd.c ****   
 226:./BSP/Components/Src/lcd.c ****   /* CABC LEDPWM frequency adjusted to 19,5kHz */
 227:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[49], 0);
 946              		.loc 1 227 9
 947 0604 FB68     		ldr	r3, [r7, #12]
 948 0606 D3F85041 		ldr	r4, [r3, #336]
 949              		.loc 1 227 3
 950 060a 0023     		movs	r3, #0
 951 060c 204A     		ldr	r2, .L11+124
 952 060e 0021     		movs	r1, #0
 953 0610 40E0     		b	.L12
 954              	.L13:
 955 0612 00BF     		.align	2
 956              	.L11:
 957 0614 02000000 		.word	short_reg_data.16639+2
 958 0618 00000000 		.word	lcd_reg_data7.16620
 959 061c 1D000000 		.word	short_reg_data.16639+29
 960 0620 00000000 		.word	lcd_reg_data8.16621
 961 0624 1E000000 		.word	short_reg_data.16639+30
 962 0628 00000000 		.word	lcd_reg_data9.16622
 963 062c 1F000000 		.word	short_reg_data.16639+31
 964 0630 00000000 		.word	lcd_reg_data10.16623
 965 0634 20000000 		.word	short_reg_data.16639+32
 966 0638 2D000000 		.word	short_reg_data.16639+45
 967 063c 00000000 		.word	lcd_reg_data11.16624
 968 0640 21000000 		.word	short_reg_data.16639+33
 969 0644 00000000 		.word	lcd_reg_data12.16625
 970 0648 00000000 		.word	lcd_reg_data13.16626
 971 064c 00000000 		.word	lcd_reg_data14.16627
 972 0650 00000000 		.word	lcd_reg_data15.16628
 973 0654 00000000 		.word	lcd_reg_data16.16629
 974 0658 22000000 		.word	short_reg_data.16639+34
 975 065c 00000000 		.word	lcd_reg_data17.16630
ARM GAS  /tmp/ccNaYeKW.s 			page 22


 976 0660 23000000 		.word	short_reg_data.16639+35
 977 0664 00000000 		.word	lcd_reg_data18.16631
 978 0668 00000000 		.word	lcd_reg_data19.16632
 979 066c 00000000 		.word	lcd_reg_data20.16633
 980 0670 00000000 		.word	lcd_reg_data21.16634
 981 0674 00000000 		.word	lcd_reg_data22.16635
 982 0678 00000000 		.word	lcd_reg_data23.16636
 983 067c 00000000 		.word	lcd_reg_data24.16637
 984 0680 0D000000 		.word	short_reg_data.16639+13
 985 0684 2E000000 		.word	short_reg_data.16639+46
 986 0688 2F000000 		.word	short_reg_data.16639+47
 987 068c 30000000 		.word	short_reg_data.16639+48
 988 0690 31000000 		.word	short_reg_data.16639+49
 989              	.L12:
 990 0694 F868     		ldr	r0, [r7, #12]
 991 0696 A047     		blx	r4
 992              	.LVL80:
 228:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xC6, &short_reg_data[50], 0);
 993              		.loc 1 228 9
 994 0698 FB68     		ldr	r3, [r7, #12]
 995 069a D3F85041 		ldr	r4, [r3, #336]
 996              		.loc 1 228 3
 997 069e 0023     		movs	r3, #0
 998 06a0 8D4A     		ldr	r2, .L14
 999 06a2 C621     		movs	r1, #198
 1000 06a4 F868     		ldr	r0, [r7, #12]
 1001 06a6 A047     		blx	r4
 1002              	.LVL81:
 229:./BSP/Components/Src/lcd.c ****   
 230:./BSP/Components/Src/lcd.c ****   /* Exit CMD2 mode */
 231:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 1003              		.loc 1 231 9
 1004 06a8 FB68     		ldr	r3, [r7, #12]
 1005 06aa D3F85041 		ldr	r4, [r3, #336]
 1006              		.loc 1 231 3
 1007 06ae 0023     		movs	r3, #0
 1008 06b0 8A4A     		ldr	r2, .L14+4
 1009 06b2 0021     		movs	r1, #0
 1010 06b4 F868     		ldr	r0, [r7, #12]
 1011 06b6 A047     		blx	r4
 1012              	.LVL82:
 232:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xFF, lcd_reg_data25, 3);
 1013              		.loc 1 232 9
 1014 06b8 FB68     		ldr	r3, [r7, #12]
 1015 06ba D3F85041 		ldr	r4, [r3, #336]
 1016              		.loc 1 232 3
 1017 06be 0323     		movs	r3, #3
 1018 06c0 874A     		ldr	r2, .L14+8
 1019 06c2 FF21     		movs	r1, #255
 1020 06c4 F868     		ldr	r0, [r7, #12]
 1021 06c6 A047     		blx	r4
 1022              	.LVL83:
 233:./BSP/Components/Src/lcd.c ****   
 234:./BSP/Components/Src/lcd.c ****   /*************************************************************************** */
 235:./BSP/Components/Src/lcd.c ****   /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
 236:./BSP/Components/Src/lcd.c ****   /*************************************************************************** */
 237:./BSP/Components/Src/lcd.c ****   
ARM GAS  /tmp/ccNaYeKW.s 			page 23


 238:./BSP/Components/Src/lcd.c ****   /* NOP - goes back to DCS std command ? */
 239:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 1023              		.loc 1 239 9
 1024 06c8 FB68     		ldr	r3, [r7, #12]
 1025 06ca D3F85041 		ldr	r4, [r3, #336]
 1026              		.loc 1 239 3
 1027 06ce 0023     		movs	r3, #0
 1028 06d0 824A     		ldr	r2, .L14+4
 1029 06d2 0021     		movs	r1, #0
 1030 06d4 F868     		ldr	r0, [r7, #12]
 1031 06d6 A047     		blx	r4
 1032              	.LVL84:
 240:./BSP/Components/Src/lcd.c ****   
 241:./BSP/Components/Src/lcd.c ****   /* Gamma correction 2.2+ table (HSDT possible) */
 242:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 1033              		.loc 1 242 9
 1034 06d8 FB68     		ldr	r3, [r7, #12]
 1035 06da D3F85041 		ldr	r4, [r3, #336]
 1036              		.loc 1 242 3
 1037 06de 0023     		movs	r3, #0
 1038 06e0 7E4A     		ldr	r2, .L14+4
 1039 06e2 0021     		movs	r1, #0
 1040 06e4 F868     		ldr	r0, [r7, #12]
 1041 06e6 A047     		blx	r4
 1042              	.LVL85:
 243:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xE1, lcd_reg_data3, 16);
 1043              		.loc 1 243 9
 1044 06e8 FB68     		ldr	r3, [r7, #12]
 1045 06ea D3F85041 		ldr	r4, [r3, #336]
 1046              		.loc 1 243 3
 1047 06ee 1023     		movs	r3, #16
 1048 06f0 7C4A     		ldr	r2, .L14+12
 1049 06f2 E121     		movs	r1, #225
 1050 06f4 F868     		ldr	r0, [r7, #12]
 1051 06f6 A047     		blx	r4
 1052              	.LVL86:
 244:./BSP/Components/Src/lcd.c ****   
 245:./BSP/Components/Src/lcd.c ****   /* Gamma correction 2.2- table (HSDT possible) */
 246:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 1053              		.loc 1 246 9
 1054 06f8 FB68     		ldr	r3, [r7, #12]
 1055 06fa D3F85041 		ldr	r4, [r3, #336]
 1056              		.loc 1 246 3
 1057 06fe 0023     		movs	r3, #0
 1058 0700 764A     		ldr	r2, .L14+4
 1059 0702 0021     		movs	r1, #0
 1060 0704 F868     		ldr	r0, [r7, #12]
 1061 0706 A047     		blx	r4
 1062              	.LVL87:
 247:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, 0xE2, lcd_reg_data4, 16);
 1063              		.loc 1 247 9
 1064 0708 FB68     		ldr	r3, [r7, #12]
 1065 070a D3F85041 		ldr	r4, [r3, #336]
 1066              		.loc 1 247 3
 1067 070e 1023     		movs	r3, #16
 1068 0710 754A     		ldr	r2, .L14+16
 1069 0712 E221     		movs	r1, #226
ARM GAS  /tmp/ccNaYeKW.s 			page 24


 1070 0714 F868     		ldr	r0, [r7, #12]
 1071 0716 A047     		blx	r4
 1072              	.LVL88:
 248:./BSP/Components/Src/lcd.c ****   
 249:./BSP/Components/Src/lcd.c ****   /* Send Sleep Out command to display : no parameter */
 250:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_SLPOUT, &short_reg_data[36], 0);
 1073              		.loc 1 250 9
 1074 0718 FB68     		ldr	r3, [r7, #12]
 1075 071a D3F85041 		ldr	r4, [r3, #336]
 1076              		.loc 1 250 3
 1077 071e 0023     		movs	r3, #0
 1078 0720 724A     		ldr	r2, .L14+20
 1079 0722 1121     		movs	r1, #17
 1080 0724 F868     		ldr	r0, [r7, #12]
 1081 0726 A047     		blx	r4
 1082              	.LVL89:
 251:./BSP/Components/Src/lcd.c ****   
 252:./BSP/Components/Src/lcd.c ****   /* Wait for sleep out exit */
 253:./BSP/Components/Src/lcd.c ****   HAL_Delay(120);
 1083              		.loc 1 253 3
 1084 0728 7820     		movs	r0, #120
 1085 072a FFF7FEFF 		bl	HAL_Delay
 254:./BSP/Components/Src/lcd.c ****   
 255:./BSP/Components/Src/lcd.c ****   switch(colorCoding)
 1086              		.loc 1 255 3
 1087 072e BB68     		ldr	r3, [r7, #8]
 1088 0730 002B     		cmp	r3, #0
 1089 0732 0FD0     		beq	.L2
 1090 0734 BB68     		ldr	r3, [r7, #8]
 1091 0736 022B     		cmp	r3, #2
 1092 0738 19D1     		bne	.L7
 256:./BSP/Components/Src/lcd.c ****   {
 257:./BSP/Components/Src/lcd.c ****   case OTM8009A_FORMAT_RBG565 :
 258:./BSP/Components/Src/lcd.c ****     /* Set Pixel color format to RGB565 */
 259:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object, OTM8009A_CMD_COLMOD, &short_reg_data[37], 0);
 1093              		.loc 1 259 11
 1094 073a FB68     		ldr	r3, [r7, #12]
 1095 073c D3F85041 		ldr	r4, [r3, #336]
 1096              		.loc 1 259 5
 1097 0740 0023     		movs	r3, #0
 1098 0742 6B4A     		ldr	r2, .L14+24
 1099 0744 3A21     		movs	r1, #58
 1100 0746 F868     		ldr	r0, [r7, #12]
 1101 0748 A047     		blx	r4
 1102              	.LVL90:
 260:./BSP/Components/Src/lcd.c ****     object->colorCode = OTM8009A_FORMAT_RBG565;
 1103              		.loc 1 260 23
 1104 074a FB68     		ldr	r3, [r7, #12]
 1105 074c 0222     		movs	r2, #2
 1106 074e C3F84021 		str	r2, [r3, #320]
 261:./BSP/Components/Src/lcd.c ****     break;
 1107              		.loc 1 261 5
 1108 0752 0DE0     		b	.L4
 1109              	.L2:
 262:./BSP/Components/Src/lcd.c ****   case OTM8009A_FORMAT_RGB888 :
 263:./BSP/Components/Src/lcd.c ****     /* Set Pixel color format to RGB888 */
 264:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object, OTM8009A_CMD_COLMOD, &short_reg_data[38], 0);
ARM GAS  /tmp/ccNaYeKW.s 			page 25


 1110              		.loc 1 264 11
 1111 0754 FB68     		ldr	r3, [r7, #12]
 1112 0756 D3F85041 		ldr	r4, [r3, #336]
 1113              		.loc 1 264 5
 1114 075a 0023     		movs	r3, #0
 1115 075c 654A     		ldr	r2, .L14+28
 1116 075e 3A21     		movs	r1, #58
 1117 0760 F868     		ldr	r0, [r7, #12]
 1118 0762 A047     		blx	r4
 1119              	.LVL91:
 265:./BSP/Components/Src/lcd.c ****     object->colorCode = OTM8009A_FORMAT_RGB888;
 1120              		.loc 1 265 23
 1121 0764 FB68     		ldr	r3, [r7, #12]
 1122 0766 0022     		movs	r2, #0
 1123 0768 C3F84021 		str	r2, [r3, #320]
 266:./BSP/Components/Src/lcd.c ****     break;
 1124              		.loc 1 266 5
 1125 076c 00E0     		b	.L4
 1126              	.L7:
 267:./BSP/Components/Src/lcd.c ****   default :
 268:./BSP/Components/Src/lcd.c ****     break;
 1127              		.loc 1 268 5
 1128 076e 00BF     		nop
 1129              	.L4:
 269:./BSP/Components/Src/lcd.c ****   }
 270:./BSP/Components/Src/lcd.c ****   
 271:./BSP/Components/Src/lcd.c ****   /* Send command to configure display in landscape orientation mode. By default
 272:./BSP/Components/Src/lcd.c ****   the orientation mode is portrait  */
 273:./BSP/Components/Src/lcd.c ****   if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 1130              		.loc 1 273 5
 1131 0770 7B68     		ldr	r3, [r7, #4]
 1132 0772 012B     		cmp	r3, #1
 1133 0774 1FD1     		bne	.L5
 1134              	.LBB2:
 274:./BSP/Components/Src/lcd.c ****   {
 275:./BSP/Components/Src/lcd.c **** 	  uint8_t tmp = OTM8009A_MADCTR_MODE_LANDSCAPE;
 1135              		.loc 1 275 12
 1136 0776 6023     		movs	r3, #96
 1137 0778 FB74     		strb	r3, [r7, #19]
 276:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object, OTM8009A_CMD_MADCTR, &tmp, 0);
 1138              		.loc 1 276 11
 1139 077a FB68     		ldr	r3, [r7, #12]
 1140 077c D3F85041 		ldr	r4, [r3, #336]
 1141              		.loc 1 276 5
 1142 0780 07F11302 		add	r2, r7, #19
 1143 0784 0023     		movs	r3, #0
 1144 0786 3621     		movs	r1, #54
 1145 0788 F868     		ldr	r0, [r7, #12]
 1146 078a A047     		blx	r4
 1147              	.LVL92:
 277:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object, OTM8009A_CMD_CASET, LcdRegData27, 4);
 1148              		.loc 1 277 11
 1149 078c FB68     		ldr	r3, [r7, #12]
 1150 078e D3F85041 		ldr	r4, [r3, #336]
 1151              		.loc 1 277 5
 1152 0792 0423     		movs	r3, #4
 1153 0794 584A     		ldr	r2, .L14+32
ARM GAS  /tmp/ccNaYeKW.s 			page 26


 1154 0796 2A21     		movs	r1, #42
 1155 0798 F868     		ldr	r0, [r7, #12]
 1156 079a A047     		blx	r4
 1157              	.LVL93:
 278:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object, OTM8009A_CMD_PASET, LcdRegData28, 4);
 1158              		.loc 1 278 11
 1159 079c FB68     		ldr	r3, [r7, #12]
 1160 079e D3F85041 		ldr	r4, [r3, #336]
 1161              		.loc 1 278 5
 1162 07a2 0423     		movs	r3, #4
 1163 07a4 554A     		ldr	r2, .L14+36
 1164 07a6 2B21     		movs	r1, #43
 1165 07a8 F868     		ldr	r0, [r7, #12]
 1166 07aa A047     		blx	r4
 1167              	.LVL94:
 279:./BSP/Components/Src/lcd.c ****     
 280:./BSP/Components/Src/lcd.c ****     object->orientation = OTM8009A_ORIENTATION_LANDSCAPE;
 1168              		.loc 1 280 25
 1169 07ac FB68     		ldr	r3, [r7, #12]
 1170 07ae 0122     		movs	r2, #1
 1171 07b0 C3F84421 		str	r2, [r3, #324]
 1172              	.LBE2:
 1173 07b4 03E0     		b	.L6
 1174              	.L5:
 281:./BSP/Components/Src/lcd.c ****   }
 282:./BSP/Components/Src/lcd.c ****   else
 283:./BSP/Components/Src/lcd.c ****   {
 284:./BSP/Components/Src/lcd.c ****     object->orientation = OTM8009A_ORIENTATION_PORTRAIT;
 1175              		.loc 1 284 25
 1176 07b6 FB68     		ldr	r3, [r7, #12]
 1177 07b8 0022     		movs	r2, #0
 1178 07ba C3F84421 		str	r2, [r3, #324]
 1179              	.L6:
 285:./BSP/Components/Src/lcd.c ****   }
 286:./BSP/Components/Src/lcd.c ****   
 287:./BSP/Components/Src/lcd.c ****   /** CABC : Content Adaptive Backlight Control section start >> */
 288:./BSP/Components/Src/lcd.c ****   /* Note : defaut is 0 (lowest Brightness], 0xFF is highest Brightness, try 0x7F : intermediate va
 289:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_WRDISBV, &short_reg_data[39], 0);
 1180              		.loc 1 289 9
 1181 07be FB68     		ldr	r3, [r7, #12]
 1182 07c0 D3F85041 		ldr	r4, [r3, #336]
 1183              		.loc 1 289 3
 1184 07c4 0023     		movs	r3, #0
 1185 07c6 4E4A     		ldr	r2, .L14+40
 1186 07c8 5121     		movs	r1, #81
 1187 07ca F868     		ldr	r0, [r7, #12]
 1188 07cc A047     		blx	r4
 1189              	.LVL95:
 290:./BSP/Components/Src/lcd.c ****   /* Store default brightness */
 291:./BSP/Components/Src/lcd.c ****   object->brightness = ((uint32_t)short_reg_data[39] / 0xFFU) * 100U;
 1190              		.loc 1 291 49
 1191 07ce 4D4B     		ldr	r3, .L14+44
 1192 07d0 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 1193              		.loc 1 291 54
 1194 07d4 4C4A     		ldr	r2, .L14+48
 1195 07d6 A2FB0323 		umull	r2, r3, r2, r3
 1196 07da DB09     		lsrs	r3, r3, #7
ARM GAS  /tmp/ccNaYeKW.s 			page 27


 1197 07dc DBB2     		uxtb	r3, r3
 1198 07de 1A46     		mov	r2, r3
 1199              		.loc 1 291 63
 1200 07e0 6423     		movs	r3, #100
 1201 07e2 03FB02F2 		mul	r2, r3, r2
 1202              		.loc 1 291 22
 1203 07e6 FB68     		ldr	r3, [r7, #12]
 1204 07e8 C3F84821 		str	r2, [r3, #328]
 292:./BSP/Components/Src/lcd.c ****   
 293:./BSP/Components/Src/lcd.c ****   /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
 294:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_WRCTRLD, &short_reg_data[40], 0);
 1205              		.loc 1 294 9
 1206 07ec FB68     		ldr	r3, [r7, #12]
 1207 07ee D3F85041 		ldr	r4, [r3, #336]
 1208              		.loc 1 294 3
 1209 07f2 0023     		movs	r3, #0
 1210 07f4 454A     		ldr	r2, .L14+52
 1211 07f6 5321     		movs	r1, #83
 1212 07f8 F868     		ldr	r0, [r7, #12]
 1213 07fa A047     		blx	r4
 1214              	.LVL96:
 295:./BSP/Components/Src/lcd.c ****   
 296:./BSP/Components/Src/lcd.c ****   /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
 297:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_WRCABC, &short_reg_data[41], 0);
 1215              		.loc 1 297 9
 1216 07fc FB68     		ldr	r3, [r7, #12]
 1217 07fe D3F85041 		ldr	r4, [r3, #336]
 1218              		.loc 1 297 3
 1219 0802 0023     		movs	r3, #0
 1220 0804 424A     		ldr	r2, .L14+56
 1221 0806 5521     		movs	r1, #85
 1222 0808 F868     		ldr	r0, [r7, #12]
 1223 080a A047     		blx	r4
 1224              	.LVL97:
 298:./BSP/Components/Src/lcd.c ****   
 299:./BSP/Components/Src/lcd.c ****   /* defaut is 0 (lowest Brightness], 0xFF is highest Brightness */
 300:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_WRCABCMB, &short_reg_data[42], 0);
 1225              		.loc 1 300 9
 1226 080c FB68     		ldr	r3, [r7, #12]
 1227 080e D3F85041 		ldr	r4, [r3, #336]
 1228              		.loc 1 300 3
 1229 0812 0023     		movs	r3, #0
 1230 0814 3F4A     		ldr	r2, .L14+60
 1231 0816 5E21     		movs	r1, #94
 1232 0818 F868     		ldr	r0, [r7, #12]
 1233 081a A047     		blx	r4
 1234              	.LVL98:
 301:./BSP/Components/Src/lcd.c ****   
 302:./BSP/Components/Src/lcd.c ****   /** CABC : Content Adaptive Backlight Control section end << */
 303:./BSP/Components/Src/lcd.c ****   
 304:./BSP/Components/Src/lcd.c ****   /* Send Command Display On */
 305:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_DISPON, &short_reg_data[43], 0);
 1235              		.loc 1 305 9
 1236 081c FB68     		ldr	r3, [r7, #12]
 1237 081e D3F85041 		ldr	r4, [r3, #336]
 1238              		.loc 1 305 3
 1239 0822 0023     		movs	r3, #0
ARM GAS  /tmp/ccNaYeKW.s 			page 28


 1240 0824 3C4A     		ldr	r2, .L14+64
 1241 0826 2921     		movs	r1, #41
 1242 0828 F868     		ldr	r0, [r7, #12]
 1243 082a A047     		blx	r4
 1244              	.LVL99:
 306:./BSP/Components/Src/lcd.c ****   
 307:./BSP/Components/Src/lcd.c ****   /* NOP command */
 308:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 1245              		.loc 1 308 9
 1246 082c FB68     		ldr	r3, [r7, #12]
 1247 082e D3F85041 		ldr	r4, [r3, #336]
 1248              		.loc 1 308 3
 1249 0832 0023     		movs	r3, #0
 1250 0834 294A     		ldr	r2, .L14+4
 1251 0836 0021     		movs	r1, #0
 1252 0838 F868     		ldr	r0, [r7, #12]
 1253 083a A047     		blx	r4
 1254              	.LVL100:
 309:./BSP/Components/Src/lcd.c ****   
 310:./BSP/Components/Src/lcd.c ****   /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI comm
 311:./BSP/Components/Src/lcd.c ****   /* DSI host from LTDC incoming pixels in video mode */
 312:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object, OTM8009A_CMD_RAMWR, &short_reg_data[44], 0);
 1255              		.loc 1 312 9
 1256 083c FB68     		ldr	r3, [r7, #12]
 1257 083e D3F85041 		ldr	r4, [r3, #336]
 1258              		.loc 1 312 3
 1259 0842 0023     		movs	r3, #0
 1260 0844 354A     		ldr	r2, .L14+68
 1261 0846 2C21     		movs	r1, #44
 1262 0848 F868     		ldr	r0, [r7, #12]
 1263 084a A047     		blx	r4
 1264              	.LVL101:
 313:./BSP/Components/Src/lcd.c **** 
 314:./BSP/Components/Src/lcd.c ****   /* Configure the audio driver */
 315:./BSP/Components/Src/lcd.c ****   HAL_DSI_ShortWrite(&object->dsi_object.hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF,
 1265              		.loc 1 315 3
 1266 084c FB68     		ldr	r3, [r7, #12]
 1267 084e 03F16800 		add	r0, r3, #104
 1268 0852 0023     		movs	r3, #0
 1269 0854 0093     		str	r3, [sp]
 1270 0856 2823     		movs	r3, #40
 1271 0858 1522     		movs	r2, #21
 1272 085a 0021     		movs	r1, #0
 1273 085c FFF7FEFF 		bl	HAL_DSI_ShortWrite
 316:./BSP/Components/Src/lcd.c **** 
 317:./BSP/Components/Src/lcd.c ****   DSI_LPCmdTypeDef LPCmd = {0};
 1274              		.loc 1 317 20
 1275 0860 07F11403 		add	r3, r7, #20
 1276 0864 3422     		movs	r2, #52
 1277 0866 0021     		movs	r1, #0
 1278 0868 1846     		mov	r0, r3
 1279 086a FFF7FEFF 		bl	memset
 318:./BSP/Components/Src/lcd.c **** 
 319:./BSP/Components/Src/lcd.c ****   LPCmd.LPGenShortWriteNoP = DSI_LP_GSW0P_DISABLE;
 1280              		.loc 1 319 28
 1281 086e 0023     		movs	r3, #0
 1282 0870 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccNaYeKW.s 			page 29


 320:./BSP/Components/Src/lcd.c ****   LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 1283              		.loc 1 320 29
 1284 0872 0023     		movs	r3, #0
 1285 0874 BB61     		str	r3, [r7, #24]
 321:./BSP/Components/Src/lcd.c ****   LPCmd.LPGenShortWriteTwoP = DSI_LP_GSW2P_DISABLE;
 1286              		.loc 1 321 29
 1287 0876 0023     		movs	r3, #0
 1288 0878 FB61     		str	r3, [r7, #28]
 322:./BSP/Components/Src/lcd.c ****   LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 1289              		.loc 1 322 27
 1290 087a 0023     		movs	r3, #0
 1291 087c 3B62     		str	r3, [r7, #32]
 323:./BSP/Components/Src/lcd.c ****   LPCmd.LPGenShortReadOneP = DSI_LP_GSR1P_DISABLE;
 1292              		.loc 1 323 28
 1293 087e 0023     		movs	r3, #0
 1294 0880 7B62     		str	r3, [r7, #36]
 324:./BSP/Components/Src/lcd.c ****   LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 1295              		.loc 1 324 28
 1296 0882 0023     		movs	r3, #0
 1297 0884 BB62     		str	r3, [r7, #40]
 325:./BSP/Components/Src/lcd.c ****   LPCmd.LPGenLongWrite = DSI_LP_GLW_DISABLE;
 1298              		.loc 1 325 24
 1299 0886 0023     		movs	r3, #0
 1300 0888 FB62     		str	r3, [r7, #44]
 326:./BSP/Components/Src/lcd.c ****   LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 1301              		.loc 1 326 28
 1302 088a 0023     		movs	r3, #0
 1303 088c 3B63     		str	r3, [r7, #48]
 327:./BSP/Components/Src/lcd.c ****   LPCmd.LPDcsShortWriteOneP = DSI_LP_DSW1P_DISABLE;
 1304              		.loc 1 327 29
 1305 088e 0023     		movs	r3, #0
 1306 0890 7B63     		str	r3, [r7, #52]
 328:./BSP/Components/Src/lcd.c ****   LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 1307              		.loc 1 328 27
 1308 0892 0023     		movs	r3, #0
 1309 0894 BB63     		str	r3, [r7, #56]
 329:./BSP/Components/Src/lcd.c ****   LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 1310              		.loc 1 329 24
 1311 0896 0023     		movs	r3, #0
 1312 0898 FB63     		str	r3, [r7, #60]
 330:./BSP/Components/Src/lcd.c ****   HAL_DSI_ConfigCommand(&object->dsi_object.hdsi, &LPCmd);
 1313              		.loc 1 330 3
 1314 089a FB68     		ldr	r3, [r7, #12]
 1315 089c 6833     		adds	r3, r3, #104
 1316 089e 07F11402 		add	r2, r7, #20
 1317 08a2 1146     		mov	r1, r2
 1318 08a4 1846     		mov	r0, r3
 1319 08a6 FFF7FEFF 		bl	HAL_DSI_ConfigCommand
 331:./BSP/Components/Src/lcd.c **** 
 332:./BSP/Components/Src/lcd.c ****   HAL_LTDC_SetPitch(&object->dsi_object.hltdc, 800, 0);
 1320              		.loc 1 332 3
 1321 08aa FB68     		ldr	r3, [r7, #12]
 1322 08ac 8433     		adds	r3, r3, #132
 1323 08ae 0022     		movs	r2, #0
 1324 08b0 4FF44871 		mov	r1, #800
 1325 08b4 1846     		mov	r0, r3
 1326 08b6 FFF7FEFF 		bl	HAL_LTDC_SetPitch
ARM GAS  /tmp/ccNaYeKW.s 			page 30


 333:./BSP/Components/Src/lcd.c ****   __HAL_LTDC_ENABLE(&object->dsi_object.hltdc);
 1327              		.loc 1 333 3
 1328 08ba FB68     		ldr	r3, [r7, #12]
 1329 08bc D3F88430 		ldr	r3, [r3, #132]
 1330 08c0 9A69     		ldr	r2, [r3, #24]
 1331 08c2 FB68     		ldr	r3, [r7, #12]
 1332 08c4 D3F88430 		ldr	r3, [r3, #132]
 1333 08c8 42F00102 		orr	r2, r2, #1
 1334 08cc 9A61     		str	r2, [r3, #24]
 334:./BSP/Components/Src/lcd.c **** 
 335:./BSP/Components/Src/lcd.c ****   // __HAL_DSI_WRAPPER_ENABLE(&object->dsi_object.hdsi);
 336:./BSP/Components/Src/lcd.c **** }
 1335              		.loc 1 336 1
 1336 08ce 00BF     		nop
 1337 08d0 4C37     		adds	r7, r7, #76
 1338              	.LCFI3:
 1339              		.cfi_def_cfa_offset 12
 1340 08d2 BD46     		mov	sp, r7
 1341              	.LCFI4:
 1342              		.cfi_def_cfa_register 13
 1343              		@ sp needed
 1344 08d4 90BD     		pop	{r4, r7, pc}
 1345              	.L15:
 1346 08d6 00BF     		.align	2
 1347              	.L14:
 1348 08d8 32000000 		.word	short_reg_data.16639+50
 1349 08dc 01000000 		.word	short_reg_data.16639+1
 1350 08e0 00000000 		.word	lcd_reg_data25.16638
 1351 08e4 00000000 		.word	lcd_reg_data3.16616
 1352 08e8 00000000 		.word	lcd_reg_data4.16617
 1353 08ec 24000000 		.word	short_reg_data.16639+36
 1354 08f0 25000000 		.word	short_reg_data.16639+37
 1355 08f4 26000000 		.word	short_reg_data.16639+38
 1356 08f8 00000000 		.word	LcdRegData27
 1357 08fc 00000000 		.word	LcdRegData28
 1358 0900 27000000 		.word	short_reg_data.16639+39
 1359 0904 00000000 		.word	short_reg_data.16639
 1360 0908 81808080 		.word	-2139062143
 1361 090c 28000000 		.word	short_reg_data.16639+40
 1362 0910 29000000 		.word	short_reg_data.16639+41
 1363 0914 2A000000 		.word	short_reg_data.16639+42
 1364 0918 2B000000 		.word	short_reg_data.16639+43
 1365 091c 2C000000 		.word	short_reg_data.16639+44
 1366              		.cfi_endproc
 1367              	.LFE338:
 1369              		.section	.text.lcd_readID,"ax",%progbits
 1370              		.align	1
 1371              		.global	lcd_readID
 1372              		.syntax unified
 1373              		.thumb
 1374              		.thumb_func
 1375              		.fpu fpv5-d16
 1377              	lcd_readID:
 1378              	.LFB339:
 337:./BSP/Components/Src/lcd.c **** /*
 338:./BSP/Components/Src/lcd.c **** *********************************************************************************************
 339:./BSP/Components/Src/lcd.c **** *                             控制功能
ARM GAS  /tmp/ccNaYeKW.s 			page 31


 340:./BSP/Components/Src/lcd.c **** *********************************************************************************************
 341:./BSP/Components/Src/lcd.c **** */
 342:./BSP/Components/Src/lcd.c **** void lcd_readID(lcd_objectTypeDef *object)
 343:./BSP/Components/Src/lcd.c **** {
 1379              		.loc 1 343 1
 1380              		.cfi_startproc
 1381              		@ args = 0, pretend = 0, frame = 8
 1382              		@ frame_needed = 1, uses_anonymous_args = 0
 1383 0000 90B5     		push	{r4, r7, lr}
 1384              	.LCFI5:
 1385              		.cfi_def_cfa_offset 12
 1386              		.cfi_offset 4, -12
 1387              		.cfi_offset 7, -8
 1388              		.cfi_offset 14, -4
 1389 0002 83B0     		sub	sp, sp, #12
 1390              	.LCFI6:
 1391              		.cfi_def_cfa_offset 24
 1392 0004 00AF     		add	r7, sp, #0
 1393              	.LCFI7:
 1394              		.cfi_def_cfa_register 7
 1395 0006 7860     		str	r0, [r7, #4]
 344:./BSP/Components/Src/lcd.c ****   object->lcd_read_reg(object,OTM8009A_CMD_ID1,&object->ID,0);
 1396              		.loc 1 344 9
 1397 0008 7B68     		ldr	r3, [r7, #4]
 1398 000a D3F85441 		ldr	r4, [r3, #340]
 1399              		.loc 1 344 48
 1400 000e 7B68     		ldr	r3, [r7, #4]
 1401 0010 03F5A672 		add	r2, r3, #332
 1402              		.loc 1 344 3
 1403 0014 0023     		movs	r3, #0
 1404 0016 DA21     		movs	r1, #218
 1405 0018 7868     		ldr	r0, [r7, #4]
 1406 001a A047     		blx	r4
 1407              	.LVL102:
 345:./BSP/Components/Src/lcd.c **** }
 1408              		.loc 1 345 1
 1409 001c 00BF     		nop
 1410 001e 0C37     		adds	r7, r7, #12
 1411              	.LCFI8:
 1412              		.cfi_def_cfa_offset 12
 1413 0020 BD46     		mov	sp, r7
 1414              	.LCFI9:
 1415              		.cfi_def_cfa_register 13
 1416              		@ sp needed
 1417 0022 90BD     		pop	{r4, r7, pc}
 1418              		.cfi_endproc
 1419              	.LFE339:
 1421              		.section	.text.lcd_setBrightness,"ax",%progbits
 1422              		.align	1
 1423              		.global	lcd_setBrightness
 1424              		.syntax unified
 1425              		.thumb
 1426              		.thumb_func
 1427              		.fpu fpv5-d16
 1429              	lcd_setBrightness:
 1430              	.LFB340:
 346:./BSP/Components/Src/lcd.c **** //brightness:0x00-0xFF
ARM GAS  /tmp/ccNaYeKW.s 			page 32


 347:./BSP/Components/Src/lcd.c **** void lcd_setBrightness(lcd_objectTypeDef *object,uint32_t brightness)
 348:./BSP/Components/Src/lcd.c **** {
 1431              		.loc 1 348 1
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 16
 1434              		@ frame_needed = 1, uses_anonymous_args = 0
 1435 0000 90B5     		push	{r4, r7, lr}
 1436              	.LCFI10:
 1437              		.cfi_def_cfa_offset 12
 1438              		.cfi_offset 4, -12
 1439              		.cfi_offset 7, -8
 1440              		.cfi_offset 14, -4
 1441 0002 85B0     		sub	sp, sp, #20
 1442              	.LCFI11:
 1443              		.cfi_def_cfa_offset 32
 1444 0004 00AF     		add	r7, sp, #0
 1445              	.LCFI12:
 1446              		.cfi_def_cfa_register 7
 1447 0006 7860     		str	r0, [r7, #4]
 1448 0008 3960     		str	r1, [r7]
 349:./BSP/Components/Src/lcd.c ****   object->brightness=brightness;
 1449              		.loc 1 349 21
 1450 000a 7B68     		ldr	r3, [r7, #4]
 1451 000c 3A68     		ldr	r2, [r7]
 1452 000e C3F84821 		str	r2, [r3, #328]
 350:./BSP/Components/Src/lcd.c ****   object->lcd_write_reg(object,OTM8009A_CMD_WRDISBV,&object->brightness,0);
 1453              		.loc 1 350 9
 1454 0012 7B68     		ldr	r3, [r7, #4]
 1455 0014 D3F85041 		ldr	r4, [r3, #336]
 1456              		.loc 1 350 53
 1457 0018 7B68     		ldr	r3, [r7, #4]
 1458 001a 03F5A472 		add	r2, r3, #328
 1459              		.loc 1 350 3
 1460 001e 0023     		movs	r3, #0
 1461 0020 5121     		movs	r1, #81
 1462 0022 7868     		ldr	r0, [r7, #4]
 1463 0024 A047     		blx	r4
 1464              	.LVL103:
 351:./BSP/Components/Src/lcd.c **** 
 352:./BSP/Components/Src/lcd.c ****   uint8_t data=0;
 1465              		.loc 1 352 11
 1466 0026 0023     		movs	r3, #0
 1467 0028 FB73     		strb	r3, [r7, #15]
 353:./BSP/Components/Src/lcd.c ****   object->lcd_read_reg(object,0x52,(uint8_t*)&data,0);
 1468              		.loc 1 353 9
 1469 002a 7B68     		ldr	r3, [r7, #4]
 1470 002c D3F85441 		ldr	r4, [r3, #340]
 1471              		.loc 1 353 3
 1472 0030 07F10F02 		add	r2, r7, #15
 1473 0034 0023     		movs	r3, #0
 1474 0036 5221     		movs	r1, #82
 1475 0038 7868     		ldr	r0, [r7, #4]
 1476 003a A047     		blx	r4
 1477              	.LVL104:
 354:./BSP/Components/Src/lcd.c **** }
 1478              		.loc 1 354 1
 1479 003c 00BF     		nop
ARM GAS  /tmp/ccNaYeKW.s 			page 33


 1480 003e 1437     		adds	r7, r7, #20
 1481              	.LCFI13:
 1482              		.cfi_def_cfa_offset 12
 1483 0040 BD46     		mov	sp, r7
 1484              	.LCFI14:
 1485              		.cfi_def_cfa_register 13
 1486              		@ sp needed
 1487 0042 90BD     		pop	{r4, r7, pc}
 1488              		.cfi_endproc
 1489              	.LFE340:
 1491              		.section	.text.lcd_displayOnOFF,"ax",%progbits
 1492              		.align	1
 1493              		.global	lcd_displayOnOFF
 1494              		.syntax unified
 1495              		.thumb
 1496              		.thumb_func
 1497              		.fpu fpv5-d16
 1499              	lcd_displayOnOFF:
 1500              	.LFB341:
 355:./BSP/Components/Src/lcd.c **** void lcd_displayOnOFF(lcd_objectTypeDef *object,uint8_t state)
 356:./BSP/Components/Src/lcd.c **** {
 1501              		.loc 1 356 1
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 16
 1504              		@ frame_needed = 1, uses_anonymous_args = 0
 1505 0000 90B5     		push	{r4, r7, lr}
 1506              	.LCFI15:
 1507              		.cfi_def_cfa_offset 12
 1508              		.cfi_offset 4, -12
 1509              		.cfi_offset 7, -8
 1510              		.cfi_offset 14, -4
 1511 0002 85B0     		sub	sp, sp, #20
 1512              	.LCFI16:
 1513              		.cfi_def_cfa_offset 32
 1514 0004 00AF     		add	r7, sp, #0
 1515              	.LCFI17:
 1516              		.cfi_def_cfa_register 7
 1517 0006 7860     		str	r0, [r7, #4]
 1518 0008 0B46     		mov	r3, r1
 1519 000a FB70     		strb	r3, [r7, #3]
 357:./BSP/Components/Src/lcd.c ****   uint8_t display=0;
 1520              		.loc 1 357 11
 1521 000c 0023     		movs	r3, #0
 1522 000e FB73     		strb	r3, [r7, #15]
 358:./BSP/Components/Src/lcd.c **** 
 359:./BSP/Components/Src/lcd.c ****   if(state==DISPLAY_ON)
 1523              		.loc 1 359 5
 1524 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1525 0012 012B     		cmp	r3, #1
 1526 0014 09D1     		bne	.L19
 360:./BSP/Components/Src/lcd.c ****   {
 361:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object,OTM8009A_CMD_DISPON,&display,0);
 1527              		.loc 1 361 11
 1528 0016 7B68     		ldr	r3, [r7, #4]
 1529 0018 D3F85041 		ldr	r4, [r3, #336]
 1530              		.loc 1 361 5
 1531 001c 07F10F02 		add	r2, r7, #15
ARM GAS  /tmp/ccNaYeKW.s 			page 34


 1532 0020 0023     		movs	r3, #0
 1533 0022 2921     		movs	r1, #41
 1534 0024 7868     		ldr	r0, [r7, #4]
 1535 0026 A047     		blx	r4
 1536              	.LVL105:
 362:./BSP/Components/Src/lcd.c ****   }
 363:./BSP/Components/Src/lcd.c ****   else if(state==DISPLAY_OFF)
 364:./BSP/Components/Src/lcd.c ****   {
 365:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object,OTM8009A_CMD_DISPOFF,&display,0);
 366:./BSP/Components/Src/lcd.c ****   }
 367:./BSP/Components/Src/lcd.c **** }
 1537              		.loc 1 367 1
 1538 0028 0BE0     		b	.L21
 1539              	.L19:
 363:./BSP/Components/Src/lcd.c ****   {
 1540              		.loc 1 363 10
 1541 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1542 002c 022B     		cmp	r3, #2
 1543 002e 08D1     		bne	.L21
 365:./BSP/Components/Src/lcd.c ****   }
 1544              		.loc 1 365 11
 1545 0030 7B68     		ldr	r3, [r7, #4]
 1546 0032 D3F85041 		ldr	r4, [r3, #336]
 365:./BSP/Components/Src/lcd.c ****   }
 1547              		.loc 1 365 5
 1548 0036 07F10F02 		add	r2, r7, #15
 1549 003a 0023     		movs	r3, #0
 1550 003c 2821     		movs	r1, #40
 1551 003e 7868     		ldr	r0, [r7, #4]
 1552 0040 A047     		blx	r4
 1553              	.LVL106:
 1554              	.L21:
 1555              		.loc 1 367 1
 1556 0042 00BF     		nop
 1557 0044 1437     		adds	r7, r7, #20
 1558              	.LCFI18:
 1559              		.cfi_def_cfa_offset 12
 1560 0046 BD46     		mov	sp, r7
 1561              	.LCFI19:
 1562              		.cfi_def_cfa_register 13
 1563              		@ sp needed
 1564 0048 90BD     		pop	{r4, r7, pc}
 1565              		.cfi_endproc
 1566              	.LFE341:
 1568              		.section	.text.lcd_setOrientation,"ax",%progbits
 1569              		.align	1
 1570              		.global	lcd_setOrientation
 1571              		.syntax unified
 1572              		.thumb
 1573              		.thumb_func
 1574              		.fpu fpv5-d16
 1576              	lcd_setOrientation:
 1577              	.LFB342:
 368:./BSP/Components/Src/lcd.c **** void lcd_setOrientation(lcd_objectTypeDef *object,uint32_t orientation)
 369:./BSP/Components/Src/lcd.c **** {
 1578              		.loc 1 369 1
 1579              		.cfi_startproc
ARM GAS  /tmp/ccNaYeKW.s 			page 35


 1580              		@ args = 0, pretend = 0, frame = 16
 1581              		@ frame_needed = 1, uses_anonymous_args = 0
 1582 0000 90B5     		push	{r4, r7, lr}
 1583              	.LCFI20:
 1584              		.cfi_def_cfa_offset 12
 1585              		.cfi_offset 4, -12
 1586              		.cfi_offset 7, -8
 1587              		.cfi_offset 14, -4
 1588 0002 85B0     		sub	sp, sp, #20
 1589              	.LCFI21:
 1590              		.cfi_def_cfa_offset 32
 1591 0004 00AF     		add	r7, sp, #0
 1592              	.LCFI22:
 1593              		.cfi_def_cfa_register 7
 1594 0006 7860     		str	r0, [r7, #4]
 1595 0008 3960     		str	r1, [r7]
 370:./BSP/Components/Src/lcd.c ****   uint8_t tmp = OTM8009A_MADCTR_MODE_LANDSCAPE;
 1596              		.loc 1 370 11
 1597 000a 6023     		movs	r3, #96
 1598 000c FB73     		strb	r3, [r7, #15]
 371:./BSP/Components/Src/lcd.c ****   uint8_t tmp1 = OTM8009A_MADCTR_MODE_PORTRAIT;
 1599              		.loc 1 371 11
 1600 000e 0023     		movs	r3, #0
 1601 0010 BB73     		strb	r3, [r7, #14]
 372:./BSP/Components/Src/lcd.c **** 
 373:./BSP/Components/Src/lcd.c ****   if(orientation==OTM8009A_ORIENTATION_LANDSCAPE)
 1602              		.loc 1 373 5
 1603 0012 3B68     		ldr	r3, [r7]
 1604 0014 012B     		cmp	r3, #1
 1605 0016 1DD1     		bne	.L23
 374:./BSP/Components/Src/lcd.c ****   {
 375:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object,OTM8009A_CMD_MADCTR,&tmp,0);
 1606              		.loc 1 375 11
 1607 0018 7B68     		ldr	r3, [r7, #4]
 1608 001a D3F85041 		ldr	r4, [r3, #336]
 1609              		.loc 1 375 5
 1610 001e 07F10F02 		add	r2, r7, #15
 1611 0022 0023     		movs	r3, #0
 1612 0024 3621     		movs	r1, #54
 1613 0026 7868     		ldr	r0, [r7, #4]
 1614 0028 A047     		blx	r4
 1615              	.LVL107:
 376:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object,OTM8009A_CMD_CASET,LcdRegData27,4);
 1616              		.loc 1 376 11
 1617 002a 7B68     		ldr	r3, [r7, #4]
 1618 002c D3F85041 		ldr	r4, [r3, #336]
 1619              		.loc 1 376 5
 1620 0030 0423     		movs	r3, #4
 1621 0032 1A4A     		ldr	r2, .L26
 1622 0034 2A21     		movs	r1, #42
 1623 0036 7868     		ldr	r0, [r7, #4]
 1624 0038 A047     		blx	r4
 1625              	.LVL108:
 377:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object,OTM8009A_CMD_PASET,LcdRegData28,4);
 1626              		.loc 1 377 11
 1627 003a 7B68     		ldr	r3, [r7, #4]
 1628 003c D3F85041 		ldr	r4, [r3, #336]
ARM GAS  /tmp/ccNaYeKW.s 			page 36


 1629              		.loc 1 377 5
 1630 0040 0423     		movs	r3, #4
 1631 0042 174A     		ldr	r2, .L26+4
 1632 0044 2B21     		movs	r1, #43
 1633 0046 7868     		ldr	r0, [r7, #4]
 1634 0048 A047     		blx	r4
 1635              	.LVL109:
 378:./BSP/Components/Src/lcd.c **** 
 379:./BSP/Components/Src/lcd.c ****     object->orientation=OTM8009A_ORIENTATION_LANDSCAPE;
 1636              		.loc 1 379 24
 1637 004a 7B68     		ldr	r3, [r7, #4]
 1638 004c 0122     		movs	r2, #1
 1639 004e C3F84421 		str	r2, [r3, #324]
 380:./BSP/Components/Src/lcd.c ****   }
 381:./BSP/Components/Src/lcd.c ****   else if(orientation==OTM8009A_ORIENTATION_PORTRAIT)
 382:./BSP/Components/Src/lcd.c ****   {
 383:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object,OTM8009A_CMD_MADCTR,&tmp1,0);
 384:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object,OTM8009A_CMD_CASET,LcdRegData27,4);
 385:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object,OTM8009A_CMD_PASET,LcdRegData28,4);
 386:./BSP/Components/Src/lcd.c **** 
 387:./BSP/Components/Src/lcd.c ****     object->orientation=OTM8009A_ORIENTATION_PORTRAIT;
 388:./BSP/Components/Src/lcd.c ****   }
 389:./BSP/Components/Src/lcd.c **** }
 1640              		.loc 1 389 1
 1641 0052 1FE0     		b	.L25
 1642              	.L23:
 381:./BSP/Components/Src/lcd.c ****   {
 1643              		.loc 1 381 10
 1644 0054 3B68     		ldr	r3, [r7]
 1645 0056 002B     		cmp	r3, #0
 1646 0058 1CD1     		bne	.L25
 383:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object,OTM8009A_CMD_CASET,LcdRegData27,4);
 1647              		.loc 1 383 11
 1648 005a 7B68     		ldr	r3, [r7, #4]
 1649 005c D3F85041 		ldr	r4, [r3, #336]
 383:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object,OTM8009A_CMD_CASET,LcdRegData27,4);
 1650              		.loc 1 383 5
 1651 0060 07F10E02 		add	r2, r7, #14
 1652 0064 0023     		movs	r3, #0
 1653 0066 3621     		movs	r1, #54
 1654 0068 7868     		ldr	r0, [r7, #4]
 1655 006a A047     		blx	r4
 1656              	.LVL110:
 384:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object,OTM8009A_CMD_PASET,LcdRegData28,4);
 1657              		.loc 1 384 11
 1658 006c 7B68     		ldr	r3, [r7, #4]
 1659 006e D3F85041 		ldr	r4, [r3, #336]
 384:./BSP/Components/Src/lcd.c ****     object->lcd_write_reg(object,OTM8009A_CMD_PASET,LcdRegData28,4);
 1660              		.loc 1 384 5
 1661 0072 0423     		movs	r3, #4
 1662 0074 094A     		ldr	r2, .L26
 1663 0076 2A21     		movs	r1, #42
 1664 0078 7868     		ldr	r0, [r7, #4]
 1665 007a A047     		blx	r4
 1666              	.LVL111:
 385:./BSP/Components/Src/lcd.c **** 
 1667              		.loc 1 385 11
ARM GAS  /tmp/ccNaYeKW.s 			page 37


 1668 007c 7B68     		ldr	r3, [r7, #4]
 1669 007e D3F85041 		ldr	r4, [r3, #336]
 385:./BSP/Components/Src/lcd.c **** 
 1670              		.loc 1 385 5
 1671 0082 0423     		movs	r3, #4
 1672 0084 064A     		ldr	r2, .L26+4
 1673 0086 2B21     		movs	r1, #43
 1674 0088 7868     		ldr	r0, [r7, #4]
 1675 008a A047     		blx	r4
 1676              	.LVL112:
 387:./BSP/Components/Src/lcd.c ****   }
 1677              		.loc 1 387 24
 1678 008c 7B68     		ldr	r3, [r7, #4]
 1679 008e 0022     		movs	r2, #0
 1680 0090 C3F84421 		str	r2, [r3, #324]
 1681              	.L25:
 1682              		.loc 1 389 1
 1683 0094 00BF     		nop
 1684 0096 1437     		adds	r7, r7, #20
 1685              	.LCFI23:
 1686              		.cfi_def_cfa_offset 12
 1687 0098 BD46     		mov	sp, r7
 1688              	.LCFI24:
 1689              		.cfi_def_cfa_register 13
 1690              		@ sp needed
 1691 009a 90BD     		pop	{r4, r7, pc}
 1692              	.L27:
 1693              		.align	2
 1694              	.L26:
 1695 009c 00000000 		.word	LcdRegData27
 1696 00a0 00000000 		.word	LcdRegData28
 1697              		.cfi_endproc
 1698              	.LFE342:
 1700              		.section	.text.lcd_getXsize,"ax",%progbits
 1701              		.align	1
 1702              		.global	lcd_getXsize
 1703              		.syntax unified
 1704              		.thumb
 1705              		.thumb_func
 1706              		.fpu fpv5-d16
 1708              	lcd_getXsize:
 1709              	.LFB343:
 390:./BSP/Components/Src/lcd.c **** void lcd_getXsize(lcd_objectTypeDef *object,uint32_t *xSize)
 391:./BSP/Components/Src/lcd.c **** {
 1710              		.loc 1 391 1
 1711              		.cfi_startproc
 1712              		@ args = 0, pretend = 0, frame = 8
 1713              		@ frame_needed = 1, uses_anonymous_args = 0
 1714              		@ link register save eliminated.
 1715 0000 80B4     		push	{r7}
 1716              	.LCFI25:
 1717              		.cfi_def_cfa_offset 4
 1718              		.cfi_offset 7, -4
 1719 0002 83B0     		sub	sp, sp, #12
 1720              	.LCFI26:
 1721              		.cfi_def_cfa_offset 16
 1722 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccNaYeKW.s 			page 38


 1723              	.LCFI27:
 1724              		.cfi_def_cfa_register 7
 1725 0006 7860     		str	r0, [r7, #4]
 1726 0008 3960     		str	r1, [r7]
 392:./BSP/Components/Src/lcd.c ****   switch(object->orientation)
 1727              		.loc 1 392 16
 1728 000a 7B68     		ldr	r3, [r7, #4]
 1729 000c D3F84431 		ldr	r3, [r3, #324]
 1730              		.loc 1 392 3
 1731 0010 002B     		cmp	r3, #0
 1732 0012 02D0     		beq	.L29
 1733 0014 012B     		cmp	r3, #1
 1734 0016 05D0     		beq	.L30
 393:./BSP/Components/Src/lcd.c ****   {
 394:./BSP/Components/Src/lcd.c ****     case OTM8009A_ORIENTATION_PORTRAIT:
 395:./BSP/Components/Src/lcd.c ****       *xSize=OTM8009A_480X800_WIDTH;
 396:./BSP/Components/Src/lcd.c ****       break;
 397:./BSP/Components/Src/lcd.c ****     case OTM8009A_ORIENTATION_LANDSCAPE:
 398:./BSP/Components/Src/lcd.c ****       *xSize=OTM8009A_800X480_WIDTH;
 399:./BSP/Components/Src/lcd.c ****       break;
 400:./BSP/Components/Src/lcd.c ****   }
 401:./BSP/Components/Src/lcd.c **** }
 1735              		.loc 1 401 1
 1736 0018 09E0     		b	.L32
 1737              	.L29:
 395:./BSP/Components/Src/lcd.c ****       break;
 1738              		.loc 1 395 13
 1739 001a 3B68     		ldr	r3, [r7]
 1740 001c 4FF4F072 		mov	r2, #480
 1741 0020 1A60     		str	r2, [r3]
 396:./BSP/Components/Src/lcd.c ****     case OTM8009A_ORIENTATION_LANDSCAPE:
 1742              		.loc 1 396 7
 1743 0022 04E0     		b	.L31
 1744              	.L30:
 398:./BSP/Components/Src/lcd.c ****       break;
 1745              		.loc 1 398 13
 1746 0024 3B68     		ldr	r3, [r7]
 1747 0026 4FF44872 		mov	r2, #800
 1748 002a 1A60     		str	r2, [r3]
 399:./BSP/Components/Src/lcd.c ****   }
 1749              		.loc 1 399 7
 1750 002c 00BF     		nop
 1751              	.L31:
 1752              	.L32:
 1753              		.loc 1 401 1
 1754 002e 00BF     		nop
 1755 0030 0C37     		adds	r7, r7, #12
 1756              	.LCFI28:
 1757              		.cfi_def_cfa_offset 4
 1758 0032 BD46     		mov	sp, r7
 1759              	.LCFI29:
 1760              		.cfi_def_cfa_register 13
 1761              		@ sp needed
 1762 0034 5DF8047B 		ldr	r7, [sp], #4
 1763              	.LCFI30:
 1764              		.cfi_restore 7
 1765              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccNaYeKW.s 			page 39


 1766 0038 7047     		bx	lr
 1767              		.cfi_endproc
 1768              	.LFE343:
 1770              		.section	.text.lcd_getYsize,"ax",%progbits
 1771              		.align	1
 1772              		.global	lcd_getYsize
 1773              		.syntax unified
 1774              		.thumb
 1775              		.thumb_func
 1776              		.fpu fpv5-d16
 1778              	lcd_getYsize:
 1779              	.LFB344:
 402:./BSP/Components/Src/lcd.c **** void lcd_getYsize(lcd_objectTypeDef *object,uint32_t *ySize)
 403:./BSP/Components/Src/lcd.c **** {
 1780              		.loc 1 403 1
 1781              		.cfi_startproc
 1782              		@ args = 0, pretend = 0, frame = 8
 1783              		@ frame_needed = 1, uses_anonymous_args = 0
 1784              		@ link register save eliminated.
 1785 0000 80B4     		push	{r7}
 1786              	.LCFI31:
 1787              		.cfi_def_cfa_offset 4
 1788              		.cfi_offset 7, -4
 1789 0002 83B0     		sub	sp, sp, #12
 1790              	.LCFI32:
 1791              		.cfi_def_cfa_offset 16
 1792 0004 00AF     		add	r7, sp, #0
 1793              	.LCFI33:
 1794              		.cfi_def_cfa_register 7
 1795 0006 7860     		str	r0, [r7, #4]
 1796 0008 3960     		str	r1, [r7]
 404:./BSP/Components/Src/lcd.c ****   switch(object->orientation)
 1797              		.loc 1 404 16
 1798 000a 7B68     		ldr	r3, [r7, #4]
 1799 000c D3F84431 		ldr	r3, [r3, #324]
 1800              		.loc 1 404 3
 1801 0010 002B     		cmp	r3, #0
 1802 0012 02D0     		beq	.L34
 1803 0014 012B     		cmp	r3, #1
 1804 0016 05D0     		beq	.L35
 405:./BSP/Components/Src/lcd.c ****   {
 406:./BSP/Components/Src/lcd.c ****     case OTM8009A_ORIENTATION_PORTRAIT:
 407:./BSP/Components/Src/lcd.c ****       *ySize=OTM8009A_480X800_HEIGHT;
 408:./BSP/Components/Src/lcd.c ****       break;
 409:./BSP/Components/Src/lcd.c ****     case OTM8009A_ORIENTATION_LANDSCAPE:
 410:./BSP/Components/Src/lcd.c ****       *ySize=OTM8009A_800X480_HEIGHT;
 411:./BSP/Components/Src/lcd.c ****       break;
 412:./BSP/Components/Src/lcd.c ****   }
 413:./BSP/Components/Src/lcd.c **** }
 1805              		.loc 1 413 1
 1806 0018 09E0     		b	.L37
 1807              	.L34:
 407:./BSP/Components/Src/lcd.c ****       break;
 1808              		.loc 1 407 13
 1809 001a 3B68     		ldr	r3, [r7]
 1810 001c 4FF44872 		mov	r2, #800
 1811 0020 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccNaYeKW.s 			page 40


 408:./BSP/Components/Src/lcd.c ****     case OTM8009A_ORIENTATION_LANDSCAPE:
 1812              		.loc 1 408 7
 1813 0022 04E0     		b	.L36
 1814              	.L35:
 410:./BSP/Components/Src/lcd.c ****       break;
 1815              		.loc 1 410 13
 1816 0024 3B68     		ldr	r3, [r7]
 1817 0026 4FF4F072 		mov	r2, #480
 1818 002a 1A60     		str	r2, [r3]
 411:./BSP/Components/Src/lcd.c ****   }
 1819              		.loc 1 411 7
 1820 002c 00BF     		nop
 1821              	.L36:
 1822              	.L37:
 1823              		.loc 1 413 1
 1824 002e 00BF     		nop
 1825 0030 0C37     		adds	r7, r7, #12
 1826              	.LCFI34:
 1827              		.cfi_def_cfa_offset 4
 1828 0032 BD46     		mov	sp, r7
 1829              	.LCFI35:
 1830              		.cfi_def_cfa_register 13
 1831              		@ sp needed
 1832 0034 5DF8047B 		ldr	r7, [sp], #4
 1833              	.LCFI36:
 1834              		.cfi_restore 7
 1835              		.cfi_def_cfa_offset 0
 1836 0038 7047     		bx	lr
 1837              		.cfi_endproc
 1838              	.LFE344:
 1840              		.section	.text.LCD_write_reg,"ax",%progbits
 1841              		.align	1
 1842              		.global	LCD_write_reg
 1843              		.syntax unified
 1844              		.thumb
 1845              		.thumb_func
 1846              		.fpu fpv5-d16
 1848              	LCD_write_reg:
 1849              	.LFB345:
 414:./BSP/Components/Src/lcd.c **** /*
 415:./BSP/Components/Src/lcd.c **** *********************************************************************************************
 416:./BSP/Components/Src/lcd.c **** *                             繪圖功能
 417:./BSP/Components/Src/lcd.c **** *********************************************************************************************
 418:./BSP/Components/Src/lcd.c **** */
 419:./BSP/Components/Src/lcd.c **** 
 420:./BSP/Components/Src/lcd.c **** /*
 421:./BSP/Components/Src/lcd.c **** *********************************************************************************************
 422:./BSP/Components/Src/lcd.c **** *                             讀取用功能
 423:./BSP/Components/Src/lcd.c **** *********************************************************************************************
 424:./BSP/Components/Src/lcd.c **** */
 425:./BSP/Components/Src/lcd.c **** void LCD_write_reg(lcd_objectTypeDef *object,uint16_t reg, uint8_t *data, uint16_t length)
 426:./BSP/Components/Src/lcd.c **** {
 1850              		.loc 1 426 1
 1851              		.cfi_startproc
 1852              		@ args = 0, pretend = 0, frame = 16
 1853              		@ frame_needed = 1, uses_anonymous_args = 0
 1854 0000 90B5     		push	{r4, r7, lr}
ARM GAS  /tmp/ccNaYeKW.s 			page 41


 1855              	.LCFI37:
 1856              		.cfi_def_cfa_offset 12
 1857              		.cfi_offset 4, -12
 1858              		.cfi_offset 7, -8
 1859              		.cfi_offset 14, -4
 1860 0002 87B0     		sub	sp, sp, #28
 1861              	.LCFI38:
 1862              		.cfi_def_cfa_offset 40
 1863 0004 02AF     		add	r7, sp, #8
 1864              	.LCFI39:
 1865              		.cfi_def_cfa 7, 32
 1866 0006 F860     		str	r0, [r7, #12]
 1867 0008 7A60     		str	r2, [r7, #4]
 1868 000a 1A46     		mov	r2, r3
 1869 000c 0B46     		mov	r3, r1	@ movhi
 1870 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 1871 0010 1346     		mov	r3, r2	@ movhi
 1872 0012 3B81     		strh	r3, [r7, #8]	@ movhi
 427:./BSP/Components/Src/lcd.c ****   object->dsi_object.dsi_IO_write(&object->dsi_object,0,reg,data,length);
 1873              		.loc 1 427 21
 1874 0014 FB68     		ldr	r3, [r7, #12]
 1875 0016 D3F83041 		ldr	r4, [r3, #304]
 1876              		.loc 1 427 35
 1877 001a F868     		ldr	r0, [r7, #12]
 1878              		.loc 1 427 3
 1879 001c 7A89     		ldrh	r2, [r7, #10]
 1880 001e 3B89     		ldrh	r3, [r7, #8]
 1881 0020 0093     		str	r3, [sp]
 1882 0022 7B68     		ldr	r3, [r7, #4]
 1883 0024 0021     		movs	r1, #0
 1884 0026 A047     		blx	r4
 1885              	.LVL113:
 428:./BSP/Components/Src/lcd.c **** }
 1886              		.loc 1 428 1
 1887 0028 00BF     		nop
 1888 002a 1437     		adds	r7, r7, #20
 1889              	.LCFI40:
 1890              		.cfi_def_cfa_offset 12
 1891 002c BD46     		mov	sp, r7
 1892              	.LCFI41:
 1893              		.cfi_def_cfa_register 13
 1894              		@ sp needed
 1895 002e 90BD     		pop	{r4, r7, pc}
 1896              		.cfi_endproc
 1897              	.LFE345:
 1899              		.section	.text.LCD_read_reg,"ax",%progbits
 1900              		.align	1
 1901              		.global	LCD_read_reg
 1902              		.syntax unified
 1903              		.thumb
 1904              		.thumb_func
 1905              		.fpu fpv5-d16
 1907              	LCD_read_reg:
 1908              	.LFB346:
 429:./BSP/Components/Src/lcd.c **** 
 430:./BSP/Components/Src/lcd.c **** void LCD_read_reg(lcd_objectTypeDef *object,uint16_t reg, uint8_t *data, uint16_t length)
 431:./BSP/Components/Src/lcd.c **** {
ARM GAS  /tmp/ccNaYeKW.s 			page 42


 1909              		.loc 1 431 1
 1910              		.cfi_startproc
 1911              		@ args = 0, pretend = 0, frame = 16
 1912              		@ frame_needed = 1, uses_anonymous_args = 0
 1913 0000 90B5     		push	{r4, r7, lr}
 1914              	.LCFI42:
 1915              		.cfi_def_cfa_offset 12
 1916              		.cfi_offset 4, -12
 1917              		.cfi_offset 7, -8
 1918              		.cfi_offset 14, -4
 1919 0002 87B0     		sub	sp, sp, #28
 1920              	.LCFI43:
 1921              		.cfi_def_cfa_offset 40
 1922 0004 02AF     		add	r7, sp, #8
 1923              	.LCFI44:
 1924              		.cfi_def_cfa 7, 32
 1925 0006 F860     		str	r0, [r7, #12]
 1926 0008 7A60     		str	r2, [r7, #4]
 1927 000a 1A46     		mov	r2, r3
 1928 000c 0B46     		mov	r3, r1	@ movhi
 1929 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 1930 0010 1346     		mov	r3, r2	@ movhi
 1931 0012 3B81     		strh	r3, [r7, #8]	@ movhi
 432:./BSP/Components/Src/lcd.c ****   object->dsi_object.dsi_IO_read(&object->dsi_object,0,reg,data,length);
 1932              		.loc 1 432 21
 1933 0014 FB68     		ldr	r3, [r7, #12]
 1934 0016 D3F83441 		ldr	r4, [r3, #308]
 1935              		.loc 1 432 34
 1936 001a F868     		ldr	r0, [r7, #12]
 1937              		.loc 1 432 3
 1938 001c 7A89     		ldrh	r2, [r7, #10]
 1939 001e 3B89     		ldrh	r3, [r7, #8]
 1940 0020 0093     		str	r3, [sp]
 1941 0022 7B68     		ldr	r3, [r7, #4]
 1942 0024 0021     		movs	r1, #0
 1943 0026 A047     		blx	r4
 1944              	.LVL114:
 433:./BSP/Components/Src/lcd.c **** }...
 1945              		.loc 1 433 1
 1946 0028 00BF     		nop
 1947 002a 1437     		adds	r7, r7, #20
 1948              	.LCFI45:
 1949              		.cfi_def_cfa_offset 12
 1950 002c BD46     		mov	sp, r7
 1951              	.LCFI46:
 1952              		.cfi_def_cfa_register 13
 1953              		@ sp needed
 1954 002e 90BD     		pop	{r4, r7, pc}
 1955              		.cfi_endproc
 1956              	.LFE346:
 1958              		.section	.rodata.short_reg_data.16639,"a"
 1959              		.align	2
 1962              	short_reg_data.16639:
 1963 0000 00008030 		.ascii	"\000\000\2000\212@\261\251\2214\264PN\201f\241\010\222"
 1963      8A40B1A9 
 1963      9134B450 
 1963      4E8166A1 
ARM GAS  /tmp/ccNaYeKW.s 			page 43


 1963      0892
 1964 0012 01959433 		.ascii	"\001\225\2243\243\033\202\203\203\016\246\240\260\300"
 1964      A31B8283 
 1964      830EA6A0 
 1964      B0C0
 1965 0020 D090E0F0 		.ascii	"\320\220\340\360\000Uw\177,\002\377\000\000\000f\266"
 1965      0055777F 
 1965      2C02FF00 
 1965      000066B6 
 1966 0030 06B106   		.ascii	"\006\261\006"
 1967              		.section	.rodata.lcd_reg_data1.16614,"a"
 1968              		.align	2
 1971              	lcd_reg_data1.16614:
 1972 0000 800901   		.ascii	"\200\011\001"
 1973              		.section	.rodata.lcd_reg_data2.16615,"a"
 1974              		.align	2
 1977              	lcd_reg_data2.16615:
 1978 0000 8009     		.ascii	"\200\011"
 1979              		.section	.rodata.lcd_reg_data5.16618,"a"
 1980              		.align	2
 1983              	lcd_reg_data5.16618:
 1984 0000 7979     		.ascii	"yy"
 1985              		.section	.rodata.lcd_reg_data6.16619,"a"
 1986              		.align	2
 1989              	lcd_reg_data6.16619:
 1990 0000 0001     		.ascii	"\000\001"
 1991              		.section	.rodata.lcd_reg_data7.16620,"a"
 1992              		.align	2
 1995              	lcd_reg_data7.16620:
 1996 0000 85010084 		.ascii	"\205\001\000\204\001\000"
 1996      0100
 1997              		.section	.rodata.lcd_reg_data8.16621,"a"
 1998              		.align	2
 2001              	lcd_reg_data8.16621:
 2002 0000 18040339 		.ascii	"\030\004\0039\000\000\000\030\003\003:\000\000\000"
 2002      00000018 
 2002      03033A00 
 2002      0000
 2003              		.section	.rodata.lcd_reg_data9.16622,"a"
 2004              		.align	2
 2007              	lcd_reg_data9.16622:
 2008 0000 1802033B 		.ascii	"\030\002\003;\000\000\000\030\001\003<\000\000\000"
 2008      00000018 
 2008      01033C00 
 2008      0000
 2009              		.section	.rodata.lcd_reg_data10.16623,"a"
 2010              		.align	2
 2013              	lcd_reg_data10.16623:
 2014 0000 01012020 		.ascii	"\001\001  \000\000\001\002\000\000"
 2014      00000102 
 2014      0000
 2015              		.section	.rodata.lcd_reg_data11.16624,"a"
 2016              		.align	2
 2019              	lcd_reg_data11.16624:
 2020 0000 00000000 		.space	10
 2020      00000000 
 2020      0000
ARM GAS  /tmp/ccNaYeKW.s 			page 44


 2021              		.section	.rodata.lcd_reg_data12.16625,"a"
 2022              		.align	2
 2025              	lcd_reg_data12.16625:
 2026 0000 00000000 		.space	15
 2026      00000000 
 2026      00000000 
 2026      000000
 2027              		.section	.rodata.lcd_reg_data13.16626,"a"
 2028              		.align	2
 2031              	lcd_reg_data13.16626:
 2032 0000 00000000 		.space	15
 2032      00000000 
 2032      00000000 
 2032      000000
 2033              		.section	.rodata.lcd_reg_data14.16627,"a"
 2034              		.align	2
 2037              	lcd_reg_data14.16627:
 2038 0000 00000000 		.space	10
 2038      00000000 
 2038      0000
 2039              		.section	.rodata.lcd_reg_data15.16628,"a"
 2040              		.align	2
 2043              	lcd_reg_data15.16628:
 2044 0000 00040404 		.ascii	"\000\004\004\004\004\004\000\000\000\000\000\000\000"
 2044      04040000 
 2044      00000000 
 2044      00
 2045 000d 0000     		.ascii	"\000\000"
 2046              		.section	.rodata.lcd_reg_data16.16629,"a"
 2047              		.align	2
 2050              	lcd_reg_data16.16629:
 2051 0000 00000000 		.ascii	"\000\000\000\000\000\000\004\004\004\004\004\000\000"
 2051      00000404 
 2051      04040400 
 2051      00
 2052 000d 0000     		.ascii	"\000\000"
 2053              		.section	.rodata.lcd_reg_data17.16630,"a"
 2054              		.align	2
 2057              	lcd_reg_data17.16630:
 2058 0000 00000000 		.space	10
 2058      00000000 
 2058      0000
 2059              		.section	.rodata.lcd_reg_data18.16631,"a"
 2060              		.align	2
 2063              	lcd_reg_data18.16631:
 2064 0000 FFFFFFFF 		.ascii	"\377\377\377\377\377\377\377\377\377\377"
 2064      FFFFFFFF 
 2064      FFFF
 2065              		.section	.rodata.lcd_reg_data19.16632,"a"
 2066              		.align	2
 2069              	lcd_reg_data19.16632:
 2070 0000 0026090B 		.ascii	"\000&\011\013\001%\000\000\000\000"
 2070      01250000 
 2070      0000
 2071              		.section	.rodata.lcd_reg_data20.16633,"a"
 2072              		.align	2
 2075              	lcd_reg_data20.16633:
ARM GAS  /tmp/ccNaYeKW.s 			page 45


 2076 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000&\012\014"
 2076      00000000 
 2076      00000026 
 2076      0A0C
 2077 000e 02       		.ascii	"\002"
 2078              		.section	.rodata.lcd_reg_data21.16634,"a"
 2079              		.align	2
 2082              	lcd_reg_data21.16634:
 2083 0000 25000000 		.ascii	"%\000\000\000\000\000\000\000\000\000\000\000\000\000"
 2083      00000000 
 2083      00000000 
 2083      0000
 2084 000e 00       		.ascii	"\000"
 2085              		.section	.rodata.lcd_reg_data22.16635,"a"
 2086              		.align	2
 2089              	lcd_reg_data22.16635:
 2090 0000 00250C0A 		.ascii	"\000%\014\012\002&\000\000\000\000"
 2090      02260000 
 2090      0000
 2091              		.section	.rodata.lcd_reg_data23.16636,"a"
 2092              		.align	2
 2095              	lcd_reg_data23.16636:
 2096 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000%\013\011"
 2096      00000000 
 2096      00000025 
 2096      0B09
 2097 000e 01       		.ascii	"\001"
 2098              		.section	.rodata.lcd_reg_data24.16637,"a"
 2099              		.align	2
 2102              	lcd_reg_data24.16637:
 2103 0000 26000000 		.ascii	"&\000\000\000\000\000\000\000\000\000\000\000\000\000"
 2103      00000000 
 2103      00000000 
 2103      0000
 2104 000e 00       		.ascii	"\000"
 2105              		.section	.rodata.lcd_reg_data25.16638,"a"
 2106              		.align	2
 2109              	lcd_reg_data25.16638:
 2110 0000 FFFFFF   		.ascii	"\377\377\377"
 2111              		.section	.rodata.lcd_reg_data3.16616,"a"
 2112              		.align	2
 2115              	lcd_reg_data3.16616:
 2116 0000 00090F0E 		.ascii	"\000\011\017\016\007\020\013\012\004\007\013\010\017"
 2116      07100B0A 
 2116      04070B08 
 2116      0F
 2117 000d 100A01   		.ascii	"\020\012\001"
 2118              		.section	.rodata.lcd_reg_data4.16617,"a"
 2119              		.align	2
 2122              	lcd_reg_data4.16617:
 2123 0000 00090F0E 		.ascii	"\000\011\017\016\007\020\013\012\004\007\013\010\017"
 2123      07100B0A 
 2123      04070B08 
 2123      0F
 2124 000d 100A01   		.ascii	"\020\012\001"
 2125              		.text
 2126              	.Letext0:
ARM GAS  /tmp/ccNaYeKW.s 			page 46


 2127              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2128              		.file 3 "./Libraries/CMSIS/Core/Include/core_cm7.h"
 2129              		.file 4 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 2130              		.file 5 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 2131              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2132              		.file 7 "/usr/include/newlib/sys/_types.h"
 2133              		.file 8 "/usr/include/newlib/sys/reent.h"
 2134              		.file 9 "/usr/include/newlib/sys/lock.h"
 2135              		.file 10 "/usr/include/newlib/math.h"
 2136              		.file 11 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 2137              		.file 12 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma2d.h"
 2138              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dsi.h"
 2139              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 2140              		.file 15 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_ltdc.h"
 2141              		.file 16 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 2142              		.file 17 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 2143              		.file 18 "/usr/include/newlib/stdlib.h"
 2144              		.file 19 "./BSP/Components/Src/../../Components/Inc/../../Hardware/Inc/ltdc_dsi.h"
 2145              		.file 20 "./BSP/Components/Src/../../Components/Inc/lcd.h"
ARM GAS  /tmp/ccNaYeKW.s 			page 47


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lcd.c
     /tmp/ccNaYeKW.s:17     .rodata.LcdRegData27:0000000000000000 $d
     /tmp/ccNaYeKW.s:20     .rodata.LcdRegData27:0000000000000000 LcdRegData27
     /tmp/ccNaYeKW.s:23     .rodata.LcdRegData28:0000000000000000 $d
     /tmp/ccNaYeKW.s:26     .rodata.LcdRegData28:0000000000000000 LcdRegData28
     /tmp/ccNaYeKW.s:29     .text.lcd_init:0000000000000000 $t
     /tmp/ccNaYeKW.s:37     .text.lcd_init:0000000000000000 lcd_init
     /tmp/ccNaYeKW.s:485    .text.lcd_init:00000000000002c4 $d
     /tmp/ccNaYeKW.s:1848   .text.LCD_write_reg:0000000000000000 LCD_write_reg
     /tmp/ccNaYeKW.s:1907   .text.LCD_read_reg:0000000000000000 LCD_read_reg
     /tmp/ccNaYeKW.s:1377   .text.lcd_readID:0000000000000000 lcd_readID
     /tmp/ccNaYeKW.s:1429   .text.lcd_setBrightness:0000000000000000 lcd_setBrightness
     /tmp/ccNaYeKW.s:1499   .text.lcd_displayOnOFF:0000000000000000 lcd_displayOnOFF
     /tmp/ccNaYeKW.s:1576   .text.lcd_setOrientation:0000000000000000 lcd_setOrientation
     /tmp/ccNaYeKW.s:1708   .text.lcd_getXsize:0000000000000000 lcd_getXsize
     /tmp/ccNaYeKW.s:1778   .text.lcd_getYsize:0000000000000000 lcd_getYsize
     /tmp/ccNaYeKW.s:1962   .rodata.short_reg_data.16639:0000000000000000 short_reg_data.16639
     /tmp/ccNaYeKW.s:1971   .rodata.lcd_reg_data1.16614:0000000000000000 lcd_reg_data1.16614
     /tmp/ccNaYeKW.s:1977   .rodata.lcd_reg_data2.16615:0000000000000000 lcd_reg_data2.16615
     /tmp/ccNaYeKW.s:1983   .rodata.lcd_reg_data5.16618:0000000000000000 lcd_reg_data5.16618
     /tmp/ccNaYeKW.s:1989   .rodata.lcd_reg_data6.16619:0000000000000000 lcd_reg_data6.16619
     /tmp/ccNaYeKW.s:527    .text.lcd_init:0000000000000364 $t
     /tmp/ccNaYeKW.s:957    .text.lcd_init:0000000000000614 $d
     /tmp/ccNaYeKW.s:1995   .rodata.lcd_reg_data7.16620:0000000000000000 lcd_reg_data7.16620
     /tmp/ccNaYeKW.s:2001   .rodata.lcd_reg_data8.16621:0000000000000000 lcd_reg_data8.16621
     /tmp/ccNaYeKW.s:2007   .rodata.lcd_reg_data9.16622:0000000000000000 lcd_reg_data9.16622
     /tmp/ccNaYeKW.s:2013   .rodata.lcd_reg_data10.16623:0000000000000000 lcd_reg_data10.16623
     /tmp/ccNaYeKW.s:2019   .rodata.lcd_reg_data11.16624:0000000000000000 lcd_reg_data11.16624
     /tmp/ccNaYeKW.s:2025   .rodata.lcd_reg_data12.16625:0000000000000000 lcd_reg_data12.16625
     /tmp/ccNaYeKW.s:2031   .rodata.lcd_reg_data13.16626:0000000000000000 lcd_reg_data13.16626
     /tmp/ccNaYeKW.s:2037   .rodata.lcd_reg_data14.16627:0000000000000000 lcd_reg_data14.16627
     /tmp/ccNaYeKW.s:2043   .rodata.lcd_reg_data15.16628:0000000000000000 lcd_reg_data15.16628
     /tmp/ccNaYeKW.s:2050   .rodata.lcd_reg_data16.16629:0000000000000000 lcd_reg_data16.16629
     /tmp/ccNaYeKW.s:2057   .rodata.lcd_reg_data17.16630:0000000000000000 lcd_reg_data17.16630
     /tmp/ccNaYeKW.s:2063   .rodata.lcd_reg_data18.16631:0000000000000000 lcd_reg_data18.16631
     /tmp/ccNaYeKW.s:2069   .rodata.lcd_reg_data19.16632:0000000000000000 lcd_reg_data19.16632
     /tmp/ccNaYeKW.s:2075   .rodata.lcd_reg_data20.16633:0000000000000000 lcd_reg_data20.16633
     /tmp/ccNaYeKW.s:2082   .rodata.lcd_reg_data21.16634:0000000000000000 lcd_reg_data21.16634
     /tmp/ccNaYeKW.s:2089   .rodata.lcd_reg_data22.16635:0000000000000000 lcd_reg_data22.16635
     /tmp/ccNaYeKW.s:2095   .rodata.lcd_reg_data23.16636:0000000000000000 lcd_reg_data23.16636
     /tmp/ccNaYeKW.s:2102   .rodata.lcd_reg_data24.16637:0000000000000000 lcd_reg_data24.16637
     /tmp/ccNaYeKW.s:990    .text.lcd_init:0000000000000694 $t
     /tmp/ccNaYeKW.s:1348   .text.lcd_init:00000000000008d8 $d
     /tmp/ccNaYeKW.s:2109   .rodata.lcd_reg_data25.16638:0000000000000000 lcd_reg_data25.16638
     /tmp/ccNaYeKW.s:2115   .rodata.lcd_reg_data3.16616:0000000000000000 lcd_reg_data3.16616
     /tmp/ccNaYeKW.s:2122   .rodata.lcd_reg_data4.16617:0000000000000000 lcd_reg_data4.16617
     /tmp/ccNaYeKW.s:1370   .text.lcd_readID:0000000000000000 $t
     /tmp/ccNaYeKW.s:1422   .text.lcd_setBrightness:0000000000000000 $t
     /tmp/ccNaYeKW.s:1492   .text.lcd_displayOnOFF:0000000000000000 $t
     /tmp/ccNaYeKW.s:1569   .text.lcd_setOrientation:0000000000000000 $t
     /tmp/ccNaYeKW.s:1695   .text.lcd_setOrientation:000000000000009c $d
     /tmp/ccNaYeKW.s:1701   .text.lcd_getXsize:0000000000000000 $t
     /tmp/ccNaYeKW.s:1771   .text.lcd_getYsize:0000000000000000 $t
     /tmp/ccNaYeKW.s:1841   .text.LCD_write_reg:0000000000000000 $t
     /tmp/ccNaYeKW.s:1900   .text.LCD_read_reg:0000000000000000 $t
     /tmp/ccNaYeKW.s:1959   .rodata.short_reg_data.16639:0000000000000000 $d
ARM GAS  /tmp/ccNaYeKW.s 			page 48


     /tmp/ccNaYeKW.s:1968   .rodata.lcd_reg_data1.16614:0000000000000000 $d
     /tmp/ccNaYeKW.s:1974   .rodata.lcd_reg_data2.16615:0000000000000000 $d
     /tmp/ccNaYeKW.s:1980   .rodata.lcd_reg_data5.16618:0000000000000000 $d
     /tmp/ccNaYeKW.s:1986   .rodata.lcd_reg_data6.16619:0000000000000000 $d
     /tmp/ccNaYeKW.s:1992   .rodata.lcd_reg_data7.16620:0000000000000000 $d
     /tmp/ccNaYeKW.s:1998   .rodata.lcd_reg_data8.16621:0000000000000000 $d
     /tmp/ccNaYeKW.s:2004   .rodata.lcd_reg_data9.16622:0000000000000000 $d
     /tmp/ccNaYeKW.s:2010   .rodata.lcd_reg_data10.16623:0000000000000000 $d
     /tmp/ccNaYeKW.s:2016   .rodata.lcd_reg_data11.16624:0000000000000000 $d
     /tmp/ccNaYeKW.s:2022   .rodata.lcd_reg_data12.16625:0000000000000000 $d
     /tmp/ccNaYeKW.s:2028   .rodata.lcd_reg_data13.16626:0000000000000000 $d
     /tmp/ccNaYeKW.s:2034   .rodata.lcd_reg_data14.16627:0000000000000000 $d
     /tmp/ccNaYeKW.s:2040   .rodata.lcd_reg_data15.16628:0000000000000000 $d
     /tmp/ccNaYeKW.s:2047   .rodata.lcd_reg_data16.16629:0000000000000000 $d
     /tmp/ccNaYeKW.s:2054   .rodata.lcd_reg_data17.16630:0000000000000000 $d
     /tmp/ccNaYeKW.s:2060   .rodata.lcd_reg_data18.16631:0000000000000000 $d
     /tmp/ccNaYeKW.s:2066   .rodata.lcd_reg_data19.16632:0000000000000000 $d
     /tmp/ccNaYeKW.s:2072   .rodata.lcd_reg_data20.16633:0000000000000000 $d
     /tmp/ccNaYeKW.s:2079   .rodata.lcd_reg_data21.16634:0000000000000000 $d
     /tmp/ccNaYeKW.s:2086   .rodata.lcd_reg_data22.16635:0000000000000000 $d
     /tmp/ccNaYeKW.s:2092   .rodata.lcd_reg_data23.16636:0000000000000000 $d
     /tmp/ccNaYeKW.s:2099   .rodata.lcd_reg_data24.16637:0000000000000000 $d
     /tmp/ccNaYeKW.s:2106   .rodata.lcd_reg_data25.16638:0000000000000000 $d
     /tmp/ccNaYeKW.s:2112   .rodata.lcd_reg_data3.16616:0000000000000000 $d
     /tmp/ccNaYeKW.s:2119   .rodata.lcd_reg_data4.16617:0000000000000000 $d

UNDEFINED SYMBOLS
LTDC_DSI_object_Init
HAL_Delay
HAL_DSI_ShortWrite
memset
HAL_DSI_ConfigCommand
HAL_LTDC_SetPitch
