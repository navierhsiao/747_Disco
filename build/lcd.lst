ARM GAS  /tmp/cc3dkcfp.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"lcd.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.global	LCD_Driver
  17              		.section	.data.LCD_Driver,"aw"
  18              		.align	2
  21              	LCD_Driver:
  22 0000 00000000 		.word	LCD_Init
  23 0004 00000000 		.word	LCD_ReadID
  24 0008 00000000 		.word	LCD_DisplayOn
  25 000c 00000000 		.word	LCD_DisplayOff
  26 0010 00000000 		.word	LCD_SetBrightness
  27 0014 00000000 		.word	LCD_GetBrightness
  28 0018 00000000 		.word	LCD_SetOrientation
  29 001c 00000000 		.word	LCD_GetOrientation
  30 0020 00000000 		.word	LCD_GetXSize
  31 0024 00000000 		.word	LCD_GetYSize
  32 0028 00000000 		.space	36
  32      00000000 
  32      00000000 
  32      00000000 
  32      00000000 
  33              		.section	.bss.LCD_object,"aw",%nobits
  34              		.align	2
  37              	LCD_object:
  38 0000 00000000 		.space	32
  38      00000000 
  38      00000000 
  38      00000000 
  38      00000000 
  39              		.section	.bss.LCDACtx,"aw",%nobits
  40              		.align	2
  43              	LCDACtx:
  44 0000 00000000 		.space	12
  44      00000000 
  44      00000000 
  45              		.section	.rodata.LcdRegData27,"a"
  46              		.align	2
  49              	LcdRegData27:
  50 0000 0000031F 		.ascii	"\000\000\003\037"
  51              		.section	.rodata.LcdRegData28,"a"
  52              		.align	2
  55              	LcdRegData28:
  56 0000 000001DF 		.ascii	"\000\000\001\337"
  57              		.section	.text.LCD_ReadRegWrap,"ax",%progbits
ARM GAS  /tmp/cc3dkcfp.s 			page 2


  58              		.align	1
  59              		.arch armv7e-m
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv5-d16
  65              	LCD_ReadRegWrap:
  66              	.LFB338:
  67              		.file 1 "./BSP/Components/Src/lcd.c"
   1:./BSP/Components/Src/lcd.c **** #include "../../system.h"
   2:./BSP/Components/Src/lcd.c **** 
   3:./BSP/Components/Src/lcd.c **** //Todo:加入與LCD相關的驅動程式
   4:./BSP/Components/Src/lcd.c **** 
   5:./BSP/Components/Src/lcd.c **** LCD_Drv_t   LCD_Driver = 
   6:./BSP/Components/Src/lcd.c **** {
   7:./BSP/Components/Src/lcd.c ****   LCD_Init,
   8:./BSP/Components/Src/lcd.c ****   LCD_ReadID,
   9:./BSP/Components/Src/lcd.c ****   LCD_DisplayOn,
  10:./BSP/Components/Src/lcd.c ****   LCD_DisplayOff,
  11:./BSP/Components/Src/lcd.c ****   LCD_SetBrightness,
  12:./BSP/Components/Src/lcd.c ****   LCD_GetBrightness,  
  13:./BSP/Components/Src/lcd.c ****   LCD_SetOrientation,
  14:./BSP/Components/Src/lcd.c ****   LCD_GetOrientation,
  15:./BSP/Components/Src/lcd.c **** //   LCD_SetCursor,
  16:./BSP/Components/Src/lcd.c **** //   LCD_DrawBitmap,
  17:./BSP/Components/Src/lcd.c **** //   LCD_FillRGBRect,
  18:./BSP/Components/Src/lcd.c **** //   LCD_DrawHLine,
  19:./BSP/Components/Src/lcd.c **** //   LCD_DrawVLine,
  20:./BSP/Components/Src/lcd.c **** //   LCD_FillRect,
  21:./BSP/Components/Src/lcd.c **** //   LCD_GetPixel,
  22:./BSP/Components/Src/lcd.c **** //   LCD_SetPixel,
  23:./BSP/Components/Src/lcd.c ****   LCD_GetXSize,
  24:./BSP/Components/Src/lcd.c ****   LCD_GetYSize,
  25:./BSP/Components/Src/lcd.c **** };
  26:./BSP/Components/Src/lcd.c **** 
  27:./BSP/Components/Src/lcd.c **** static int32_t LCD_ReadRegWrap(void *Handle, uint16_t Reg, uint8_t* Data, uint16_t Length);
  28:./BSP/Components/Src/lcd.c **** static int32_t LCD_WriteRegWrap(void *Handle, uint16_t Reg, uint8_t *pData, uint16_t Length);
  29:./BSP/Components/Src/lcd.c **** static int32_t LCD_IO_Delay(LCD_Object_t *pObj, uint32_t Delay);
  30:./BSP/Components/Src/lcd.c **** 
  31:./BSP/Components/Src/lcd.c **** static LCD_Object_t LCD_object;
  32:./BSP/Components/Src/lcd.c **** static LCD_Ctx_t LCDACtx;
  33:./BSP/Components/Src/lcd.c **** /*
  34:./BSP/Components/Src/lcd.c ****   * CASET value (Column Address Set) : X direction LCD GRAM boundaries
  35:./BSP/Components/Src/lcd.c ****   * depending on LCD orientation mode and PASET value (Page Address Set) : Y direction
  36:./BSP/Components/Src/lcd.c ****   * LCD GRAM boundaries depending on LCD orientation mode
  37:./BSP/Components/Src/lcd.c ****   * XS[15:0] = 0x000 = 0, XE[15:0] = 0x31F = 799 for landscape mode : apply to CASET
  38:./BSP/Components/Src/lcd.c ****   * YS[15:0] = 0x000 = 0, YE[15:0] = 0x31F = 799 for portrait mode : apply to PASET
  39:./BSP/Components/Src/lcd.c ****   */
  40:./BSP/Components/Src/lcd.c **** static const uint8_t LcdRegData27[] = {0x00, 0x00, 0x03, 0x1F};
  41:./BSP/Components/Src/lcd.c **** /*
  42:./BSP/Components/Src/lcd.c ****   * XS[15:0] = 0x000 = 0, XE[15:0] = 0x1DF = 479 for portrait mode : apply to CASET
  43:./BSP/Components/Src/lcd.c ****   * YS[15:0] = 0x000 = 0, YE[15:0] = 0x1DF = 479 for landscape mode : apply to PASET
  44:./BSP/Components/Src/lcd.c ****  */
  45:./BSP/Components/Src/lcd.c **** static const uint8_t LcdRegData28[] = {0x00, 0x00, 0x01, 0xDF};
  46:./BSP/Components/Src/lcd.c **** 
  47:./BSP/Components/Src/lcd.c **** /*
  48:./BSP/Components/Src/lcd.c **** ******************************************************************
ARM GAS  /tmp/cc3dkcfp.s 			page 3


  49:./BSP/Components/Src/lcd.c **** *                       與LCD有關的基礎通訊控制函式
  50:./BSP/Components/Src/lcd.c **** ******************************************************************
  51:./BSP/Components/Src/lcd.c **** */
  52:./BSP/Components/Src/lcd.c **** static int32_t LCD_ReadRegWrap(void *Handle, uint16_t Reg, uint8_t* pData, uint16_t Length)
  53:./BSP/Components/Src/lcd.c **** {
  68              		.loc 1 53 1
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 24
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72 0000 90B5     		push	{r4, r7, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 12
  75              		.cfi_offset 4, -12
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 87B0     		sub	sp, sp, #28
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 40
  81 0004 00AF     		add	r7, sp, #0
  82              	.LCFI2:
  83              		.cfi_def_cfa_register 7
  84 0006 F860     		str	r0, [r7, #12]
  85 0008 7A60     		str	r2, [r7, #4]
  86 000a 1A46     		mov	r2, r3
  87 000c 0B46     		mov	r3, r1	@ movhi
  88 000e 7B81     		strh	r3, [r7, #10]	@ movhi
  89 0010 1346     		mov	r3, r2	@ movhi
  90 0012 3B81     		strh	r3, [r7, #8]	@ movhi
  54:./BSP/Components/Src/lcd.c ****   LCD_Object_t *pObj = (LCD_Object_t *)Handle;
  91              		.loc 1 54 17
  92 0014 FB68     		ldr	r3, [r7, #12]
  93 0016 7B61     		str	r3, [r7, #20]
  55:./BSP/Components/Src/lcd.c **** 
  56:./BSP/Components/Src/lcd.c ****   return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
  94              		.loc 1 56 18
  95 0018 7B69     		ldr	r3, [r7, #20]
  96 001a 9C68     		ldr	r4, [r3, #8]
  97              		.loc 1 56 10
  98 001c 7B69     		ldr	r3, [r7, #20]
  99 001e 1888     		ldrh	r0, [r3]
 100 0020 3B89     		ldrh	r3, [r7, #8]
 101 0022 7989     		ldrh	r1, [r7, #10]
 102 0024 7A68     		ldr	r2, [r7, #4]
 103 0026 A047     		blx	r4
 104              	.LVL0:
 105 0028 0346     		mov	r3, r0
  57:./BSP/Components/Src/lcd.c **** }
 106              		.loc 1 57 1
 107 002a 1846     		mov	r0, r3
 108 002c 1C37     		adds	r7, r7, #28
 109              	.LCFI3:
 110              		.cfi_def_cfa_offset 12
 111 002e BD46     		mov	sp, r7
 112              	.LCFI4:
 113              		.cfi_def_cfa_register 13
 114              		@ sp needed
 115 0030 90BD     		pop	{r4, r7, pc}
ARM GAS  /tmp/cc3dkcfp.s 			page 4


 116              		.cfi_endproc
 117              	.LFE338:
 119              		.section	.text.LCD_WriteRegWrap,"ax",%progbits
 120              		.align	1
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv5-d16
 126              	LCD_WriteRegWrap:
 127              	.LFB339:
  58:./BSP/Components/Src/lcd.c **** 
  59:./BSP/Components/Src/lcd.c **** static int32_t LCD_WriteRegWrap(void *Handle, uint16_t Reg, uint8_t *pData, uint16_t Length)
  60:./BSP/Components/Src/lcd.c **** {
 128              		.loc 1 60 1
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 24
 131              		@ frame_needed = 1, uses_anonymous_args = 0
 132 0000 90B5     		push	{r4, r7, lr}
 133              	.LCFI5:
 134              		.cfi_def_cfa_offset 12
 135              		.cfi_offset 4, -12
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 87B0     		sub	sp, sp, #28
 139              	.LCFI6:
 140              		.cfi_def_cfa_offset 40
 141 0004 00AF     		add	r7, sp, #0
 142              	.LCFI7:
 143              		.cfi_def_cfa_register 7
 144 0006 F860     		str	r0, [r7, #12]
 145 0008 7A60     		str	r2, [r7, #4]
 146 000a 1A46     		mov	r2, r3
 147 000c 0B46     		mov	r3, r1	@ movhi
 148 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 149 0010 1346     		mov	r3, r2	@ movhi
 150 0012 3B81     		strh	r3, [r7, #8]	@ movhi
  61:./BSP/Components/Src/lcd.c ****   LCD_Object_t *pObj = (LCD_Object_t *)Handle;
 151              		.loc 1 61 17
 152 0014 FB68     		ldr	r3, [r7, #12]
 153 0016 7B61     		str	r3, [r7, #20]
  62:./BSP/Components/Src/lcd.c **** 
  63:./BSP/Components/Src/lcd.c ****   return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 154              		.loc 1 63 18
 155 0018 7B69     		ldr	r3, [r7, #20]
 156 001a 5C68     		ldr	r4, [r3, #4]
 157              		.loc 1 63 10
 158 001c 7B69     		ldr	r3, [r7, #20]
 159 001e 1888     		ldrh	r0, [r3]
 160 0020 3B89     		ldrh	r3, [r7, #8]
 161 0022 7989     		ldrh	r1, [r7, #10]
 162 0024 7A68     		ldr	r2, [r7, #4]
 163 0026 A047     		blx	r4
 164              	.LVL1:
 165 0028 0346     		mov	r3, r0
  64:./BSP/Components/Src/lcd.c **** }
 166              		.loc 1 64 1
 167 002a 1846     		mov	r0, r3
ARM GAS  /tmp/cc3dkcfp.s 			page 5


 168 002c 1C37     		adds	r7, r7, #28
 169              	.LCFI8:
 170              		.cfi_def_cfa_offset 12
 171 002e BD46     		mov	sp, r7
 172              	.LCFI9:
 173              		.cfi_def_cfa_register 13
 174              		@ sp needed
 175 0030 90BD     		pop	{r4, r7, pc}
 176              		.cfi_endproc
 177              	.LFE339:
 179              		.section	.text.LCD_IO_Delay,"ax",%progbits
 180              		.align	1
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv5-d16
 186              	LCD_IO_Delay:
 187              	.LFB340:
  65:./BSP/Components/Src/lcd.c **** 
  66:./BSP/Components/Src/lcd.c **** static int32_t LCD_IO_Delay(LCD_Object_t *pObj, uint32_t Delay)
  67:./BSP/Components/Src/lcd.c **** {
 188              		.loc 1 67 1
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 16
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              	.LCFI10:
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 0002 84B0     		sub	sp, sp, #16
 198              	.LCFI11:
 199              		.cfi_def_cfa_offset 24
 200 0004 00AF     		add	r7, sp, #0
 201              	.LCFI12:
 202              		.cfi_def_cfa_register 7
 203 0006 7860     		str	r0, [r7, #4]
 204 0008 3960     		str	r1, [r7]
  68:./BSP/Components/Src/lcd.c ****   uint32_t tickstart;
  69:./BSP/Components/Src/lcd.c ****   tickstart = pObj->IO.GetTick();
 205              		.loc 1 69 23
 206 000a 7B68     		ldr	r3, [r7, #4]
 207 000c DB68     		ldr	r3, [r3, #12]
 208              		.loc 1 69 15
 209 000e 9847     		blx	r3
 210              	.LVL2:
 211 0010 0346     		mov	r3, r0
 212              		.loc 1 69 13
 213 0012 FB60     		str	r3, [r7, #12]
  70:./BSP/Components/Src/lcd.c ****   while((pObj->IO.GetTick() - tickstart) < Delay)
 214              		.loc 1 70 8
 215 0014 00BF     		nop
 216              	.L6:
 217              		.loc 1 70 18 discriminator 1
 218 0016 7B68     		ldr	r3, [r7, #4]
 219 0018 DB68     		ldr	r3, [r3, #12]
 220              		.loc 1 70 10 discriminator 1
ARM GAS  /tmp/cc3dkcfp.s 			page 6


 221 001a 9847     		blx	r3
 222              	.LVL3:
 223 001c 0346     		mov	r3, r0
 224 001e 1A46     		mov	r2, r3
 225              		.loc 1 70 29 discriminator 1
 226 0020 FB68     		ldr	r3, [r7, #12]
 227 0022 D31A     		subs	r3, r2, r3
 228              		.loc 1 70 8 discriminator 1
 229 0024 3A68     		ldr	r2, [r7]
 230 0026 9A42     		cmp	r2, r3
 231 0028 F5D8     		bhi	.L6
  71:./BSP/Components/Src/lcd.c ****   {
  72:./BSP/Components/Src/lcd.c ****   }
  73:./BSP/Components/Src/lcd.c ****   return OTM8009A_OK;
 232              		.loc 1 73 10
 233 002a 0023     		movs	r3, #0
  74:./BSP/Components/Src/lcd.c **** }
 234              		.loc 1 74 1
 235 002c 1846     		mov	r0, r3
 236 002e 1037     		adds	r7, r7, #16
 237              	.LCFI13:
 238              		.cfi_def_cfa_offset 8
 239 0030 BD46     		mov	sp, r7
 240              	.LCFI14:
 241              		.cfi_def_cfa_register 13
 242              		@ sp needed
 243 0032 80BD     		pop	{r7, pc}
 244              		.cfi_endproc
 245              	.LFE340:
 247              		.section	.text.LCD_read_reg,"ax",%progbits
 248              		.align	1
 249              		.global	LCD_read_reg
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu fpv5-d16
 255              	LCD_read_reg:
 256              	.LFB341:
  75:./BSP/Components/Src/lcd.c **** 
  76:./BSP/Components/Src/lcd.c **** int32_t LCD_read_reg(LCD_ctx_t *ctx, uint16_t reg, uint8_t *pdata, uint16_t length)
  77:./BSP/Components/Src/lcd.c **** {
 257              		.loc 1 77 1
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 16
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261 0000 90B5     		push	{r4, r7, lr}
 262              	.LCFI15:
 263              		.cfi_def_cfa_offset 12
 264              		.cfi_offset 4, -12
 265              		.cfi_offset 7, -8
 266              		.cfi_offset 14, -4
 267 0002 85B0     		sub	sp, sp, #20
 268              	.LCFI16:
 269              		.cfi_def_cfa_offset 32
 270 0004 00AF     		add	r7, sp, #0
 271              	.LCFI17:
 272              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cc3dkcfp.s 			page 7


 273 0006 F860     		str	r0, [r7, #12]
 274 0008 7A60     		str	r2, [r7, #4]
 275 000a 1A46     		mov	r2, r3
 276 000c 0B46     		mov	r3, r1	@ movhi
 277 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 278 0010 1346     		mov	r3, r2	@ movhi
 279 0012 3B81     		strh	r3, [r7, #8]	@ movhi
  78:./BSP/Components/Src/lcd.c ****   return ctx->ReadReg(ctx->handle, reg, pdata, length);
 280              		.loc 1 78 13
 281 0014 FB68     		ldr	r3, [r7, #12]
 282 0016 5C68     		ldr	r4, [r3, #4]
 283              		.loc 1 78 10
 284 0018 FB68     		ldr	r3, [r7, #12]
 285 001a 9868     		ldr	r0, [r3, #8]
 286 001c 3B89     		ldrh	r3, [r7, #8]
 287 001e 7989     		ldrh	r1, [r7, #10]
 288 0020 7A68     		ldr	r2, [r7, #4]
 289 0022 A047     		blx	r4
 290              	.LVL4:
 291 0024 0346     		mov	r3, r0
  79:./BSP/Components/Src/lcd.c **** }
 292              		.loc 1 79 1
 293 0026 1846     		mov	r0, r3
 294 0028 1437     		adds	r7, r7, #20
 295              	.LCFI18:
 296              		.cfi_def_cfa_offset 12
 297 002a BD46     		mov	sp, r7
 298              	.LCFI19:
 299              		.cfi_def_cfa_register 13
 300              		@ sp needed
 301 002c 90BD     		pop	{r4, r7, pc}
 302              		.cfi_endproc
 303              	.LFE341:
 305              		.section	.text.LCD_write_reg,"ax",%progbits
 306              		.align	1
 307              		.global	LCD_write_reg
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 311              		.fpu fpv5-d16
 313              	LCD_write_reg:
 314              	.LFB342:
  80:./BSP/Components/Src/lcd.c **** 
  81:./BSP/Components/Src/lcd.c **** int32_t LCD_write_reg(LCD_ctx_t *ctx, uint16_t reg, const uint8_t *pdata, uint16_t length)
  82:./BSP/Components/Src/lcd.c **** {
 315              		.loc 1 82 1
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 16
 318              		@ frame_needed = 1, uses_anonymous_args = 0
 319 0000 90B5     		push	{r4, r7, lr}
 320              	.LCFI20:
 321              		.cfi_def_cfa_offset 12
 322              		.cfi_offset 4, -12
 323              		.cfi_offset 7, -8
 324              		.cfi_offset 14, -4
 325 0002 85B0     		sub	sp, sp, #20
 326              	.LCFI21:
ARM GAS  /tmp/cc3dkcfp.s 			page 8


 327              		.cfi_def_cfa_offset 32
 328 0004 00AF     		add	r7, sp, #0
 329              	.LCFI22:
 330              		.cfi_def_cfa_register 7
 331 0006 F860     		str	r0, [r7, #12]
 332 0008 7A60     		str	r2, [r7, #4]
 333 000a 1A46     		mov	r2, r3
 334 000c 0B46     		mov	r3, r1	@ movhi
 335 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 336 0010 1346     		mov	r3, r2	@ movhi
 337 0012 3B81     		strh	r3, [r7, #8]	@ movhi
  83:./BSP/Components/Src/lcd.c ****   return ctx->WriteReg(ctx->handle, reg, (uint8_t *)pdata, length);
 338              		.loc 1 83 13
 339 0014 FB68     		ldr	r3, [r7, #12]
 340 0016 1C68     		ldr	r4, [r3]
 341              		.loc 1 83 10
 342 0018 FB68     		ldr	r3, [r7, #12]
 343 001a 9868     		ldr	r0, [r3, #8]
 344 001c 3B89     		ldrh	r3, [r7, #8]
 345 001e 7989     		ldrh	r1, [r7, #10]
 346 0020 7A68     		ldr	r2, [r7, #4]
 347 0022 A047     		blx	r4
 348              	.LVL5:
 349 0024 0346     		mov	r3, r0
  84:./BSP/Components/Src/lcd.c **** }
 350              		.loc 1 84 1
 351 0026 1846     		mov	r0, r3
 352 0028 1437     		adds	r7, r7, #20
 353              	.LCFI23:
 354              		.cfi_def_cfa_offset 12
 355 002a BD46     		mov	sp, r7
 356              	.LCFI24:
 357              		.cfi_def_cfa_register 13
 358              		@ sp needed
 359 002c 90BD     		pop	{r4, r7, pc}
 360              		.cfi_endproc
 361              	.LFE342:
 363              		.section	.text.LCD_ReadID,"ax",%progbits
 364              		.align	1
 365              		.global	LCD_ReadID
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv5-d16
 371              	LCD_ReadID:
 372              	.LFB343:
  85:./BSP/Components/Src/lcd.c **** /*
  86:./BSP/Components/Src/lcd.c **** ******************************************************************
  87:./BSP/Components/Src/lcd.c **** *                       LCD控制函式
  88:./BSP/Components/Src/lcd.c **** ******************************************************************
  89:./BSP/Components/Src/lcd.c **** */
  90:./BSP/Components/Src/lcd.c **** 
  91:./BSP/Components/Src/lcd.c **** int32_t LCD_ReadID(LCD_Object_t *pObj, uint32_t *Id)
  92:./BSP/Components/Src/lcd.c **** { 
 373              		.loc 1 92 1
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cc3dkcfp.s 			page 9


 376              		@ frame_needed = 1, uses_anonymous_args = 0
 377 0000 80B5     		push	{r7, lr}
 378              	.LCFI25:
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 7, -8
 381              		.cfi_offset 14, -4
 382 0002 84B0     		sub	sp, sp, #16
 383              	.LCFI26:
 384              		.cfi_def_cfa_offset 24
 385 0004 00AF     		add	r7, sp, #0
 386              	.LCFI27:
 387              		.cfi_def_cfa_register 7
 388 0006 7860     		str	r0, [r7, #4]
 389 0008 3960     		str	r1, [r7]
  93:./BSP/Components/Src/lcd.c ****   int32_t ret;
  94:./BSP/Components/Src/lcd.c ****   
  95:./BSP/Components/Src/lcd.c ****   if(LCD_read_reg(&pObj->Ctx, OTM8009A_CMD_ID1, (uint8_t *)Id, 0)!= OTM8009A_OK)
 390              		.loc 1 95 6
 391 000a 7B68     		ldr	r3, [r7, #4]
 392 000c 03F11000 		add	r0, r3, #16
 393 0010 0023     		movs	r3, #0
 394 0012 3A68     		ldr	r2, [r7]
 395 0014 DA21     		movs	r1, #218
 396 0016 FFF7FEFF 		bl	LCD_read_reg
 397 001a 0346     		mov	r3, r0
 398              		.loc 1 95 5
 399 001c 002B     		cmp	r3, #0
 400 001e 03D0     		beq	.L13
  96:./BSP/Components/Src/lcd.c ****   {
  97:./BSP/Components/Src/lcd.c ****     ret = OTM8009A_ERROR;
 401              		.loc 1 97 9
 402 0020 4FF0FF33 		mov	r3, #-1
 403 0024 FB60     		str	r3, [r7, #12]
 404 0026 01E0     		b	.L14
 405              	.L13:
  98:./BSP/Components/Src/lcd.c ****   }
  99:./BSP/Components/Src/lcd.c ****   else
 100:./BSP/Components/Src/lcd.c ****   {
 101:./BSP/Components/Src/lcd.c ****     ret = OTM8009A_OK;
 406              		.loc 1 101 9
 407 0028 0023     		movs	r3, #0
 408 002a FB60     		str	r3, [r7, #12]
 409              	.L14:
 102:./BSP/Components/Src/lcd.c ****   }
 103:./BSP/Components/Src/lcd.c ****   
 104:./BSP/Components/Src/lcd.c ****   return ret;  
 410              		.loc 1 104 10
 411 002c FB68     		ldr	r3, [r7, #12]
 105:./BSP/Components/Src/lcd.c **** }  
 412              		.loc 1 105 1
 413 002e 1846     		mov	r0, r3
 414 0030 1037     		adds	r7, r7, #16
 415              	.LCFI28:
 416              		.cfi_def_cfa_offset 8
 417 0032 BD46     		mov	sp, r7
 418              	.LCFI29:
 419              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cc3dkcfp.s 			page 10


 420              		@ sp needed
 421 0034 80BD     		pop	{r7, pc}
 422              		.cfi_endproc
 423              	.LFE343:
 425              		.section	.text.LCD_SetBrightness,"ax",%progbits
 426              		.align	1
 427              		.global	LCD_SetBrightness
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu fpv5-d16
 433              	LCD_SetBrightness:
 434              	.LFB344:
 106:./BSP/Components/Src/lcd.c **** 
 107:./BSP/Components/Src/lcd.c **** /**
 108:./BSP/Components/Src/lcd.c ****   * @brief  Set the display brightness.
 109:./BSP/Components/Src/lcd.c ****   * @param  pObj Component object
 110:./BSP/Components/Src/lcd.c ****   * @param  Brightness   display brightness to be set
 111:./BSP/Components/Src/lcd.c ****   * @retval Component status
 112:./BSP/Components/Src/lcd.c ****   */
 113:./BSP/Components/Src/lcd.c **** int32_t LCD_SetBrightness(LCD_Object_t *pObj, uint32_t Brightness)
 114:./BSP/Components/Src/lcd.c **** {
 435              		.loc 1 114 1
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 16
 438              		@ frame_needed = 1, uses_anonymous_args = 0
 439 0000 80B5     		push	{r7, lr}
 440              	.LCFI30:
 441              		.cfi_def_cfa_offset 8
 442              		.cfi_offset 7, -8
 443              		.cfi_offset 14, -4
 444 0002 84B0     		sub	sp, sp, #16
 445              	.LCFI31:
 446              		.cfi_def_cfa_offset 24
 447 0004 00AF     		add	r7, sp, #0
 448              	.LCFI32:
 449              		.cfi_def_cfa_register 7
 450 0006 7860     		str	r0, [r7, #4]
 451 0008 3960     		str	r1, [r7]
 115:./BSP/Components/Src/lcd.c ****   int32_t ret;
 116:./BSP/Components/Src/lcd.c ****   uint8_t brightness = (uint8_t)((Brightness * 255U)/100U);
 452              		.loc 1 116 46
 453 000a 3A68     		ldr	r2, [r7]
 454 000c 1346     		mov	r3, r2
 455 000e 1B02     		lsls	r3, r3, #8
 456 0010 9B1A     		subs	r3, r3, r2
 457              		.loc 1 116 53
 458 0012 104A     		ldr	r2, .L20
 459 0014 A2FB0323 		umull	r2, r3, r2, r3
 460 0018 5B09     		lsrs	r3, r3, #5
 461              		.loc 1 116 24
 462 001a DBB2     		uxtb	r3, r3
 463              		.loc 1 116 11
 464 001c FB72     		strb	r3, [r7, #11]
 117:./BSP/Components/Src/lcd.c ****   
 118:./BSP/Components/Src/lcd.c ****   /* Send Display on DCS command to display */
 119:./BSP/Components/Src/lcd.c ****   if(LCD_write_reg(&pObj->Ctx, OTM8009A_CMD_WRDISBV, &brightness, 0) != OTM8009A_OK)
ARM GAS  /tmp/cc3dkcfp.s 			page 11


 465              		.loc 1 119 6
 466 001e 7B68     		ldr	r3, [r7, #4]
 467 0020 03F11000 		add	r0, r3, #16
 468 0024 07F10B02 		add	r2, r7, #11
 469 0028 0023     		movs	r3, #0
 470 002a 5121     		movs	r1, #81
 471 002c FFF7FEFF 		bl	LCD_write_reg
 472 0030 0346     		mov	r3, r0
 473              		.loc 1 119 5
 474 0032 002B     		cmp	r3, #0
 475 0034 03D0     		beq	.L17
 120:./BSP/Components/Src/lcd.c ****   {
 121:./BSP/Components/Src/lcd.c ****     ret = OTM8009A_ERROR;
 476              		.loc 1 121 9
 477 0036 4FF0FF33 		mov	r3, #-1
 478 003a FB60     		str	r3, [r7, #12]
 479 003c 04E0     		b	.L18
 480              	.L17:
 122:./BSP/Components/Src/lcd.c ****   }
 123:./BSP/Components/Src/lcd.c ****   else
 124:./BSP/Components/Src/lcd.c ****   {
 125:./BSP/Components/Src/lcd.c ****     LCDACtx.Brightness = Brightness;
 481              		.loc 1 125 24
 482 003e 064A     		ldr	r2, .L20+4
 483 0040 3B68     		ldr	r3, [r7]
 484 0042 9360     		str	r3, [r2, #8]
 126:./BSP/Components/Src/lcd.c ****     ret = OTM8009A_OK;
 485              		.loc 1 126 9
 486 0044 0023     		movs	r3, #0
 487 0046 FB60     		str	r3, [r7, #12]
 488              	.L18:
 127:./BSP/Components/Src/lcd.c ****   }
 128:./BSP/Components/Src/lcd.c ****   
 129:./BSP/Components/Src/lcd.c ****   return ret;  
 489              		.loc 1 129 10
 490 0048 FB68     		ldr	r3, [r7, #12]
 130:./BSP/Components/Src/lcd.c **** }
 491              		.loc 1 130 1
 492 004a 1846     		mov	r0, r3
 493 004c 1037     		adds	r7, r7, #16
 494              	.LCFI33:
 495              		.cfi_def_cfa_offset 8
 496 004e BD46     		mov	sp, r7
 497              	.LCFI34:
 498              		.cfi_def_cfa_register 13
 499              		@ sp needed
 500 0050 80BD     		pop	{r7, pc}
 501              	.L21:
 502 0052 00BF     		.align	2
 503              	.L20:
 504 0054 1F85EB51 		.word	1374389535
 505 0058 00000000 		.word	LCDACtx
 506              		.cfi_endproc
 507              	.LFE344:
 509              		.section	.text.LCD_GetBrightness,"ax",%progbits
 510              		.align	1
 511              		.global	LCD_GetBrightness
ARM GAS  /tmp/cc3dkcfp.s 			page 12


 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 515              		.fpu fpv5-d16
 517              	LCD_GetBrightness:
 518              	.LFB345:
 131:./BSP/Components/Src/lcd.c **** 
 132:./BSP/Components/Src/lcd.c **** /**
 133:./BSP/Components/Src/lcd.c ****   * @brief  Get the display brightness.
 134:./BSP/Components/Src/lcd.c ****   * @param  pObj Component object
 135:./BSP/Components/Src/lcd.c ****   * @param  Brightness   display brightness to be returned
 136:./BSP/Components/Src/lcd.c ****   * @retval Component status
 137:./BSP/Components/Src/lcd.c ****   */
 138:./BSP/Components/Src/lcd.c **** int32_t LCD_GetBrightness(LCD_Object_t *pObj, uint32_t *Brightness)
 139:./BSP/Components/Src/lcd.c **** {
 519              		.loc 1 139 1
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              	.LCFI35:
 526              		.cfi_def_cfa_offset 4
 527              		.cfi_offset 7, -4
 528 0002 83B0     		sub	sp, sp, #12
 529              	.LCFI36:
 530              		.cfi_def_cfa_offset 16
 531 0004 00AF     		add	r7, sp, #0
 532              	.LCFI37:
 533              		.cfi_def_cfa_register 7
 534 0006 7860     		str	r0, [r7, #4]
 535 0008 3960     		str	r1, [r7]
 140:./BSP/Components/Src/lcd.c ****   *Brightness = LCDACtx.Brightness;
 536              		.loc 1 140 24
 537 000a 054B     		ldr	r3, .L24
 538 000c 9A68     		ldr	r2, [r3, #8]
 539              		.loc 1 140 15
 540 000e 3B68     		ldr	r3, [r7]
 541 0010 1A60     		str	r2, [r3]
 141:./BSP/Components/Src/lcd.c ****   return OTM8009A_OK;  
 542              		.loc 1 141 10
 543 0012 0023     		movs	r3, #0
 142:./BSP/Components/Src/lcd.c **** }
 544              		.loc 1 142 1
 545 0014 1846     		mov	r0, r3
 546 0016 0C37     		adds	r7, r7, #12
 547              	.LCFI38:
 548              		.cfi_def_cfa_offset 4
 549 0018 BD46     		mov	sp, r7
 550              	.LCFI39:
 551              		.cfi_def_cfa_register 13
 552              		@ sp needed
 553 001a 5DF8047B 		ldr	r7, [sp], #4
 554              	.LCFI40:
 555              		.cfi_restore 7
 556              		.cfi_def_cfa_offset 0
 557 001e 7047     		bx	lr
ARM GAS  /tmp/cc3dkcfp.s 			page 13


 558              	.L25:
 559              		.align	2
 560              	.L24:
 561 0020 00000000 		.word	LCDACtx
 562              		.cfi_endproc
 563              	.LFE345:
 565              		.section	.text.LCD_DisplayOn,"ax",%progbits
 566              		.align	1
 567              		.global	LCD_DisplayOn
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 571              		.fpu fpv5-d16
 573              	LCD_DisplayOn:
 574              	.LFB346:
 143:./BSP/Components/Src/lcd.c **** 
 144:./BSP/Components/Src/lcd.c **** /**
 145:./BSP/Components/Src/lcd.c ****   * @brief  Set the display On.
 146:./BSP/Components/Src/lcd.c ****   * @param  pObj Component object
 147:./BSP/Components/Src/lcd.c ****   * @retval Component status
 148:./BSP/Components/Src/lcd.c ****   */
 149:./BSP/Components/Src/lcd.c **** int32_t LCD_DisplayOn(LCD_Object_t *pObj)
 150:./BSP/Components/Src/lcd.c **** {
 575              		.loc 1 150 1
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 16
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579 0000 80B5     		push	{r7, lr}
 580              	.LCFI41:
 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 7, -8
 583              		.cfi_offset 14, -4
 584 0002 84B0     		sub	sp, sp, #16
 585              	.LCFI42:
 586              		.cfi_def_cfa_offset 24
 587 0004 00AF     		add	r7, sp, #0
 588              	.LCFI43:
 589              		.cfi_def_cfa_register 7
 590 0006 7860     		str	r0, [r7, #4]
 151:./BSP/Components/Src/lcd.c ****   int32_t ret;
 152:./BSP/Components/Src/lcd.c ****   uint8_t display = 0;
 591              		.loc 1 152 11
 592 0008 0023     		movs	r3, #0
 593 000a FB72     		strb	r3, [r7, #11]
 153:./BSP/Components/Src/lcd.c ****   
 154:./BSP/Components/Src/lcd.c ****   /* Send Display on DCS command to display */
 155:./BSP/Components/Src/lcd.c ****   if(LCD_write_reg(&pObj->Ctx, OTM8009A_CMD_DISPON, &display, 0) != OTM8009A_OK)
 594              		.loc 1 155 6
 595 000c 7B68     		ldr	r3, [r7, #4]
 596 000e 03F11000 		add	r0, r3, #16
 597 0012 07F10B02 		add	r2, r7, #11
 598 0016 0023     		movs	r3, #0
 599 0018 2921     		movs	r1, #41
 600 001a FFF7FEFF 		bl	LCD_write_reg
 601 001e 0346     		mov	r3, r0
 602              		.loc 1 155 5
 603 0020 002B     		cmp	r3, #0
ARM GAS  /tmp/cc3dkcfp.s 			page 14


 604 0022 03D0     		beq	.L27
 156:./BSP/Components/Src/lcd.c ****   {
 157:./BSP/Components/Src/lcd.c ****     ret = OTM8009A_ERROR;
 605              		.loc 1 157 9
 606 0024 4FF0FF33 		mov	r3, #-1
 607 0028 FB60     		str	r3, [r7, #12]
 608 002a 01E0     		b	.L28
 609              	.L27:
 158:./BSP/Components/Src/lcd.c ****   }
 159:./BSP/Components/Src/lcd.c ****   else
 160:./BSP/Components/Src/lcd.c ****   {
 161:./BSP/Components/Src/lcd.c ****     ret = OTM8009A_OK;
 610              		.loc 1 161 9
 611 002c 0023     		movs	r3, #0
 612 002e FB60     		str	r3, [r7, #12]
 613              	.L28:
 162:./BSP/Components/Src/lcd.c ****   }
 163:./BSP/Components/Src/lcd.c ****   
 164:./BSP/Components/Src/lcd.c ****   return ret;
 614              		.loc 1 164 10
 615 0030 FB68     		ldr	r3, [r7, #12]
 165:./BSP/Components/Src/lcd.c **** }
 616              		.loc 1 165 1
 617 0032 1846     		mov	r0, r3
 618 0034 1037     		adds	r7, r7, #16
 619              	.LCFI44:
 620              		.cfi_def_cfa_offset 8
 621 0036 BD46     		mov	sp, r7
 622              	.LCFI45:
 623              		.cfi_def_cfa_register 13
 624              		@ sp needed
 625 0038 80BD     		pop	{r7, pc}
 626              		.cfi_endproc
 627              	.LFE346:
 629              		.section	.text.LCD_DisplayOff,"ax",%progbits
 630              		.align	1
 631              		.global	LCD_DisplayOff
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 635              		.fpu fpv5-d16
 637              	LCD_DisplayOff:
 638              	.LFB347:
 166:./BSP/Components/Src/lcd.c **** 
 167:./BSP/Components/Src/lcd.c **** /**
 168:./BSP/Components/Src/lcd.c ****   * @brief  Set the display Off.
 169:./BSP/Components/Src/lcd.c ****   * @param  pObj Component object
 170:./BSP/Components/Src/lcd.c ****   * @retval Component status
 171:./BSP/Components/Src/lcd.c ****   */
 172:./BSP/Components/Src/lcd.c **** int32_t LCD_DisplayOff(LCD_Object_t *pObj)
 173:./BSP/Components/Src/lcd.c **** {
 639              		.loc 1 173 1
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 16
 642              		@ frame_needed = 1, uses_anonymous_args = 0
 643 0000 80B5     		push	{r7, lr}
 644              	.LCFI46:
ARM GAS  /tmp/cc3dkcfp.s 			page 15


 645              		.cfi_def_cfa_offset 8
 646              		.cfi_offset 7, -8
 647              		.cfi_offset 14, -4
 648 0002 84B0     		sub	sp, sp, #16
 649              	.LCFI47:
 650              		.cfi_def_cfa_offset 24
 651 0004 00AF     		add	r7, sp, #0
 652              	.LCFI48:
 653              		.cfi_def_cfa_register 7
 654 0006 7860     		str	r0, [r7, #4]
 174:./BSP/Components/Src/lcd.c ****   int32_t ret;
 175:./BSP/Components/Src/lcd.c ****   uint8_t display = 0;
 655              		.loc 1 175 11
 656 0008 0023     		movs	r3, #0
 657 000a FB72     		strb	r3, [r7, #11]
 176:./BSP/Components/Src/lcd.c ****   
 177:./BSP/Components/Src/lcd.c ****   /* Send Display on DCS command to display */
 178:./BSP/Components/Src/lcd.c ****   if(LCD_write_reg(&pObj->Ctx, OTM8009A_CMD_DISPOFF, &display, 0) != OTM8009A_OK)
 658              		.loc 1 178 6
 659 000c 7B68     		ldr	r3, [r7, #4]
 660 000e 03F11000 		add	r0, r3, #16
 661 0012 07F10B02 		add	r2, r7, #11
 662 0016 0023     		movs	r3, #0
 663 0018 2821     		movs	r1, #40
 664 001a FFF7FEFF 		bl	LCD_write_reg
 665 001e 0346     		mov	r3, r0
 666              		.loc 1 178 5
 667 0020 002B     		cmp	r3, #0
 668 0022 03D0     		beq	.L31
 179:./BSP/Components/Src/lcd.c ****   {
 180:./BSP/Components/Src/lcd.c ****     ret = OTM8009A_ERROR;
 669              		.loc 1 180 9
 670 0024 4FF0FF33 		mov	r3, #-1
 671 0028 FB60     		str	r3, [r7, #12]
 672 002a 01E0     		b	.L32
 673              	.L31:
 181:./BSP/Components/Src/lcd.c ****   }
 182:./BSP/Components/Src/lcd.c ****   else
 183:./BSP/Components/Src/lcd.c ****   {
 184:./BSP/Components/Src/lcd.c ****     ret = OTM8009A_OK;
 674              		.loc 1 184 9
 675 002c 0023     		movs	r3, #0
 676 002e FB60     		str	r3, [r7, #12]
 677              	.L32:
 185:./BSP/Components/Src/lcd.c ****   }
 186:./BSP/Components/Src/lcd.c ****   
 187:./BSP/Components/Src/lcd.c ****   return ret;
 678              		.loc 1 187 10
 679 0030 FB68     		ldr	r3, [r7, #12]
 188:./BSP/Components/Src/lcd.c **** }
 680              		.loc 1 188 1
 681 0032 1846     		mov	r0, r3
 682 0034 1037     		adds	r7, r7, #16
 683              	.LCFI49:
 684              		.cfi_def_cfa_offset 8
 685 0036 BD46     		mov	sp, r7
 686              	.LCFI50:
ARM GAS  /tmp/cc3dkcfp.s 			page 16


 687              		.cfi_def_cfa_register 13
 688              		@ sp needed
 689 0038 80BD     		pop	{r7, pc}
 690              		.cfi_endproc
 691              	.LFE347:
 693              		.section	.text.LCD_SetOrientation,"ax",%progbits
 694              		.align	1
 695              		.global	LCD_SetOrientation
 696              		.syntax unified
 697              		.thumb
 698              		.thumb_func
 699              		.fpu fpv5-d16
 701              	LCD_SetOrientation:
 702              	.LFB348:
 189:./BSP/Components/Src/lcd.c **** 
 190:./BSP/Components/Src/lcd.c **** /**
 191:./BSP/Components/Src/lcd.c **** * @brief  Set the display Orientation.
 192:./BSP/Components/Src/lcd.c **** * @param  pObj Component object
 193:./BSP/Components/Src/lcd.c **** * @param  Orientation   display Orientation to be set
 194:./BSP/Components/Src/lcd.c **** * @retval Component status
 195:./BSP/Components/Src/lcd.c **** */
 196:./BSP/Components/Src/lcd.c **** int32_t LCD_SetOrientation(LCD_Object_t *pObj, uint32_t Orientation)
 197:./BSP/Components/Src/lcd.c **** {
 703              		.loc 1 197 1
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 16
 706              		@ frame_needed = 1, uses_anonymous_args = 0
 707 0000 80B5     		push	{r7, lr}
 708              	.LCFI51:
 709              		.cfi_def_cfa_offset 8
 710              		.cfi_offset 7, -8
 711              		.cfi_offset 14, -4
 712 0002 84B0     		sub	sp, sp, #16
 713              	.LCFI52:
 714              		.cfi_def_cfa_offset 24
 715 0004 00AF     		add	r7, sp, #0
 716              	.LCFI53:
 717              		.cfi_def_cfa_register 7
 718 0006 7860     		str	r0, [r7, #4]
 719 0008 3960     		str	r1, [r7]
 198:./BSP/Components/Src/lcd.c ****   int32_t ret;
 199:./BSP/Components/Src/lcd.c ****   uint8_t tmp = OTM8009A_MADCTR_MODE_LANDSCAPE;
 720              		.loc 1 199 11
 721 000a 6023     		movs	r3, #96
 722 000c FB72     		strb	r3, [r7, #11]
 200:./BSP/Components/Src/lcd.c ****   uint8_t tmp1 = OTM8009A_MADCTR_MODE_PORTRAIT;
 723              		.loc 1 200 11
 724 000e 0023     		movs	r3, #0
 725 0010 BB72     		strb	r3, [r7, #10]
 201:./BSP/Components/Src/lcd.c ****   
 202:./BSP/Components/Src/lcd.c ****   if((Orientation != OTM8009A_ORIENTATION_LANDSCAPE) && (Orientation != OTM8009A_ORIENTATION_PORTRA
 726              		.loc 1 202 5
 727 0012 3B68     		ldr	r3, [r7]
 728 0014 012B     		cmp	r3, #1
 729 0016 06D0     		beq	.L35
 730              		.loc 1 202 54 discriminator 1
 731 0018 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/cc3dkcfp.s 			page 17


 732 001a 002B     		cmp	r3, #0
 733 001c 03D0     		beq	.L35
 203:./BSP/Components/Src/lcd.c ****   {
 204:./BSP/Components/Src/lcd.c ****     ret = OTM8009A_ERROR;
 734              		.loc 1 204 9
 735 001e 4FF0FF33 		mov	r3, #-1
 736 0022 FB60     		str	r3, [r7, #12]
 737 0024 4DE0     		b	.L36
 738              	.L35:
 205:./BSP/Components/Src/lcd.c ****   }/* Send command to configure display orientation mode  */
 206:./BSP/Components/Src/lcd.c ****   else if(Orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 739              		.loc 1 206 10
 740 0026 3B68     		ldr	r3, [r7]
 741 0028 012B     		cmp	r3, #1
 742 002a 25D1     		bne	.L37
 207:./BSP/Components/Src/lcd.c ****   {
 208:./BSP/Components/Src/lcd.c ****     ret = LCD_write_reg(&pObj->Ctx, OTM8009A_CMD_MADCTR, &tmp, 0);
 743              		.loc 1 208 11
 744 002c 7B68     		ldr	r3, [r7, #4]
 745 002e 03F11000 		add	r0, r3, #16
 746 0032 07F10B02 		add	r2, r7, #11
 747 0036 0023     		movs	r3, #0
 748 0038 3621     		movs	r1, #54
 749 003a FFF7FEFF 		bl	LCD_write_reg
 750 003e F860     		str	r0, [r7, #12]
 209:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&pObj->Ctx, OTM8009A_CMD_CASET, LcdRegData27, 4);
 751              		.loc 1 209 12
 752 0040 7B68     		ldr	r3, [r7, #4]
 753 0042 03F11000 		add	r0, r3, #16
 754 0046 0423     		movs	r3, #4
 755 0048 234A     		ldr	r2, .L40
 756 004a 2A21     		movs	r1, #42
 757 004c FFF7FEFF 		bl	LCD_write_reg
 758 0050 0246     		mov	r2, r0
 759              		.loc 1 209 9
 760 0052 FB68     		ldr	r3, [r7, #12]
 761 0054 1344     		add	r3, r3, r2
 762 0056 FB60     		str	r3, [r7, #12]
 210:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&pObj->Ctx, OTM8009A_CMD_PASET, LcdRegData28, 4);
 763              		.loc 1 210 12
 764 0058 7B68     		ldr	r3, [r7, #4]
 765 005a 03F11000 		add	r0, r3, #16
 766 005e 0423     		movs	r3, #4
 767 0060 1E4A     		ldr	r2, .L40+4
 768 0062 2B21     		movs	r1, #43
 769 0064 FFF7FEFF 		bl	LCD_write_reg
 770 0068 0246     		mov	r2, r0
 771              		.loc 1 210 9
 772 006a FB68     		ldr	r3, [r7, #12]
 773 006c 1344     		add	r3, r3, r2
 774 006e FB60     		str	r3, [r7, #12]
 211:./BSP/Components/Src/lcd.c ****     
 212:./BSP/Components/Src/lcd.c ****     LCDACtx.Orientation = OTM8009A_ORIENTATION_LANDSCAPE;
 775              		.loc 1 212 25
 776 0070 1B4B     		ldr	r3, .L40+8
 777 0072 0122     		movs	r2, #1
 778 0074 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc3dkcfp.s 			page 18


 779 0076 24E0     		b	.L36
 780              	.L37:
 213:./BSP/Components/Src/lcd.c ****   }
 214:./BSP/Components/Src/lcd.c ****   else
 215:./BSP/Components/Src/lcd.c ****   {
 216:./BSP/Components/Src/lcd.c ****     ret = LCD_write_reg(&pObj->Ctx, OTM8009A_CMD_MADCTR, &tmp1, 0);
 781              		.loc 1 216 11
 782 0078 7B68     		ldr	r3, [r7, #4]
 783 007a 03F11000 		add	r0, r3, #16
 784 007e 07F10A02 		add	r2, r7, #10
 785 0082 0023     		movs	r3, #0
 786 0084 3621     		movs	r1, #54
 787 0086 FFF7FEFF 		bl	LCD_write_reg
 788 008a F860     		str	r0, [r7, #12]
 217:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&pObj->Ctx, OTM8009A_CMD_CASET, LcdRegData27, 4);
 789              		.loc 1 217 12
 790 008c 7B68     		ldr	r3, [r7, #4]
 791 008e 03F11000 		add	r0, r3, #16
 792 0092 0423     		movs	r3, #4
 793 0094 104A     		ldr	r2, .L40
 794 0096 2A21     		movs	r1, #42
 795 0098 FFF7FEFF 		bl	LCD_write_reg
 796 009c 0246     		mov	r2, r0
 797              		.loc 1 217 9
 798 009e FB68     		ldr	r3, [r7, #12]
 799 00a0 1344     		add	r3, r3, r2
 800 00a2 FB60     		str	r3, [r7, #12]
 218:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&pObj->Ctx, OTM8009A_CMD_PASET, LcdRegData28, 4);
 801              		.loc 1 218 12
 802 00a4 7B68     		ldr	r3, [r7, #4]
 803 00a6 03F11000 		add	r0, r3, #16
 804 00aa 0423     		movs	r3, #4
 805 00ac 0B4A     		ldr	r2, .L40+4
 806 00ae 2B21     		movs	r1, #43
 807 00b0 FFF7FEFF 		bl	LCD_write_reg
 808 00b4 0246     		mov	r2, r0
 809              		.loc 1 218 9
 810 00b6 FB68     		ldr	r3, [r7, #12]
 811 00b8 1344     		add	r3, r3, r2
 812 00ba FB60     		str	r3, [r7, #12]
 219:./BSP/Components/Src/lcd.c ****     
 220:./BSP/Components/Src/lcd.c ****     LCDACtx.Orientation = OTM8009A_ORIENTATION_PORTRAIT;
 813              		.loc 1 220 25
 814 00bc 084B     		ldr	r3, .L40+8
 815 00be 0022     		movs	r2, #0
 816 00c0 1A60     		str	r2, [r3]
 817              	.L36:
 221:./BSP/Components/Src/lcd.c ****   }
 222:./BSP/Components/Src/lcd.c ****   
 223:./BSP/Components/Src/lcd.c ****   if(ret != OTM8009A_OK)
 818              		.loc 1 223 5
 819 00c2 FB68     		ldr	r3, [r7, #12]
 820 00c4 002B     		cmp	r3, #0
 821 00c6 02D0     		beq	.L38
 224:./BSP/Components/Src/lcd.c ****   {
 225:./BSP/Components/Src/lcd.c ****     ret = OTM8009A_ERROR;
 822              		.loc 1 225 9
ARM GAS  /tmp/cc3dkcfp.s 			page 19


 823 00c8 4FF0FF33 		mov	r3, #-1
 824 00cc FB60     		str	r3, [r7, #12]
 825              	.L38:
 226:./BSP/Components/Src/lcd.c ****   }
 227:./BSP/Components/Src/lcd.c ****   
 228:./BSP/Components/Src/lcd.c ****   return ret;
 826              		.loc 1 228 10
 827 00ce FB68     		ldr	r3, [r7, #12]
 229:./BSP/Components/Src/lcd.c **** }
 828              		.loc 1 229 1
 829 00d0 1846     		mov	r0, r3
 830 00d2 1037     		adds	r7, r7, #16
 831              	.LCFI54:
 832              		.cfi_def_cfa_offset 8
 833 00d4 BD46     		mov	sp, r7
 834              	.LCFI55:
 835              		.cfi_def_cfa_register 13
 836              		@ sp needed
 837 00d6 80BD     		pop	{r7, pc}
 838              	.L41:
 839              		.align	2
 840              	.L40:
 841 00d8 00000000 		.word	LcdRegData27
 842 00dc 00000000 		.word	LcdRegData28
 843 00e0 00000000 		.word	LCDACtx
 844              		.cfi_endproc
 845              	.LFE348:
 847              		.section	.text.LCD_GetOrientation,"ax",%progbits
 848              		.align	1
 849              		.global	LCD_GetOrientation
 850              		.syntax unified
 851              		.thumb
 852              		.thumb_func
 853              		.fpu fpv5-d16
 855              	LCD_GetOrientation:
 856              	.LFB349:
 230:./BSP/Components/Src/lcd.c **** 
 231:./BSP/Components/Src/lcd.c **** /**
 232:./BSP/Components/Src/lcd.c ****   * @brief  Set the display Orientation.
 233:./BSP/Components/Src/lcd.c ****   * @param  pObj Component object
 234:./BSP/Components/Src/lcd.c ****   * @param  Orientation   display Orientation to be returned
 235:./BSP/Components/Src/lcd.c ****   * @retval Component status
 236:./BSP/Components/Src/lcd.c ****   */
 237:./BSP/Components/Src/lcd.c **** int32_t LCD_GetOrientation(LCD_Object_t *pObj, uint32_t *Orientation)
 238:./BSP/Components/Src/lcd.c **** {
 857              		.loc 1 238 1
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 8
 860              		@ frame_needed = 1, uses_anonymous_args = 0
 861              		@ link register save eliminated.
 862 0000 80B4     		push	{r7}
 863              	.LCFI56:
 864              		.cfi_def_cfa_offset 4
 865              		.cfi_offset 7, -4
 866 0002 83B0     		sub	sp, sp, #12
 867              	.LCFI57:
 868              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc3dkcfp.s 			page 20


 869 0004 00AF     		add	r7, sp, #0
 870              	.LCFI58:
 871              		.cfi_def_cfa_register 7
 872 0006 7860     		str	r0, [r7, #4]
 873 0008 3960     		str	r1, [r7]
 239:./BSP/Components/Src/lcd.c ****   /* Prevent unused argument(s) compilation warning */  
 240:./BSP/Components/Src/lcd.c ****   (void)(pObj);
 241:./BSP/Components/Src/lcd.c ****   
 242:./BSP/Components/Src/lcd.c ****   *Orientation = LCDACtx.Orientation;
 874              		.loc 1 242 25
 875 000a 054B     		ldr	r3, .L44
 876 000c 1A68     		ldr	r2, [r3]
 877              		.loc 1 242 16
 878 000e 3B68     		ldr	r3, [r7]
 879 0010 1A60     		str	r2, [r3]
 243:./BSP/Components/Src/lcd.c ****   
 244:./BSP/Components/Src/lcd.c ****   return OTM8009A_OK;
 880              		.loc 1 244 10
 881 0012 0023     		movs	r3, #0
 245:./BSP/Components/Src/lcd.c **** }
 882              		.loc 1 245 1
 883 0014 1846     		mov	r0, r3
 884 0016 0C37     		adds	r7, r7, #12
 885              	.LCFI59:
 886              		.cfi_def_cfa_offset 4
 887 0018 BD46     		mov	sp, r7
 888              	.LCFI60:
 889              		.cfi_def_cfa_register 13
 890              		@ sp needed
 891 001a 5DF8047B 		ldr	r7, [sp], #4
 892              	.LCFI61:
 893              		.cfi_restore 7
 894              		.cfi_def_cfa_offset 0
 895 001e 7047     		bx	lr
 896              	.L45:
 897              		.align	2
 898              	.L44:
 899 0020 00000000 		.word	LCDACtx
 900              		.cfi_endproc
 901              	.LFE349:
 903              		.section	.text.LCD_GetXSize,"ax",%progbits
 904              		.align	1
 905              		.global	LCD_GetXSize
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 909              		.fpu fpv5-d16
 911              	LCD_GetXSize:
 912              	.LFB350:
 246:./BSP/Components/Src/lcd.c **** 
 247:./BSP/Components/Src/lcd.c **** /**
 248:./BSP/Components/Src/lcd.c ****   * @brief  Set the display Width.
 249:./BSP/Components/Src/lcd.c ****   * @param  pObj Component object
 250:./BSP/Components/Src/lcd.c ****   * @param  Xsize   display Width to be set
 251:./BSP/Components/Src/lcd.c ****   * @retval Component status
 252:./BSP/Components/Src/lcd.c ****   */
 253:./BSP/Components/Src/lcd.c **** int32_t LCD_GetXSize(LCD_Object_t *pObj, uint32_t *Xsize)
ARM GAS  /tmp/cc3dkcfp.s 			page 21


 254:./BSP/Components/Src/lcd.c **** {
 913              		.loc 1 254 1
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 8
 916              		@ frame_needed = 1, uses_anonymous_args = 0
 917              		@ link register save eliminated.
 918 0000 80B4     		push	{r7}
 919              	.LCFI62:
 920              		.cfi_def_cfa_offset 4
 921              		.cfi_offset 7, -4
 922 0002 83B0     		sub	sp, sp, #12
 923              	.LCFI63:
 924              		.cfi_def_cfa_offset 16
 925 0004 00AF     		add	r7, sp, #0
 926              	.LCFI64:
 927              		.cfi_def_cfa_register 7
 928 0006 7860     		str	r0, [r7, #4]
 929 0008 3960     		str	r1, [r7]
 255:./BSP/Components/Src/lcd.c ****   /* Prevent unused argument(s) compilation warning */  
 256:./BSP/Components/Src/lcd.c ****   (void)(pObj);
 257:./BSP/Components/Src/lcd.c ****   
 258:./BSP/Components/Src/lcd.c ****   switch(LCDACtx.Orientation)
 930              		.loc 1 258 17
 931 000a 0E4B     		ldr	r3, .L53
 932 000c 1B68     		ldr	r3, [r3]
 933              		.loc 1 258 3
 934 000e 002B     		cmp	r3, #0
 935 0010 02D0     		beq	.L47
 936 0012 012B     		cmp	r3, #1
 937 0014 05D0     		beq	.L48
 938 0016 09E0     		b	.L52
 939              	.L47:
 259:./BSP/Components/Src/lcd.c ****   {
 260:./BSP/Components/Src/lcd.c ****   case OTM8009A_ORIENTATION_PORTRAIT:
 261:./BSP/Components/Src/lcd.c ****     *Xsize = OTM8009A_480X800_WIDTH;
 940              		.loc 1 261 12
 941 0018 3B68     		ldr	r3, [r7]
 942 001a 4FF4F072 		mov	r2, #480
 943 001e 1A60     		str	r2, [r3]
 262:./BSP/Components/Src/lcd.c ****     break;
 944              		.loc 1 262 5
 945 0020 09E0     		b	.L50
 946              	.L48:
 263:./BSP/Components/Src/lcd.c ****   case OTM8009A_ORIENTATION_LANDSCAPE:
 264:./BSP/Components/Src/lcd.c ****     *Xsize = OTM8009A_800X480_WIDTH;
 947              		.loc 1 264 12
 948 0022 3B68     		ldr	r3, [r7]
 949 0024 4FF44872 		mov	r2, #800
 950 0028 1A60     		str	r2, [r3]
 265:./BSP/Components/Src/lcd.c ****     break;
 951              		.loc 1 265 5
 952 002a 04E0     		b	.L50
 953              	.L52:
 266:./BSP/Components/Src/lcd.c ****   default:
 267:./BSP/Components/Src/lcd.c ****     *Xsize = OTM8009A_800X480_WIDTH;
 954              		.loc 1 267 12
 955 002c 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/cc3dkcfp.s 			page 22


 956 002e 4FF44872 		mov	r2, #800
 957 0032 1A60     		str	r2, [r3]
 268:./BSP/Components/Src/lcd.c ****     break;
 958              		.loc 1 268 5
 959 0034 00BF     		nop
 960              	.L50:
 269:./BSP/Components/Src/lcd.c ****   }
 270:./BSP/Components/Src/lcd.c ****   
 271:./BSP/Components/Src/lcd.c ****   return OTM8009A_OK;
 961              		.loc 1 271 10
 962 0036 0023     		movs	r3, #0
 272:./BSP/Components/Src/lcd.c **** }
 963              		.loc 1 272 1
 964 0038 1846     		mov	r0, r3
 965 003a 0C37     		adds	r7, r7, #12
 966              	.LCFI65:
 967              		.cfi_def_cfa_offset 4
 968 003c BD46     		mov	sp, r7
 969              	.LCFI66:
 970              		.cfi_def_cfa_register 13
 971              		@ sp needed
 972 003e 5DF8047B 		ldr	r7, [sp], #4
 973              	.LCFI67:
 974              		.cfi_restore 7
 975              		.cfi_def_cfa_offset 0
 976 0042 7047     		bx	lr
 977              	.L54:
 978              		.align	2
 979              	.L53:
 980 0044 00000000 		.word	LCDACtx
 981              		.cfi_endproc
 982              	.LFE350:
 984              		.section	.text.LCD_GetYSize,"ax",%progbits
 985              		.align	1
 986              		.global	LCD_GetYSize
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 990              		.fpu fpv5-d16
 992              	LCD_GetYSize:
 993              	.LFB351:
 273:./BSP/Components/Src/lcd.c **** 
 274:./BSP/Components/Src/lcd.c **** /**
 275:./BSP/Components/Src/lcd.c ****   * @brief  Set the display Height.
 276:./BSP/Components/Src/lcd.c ****   * @param  pObj Component object
 277:./BSP/Components/Src/lcd.c ****   * @param  Ysize   display Height to be set
 278:./BSP/Components/Src/lcd.c ****   * @retval Component status
 279:./BSP/Components/Src/lcd.c ****   */
 280:./BSP/Components/Src/lcd.c **** int32_t LCD_GetYSize(LCD_Object_t *pObj, uint32_t *Ysize)
 281:./BSP/Components/Src/lcd.c **** {
 994              		.loc 1 281 1
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 8
 997              		@ frame_needed = 1, uses_anonymous_args = 0
 998              		@ link register save eliminated.
 999 0000 80B4     		push	{r7}
 1000              	.LCFI68:
ARM GAS  /tmp/cc3dkcfp.s 			page 23


 1001              		.cfi_def_cfa_offset 4
 1002              		.cfi_offset 7, -4
 1003 0002 83B0     		sub	sp, sp, #12
 1004              	.LCFI69:
 1005              		.cfi_def_cfa_offset 16
 1006 0004 00AF     		add	r7, sp, #0
 1007              	.LCFI70:
 1008              		.cfi_def_cfa_register 7
 1009 0006 7860     		str	r0, [r7, #4]
 1010 0008 3960     		str	r1, [r7]
 282:./BSP/Components/Src/lcd.c ****   /* Prevent unused argument(s) compilation warning */  
 283:./BSP/Components/Src/lcd.c ****   (void)(pObj);
 284:./BSP/Components/Src/lcd.c ****   
 285:./BSP/Components/Src/lcd.c ****   switch(LCDACtx.Orientation)
 1011              		.loc 1 285 17
 1012 000a 0E4B     		ldr	r3, .L62
 1013 000c 1B68     		ldr	r3, [r3]
 1014              		.loc 1 285 3
 1015 000e 002B     		cmp	r3, #0
 1016 0010 02D0     		beq	.L56
 1017 0012 012B     		cmp	r3, #1
 1018 0014 05D0     		beq	.L57
 1019 0016 09E0     		b	.L61
 1020              	.L56:
 286:./BSP/Components/Src/lcd.c ****   {
 287:./BSP/Components/Src/lcd.c ****   case OTM8009A_ORIENTATION_PORTRAIT:
 288:./BSP/Components/Src/lcd.c ****     *Ysize = OTM8009A_480X800_HEIGHT;
 1021              		.loc 1 288 12
 1022 0018 3B68     		ldr	r3, [r7]
 1023 001a 4FF44872 		mov	r2, #800
 1024 001e 1A60     		str	r2, [r3]
 289:./BSP/Components/Src/lcd.c ****     break;
 1025              		.loc 1 289 5
 1026 0020 09E0     		b	.L59
 1027              	.L57:
 290:./BSP/Components/Src/lcd.c ****   case OTM8009A_ORIENTATION_LANDSCAPE:
 291:./BSP/Components/Src/lcd.c ****     *Ysize = OTM8009A_800X480_HEIGHT;
 1028              		.loc 1 291 12
 1029 0022 3B68     		ldr	r3, [r7]
 1030 0024 4FF4F072 		mov	r2, #480
 1031 0028 1A60     		str	r2, [r3]
 292:./BSP/Components/Src/lcd.c ****     break;
 1032              		.loc 1 292 5
 1033 002a 04E0     		b	.L59
 1034              	.L61:
 293:./BSP/Components/Src/lcd.c ****   default:
 294:./BSP/Components/Src/lcd.c ****     *Ysize = OTM8009A_800X480_HEIGHT;
 1035              		.loc 1 294 12
 1036 002c 3B68     		ldr	r3, [r7]
 1037 002e 4FF4F072 		mov	r2, #480
 1038 0032 1A60     		str	r2, [r3]
 295:./BSP/Components/Src/lcd.c ****     break;
 1039              		.loc 1 295 5
 1040 0034 00BF     		nop
 1041              	.L59:
 296:./BSP/Components/Src/lcd.c ****   }
 297:./BSP/Components/Src/lcd.c ****   
ARM GAS  /tmp/cc3dkcfp.s 			page 24


 298:./BSP/Components/Src/lcd.c ****   return OTM8009A_OK;
 1042              		.loc 1 298 10
 1043 0036 0023     		movs	r3, #0
 299:./BSP/Components/Src/lcd.c **** }
 1044              		.loc 1 299 1
 1045 0038 1846     		mov	r0, r3
 1046 003a 0C37     		adds	r7, r7, #12
 1047              	.LCFI71:
 1048              		.cfi_def_cfa_offset 4
 1049 003c BD46     		mov	sp, r7
 1050              	.LCFI72:
 1051              		.cfi_def_cfa_register 13
 1052              		@ sp needed
 1053 003e 5DF8047B 		ldr	r7, [sp], #4
 1054              	.LCFI73:
 1055              		.cfi_restore 7
 1056              		.cfi_def_cfa_offset 0
 1057 0042 7047     		bx	lr
 1058              	.L63:
 1059              		.align	2
 1060              	.L62:
 1061 0044 00000000 		.word	LCDACtx
 1062              		.cfi_endproc
 1063              	.LFE351:
 1065              		.section	.text.LCD_Init,"ax",%progbits
 1066              		.align	1
 1067              		.global	LCD_Init
 1068              		.syntax unified
 1069              		.thumb
 1070              		.thumb_func
 1071              		.fpu fpv5-d16
 1073              	LCD_Init:
 1074              	.LFB352:
 300:./BSP/Components/Src/lcd.c **** 
 301:./BSP/Components/Src/lcd.c **** /*
 302:./BSP/Components/Src/lcd.c **** ******************************************************************
 303:./BSP/Components/Src/lcd.c **** *                       LCD初始化函式
 304:./BSP/Components/Src/lcd.c **** ******************************************************************
 305:./BSP/Components/Src/lcd.c **** */
 306:./BSP/Components/Src/lcd.c **** void LCD_Init(void)
 307:./BSP/Components/Src/lcd.c **** {
 1075              		.loc 1 307 1
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 8
 1078              		@ frame_needed = 1, uses_anonymous_args = 0
 1079 0000 80B5     		push	{r7, lr}
 1080              	.LCFI74:
 1081              		.cfi_def_cfa_offset 8
 1082              		.cfi_offset 7, -8
 1083              		.cfi_offset 14, -4
 1084 0002 82B0     		sub	sp, sp, #8
 1085              	.LCFI75:
 1086              		.cfi_def_cfa_offset 16
 1087 0004 00AF     		add	r7, sp, #0
 1088              	.LCFI76:
 1089              		.cfi_def_cfa_register 7
 308:./BSP/Components/Src/lcd.c ****     int32_t ret;
ARM GAS  /tmp/cc3dkcfp.s 			page 25


 309:./BSP/Components/Src/lcd.c ****     static DSI_LPCmdTypeDef LPCmd;
 310:./BSP/Components/Src/lcd.c **** 
 311:./BSP/Components/Src/lcd.c ****     LTDC_DSI_Init();
 1090              		.loc 1 311 5
 1091 0006 FFF7FEFF 		bl	LTDC_DSI_Init
 312:./BSP/Components/Src/lcd.c **** 
 313:./BSP/Components/Src/lcd.c ****     LCD_object.IO.WriteReg=DSI_IO_Write;
 1092              		.loc 1 313 27
 1093 000a B24B     		ldr	r3, .L65
 1094 000c B24A     		ldr	r2, .L65+4
 1095 000e 5A60     		str	r2, [r3, #4]
 314:./BSP/Components/Src/lcd.c ****     LCD_object.IO.ReadReg=DSI_IO_Read;
 1096              		.loc 1 314 26
 1097 0010 B04B     		ldr	r3, .L65
 1098 0012 B24A     		ldr	r2, .L65+8
 1099 0014 9A60     		str	r2, [r3, #8]
 315:./BSP/Components/Src/lcd.c ****     LCD_object.IO.Address=0;
 1100              		.loc 1 315 26
 1101 0016 AF4B     		ldr	r3, .L65
 1102 0018 0022     		movs	r2, #0
 1103 001a 1A80     		strh	r2, [r3]	@ movhi
 316:./BSP/Components/Src/lcd.c ****     LCD_object.IO.GetTick=HAL_GetTick;
 1104              		.loc 1 316 26
 1105 001c AD4B     		ldr	r3, .L65
 1106 001e B04A     		ldr	r2, .L65+12
 1107 0020 DA60     		str	r2, [r3, #12]
 317:./BSP/Components/Src/lcd.c **** 
 318:./BSP/Components/Src/lcd.c ****     LCD_object.Ctx.ReadReg=LCD_ReadRegWrap;
 1108              		.loc 1 318 27
 1109 0022 AC4B     		ldr	r3, .L65
 1110 0024 AF4A     		ldr	r2, .L65+16
 1111 0026 5A61     		str	r2, [r3, #20]
 319:./BSP/Components/Src/lcd.c ****     LCD_object.Ctx.WriteReg=LCD_WriteRegWrap;
 1112              		.loc 1 319 28
 1113 0028 AA4B     		ldr	r3, .L65
 1114 002a AF4A     		ldr	r2, .L65+20
 1115 002c 1A61     		str	r2, [r3, #16]
 320:./BSP/Components/Src/lcd.c ****     LCD_object.Ctx.handle=&LCD_object;
 1116              		.loc 1 320 26
 1117 002e A94B     		ldr	r3, .L65
 1118 0030 A84A     		ldr	r2, .L65
 1119 0032 9A61     		str	r2, [r3, #24]
 321:./BSP/Components/Src/lcd.c **** 
 322:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data1[]  = {0x80,0x09,0x01};
 323:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data2[]  = {0x80,0x09};
 324:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data3[]  = {0x00,0x09,0x0F,0x0E,0x07,0x10,0x0B,0x0A,0x04,0x07,0x0B
 325:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data4[]  = {0x00,0x09,0x0F,0x0E,0x07,0x10,0x0B,0x0A,0x04,0x07,0x0B
 326:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data5[]  = {0x79,0x79};
 327:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data6[]  = {0x00,0x01};
 328:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data7[]  = {0x85,0x01,0x00,0x84,0x01,0x00};
 329:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data8[]  = {0x18,0x04,0x03,0x39,0x00,0x00,0x00,0x18,0x03,0x03,0x3A
 330:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data9[]  = {0x18,0x02,0x03,0x3B,0x00,0x00,0x00,0x18,0x01,0x03,0x3C
 331:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data10[] = {0x01,0x01,0x20,0x20,0x00,0x00,0x01,0x02,0x00,0x00};
 332:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data11[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
 333:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data12[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 334:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data13[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 335:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data14[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
ARM GAS  /tmp/cc3dkcfp.s 			page 26


 336:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data15[] = {0x00,0x04,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00
 337:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data16[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x04,0x04,0x04
 338:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data17[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
 339:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data18[] = {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
 340:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data19[] = {0x00,0x26,0x09,0x0B,0x01,0x25,0x00,0x00,0x00,0x00};
 341:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data20[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 342:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data21[] = {0x25,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 343:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data22[] = {0x00,0x25,0x0C,0x0A,0x02,0x26,0x00,0x00,0x00,0x00};
 344:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data23[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 345:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data24[] = {0x26,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 346:./BSP/Components/Src/lcd.c ****     static const uint8_t lcd_reg_data25[] = {0xFF,0xFF,0xFF};
 347:./BSP/Components/Src/lcd.c **** 
 348:./BSP/Components/Src/lcd.c ****     static const uint8_t short_reg_data[] = {
 349:./BSP/Components/Src/lcd.c ****     0x00,0x00,0x80,0x30,0x8A,0x40,0xB1,0xA9,0x91,0x34,0xB4,0x50,0x4E,0x81,0x66,0xA1,0x08,
 350:./BSP/Components/Src/lcd.c ****     0x92,0x01,0x95,0x94,0x33,0xA3,0x1B,0x82,0x83,0x83,0x0E,0xA6,0xA0,0xB0,0xC0,0xD0,0x90,
 351:./BSP/Components/Src/lcd.c ****     0xE0,0xF0,0x00,OTM8009A_COLMOD_RGB565,OTM8009A_COLMOD_RGB888,0x7F,0x2C,0x02,0xFF,0x00,
 352:./BSP/Components/Src/lcd.c ****     0x00,0x00,0x66,0xB6,0x06,0xB1,0x06};
 353:./BSP/Components/Src/lcd.c **** 
 354:./BSP/Components/Src/lcd.c ****     /* Enable CMD2 to access vendor specific commands                               */
 355:./BSP/Components/Src/lcd.c ****     /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */ 
 356:./BSP/Components/Src/lcd.c ****     ret = LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 1120              		.loc 1 356 11
 1121 0034 0023     		movs	r3, #0
 1122 0036 AD4A     		ldr	r2, .L65+24
 1123 0038 0021     		movs	r1, #0
 1124 003a AD48     		ldr	r0, .L65+28
 1125 003c FFF7FEFF 		bl	LCD_write_reg
 1126 0040 7860     		str	r0, [r7, #4]
 357:./BSP/Components/Src/lcd.c **** 
 358:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xFF, lcd_reg_data1, 3);
 1127              		.loc 1 358 12
 1128 0042 0323     		movs	r3, #3
 1129 0044 AB4A     		ldr	r2, .L65+32
 1130 0046 FF21     		movs	r1, #255
 1131 0048 A948     		ldr	r0, .L65+28
 1132 004a FFF7FEFF 		bl	LCD_write_reg
 1133 004e 0246     		mov	r2, r0
 1134              		.loc 1 358 9
 1135 0050 7B68     		ldr	r3, [r7, #4]
 1136 0052 1344     		add	r3, r3, r2
 1137 0054 7B60     		str	r3, [r7, #4]
 359:./BSP/Components/Src/lcd.c ****     
 360:./BSP/Components/Src/lcd.c ****     /* Enter ORISE Command 2 */
 361:./BSP/Components/Src/lcd.c ****     /* Shift address to 0x80 */
 362:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 1138              		.loc 1 362 12
 1139 0056 0023     		movs	r3, #0
 1140 0058 A74A     		ldr	r2, .L65+36
 1141 005a 0021     		movs	r1, #0
 1142 005c A448     		ldr	r0, .L65+28
 1143 005e FFF7FEFF 		bl	LCD_write_reg
 1144 0062 0246     		mov	r2, r0
 1145              		.loc 1 362 9
 1146 0064 7B68     		ldr	r3, [r7, #4]
 1147 0066 1344     		add	r3, r3, r2
 1148 0068 7B60     		str	r3, [r7, #4]
 363:./BSP/Components/Src/lcd.c **** 
ARM GAS  /tmp/cc3dkcfp.s 			page 27


 364:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xFF, lcd_reg_data2, 2);
 1149              		.loc 1 364 12
 1150 006a 0223     		movs	r3, #2
 1151 006c A34A     		ldr	r2, .L65+40
 1152 006e FF21     		movs	r1, #255
 1153 0070 9F48     		ldr	r0, .L65+28
 1154 0072 FFF7FEFF 		bl	LCD_write_reg
 1155 0076 0246     		mov	r2, r0
 1156              		.loc 1 364 9
 1157 0078 7B68     		ldr	r3, [r7, #4]
 1158 007a 1344     		add	r3, r3, r2
 1159 007c 7B60     		str	r3, [r7, #4]
 365:./BSP/Components/Src/lcd.c **** 
 366:./BSP/Components/Src/lcd.c ****     /////////////////////////////////////////////////////////////////////
 367:./BSP/Components/Src/lcd.c ****     /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
 368:./BSP/Components/Src/lcd.c ****     /* Set SD_PT                                                       */
 369:./BSP/Components/Src/lcd.c ****     /* -> Source output level during porch and non-display area to GND */
 370:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 1160              		.loc 1 370 12
 1161 007e 0023     		movs	r3, #0
 1162 0080 9D4A     		ldr	r2, .L65+36
 1163 0082 0021     		movs	r1, #0
 1164 0084 9A48     		ldr	r0, .L65+28
 1165 0086 FFF7FEFF 		bl	LCD_write_reg
 1166 008a 0246     		mov	r2, r0
 1167              		.loc 1 370 9
 1168 008c 7B68     		ldr	r3, [r7, #4]
 1169 008e 1344     		add	r3, r3, r2
 1170 0090 7B60     		str	r3, [r7, #4]
 371:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xC4, &short_reg_data[3], 0);
 1171              		.loc 1 371 12
 1172 0092 0023     		movs	r3, #0
 1173 0094 9A4A     		ldr	r2, .L65+44
 1174 0096 C421     		movs	r1, #196
 1175 0098 9548     		ldr	r0, .L65+28
 1176 009a FFF7FEFF 		bl	LCD_write_reg
 1177 009e 0246     		mov	r2, r0
 1178              		.loc 1 371 9
 1179 00a0 7B68     		ldr	r3, [r7, #4]
 1180 00a2 1344     		add	r3, r3, r2
 1181 00a4 7B60     		str	r3, [r7, #4]
 372:./BSP/Components/Src/lcd.c **** 
 373:./BSP/Components/Src/lcd.c ****     (void)LCD_IO_Delay(&LCD_object, 10);
 1182              		.loc 1 373 11
 1183 00a6 0A21     		movs	r1, #10
 1184 00a8 8A48     		ldr	r0, .L65
 1185 00aa FFF7FEFF 		bl	LCD_IO_Delay
 374:./BSP/Components/Src/lcd.c ****     /* Not documented */
 375:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[4], 0);
 1186              		.loc 1 375 12
 1187 00ae 0023     		movs	r3, #0
 1188 00b0 944A     		ldr	r2, .L65+48
 1189 00b2 0021     		movs	r1, #0
 1190 00b4 8E48     		ldr	r0, .L65+28
 1191 00b6 FFF7FEFF 		bl	LCD_write_reg
 1192 00ba 0246     		mov	r2, r0
 1193              		.loc 1 375 9
ARM GAS  /tmp/cc3dkcfp.s 			page 28


 1194 00bc 7B68     		ldr	r3, [r7, #4]
 1195 00be 1344     		add	r3, r3, r2
 1196 00c0 7B60     		str	r3, [r7, #4]
 376:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xC4, &short_reg_data[5], 0);
 1197              		.loc 1 376 12
 1198 00c2 0023     		movs	r3, #0
 1199 00c4 904A     		ldr	r2, .L65+52
 1200 00c6 C421     		movs	r1, #196
 1201 00c8 8948     		ldr	r0, .L65+28
 1202 00ca FFF7FEFF 		bl	LCD_write_reg
 1203 00ce 0246     		mov	r2, r0
 1204              		.loc 1 376 9
 1205 00d0 7B68     		ldr	r3, [r7, #4]
 1206 00d2 1344     		add	r3, r3, r2
 1207 00d4 7B60     		str	r3, [r7, #4]
 377:./BSP/Components/Src/lcd.c ****     (void)LCD_IO_Delay(&LCD_object, 10);
 1208              		.loc 1 377 11
 1209 00d6 0A21     		movs	r1, #10
 1210 00d8 7E48     		ldr	r0, .L65
 1211 00da FFF7FEFF 		bl	LCD_IO_Delay
 378:./BSP/Components/Src/lcd.c ****     /////////////////////////////////////////////////////////////////////
 379:./BSP/Components/Src/lcd.c **** 
 380:./BSP/Components/Src/lcd.c ****     /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
 381:./BSP/Components/Src/lcd.c ****     /* Set gvdd_en_test                                     */
 382:./BSP/Components/Src/lcd.c ****     /* -> enable GVDD test mode !!!                         */
 383:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[6], 0);
 1212              		.loc 1 383 12
 1213 00de 0023     		movs	r3, #0
 1214 00e0 8A4A     		ldr	r2, .L65+56
 1215 00e2 0021     		movs	r1, #0
 1216 00e4 8248     		ldr	r0, .L65+28
 1217 00e6 FFF7FEFF 		bl	LCD_write_reg
 1218 00ea 0246     		mov	r2, r0
 1219              		.loc 1 383 9
 1220 00ec 7B68     		ldr	r3, [r7, #4]
 1221 00ee 1344     		add	r3, r3, r2
 1222 00f0 7B60     		str	r3, [r7, #4]
 384:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xC5, &short_reg_data[7], 0);
 1223              		.loc 1 384 12
 1224 00f2 0023     		movs	r3, #0
 1225 00f4 864A     		ldr	r2, .L65+60
 1226 00f6 C521     		movs	r1, #197
 1227 00f8 7D48     		ldr	r0, .L65+28
 1228 00fa FFF7FEFF 		bl	LCD_write_reg
 1229 00fe 0246     		mov	r2, r0
 1230              		.loc 1 384 9
 1231 0100 7B68     		ldr	r3, [r7, #4]
 1232 0102 1344     		add	r3, r3, r2
 1233 0104 7B60     		str	r3, [r7, #4]
 385:./BSP/Components/Src/lcd.c **** 
 386:./BSP/Components/Src/lcd.c ****     /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
 387:./BSP/Components/Src/lcd.c ****     /* Set pump 4 vgh voltage                                    */
 388:./BSP/Components/Src/lcd.c ****     /* -> from 15.0v down to 13.0v                               */
 389:./BSP/Components/Src/lcd.c ****     /* Set pump 5 vgh voltage                                    */
 390:./BSP/Components/Src/lcd.c ****     /* -> from -12.0v downto -9.0v                               */
 391:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[8], 0);
 1234              		.loc 1 391 12
ARM GAS  /tmp/cc3dkcfp.s 			page 29


 1235 0106 0023     		movs	r3, #0
 1236 0108 824A     		ldr	r2, .L65+64
 1237 010a 0021     		movs	r1, #0
 1238 010c 7848     		ldr	r0, .L65+28
 1239 010e FFF7FEFF 		bl	LCD_write_reg
 1240 0112 0246     		mov	r2, r0
 1241              		.loc 1 391 9
 1242 0114 7B68     		ldr	r3, [r7, #4]
 1243 0116 1344     		add	r3, r3, r2
 1244 0118 7B60     		str	r3, [r7, #4]
 392:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xC5, &short_reg_data[9], 0);
 1245              		.loc 1 392 12
 1246 011a 0023     		movs	r3, #0
 1247 011c 7E4A     		ldr	r2, .L65+68
 1248 011e C521     		movs	r1, #197
 1249 0120 7348     		ldr	r0, .L65+28
 1250 0122 FFF7FEFF 		bl	LCD_write_reg
 1251 0126 0246     		mov	r2, r0
 1252              		.loc 1 392 9
 1253 0128 7B68     		ldr	r3, [r7, #4]
 1254 012a 1344     		add	r3, r3, r2
 1255 012c 7B60     		str	r3, [r7, #4]
 393:./BSP/Components/Src/lcd.c **** 
 394:./BSP/Components/Src/lcd.c ****     /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
 395:./BSP/Components/Src/lcd.c ****     /* -> Column inversion                                */
 396:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[10], 0);
 1256              		.loc 1 396 12
 1257 012e 0023     		movs	r3, #0
 1258 0130 7A4A     		ldr	r2, .L65+72
 1259 0132 0021     		movs	r1, #0
 1260 0134 6E48     		ldr	r0, .L65+28
 1261 0136 FFF7FEFF 		bl	LCD_write_reg
 1262 013a 0246     		mov	r2, r0
 1263              		.loc 1 396 9
 1264 013c 7B68     		ldr	r3, [r7, #4]
 1265 013e 1344     		add	r3, r3, r2
 1266 0140 7B60     		str	r3, [r7, #4]
 397:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xC0, &short_reg_data[11], 0);
 1267              		.loc 1 397 12
 1268 0142 0023     		movs	r3, #0
 1269 0144 764A     		ldr	r2, .L65+76
 1270 0146 C021     		movs	r1, #192
 1271 0148 6948     		ldr	r0, .L65+28
 1272 014a FFF7FEFF 		bl	LCD_write_reg
 1273 014e 0246     		mov	r2, r0
 1274              		.loc 1 397 9
 1275 0150 7B68     		ldr	r3, [r7, #4]
 1276 0152 1344     		add	r3, r3, r2
 1277 0154 7B60     		str	r3, [r7, #4]
 398:./BSP/Components/Src/lcd.c **** 
 399:./BSP/Components/Src/lcd.c ****     /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
 400:./BSP/Components/Src/lcd.c ****     /* VCOM Voltage settings                            */
 401:./BSP/Components/Src/lcd.c ****     /* -> from -1.0000v downto -1.2625v                 */
 402:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 1278              		.loc 1 402 12
 1279 0156 0023     		movs	r3, #0
 1280 0158 644A     		ldr	r2, .L65+24
ARM GAS  /tmp/cc3dkcfp.s 			page 30


 1281 015a 0021     		movs	r1, #0
 1282 015c 6448     		ldr	r0, .L65+28
 1283 015e FFF7FEFF 		bl	LCD_write_reg
 1284 0162 0246     		mov	r2, r0
 1285              		.loc 1 402 9
 1286 0164 7B68     		ldr	r3, [r7, #4]
 1287 0166 1344     		add	r3, r3, r2
 1288 0168 7B60     		str	r3, [r7, #4]
 403:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xD9, &short_reg_data[12], 0);
 1289              		.loc 1 403 12
 1290 016a 0023     		movs	r3, #0
 1291 016c 6D4A     		ldr	r2, .L65+80
 1292 016e D921     		movs	r1, #217
 1293 0170 5F48     		ldr	r0, .L65+28
 1294 0172 FFF7FEFF 		bl	LCD_write_reg
 1295 0176 0246     		mov	r2, r0
 1296              		.loc 1 403 9
 1297 0178 7B68     		ldr	r3, [r7, #4]
 1298 017a 1344     		add	r3, r3, r2
 1299 017c 7B60     		str	r3, [r7, #4]
 404:./BSP/Components/Src/lcd.c **** 
 405:./BSP/Components/Src/lcd.c ****     /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
 406:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 1300              		.loc 1 406 12
 1301 017e 0023     		movs	r3, #0
 1302 0180 694A     		ldr	r2, .L65+84
 1303 0182 0021     		movs	r1, #0
 1304 0184 5A48     		ldr	r0, .L65+28
 1305 0186 FFF7FEFF 		bl	LCD_write_reg
 1306 018a 0246     		mov	r2, r0
 1307              		.loc 1 406 9
 1308 018c 7B68     		ldr	r3, [r7, #4]
 1309 018e 1344     		add	r3, r3, r2
 1310 0190 7B60     		str	r3, [r7, #4]
 407:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xC1, &short_reg_data[14], 0);
 1311              		.loc 1 407 12
 1312 0192 0023     		movs	r3, #0
 1313 0194 654A     		ldr	r2, .L65+88
 1314 0196 C121     		movs	r1, #193
 1315 0198 5548     		ldr	r0, .L65+28
 1316 019a FFF7FEFF 		bl	LCD_write_reg
 1317 019e 0246     		mov	r2, r0
 1318              		.loc 1 407 9
 1319 01a0 7B68     		ldr	r3, [r7, #4]
 1320 01a2 1344     		add	r3, r3, r2
 1321 01a4 7B60     		str	r3, [r7, #4]
 408:./BSP/Components/Src/lcd.c **** 
 409:./BSP/Components/Src/lcd.c ****     /* Video mode internal */
 410:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[15], 0);
 1322              		.loc 1 410 12
 1323 01a6 0023     		movs	r3, #0
 1324 01a8 614A     		ldr	r2, .L65+92
 1325 01aa 0021     		movs	r1, #0
 1326 01ac 5048     		ldr	r0, .L65+28
 1327 01ae FFF7FEFF 		bl	LCD_write_reg
 1328 01b2 0246     		mov	r2, r0
 1329              		.loc 1 410 9
ARM GAS  /tmp/cc3dkcfp.s 			page 31


 1330 01b4 7B68     		ldr	r3, [r7, #4]
 1331 01b6 1344     		add	r3, r3, r2
 1332 01b8 7B60     		str	r3, [r7, #4]
 411:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xC1, &short_reg_data[16], 0);
 1333              		.loc 1 411 12
 1334 01ba 0023     		movs	r3, #0
 1335 01bc 5D4A     		ldr	r2, .L65+96
 1336 01be C121     		movs	r1, #193
 1337 01c0 4B48     		ldr	r0, .L65+28
 1338 01c2 FFF7FEFF 		bl	LCD_write_reg
 1339 01c6 0246     		mov	r2, r0
 1340              		.loc 1 411 9
 1341 01c8 7B68     		ldr	r3, [r7, #4]
 1342 01ca 1344     		add	r3, r3, r2
 1343 01cc 7B60     		str	r3, [r7, #4]
 412:./BSP/Components/Src/lcd.c **** 
 413:./BSP/Components/Src/lcd.c ****     /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
 414:./BSP/Components/Src/lcd.c ****     /* Set pump 4&5 x6                                     */
 415:./BSP/Components/Src/lcd.c ****     /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
 416:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[17], 0);
 1344              		.loc 1 416 12
 1345 01ce 0023     		movs	r3, #0
 1346 01d0 594A     		ldr	r2, .L65+100
 1347 01d2 0021     		movs	r1, #0
 1348 01d4 4648     		ldr	r0, .L65+28
 1349 01d6 FFF7FEFF 		bl	LCD_write_reg
 1350 01da 0246     		mov	r2, r0
 1351              		.loc 1 416 9
 1352 01dc 7B68     		ldr	r3, [r7, #4]
 1353 01de 1344     		add	r3, r3, r2
 1354 01e0 7B60     		str	r3, [r7, #4]
 417:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xC5, &short_reg_data[18], 0);
 1355              		.loc 1 417 12
 1356 01e2 0023     		movs	r3, #0
 1357 01e4 554A     		ldr	r2, .L65+104
 1358 01e6 C521     		movs	r1, #197
 1359 01e8 4148     		ldr	r0, .L65+28
 1360 01ea FFF7FEFF 		bl	LCD_write_reg
 1361 01ee 0246     		mov	r2, r0
 1362              		.loc 1 417 9
 1363 01f0 7B68     		ldr	r3, [r7, #4]
 1364 01f2 1344     		add	r3, r3, r2
 1365 01f4 7B60     		str	r3, [r7, #4]
 418:./BSP/Components/Src/lcd.c **** 
 419:./BSP/Components/Src/lcd.c ****     /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
 420:./BSP/Components/Src/lcd.c ****     /* Change pump4 clock ratio                              */
 421:./BSP/Components/Src/lcd.c ****     /* -> from 1 line to 1/2 line                            */
 422:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[19], 0);
 1366              		.loc 1 422 12
 1367 01f6 0023     		movs	r3, #0
 1368 01f8 514A     		ldr	r2, .L65+108
 1369 01fa 0021     		movs	r1, #0
 1370 01fc 3C48     		ldr	r0, .L65+28
 1371 01fe FFF7FEFF 		bl	LCD_write_reg
 1372 0202 0246     		mov	r2, r0
 1373              		.loc 1 422 9
 1374 0204 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc3dkcfp.s 			page 32


 1375 0206 1344     		add	r3, r3, r2
 1376 0208 7B60     		str	r3, [r7, #4]
 423:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xC5, &short_reg_data[9], 0);
 1377              		.loc 1 423 12
 1378 020a 0023     		movs	r3, #0
 1379 020c 424A     		ldr	r2, .L65+68
 1380 020e C521     		movs	r1, #197
 1381 0210 3748     		ldr	r0, .L65+28
 1382 0212 FFF7FEFF 		bl	LCD_write_reg
 1383 0216 0246     		mov	r2, r0
 1384              		.loc 1 423 9
 1385 0218 7B68     		ldr	r3, [r7, #4]
 1386 021a 1344     		add	r3, r3, r2
 1387 021c 7B60     		str	r3, [r7, #4]
 424:./BSP/Components/Src/lcd.c **** 
 425:./BSP/Components/Src/lcd.c ****     /* GVDD/NGVDD settings */
 426:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 1388              		.loc 1 426 12
 1389 021e 0023     		movs	r3, #0
 1390 0220 324A     		ldr	r2, .L65+24
 1391 0222 0021     		movs	r1, #0
 1392 0224 3248     		ldr	r0, .L65+28
 1393 0226 FFF7FEFF 		bl	LCD_write_reg
 1394 022a 0246     		mov	r2, r0
 1395              		.loc 1 426 9
 1396 022c 7B68     		ldr	r3, [r7, #4]
 1397 022e 1344     		add	r3, r3, r2
 1398 0230 7B60     		str	r3, [r7, #4]
 427:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xD8, lcd_reg_data5, 2);
 1399              		.loc 1 427 12
 1400 0232 0223     		movs	r3, #2
 1401 0234 434A     		ldr	r2, .L65+112
 1402 0236 D821     		movs	r1, #216
 1403 0238 2D48     		ldr	r0, .L65+28
 1404 023a FFF7FEFF 		bl	LCD_write_reg
 1405 023e 0246     		mov	r2, r0
 1406              		.loc 1 427 9
 1407 0240 7B68     		ldr	r3, [r7, #4]
 1408 0242 1344     		add	r3, r3, r2
 1409 0244 7B60     		str	r3, [r7, #4]
 428:./BSP/Components/Src/lcd.c **** 
 429:./BSP/Components/Src/lcd.c ****     /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
 430:./BSP/Components/Src/lcd.c ****     /* Rewrite the default value !                           */
 431:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[20], 0);
 1410              		.loc 1 431 12
 1411 0246 0023     		movs	r3, #0
 1412 0248 3F4A     		ldr	r2, .L65+116
 1413 024a 0021     		movs	r1, #0
 1414 024c 2848     		ldr	r0, .L65+28
 1415 024e FFF7FEFF 		bl	LCD_write_reg
 1416 0252 0246     		mov	r2, r0
 1417              		.loc 1 431 9
 1418 0254 7B68     		ldr	r3, [r7, #4]
 1419 0256 1344     		add	r3, r3, r2
 1420 0258 7B60     		str	r3, [r7, #4]
 432:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xC5, &short_reg_data[21], 0);
 1421              		.loc 1 432 12
ARM GAS  /tmp/cc3dkcfp.s 			page 33


 1422 025a 0023     		movs	r3, #0
 1423 025c 3B4A     		ldr	r2, .L65+120
 1424 025e C521     		movs	r1, #197
 1425 0260 2348     		ldr	r0, .L65+28
 1426 0262 FFF7FEFF 		bl	LCD_write_reg
 1427 0266 0246     		mov	r2, r0
 1428              		.loc 1 432 9
 1429 0268 7B68     		ldr	r3, [r7, #4]
 1430 026a 1344     		add	r3, r3, r2
 1431 026c 7B60     		str	r3, [r7, #4]
 433:./BSP/Components/Src/lcd.c **** 
 434:./BSP/Components/Src/lcd.c ****     /* Panel display timing Setting 3 */
 435:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[22], 0);
 1432              		.loc 1 435 12
 1433 026e 0023     		movs	r3, #0
 1434 0270 374A     		ldr	r2, .L65+124
 1435 0272 0021     		movs	r1, #0
 1436 0274 1E48     		ldr	r0, .L65+28
 1437 0276 FFF7FEFF 		bl	LCD_write_reg
 1438 027a 0246     		mov	r2, r0
 1439              		.loc 1 435 9
 1440 027c 7B68     		ldr	r3, [r7, #4]
 1441 027e 1344     		add	r3, r3, r2
 1442 0280 7B60     		str	r3, [r7, #4]
 436:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xC0, &short_reg_data[23], 0);
 1443              		.loc 1 436 12
 1444 0282 0023     		movs	r3, #0
 1445 0284 334A     		ldr	r2, .L65+128
 1446 0286 C021     		movs	r1, #192
 1447 0288 1948     		ldr	r0, .L65+28
 1448 028a FFF7FEFF 		bl	LCD_write_reg
 1449 028e 0246     		mov	r2, r0
 1450              		.loc 1 436 9
 1451 0290 7B68     		ldr	r3, [r7, #4]
 1452 0292 1344     		add	r3, r3, r2
 1453 0294 7B60     		str	r3, [r7, #4]
 437:./BSP/Components/Src/lcd.c **** 
 438:./BSP/Components/Src/lcd.c ****     /* Power control 1 */
 439:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[24], 0);
 1454              		.loc 1 439 12
 1455 0296 0023     		movs	r3, #0
 1456 0298 2F4A     		ldr	r2, .L65+132
 1457 029a 0021     		movs	r1, #0
 1458 029c 1448     		ldr	r0, .L65+28
 1459 029e FFF7FEFF 		bl	LCD_write_reg
 1460 02a2 0246     		mov	r2, r0
 1461              		.loc 1 439 9
 1462 02a4 7B68     		ldr	r3, [r7, #4]
 1463 02a6 1344     		add	r3, r3, r2
 1464 02a8 7B60     		str	r3, [r7, #4]
 440:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xC5, &short_reg_data[25], 0);
 1465              		.loc 1 440 12
 1466 02aa 0023     		movs	r3, #0
 1467 02ac 2B4A     		ldr	r2, .L65+136
 1468 02ae C521     		movs	r1, #197
 1469 02b0 0F48     		ldr	r0, .L65+28
 1470 02b2 FFF7FEFF 		bl	LCD_write_reg
ARM GAS  /tmp/cc3dkcfp.s 			page 34


 1471 02b6 0246     		mov	r2, r0
 1472              		.loc 1 440 9
 1473 02b8 7B68     		ldr	r3, [r7, #4]
 1474 02ba 1344     		add	r3, r3, r2
 1475 02bc 7B60     		str	r3, [r7, #4]
 441:./BSP/Components/Src/lcd.c **** 
 442:./BSP/Components/Src/lcd.c ****     /* Source driver precharge */
 443:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 1476              		.loc 1 443 12
 1477 02be 0023     		movs	r3, #0
 1478 02c0 194A     		ldr	r2, .L65+84
 1479 02c2 0021     		movs	r1, #0
 1480 02c4 0A48     		ldr	r0, .L65+28
 1481 02c6 FFF7FEFF 		bl	LCD_write_reg
 1482 02ca 0246     		mov	r2, r0
 1483              		.loc 1 443 9
 1484 02cc 7B68     		ldr	r3, [r7, #4]
 1485 02ce 1344     		add	r3, r3, r2
 1486 02d0 46E0     		b	.L66
 1487              	.L67:
 1488 02d2 00BF     		.align	2
 1489              	.L65:
 1490 02d4 00000000 		.word	LCD_object
 1491 02d8 00000000 		.word	DSI_IO_Write
 1492 02dc 00000000 		.word	DSI_IO_Read
 1493 02e0 00000000 		.word	HAL_GetTick
 1494 02e4 00000000 		.word	LCD_ReadRegWrap
 1495 02e8 00000000 		.word	LCD_WriteRegWrap
 1496 02ec 01000000 		.word	short_reg_data.16830+1
 1497 02f0 10000000 		.word	LCD_object+16
 1498 02f4 00000000 		.word	lcd_reg_data1.16805
 1499 02f8 02000000 		.word	short_reg_data.16830+2
 1500 02fc 00000000 		.word	lcd_reg_data2.16806
 1501 0300 03000000 		.word	short_reg_data.16830+3
 1502 0304 04000000 		.word	short_reg_data.16830+4
 1503 0308 05000000 		.word	short_reg_data.16830+5
 1504 030c 06000000 		.word	short_reg_data.16830+6
 1505 0310 07000000 		.word	short_reg_data.16830+7
 1506 0314 08000000 		.word	short_reg_data.16830+8
 1507 0318 09000000 		.word	short_reg_data.16830+9
 1508 031c 0A000000 		.word	short_reg_data.16830+10
 1509 0320 0B000000 		.word	short_reg_data.16830+11
 1510 0324 0C000000 		.word	short_reg_data.16830+12
 1511 0328 0D000000 		.word	short_reg_data.16830+13
 1512 032c 0E000000 		.word	short_reg_data.16830+14
 1513 0330 0F000000 		.word	short_reg_data.16830+15
 1514 0334 10000000 		.word	short_reg_data.16830+16
 1515 0338 11000000 		.word	short_reg_data.16830+17
 1516 033c 12000000 		.word	short_reg_data.16830+18
 1517 0340 13000000 		.word	short_reg_data.16830+19
 1518 0344 00000000 		.word	lcd_reg_data5.16809
 1519 0348 14000000 		.word	short_reg_data.16830+20
 1520 034c 15000000 		.word	short_reg_data.16830+21
 1521 0350 16000000 		.word	short_reg_data.16830+22
 1522 0354 17000000 		.word	short_reg_data.16830+23
 1523 0358 18000000 		.word	short_reg_data.16830+24
 1524 035c 19000000 		.word	short_reg_data.16830+25
ARM GAS  /tmp/cc3dkcfp.s 			page 35


 1525              	.L66:
 1526 0360 7B60     		str	r3, [r7, #4]
 444:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xC4, &short_reg_data[26], 0);
 1527              		.loc 1 444 12
 1528 0362 0023     		movs	r3, #0
 1529 0364 B54A     		ldr	r2, .L68
 1530 0366 C421     		movs	r1, #196
 1531 0368 B548     		ldr	r0, .L68+4
 1532 036a FFF7FEFF 		bl	LCD_write_reg
 1533 036e 0246     		mov	r2, r0
 1534              		.loc 1 444 9
 1535 0370 7B68     		ldr	r3, [r7, #4]
 1536 0372 1344     		add	r3, r3, r2
 1537 0374 7B60     		str	r3, [r7, #4]
 445:./BSP/Components/Src/lcd.c **** 
 446:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[15], 0);
 1538              		.loc 1 446 12
 1539 0376 0023     		movs	r3, #0
 1540 0378 B24A     		ldr	r2, .L68+8
 1541 037a 0021     		movs	r1, #0
 1542 037c B048     		ldr	r0, .L68+4
 1543 037e FFF7FEFF 		bl	LCD_write_reg
 1544 0382 0246     		mov	r2, r0
 1545              		.loc 1 446 9
 1546 0384 7B68     		ldr	r3, [r7, #4]
 1547 0386 1344     		add	r3, r3, r2
 1548 0388 7B60     		str	r3, [r7, #4]
 447:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xC1, &short_reg_data[27], 0);
 1549              		.loc 1 447 12
 1550 038a 0023     		movs	r3, #0
 1551 038c AE4A     		ldr	r2, .L68+12
 1552 038e C121     		movs	r1, #193
 1553 0390 AB48     		ldr	r0, .L68+4
 1554 0392 FFF7FEFF 		bl	LCD_write_reg
 1555 0396 0246     		mov	r2, r0
 1556              		.loc 1 447 9
 1557 0398 7B68     		ldr	r3, [r7, #4]
 1558 039a 1344     		add	r3, r3, r2
 1559 039c 7B60     		str	r3, [r7, #4]
 448:./BSP/Components/Src/lcd.c **** 
 449:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[28], 0);
 1560              		.loc 1 449 12
 1561 039e 0023     		movs	r3, #0
 1562 03a0 AA4A     		ldr	r2, .L68+16
 1563 03a2 0021     		movs	r1, #0
 1564 03a4 A648     		ldr	r0, .L68+4
 1565 03a6 FFF7FEFF 		bl	LCD_write_reg
 1566 03aa 0246     		mov	r2, r0
 1567              		.loc 1 449 9
 1568 03ac 7B68     		ldr	r3, [r7, #4]
 1569 03ae 1344     		add	r3, r3, r2
 1570 03b0 7B60     		str	r3, [r7, #4]
 450:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xB3, lcd_reg_data6, 2);
 1571              		.loc 1 450 12
 1572 03b2 0223     		movs	r3, #2
 1573 03b4 A64A     		ldr	r2, .L68+20
 1574 03b6 B321     		movs	r1, #179
ARM GAS  /tmp/cc3dkcfp.s 			page 36


 1575 03b8 A148     		ldr	r0, .L68+4
 1576 03ba FFF7FEFF 		bl	LCD_write_reg
 1577 03be 0246     		mov	r2, r0
 1578              		.loc 1 450 9
 1579 03c0 7B68     		ldr	r3, [r7, #4]
 1580 03c2 1344     		add	r3, r3, r2
 1581 03c4 7B60     		str	r3, [r7, #4]
 451:./BSP/Components/Src/lcd.c **** 
 452:./BSP/Components/Src/lcd.c ****     /* GOAVST */
 453:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 1582              		.loc 1 453 12
 1583 03c6 0023     		movs	r3, #0
 1584 03c8 A24A     		ldr	r2, .L68+24
 1585 03ca 0021     		movs	r1, #0
 1586 03cc 9C48     		ldr	r0, .L68+4
 1587 03ce FFF7FEFF 		bl	LCD_write_reg
 1588 03d2 0246     		mov	r2, r0
 1589              		.loc 1 453 9
 1590 03d4 7B68     		ldr	r3, [r7, #4]
 1591 03d6 1344     		add	r3, r3, r2
 1592 03d8 7B60     		str	r3, [r7, #4]
 454:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCE, lcd_reg_data7, 6);
 1593              		.loc 1 454 12
 1594 03da 0623     		movs	r3, #6
 1595 03dc 9E4A     		ldr	r2, .L68+28
 1596 03de CE21     		movs	r1, #206
 1597 03e0 9748     		ldr	r0, .L68+4
 1598 03e2 FFF7FEFF 		bl	LCD_write_reg
 1599 03e6 0246     		mov	r2, r0
 1600              		.loc 1 454 9
 1601 03e8 7B68     		ldr	r3, [r7, #4]
 1602 03ea 1344     		add	r3, r3, r2
 1603 03ec 7B60     		str	r3, [r7, #4]
 455:./BSP/Components/Src/lcd.c **** 
 456:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 1604              		.loc 1 456 12
 1605 03ee 0023     		movs	r3, #0
 1606 03f0 9A4A     		ldr	r2, .L68+32
 1607 03f2 0021     		movs	r1, #0
 1608 03f4 9248     		ldr	r0, .L68+4
 1609 03f6 FFF7FEFF 		bl	LCD_write_reg
 1610 03fa 0246     		mov	r2, r0
 1611              		.loc 1 456 9
 1612 03fc 7B68     		ldr	r3, [r7, #4]
 1613 03fe 1344     		add	r3, r3, r2
 1614 0400 7B60     		str	r3, [r7, #4]
 457:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCE, lcd_reg_data8, 14);
 1615              		.loc 1 457 12
 1616 0402 0E23     		movs	r3, #14
 1617 0404 964A     		ldr	r2, .L68+36
 1618 0406 CE21     		movs	r1, #206
 1619 0408 8D48     		ldr	r0, .L68+4
 1620 040a FFF7FEFF 		bl	LCD_write_reg
 1621 040e 0246     		mov	r2, r0
 1622              		.loc 1 457 9
 1623 0410 7B68     		ldr	r3, [r7, #4]
 1624 0412 1344     		add	r3, r3, r2
ARM GAS  /tmp/cc3dkcfp.s 			page 37


 1625 0414 7B60     		str	r3, [r7, #4]
 458:./BSP/Components/Src/lcd.c **** 
 459:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 1626              		.loc 1 459 12
 1627 0416 0023     		movs	r3, #0
 1628 0418 924A     		ldr	r2, .L68+40
 1629 041a 0021     		movs	r1, #0
 1630 041c 8848     		ldr	r0, .L68+4
 1631 041e FFF7FEFF 		bl	LCD_write_reg
 1632 0422 0246     		mov	r2, r0
 1633              		.loc 1 459 9
 1634 0424 7B68     		ldr	r3, [r7, #4]
 1635 0426 1344     		add	r3, r3, r2
 1636 0428 7B60     		str	r3, [r7, #4]
 460:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCE, lcd_reg_data9, 14);
 1637              		.loc 1 460 12
 1638 042a 0E23     		movs	r3, #14
 1639 042c 8E4A     		ldr	r2, .L68+44
 1640 042e CE21     		movs	r1, #206
 1641 0430 8348     		ldr	r0, .L68+4
 1642 0432 FFF7FEFF 		bl	LCD_write_reg
 1643 0436 0246     		mov	r2, r0
 1644              		.loc 1 460 9
 1645 0438 7B68     		ldr	r3, [r7, #4]
 1646 043a 1344     		add	r3, r3, r2
 1647 043c 7B60     		str	r3, [r7, #4]
 461:./BSP/Components/Src/lcd.c **** 
 462:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 1648              		.loc 1 462 12
 1649 043e 0023     		movs	r3, #0
 1650 0440 8A4A     		ldr	r2, .L68+48
 1651 0442 0021     		movs	r1, #0
 1652 0444 7E48     		ldr	r0, .L68+4
 1653 0446 FFF7FEFF 		bl	LCD_write_reg
 1654 044a 0246     		mov	r2, r0
 1655              		.loc 1 462 9
 1656 044c 7B68     		ldr	r3, [r7, #4]
 1657 044e 1344     		add	r3, r3, r2
 1658 0450 7B60     		str	r3, [r7, #4]
 463:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCF, lcd_reg_data10, 10);
 1659              		.loc 1 463 12
 1660 0452 0A23     		movs	r3, #10
 1661 0454 864A     		ldr	r2, .L68+52
 1662 0456 CF21     		movs	r1, #207
 1663 0458 7948     		ldr	r0, .L68+4
 1664 045a FFF7FEFF 		bl	LCD_write_reg
 1665 045e 0246     		mov	r2, r0
 1666              		.loc 1 463 9
 1667 0460 7B68     		ldr	r3, [r7, #4]
 1668 0462 1344     		add	r3, r3, r2
 1669 0464 7B60     		str	r3, [r7, #4]
 464:./BSP/Components/Src/lcd.c **** 
 465:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 1670              		.loc 1 465 12
 1671 0466 0023     		movs	r3, #0
 1672 0468 824A     		ldr	r2, .L68+56
 1673 046a 0021     		movs	r1, #0
ARM GAS  /tmp/cc3dkcfp.s 			page 38


 1674 046c 7448     		ldr	r0, .L68+4
 1675 046e FFF7FEFF 		bl	LCD_write_reg
 1676 0472 0246     		mov	r2, r0
 1677              		.loc 1 465 9
 1678 0474 7B68     		ldr	r3, [r7, #4]
 1679 0476 1344     		add	r3, r3, r2
 1680 0478 7B60     		str	r3, [r7, #4]
 466:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCF, &short_reg_data[45], 0);
 1681              		.loc 1 466 12
 1682 047a 0023     		movs	r3, #0
 1683 047c 7E4A     		ldr	r2, .L68+60
 1684 047e CF21     		movs	r1, #207
 1685 0480 6F48     		ldr	r0, .L68+4
 1686 0482 FFF7FEFF 		bl	LCD_write_reg
 1687 0486 0246     		mov	r2, r0
 1688              		.loc 1 466 9
 1689 0488 7B68     		ldr	r3, [r7, #4]
 1690 048a 1344     		add	r3, r3, r2
 1691 048c 7B60     		str	r3, [r7, #4]
 467:./BSP/Components/Src/lcd.c **** 
 468:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 1692              		.loc 1 468 12
 1693 048e 0023     		movs	r3, #0
 1694 0490 704A     		ldr	r2, .L68+24
 1695 0492 0021     		movs	r1, #0
 1696 0494 6A48     		ldr	r0, .L68+4
 1697 0496 FFF7FEFF 		bl	LCD_write_reg
 1698 049a 0246     		mov	r2, r0
 1699              		.loc 1 468 9
 1700 049c 7B68     		ldr	r3, [r7, #4]
 1701 049e 1344     		add	r3, r3, r2
 1702 04a0 7B60     		str	r3, [r7, #4]
 469:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCB, lcd_reg_data11, 10);
 1703              		.loc 1 469 12
 1704 04a2 0A23     		movs	r3, #10
 1705 04a4 754A     		ldr	r2, .L68+64
 1706 04a6 CB21     		movs	r1, #203
 1707 04a8 6548     		ldr	r0, .L68+4
 1708 04aa FFF7FEFF 		bl	LCD_write_reg
 1709 04ae 0246     		mov	r2, r0
 1710              		.loc 1 469 9
 1711 04b0 7B68     		ldr	r3, [r7, #4]
 1712 04b2 1344     		add	r3, r3, r2
 1713 04b4 7B60     		str	r3, [r7, #4]
 470:./BSP/Components/Src/lcd.c **** 
 471:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[33], 0);
 1714              		.loc 1 471 12
 1715 04b6 0023     		movs	r3, #0
 1716 04b8 714A     		ldr	r2, .L68+68
 1717 04ba 0021     		movs	r1, #0
 1718 04bc 6048     		ldr	r0, .L68+4
 1719 04be FFF7FEFF 		bl	LCD_write_reg
 1720 04c2 0246     		mov	r2, r0
 1721              		.loc 1 471 9
 1722 04c4 7B68     		ldr	r3, [r7, #4]
 1723 04c6 1344     		add	r3, r3, r2
 1724 04c8 7B60     		str	r3, [r7, #4]
ARM GAS  /tmp/cc3dkcfp.s 			page 39


 472:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCB, lcd_reg_data12, 15);
 1725              		.loc 1 472 12
 1726 04ca 0F23     		movs	r3, #15
 1727 04cc 6D4A     		ldr	r2, .L68+72
 1728 04ce CB21     		movs	r1, #203
 1729 04d0 5B48     		ldr	r0, .L68+4
 1730 04d2 FFF7FEFF 		bl	LCD_write_reg
 1731 04d6 0246     		mov	r2, r0
 1732              		.loc 1 472 9
 1733 04d8 7B68     		ldr	r3, [r7, #4]
 1734 04da 1344     		add	r3, r3, r2
 1735 04dc 7B60     		str	r3, [r7, #4]
 473:./BSP/Components/Src/lcd.c **** 
 474:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 1736              		.loc 1 474 12
 1737 04de 0023     		movs	r3, #0
 1738 04e0 5E4A     		ldr	r2, .L68+32
 1739 04e2 0021     		movs	r1, #0
 1740 04e4 5648     		ldr	r0, .L68+4
 1741 04e6 FFF7FEFF 		bl	LCD_write_reg
 1742 04ea 0246     		mov	r2, r0
 1743              		.loc 1 474 9
 1744 04ec 7B68     		ldr	r3, [r7, #4]
 1745 04ee 1344     		add	r3, r3, r2
 1746 04f0 7B60     		str	r3, [r7, #4]
 475:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCB, lcd_reg_data13, 15);
 1747              		.loc 1 475 12
 1748 04f2 0F23     		movs	r3, #15
 1749 04f4 644A     		ldr	r2, .L68+76
 1750 04f6 CB21     		movs	r1, #203
 1751 04f8 5148     		ldr	r0, .L68+4
 1752 04fa FFF7FEFF 		bl	LCD_write_reg
 1753 04fe 0246     		mov	r2, r0
 1754              		.loc 1 475 9
 1755 0500 7B68     		ldr	r3, [r7, #4]
 1756 0502 1344     		add	r3, r3, r2
 1757 0504 7B60     		str	r3, [r7, #4]
 476:./BSP/Components/Src/lcd.c **** 
 477:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 1758              		.loc 1 477 12
 1759 0506 0023     		movs	r3, #0
 1760 0508 564A     		ldr	r2, .L68+40
 1761 050a 0021     		movs	r1, #0
 1762 050c 4C48     		ldr	r0, .L68+4
 1763 050e FFF7FEFF 		bl	LCD_write_reg
 1764 0512 0246     		mov	r2, r0
 1765              		.loc 1 477 9
 1766 0514 7B68     		ldr	r3, [r7, #4]
 1767 0516 1344     		add	r3, r3, r2
 1768 0518 7B60     		str	r3, [r7, #4]
 478:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCB, lcd_reg_data14, 10);
 1769              		.loc 1 478 12
 1770 051a 0A23     		movs	r3, #10
 1771 051c 5B4A     		ldr	r2, .L68+80
 1772 051e CB21     		movs	r1, #203
 1773 0520 4748     		ldr	r0, .L68+4
 1774 0522 FFF7FEFF 		bl	LCD_write_reg
ARM GAS  /tmp/cc3dkcfp.s 			page 40


 1775 0526 0246     		mov	r2, r0
 1776              		.loc 1 478 9
 1777 0528 7B68     		ldr	r3, [r7, #4]
 1778 052a 1344     		add	r3, r3, r2
 1779 052c 7B60     		str	r3, [r7, #4]
 479:./BSP/Components/Src/lcd.c **** 
 480:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 1780              		.loc 1 480 12
 1781 052e 0023     		movs	r3, #0
 1782 0530 4E4A     		ldr	r2, .L68+48
 1783 0532 0021     		movs	r1, #0
 1784 0534 4248     		ldr	r0, .L68+4
 1785 0536 FFF7FEFF 		bl	LCD_write_reg
 1786 053a 0246     		mov	r2, r0
 1787              		.loc 1 480 9
 1788 053c 7B68     		ldr	r3, [r7, #4]
 1789 053e 1344     		add	r3, r3, r2
 1790 0540 7B60     		str	r3, [r7, #4]
 481:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCB, lcd_reg_data15, 15);
 1791              		.loc 1 481 12
 1792 0542 0F23     		movs	r3, #15
 1793 0544 524A     		ldr	r2, .L68+84
 1794 0546 CB21     		movs	r1, #203
 1795 0548 3D48     		ldr	r0, .L68+4
 1796 054a FFF7FEFF 		bl	LCD_write_reg
 1797 054e 0246     		mov	r2, r0
 1798              		.loc 1 481 9
 1799 0550 7B68     		ldr	r3, [r7, #4]
 1800 0552 1344     		add	r3, r3, r2
 1801 0554 7B60     		str	r3, [r7, #4]
 482:./BSP/Components/Src/lcd.c **** 
 483:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 1802              		.loc 1 483 12
 1803 0556 0023     		movs	r3, #0
 1804 0558 464A     		ldr	r2, .L68+56
 1805 055a 0021     		movs	r1, #0
 1806 055c 3848     		ldr	r0, .L68+4
 1807 055e FFF7FEFF 		bl	LCD_write_reg
 1808 0562 0246     		mov	r2, r0
 1809              		.loc 1 483 9
 1810 0564 7B68     		ldr	r3, [r7, #4]
 1811 0566 1344     		add	r3, r3, r2
 1812 0568 7B60     		str	r3, [r7, #4]
 484:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCB, lcd_reg_data16, 15);
 1813              		.loc 1 484 12
 1814 056a 0F23     		movs	r3, #15
 1815 056c 494A     		ldr	r2, .L68+88
 1816 056e CB21     		movs	r1, #203
 1817 0570 3348     		ldr	r0, .L68+4
 1818 0572 FFF7FEFF 		bl	LCD_write_reg
 1819 0576 0246     		mov	r2, r0
 1820              		.loc 1 484 9
 1821 0578 7B68     		ldr	r3, [r7, #4]
 1822 057a 1344     		add	r3, r3, r2
 1823 057c 7B60     		str	r3, [r7, #4]
 485:./BSP/Components/Src/lcd.c **** 
 486:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[34], 0);
ARM GAS  /tmp/cc3dkcfp.s 			page 41


 1824              		.loc 1 486 12
 1825 057e 0023     		movs	r3, #0
 1826 0580 454A     		ldr	r2, .L68+92
 1827 0582 0021     		movs	r1, #0
 1828 0584 2E48     		ldr	r0, .L68+4
 1829 0586 FFF7FEFF 		bl	LCD_write_reg
 1830 058a 0246     		mov	r2, r0
 1831              		.loc 1 486 9
 1832 058c 7B68     		ldr	r3, [r7, #4]
 1833 058e 1344     		add	r3, r3, r2
 1834 0590 7B60     		str	r3, [r7, #4]
 487:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCB, lcd_reg_data17, 10);
 1835              		.loc 1 487 12
 1836 0592 0A23     		movs	r3, #10
 1837 0594 414A     		ldr	r2, .L68+96
 1838 0596 CB21     		movs	r1, #203
 1839 0598 2948     		ldr	r0, .L68+4
 1840 059a FFF7FEFF 		bl	LCD_write_reg
 1841 059e 0246     		mov	r2, r0
 1842              		.loc 1 487 9
 1843 05a0 7B68     		ldr	r3, [r7, #4]
 1844 05a2 1344     		add	r3, r3, r2
 1845 05a4 7B60     		str	r3, [r7, #4]
 488:./BSP/Components/Src/lcd.c **** 
 489:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[35], 0);
 1846              		.loc 1 489 12
 1847 05a6 0023     		movs	r3, #0
 1848 05a8 3D4A     		ldr	r2, .L68+100
 1849 05aa 0021     		movs	r1, #0
 1850 05ac 2448     		ldr	r0, .L68+4
 1851 05ae FFF7FEFF 		bl	LCD_write_reg
 1852 05b2 0246     		mov	r2, r0
 1853              		.loc 1 489 9
 1854 05b4 7B68     		ldr	r3, [r7, #4]
 1855 05b6 1344     		add	r3, r3, r2
 1856 05b8 7B60     		str	r3, [r7, #4]
 490:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCB, lcd_reg_data18, 10);
 1857              		.loc 1 490 12
 1858 05ba 0A23     		movs	r3, #10
 1859 05bc 394A     		ldr	r2, .L68+104
 1860 05be CB21     		movs	r1, #203
 1861 05c0 1F48     		ldr	r0, .L68+4
 1862 05c2 FFF7FEFF 		bl	LCD_write_reg
 1863 05c6 0246     		mov	r2, r0
 1864              		.loc 1 490 9
 1865 05c8 7B68     		ldr	r3, [r7, #4]
 1866 05ca 1344     		add	r3, r3, r2
 1867 05cc 7B60     		str	r3, [r7, #4]
 491:./BSP/Components/Src/lcd.c **** 
 492:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 1868              		.loc 1 492 12
 1869 05ce 0023     		movs	r3, #0
 1870 05d0 204A     		ldr	r2, .L68+24
 1871 05d2 0021     		movs	r1, #0
 1872 05d4 1A48     		ldr	r0, .L68+4
 1873 05d6 FFF7FEFF 		bl	LCD_write_reg
 1874 05da 0246     		mov	r2, r0
ARM GAS  /tmp/cc3dkcfp.s 			page 42


 1875              		.loc 1 492 9
 1876 05dc 7B68     		ldr	r3, [r7, #4]
 1877 05de 1344     		add	r3, r3, r2
 1878 05e0 7B60     		str	r3, [r7, #4]
 493:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCC, lcd_reg_data19, 10);
 1879              		.loc 1 493 12
 1880 05e2 0A23     		movs	r3, #10
 1881 05e4 304A     		ldr	r2, .L68+108
 1882 05e6 CC21     		movs	r1, #204
 1883 05e8 1548     		ldr	r0, .L68+4
 1884 05ea FFF7FEFF 		bl	LCD_write_reg
 1885 05ee 0246     		mov	r2, r0
 1886              		.loc 1 493 9
 1887 05f0 7B68     		ldr	r3, [r7, #4]
 1888 05f2 1344     		add	r3, r3, r2
 1889 05f4 7B60     		str	r3, [r7, #4]
 494:./BSP/Components/Src/lcd.c **** 
 495:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[33], 0);
 1890              		.loc 1 495 12
 1891 05f6 0023     		movs	r3, #0
 1892 05f8 214A     		ldr	r2, .L68+68
 1893 05fa 0021     		movs	r1, #0
 1894 05fc 1048     		ldr	r0, .L68+4
 1895 05fe FFF7FEFF 		bl	LCD_write_reg
 1896 0602 0246     		mov	r2, r0
 1897              		.loc 1 495 9
 1898 0604 7B68     		ldr	r3, [r7, #4]
 1899 0606 1344     		add	r3, r3, r2
 1900 0608 7B60     		str	r3, [r7, #4]
 496:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCC, lcd_reg_data20, 15);
 1901              		.loc 1 496 12
 1902 060a 0F23     		movs	r3, #15
 1903 060c 274A     		ldr	r2, .L68+112
 1904 060e CC21     		movs	r1, #204
 1905 0610 0B48     		ldr	r0, .L68+4
 1906 0612 FFF7FEFF 		bl	LCD_write_reg
 1907 0616 0246     		mov	r2, r0
 1908              		.loc 1 496 9
 1909 0618 7B68     		ldr	r3, [r7, #4]
 1910 061a 1344     		add	r3, r3, r2
 1911 061c 7B60     		str	r3, [r7, #4]
 497:./BSP/Components/Src/lcd.c **** 
 498:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 1912              		.loc 1 498 12
 1913 061e 0023     		movs	r3, #0
 1914 0620 0E4A     		ldr	r2, .L68+32
 1915 0622 0021     		movs	r1, #0
 1916 0624 0648     		ldr	r0, .L68+4
 1917 0626 FFF7FEFF 		bl	LCD_write_reg
 1918 062a 0246     		mov	r2, r0
 1919              		.loc 1 498 9
 1920 062c 7B68     		ldr	r3, [r7, #4]
 1921 062e 1344     		add	r3, r3, r2
 1922 0630 7B60     		str	r3, [r7, #4]
 499:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCC, lcd_reg_data21, 15);
 1923              		.loc 1 499 12
 1924 0632 0F23     		movs	r3, #15
ARM GAS  /tmp/cc3dkcfp.s 			page 43


 1925 0634 1E4A     		ldr	r2, .L68+116
 1926 0636 CC21     		movs	r1, #204
 1927 0638 3CE0     		b	.L69
 1928              	.L70:
 1929 063a 00BF     		.align	2
 1930              	.L68:
 1931 063c 1A000000 		.word	short_reg_data.16830+26
 1932 0640 10000000 		.word	LCD_object+16
 1933 0644 0F000000 		.word	short_reg_data.16830+15
 1934 0648 1B000000 		.word	short_reg_data.16830+27
 1935 064c 1C000000 		.word	short_reg_data.16830+28
 1936 0650 00000000 		.word	lcd_reg_data6.16810
 1937 0654 02000000 		.word	short_reg_data.16830+2
 1938 0658 00000000 		.word	lcd_reg_data7.16811
 1939 065c 1D000000 		.word	short_reg_data.16830+29
 1940 0660 00000000 		.word	lcd_reg_data8.16812
 1941 0664 1E000000 		.word	short_reg_data.16830+30
 1942 0668 00000000 		.word	lcd_reg_data9.16813
 1943 066c 1F000000 		.word	short_reg_data.16830+31
 1944 0670 00000000 		.word	lcd_reg_data10.16814
 1945 0674 20000000 		.word	short_reg_data.16830+32
 1946 0678 2D000000 		.word	short_reg_data.16830+45
 1947 067c 00000000 		.word	lcd_reg_data11.16815
 1948 0680 21000000 		.word	short_reg_data.16830+33
 1949 0684 00000000 		.word	lcd_reg_data12.16816
 1950 0688 00000000 		.word	lcd_reg_data13.16817
 1951 068c 00000000 		.word	lcd_reg_data14.16818
 1952 0690 00000000 		.word	lcd_reg_data15.16819
 1953 0694 00000000 		.word	lcd_reg_data16.16820
 1954 0698 22000000 		.word	short_reg_data.16830+34
 1955 069c 00000000 		.word	lcd_reg_data17.16821
 1956 06a0 23000000 		.word	short_reg_data.16830+35
 1957 06a4 00000000 		.word	lcd_reg_data18.16822
 1958 06a8 00000000 		.word	lcd_reg_data19.16823
 1959 06ac 00000000 		.word	lcd_reg_data20.16824
 1960 06b0 00000000 		.word	lcd_reg_data21.16825
 1961              	.L69:
 1962 06b4 B448     		ldr	r0, .L71
 1963 06b6 FFF7FEFF 		bl	LCD_write_reg
 1964 06ba 0246     		mov	r2, r0
 1965              		.loc 1 499 9
 1966 06bc 7B68     		ldr	r3, [r7, #4]
 1967 06be 1344     		add	r3, r3, r2
 1968 06c0 7B60     		str	r3, [r7, #4]
 500:./BSP/Components/Src/lcd.c **** 
 501:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 1969              		.loc 1 501 12
 1970 06c2 0023     		movs	r3, #0
 1971 06c4 B14A     		ldr	r2, .L71+4
 1972 06c6 0021     		movs	r1, #0
 1973 06c8 AF48     		ldr	r0, .L71
 1974 06ca FFF7FEFF 		bl	LCD_write_reg
 1975 06ce 0246     		mov	r2, r0
 1976              		.loc 1 501 9
 1977 06d0 7B68     		ldr	r3, [r7, #4]
 1978 06d2 1344     		add	r3, r3, r2
 1979 06d4 7B60     		str	r3, [r7, #4]
ARM GAS  /tmp/cc3dkcfp.s 			page 44


 502:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCC, lcd_reg_data22, 10);
 1980              		.loc 1 502 12
 1981 06d6 0A23     		movs	r3, #10
 1982 06d8 AD4A     		ldr	r2, .L71+8
 1983 06da CC21     		movs	r1, #204
 1984 06dc AA48     		ldr	r0, .L71
 1985 06de FFF7FEFF 		bl	LCD_write_reg
 1986 06e2 0246     		mov	r2, r0
 1987              		.loc 1 502 9
 1988 06e4 7B68     		ldr	r3, [r7, #4]
 1989 06e6 1344     		add	r3, r3, r2
 1990 06e8 7B60     		str	r3, [r7, #4]
 503:./BSP/Components/Src/lcd.c **** 
 504:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 1991              		.loc 1 504 12
 1992 06ea 0023     		movs	r3, #0
 1993 06ec A94A     		ldr	r2, .L71+12
 1994 06ee 0021     		movs	r1, #0
 1995 06f0 A548     		ldr	r0, .L71
 1996 06f2 FFF7FEFF 		bl	LCD_write_reg
 1997 06f6 0246     		mov	r2, r0
 1998              		.loc 1 504 9
 1999 06f8 7B68     		ldr	r3, [r7, #4]
 2000 06fa 1344     		add	r3, r3, r2
 2001 06fc 7B60     		str	r3, [r7, #4]
 505:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCC, lcd_reg_data23, 15);
 2002              		.loc 1 505 12
 2003 06fe 0F23     		movs	r3, #15
 2004 0700 A54A     		ldr	r2, .L71+16
 2005 0702 CC21     		movs	r1, #204
 2006 0704 A048     		ldr	r0, .L71
 2007 0706 FFF7FEFF 		bl	LCD_write_reg
 2008 070a 0246     		mov	r2, r0
 2009              		.loc 1 505 9
 2010 070c 7B68     		ldr	r3, [r7, #4]
 2011 070e 1344     		add	r3, r3, r2
 2012 0710 7B60     		str	r3, [r7, #4]
 506:./BSP/Components/Src/lcd.c **** 
 507:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 2013              		.loc 1 507 12
 2014 0712 0023     		movs	r3, #0
 2015 0714 A14A     		ldr	r2, .L71+20
 2016 0716 0021     		movs	r1, #0
 2017 0718 9B48     		ldr	r0, .L71
 2018 071a FFF7FEFF 		bl	LCD_write_reg
 2019 071e 0246     		mov	r2, r0
 2020              		.loc 1 507 9
 2021 0720 7B68     		ldr	r3, [r7, #4]
 2022 0722 1344     		add	r3, r3, r2
 2023 0724 7B60     		str	r3, [r7, #4]
 508:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xCC, lcd_reg_data24, 15);
 2024              		.loc 1 508 12
 2025 0726 0F23     		movs	r3, #15
 2026 0728 9D4A     		ldr	r2, .L71+24
 2027 072a CC21     		movs	r1, #204
 2028 072c 9648     		ldr	r0, .L71
 2029 072e FFF7FEFF 		bl	LCD_write_reg
ARM GAS  /tmp/cc3dkcfp.s 			page 45


 2030 0732 0246     		mov	r2, r0
 2031              		.loc 1 508 9
 2032 0734 7B68     		ldr	r3, [r7, #4]
 2033 0736 1344     		add	r3, r3, r2
 2034 0738 7B60     		str	r3, [r7, #4]
 509:./BSP/Components/Src/lcd.c **** 
 510:./BSP/Components/Src/lcd.c ****     /////////////////////////////////////////////////////////////////////////////
 511:./BSP/Components/Src/lcd.c ****     /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
 512:./BSP/Components/Src/lcd.c ****     /* Pump 1 min and max DM                                */
 513:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 2035              		.loc 1 513 12
 2036 073a 0023     		movs	r3, #0
 2037 073c 994A     		ldr	r2, .L71+28
 2038 073e 0021     		movs	r1, #0
 2039 0740 9148     		ldr	r0, .L71
 2040 0742 FFF7FEFF 		bl	LCD_write_reg
 2041 0746 0246     		mov	r2, r0
 2042              		.loc 1 513 9
 2043 0748 7B68     		ldr	r3, [r7, #4]
 2044 074a 1344     		add	r3, r3, r2
 2045 074c 7B60     		str	r3, [r7, #4]
 514:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xC5, &short_reg_data[46], 0);
 2046              		.loc 1 514 12
 2047 074e 0023     		movs	r3, #0
 2048 0750 954A     		ldr	r2, .L71+32
 2049 0752 C521     		movs	r1, #197
 2050 0754 8C48     		ldr	r0, .L71
 2051 0756 FFF7FEFF 		bl	LCD_write_reg
 2052 075a 0246     		mov	r2, r0
 2053              		.loc 1 514 9
 2054 075c 7B68     		ldr	r3, [r7, #4]
 2055 075e 1344     		add	r3, r3, r2
 2056 0760 7B60     		str	r3, [r7, #4]
 515:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[47], 0);
 2057              		.loc 1 515 12
 2058 0762 0023     		movs	r3, #0
 2059 0764 914A     		ldr	r2, .L71+36
 2060 0766 0021     		movs	r1, #0
 2061 0768 8748     		ldr	r0, .L71
 2062 076a FFF7FEFF 		bl	LCD_write_reg
 2063 076e 0246     		mov	r2, r0
 2064              		.loc 1 515 9
 2065 0770 7B68     		ldr	r3, [r7, #4]
 2066 0772 1344     		add	r3, r3, r2
 2067 0774 7B60     		str	r3, [r7, #4]
 516:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xF5, &short_reg_data[48], 0);
 2068              		.loc 1 516 12
 2069 0776 0023     		movs	r3, #0
 2070 0778 8D4A     		ldr	r2, .L71+40
 2071 077a F521     		movs	r1, #245
 2072 077c 8248     		ldr	r0, .L71
 2073 077e FFF7FEFF 		bl	LCD_write_reg
 2074 0782 0246     		mov	r2, r0
 2075              		.loc 1 516 9
 2076 0784 7B68     		ldr	r3, [r7, #4]
 2077 0786 1344     		add	r3, r3, r2
 2078 0788 7B60     		str	r3, [r7, #4]
ARM GAS  /tmp/cc3dkcfp.s 			page 46


 517:./BSP/Components/Src/lcd.c ****     /////////////////////////////////////////////////////////////////////////////
 518:./BSP/Components/Src/lcd.c **** 
 519:./BSP/Components/Src/lcd.c ****     /* CABC LEDPWM frequency adjusted to 19,5kHz */
 520:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[49], 0);
 2079              		.loc 1 520 12
 2080 078a 0023     		movs	r3, #0
 2081 078c 894A     		ldr	r2, .L71+44
 2082 078e 0021     		movs	r1, #0
 2083 0790 7D48     		ldr	r0, .L71
 2084 0792 FFF7FEFF 		bl	LCD_write_reg
 2085 0796 0246     		mov	r2, r0
 2086              		.loc 1 520 9
 2087 0798 7B68     		ldr	r3, [r7, #4]
 2088 079a 1344     		add	r3, r3, r2
 2089 079c 7B60     		str	r3, [r7, #4]
 521:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xC6, &short_reg_data[50], 0);
 2090              		.loc 1 521 12
 2091 079e 0023     		movs	r3, #0
 2092 07a0 854A     		ldr	r2, .L71+48
 2093 07a2 C621     		movs	r1, #198
 2094 07a4 7848     		ldr	r0, .L71
 2095 07a6 FFF7FEFF 		bl	LCD_write_reg
 2096 07aa 0246     		mov	r2, r0
 2097              		.loc 1 521 9
 2098 07ac 7B68     		ldr	r3, [r7, #4]
 2099 07ae 1344     		add	r3, r3, r2
 2100 07b0 7B60     		str	r3, [r7, #4]
 522:./BSP/Components/Src/lcd.c **** 
 523:./BSP/Components/Src/lcd.c ****     /* Exit CMD2 mode */
 524:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 2101              		.loc 1 524 12
 2102 07b2 0023     		movs	r3, #0
 2103 07b4 814A     		ldr	r2, .L71+52
 2104 07b6 0021     		movs	r1, #0
 2105 07b8 7348     		ldr	r0, .L71
 2106 07ba FFF7FEFF 		bl	LCD_write_reg
 2107 07be 0246     		mov	r2, r0
 2108              		.loc 1 524 9
 2109 07c0 7B68     		ldr	r3, [r7, #4]
 2110 07c2 1344     		add	r3, r3, r2
 2111 07c4 7B60     		str	r3, [r7, #4]
 525:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xFF, lcd_reg_data25, 3);
 2112              		.loc 1 525 12
 2113 07c6 0323     		movs	r3, #3
 2114 07c8 7D4A     		ldr	r2, .L71+56
 2115 07ca FF21     		movs	r1, #255
 2116 07cc 6E48     		ldr	r0, .L71
 2117 07ce FFF7FEFF 		bl	LCD_write_reg
 2118 07d2 0246     		mov	r2, r0
 2119              		.loc 1 525 9
 2120 07d4 7B68     		ldr	r3, [r7, #4]
 2121 07d6 1344     		add	r3, r3, r2
 2122 07d8 7B60     		str	r3, [r7, #4]
 526:./BSP/Components/Src/lcd.c **** 
 527:./BSP/Components/Src/lcd.c ****     /*************************************************************************** */
 528:./BSP/Components/Src/lcd.c ****     /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
 529:./BSP/Components/Src/lcd.c ****     /*************************************************************************** */
ARM GAS  /tmp/cc3dkcfp.s 			page 47


 530:./BSP/Components/Src/lcd.c **** 
 531:./BSP/Components/Src/lcd.c ****     /* NOP - goes back to DCS std command ? */
 532:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 2123              		.loc 1 532 12
 2124 07da 0023     		movs	r3, #0
 2125 07dc 774A     		ldr	r2, .L71+52
 2126 07de 0021     		movs	r1, #0
 2127 07e0 6948     		ldr	r0, .L71
 2128 07e2 FFF7FEFF 		bl	LCD_write_reg
 2129 07e6 0246     		mov	r2, r0
 2130              		.loc 1 532 9
 2131 07e8 7B68     		ldr	r3, [r7, #4]
 2132 07ea 1344     		add	r3, r3, r2
 2133 07ec 7B60     		str	r3, [r7, #4]
 533:./BSP/Components/Src/lcd.c **** 
 534:./BSP/Components/Src/lcd.c ****     /* Gamma correction 2.2+ table (HSDT possible) */
 535:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 2134              		.loc 1 535 12
 2135 07ee 0023     		movs	r3, #0
 2136 07f0 724A     		ldr	r2, .L71+52
 2137 07f2 0021     		movs	r1, #0
 2138 07f4 6448     		ldr	r0, .L71
 2139 07f6 FFF7FEFF 		bl	LCD_write_reg
 2140 07fa 0246     		mov	r2, r0
 2141              		.loc 1 535 9
 2142 07fc 7B68     		ldr	r3, [r7, #4]
 2143 07fe 1344     		add	r3, r3, r2
 2144 0800 7B60     		str	r3, [r7, #4]
 536:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xE1, lcd_reg_data3, 16);
 2145              		.loc 1 536 12
 2146 0802 1023     		movs	r3, #16
 2147 0804 6F4A     		ldr	r2, .L71+60
 2148 0806 E121     		movs	r1, #225
 2149 0808 5F48     		ldr	r0, .L71
 2150 080a FFF7FEFF 		bl	LCD_write_reg
 2151 080e 0246     		mov	r2, r0
 2152              		.loc 1 536 9
 2153 0810 7B68     		ldr	r3, [r7, #4]
 2154 0812 1344     		add	r3, r3, r2
 2155 0814 7B60     		str	r3, [r7, #4]
 537:./BSP/Components/Src/lcd.c **** 
 538:./BSP/Components/Src/lcd.c ****     /* Gamma correction 2.2- table (HSDT possible) */
 539:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 2156              		.loc 1 539 12
 2157 0816 0023     		movs	r3, #0
 2158 0818 684A     		ldr	r2, .L71+52
 2159 081a 0021     		movs	r1, #0
 2160 081c 5A48     		ldr	r0, .L71
 2161 081e FFF7FEFF 		bl	LCD_write_reg
 2162 0822 0246     		mov	r2, r0
 2163              		.loc 1 539 9
 2164 0824 7B68     		ldr	r3, [r7, #4]
 2165 0826 1344     		add	r3, r3, r2
 2166 0828 7B60     		str	r3, [r7, #4]
 540:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, 0xE2, lcd_reg_data4, 16);
 2167              		.loc 1 540 12
 2168 082a 1023     		movs	r3, #16
ARM GAS  /tmp/cc3dkcfp.s 			page 48


 2169 082c 664A     		ldr	r2, .L71+64
 2170 082e E221     		movs	r1, #226
 2171 0830 5548     		ldr	r0, .L71
 2172 0832 FFF7FEFF 		bl	LCD_write_reg
 2173 0836 0246     		mov	r2, r0
 2174              		.loc 1 540 9
 2175 0838 7B68     		ldr	r3, [r7, #4]
 2176 083a 1344     		add	r3, r3, r2
 2177 083c 7B60     		str	r3, [r7, #4]
 541:./BSP/Components/Src/lcd.c **** 
 542:./BSP/Components/Src/lcd.c ****     /* Send Sleep Out command to display : no parameter */
 543:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_SLPOUT, &short_reg_data[36], 0);
 2178              		.loc 1 543 12
 2179 083e 0023     		movs	r3, #0
 2180 0840 624A     		ldr	r2, .L71+68
 2181 0842 1121     		movs	r1, #17
 2182 0844 5048     		ldr	r0, .L71
 2183 0846 FFF7FEFF 		bl	LCD_write_reg
 2184 084a 0246     		mov	r2, r0
 2185              		.loc 1 543 9
 2186 084c 7B68     		ldr	r3, [r7, #4]
 2187 084e 1344     		add	r3, r3, r2
 2188 0850 7B60     		str	r3, [r7, #4]
 544:./BSP/Components/Src/lcd.c **** 
 545:./BSP/Components/Src/lcd.c ****     /* Wait for sleep out exit */
 546:./BSP/Components/Src/lcd.c ****     (void)LCD_IO_Delay(&LCD_object, 120);
 2189              		.loc 1 546 11
 2190 0852 7821     		movs	r1, #120
 2191 0854 5E48     		ldr	r0, .L71+72
 2192 0856 FFF7FEFF 		bl	LCD_IO_Delay
 547:./BSP/Components/Src/lcd.c **** 
 548:./BSP/Components/Src/lcd.c **** 
 549:./BSP/Components/Src/lcd.c ****     /* Set Pixel color format to RGB888 */
 550:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_COLMOD, &short_reg_data[38], 0);
 2193              		.loc 1 550 12
 2194 085a 0023     		movs	r3, #0
 2195 085c 5D4A     		ldr	r2, .L71+76
 2196 085e 3A21     		movs	r1, #58
 2197 0860 4948     		ldr	r0, .L71
 2198 0862 FFF7FEFF 		bl	LCD_write_reg
 2199 0866 0246     		mov	r2, r0
 2200              		.loc 1 550 9
 2201 0868 7B68     		ldr	r3, [r7, #4]
 2202 086a 1344     		add	r3, r3, r2
 2203 086c 7B60     		str	r3, [r7, #4]
 551:./BSP/Components/Src/lcd.c ****     LCDACtx.ColorCode = OTM8009A_FORMAT_RGB888;
 2204              		.loc 1 551 23
 2205 086e 5A4B     		ldr	r3, .L71+80
 2206 0870 0022     		movs	r2, #0
 2207 0872 5A60     		str	r2, [r3, #4]
 552:./BSP/Components/Src/lcd.c **** 
 553:./BSP/Components/Src/lcd.c ****     /* Send command to configure display in landscape orientation mode. By default
 554:./BSP/Components/Src/lcd.c ****     the orientation mode is portrait  */
 555:./BSP/Components/Src/lcd.c ****     #ifdef OTM8009A_ORIENTATION_LANDSCAPE
 556:./BSP/Components/Src/lcd.c ****         uint8_t tmp = OTM8009A_MADCTR_MODE_LANDSCAPE;
 2208              		.loc 1 556 17
 2209 0874 6023     		movs	r3, #96
ARM GAS  /tmp/cc3dkcfp.s 			page 49


 2210 0876 FB70     		strb	r3, [r7, #3]
 557:./BSP/Components/Src/lcd.c ****         ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_MADCTR, &tmp, 0);
 2211              		.loc 1 557 16
 2212 0878 FA1C     		adds	r2, r7, #3
 2213 087a 0023     		movs	r3, #0
 2214 087c 3621     		movs	r1, #54
 2215 087e 4248     		ldr	r0, .L71
 2216 0880 FFF7FEFF 		bl	LCD_write_reg
 2217 0884 0246     		mov	r2, r0
 2218              		.loc 1 557 13
 2219 0886 7B68     		ldr	r3, [r7, #4]
 2220 0888 1344     		add	r3, r3, r2
 2221 088a 7B60     		str	r3, [r7, #4]
 558:./BSP/Components/Src/lcd.c ****         ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_CASET, LcdRegData27, 4);
 2222              		.loc 1 558 16
 2223 088c 0423     		movs	r3, #4
 2224 088e 534A     		ldr	r2, .L71+84
 2225 0890 2A21     		movs	r1, #42
 2226 0892 3D48     		ldr	r0, .L71
 2227 0894 FFF7FEFF 		bl	LCD_write_reg
 2228 0898 0246     		mov	r2, r0
 2229              		.loc 1 558 13
 2230 089a 7B68     		ldr	r3, [r7, #4]
 2231 089c 1344     		add	r3, r3, r2
 2232 089e 7B60     		str	r3, [r7, #4]
 559:./BSP/Components/Src/lcd.c ****         ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_PASET, LcdRegData28, 4);
 2233              		.loc 1 559 16
 2234 08a0 0423     		movs	r3, #4
 2235 08a2 4F4A     		ldr	r2, .L71+88
 2236 08a4 2B21     		movs	r1, #43
 2237 08a6 3848     		ldr	r0, .L71
 2238 08a8 FFF7FEFF 		bl	LCD_write_reg
 2239 08ac 0246     		mov	r2, r0
 2240              		.loc 1 559 13
 2241 08ae 7B68     		ldr	r3, [r7, #4]
 2242 08b0 1344     		add	r3, r3, r2
 2243 08b2 7B60     		str	r3, [r7, #4]
 560:./BSP/Components/Src/lcd.c **** 
 561:./BSP/Components/Src/lcd.c ****         LCDACtx.Orientation = OTM8009A_ORIENTATION_LANDSCAPE;
 2244              		.loc 1 561 29
 2245 08b4 484B     		ldr	r3, .L71+80
 2246 08b6 0122     		movs	r2, #1
 2247 08b8 1A60     		str	r2, [r3]
 562:./BSP/Components/Src/lcd.c ****     #elif OTM8009A_ORIENTATION_PORTRAIT
 563:./BSP/Components/Src/lcd.c ****         LCDACtx.Orientation = OTM8009A_ORIENTATION_PORTRAIT;
 564:./BSP/Components/Src/lcd.c ****     #endif
 565:./BSP/Components/Src/lcd.c **** 
 566:./BSP/Components/Src/lcd.c ****     /** CABC : Content Adaptive Backlight Control section start >> */
 567:./BSP/Components/Src/lcd.c ****     /* Note : defaut is 0 (lowest Brightness], 0xFF is highest Brightness, try 0x7F : intermediate 
 568:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_WRDISBV, &short_reg_data[39], 0);
 2248              		.loc 1 568 12
 2249 08ba 0023     		movs	r3, #0
 2250 08bc 494A     		ldr	r2, .L71+92
 2251 08be 5121     		movs	r1, #81
 2252 08c0 3148     		ldr	r0, .L71
 2253 08c2 FFF7FEFF 		bl	LCD_write_reg
 2254 08c6 0246     		mov	r2, r0
ARM GAS  /tmp/cc3dkcfp.s 			page 50


 2255              		.loc 1 568 9
 2256 08c8 7B68     		ldr	r3, [r7, #4]
 2257 08ca 1344     		add	r3, r3, r2
 2258 08cc 7B60     		str	r3, [r7, #4]
 569:./BSP/Components/Src/lcd.c ****     /* Store default brightness */
 570:./BSP/Components/Src/lcd.c ****     LCDACtx.Brightness = ((uint32_t)short_reg_data[39] / 0xFFU) * 100U;
 2259              		.loc 1 570 51
 2260 08ce 464B     		ldr	r3, .L71+96
 2261 08d0 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 2262              		.loc 1 570 56
 2263 08d4 454A     		ldr	r2, .L71+100
 2264 08d6 A2FB0323 		umull	r2, r3, r2, r3
 2265 08da DB09     		lsrs	r3, r3, #7
 2266 08dc DBB2     		uxtb	r3, r3
 2267 08de 1A46     		mov	r2, r3
 2268              		.loc 1 570 65
 2269 08e0 6423     		movs	r3, #100
 2270 08e2 03FB02F3 		mul	r3, r3, r2
 2271              		.loc 1 570 24
 2272 08e6 3C4A     		ldr	r2, .L71+80
 2273 08e8 9360     		str	r3, [r2, #8]
 571:./BSP/Components/Src/lcd.c **** 
 572:./BSP/Components/Src/lcd.c ****     /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
 573:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_WRCTRLD, &short_reg_data[40], 0);
 2274              		.loc 1 573 12
 2275 08ea 0023     		movs	r3, #0
 2276 08ec 404A     		ldr	r2, .L71+104
 2277 08ee 5321     		movs	r1, #83
 2278 08f0 2548     		ldr	r0, .L71
 2279 08f2 FFF7FEFF 		bl	LCD_write_reg
 2280 08f6 0246     		mov	r2, r0
 2281              		.loc 1 573 9
 2282 08f8 7B68     		ldr	r3, [r7, #4]
 2283 08fa 1344     		add	r3, r3, r2
 2284 08fc 7B60     		str	r3, [r7, #4]
 574:./BSP/Components/Src/lcd.c **** 
 575:./BSP/Components/Src/lcd.c ****     /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
 576:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_WRCABC, &short_reg_data[41], 0);
 2285              		.loc 1 576 12
 2286 08fe 0023     		movs	r3, #0
 2287 0900 3C4A     		ldr	r2, .L71+108
 2288 0902 5521     		movs	r1, #85
 2289 0904 2048     		ldr	r0, .L71
 2290 0906 FFF7FEFF 		bl	LCD_write_reg
 2291 090a 0246     		mov	r2, r0
 2292              		.loc 1 576 9
 2293 090c 7B68     		ldr	r3, [r7, #4]
 2294 090e 1344     		add	r3, r3, r2
 2295 0910 7B60     		str	r3, [r7, #4]
 577:./BSP/Components/Src/lcd.c **** 
 578:./BSP/Components/Src/lcd.c ****     /* defaut is 0 (lowest Brightness], 0xFF is highest Brightness */
 579:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_WRCABCMB, &short_reg_data[42], 0);
 2296              		.loc 1 579 12
 2297 0912 0023     		movs	r3, #0
 2298 0914 384A     		ldr	r2, .L71+112
 2299 0916 5E21     		movs	r1, #94
 2300 0918 1B48     		ldr	r0, .L71
ARM GAS  /tmp/cc3dkcfp.s 			page 51


 2301 091a FFF7FEFF 		bl	LCD_write_reg
 2302 091e 0246     		mov	r2, r0
 2303              		.loc 1 579 9
 2304 0920 7B68     		ldr	r3, [r7, #4]
 2305 0922 1344     		add	r3, r3, r2
 2306 0924 7B60     		str	r3, [r7, #4]
 580:./BSP/Components/Src/lcd.c **** 
 581:./BSP/Components/Src/lcd.c ****     /** CABC : Content Adaptive Backlight Control section end << */
 582:./BSP/Components/Src/lcd.c **** 
 583:./BSP/Components/Src/lcd.c ****     /* Send Command Display On */
 584:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_DISPON, &short_reg_data[43], 0);
 2307              		.loc 1 584 12
 2308 0926 0023     		movs	r3, #0
 2309 0928 344A     		ldr	r2, .L71+116
 2310 092a 2921     		movs	r1, #41
 2311 092c 1648     		ldr	r0, .L71
 2312 092e FFF7FEFF 		bl	LCD_write_reg
 2313 0932 0246     		mov	r2, r0
 2314              		.loc 1 584 9
 2315 0934 7B68     		ldr	r3, [r7, #4]
 2316 0936 1344     		add	r3, r3, r2
 2317 0938 7B60     		str	r3, [r7, #4]
 585:./BSP/Components/Src/lcd.c **** 
 586:./BSP/Components/Src/lcd.c ****     /* NOP command */
 587:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 2318              		.loc 1 587 12
 2319 093a 0023     		movs	r3, #0
 2320 093c 1F4A     		ldr	r2, .L71+52
 2321 093e 0021     		movs	r1, #0
 2322 0940 1148     		ldr	r0, .L71
 2323 0942 FFF7FEFF 		bl	LCD_write_reg
 2324 0946 0246     		mov	r2, r0
 2325              		.loc 1 587 9
 2326 0948 7B68     		ldr	r3, [r7, #4]
 2327 094a 1344     		add	r3, r3, r2
 2328 094c 7B60     		str	r3, [r7, #4]
 588:./BSP/Components/Src/lcd.c **** 
 589:./BSP/Components/Src/lcd.c ****     /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI co
 590:./BSP/Components/Src/lcd.c ****     /* DSI host from LTDC incoming pixels in video mode */
 591:./BSP/Components/Src/lcd.c ****     ret += LCD_write_reg(&LCD_object.Ctx, OTM8009A_CMD_RAMWR, &short_reg_data[44], 0);
 2329              		.loc 1 591 12
 2330 094e 0023     		movs	r3, #0
 2331 0950 2B4A     		ldr	r2, .L71+120
 2332 0952 2C21     		movs	r1, #44
 2333 0954 0C48     		ldr	r0, .L71
 2334 0956 FFF7FEFF 		bl	LCD_write_reg
 2335 095a 0246     		mov	r2, r0
 2336              		.loc 1 591 9
 2337 095c 7B68     		ldr	r3, [r7, #4]
 2338 095e 1344     		add	r3, r3, r2
 2339 0960 7B60     		str	r3, [r7, #4]
 592:./BSP/Components/Src/lcd.c **** 
 593:./BSP/Components/Src/lcd.c ****     LPCmd.LPGenShortWriteNoP    = DSI_LP_GSW0P_DISABLE;
 2340              		.loc 1 593 33
 2341 0962 284B     		ldr	r3, .L71+124
 2342 0964 0022     		movs	r2, #0
 2343 0966 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc3dkcfp.s 			page 52


 594:./BSP/Components/Src/lcd.c ****     LPCmd.LPGenShortWriteOneP   = DSI_LP_GSW1P_DISABLE;
 2344              		.loc 1 594 33
 2345 0968 264B     		ldr	r3, .L71+124
 2346 096a 0022     		movs	r2, #0
 2347 096c 5A60     		str	r2, [r3, #4]
 595:./BSP/Components/Src/lcd.c ****     LPCmd.LPGenShortWriteTwoP   = DSI_LP_GSW2P_DISABLE;
 2348              		.loc 1 595 33
 2349 096e 254B     		ldr	r3, .L71+124
 2350 0970 0022     		movs	r2, #0
 2351 0972 9A60     		str	r2, [r3, #8]
 596:./BSP/Components/Src/lcd.c ****     LPCmd.LPGenShortReadNoP     = DSI_LP_GSR0P_DISABLE;
 2352              		.loc 1 596 33
 2353 0974 234B     		ldr	r3, .L71+124
 2354 0976 0022     		movs	r2, #0
 2355 0978 DA60     		str	r2, [r3, #12]
 597:./BSP/Components/Src/lcd.c ****     LPCmd.LPGenShortReadOneP    = DSI_LP_GSR1P_DISABLE;
 2356              		.loc 1 597 33
 2357 097a 224B     		ldr	r3, .L71+124
 2358 097c 0022     		movs	r2, #0
 2359 097e 1A61     		str	r2, [r3, #16]
 598:./BSP/Components/Src/lcd.c ****     LPCmd.LPGenShortReadTwoP    = DSI_LP_GSR2P_DISABLE;
 2360              		.loc 1 598 33
 2361 0980 204B     		ldr	r3, .L71+124
 2362 0982 0022     		movs	r2, #0
 2363 0984 40E0     		b	.L72
 2364              	.L73:
 2365 0986 00BF     		.align	2
 2366              	.L71:
 2367 0988 10000000 		.word	LCD_object+16
 2368 098c 1E000000 		.word	short_reg_data.16830+30
 2369 0990 00000000 		.word	lcd_reg_data22.16826
 2370 0994 1F000000 		.word	short_reg_data.16830+31
 2371 0998 00000000 		.word	lcd_reg_data23.16827
 2372 099c 20000000 		.word	short_reg_data.16830+32
 2373 09a0 00000000 		.word	lcd_reg_data24.16828
 2374 09a4 0D000000 		.word	short_reg_data.16830+13
 2375 09a8 2E000000 		.word	short_reg_data.16830+46
 2376 09ac 2F000000 		.word	short_reg_data.16830+47
 2377 09b0 30000000 		.word	short_reg_data.16830+48
 2378 09b4 31000000 		.word	short_reg_data.16830+49
 2379 09b8 32000000 		.word	short_reg_data.16830+50
 2380 09bc 01000000 		.word	short_reg_data.16830+1
 2381 09c0 00000000 		.word	lcd_reg_data25.16829
 2382 09c4 00000000 		.word	lcd_reg_data3.16807
 2383 09c8 00000000 		.word	lcd_reg_data4.16808
 2384 09cc 24000000 		.word	short_reg_data.16830+36
 2385 09d0 00000000 		.word	LCD_object
 2386 09d4 26000000 		.word	short_reg_data.16830+38
 2387 09d8 00000000 		.word	LCDACtx
 2388 09dc 00000000 		.word	LcdRegData27
 2389 09e0 00000000 		.word	LcdRegData28
 2390 09e4 27000000 		.word	short_reg_data.16830+39
 2391 09e8 00000000 		.word	short_reg_data.16830
 2392 09ec 81808080 		.word	-2139062143
 2393 09f0 28000000 		.word	short_reg_data.16830+40
 2394 09f4 29000000 		.word	short_reg_data.16830+41
 2395 09f8 2A000000 		.word	short_reg_data.16830+42
ARM GAS  /tmp/cc3dkcfp.s 			page 53


 2396 09fc 2B000000 		.word	short_reg_data.16830+43
 2397 0a00 2C000000 		.word	short_reg_data.16830+44
 2398 0a04 00000000 		.word	LPCmd.16804
 2399              	.L72:
 2400 0a08 5A61     		str	r2, [r3, #20]
 599:./BSP/Components/Src/lcd.c ****     LPCmd.LPGenLongWrite        = DSI_LP_GLW_DISABLE;
 2401              		.loc 1 599 33
 2402 0a0a 174B     		ldr	r3, .L74
 2403 0a0c 0022     		movs	r2, #0
 2404 0a0e 9A61     		str	r2, [r3, #24]
 600:./BSP/Components/Src/lcd.c ****     LPCmd.LPDcsShortWriteNoP    = DSI_LP_DSW0P_DISABLE;
 2405              		.loc 1 600 33
 2406 0a10 154B     		ldr	r3, .L74
 2407 0a12 0022     		movs	r2, #0
 2408 0a14 DA61     		str	r2, [r3, #28]
 601:./BSP/Components/Src/lcd.c ****     LPCmd.LPDcsShortWriteOneP   = DSI_LP_DSW1P_DISABLE;
 2409              		.loc 1 601 33
 2410 0a16 144B     		ldr	r3, .L74
 2411 0a18 0022     		movs	r2, #0
 2412 0a1a 1A62     		str	r2, [r3, #32]
 602:./BSP/Components/Src/lcd.c ****     LPCmd.LPDcsShortReadNoP     = DSI_LP_DSR0P_DISABLE;
 2413              		.loc 1 602 33
 2414 0a1c 124B     		ldr	r3, .L74
 2415 0a1e 0022     		movs	r2, #0
 2416 0a20 5A62     		str	r2, [r3, #36]
 603:./BSP/Components/Src/lcd.c ****     LPCmd.LPDcsLongWrite        = DSI_LP_DLW_DISABLE;
 2417              		.loc 1 603 33
 2418 0a22 114B     		ldr	r3, .L74
 2419 0a24 0022     		movs	r2, #0
 2420 0a26 9A62     		str	r2, [r3, #40]
 604:./BSP/Components/Src/lcd.c **** 
 605:./BSP/Components/Src/lcd.c ****     DSI_Config_Channel(&LPCmd);
 2421              		.loc 1 605 5
 2422 0a28 0F48     		ldr	r0, .L74
 2423 0a2a FFF7FEFF 		bl	DSI_Config_Channel
 606:./BSP/Components/Src/lcd.c ****     uint8_t short_cmd[2]={OTM8009A_CMD_DISPOFF,0};
 2424              		.loc 1 606 13
 2425 0a2e 2823     		movs	r3, #40
 2426 0a30 3B80     		strh	r3, [r7]	@ movhi
 607:./BSP/Components/Src/lcd.c ****     DSI_IO_WriteCmd(1,short_cmd);
 2427              		.loc 1 607 5
 2428 0a32 3B46     		mov	r3, r7
 2429 0a34 1946     		mov	r1, r3
 2430 0a36 0120     		movs	r0, #1
 2431 0a38 FFF7FEFF 		bl	DSI_IO_WriteCmd
 608:./BSP/Components/Src/lcd.c ****     LCD_LayerInit(0, LAYER0_ADDRESS,LCD_Driver.GetXSize,LCD_Driver.GetYSize);
 2432              		.loc 1 608 47
 2433 0a3c 0B4B     		ldr	r3, .L74+4
 2434 0a3e 5B6C     		ldr	r3, [r3, #68]
 2435              		.loc 1 608 5
 2436 0a40 1A46     		mov	r2, r3
 2437              		.loc 1 608 67
 2438 0a42 0A4B     		ldr	r3, .L74+4
 2439 0a44 9B6C     		ldr	r3, [r3, #72]
 2440              		.loc 1 608 5
 2441 0a46 4FF05041 		mov	r1, #-805306368
 2442 0a4a 0020     		movs	r0, #0
ARM GAS  /tmp/cc3dkcfp.s 			page 54


 2443 0a4c FFF7FEFF 		bl	LCD_LayerInit
 609:./BSP/Components/Src/lcd.c ****     LTDC_Set_Pitch(LCD_Driver.GetXSize,0);
 2444              		.loc 1 609 30
 2445 0a50 064B     		ldr	r3, .L74+4
 2446 0a52 5B6C     		ldr	r3, [r3, #68]
 2447              		.loc 1 609 5
 2448 0a54 0021     		movs	r1, #0
 2449 0a56 1846     		mov	r0, r3
 2450 0a58 FFF7FEFF 		bl	LTDC_Set_Pitch
 610:./BSP/Components/Src/lcd.c ****     LTDC_Enable();
 2451              		.loc 1 610 5
 2452 0a5c FFF7FEFF 		bl	LTDC_Enable
 611:./BSP/Components/Src/lcd.c **** }
 2453              		.loc 1 611 1
 2454 0a60 00BF     		nop
 2455 0a62 0837     		adds	r7, r7, #8
 2456              	.LCFI77:
 2457              		.cfi_def_cfa_offset 8
 2458 0a64 BD46     		mov	sp, r7
 2459              	.LCFI78:
 2460              		.cfi_def_cfa_register 13
 2461              		@ sp needed
 2462 0a66 80BD     		pop	{r7, pc}
 2463              	.L75:
 2464              		.align	2
 2465              	.L74:
 2466 0a68 00000000 		.word	LPCmd.16804
 2467 0a6c 00000000 		.word	LCD_Driver
 2468              		.cfi_endproc
 2469              	.LFE352:
 2471              		.section	.rodata.short_reg_data.16830,"a"
 2472              		.align	2
 2475              	short_reg_data.16830:
 2476 0000 00008030 		.ascii	"\000\000\2000\212@\261\251\2214\264PN\201f\241\010\222"
 2476      8A40B1A9 
 2476      9134B450 
 2476      4E8166A1 
 2476      0892
 2477 0012 01959433 		.ascii	"\001\225\2243\243\033\202\203\203\016\246\240\260\300"
 2477      A31B8283 
 2477      830EA6A0 
 2477      B0C0
 2478 0020 D090E0F0 		.ascii	"\320\220\340\360\000Uw\177,\002\377\000\000\000f\266"
 2478      0055777F 
 2478      2C02FF00 
 2478      000066B6 
 2479 0030 06B106   		.ascii	"\006\261\006"
 2480              		.section	.rodata.lcd_reg_data1.16805,"a"
 2481              		.align	2
 2484              	lcd_reg_data1.16805:
 2485 0000 800901   		.ascii	"\200\011\001"
 2486              		.section	.rodata.lcd_reg_data2.16806,"a"
 2487              		.align	2
 2490              	lcd_reg_data2.16806:
 2491 0000 8009     		.ascii	"\200\011"
 2492              		.section	.rodata.lcd_reg_data5.16809,"a"
 2493              		.align	2
ARM GAS  /tmp/cc3dkcfp.s 			page 55


 2496              	lcd_reg_data5.16809:
 2497 0000 7979     		.ascii	"yy"
 2498              		.section	.rodata.lcd_reg_data6.16810,"a"
 2499              		.align	2
 2502              	lcd_reg_data6.16810:
 2503 0000 0001     		.ascii	"\000\001"
 2504              		.section	.rodata.lcd_reg_data7.16811,"a"
 2505              		.align	2
 2508              	lcd_reg_data7.16811:
 2509 0000 85010084 		.ascii	"\205\001\000\204\001\000"
 2509      0100
 2510              		.section	.rodata.lcd_reg_data8.16812,"a"
 2511              		.align	2
 2514              	lcd_reg_data8.16812:
 2515 0000 18040339 		.ascii	"\030\004\0039\000\000\000\030\003\003:\000\000\000"
 2515      00000018 
 2515      03033A00 
 2515      0000
 2516              		.section	.rodata.lcd_reg_data9.16813,"a"
 2517              		.align	2
 2520              	lcd_reg_data9.16813:
 2521 0000 1802033B 		.ascii	"\030\002\003;\000\000\000\030\001\003<\000\000\000"
 2521      00000018 
 2521      01033C00 
 2521      0000
 2522              		.section	.rodata.lcd_reg_data10.16814,"a"
 2523              		.align	2
 2526              	lcd_reg_data10.16814:
 2527 0000 01012020 		.ascii	"\001\001  \000\000\001\002\000\000"
 2527      00000102 
 2527      0000
 2528              		.section	.rodata.lcd_reg_data11.16815,"a"
 2529              		.align	2
 2532              	lcd_reg_data11.16815:
 2533 0000 00000000 		.space	10
 2533      00000000 
 2533      0000
 2534              		.section	.rodata.lcd_reg_data12.16816,"a"
 2535              		.align	2
 2538              	lcd_reg_data12.16816:
 2539 0000 00000000 		.space	15
 2539      00000000 
 2539      00000000 
 2539      000000
 2540              		.section	.rodata.lcd_reg_data13.16817,"a"
 2541              		.align	2
 2544              	lcd_reg_data13.16817:
 2545 0000 00000000 		.space	15
 2545      00000000 
 2545      00000000 
 2545      000000
 2546              		.section	.rodata.lcd_reg_data14.16818,"a"
 2547              		.align	2
 2550              	lcd_reg_data14.16818:
 2551 0000 00000000 		.space	10
 2551      00000000 
 2551      0000
ARM GAS  /tmp/cc3dkcfp.s 			page 56


 2552              		.section	.rodata.lcd_reg_data15.16819,"a"
 2553              		.align	2
 2556              	lcd_reg_data15.16819:
 2557 0000 00040404 		.ascii	"\000\004\004\004\004\004\000\000\000\000\000\000\000"
 2557      04040000 
 2557      00000000 
 2557      00
 2558 000d 0000     		.ascii	"\000\000"
 2559              		.section	.rodata.lcd_reg_data16.16820,"a"
 2560              		.align	2
 2563              	lcd_reg_data16.16820:
 2564 0000 00000000 		.ascii	"\000\000\000\000\000\000\004\004\004\004\004\000\000"
 2564      00000404 
 2564      04040400 
 2564      00
 2565 000d 0000     		.ascii	"\000\000"
 2566              		.section	.rodata.lcd_reg_data17.16821,"a"
 2567              		.align	2
 2570              	lcd_reg_data17.16821:
 2571 0000 00000000 		.space	10
 2571      00000000 
 2571      0000
 2572              		.section	.rodata.lcd_reg_data18.16822,"a"
 2573              		.align	2
 2576              	lcd_reg_data18.16822:
 2577 0000 FFFFFFFF 		.ascii	"\377\377\377\377\377\377\377\377\377\377"
 2577      FFFFFFFF 
 2577      FFFF
 2578              		.section	.rodata.lcd_reg_data19.16823,"a"
 2579              		.align	2
 2582              	lcd_reg_data19.16823:
 2583 0000 0026090B 		.ascii	"\000&\011\013\001%\000\000\000\000"
 2583      01250000 
 2583      0000
 2584              		.section	.rodata.lcd_reg_data20.16824,"a"
 2585              		.align	2
 2588              	lcd_reg_data20.16824:
 2589 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000&\012\014"
 2589      00000000 
 2589      00000026 
 2589      0A0C
 2590 000e 02       		.ascii	"\002"
 2591              		.section	.rodata.lcd_reg_data21.16825,"a"
 2592              		.align	2
 2595              	lcd_reg_data21.16825:
 2596 0000 25000000 		.ascii	"%\000\000\000\000\000\000\000\000\000\000\000\000\000"
 2596      00000000 
 2596      00000000 
 2596      0000
 2597 000e 00       		.ascii	"\000"
 2598              		.section	.rodata.lcd_reg_data22.16826,"a"
 2599              		.align	2
 2602              	lcd_reg_data22.16826:
 2603 0000 00250C0A 		.ascii	"\000%\014\012\002&\000\000\000\000"
 2603      02260000 
 2603      0000
 2604              		.section	.rodata.lcd_reg_data23.16827,"a"
ARM GAS  /tmp/cc3dkcfp.s 			page 57


 2605              		.align	2
 2608              	lcd_reg_data23.16827:
 2609 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000%\013\011"
 2609      00000000 
 2609      00000025 
 2609      0B09
 2610 000e 01       		.ascii	"\001"
 2611              		.section	.rodata.lcd_reg_data24.16828,"a"
 2612              		.align	2
 2615              	lcd_reg_data24.16828:
 2616 0000 26000000 		.ascii	"&\000\000\000\000\000\000\000\000\000\000\000\000\000"
 2616      00000000 
 2616      00000000 
 2616      0000
 2617 000e 00       		.ascii	"\000"
 2618              		.section	.rodata.lcd_reg_data25.16829,"a"
 2619              		.align	2
 2622              	lcd_reg_data25.16829:
 2623 0000 FFFFFF   		.ascii	"\377\377\377"
 2624              		.section	.rodata.lcd_reg_data3.16807,"a"
 2625              		.align	2
 2628              	lcd_reg_data3.16807:
 2629 0000 00090F0E 		.ascii	"\000\011\017\016\007\020\013\012\004\007\013\010\017"
 2629      07100B0A 
 2629      04070B08 
 2629      0F
 2630 000d 100A01   		.ascii	"\020\012\001"
 2631              		.section	.rodata.lcd_reg_data4.16808,"a"
 2632              		.align	2
 2635              	lcd_reg_data4.16808:
 2636 0000 00090F0E 		.ascii	"\000\011\017\016\007\020\013\012\004\007\013\010\017"
 2636      07100B0A 
 2636      04070B08 
 2636      0F
 2637 000d 100A01   		.ascii	"\020\012\001"
 2638              		.section	.bss.LPCmd.16804,"aw",%nobits
 2639              		.align	2
 2642              	LPCmd.16804:
 2643 0000 00000000 		.space	52
 2643      00000000 
 2643      00000000 
 2643      00000000 
 2643      00000000 
 2644              		.text
 2645              	.Letext0:
 2646              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2647              		.file 3 "./Libraries/CMSIS/Core/Include/core_cm7.h"
 2648              		.file 4 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 2649              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2650              		.file 6 "/usr/include/newlib/sys/_types.h"
 2651              		.file 7 "/usr/include/newlib/sys/reent.h"
 2652              		.file 8 "/usr/include/newlib/sys/lock.h"
 2653              		.file 9 "/usr/include/newlib/math.h"
 2654              		.file 10 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 2655              		.file 11 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dsi.h"
 2656              		.file 12 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 2657              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
ARM GAS  /tmp/cc3dkcfp.s 			page 58


 2658              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 2659              		.file 15 "/usr/include/newlib/stdlib.h"
 2660              		.file 16 "./BSP/Components/Src/../../Components/Inc/lcd.h"
ARM GAS  /tmp/cc3dkcfp.s 			page 59


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lcd.c
     /tmp/cc3dkcfp.s:21     .data.LCD_Driver:0000000000000000 LCD_Driver
     /tmp/cc3dkcfp.s:18     .data.LCD_Driver:0000000000000000 $d
     /tmp/cc3dkcfp.s:1073   .text.LCD_Init:0000000000000000 LCD_Init
     /tmp/cc3dkcfp.s:371    .text.LCD_ReadID:0000000000000000 LCD_ReadID
     /tmp/cc3dkcfp.s:573    .text.LCD_DisplayOn:0000000000000000 LCD_DisplayOn
     /tmp/cc3dkcfp.s:637    .text.LCD_DisplayOff:0000000000000000 LCD_DisplayOff
     /tmp/cc3dkcfp.s:433    .text.LCD_SetBrightness:0000000000000000 LCD_SetBrightness
     /tmp/cc3dkcfp.s:517    .text.LCD_GetBrightness:0000000000000000 LCD_GetBrightness
     /tmp/cc3dkcfp.s:701    .text.LCD_SetOrientation:0000000000000000 LCD_SetOrientation
     /tmp/cc3dkcfp.s:855    .text.LCD_GetOrientation:0000000000000000 LCD_GetOrientation
     /tmp/cc3dkcfp.s:911    .text.LCD_GetXSize:0000000000000000 LCD_GetXSize
     /tmp/cc3dkcfp.s:992    .text.LCD_GetYSize:0000000000000000 LCD_GetYSize
     /tmp/cc3dkcfp.s:34     .bss.LCD_object:0000000000000000 $d
     /tmp/cc3dkcfp.s:37     .bss.LCD_object:0000000000000000 LCD_object
     /tmp/cc3dkcfp.s:40     .bss.LCDACtx:0000000000000000 $d
     /tmp/cc3dkcfp.s:43     .bss.LCDACtx:0000000000000000 LCDACtx
     /tmp/cc3dkcfp.s:46     .rodata.LcdRegData27:0000000000000000 $d
     /tmp/cc3dkcfp.s:49     .rodata.LcdRegData27:0000000000000000 LcdRegData27
     /tmp/cc3dkcfp.s:52     .rodata.LcdRegData28:0000000000000000 $d
     /tmp/cc3dkcfp.s:55     .rodata.LcdRegData28:0000000000000000 LcdRegData28
     /tmp/cc3dkcfp.s:58     .text.LCD_ReadRegWrap:0000000000000000 $t
     /tmp/cc3dkcfp.s:65     .text.LCD_ReadRegWrap:0000000000000000 LCD_ReadRegWrap
     /tmp/cc3dkcfp.s:120    .text.LCD_WriteRegWrap:0000000000000000 $t
     /tmp/cc3dkcfp.s:126    .text.LCD_WriteRegWrap:0000000000000000 LCD_WriteRegWrap
     /tmp/cc3dkcfp.s:180    .text.LCD_IO_Delay:0000000000000000 $t
     /tmp/cc3dkcfp.s:186    .text.LCD_IO_Delay:0000000000000000 LCD_IO_Delay
     /tmp/cc3dkcfp.s:248    .text.LCD_read_reg:0000000000000000 $t
     /tmp/cc3dkcfp.s:255    .text.LCD_read_reg:0000000000000000 LCD_read_reg
     /tmp/cc3dkcfp.s:306    .text.LCD_write_reg:0000000000000000 $t
     /tmp/cc3dkcfp.s:313    .text.LCD_write_reg:0000000000000000 LCD_write_reg
     /tmp/cc3dkcfp.s:364    .text.LCD_ReadID:0000000000000000 $t
     /tmp/cc3dkcfp.s:426    .text.LCD_SetBrightness:0000000000000000 $t
     /tmp/cc3dkcfp.s:504    .text.LCD_SetBrightness:0000000000000054 $d
     /tmp/cc3dkcfp.s:510    .text.LCD_GetBrightness:0000000000000000 $t
     /tmp/cc3dkcfp.s:561    .text.LCD_GetBrightness:0000000000000020 $d
     /tmp/cc3dkcfp.s:566    .text.LCD_DisplayOn:0000000000000000 $t
     /tmp/cc3dkcfp.s:630    .text.LCD_DisplayOff:0000000000000000 $t
     /tmp/cc3dkcfp.s:694    .text.LCD_SetOrientation:0000000000000000 $t
     /tmp/cc3dkcfp.s:841    .text.LCD_SetOrientation:00000000000000d8 $d
     /tmp/cc3dkcfp.s:848    .text.LCD_GetOrientation:0000000000000000 $t
     /tmp/cc3dkcfp.s:899    .text.LCD_GetOrientation:0000000000000020 $d
     /tmp/cc3dkcfp.s:904    .text.LCD_GetXSize:0000000000000000 $t
     /tmp/cc3dkcfp.s:980    .text.LCD_GetXSize:0000000000000044 $d
     /tmp/cc3dkcfp.s:985    .text.LCD_GetYSize:0000000000000000 $t
     /tmp/cc3dkcfp.s:1061   .text.LCD_GetYSize:0000000000000044 $d
     /tmp/cc3dkcfp.s:1066   .text.LCD_Init:0000000000000000 $t
     /tmp/cc3dkcfp.s:1490   .text.LCD_Init:00000000000002d4 $d
     /tmp/cc3dkcfp.s:2475   .rodata.short_reg_data.16830:0000000000000000 short_reg_data.16830
     /tmp/cc3dkcfp.s:2484   .rodata.lcd_reg_data1.16805:0000000000000000 lcd_reg_data1.16805
     /tmp/cc3dkcfp.s:2490   .rodata.lcd_reg_data2.16806:0000000000000000 lcd_reg_data2.16806
     /tmp/cc3dkcfp.s:2496   .rodata.lcd_reg_data5.16809:0000000000000000 lcd_reg_data5.16809
     /tmp/cc3dkcfp.s:1526   .text.LCD_Init:0000000000000360 $t
     /tmp/cc3dkcfp.s:1931   .text.LCD_Init:000000000000063c $d
     /tmp/cc3dkcfp.s:2502   .rodata.lcd_reg_data6.16810:0000000000000000 lcd_reg_data6.16810
     /tmp/cc3dkcfp.s:2508   .rodata.lcd_reg_data7.16811:0000000000000000 lcd_reg_data7.16811
ARM GAS  /tmp/cc3dkcfp.s 			page 60


     /tmp/cc3dkcfp.s:2514   .rodata.lcd_reg_data8.16812:0000000000000000 lcd_reg_data8.16812
     /tmp/cc3dkcfp.s:2520   .rodata.lcd_reg_data9.16813:0000000000000000 lcd_reg_data9.16813
     /tmp/cc3dkcfp.s:2526   .rodata.lcd_reg_data10.16814:0000000000000000 lcd_reg_data10.16814
     /tmp/cc3dkcfp.s:2532   .rodata.lcd_reg_data11.16815:0000000000000000 lcd_reg_data11.16815
     /tmp/cc3dkcfp.s:2538   .rodata.lcd_reg_data12.16816:0000000000000000 lcd_reg_data12.16816
     /tmp/cc3dkcfp.s:2544   .rodata.lcd_reg_data13.16817:0000000000000000 lcd_reg_data13.16817
     /tmp/cc3dkcfp.s:2550   .rodata.lcd_reg_data14.16818:0000000000000000 lcd_reg_data14.16818
     /tmp/cc3dkcfp.s:2556   .rodata.lcd_reg_data15.16819:0000000000000000 lcd_reg_data15.16819
     /tmp/cc3dkcfp.s:2563   .rodata.lcd_reg_data16.16820:0000000000000000 lcd_reg_data16.16820
     /tmp/cc3dkcfp.s:2570   .rodata.lcd_reg_data17.16821:0000000000000000 lcd_reg_data17.16821
     /tmp/cc3dkcfp.s:2576   .rodata.lcd_reg_data18.16822:0000000000000000 lcd_reg_data18.16822
     /tmp/cc3dkcfp.s:2582   .rodata.lcd_reg_data19.16823:0000000000000000 lcd_reg_data19.16823
     /tmp/cc3dkcfp.s:2588   .rodata.lcd_reg_data20.16824:0000000000000000 lcd_reg_data20.16824
     /tmp/cc3dkcfp.s:2595   .rodata.lcd_reg_data21.16825:0000000000000000 lcd_reg_data21.16825
     /tmp/cc3dkcfp.s:1962   .text.LCD_Init:00000000000006b4 $t
     /tmp/cc3dkcfp.s:2367   .text.LCD_Init:0000000000000988 $d
     /tmp/cc3dkcfp.s:2602   .rodata.lcd_reg_data22.16826:0000000000000000 lcd_reg_data22.16826
     /tmp/cc3dkcfp.s:2608   .rodata.lcd_reg_data23.16827:0000000000000000 lcd_reg_data23.16827
     /tmp/cc3dkcfp.s:2615   .rodata.lcd_reg_data24.16828:0000000000000000 lcd_reg_data24.16828
     /tmp/cc3dkcfp.s:2622   .rodata.lcd_reg_data25.16829:0000000000000000 lcd_reg_data25.16829
     /tmp/cc3dkcfp.s:2628   .rodata.lcd_reg_data3.16807:0000000000000000 lcd_reg_data3.16807
     /tmp/cc3dkcfp.s:2635   .rodata.lcd_reg_data4.16808:0000000000000000 lcd_reg_data4.16808
     /tmp/cc3dkcfp.s:2642   .bss.LPCmd.16804:0000000000000000 LPCmd.16804
     /tmp/cc3dkcfp.s:2400   .text.LCD_Init:0000000000000a08 $t
     /tmp/cc3dkcfp.s:2466   .text.LCD_Init:0000000000000a68 $d
     /tmp/cc3dkcfp.s:2472   .rodata.short_reg_data.16830:0000000000000000 $d
     /tmp/cc3dkcfp.s:2481   .rodata.lcd_reg_data1.16805:0000000000000000 $d
     /tmp/cc3dkcfp.s:2487   .rodata.lcd_reg_data2.16806:0000000000000000 $d
     /tmp/cc3dkcfp.s:2493   .rodata.lcd_reg_data5.16809:0000000000000000 $d
     /tmp/cc3dkcfp.s:2499   .rodata.lcd_reg_data6.16810:0000000000000000 $d
     /tmp/cc3dkcfp.s:2505   .rodata.lcd_reg_data7.16811:0000000000000000 $d
     /tmp/cc3dkcfp.s:2511   .rodata.lcd_reg_data8.16812:0000000000000000 $d
     /tmp/cc3dkcfp.s:2517   .rodata.lcd_reg_data9.16813:0000000000000000 $d
     /tmp/cc3dkcfp.s:2523   .rodata.lcd_reg_data10.16814:0000000000000000 $d
     /tmp/cc3dkcfp.s:2529   .rodata.lcd_reg_data11.16815:0000000000000000 $d
     /tmp/cc3dkcfp.s:2535   .rodata.lcd_reg_data12.16816:0000000000000000 $d
     /tmp/cc3dkcfp.s:2541   .rodata.lcd_reg_data13.16817:0000000000000000 $d
     /tmp/cc3dkcfp.s:2547   .rodata.lcd_reg_data14.16818:0000000000000000 $d
     /tmp/cc3dkcfp.s:2553   .rodata.lcd_reg_data15.16819:0000000000000000 $d
     /tmp/cc3dkcfp.s:2560   .rodata.lcd_reg_data16.16820:0000000000000000 $d
     /tmp/cc3dkcfp.s:2567   .rodata.lcd_reg_data17.16821:0000000000000000 $d
     /tmp/cc3dkcfp.s:2573   .rodata.lcd_reg_data18.16822:0000000000000000 $d
     /tmp/cc3dkcfp.s:2579   .rodata.lcd_reg_data19.16823:0000000000000000 $d
     /tmp/cc3dkcfp.s:2585   .rodata.lcd_reg_data20.16824:0000000000000000 $d
     /tmp/cc3dkcfp.s:2592   .rodata.lcd_reg_data21.16825:0000000000000000 $d
     /tmp/cc3dkcfp.s:2599   .rodata.lcd_reg_data22.16826:0000000000000000 $d
     /tmp/cc3dkcfp.s:2605   .rodata.lcd_reg_data23.16827:0000000000000000 $d
     /tmp/cc3dkcfp.s:2612   .rodata.lcd_reg_data24.16828:0000000000000000 $d
     /tmp/cc3dkcfp.s:2619   .rodata.lcd_reg_data25.16829:0000000000000000 $d
     /tmp/cc3dkcfp.s:2625   .rodata.lcd_reg_data3.16807:0000000000000000 $d
     /tmp/cc3dkcfp.s:2632   .rodata.lcd_reg_data4.16808:0000000000000000 $d
     /tmp/cc3dkcfp.s:2639   .bss.LPCmd.16804:0000000000000000 $d

UNDEFINED SYMBOLS
LTDC_DSI_Init
DSI_IO_Write
DSI_IO_Read
ARM GAS  /tmp/cc3dkcfp.s 			page 61


HAL_GetTick
DSI_Config_Channel
DSI_IO_WriteCmd
LCD_LayerInit
LTDC_Set_Pitch
LTDC_Enable
