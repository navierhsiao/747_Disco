ARM GAS  /tmp/cc9FsJVQ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stream_buffer.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.xStreamBufferGenericCreate,"ax",%progbits
  17              		.align	1
  18              		.global	xStreamBufferGenericCreate
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	xStreamBufferGenericCreate:
  26              	.LFB4:
  27              		.file 1 "./Libraries/FreeRTOS/Source/stream_buffer.c"
   1:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*
   2:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * FreeRTOS Kernel V10.3.1
   3:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:./Libraries/FreeRTOS/Source/stream_buffer.c ****  *
   5:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * the Software without restriction, including without limitation the rights to
   8:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * subject to the following conditions:
  11:./Libraries/FreeRTOS/Source/stream_buffer.c ****  *
  12:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * The above copyright notice and this permission notice shall be included in all
  13:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * copies or substantial portions of the Software.
  14:./Libraries/FreeRTOS/Source/stream_buffer.c ****  *
  15:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:./Libraries/FreeRTOS/Source/stream_buffer.c ****  *
  22:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * http://www.FreeRTOS.org
  23:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * http://aws.amazon.com/freertos
  24:./Libraries/FreeRTOS/Source/stream_buffer.c ****  *
  25:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * 1 tab == 4 spaces!
  26:./Libraries/FreeRTOS/Source/stream_buffer.c ****  */
  27:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
  28:./Libraries/FreeRTOS/Source/stream_buffer.c **** /* Standard includes. */
  29:./Libraries/FreeRTOS/Source/stream_buffer.c **** #include <stdint.h>
  30:./Libraries/FreeRTOS/Source/stream_buffer.c **** #include <string.h>
  31:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
ARM GAS  /tmp/cc9FsJVQ.s 			page 2


  32:./Libraries/FreeRTOS/Source/stream_buffer.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:./Libraries/FreeRTOS/Source/stream_buffer.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:./Libraries/FreeRTOS/Source/stream_buffer.c **** task.h is included from an application file. */
  35:./Libraries/FreeRTOS/Source/stream_buffer.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
  37:./Libraries/FreeRTOS/Source/stream_buffer.c **** /* FreeRTOS includes. */
  38:./Libraries/FreeRTOS/Source/stream_buffer.c **** #include "FreeRTOS.h"
  39:./Libraries/FreeRTOS/Source/stream_buffer.c **** #include "task.h"
  40:./Libraries/FreeRTOS/Source/stream_buffer.c **** #include "stream_buffer.h"
  41:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
  42:./Libraries/FreeRTOS/Source/stream_buffer.c **** #if( configUSE_TASK_NOTIFICATIONS != 1 )
  43:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	#error configUSE_TASK_NOTIFICATIONS must be set to 1 to build stream_buffer.c
  44:./Libraries/FreeRTOS/Source/stream_buffer.c **** #endif
  45:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
  46:./Libraries/FreeRTOS/Source/stream_buffer.c **** /* Lint e961, e9021 and e750 are suppressed as a MISRA exception justified
  47:./Libraries/FreeRTOS/Source/stream_buffer.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  48:./Libraries/FreeRTOS/Source/stream_buffer.c **** for the header files above, but not in this file, in order to generate the
  49:./Libraries/FreeRTOS/Source/stream_buffer.c **** correct privileged Vs unprivileged linkage and placement. */
  50:./Libraries/FreeRTOS/Source/stream_buffer.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  51:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
  52:./Libraries/FreeRTOS/Source/stream_buffer.c **** /* If the user has not provided application specific Rx notification macros,
  53:./Libraries/FreeRTOS/Source/stream_buffer.c **** or #defined the notification macros away, them provide default implementations
  54:./Libraries/FreeRTOS/Source/stream_buffer.c **** that uses task notifications. */
  55:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*lint -save -e9026 Function like macros allowed and needed here so they can be overidden. */
  56:./Libraries/FreeRTOS/Source/stream_buffer.c **** #ifndef sbRECEIVE_COMPLETED
  57:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	#define sbRECEIVE_COMPLETED( pxStreamBuffer )										\
  58:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		vTaskSuspendAll();																\
  59:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{																				\
  60:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )						\
  61:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			{																			\
  62:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				( void ) xTaskNotify( ( pxStreamBuffer )->xTaskWaitingToSend,			\
  63:./Libraries/FreeRTOS/Source/stream_buffer.c **** 									  ( uint32_t ) 0,									\
  64:./Libraries/FreeRTOS/Source/stream_buffer.c **** 									  eNoAction );										\
  65:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				( pxStreamBuffer )->xTaskWaitingToSend = NULL;							\
  66:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			}																			\
  67:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}																				\
  68:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		( void ) xTaskResumeAll();
  69:./Libraries/FreeRTOS/Source/stream_buffer.c **** #endif /* sbRECEIVE_COMPLETED */
  70:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
  71:./Libraries/FreeRTOS/Source/stream_buffer.c **** #ifndef sbRECEIVE_COMPLETED_FROM_ISR
  72:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	#define sbRECEIVE_COMPLETED_FROM_ISR( pxStreamBuffer,								\
  73:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										  pxHigherPriorityTaskWoken )					\
  74:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{																					\
  75:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	UBaseType_t uxSavedInterruptStatus;													\
  76:./Libraries/FreeRTOS/Source/stream_buffer.c **** 																						\
  77:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();		\
  78:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{																				\
  79:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )						\
  80:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			{																			\
  81:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToSend,	\
  82:./Libraries/FreeRTOS/Source/stream_buffer.c **** 											 ( uint32_t ) 0,							\
  83:./Libraries/FreeRTOS/Source/stream_buffer.c **** 											 eNoAction,									\
  84:./Libraries/FreeRTOS/Source/stream_buffer.c **** 											 pxHigherPriorityTaskWoken );				\
  85:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				( pxStreamBuffer )->xTaskWaitingToSend = NULL;							\
  86:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			}																			\
  87:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}																				\
  88:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );					\
ARM GAS  /tmp/cc9FsJVQ.s 			page 3


  89:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
  90:./Libraries/FreeRTOS/Source/stream_buffer.c **** #endif /* sbRECEIVE_COMPLETED_FROM_ISR */
  91:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
  92:./Libraries/FreeRTOS/Source/stream_buffer.c **** /* If the user has not provided an application specific Tx notification macro,
  93:./Libraries/FreeRTOS/Source/stream_buffer.c **** or #defined the notification macro away, them provide a default implementation
  94:./Libraries/FreeRTOS/Source/stream_buffer.c **** that uses task notifications. */
  95:./Libraries/FreeRTOS/Source/stream_buffer.c **** #ifndef sbSEND_COMPLETED
  96:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	#define sbSEND_COMPLETED( pxStreamBuffer )											\
  97:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		vTaskSuspendAll();																\
  98:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{																				\
  99:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )						\
 100:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			{																			\
 101:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				( void ) xTaskNotify( ( pxStreamBuffer )->xTaskWaitingToReceive,		\
 102:./Libraries/FreeRTOS/Source/stream_buffer.c **** 									  ( uint32_t ) 0,									\
 103:./Libraries/FreeRTOS/Source/stream_buffer.c **** 									  eNoAction );										\
 104:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				( pxStreamBuffer )->xTaskWaitingToReceive = NULL;						\
 105:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			}																			\
 106:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}																				\
 107:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		( void ) xTaskResumeAll();
 108:./Libraries/FreeRTOS/Source/stream_buffer.c **** #endif /* sbSEND_COMPLETED */
 109:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 110:./Libraries/FreeRTOS/Source/stream_buffer.c **** #ifndef sbSEND_COMPLETE_FROM_ISR
 111:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	#define sbSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken )		\
 112:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{																					\
 113:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	UBaseType_t uxSavedInterruptStatus;													\
 114:./Libraries/FreeRTOS/Source/stream_buffer.c **** 																						\
 115:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();		\
 116:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{																				\
 117:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )						\
 118:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			{																			\
 119:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToReceive,	\
 120:./Libraries/FreeRTOS/Source/stream_buffer.c **** 											 ( uint32_t ) 0,							\
 121:./Libraries/FreeRTOS/Source/stream_buffer.c **** 											 eNoAction,									\
 122:./Libraries/FreeRTOS/Source/stream_buffer.c **** 											 pxHigherPriorityTaskWoken );				\
 123:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				( pxStreamBuffer )->xTaskWaitingToReceive = NULL;						\
 124:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			}																			\
 125:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}																				\
 126:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );					\
 127:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 128:./Libraries/FreeRTOS/Source/stream_buffer.c **** #endif /* sbSEND_COMPLETE_FROM_ISR */
 129:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*lint -restore (9026) */
 130:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 131:./Libraries/FreeRTOS/Source/stream_buffer.c **** /* The number of bytes used to hold the length of a message in the buffer. */
 132:./Libraries/FreeRTOS/Source/stream_buffer.c **** #define sbBYTES_TO_STORE_MESSAGE_LENGTH ( sizeof( configMESSAGE_BUFFER_LENGTH_TYPE ) )
 133:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 134:./Libraries/FreeRTOS/Source/stream_buffer.c **** /* Bits stored in the ucFlags field of the stream buffer. */
 135:./Libraries/FreeRTOS/Source/stream_buffer.c **** #define sbFLAGS_IS_MESSAGE_BUFFER		( ( uint8_t ) 1 ) /* Set if the stream buffer was created as a m
 136:./Libraries/FreeRTOS/Source/stream_buffer.c **** #define sbFLAGS_IS_STATICALLY_ALLOCATED ( ( uint8_t ) 2 ) /* Set if the stream buffer was created u
 137:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 138:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 139:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 140:./Libraries/FreeRTOS/Source/stream_buffer.c **** /* Structure that hold state information on the buffer. */
 141:./Libraries/FreeRTOS/Source/stream_buffer.c **** typedef struct StreamBufferDef_t /*lint !e9058 Style convention uses tag. */
 142:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 143:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	volatile size_t xTail;				/* Index to the next item to read within the buffer. */
 144:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	volatile size_t xHead;				/* Index to the next item to write within the buffer. */
 145:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	size_t xLength;						/* The length of the buffer pointed to by pucBuffer. */
ARM GAS  /tmp/cc9FsJVQ.s 			page 4


 146:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	size_t xTriggerLevelBytes;			/* The number of bytes that must be in the stream buffer before a tas
 147:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	volatile TaskHandle_t xTaskWaitingToReceive; /* Holds the handle of a task waiting for data, or NU
 148:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	volatile TaskHandle_t xTaskWaitingToSend;	/* Holds the handle of a task waiting to send data to a 
 149:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	uint8_t *pucBuffer;					/* Points to the buffer itself - that is - the RAM that stores the data pa
 150:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	uint8_t ucFlags;
 151:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 152:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 153:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		UBaseType_t uxStreamBufferNumber;		/* Used for tracing purposes. */
 154:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	#endif
 155:./Libraries/FreeRTOS/Source/stream_buffer.c **** } StreamBuffer_t;
 156:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 157:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*
 158:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * The number of bytes available to be read from the buffer.
 159:./Libraries/FreeRTOS/Source/stream_buffer.c ****  */
 160:./Libraries/FreeRTOS/Source/stream_buffer.c **** static size_t prvBytesInBuffer( const StreamBuffer_t * const pxStreamBuffer ) PRIVILEGED_FUNCTION;
 161:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 162:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*
 163:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * Add xCount bytes from pucData into the pxStreamBuffer message buffer.
 164:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * Returns the number of bytes written, which will either equal xCount in the
 165:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * success case, or 0 if there was not enough space in the buffer (in which case
 166:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * no data is written into the buffer).
 167:./Libraries/FreeRTOS/Source/stream_buffer.c ****  */
 168:./Libraries/FreeRTOS/Source/stream_buffer.c **** static size_t prvWriteBytesToBuffer( StreamBuffer_t * const pxStreamBuffer, const uint8_t *pucData,
 169:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 170:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*
 171:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * If the stream buffer is being used as a message buffer, then reads an entire
 172:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * message out of the buffer.  If the stream buffer is being used as a stream
 173:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * buffer then read as many bytes as possible from the buffer.
 174:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * prvReadBytesFromBuffer() is called to actually extract the bytes from the
 175:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * buffer's data storage area.
 176:./Libraries/FreeRTOS/Source/stream_buffer.c ****  */
 177:./Libraries/FreeRTOS/Source/stream_buffer.c **** static size_t prvReadMessageFromBuffer( StreamBuffer_t *pxStreamBuffer,
 178:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										void *pvRxData,
 179:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										size_t xBufferLengthBytes,
 180:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										size_t xBytesAvailable,
 181:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										size_t xBytesToStoreMessageLength ) PRIVILEGED_FUNCTION;
 182:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 183:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*
 184:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * If the stream buffer is being used as a message buffer, then writes an entire
 185:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * message to the buffer.  If the stream buffer is being used as a stream
 186:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * buffer then write as many bytes as possible to the buffer.
 187:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * prvWriteBytestoBuffer() is called to actually send the bytes to the buffer's
 188:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * data storage area.
 189:./Libraries/FreeRTOS/Source/stream_buffer.c ****  */
 190:./Libraries/FreeRTOS/Source/stream_buffer.c **** static size_t prvWriteMessageToBuffer(  StreamBuffer_t * const pxStreamBuffer,
 191:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										const void * pvTxData,
 192:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										size_t xDataLengthBytes,
 193:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										size_t xSpace,
 194:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										size_t xRequiredSpace ) PRIVILEGED_FUNCTION;
 195:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 196:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*
 197:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * Read xMaxCount bytes from the pxStreamBuffer message buffer and write them
 198:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * to pucData.
 199:./Libraries/FreeRTOS/Source/stream_buffer.c ****  */
 200:./Libraries/FreeRTOS/Source/stream_buffer.c **** static size_t prvReadBytesFromBuffer( StreamBuffer_t *pxStreamBuffer,
 201:./Libraries/FreeRTOS/Source/stream_buffer.c **** 									  uint8_t *pucData,
 202:./Libraries/FreeRTOS/Source/stream_buffer.c **** 									  size_t xMaxCount,
ARM GAS  /tmp/cc9FsJVQ.s 			page 5


 203:./Libraries/FreeRTOS/Source/stream_buffer.c **** 									  size_t xBytesAvailable ) PRIVILEGED_FUNCTION;
 204:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 205:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*
 206:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * Called by both pxStreamBufferCreate() and pxStreamBufferCreateStatic() to
 207:./Libraries/FreeRTOS/Source/stream_buffer.c ****  * initialise the members of the newly created stream buffer structure.
 208:./Libraries/FreeRTOS/Source/stream_buffer.c ****  */
 209:./Libraries/FreeRTOS/Source/stream_buffer.c **** static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,
 210:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										  uint8_t * const pucBuffer,
 211:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										  size_t xBufferSizeBytes,
 212:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										  size_t xTriggerLevelBytes,
 213:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										  uint8_t ucFlags ) PRIVILEGED_FUNCTION;
 214:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 215:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 216:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 217:./Libraries/FreeRTOS/Source/stream_buffer.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 218:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 219:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	StreamBufferHandle_t xStreamBufferGenericCreate( size_t xBufferSizeBytes, size_t xTriggerLevelByte
 220:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
  28              		.loc 1 220 2
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 8CB0     		sub	sp, sp, #48
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 56
  40 0004 02AF     		add	r7, sp, #8
  41              	.LCFI2:
  42              		.cfi_def_cfa 7, 48
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
 221:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	uint8_t *pucAllocatedMemory;
 222:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	uint8_t ucFlags;
 223:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 224:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* In case the stream buffer is going to be used as a message buffer
 225:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		(that is, it will hold discrete messages with a little meta data that
 226:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		says how big the next message is) check the buffer will be large enough
 227:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		to hold at least one message. */
 228:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( xIsMessageBuffer == pdTRUE )
  46              		.loc 1 228 5
  47 000c 7B68     		ldr	r3, [r7, #4]
  48 000e 012B     		cmp	r3, #1
  49 0010 10D1     		bne	.L2
 229:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 230:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			/* Is a message buffer but not statically allocated. */
 231:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			ucFlags = sbFLAGS_IS_MESSAGE_BUFFER;
  50              		.loc 1 231 12
  51 0012 0123     		movs	r3, #1
  52 0014 87F82730 		strb	r3, [r7, #39]
 232:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
  53              		.loc 1 232 4
  54 0018 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc9FsJVQ.s 			page 6


  55 001a 042B     		cmp	r3, #4
  56 001c 1BD8     		bhi	.L3
  57              	.LBB96:
  58              	.LBB97:
  59              		.file 2 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
ARM GAS  /tmp/cc9FsJVQ.s 			page 7


  53:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
ARM GAS  /tmp/cc9FsJVQ.s 			page 8


 110:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
ARM GAS  /tmp/cc9FsJVQ.s 			page 9


 167:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
  60              		.loc 2 195 2
  61              		.syntax unified
  62              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  63 001e 4FF05003 			mov r3, #80												
  64 0022 83F31188 		msr basepri, r3											
  65 0026 BFF36F8F 		isb														
  66 002a BFF34F8F 		dsb														
  67              	
  68              	@ 0 "" 2
  69              		.thumb
  70              		.syntax unified
  71 002e FB61     		str	r3, [r7, #28]
 196:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  72              		.loc 2 203 1
  73 0030 00BF     		nop
  74              	.L4:
  75              	.LBE97:
  76              	.LBE96:
  77              		.loc 1 232 4 discriminator 1
  78 0032 FEE7     		b	.L4
  79              	.L2:
ARM GAS  /tmp/cc9FsJVQ.s 			page 10


 233:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 234:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		else
 235:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 236:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			/* Not a message buffer and not statically allocated. */
 237:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			ucFlags = 0;
  80              		.loc 1 237 12
  81 0034 0023     		movs	r3, #0
  82 0036 87F82730 		strb	r3, [r7, #39]
 238:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			configASSERT( xBufferSizeBytes > 0 );
  83              		.loc 1 238 4
  84 003a FB68     		ldr	r3, [r7, #12]
  85 003c 002B     		cmp	r3, #0
  86 003e 0AD1     		bne	.L3
  87              	.LBB98:
  88              	.LBB99:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
  89              		.loc 2 195 2
  90              		.syntax unified
  91              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  92 0040 4FF05003 			mov r3, #80												
  93 0044 83F31188 		msr basepri, r3											
  94 0048 BFF36F8F 		isb														
  95 004c BFF34F8F 		dsb														
  96              	
  97              	@ 0 "" 2
  98              		.thumb
  99              		.syntax unified
 100 0050 BB61     		str	r3, [r7, #24]
 101              		.loc 2 203 1
 102 0052 00BF     		nop
 103              	.L5:
 104              	.LBE99:
 105              	.LBE98:
 106              		.loc 1 238 4 discriminator 2
 107 0054 FEE7     		b	.L5
 108              	.L3:
 239:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 240:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		configASSERT( xTriggerLevelBytes <= xBufferSizeBytes );
 109              		.loc 1 240 3
 110 0056 BA68     		ldr	r2, [r7, #8]
 111 0058 FB68     		ldr	r3, [r7, #12]
 112 005a 9A42     		cmp	r2, r3
 113 005c 0AD9     		bls	.L6
 114              	.LBB100:
 115              	.LBB101:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 116              		.loc 2 195 2
 117              		.syntax unified
 118              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 119 005e 4FF05003 			mov r3, #80												
 120 0062 83F31188 		msr basepri, r3											
 121 0066 BFF36F8F 		isb														
 122 006a BFF34F8F 		dsb														
 123              	
 124              	@ 0 "" 2
 125              		.thumb
 126              		.syntax unified
ARM GAS  /tmp/cc9FsJVQ.s 			page 11


 127 006e 7B61     		str	r3, [r7, #20]
 128              		.loc 2 203 1
 129 0070 00BF     		nop
 130              	.L7:
 131              	.LBE101:
 132              	.LBE100:
 133              		.loc 1 240 3 discriminator 3
 134 0072 FEE7     		b	.L7
 135              	.L6:
 241:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 242:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* A trigger level of 0 would cause a waiting task to unblock even when
 243:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		the buffer was empty. */
 244:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( xTriggerLevelBytes == ( size_t ) 0 )
 136              		.loc 1 244 5
 137 0074 BB68     		ldr	r3, [r7, #8]
 138 0076 002B     		cmp	r3, #0
 139 0078 01D1     		bne	.L8
 245:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 246:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			xTriggerLevelBytes = ( size_t ) 1;
 140              		.loc 1 246 23
 141 007a 0123     		movs	r3, #1
 142 007c BB60     		str	r3, [r7, #8]
 143              	.L8:
 247:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 248:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 249:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* A stream buffer requires a StreamBuffer_t structure and a buffer.
 250:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		Both are allocated in a single call to pvPortMalloc().  The
 251:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		StreamBuffer_t structure is placed at the start of the allocated memory
 252:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		and the buffer follows immediately after.  The requested size is
 253:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		incremented so the free space is returned as the user would expect -
 254:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		this is a quirk of the implementation that means otherwise the free
 255:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		space would be reported as one byte smaller than would be logically
 256:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		expected. */
 257:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xBufferSizeBytes++;
 144              		.loc 1 257 19
 145 007e FB68     		ldr	r3, [r7, #12]
 146 0080 0133     		adds	r3, r3, #1
 147 0082 FB60     		str	r3, [r7, #12]
 258:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffer_t ) ); /
 148              		.loc 1 258 38
 149 0084 FB68     		ldr	r3, [r7, #12]
 150 0086 2433     		adds	r3, r3, #36
 151 0088 1846     		mov	r0, r3
 152 008a FFF7FEFF 		bl	pvPortMalloc
 153 008e 3862     		str	r0, [r7, #32]
 259:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 260:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( pucAllocatedMemory != NULL )
 154              		.loc 1 260 5
 155 0090 3B6A     		ldr	r3, [r7, #32]
 156 0092 002B     		cmp	r3, #0
 157 0094 0AD0     		beq	.L9
 261:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 262:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			prvInitialiseNewStreamBuffer( ( StreamBuffer_t * ) pucAllocatedMemory, /* Structure at the start
 158              		.loc 1 262 4
 159 0096 3B6A     		ldr	r3, [r7, #32]
 160 0098 03F12401 		add	r1, r3, #36
 161 009c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
ARM GAS  /tmp/cc9FsJVQ.s 			page 12


 162 00a0 0093     		str	r3, [sp]
 163 00a2 BB68     		ldr	r3, [r7, #8]
 164 00a4 FA68     		ldr	r2, [r7, #12]
 165 00a6 386A     		ldr	r0, [r7, #32]
 166 00a8 FFF7FEFF 		bl	prvInitialiseNewStreamBuffer
 167              	.L9:
 263:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										   pucAllocatedMemory + sizeof( StreamBuffer_t ),  /* Storage area follows. */ /*lint !e9
 264:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										   xBufferSizeBytes,
 265:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										   xTriggerLevelBytes,
 266:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										   ucFlags );
 267:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 268:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			traceSTREAM_BUFFER_CREATE( ( ( StreamBuffer_t * ) pucAllocatedMemory ), xIsMessageBuffer );
 269:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 270:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		else
 271:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 272:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			traceSTREAM_BUFFER_CREATE_FAILED( xIsMessageBuffer );
 273:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 274:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 275:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		return ( StreamBufferHandle_t ) pucAllocatedMemory; /*lint !e9087 !e826 Safe cast as allocated me
 168              		.loc 1 275 10
 169 00ac 3B6A     		ldr	r3, [r7, #32]
 276:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 170              		.loc 1 276 2
 171 00ae 1846     		mov	r0, r3
 172 00b0 2837     		adds	r7, r7, #40
 173              	.LCFI3:
 174              		.cfi_def_cfa_offset 8
 175 00b2 BD46     		mov	sp, r7
 176              	.LCFI4:
 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 00b4 80BD     		pop	{r7, pc}
 180              		.cfi_endproc
 181              	.LFE4:
 183              		.section	.text.xStreamBufferGenericCreateStatic,"ax",%progbits
 184              		.align	1
 185              		.global	xStreamBufferGenericCreateStatic
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv5-d16
 191              	xStreamBufferGenericCreateStatic:
 192              	.LFB5:
 277:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 278:./Libraries/FreeRTOS/Source/stream_buffer.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 279:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 280:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 281:./Libraries/FreeRTOS/Source/stream_buffer.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 282:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 283:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	StreamBufferHandle_t xStreamBufferGenericCreateStatic( size_t xBufferSizeBytes,
 284:./Libraries/FreeRTOS/Source/stream_buffer.c **** 														   size_t xTriggerLevelBytes,
 285:./Libraries/FreeRTOS/Source/stream_buffer.c **** 														   BaseType_t xIsMessageBuffer,
 286:./Libraries/FreeRTOS/Source/stream_buffer.c **** 														   uint8_t * const pucStreamBufferStorageArea,
 287:./Libraries/FreeRTOS/Source/stream_buffer.c **** 														   StaticStreamBuffer_t * const pxStaticStreamBuffer )
 288:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 193              		.loc 1 288 2
 194              		.cfi_startproc
ARM GAS  /tmp/cc9FsJVQ.s 			page 13


 195              		@ args = 4, pretend = 0, frame = 56
 196              		@ frame_needed = 1, uses_anonymous_args = 0
 197 0000 80B5     		push	{r7, lr}
 198              	.LCFI5:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 7, -8
 201              		.cfi_offset 14, -4
 202 0002 90B0     		sub	sp, sp, #64
 203              	.LCFI6:
 204              		.cfi_def_cfa_offset 72
 205 0004 02AF     		add	r7, sp, #8
 206              	.LCFI7:
 207              		.cfi_def_cfa 7, 64
 208 0006 F860     		str	r0, [r7, #12]
 209 0008 B960     		str	r1, [r7, #8]
 210 000a 7A60     		str	r2, [r7, #4]
 211 000c 3B60     		str	r3, [r7]
 289:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	StreamBuffer_t * const pxStreamBuffer = ( StreamBuffer_t * ) pxStaticStreamBuffer; /*lint !e740 !e
 212              		.loc 1 289 25
 213 000e 3B6C     		ldr	r3, [r7, #64]
 214 0010 FB62     		str	r3, [r7, #44]
 290:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	StreamBufferHandle_t xReturn;
 291:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	uint8_t ucFlags;
 292:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 293:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		configASSERT( pucStreamBufferStorageArea );
 215              		.loc 1 293 3
 216 0012 3B68     		ldr	r3, [r7]
 217 0014 002B     		cmp	r3, #0
 218 0016 0AD1     		bne	.L12
 219              	.LBB102:
 220              	.LBB103:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 221              		.loc 2 195 2
 222              		.syntax unified
 223              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 224 0018 4FF05003 			mov r3, #80												
 225 001c 83F31188 		msr basepri, r3											
 226 0020 BFF36F8F 		isb														
 227 0024 BFF34F8F 		dsb														
 228              	
 229              	@ 0 "" 2
 230              		.thumb
 231              		.syntax unified
 232 0028 BB62     		str	r3, [r7, #40]
 233              		.loc 2 203 1
 234 002a 00BF     		nop
 235              	.L13:
 236              	.LBE103:
 237              	.LBE102:
 238              		.loc 1 293 3 discriminator 1
 239 002c FEE7     		b	.L13
 240              	.L12:
 294:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		configASSERT( pxStaticStreamBuffer );
 241              		.loc 1 294 3
 242 002e 3B6C     		ldr	r3, [r7, #64]
 243 0030 002B     		cmp	r3, #0
 244 0032 0AD1     		bne	.L14
ARM GAS  /tmp/cc9FsJVQ.s 			page 14


 245              	.LBB104:
 246              	.LBB105:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 247              		.loc 2 195 2
 248              		.syntax unified
 249              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 250 0034 4FF05003 			mov r3, #80												
 251 0038 83F31188 		msr basepri, r3											
 252 003c BFF36F8F 		isb														
 253 0040 BFF34F8F 		dsb														
 254              	
 255              	@ 0 "" 2
 256              		.thumb
 257              		.syntax unified
 258 0044 7B62     		str	r3, [r7, #36]
 259              		.loc 2 203 1
 260 0046 00BF     		nop
 261              	.L15:
 262              	.LBE105:
 263              	.LBE104:
 264              		.loc 1 294 3 discriminator 2
 265 0048 FEE7     		b	.L15
 266              	.L14:
 295:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		configASSERT( xTriggerLevelBytes <= xBufferSizeBytes );
 267              		.loc 1 295 3
 268 004a BA68     		ldr	r2, [r7, #8]
 269 004c FB68     		ldr	r3, [r7, #12]
 270 004e 9A42     		cmp	r2, r3
 271 0050 0AD9     		bls	.L16
 272              	.LBB106:
 273              	.LBB107:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 274              		.loc 2 195 2
 275              		.syntax unified
 276              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 277 0052 4FF05003 			mov r3, #80												
 278 0056 83F31188 		msr basepri, r3											
 279 005a BFF36F8F 		isb														
 280 005e BFF34F8F 		dsb														
 281              	
 282              	@ 0 "" 2
 283              		.thumb
 284              		.syntax unified
 285 0062 3B62     		str	r3, [r7, #32]
 286              		.loc 2 203 1
 287 0064 00BF     		nop
 288              	.L17:
 289              	.LBE107:
 290              	.LBE106:
 291              		.loc 1 295 3 discriminator 3
 292 0066 FEE7     		b	.L17
 293              	.L16:
 296:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 297:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* A trigger level of 0 would cause a waiting task to unblock even when
 298:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		the buffer was empty. */
 299:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( xTriggerLevelBytes == ( size_t ) 0 )
 294              		.loc 1 299 5
ARM GAS  /tmp/cc9FsJVQ.s 			page 15


 295 0068 BB68     		ldr	r3, [r7, #8]
 296 006a 002B     		cmp	r3, #0
 297 006c 01D1     		bne	.L18
 300:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 301:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			xTriggerLevelBytes = ( size_t ) 1;
 298              		.loc 1 301 23
 299 006e 0123     		movs	r3, #1
 300 0070 BB60     		str	r3, [r7, #8]
 301              	.L18:
 302:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 303:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 304:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( xIsMessageBuffer != pdFALSE )
 302              		.loc 1 304 5
 303 0072 7B68     		ldr	r3, [r7, #4]
 304 0074 002B     		cmp	r3, #0
 305 0076 03D0     		beq	.L19
 305:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 306:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			/* Statically allocated message buffer. */
 307:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			ucFlags = sbFLAGS_IS_MESSAGE_BUFFER | sbFLAGS_IS_STATICALLY_ALLOCATED;
 306              		.loc 1 307 12
 307 0078 0323     		movs	r3, #3
 308 007a 87F83330 		strb	r3, [r7, #51]
 309 007e 02E0     		b	.L20
 310              	.L19:
 308:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 309:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		else
 310:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 311:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			/* Statically allocated stream buffer. */
 312:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			ucFlags = sbFLAGS_IS_STATICALLY_ALLOCATED;
 311              		.loc 1 312 12
 312 0080 0223     		movs	r3, #2
 313 0082 87F83330 		strb	r3, [r7, #51]
 314              	.L20:
 313:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 314:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 315:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* In case the stream buffer is going to be used as a message buffer
 316:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		(that is, it will hold discrete messages with a little meta data that
 317:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		says how big the next message is) check the buffer will be large enough
 318:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		to hold at least one message. */
 319:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 315              		.loc 1 319 3
 316 0086 FB68     		ldr	r3, [r7, #12]
 317 0088 042B     		cmp	r3, #4
 318 008a 0AD8     		bhi	.L21
 319              	.LBB108:
 320              	.LBB109:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 321              		.loc 2 195 2
 322              		.syntax unified
 323              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 324 008c 4FF05003 			mov r3, #80												
 325 0090 83F31188 		msr basepri, r3											
 326 0094 BFF36F8F 		isb														
 327 0098 BFF34F8F 		dsb														
 328              	
 329              	@ 0 "" 2
 330              		.thumb
ARM GAS  /tmp/cc9FsJVQ.s 			page 16


 331              		.syntax unified
 332 009c FB61     		str	r3, [r7, #28]
 333              		.loc 2 203 1
 334 009e 00BF     		nop
 335              	.L22:
 336              	.LBE109:
 337              	.LBE108:
 338              		.loc 1 319 3 discriminator 4
 339 00a0 FEE7     		b	.L22
 340              	.L21:
 341              	.LBB110:
 320:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 321:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		#if( configASSERT_DEFINED == 1 )
 322:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 323:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			/* Sanity check that the size of the structure used to declare a
 324:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			variable of type StaticStreamBuffer_t equals the size of the real
 325:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			message buffer structure. */
 326:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			volatile size_t xSize = sizeof( StaticStreamBuffer_t );
 342              		.loc 1 326 20
 343 00a2 2423     		movs	r3, #36
 344 00a4 7B61     		str	r3, [r7, #20]
 327:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			configASSERT( xSize == sizeof( StreamBuffer_t ) );
 345              		.loc 1 327 4
 346 00a6 7B69     		ldr	r3, [r7, #20]
 347 00a8 242B     		cmp	r3, #36
 348 00aa 0AD0     		beq	.L23
 349              	.LBB111:
 350              	.LBB112:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 351              		.loc 2 195 2
 352              		.syntax unified
 353              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 354 00ac 4FF05003 			mov r3, #80												
 355 00b0 83F31188 		msr basepri, r3											
 356 00b4 BFF36F8F 		isb														
 357 00b8 BFF34F8F 		dsb														
 358              	
 359              	@ 0 "" 2
 360              		.thumb
 361              		.syntax unified
 362 00bc BB61     		str	r3, [r7, #24]
 363              		.loc 2 203 1
 364 00be 00BF     		nop
 365              	.L24:
 366              	.LBE112:
 367              	.LBE111:
 368              		.loc 1 327 4 discriminator 5
 369 00c0 FEE7     		b	.L24
 370              	.L23:
 371              	.LBE110:
 328:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		} /*lint !e529 xSize is referenced is configASSERT() is defined. */
 329:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		#endif /* configASSERT_DEFINED */
 330:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 331:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( ( pucStreamBufferStorageArea != NULL ) && ( pxStaticStreamBuffer != NULL ) )
 372              		.loc 1 331 5
 373 00c2 3B68     		ldr	r3, [r7]
 374 00c4 002B     		cmp	r3, #0
ARM GAS  /tmp/cc9FsJVQ.s 			page 17


 375 00c6 15D0     		beq	.L25
 376              		.loc 1 331 46 discriminator 1
 377 00c8 3B6C     		ldr	r3, [r7, #64]
 378 00ca 002B     		cmp	r3, #0
 379 00cc 12D0     		beq	.L25
 332:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 333:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			prvInitialiseNewStreamBuffer( pxStreamBuffer,
 380              		.loc 1 333 4
 381 00ce 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 382 00d2 0093     		str	r3, [sp]
 383 00d4 BB68     		ldr	r3, [r7, #8]
 384 00d6 FA68     		ldr	r2, [r7, #12]
 385 00d8 3968     		ldr	r1, [r7]
 386 00da F86A     		ldr	r0, [r7, #44]
 387 00dc FFF7FEFF 		bl	prvInitialiseNewStreamBuffer
 334:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										  pucStreamBufferStorageArea,
 335:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										  xBufferSizeBytes,
 336:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										  xTriggerLevelBytes,
 337:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										  ucFlags );
 338:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 339:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			/* Remember this was statically allocated in case it is ever deleted
 340:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			again. */
 341:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			pxStreamBuffer->ucFlags |= sbFLAGS_IS_STATICALLY_ALLOCATED;
 388              		.loc 1 341 28
 389 00e0 FB6A     		ldr	r3, [r7, #44]
 390 00e2 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 391 00e4 43F00203 		orr	r3, r3, #2
 392 00e8 DAB2     		uxtb	r2, r3
 393 00ea FB6A     		ldr	r3, [r7, #44]
 394 00ec 1A77     		strb	r2, [r3, #28]
 342:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 343:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			traceSTREAM_BUFFER_CREATE( pxStreamBuffer, xIsMessageBuffer );
 344:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 345:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			xReturn = ( StreamBufferHandle_t ) pxStaticStreamBuffer; /*lint !e9087 Data hiding requires cast
 395              		.loc 1 345 12
 396 00ee 3B6C     		ldr	r3, [r7, #64]
 397 00f0 7B63     		str	r3, [r7, #52]
 398 00f2 01E0     		b	.L26
 399              	.L25:
 346:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 347:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		else
 348:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 349:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			xReturn = NULL;
 400              		.loc 1 349 12
 401 00f4 0023     		movs	r3, #0
 402 00f6 7B63     		str	r3, [r7, #52]
 403              	.L26:
 350:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			traceSTREAM_BUFFER_CREATE_STATIC_FAILED( xReturn, xIsMessageBuffer );
 351:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 352:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 353:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		return xReturn;
 404              		.loc 1 353 10
 405 00f8 7B6B     		ldr	r3, [r7, #52]
 354:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 406              		.loc 1 354 2
 407 00fa 1846     		mov	r0, r3
 408 00fc 3837     		adds	r7, r7, #56
ARM GAS  /tmp/cc9FsJVQ.s 			page 18


 409              	.LCFI8:
 410              		.cfi_def_cfa_offset 8
 411 00fe BD46     		mov	sp, r7
 412              	.LCFI9:
 413              		.cfi_def_cfa_register 13
 414              		@ sp needed
 415 0100 80BD     		pop	{r7, pc}
 416              		.cfi_endproc
 417              	.LFE5:
 419              		.section	.text.vStreamBufferDelete,"ax",%progbits
 420              		.align	1
 421              		.global	vStreamBufferDelete
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 425              		.fpu fpv5-d16
 427              	vStreamBufferDelete:
 428              	.LFB6:
 355:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 356:./Libraries/FreeRTOS/Source/stream_buffer.c **** #endif /* ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 357:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 358:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 359:./Libraries/FreeRTOS/Source/stream_buffer.c **** void vStreamBufferDelete( StreamBufferHandle_t xStreamBuffer )
 360:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 429              		.loc 1 360 1
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 16
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433 0000 80B5     		push	{r7, lr}
 434              	.LCFI10:
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 7, -8
 437              		.cfi_offset 14, -4
 438 0002 84B0     		sub	sp, sp, #16
 439              	.LCFI11:
 440              		.cfi_def_cfa_offset 24
 441 0004 00AF     		add	r7, sp, #0
 442              	.LCFI12:
 443              		.cfi_def_cfa_register 7
 444 0006 7860     		str	r0, [r7, #4]
 361:./Libraries/FreeRTOS/Source/stream_buffer.c **** StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 445              		.loc 1 361 18
 446 0008 7B68     		ldr	r3, [r7, #4]
 447 000a FB60     		str	r3, [r7, #12]
 362:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 363:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 448              		.loc 1 363 2
 449 000c FB68     		ldr	r3, [r7, #12]
 450 000e 002B     		cmp	r3, #0
 451 0010 0AD1     		bne	.L29
 452              	.LBB113:
 453              	.LBB114:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 454              		.loc 2 195 2
 455              		.syntax unified
 456              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 457 0012 4FF05003 			mov r3, #80												
ARM GAS  /tmp/cc9FsJVQ.s 			page 19


 458 0016 83F31188 		msr basepri, r3											
 459 001a BFF36F8F 		isb														
 460 001e BFF34F8F 		dsb														
 461              	
 462              	@ 0 "" 2
 463              		.thumb
 464              		.syntax unified
 465 0022 BB60     		str	r3, [r7, #8]
 466              		.loc 2 203 1
 467 0024 00BF     		nop
 468              	.L30:
 469              	.LBE114:
 470              	.LBE113:
 471              		.loc 1 363 2 discriminator 1
 472 0026 FEE7     		b	.L30
 473              	.L29:
 364:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 365:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	traceSTREAM_BUFFER_DELETE( xStreamBuffer );
 366:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 367:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) pdFALSE )
 474              		.loc 1 367 22
 475 0028 FB68     		ldr	r3, [r7, #12]
 476 002a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 477              		.loc 1 367 32
 478 002c 03F00203 		and	r3, r3, #2
 479              		.loc 1 367 4
 480 0030 002B     		cmp	r3, #0
 481 0032 03D1     		bne	.L31
 368:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 369:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 370:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 371:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			/* Both the structure and the buffer were allocated using a single call
 372:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			to pvPortMalloc(), hence only one call to vPortFree() is required. */
 373:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			vPortFree( ( void * ) pxStreamBuffer ); /*lint !e9087 Standard free() semantics require void *, 
 482              		.loc 1 373 4
 483 0034 F868     		ldr	r0, [r7, #12]
 484 0036 FFF7FEFF 		bl	vPortFree
 374:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 375:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		#else
 376:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 377:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			/* Should not be possible to get here, ucFlags must be corrupt.
 378:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			Force an assert. */
 379:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			configASSERT( xStreamBuffer == ( StreamBufferHandle_t ) ~0 );
 380:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 381:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		#endif
 382:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 383:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 384:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 385:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* The structure and buffer were not allocated dynamically and cannot be
 386:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		freed - just scrub the structure so future use will assert. */
 387:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		( void ) memset( pxStreamBuffer, 0x00, sizeof( StreamBuffer_t ) );
 388:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 389:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 485              		.loc 1 389 1
 486 003a 04E0     		b	.L33
 487              	.L31:
 387:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
ARM GAS  /tmp/cc9FsJVQ.s 			page 20


 488              		.loc 1 387 12
 489 003c 2422     		movs	r2, #36
 490 003e 0021     		movs	r1, #0
 491 0040 F868     		ldr	r0, [r7, #12]
 492 0042 FFF7FEFF 		bl	memset
 493              	.L33:
 494              		.loc 1 389 1
 495 0046 00BF     		nop
 496 0048 1037     		adds	r7, r7, #16
 497              	.LCFI13:
 498              		.cfi_def_cfa_offset 8
 499 004a BD46     		mov	sp, r7
 500              	.LCFI14:
 501              		.cfi_def_cfa_register 13
 502              		@ sp needed
 503 004c 80BD     		pop	{r7, pc}
 504              		.cfi_endproc
 505              	.LFE6:
 507              		.section	.text.xStreamBufferReset,"ax",%progbits
 508              		.align	1
 509              		.global	xStreamBufferReset
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 513              		.fpu fpv5-d16
 515              	xStreamBufferReset:
 516              	.LFB7:
 390:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 391:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 392:./Libraries/FreeRTOS/Source/stream_buffer.c **** BaseType_t xStreamBufferReset( StreamBufferHandle_t xStreamBuffer )
 393:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 517              		.loc 1 393 1
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 24
 520              		@ frame_needed = 1, uses_anonymous_args = 0
 521 0000 80B5     		push	{r7, lr}
 522              	.LCFI15:
 523              		.cfi_def_cfa_offset 8
 524              		.cfi_offset 7, -8
 525              		.cfi_offset 14, -4
 526 0002 88B0     		sub	sp, sp, #32
 527              	.LCFI16:
 528              		.cfi_def_cfa_offset 40
 529 0004 02AF     		add	r7, sp, #8
 530              	.LCFI17:
 531              		.cfi_def_cfa 7, 32
 532 0006 7860     		str	r0, [r7, #4]
 394:./Libraries/FreeRTOS/Source/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 533              		.loc 1 394 24
 534 0008 7B68     		ldr	r3, [r7, #4]
 535 000a 3B61     		str	r3, [r7, #16]
 395:./Libraries/FreeRTOS/Source/stream_buffer.c **** BaseType_t xReturn = pdFAIL;
 536              		.loc 1 395 12
 537 000c 0023     		movs	r3, #0
 538 000e 7B61     		str	r3, [r7, #20]
 396:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 397:./Libraries/FreeRTOS/Source/stream_buffer.c **** #if( configUSE_TRACE_FACILITY == 1 )
ARM GAS  /tmp/cc9FsJVQ.s 			page 21


 398:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	UBaseType_t uxStreamBufferNumber;
 399:./Libraries/FreeRTOS/Source/stream_buffer.c **** #endif
 400:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 401:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 539              		.loc 1 401 2
 540 0010 3B69     		ldr	r3, [r7, #16]
 541 0012 002B     		cmp	r3, #0
 542 0014 0AD1     		bne	.L35
 543              	.LBB115:
 544              	.LBB116:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 545              		.loc 2 195 2
 546              		.syntax unified
 547              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 548 0016 4FF05003 			mov r3, #80												
 549 001a 83F31188 		msr basepri, r3											
 550 001e BFF36F8F 		isb														
 551 0022 BFF34F8F 		dsb														
 552              	
 553              	@ 0 "" 2
 554              		.thumb
 555              		.syntax unified
 556 0026 BB60     		str	r3, [r7, #8]
 557              		.loc 2 203 1
 558 0028 00BF     		nop
 559              	.L36:
 560              	.LBE116:
 561              	.LBE115:
 562              		.loc 1 401 2 discriminator 1
 563 002a FEE7     		b	.L36
 564              	.L35:
 402:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 403:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
 404:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 405:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* Store the stream buffer number so it can be restored after the
 406:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		reset. */
 407:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		uxStreamBufferNumber = pxStreamBuffer->uxStreamBufferNumber;
 565              		.loc 1 407 24
 566 002c 3B69     		ldr	r3, [r7, #16]
 567 002e 1B6A     		ldr	r3, [r3, #32]
 568 0030 FB60     		str	r3, [r7, #12]
 408:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 409:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	#endif
 410:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 411:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* Can only reset a message buffer if there are no tasks blocked on it. */
 412:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	taskENTER_CRITICAL();
 569              		.loc 1 412 2
 570 0032 FFF7FEFF 		bl	vPortEnterCritical
 413:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 414:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( pxStreamBuffer->xTaskWaitingToReceive == NULL )
 571              		.loc 1 414 21
 572 0036 3B69     		ldr	r3, [r7, #16]
 573 0038 1B69     		ldr	r3, [r3, #16]
 574              		.loc 1 414 5
 575 003a 002B     		cmp	r3, #0
 576 003c 15D1     		bne	.L37
 415:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
ARM GAS  /tmp/cc9FsJVQ.s 			page 22


 416:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			if( pxStreamBuffer->xTaskWaitingToSend == NULL )
 577              		.loc 1 416 22
 578 003e 3B69     		ldr	r3, [r7, #16]
 579 0040 5B69     		ldr	r3, [r3, #20]
 580              		.loc 1 416 6
 581 0042 002B     		cmp	r3, #0
 582 0044 11D1     		bne	.L37
 417:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			{
 418:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				prvInitialiseNewStreamBuffer( pxStreamBuffer,
 583              		.loc 1 418 5
 584 0046 3B69     		ldr	r3, [r7, #16]
 585 0048 9969     		ldr	r1, [r3, #24]
 586 004a 3B69     		ldr	r3, [r7, #16]
 587 004c 9A68     		ldr	r2, [r3, #8]
 588 004e 3B69     		ldr	r3, [r7, #16]
 589 0050 D868     		ldr	r0, [r3, #12]
 590 0052 3B69     		ldr	r3, [r7, #16]
 591 0054 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 592 0056 0093     		str	r3, [sp]
 593 0058 0346     		mov	r3, r0
 594 005a 3869     		ldr	r0, [r7, #16]
 595 005c FFF7FEFF 		bl	prvInitialiseNewStreamBuffer
 419:./Libraries/FreeRTOS/Source/stream_buffer.c **** 											  pxStreamBuffer->pucBuffer,
 420:./Libraries/FreeRTOS/Source/stream_buffer.c **** 											  pxStreamBuffer->xLength,
 421:./Libraries/FreeRTOS/Source/stream_buffer.c **** 											  pxStreamBuffer->xTriggerLevelBytes,
 422:./Libraries/FreeRTOS/Source/stream_buffer.c **** 											  pxStreamBuffer->ucFlags );
 423:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				xReturn = pdPASS;
 596              		.loc 1 423 13
 597 0060 0123     		movs	r3, #1
 598 0062 7B61     		str	r3, [r7, #20]
 424:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 425:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				#if( configUSE_TRACE_FACILITY == 1 )
 426:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				{
 427:./Libraries/FreeRTOS/Source/stream_buffer.c **** 					pxStreamBuffer->uxStreamBufferNumber = uxStreamBufferNumber;
 599              		.loc 1 427 43
 600 0064 3B69     		ldr	r3, [r7, #16]
 601 0066 FA68     		ldr	r2, [r7, #12]
 602 0068 1A62     		str	r2, [r3, #32]
 603              	.L37:
 428:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				}
 429:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				#endif
 430:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 431:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				traceSTREAM_BUFFER_RESET( xStreamBuffer );
 432:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			}
 433:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 434:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 435:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	taskEXIT_CRITICAL();
 604              		.loc 1 435 2
 605 006a FFF7FEFF 		bl	vPortExitCritical
 436:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 437:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xReturn;
 606              		.loc 1 437 9
 607 006e 7B69     		ldr	r3, [r7, #20]
 438:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 608              		.loc 1 438 1
 609 0070 1846     		mov	r0, r3
 610 0072 1837     		adds	r7, r7, #24
ARM GAS  /tmp/cc9FsJVQ.s 			page 23


 611              	.LCFI18:
 612              		.cfi_def_cfa_offset 8
 613 0074 BD46     		mov	sp, r7
 614              	.LCFI19:
 615              		.cfi_def_cfa_register 13
 616              		@ sp needed
 617 0076 80BD     		pop	{r7, pc}
 618              		.cfi_endproc
 619              	.LFE7:
 621              		.section	.text.xStreamBufferSetTriggerLevel,"ax",%progbits
 622              		.align	1
 623              		.global	xStreamBufferSetTriggerLevel
 624              		.syntax unified
 625              		.thumb
 626              		.thumb_func
 627              		.fpu fpv5-d16
 629              	xStreamBufferSetTriggerLevel:
 630              	.LFB8:
 439:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 440:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 441:./Libraries/FreeRTOS/Source/stream_buffer.c **** BaseType_t xStreamBufferSetTriggerLevel( StreamBufferHandle_t xStreamBuffer, size_t xTriggerLevel )
 442:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 631              		.loc 1 442 1
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 24
 634              		@ frame_needed = 1, uses_anonymous_args = 0
 635              		@ link register save eliminated.
 636 0000 80B4     		push	{r7}
 637              	.LCFI20:
 638              		.cfi_def_cfa_offset 4
 639              		.cfi_offset 7, -4
 640 0002 87B0     		sub	sp, sp, #28
 641              	.LCFI21:
 642              		.cfi_def_cfa_offset 32
 643 0004 00AF     		add	r7, sp, #0
 644              	.LCFI22:
 645              		.cfi_def_cfa_register 7
 646 0006 7860     		str	r0, [r7, #4]
 647 0008 3960     		str	r1, [r7]
 443:./Libraries/FreeRTOS/Source/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 648              		.loc 1 443 24
 649 000a 7B68     		ldr	r3, [r7, #4]
 650 000c 3B61     		str	r3, [r7, #16]
 444:./Libraries/FreeRTOS/Source/stream_buffer.c **** BaseType_t xReturn;
 445:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 446:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 651              		.loc 1 446 2
 652 000e 3B69     		ldr	r3, [r7, #16]
 653 0010 002B     		cmp	r3, #0
 654 0012 0AD1     		bne	.L40
 655              	.LBB117:
 656              	.LBB118:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 657              		.loc 2 195 2
 658              		.syntax unified
 659              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 660 0014 4FF05003 			mov r3, #80												
ARM GAS  /tmp/cc9FsJVQ.s 			page 24


 661 0018 83F31188 		msr basepri, r3											
 662 001c BFF36F8F 		isb														
 663 0020 BFF34F8F 		dsb														
 664              	
 665              	@ 0 "" 2
 666              		.thumb
 667              		.syntax unified
 668 0024 FB60     		str	r3, [r7, #12]
 669              		.loc 2 203 1
 670 0026 00BF     		nop
 671              	.L41:
 672              	.LBE118:
 673              	.LBE117:
 674              		.loc 1 446 2 discriminator 1
 675 0028 FEE7     		b	.L41
 676              	.L40:
 447:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 448:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* It is not valid for the trigger level to be 0. */
 449:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xTriggerLevel == ( size_t ) 0 )
 677              		.loc 1 449 4
 678 002a 3B68     		ldr	r3, [r7]
 679 002c 002B     		cmp	r3, #0
 680 002e 01D1     		bne	.L42
 450:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 451:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xTriggerLevel = ( size_t ) 1;
 681              		.loc 1 451 17
 682 0030 0123     		movs	r3, #1
 683 0032 3B60     		str	r3, [r7]
 684              	.L42:
 452:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 453:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 454:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* The trigger level is the number of bytes that must be in the stream
 455:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	buffer before a task that is waiting for data is unblocked. */
 456:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xTriggerLevel <= pxStreamBuffer->xLength )
 685              		.loc 1 456 37
 686 0034 3B69     		ldr	r3, [r7, #16]
 687 0036 9B68     		ldr	r3, [r3, #8]
 688              		.loc 1 456 4
 689 0038 3A68     		ldr	r2, [r7]
 690 003a 9A42     		cmp	r2, r3
 691 003c 05D8     		bhi	.L43
 457:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 458:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		pxStreamBuffer->xTriggerLevelBytes = xTriggerLevel;
 692              		.loc 1 458 38
 693 003e 3B69     		ldr	r3, [r7, #16]
 694 0040 3A68     		ldr	r2, [r7]
 695 0042 DA60     		str	r2, [r3, #12]
 459:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xReturn = pdPASS;
 696              		.loc 1 459 11
 697 0044 0123     		movs	r3, #1
 698 0046 7B61     		str	r3, [r7, #20]
 699 0048 01E0     		b	.L44
 700              	.L43:
 460:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 461:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 462:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 463:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xReturn = pdFALSE;
ARM GAS  /tmp/cc9FsJVQ.s 			page 25


 701              		.loc 1 463 11
 702 004a 0023     		movs	r3, #0
 703 004c 7B61     		str	r3, [r7, #20]
 704              	.L44:
 464:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 465:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 466:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xReturn;
 705              		.loc 1 466 9
 706 004e 7B69     		ldr	r3, [r7, #20]
 467:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 707              		.loc 1 467 1
 708 0050 1846     		mov	r0, r3
 709 0052 1C37     		adds	r7, r7, #28
 710              	.LCFI23:
 711              		.cfi_def_cfa_offset 4
 712 0054 BD46     		mov	sp, r7
 713              	.LCFI24:
 714              		.cfi_def_cfa_register 13
 715              		@ sp needed
 716 0056 5DF8047B 		ldr	r7, [sp], #4
 717              	.LCFI25:
 718              		.cfi_restore 7
 719              		.cfi_def_cfa_offset 0
 720 005a 7047     		bx	lr
 721              		.cfi_endproc
 722              	.LFE8:
 724              		.section	.text.xStreamBufferSpacesAvailable,"ax",%progbits
 725              		.align	1
 726              		.global	xStreamBufferSpacesAvailable
 727              		.syntax unified
 728              		.thumb
 729              		.thumb_func
 730              		.fpu fpv5-d16
 732              	xStreamBufferSpacesAvailable:
 733              	.LFB9:
 468:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 469:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 470:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xStreamBufferSpacesAvailable( StreamBufferHandle_t xStreamBuffer )
 471:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 734              		.loc 1 471 1
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 24
 737              		@ frame_needed = 1, uses_anonymous_args = 0
 738              		@ link register save eliminated.
 739 0000 80B4     		push	{r7}
 740              	.LCFI26:
 741              		.cfi_def_cfa_offset 4
 742              		.cfi_offset 7, -4
 743 0002 87B0     		sub	sp, sp, #28
 744              	.LCFI27:
 745              		.cfi_def_cfa_offset 32
 746 0004 00AF     		add	r7, sp, #0
 747              	.LCFI28:
 748              		.cfi_def_cfa_register 7
 749 0006 7860     		str	r0, [r7, #4]
 472:./Libraries/FreeRTOS/Source/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 750              		.loc 1 472 30
ARM GAS  /tmp/cc9FsJVQ.s 			page 26


 751 0008 7B68     		ldr	r3, [r7, #4]
 752 000a 3B61     		str	r3, [r7, #16]
 473:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xSpace;
 474:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 475:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 753              		.loc 1 475 2
 754 000c 3B69     		ldr	r3, [r7, #16]
 755 000e 002B     		cmp	r3, #0
 756 0010 0AD1     		bne	.L47
 757              	.LBB119:
 758              	.LBB120:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 759              		.loc 2 195 2
 760              		.syntax unified
 761              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 762 0012 4FF05003 			mov r3, #80												
 763 0016 83F31188 		msr basepri, r3											
 764 001a BFF36F8F 		isb														
 765 001e BFF34F8F 		dsb														
 766              	
 767              	@ 0 "" 2
 768              		.thumb
 769              		.syntax unified
 770 0022 FB60     		str	r3, [r7, #12]
 771              		.loc 2 203 1
 772 0024 00BF     		nop
 773              	.L48:
 774              	.LBE120:
 775              	.LBE119:
 776              		.loc 1 475 2 discriminator 1
 777 0026 FEE7     		b	.L48
 778              	.L47:
 476:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 477:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	xSpace = pxStreamBuffer->xLength + pxStreamBuffer->xTail;
 779              		.loc 1 477 25
 780 0028 3B69     		ldr	r3, [r7, #16]
 781 002a 9A68     		ldr	r2, [r3, #8]
 782              		.loc 1 477 51
 783 002c 3B69     		ldr	r3, [r7, #16]
 784 002e 1B68     		ldr	r3, [r3]
 785              		.loc 1 477 9
 786 0030 1344     		add	r3, r3, r2
 787 0032 7B61     		str	r3, [r7, #20]
 478:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	xSpace -= pxStreamBuffer->xHead;
 788              		.loc 1 478 26
 789 0034 3B69     		ldr	r3, [r7, #16]
 790 0036 5B68     		ldr	r3, [r3, #4]
 791              		.loc 1 478 9
 792 0038 7A69     		ldr	r2, [r7, #20]
 793 003a D31A     		subs	r3, r2, r3
 794 003c 7B61     		str	r3, [r7, #20]
 479:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	xSpace -= ( size_t ) 1;
 795              		.loc 1 479 9
 796 003e 7B69     		ldr	r3, [r7, #20]
 797 0040 013B     		subs	r3, r3, #1
 798 0042 7B61     		str	r3, [r7, #20]
 480:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
ARM GAS  /tmp/cc9FsJVQ.s 			page 27


 481:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xSpace >= pxStreamBuffer->xLength )
 799              		.loc 1 481 30
 800 0044 3B69     		ldr	r3, [r7, #16]
 801 0046 9B68     		ldr	r3, [r3, #8]
 802              		.loc 1 481 4
 803 0048 7A69     		ldr	r2, [r7, #20]
 804 004a 9A42     		cmp	r2, r3
 805 004c 04D3     		bcc	.L49
 482:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 483:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xSpace -= pxStreamBuffer->xLength;
 806              		.loc 1 483 27
 807 004e 3B69     		ldr	r3, [r7, #16]
 808 0050 9B68     		ldr	r3, [r3, #8]
 809              		.loc 1 483 10
 810 0052 7A69     		ldr	r2, [r7, #20]
 811 0054 D31A     		subs	r3, r2, r3
 812 0056 7B61     		str	r3, [r7, #20]
 813              	.L49:
 484:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 485:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 486:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 487:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 488:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 489:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 490:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xSpace;
 814              		.loc 1 490 9
 815 0058 7B69     		ldr	r3, [r7, #20]
 491:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 816              		.loc 1 491 1
 817 005a 1846     		mov	r0, r3
 818 005c 1C37     		adds	r7, r7, #28
 819              	.LCFI29:
 820              		.cfi_def_cfa_offset 4
 821 005e BD46     		mov	sp, r7
 822              	.LCFI30:
 823              		.cfi_def_cfa_register 13
 824              		@ sp needed
 825 0060 5DF8047B 		ldr	r7, [sp], #4
 826              	.LCFI31:
 827              		.cfi_restore 7
 828              		.cfi_def_cfa_offset 0
 829 0064 7047     		bx	lr
 830              		.cfi_endproc
 831              	.LFE9:
 833              		.section	.text.xStreamBufferBytesAvailable,"ax",%progbits
 834              		.align	1
 835              		.global	xStreamBufferBytesAvailable
 836              		.syntax unified
 837              		.thumb
 838              		.thumb_func
 839              		.fpu fpv5-d16
 841              	xStreamBufferBytesAvailable:
 842              	.LFB10:
 492:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 493:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 494:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xStreamBufferBytesAvailable( StreamBufferHandle_t xStreamBuffer )
 495:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
ARM GAS  /tmp/cc9FsJVQ.s 			page 28


 843              		.loc 1 495 1
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 24
 846              		@ frame_needed = 1, uses_anonymous_args = 0
 847 0000 80B5     		push	{r7, lr}
 848              	.LCFI32:
 849              		.cfi_def_cfa_offset 8
 850              		.cfi_offset 7, -8
 851              		.cfi_offset 14, -4
 852 0002 86B0     		sub	sp, sp, #24
 853              	.LCFI33:
 854              		.cfi_def_cfa_offset 32
 855 0004 00AF     		add	r7, sp, #0
 856              	.LCFI34:
 857              		.cfi_def_cfa_register 7
 858 0006 7860     		str	r0, [r7, #4]
 496:./Libraries/FreeRTOS/Source/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 859              		.loc 1 496 30
 860 0008 7B68     		ldr	r3, [r7, #4]
 861 000a 7B61     		str	r3, [r7, #20]
 497:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xReturn;
 498:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 499:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 862              		.loc 1 499 2
 863 000c 7B69     		ldr	r3, [r7, #20]
 864 000e 002B     		cmp	r3, #0
 865 0010 0AD1     		bne	.L52
 866              	.LBB121:
 867              	.LBB122:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 868              		.loc 2 195 2
 869              		.syntax unified
 870              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 871 0012 4FF05003 			mov r3, #80												
 872 0016 83F31188 		msr basepri, r3											
 873 001a BFF36F8F 		isb														
 874 001e BFF34F8F 		dsb														
 875              	
 876              	@ 0 "" 2
 877              		.thumb
 878              		.syntax unified
 879 0022 FB60     		str	r3, [r7, #12]
 880              		.loc 2 203 1
 881 0024 00BF     		nop
 882              	.L53:
 883              	.LBE122:
 884              	.LBE121:
 885              		.loc 1 499 2 discriminator 1
 886 0026 FEE7     		b	.L53
 887              	.L52:
 500:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 501:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	xReturn = prvBytesInBuffer( pxStreamBuffer );
 888              		.loc 1 501 12
 889 0028 7869     		ldr	r0, [r7, #20]
 890 002a FFF7FEFF 		bl	prvBytesInBuffer
 891 002e 3861     		str	r0, [r7, #16]
 502:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xReturn;
ARM GAS  /tmp/cc9FsJVQ.s 			page 29


 892              		.loc 1 502 9
 893 0030 3B69     		ldr	r3, [r7, #16]
 503:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 894              		.loc 1 503 1
 895 0032 1846     		mov	r0, r3
 896 0034 1837     		adds	r7, r7, #24
 897              	.LCFI35:
 898              		.cfi_def_cfa_offset 8
 899 0036 BD46     		mov	sp, r7
 900              	.LCFI36:
 901              		.cfi_def_cfa_register 13
 902              		@ sp needed
 903 0038 80BD     		pop	{r7, pc}
 904              		.cfi_endproc
 905              	.LFE10:
 907              		.section	.text.xStreamBufferSend,"ax",%progbits
 908              		.align	1
 909              		.global	xStreamBufferSend
 910              		.syntax unified
 911              		.thumb
 912              		.thumb_func
 913              		.fpu fpv5-d16
 915              	xStreamBufferSend:
 916              	.LFB11:
 504:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 505:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 506:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xStreamBufferSend( StreamBufferHandle_t xStreamBuffer,
 507:./Libraries/FreeRTOS/Source/stream_buffer.c **** 						  const void *pvTxData,
 508:./Libraries/FreeRTOS/Source/stream_buffer.c **** 						  size_t xDataLengthBytes,
 509:./Libraries/FreeRTOS/Source/stream_buffer.c **** 						  TickType_t xTicksToWait )
 510:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 917              		.loc 1 510 1
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 56
 920              		@ frame_needed = 1, uses_anonymous_args = 0
 921 0000 80B5     		push	{r7, lr}
 922              	.LCFI37:
 923              		.cfi_def_cfa_offset 8
 924              		.cfi_offset 7, -8
 925              		.cfi_offset 14, -4
 926 0002 90B0     		sub	sp, sp, #64
 927              	.LCFI38:
 928              		.cfi_def_cfa_offset 72
 929 0004 02AF     		add	r7, sp, #8
 930              	.LCFI39:
 931              		.cfi_def_cfa 7, 64
 932 0006 F860     		str	r0, [r7, #12]
 933 0008 B960     		str	r1, [r7, #8]
 934 000a 7A60     		str	r2, [r7, #4]
 935 000c 3B60     		str	r3, [r7]
 511:./Libraries/FreeRTOS/Source/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 936              		.loc 1 511 24
 937 000e FB68     		ldr	r3, [r7, #12]
 938 0010 FB62     		str	r3, [r7, #44]
 512:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xReturn, xSpace = 0;
 939              		.loc 1 512 17
 940 0012 0023     		movs	r3, #0
ARM GAS  /tmp/cc9FsJVQ.s 			page 30


 941 0014 7B63     		str	r3, [r7, #52]
 513:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xRequiredSpace = xDataLengthBytes;
 942              		.loc 1 513 8
 943 0016 7B68     		ldr	r3, [r7, #4]
 944 0018 3B63     		str	r3, [r7, #48]
 514:./Libraries/FreeRTOS/Source/stream_buffer.c **** TimeOut_t xTimeOut;
 515:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 516:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pvTxData );
 945              		.loc 1 516 2
 946 001a BB68     		ldr	r3, [r7, #8]
 947 001c 002B     		cmp	r3, #0
 948 001e 0AD1     		bne	.L56
 949              	.LBB123:
 950              	.LBB124:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 951              		.loc 2 195 2
 952              		.syntax unified
 953              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 954 0020 4FF05003 			mov r3, #80												
 955 0024 83F31188 		msr basepri, r3											
 956 0028 BFF36F8F 		isb														
 957 002c BFF34F8F 		dsb														
 958              	
 959              	@ 0 "" 2
 960              		.thumb
 961              		.syntax unified
 962 0030 7B62     		str	r3, [r7, #36]
 963              		.loc 2 203 1
 964 0032 00BF     		nop
 965              	.L57:
 966              	.LBE124:
 967              	.LBE123:
 968              		.loc 1 516 2 discriminator 1
 969 0034 FEE7     		b	.L57
 970              	.L56:
 517:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 971              		.loc 1 517 2
 972 0036 FB6A     		ldr	r3, [r7, #44]
 973 0038 002B     		cmp	r3, #0
 974 003a 0AD1     		bne	.L58
 975              	.LBB125:
 976              	.LBB126:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 977              		.loc 2 195 2
 978              		.syntax unified
 979              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 980 003c 4FF05003 			mov r3, #80												
 981 0040 83F31188 		msr basepri, r3											
 982 0044 BFF36F8F 		isb														
 983 0048 BFF34F8F 		dsb														
 984              	
 985              	@ 0 "" 2
 986              		.thumb
 987              		.syntax unified
 988 004c 3B62     		str	r3, [r7, #32]
 989              		.loc 2 203 1
 990 004e 00BF     		nop
ARM GAS  /tmp/cc9FsJVQ.s 			page 31


 991              	.L59:
 992              	.LBE126:
 993              	.LBE125:
 994              		.loc 1 517 2 discriminator 2
 995 0050 FEE7     		b	.L59
 996              	.L58:
 518:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 519:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* This send function is used to write to both message buffers and stream
 520:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	buffers.  If this is a message buffer then the space needed must be
 521:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	increased by the amount of bytes needed to store the length of the
 522:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	message. */
 523:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 997              		.loc 1 523 22
 998 0052 FB6A     		ldr	r3, [r7, #44]
 999 0054 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1000              		.loc 1 523 32
 1001 0056 03F00103 		and	r3, r3, #1
 1002              		.loc 1 523 4
 1003 005a 002B     		cmp	r3, #0
 1004 005c 11D0     		beq	.L60
 524:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 525:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xRequiredSpace += sbBYTES_TO_STORE_MESSAGE_LENGTH;
 1005              		.loc 1 525 18
 1006 005e 3B6B     		ldr	r3, [r7, #48]
 1007 0060 0433     		adds	r3, r3, #4
 1008 0062 3B63     		str	r3, [r7, #48]
 526:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 527:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* Overflow? */
 528:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		configASSERT( xRequiredSpace > xDataLengthBytes );
 1009              		.loc 1 528 3
 1010 0064 3A6B     		ldr	r2, [r7, #48]
 1011 0066 7B68     		ldr	r3, [r7, #4]
 1012 0068 9A42     		cmp	r2, r3
 1013 006a 0AD8     		bhi	.L60
 1014              	.LBB127:
 1015              	.LBB128:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1016              		.loc 2 195 2
 1017              		.syntax unified
 1018              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1019 006c 4FF05003 			mov r3, #80												
 1020 0070 83F31188 		msr basepri, r3											
 1021 0074 BFF36F8F 		isb														
 1022 0078 BFF34F8F 		dsb														
 1023              	
 1024              	@ 0 "" 2
 1025              		.thumb
 1026              		.syntax unified
 1027 007c FB61     		str	r3, [r7, #28]
 1028              		.loc 2 203 1
 1029 007e 00BF     		nop
 1030              	.L61:
 1031              	.LBE128:
 1032              	.LBE127:
 1033              		.loc 1 528 3 discriminator 3
 1034 0080 FEE7     		b	.L61
 1035              	.L60:
ARM GAS  /tmp/cc9FsJVQ.s 			page 32


 529:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 530:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 531:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 532:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 533:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 534:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 535:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 1036              		.loc 1 535 19
 1037 0082 3B68     		ldr	r3, [r7]
 1038              		.loc 1 535 4
 1039 0084 002B     		cmp	r3, #0
 1040 0086 3ED0     		beq	.L62
 536:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 537:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		vTaskSetTimeOutState( &xTimeOut );
 1041              		.loc 1 537 3
 1042 0088 07F11003 		add	r3, r7, #16
 1043 008c 1846     		mov	r0, r3
 1044 008e FFF7FEFF 		bl	vTaskSetTimeOutState
 1045              	.L68:
 538:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 539:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		do
 540:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 541:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			/* Wait until the required number of bytes are free in the message
 542:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			buffer. */
 543:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			taskENTER_CRITICAL();
 1046              		.loc 1 543 4
 1047 0092 FFF7FEFF 		bl	vPortEnterCritical
 544:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			{
 545:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 1048              		.loc 1 545 14
 1049 0096 F86A     		ldr	r0, [r7, #44]
 1050 0098 FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1051 009c 7863     		str	r0, [r7, #52]
 546:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 547:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				if( xSpace < xRequiredSpace )
 1052              		.loc 1 547 7
 1053 009e 7A6B     		ldr	r2, [r7, #52]
 1054 00a0 3B6B     		ldr	r3, [r7, #48]
 1055 00a2 9A42     		cmp	r2, r3
 1056 00a4 17D2     		bcs	.L63
 548:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				{
 549:./Libraries/FreeRTOS/Source/stream_buffer.c **** 					/* Clear notification state as going to wait for space. */
 550:./Libraries/FreeRTOS/Source/stream_buffer.c **** 					( void ) xTaskNotifyStateClear( NULL );
 1057              		.loc 1 550 15
 1058 00a6 0020     		movs	r0, #0
 1059 00a8 FFF7FEFF 		bl	xTaskNotifyStateClear
 551:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 552:./Libraries/FreeRTOS/Source/stream_buffer.c **** 					/* Should only be one writer. */
 553:./Libraries/FreeRTOS/Source/stream_buffer.c **** 					configASSERT( pxStreamBuffer->xTaskWaitingToSend == NULL );
 1060              		.loc 1 553 6
 1061 00ac FB6A     		ldr	r3, [r7, #44]
 1062 00ae 5B69     		ldr	r3, [r3, #20]
 1063 00b0 002B     		cmp	r3, #0
 1064 00b2 0AD0     		beq	.L64
 1065              	.LBB129:
 1066              	.LBB130:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  /tmp/cc9FsJVQ.s 			page 33


 1067              		.loc 2 195 2
 1068              		.syntax unified
 1069              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1070 00b4 4FF05003 			mov r3, #80												
 1071 00b8 83F31188 		msr basepri, r3											
 1072 00bc BFF36F8F 		isb														
 1073 00c0 BFF34F8F 		dsb														
 1074              	
 1075              	@ 0 "" 2
 1076              		.thumb
 1077              		.syntax unified
 1078 00c4 BB61     		str	r3, [r7, #24]
 1079              		.loc 2 203 1
 1080 00c6 00BF     		nop
 1081              	.L65:
 1082              	.LBE130:
 1083              	.LBE129:
 1084              		.loc 1 553 6 discriminator 4
 1085 00c8 FEE7     		b	.L65
 1086              	.L64:
 554:./Libraries/FreeRTOS/Source/stream_buffer.c **** 					pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
 1087              		.loc 1 554 43
 1088 00ca FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1089 00ce 0246     		mov	r2, r0
 1090              		.loc 1 554 41
 1091 00d0 FB6A     		ldr	r3, [r7, #44]
 1092 00d2 5A61     		str	r2, [r3, #20]
 1093 00d4 02E0     		b	.L73
 1094              	.L63:
 555:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				}
 556:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				else
 557:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				{
 558:./Libraries/FreeRTOS/Source/stream_buffer.c **** 					taskEXIT_CRITICAL();
 1095              		.loc 1 558 6
 1096 00d6 FFF7FEFF 		bl	vPortExitCritical
 559:./Libraries/FreeRTOS/Source/stream_buffer.c **** 					break;
 1097              		.loc 1 559 6
 1098 00da 14E0     		b	.L62
 1099              	.L73:
 560:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				}
 561:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			}
 562:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			taskEXIT_CRITICAL();
 1100              		.loc 1 562 4
 1101 00dc FFF7FEFF 		bl	vPortExitCritical
 563:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 564:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			traceBLOCKING_ON_STREAM_BUFFER_SEND( xStreamBuffer );
 565:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 1102              		.loc 1 565 4
 1103 00e0 3B68     		ldr	r3, [r7]
 1104              		.loc 1 565 13
 1105 00e2 0022     		movs	r2, #0
 1106 00e4 0021     		movs	r1, #0
 1107 00e6 0020     		movs	r0, #0
 1108 00e8 FFF7FEFF 		bl	xTaskNotifyWait
 566:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToSend = NULL;
 1109              		.loc 1 566 39
 1110 00ec FB6A     		ldr	r3, [r7, #44]
ARM GAS  /tmp/cc9FsJVQ.s 			page 34


 1111 00ee 0022     		movs	r2, #0
 1112 00f0 5A61     		str	r2, [r3, #20]
 567:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 568:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		} while( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE );
 1113              		.loc 1 568 12
 1114 00f2 3A46     		mov	r2, r7
 1115 00f4 07F11003 		add	r3, r7, #16
 1116 00f8 1146     		mov	r1, r2
 1117 00fa 1846     		mov	r0, r3
 1118 00fc FFF7FEFF 		bl	xTaskCheckForTimeOut
 1119 0100 0346     		mov	r3, r0
 1120              		.loc 1 568 3
 1121 0102 002B     		cmp	r3, #0
 1122 0104 C5D0     		beq	.L68
 1123              	.L62:
 569:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 570:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 571:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 572:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 573:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 574:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 575:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xSpace == ( size_t ) 0 )
 1124              		.loc 1 575 4
 1125 0106 7B6B     		ldr	r3, [r7, #52]
 1126 0108 002B     		cmp	r3, #0
 1127 010a 03D1     		bne	.L69
 576:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 577:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 1128              		.loc 1 577 12
 1129 010c F86A     		ldr	r0, [r7, #44]
 1130 010e FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1131 0112 7863     		str	r0, [r7, #52]
 1132              	.L69:
 578:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 579:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 580:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 581:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 582:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 583:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 584:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSp
 1133              		.loc 1 584 12
 1134 0114 3B6B     		ldr	r3, [r7, #48]
 1135 0116 0093     		str	r3, [sp]
 1136 0118 7B6B     		ldr	r3, [r7, #52]
 1137 011a 7A68     		ldr	r2, [r7, #4]
 1138 011c B968     		ldr	r1, [r7, #8]
 1139 011e F86A     		ldr	r0, [r7, #44]
 1140 0120 FFF7FEFF 		bl	prvWriteMessageToBuffer
 1141 0124 B862     		str	r0, [r7, #40]
 585:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 586:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xReturn > ( size_t ) 0 )
 1142              		.loc 1 586 4
 1143 0126 BB6A     		ldr	r3, [r7, #40]
 1144 0128 002B     		cmp	r3, #0
 1145 012a 19D0     		beq	.L70
 587:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 588:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		traceSTREAM_BUFFER_SEND( xStreamBuffer, xReturn );
ARM GAS  /tmp/cc9FsJVQ.s 			page 35


 589:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 590:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* Was a task waiting for the data? */
 591:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( prvBytesInBuffer( pxStreamBuffer ) >= pxStreamBuffer->xTriggerLevelBytes )
 1146              		.loc 1 591 7
 1147 012c F86A     		ldr	r0, [r7, #44]
 1148 012e FFF7FEFF 		bl	prvBytesInBuffer
 1149 0132 0246     		mov	r2, r0
 1150              		.loc 1 591 59
 1151 0134 FB6A     		ldr	r3, [r7, #44]
 1152 0136 DB68     		ldr	r3, [r3, #12]
 1153              		.loc 1 591 5
 1154 0138 9A42     		cmp	r2, r3
 1155 013a 11D3     		bcc	.L70
 592:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 593:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			sbSEND_COMPLETED( pxStreamBuffer );
 1156              		.loc 1 593 4
 1157 013c FFF7FEFF 		bl	vTaskSuspendAll
 1158 0140 FB6A     		ldr	r3, [r7, #44]
 1159 0142 1B69     		ldr	r3, [r3, #16]
 1160 0144 002B     		cmp	r3, #0
 1161 0146 09D0     		beq	.L71
 1162              		.loc 1 593 4 is_stmt 0 discriminator 1
 1163 0148 FB6A     		ldr	r3, [r7, #44]
 1164 014a 1869     		ldr	r0, [r3, #16]
 1165 014c 0023     		movs	r3, #0
 1166 014e 0022     		movs	r2, #0
 1167 0150 0021     		movs	r1, #0
 1168 0152 FFF7FEFF 		bl	xTaskGenericNotify
 1169 0156 FB6A     		ldr	r3, [r7, #44]
 1170 0158 0022     		movs	r2, #0
 1171 015a 1A61     		str	r2, [r3, #16]
 1172              	.L71:
 1173              		.loc 1 593 4 discriminator 3
 1174 015c FFF7FEFF 		bl	xTaskResumeAll
 1175              	.L70:
 594:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 595:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		else
 596:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 597:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 598:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 599:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 600:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 601:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 602:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 603:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		traceSTREAM_BUFFER_SEND_FAILED( xStreamBuffer );
 604:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 605:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 606:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xReturn;
 1176              		.loc 1 606 9 is_stmt 1
 1177 0160 BB6A     		ldr	r3, [r7, #40]
 607:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 1178              		.loc 1 607 1
 1179 0162 1846     		mov	r0, r3
 1180 0164 3837     		adds	r7, r7, #56
 1181              	.LCFI40:
 1182              		.cfi_def_cfa_offset 8
 1183 0166 BD46     		mov	sp, r7
ARM GAS  /tmp/cc9FsJVQ.s 			page 36


 1184              	.LCFI41:
 1185              		.cfi_def_cfa_register 13
 1186              		@ sp needed
 1187 0168 80BD     		pop	{r7, pc}
 1188              		.cfi_endproc
 1189              	.LFE11:
 1191              		.section	.text.xStreamBufferSendFromISR,"ax",%progbits
 1192              		.align	1
 1193              		.global	xStreamBufferSendFromISR
 1194              		.syntax unified
 1195              		.thumb
 1196              		.thumb_func
 1197              		.fpu fpv5-d16
 1199              	xStreamBufferSendFromISR:
 1200              	.LFB12:
 608:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 609:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 610:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xStreamBufferSendFromISR( StreamBufferHandle_t xStreamBuffer,
 611:./Libraries/FreeRTOS/Source/stream_buffer.c **** 								 const void *pvTxData,
 612:./Libraries/FreeRTOS/Source/stream_buffer.c **** 								 size_t xDataLengthBytes,
 613:./Libraries/FreeRTOS/Source/stream_buffer.c **** 								 BaseType_t * const pxHigherPriorityTaskWoken )
 614:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 1201              		.loc 1 614 1
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 56
 1204              		@ frame_needed = 1, uses_anonymous_args = 0
 1205 0000 80B5     		push	{r7, lr}
 1206              	.LCFI42:
 1207              		.cfi_def_cfa_offset 8
 1208              		.cfi_offset 7, -8
 1209              		.cfi_offset 14, -4
 1210 0002 90B0     		sub	sp, sp, #64
 1211              	.LCFI43:
 1212              		.cfi_def_cfa_offset 72
 1213 0004 02AF     		add	r7, sp, #8
 1214              	.LCFI44:
 1215              		.cfi_def_cfa 7, 64
 1216 0006 F860     		str	r0, [r7, #12]
 1217 0008 B960     		str	r1, [r7, #8]
 1218 000a 7A60     		str	r2, [r7, #4]
 1219 000c 3B60     		str	r3, [r7]
 615:./Libraries/FreeRTOS/Source/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1220              		.loc 1 615 24
 1221 000e FB68     		ldr	r3, [r7, #12]
 1222 0010 3B63     		str	r3, [r7, #48]
 616:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xReturn, xSpace;
 617:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xRequiredSpace = xDataLengthBytes;
 1223              		.loc 1 617 8
 1224 0012 7B68     		ldr	r3, [r7, #4]
 1225 0014 7B63     		str	r3, [r7, #52]
 618:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 619:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pvTxData );
 1226              		.loc 1 619 2
 1227 0016 BB68     		ldr	r3, [r7, #8]
 1228 0018 002B     		cmp	r3, #0
 1229 001a 0AD1     		bne	.L75
 1230              	.LBB131:
ARM GAS  /tmp/cc9FsJVQ.s 			page 37


 1231              	.LBB132:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1232              		.loc 2 195 2
 1233              		.syntax unified
 1234              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1235 001c 4FF05003 			mov r3, #80												
 1236 0020 83F31188 		msr basepri, r3											
 1237 0024 BFF36F8F 		isb														
 1238 0028 BFF34F8F 		dsb														
 1239              	
 1240              	@ 0 "" 2
 1241              		.thumb
 1242              		.syntax unified
 1243 002c 3B62     		str	r3, [r7, #32]
 1244              		.loc 2 203 1
 1245 002e 00BF     		nop
 1246              	.L76:
 1247              	.LBE132:
 1248              	.LBE131:
 1249              		.loc 1 619 2 discriminator 1
 1250 0030 FEE7     		b	.L76
 1251              	.L75:
 620:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 1252              		.loc 1 620 2
 1253 0032 3B6B     		ldr	r3, [r7, #48]
 1254 0034 002B     		cmp	r3, #0
 1255 0036 0AD1     		bne	.L77
 1256              	.LBB133:
 1257              	.LBB134:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1258              		.loc 2 195 2
 1259              		.syntax unified
 1260              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1261 0038 4FF05003 			mov r3, #80												
 1262 003c 83F31188 		msr basepri, r3											
 1263 0040 BFF36F8F 		isb														
 1264 0044 BFF34F8F 		dsb														
 1265              	
 1266              	@ 0 "" 2
 1267              		.thumb
 1268              		.syntax unified
 1269 0048 FB61     		str	r3, [r7, #28]
 1270              		.loc 2 203 1
 1271 004a 00BF     		nop
 1272              	.L78:
 1273              	.LBE134:
 1274              	.LBE133:
 1275              		.loc 1 620 2 discriminator 2
 1276 004c FEE7     		b	.L78
 1277              	.L77:
 621:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 622:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* This send function is used to write to both message buffers and stream
 623:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	buffers.  If this is a message buffer then the space needed must be
 624:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	increased by the amount of bytes needed to store the length of the
 625:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	message. */
 626:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 1278              		.loc 1 626 22
ARM GAS  /tmp/cc9FsJVQ.s 			page 38


 1279 004e 3B6B     		ldr	r3, [r7, #48]
 1280 0050 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1281              		.loc 1 626 32
 1282 0052 03F00103 		and	r3, r3, #1
 1283              		.loc 1 626 4
 1284 0056 002B     		cmp	r3, #0
 1285 0058 02D0     		beq	.L79
 627:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 628:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xRequiredSpace += sbBYTES_TO_STORE_MESSAGE_LENGTH;
 1286              		.loc 1 628 18
 1287 005a 7B6B     		ldr	r3, [r7, #52]
 1288 005c 0433     		adds	r3, r3, #4
 1289 005e 7B63     		str	r3, [r7, #52]
 1290              	.L79:
 629:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 630:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 631:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 632:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 633:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 634:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 635:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 1291              		.loc 1 635 11
 1292 0060 386B     		ldr	r0, [r7, #48]
 1293 0062 FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1294 0066 F862     		str	r0, [r7, #44]
 636:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSp
 1295              		.loc 1 636 12
 1296 0068 7B6B     		ldr	r3, [r7, #52]
 1297 006a 0093     		str	r3, [sp]
 1298 006c FB6A     		ldr	r3, [r7, #44]
 1299 006e 7A68     		ldr	r2, [r7, #4]
 1300 0070 B968     		ldr	r1, [r7, #8]
 1301 0072 386B     		ldr	r0, [r7, #48]
 1302 0074 FFF7FEFF 		bl	prvWriteMessageToBuffer
 1303 0078 B862     		str	r0, [r7, #40]
 637:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 638:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xReturn > ( size_t ) 0 )
 1304              		.loc 1 638 4
 1305 007a BB6A     		ldr	r3, [r7, #40]
 1306 007c 002B     		cmp	r3, #0
 1307 007e 2BD0     		beq	.L80
 639:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 640:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* Was a task waiting for the data? */
 641:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( prvBytesInBuffer( pxStreamBuffer ) >= pxStreamBuffer->xTriggerLevelBytes )
 1308              		.loc 1 641 7
 1309 0080 386B     		ldr	r0, [r7, #48]
 1310 0082 FFF7FEFF 		bl	prvBytesInBuffer
 1311 0086 0246     		mov	r2, r0
 1312              		.loc 1 641 59
 1313 0088 3B6B     		ldr	r3, [r7, #48]
 1314 008a DB68     		ldr	r3, [r3, #12]
 1315              		.loc 1 641 5
 1316 008c 9A42     		cmp	r2, r3
 1317 008e 23D3     		bcc	.L80
 1318              	.LBB135:
 1319              	.LBB136:
 1320              	.LBB137:
ARM GAS  /tmp/cc9FsJVQ.s 			page 39


 204:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1321              		.loc 2 211 2
 1322              		.syntax unified
 1323              	@ 211 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1324 0090 EFF31182 			mrs r2, basepri											
 1325 0094 4FF05003 		mov r3, #80												
 1326 0098 83F31188 		msr basepri, r3											
 1327 009c BFF36F8F 		isb														
 1328 00a0 BFF34F8F 		dsb														
 1329              	
 1330              	@ 0 "" 2
 1331              		.thumb
 1332              		.syntax unified
 1333 00a4 BA61     		str	r2, [r7, #24]
 1334 00a6 7B61     		str	r3, [r7, #20]
 212:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 1335              		.loc 2 223 9
 1336 00a8 BB69     		ldr	r3, [r7, #24]
 1337              	.LBE137:
 1338              	.LBE136:
 642:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 643:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			sbSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken );
 1339              		.loc 1 643 4
 1340 00aa 7B62     		str	r3, [r7, #36]
 1341 00ac 3B6B     		ldr	r3, [r7, #48]
 1342 00ae 1B69     		ldr	r3, [r3, #16]
 1343 00b0 002B     		cmp	r3, #0
 1344 00b2 0BD0     		beq	.L82
 1345              		.loc 1 643 4 is_stmt 0 discriminator 1
 1346 00b4 3B6B     		ldr	r3, [r7, #48]
 1347 00b6 1869     		ldr	r0, [r3, #16]
 1348 00b8 3B68     		ldr	r3, [r7]
 1349 00ba 0093     		str	r3, [sp]
 1350 00bc 0023     		movs	r3, #0
 1351 00be 0022     		movs	r2, #0
 1352 00c0 0021     		movs	r1, #0
 1353 00c2 FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 1354 00c6 3B6B     		ldr	r3, [r7, #48]
 1355 00c8 0022     		movs	r2, #0
ARM GAS  /tmp/cc9FsJVQ.s 			page 40


 1356 00ca 1A61     		str	r2, [r3, #16]
 1357              	.L82:
 1358 00cc 7B6A     		ldr	r3, [r7, #36]
 1359 00ce 3B61     		str	r3, [r7, #16]
 1360              	.LBB138:
 1361              	.LBB139:
 224:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1362              		.loc 2 229 2 is_stmt 1 discriminator 3
 1363 00d0 3B69     		ldr	r3, [r7, #16]
 1364              		.syntax unified
 1365              	@ 229 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1366 00d2 83F31188 			msr basepri, r3	
 1367              	@ 0 "" 2
 230:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 231:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0	" :: "r" ( ulNewMaskValue ) : "memory"
 232:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 233:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 1368              		.loc 2 233 1 discriminator 3
 1369              		.thumb
 1370              		.syntax unified
 1371 00d6 00BF     		nop
 1372              	.L80:
 1373              	.LBE139:
 1374              	.LBE138:
 1375              	.LBE135:
 644:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 645:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		else
 646:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 647:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 648:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 649:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 650:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 651:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 652:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 653:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 654:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 655:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	traceSTREAM_BUFFER_SEND_FROM_ISR( xStreamBuffer, xReturn );
 656:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 657:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xReturn;
 1376              		.loc 1 657 9
 1377 00d8 BB6A     		ldr	r3, [r7, #40]
 658:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 1378              		.loc 1 658 1
 1379 00da 1846     		mov	r0, r3
 1380 00dc 3837     		adds	r7, r7, #56
 1381              	.LCFI45:
 1382              		.cfi_def_cfa_offset 8
 1383 00de BD46     		mov	sp, r7
 1384              	.LCFI46:
 1385              		.cfi_def_cfa_register 13
 1386              		@ sp needed
 1387 00e0 80BD     		pop	{r7, pc}
ARM GAS  /tmp/cc9FsJVQ.s 			page 41


 1388              		.cfi_endproc
 1389              	.LFE12:
 1391              		.section	.text.prvWriteMessageToBuffer,"ax",%progbits
 1392              		.align	1
 1393              		.syntax unified
 1394              		.thumb
 1395              		.thumb_func
 1396              		.fpu fpv5-d16
 1398              	prvWriteMessageToBuffer:
 1399              	.LFB13:
 659:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 660:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 661:./Libraries/FreeRTOS/Source/stream_buffer.c **** static size_t prvWriteMessageToBuffer( StreamBuffer_t * const pxStreamBuffer,
 662:./Libraries/FreeRTOS/Source/stream_buffer.c **** 									   const void * pvTxData,
 663:./Libraries/FreeRTOS/Source/stream_buffer.c **** 									   size_t xDataLengthBytes,
 664:./Libraries/FreeRTOS/Source/stream_buffer.c **** 									   size_t xSpace,
 665:./Libraries/FreeRTOS/Source/stream_buffer.c **** 									   size_t xRequiredSpace )
 666:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 1400              		.loc 1 666 1
 1401              		.cfi_startproc
 1402              		@ args = 4, pretend = 0, frame = 24
 1403              		@ frame_needed = 1, uses_anonymous_args = 0
 1404 0000 80B5     		push	{r7, lr}
 1405              	.LCFI47:
 1406              		.cfi_def_cfa_offset 8
 1407              		.cfi_offset 7, -8
 1408              		.cfi_offset 14, -4
 1409 0002 86B0     		sub	sp, sp, #24
 1410              	.LCFI48:
 1411              		.cfi_def_cfa_offset 32
 1412 0004 00AF     		add	r7, sp, #0
 1413              	.LCFI49:
 1414              		.cfi_def_cfa_register 7
 1415 0006 F860     		str	r0, [r7, #12]
 1416 0008 B960     		str	r1, [r7, #8]
 1417 000a 7A60     		str	r2, [r7, #4]
 1418 000c 3B60     		str	r3, [r7]
 667:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	BaseType_t xShouldWrite;
 668:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	size_t xReturn;
 669:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 670:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xSpace == ( size_t ) 0 )
 1419              		.loc 1 670 4
 1420 000e 3B68     		ldr	r3, [r7]
 1421 0010 002B     		cmp	r3, #0
 1422 0012 02D1     		bne	.L85
 671:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 672:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* Doesn't matter if this is a stream buffer or a message buffer, there
 673:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		is no space to write. */
 674:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xShouldWrite = pdFALSE;
 1423              		.loc 1 674 16
 1424 0014 0023     		movs	r3, #0
 1425 0016 7B61     		str	r3, [r7, #20]
 1426 0018 1DE0     		b	.L86
 1427              	.L85:
 675:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 676:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) == ( uint8_t ) 0 )
 1428              		.loc 1 676 27
ARM GAS  /tmp/cc9FsJVQ.s 			page 42


 1429 001a FB68     		ldr	r3, [r7, #12]
 1430 001c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1431              		.loc 1 676 37
 1432 001e 03F00103 		and	r3, r3, #1
 1433              		.loc 1 676 9
 1434 0022 002B     		cmp	r3, #0
 1435 0024 08D1     		bne	.L87
 677:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 678:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* This is a stream buffer, as opposed to a message buffer, so writing a
 679:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		stream of bytes rather than discrete messages.  Write as many bytes as
 680:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		possible. */
 681:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xShouldWrite = pdTRUE;
 1436              		.loc 1 681 16
 1437 0026 0123     		movs	r3, #1
 1438 0028 7B61     		str	r3, [r7, #20]
 682:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xDataLengthBytes = configMIN( xDataLengthBytes, xSpace );
 1439              		.loc 1 682 22
 1440 002a 7A68     		ldr	r2, [r7, #4]
 1441 002c 3B68     		ldr	r3, [r7]
 1442 002e 9342     		cmp	r3, r2
 1443 0030 28BF     		it	cs
 1444 0032 1346     		movcs	r3, r2
 1445              		.loc 1 682 20
 1446 0034 7B60     		str	r3, [r7, #4]
 1447 0036 0EE0     		b	.L86
 1448              	.L87:
 683:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 684:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else if( xSpace >= xRequiredSpace )
 1449              		.loc 1 684 9
 1450 0038 3A68     		ldr	r2, [r7]
 1451 003a 3B6A     		ldr	r3, [r7, #32]
 1452 003c 9A42     		cmp	r2, r3
 1453 003e 08D3     		bcc	.L88
 685:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 686:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* This is a message buffer, as opposed to a stream buffer, and there
 687:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		is enough space to write both the message length and the message itself
 688:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		into the buffer.  Start by writing the length of the data, the data
 689:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		itself will be written later in this function. */
 690:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xShouldWrite = pdTRUE;
 1454              		.loc 1 690 16
 1455 0040 0123     		movs	r3, #1
 1456 0042 7B61     		str	r3, [r7, #20]
 691:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		( void ) prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) &( xDataLengthBytes ), sbBYTE
 1457              		.loc 1 691 12
 1458 0044 3B1D     		adds	r3, r7, #4
 1459 0046 0422     		movs	r2, #4
 1460 0048 1946     		mov	r1, r3
 1461 004a F868     		ldr	r0, [r7, #12]
 1462 004c FFF7FEFF 		bl	prvWriteBytesToBuffer
 1463 0050 01E0     		b	.L86
 1464              	.L88:
 692:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 693:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 694:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 695:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* There is space available, but not enough space. */
 696:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xShouldWrite = pdFALSE;
 1465              		.loc 1 696 16
ARM GAS  /tmp/cc9FsJVQ.s 			page 43


 1466 0052 0023     		movs	r3, #0
 1467 0054 7B61     		str	r3, [r7, #20]
 1468              	.L86:
 697:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 698:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 699:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xShouldWrite != pdFALSE )
 1469              		.loc 1 699 4
 1470 0056 7B69     		ldr	r3, [r7, #20]
 1471 0058 002B     		cmp	r3, #0
 1472 005a 07D0     		beq	.L89
 700:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 701:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* Writes the data itself. */
 702:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xReturn = prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) pvTxData, xDataLengthBytes )
 1473              		.loc 1 702 13
 1474 005c 7B68     		ldr	r3, [r7, #4]
 1475 005e 1A46     		mov	r2, r3
 1476 0060 B968     		ldr	r1, [r7, #8]
 1477 0062 F868     		ldr	r0, [r7, #12]
 1478 0064 FFF7FEFF 		bl	prvWriteBytesToBuffer
 1479 0068 3861     		str	r0, [r7, #16]
 1480 006a 01E0     		b	.L90
 1481              	.L89:
 703:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 704:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 705:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 706:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xReturn = 0;
 1482              		.loc 1 706 11
 1483 006c 0023     		movs	r3, #0
 1484 006e 3B61     		str	r3, [r7, #16]
 1485              	.L90:
 707:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 708:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 709:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xReturn;
 1486              		.loc 1 709 9
 1487 0070 3B69     		ldr	r3, [r7, #16]
 710:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 1488              		.loc 1 710 1
 1489 0072 1846     		mov	r0, r3
 1490 0074 1837     		adds	r7, r7, #24
 1491              	.LCFI50:
 1492              		.cfi_def_cfa_offset 8
 1493 0076 BD46     		mov	sp, r7
 1494              	.LCFI51:
 1495              		.cfi_def_cfa_register 13
 1496              		@ sp needed
 1497 0078 80BD     		pop	{r7, pc}
 1498              		.cfi_endproc
 1499              	.LFE13:
 1501              		.section	.text.xStreamBufferReceive,"ax",%progbits
 1502              		.align	1
 1503              		.global	xStreamBufferReceive
 1504              		.syntax unified
 1505              		.thumb
 1506              		.thumb_func
 1507              		.fpu fpv5-d16
 1509              	xStreamBufferReceive:
 1510              	.LFB14:
ARM GAS  /tmp/cc9FsJVQ.s 			page 44


 711:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 712:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 713:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xStreamBufferReceive( StreamBufferHandle_t xStreamBuffer,
 714:./Libraries/FreeRTOS/Source/stream_buffer.c **** 							 void *pvRxData,
 715:./Libraries/FreeRTOS/Source/stream_buffer.c **** 							 size_t xBufferLengthBytes,
 716:./Libraries/FreeRTOS/Source/stream_buffer.c **** 							 TickType_t xTicksToWait )
 717:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 1511              		.loc 1 717 1
 1512              		.cfi_startproc
 1513              		@ args = 0, pretend = 0, frame = 48
 1514              		@ frame_needed = 1, uses_anonymous_args = 0
 1515 0000 80B5     		push	{r7, lr}
 1516              	.LCFI52:
 1517              		.cfi_def_cfa_offset 8
 1518              		.cfi_offset 7, -8
 1519              		.cfi_offset 14, -4
 1520 0002 8EB0     		sub	sp, sp, #56
 1521              	.LCFI53:
 1522              		.cfi_def_cfa_offset 64
 1523 0004 02AF     		add	r7, sp, #8
 1524              	.LCFI54:
 1525              		.cfi_def_cfa 7, 56
 1526 0006 F860     		str	r0, [r7, #12]
 1527 0008 B960     		str	r1, [r7, #8]
 1528 000a 7A60     		str	r2, [r7, #4]
 1529 000c 3B60     		str	r3, [r7]
 718:./Libraries/FreeRTOS/Source/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1530              		.loc 1 718 24
 1531 000e FB68     		ldr	r3, [r7, #12]
 1532 0010 3B62     		str	r3, [r7, #32]
 719:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 1533              		.loc 1 719 8
 1534 0012 0023     		movs	r3, #0
 1535 0014 FB62     		str	r3, [r7, #44]
 720:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 721:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pvRxData );
 1536              		.loc 1 721 2
 1537 0016 BB68     		ldr	r3, [r7, #8]
 1538 0018 002B     		cmp	r3, #0
 1539 001a 0AD1     		bne	.L93
 1540              	.LBB140:
 1541              	.LBB141:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1542              		.loc 2 195 2
 1543              		.syntax unified
 1544              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1545 001c 4FF05003 			mov r3, #80												
 1546 0020 83F31188 		msr basepri, r3											
 1547 0024 BFF36F8F 		isb														
 1548 0028 BFF34F8F 		dsb														
 1549              	
 1550              	@ 0 "" 2
 1551              		.thumb
 1552              		.syntax unified
 1553 002c FB61     		str	r3, [r7, #28]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1554              		.loc 2 203 1
ARM GAS  /tmp/cc9FsJVQ.s 			page 45


 1555 002e 00BF     		nop
 1556              	.L94:
 1557              	.LBE141:
 1558              	.LBE140:
 1559              		.loc 1 721 2 discriminator 1
 1560 0030 FEE7     		b	.L94
 1561              	.L93:
 722:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 1562              		.loc 1 722 2
 1563 0032 3B6A     		ldr	r3, [r7, #32]
 1564 0034 002B     		cmp	r3, #0
 1565 0036 0AD1     		bne	.L95
 1566              	.LBB142:
 1567              	.LBB143:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1568              		.loc 2 195 2
 1569              		.syntax unified
 1570              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1571 0038 4FF05003 			mov r3, #80												
 1572 003c 83F31188 		msr basepri, r3											
 1573 0040 BFF36F8F 		isb														
 1574 0044 BFF34F8F 		dsb														
 1575              	
 1576              	@ 0 "" 2
 1577              		.thumb
 1578              		.syntax unified
 1579 0048 BB61     		str	r3, [r7, #24]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1580              		.loc 2 203 1
 1581 004a 00BF     		nop
 1582              	.L96:
 1583              	.LBE143:
 1584              	.LBE142:
 1585              		.loc 1 722 2 discriminator 2
 1586 004c FEE7     		b	.L96
 1587              	.L95:
 723:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 724:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* This receive function is used by both message buffers, which store
 725:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	discrete messages, and stream buffers, which store a continuous stream of
 726:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	bytes.  Discrete messages include an additional
 727:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the
 728:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	message. */
 729:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 1588              		.loc 1 729 22
 1589 004e 3B6A     		ldr	r3, [r7, #32]
 1590 0050 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1591              		.loc 1 729 32
 1592 0052 03F00103 		and	r3, r3, #1
 1593              		.loc 1 729 4
 1594 0056 002B     		cmp	r3, #0
 1595 0058 02D0     		beq	.L97
 730:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 731:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
 1596              		.loc 1 731 30
 1597 005a 0423     		movs	r3, #4
 1598 005c 7B62     		str	r3, [r7, #36]
 1599 005e 01E0     		b	.L98
ARM GAS  /tmp/cc9FsJVQ.s 			page 46


 1600              	.L97:
 732:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 733:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 734:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 735:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xBytesToStoreMessageLength = 0;
 1601              		.loc 1 735 30
 1602 0060 0023     		movs	r3, #0
 1603 0062 7B62     		str	r3, [r7, #36]
 1604              	.L98:
 736:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 737:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 738:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 1605              		.loc 1 738 4
 1606 0064 3B68     		ldr	r3, [r7]
 1607 0066 002B     		cmp	r3, #0
 1608 0068 34D0     		beq	.L99
 739:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 740:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* Checking if there is data and clearing the notification state must be
 741:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		performed atomically. */
 742:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		taskENTER_CRITICAL();
 1609              		.loc 1 742 3
 1610 006a FFF7FEFF 		bl	vPortEnterCritical
 743:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 744:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 1611              		.loc 1 744 22
 1612 006e 386A     		ldr	r0, [r7, #32]
 1613 0070 FFF7FEFF 		bl	prvBytesInBuffer
 1614 0074 B862     		str	r0, [r7, #40]
 745:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 746:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			/* If this function was invoked by a message buffer read then
 747:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			xBytesToStoreMessageLength holds the number of bytes used to hold
 748:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			the length of the next discrete message.  If this function was
 749:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			invoked by a stream buffer read then xBytesToStoreMessageLength will
 750:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			be 0. */
 751:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			if( xBytesAvailable <= xBytesToStoreMessageLength )
 1615              		.loc 1 751 6
 1616 0076 BA6A     		ldr	r2, [r7, #40]
 1617 0078 7B6A     		ldr	r3, [r7, #36]
 1618 007a 9A42     		cmp	r2, r3
 1619 007c 16D8     		bhi	.L100
 752:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			{
 753:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				/* Clear notification state as going to wait for data. */
 754:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				( void ) xTaskNotifyStateClear( NULL );
 1620              		.loc 1 754 14
 1621 007e 0020     		movs	r0, #0
 1622 0080 FFF7FEFF 		bl	xTaskNotifyStateClear
 755:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 756:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				/* Should only be one reader. */
 757:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				configASSERT( pxStreamBuffer->xTaskWaitingToReceive == NULL );
 1623              		.loc 1 757 5
 1624 0084 3B6A     		ldr	r3, [r7, #32]
 1625 0086 1B69     		ldr	r3, [r3, #16]
 1626 0088 002B     		cmp	r3, #0
 1627 008a 0AD0     		beq	.L101
 1628              	.LBB144:
 1629              	.LBB145:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  /tmp/cc9FsJVQ.s 			page 47


 1630              		.loc 2 195 2
 1631              		.syntax unified
 1632              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1633 008c 4FF05003 			mov r3, #80												
 1634 0090 83F31188 		msr basepri, r3											
 1635 0094 BFF36F8F 		isb														
 1636 0098 BFF34F8F 		dsb														
 1637              	
 1638              	@ 0 "" 2
 1639              		.thumb
 1640              		.syntax unified
 1641 009c 7B61     		str	r3, [r7, #20]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1642              		.loc 2 203 1
 1643 009e 00BF     		nop
 1644              	.L102:
 1645              	.LBE145:
 1646              	.LBE144:
 1647              		.loc 1 757 5 discriminator 3
 1648 00a0 FEE7     		b	.L102
 1649              	.L101:
 758:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				pxStreamBuffer->xTaskWaitingToReceive = xTaskGetCurrentTaskHandle();
 1650              		.loc 1 758 45
 1651 00a2 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1652 00a6 0246     		mov	r2, r0
 1653              		.loc 1 758 43
 1654 00a8 3B6A     		ldr	r3, [r7, #32]
 1655 00aa 1A61     		str	r2, [r3, #16]
 1656              	.L100:
 759:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			}
 760:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			else
 761:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			{
 762:./Libraries/FreeRTOS/Source/stream_buffer.c **** 				mtCOVERAGE_TEST_MARKER();
 763:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			}
 764:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 765:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		taskEXIT_CRITICAL();
 1657              		.loc 1 765 3
 1658 00ac FFF7FEFF 		bl	vPortExitCritical
 766:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 767:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( xBytesAvailable <= xBytesToStoreMessageLength )
 1659              		.loc 1 767 5
 1660 00b0 BA6A     		ldr	r2, [r7, #40]
 1661 00b2 7B6A     		ldr	r3, [r7, #36]
 1662 00b4 9A42     		cmp	r2, r3
 1663 00b6 11D8     		bhi	.L103
 768:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 769:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			/* Wait for data to be available. */
 770:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			traceBLOCKING_ON_STREAM_BUFFER_RECEIVE( xStreamBuffer );
 771:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 1664              		.loc 1 771 13
 1665 00b8 3B68     		ldr	r3, [r7]
 1666 00ba 0022     		movs	r2, #0
 1667 00bc 0021     		movs	r1, #0
 1668 00be 0020     		movs	r0, #0
 1669 00c0 FFF7FEFF 		bl	xTaskNotifyWait
 772:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToReceive = NULL;
 1670              		.loc 1 772 42
ARM GAS  /tmp/cc9FsJVQ.s 			page 48


 1671 00c4 3B6A     		ldr	r3, [r7, #32]
 1672 00c6 0022     		movs	r2, #0
 1673 00c8 1A61     		str	r2, [r3, #16]
 773:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 774:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			/* Recheck the data available after blocking. */
 775:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 1674              		.loc 1 775 22
 1675 00ca 386A     		ldr	r0, [r7, #32]
 1676 00cc FFF7FEFF 		bl	prvBytesInBuffer
 1677 00d0 B862     		str	r0, [r7, #40]
 1678 00d2 03E0     		b	.L103
 1679              	.L99:
 776:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 777:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		else
 778:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 779:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 780:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 781:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 782:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 783:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 784:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 1680              		.loc 1 784 21
 1681 00d4 386A     		ldr	r0, [r7, #32]
 1682 00d6 FFF7FEFF 		bl	prvBytesInBuffer
 1683 00da B862     		str	r0, [r7, #40]
 1684              	.L103:
 785:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 786:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 787:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* Whether receiving a discrete message (where xBytesToStoreMessageLength
 788:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	holds the number of bytes used to store the message length) or a stream of
 789:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	bytes (where xBytesToStoreMessageLength is zero), the number of bytes
 790:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	available must be greater than xBytesToStoreMessageLength to be able to
 791:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	read bytes from the buffer. */
 792:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xBytesAvailable > xBytesToStoreMessageLength )
 1685              		.loc 1 792 4
 1686 00dc BA6A     		ldr	r2, [r7, #40]
 1687 00de 7B6A     		ldr	r3, [r7, #36]
 1688 00e0 9A42     		cmp	r2, r3
 1689 00e2 1DD9     		bls	.L104
 793:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 794:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xReceivedLength = prvReadMessageFromBuffer( pxStreamBuffer, pvRxData, xBufferLengthBytes, xBytesA
 1690              		.loc 1 794 21
 1691 00e4 7B6A     		ldr	r3, [r7, #36]
 1692 00e6 0093     		str	r3, [sp]
 1693 00e8 BB6A     		ldr	r3, [r7, #40]
 1694 00ea 7A68     		ldr	r2, [r7, #4]
 1695 00ec B968     		ldr	r1, [r7, #8]
 1696 00ee 386A     		ldr	r0, [r7, #32]
 1697 00f0 FFF7FEFF 		bl	prvReadMessageFromBuffer
 1698 00f4 F862     		str	r0, [r7, #44]
 795:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 796:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* Was a task waiting for space in the buffer? */
 797:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( xReceivedLength != ( size_t ) 0 )
 1699              		.loc 1 797 5
 1700 00f6 FB6A     		ldr	r3, [r7, #44]
 1701 00f8 002B     		cmp	r3, #0
 1702 00fa 11D0     		beq	.L104
ARM GAS  /tmp/cc9FsJVQ.s 			page 49


 798:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 799:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			traceSTREAM_BUFFER_RECEIVE( xStreamBuffer, xReceivedLength );
 800:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			sbRECEIVE_COMPLETED( pxStreamBuffer );
 1703              		.loc 1 800 4
 1704 00fc FFF7FEFF 		bl	vTaskSuspendAll
 1705 0100 3B6A     		ldr	r3, [r7, #32]
 1706 0102 5B69     		ldr	r3, [r3, #20]
 1707 0104 002B     		cmp	r3, #0
 1708 0106 09D0     		beq	.L105
 1709              		.loc 1 800 4 is_stmt 0 discriminator 1
 1710 0108 3B6A     		ldr	r3, [r7, #32]
 1711 010a 5869     		ldr	r0, [r3, #20]
 1712 010c 0023     		movs	r3, #0
 1713 010e 0022     		movs	r2, #0
 1714 0110 0021     		movs	r1, #0
 1715 0112 FFF7FEFF 		bl	xTaskGenericNotify
 1716 0116 3B6A     		ldr	r3, [r7, #32]
 1717 0118 0022     		movs	r2, #0
 1718 011a 5A61     		str	r2, [r3, #20]
 1719              	.L105:
 1720              		.loc 1 800 4 discriminator 3
 1721 011c FFF7FEFF 		bl	xTaskResumeAll
 1722              	.L104:
 801:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 802:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		else
 803:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 804:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 805:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 806:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 807:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 808:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 809:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		traceSTREAM_BUFFER_RECEIVE_FAILED( xStreamBuffer );
 810:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 811:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 812:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 813:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xReceivedLength;
 1723              		.loc 1 813 9 is_stmt 1
 1724 0120 FB6A     		ldr	r3, [r7, #44]
 814:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 1725              		.loc 1 814 1
 1726 0122 1846     		mov	r0, r3
 1727 0124 3037     		adds	r7, r7, #48
 1728              	.LCFI55:
 1729              		.cfi_def_cfa_offset 8
 1730 0126 BD46     		mov	sp, r7
 1731              	.LCFI56:
 1732              		.cfi_def_cfa_register 13
 1733              		@ sp needed
 1734 0128 80BD     		pop	{r7, pc}
 1735              		.cfi_endproc
 1736              	.LFE14:
 1738              		.section	.text.xStreamBufferNextMessageLengthBytes,"ax",%progbits
 1739              		.align	1
 1740              		.global	xStreamBufferNextMessageLengthBytes
 1741              		.syntax unified
 1742              		.thumb
 1743              		.thumb_func
ARM GAS  /tmp/cc9FsJVQ.s 			page 50


 1744              		.fpu fpv5-d16
 1746              	xStreamBufferNextMessageLengthBytes:
 1747              	.LFB15:
 815:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 816:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 817:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xStreamBufferNextMessageLengthBytes( StreamBufferHandle_t xStreamBuffer )
 818:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 1748              		.loc 1 818 1
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 40
 1751              		@ frame_needed = 1, uses_anonymous_args = 0
 1752 0000 80B5     		push	{r7, lr}
 1753              	.LCFI57:
 1754              		.cfi_def_cfa_offset 8
 1755              		.cfi_offset 7, -8
 1756              		.cfi_offset 14, -4
 1757 0002 8AB0     		sub	sp, sp, #40
 1758              	.LCFI58:
 1759              		.cfi_def_cfa_offset 48
 1760 0004 00AF     		add	r7, sp, #0
 1761              	.LCFI59:
 1762              		.cfi_def_cfa_register 7
 1763 0006 7860     		str	r0, [r7, #4]
 819:./Libraries/FreeRTOS/Source/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1764              		.loc 1 819 24
 1765 0008 7B68     		ldr	r3, [r7, #4]
 1766 000a 3B62     		str	r3, [r7, #32]
 820:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xReturn, xBytesAvailable, xOriginalTail;
 821:./Libraries/FreeRTOS/Source/stream_buffer.c **** configMESSAGE_BUFFER_LENGTH_TYPE xTempReturn;
 822:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 823:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 1767              		.loc 1 823 2
 1768 000c 3B6A     		ldr	r3, [r7, #32]
 1769 000e 002B     		cmp	r3, #0
 1770 0010 0AD1     		bne	.L108
 1771              	.LBB146:
 1772              	.LBB147:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1773              		.loc 2 195 2
 1774              		.syntax unified
 1775              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1776 0012 4FF05003 			mov r3, #80												
 1777 0016 83F31188 		msr basepri, r3											
 1778 001a BFF36F8F 		isb														
 1779 001e BFF34F8F 		dsb														
 1780              	
 1781              	@ 0 "" 2
 1782              		.thumb
 1783              		.syntax unified
 1784 0022 7B61     		str	r3, [r7, #20]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1785              		.loc 2 203 1
 1786 0024 00BF     		nop
 1787              	.L109:
 1788              	.LBE147:
 1789              	.LBE146:
 1790              		.loc 1 823 2 discriminator 1
ARM GAS  /tmp/cc9FsJVQ.s 			page 51


 1791 0026 FEE7     		b	.L109
 1792              	.L108:
 824:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 825:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* Ensure the stream buffer is being used as a message buffer. */
 826:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 1793              		.loc 1 826 22
 1794 0028 3B6A     		ldr	r3, [r7, #32]
 1795 002a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1796              		.loc 1 826 32
 1797 002c 03F00103 		and	r3, r3, #1
 1798              		.loc 1 826 4
 1799 0030 002B     		cmp	r3, #0
 1800 0032 27D0     		beq	.L110
 827:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 828:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 1801              		.loc 1 828 21
 1802 0034 386A     		ldr	r0, [r7, #32]
 1803 0036 FFF7FEFF 		bl	prvBytesInBuffer
 1804 003a F861     		str	r0, [r7, #28]
 829:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( xBytesAvailable > sbBYTES_TO_STORE_MESSAGE_LENGTH )
 1805              		.loc 1 829 5
 1806 003c FB69     		ldr	r3, [r7, #28]
 1807 003e 042B     		cmp	r3, #4
 1808 0040 0FD9     		bls	.L111
 830:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 831:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			/* The number of bytes available is greater than the number of bytes
 832:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			required to hold the length of the next message, so another message
 833:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			is available.  Return its length without removing the length bytes
 834:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			from the buffer.  A copy of the tail is stored so the buffer can be
 835:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			returned to its prior state as the message is not actually being
 836:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			removed from the buffer. */
 837:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			xOriginalTail = pxStreamBuffer->xTail;
 1809              		.loc 1 837 18
 1810 0042 3B6A     		ldr	r3, [r7, #32]
 1811 0044 1B68     		ldr	r3, [r3]
 1812 0046 BB61     		str	r3, [r7, #24]
 838:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempReturn, sbBYTES_TO_STORE_ME
 1813              		.loc 1 838 13
 1814 0048 07F10C01 		add	r1, r7, #12
 1815 004c FB69     		ldr	r3, [r7, #28]
 1816 004e 0422     		movs	r2, #4
 1817 0050 386A     		ldr	r0, [r7, #32]
 1818 0052 FFF7FEFF 		bl	prvReadBytesFromBuffer
 839:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			xReturn = ( size_t ) xTempReturn;
 1819              		.loc 1 839 12
 1820 0056 FB68     		ldr	r3, [r7, #12]
 1821 0058 7B62     		str	r3, [r7, #36]
 840:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			pxStreamBuffer->xTail = xOriginalTail;
 1822              		.loc 1 840 26
 1823 005a 3B6A     		ldr	r3, [r7, #32]
 1824 005c BA69     		ldr	r2, [r7, #24]
 1825 005e 1A60     		str	r2, [r3]
 1826 0060 12E0     		b	.L112
 1827              	.L111:
 841:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 842:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		else
 843:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
ARM GAS  /tmp/cc9FsJVQ.s 			page 52


 844:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			/* The minimum amount of bytes in a message buffer is
 845:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			( sbBYTES_TO_STORE_MESSAGE_LENGTH + 1 ), so if xBytesAvailable is
 846:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			less than sbBYTES_TO_STORE_MESSAGE_LENGTH the only other valid
 847:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			value is 0. */
 848:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			configASSERT( xBytesAvailable == 0 );
 1828              		.loc 1 848 4
 1829 0062 FB69     		ldr	r3, [r7, #28]
 1830 0064 002B     		cmp	r3, #0
 1831 0066 0AD0     		beq	.L113
 1832              	.LBB148:
 1833              	.LBB149:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1834              		.loc 2 195 2
 1835              		.syntax unified
 1836              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1837 0068 4FF05003 			mov r3, #80												
 1838 006c 83F31188 		msr basepri, r3											
 1839 0070 BFF36F8F 		isb														
 1840 0074 BFF34F8F 		dsb														
 1841              	
 1842              	@ 0 "" 2
 1843              		.thumb
 1844              		.syntax unified
 1845 0078 3B61     		str	r3, [r7, #16]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1846              		.loc 2 203 1
 1847 007a 00BF     		nop
 1848              	.L114:
 1849              	.LBE149:
 1850              	.LBE148:
 1851              		.loc 1 848 4 discriminator 2
 1852 007c FEE7     		b	.L114
 1853              	.L113:
 849:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			xReturn = 0;
 1854              		.loc 1 849 12
 1855 007e 0023     		movs	r3, #0
 1856 0080 7B62     		str	r3, [r7, #36]
 1857 0082 01E0     		b	.L112
 1858              	.L110:
 850:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 851:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 852:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 853:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 854:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xReturn = 0;
 1859              		.loc 1 854 11
 1860 0084 0023     		movs	r3, #0
 1861 0086 7B62     		str	r3, [r7, #36]
 1862              	.L112:
 855:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 856:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 857:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xReturn;
 1863              		.loc 1 857 9
 1864 0088 7B6A     		ldr	r3, [r7, #36]
 858:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 1865              		.loc 1 858 1
 1866 008a 1846     		mov	r0, r3
 1867 008c 2837     		adds	r7, r7, #40
ARM GAS  /tmp/cc9FsJVQ.s 			page 53


 1868              	.LCFI60:
 1869              		.cfi_def_cfa_offset 8
 1870 008e BD46     		mov	sp, r7
 1871              	.LCFI61:
 1872              		.cfi_def_cfa_register 13
 1873              		@ sp needed
 1874 0090 80BD     		pop	{r7, pc}
 1875              		.cfi_endproc
 1876              	.LFE15:
 1878              		.section	.text.xStreamBufferReceiveFromISR,"ax",%progbits
 1879              		.align	1
 1880              		.global	xStreamBufferReceiveFromISR
 1881              		.syntax unified
 1882              		.thumb
 1883              		.thumb_func
 1884              		.fpu fpv5-d16
 1886              	xStreamBufferReceiveFromISR:
 1887              	.LFB16:
 859:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 860:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 861:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xStreamBufferReceiveFromISR( StreamBufferHandle_t xStreamBuffer,
 862:./Libraries/FreeRTOS/Source/stream_buffer.c **** 									void *pvRxData,
 863:./Libraries/FreeRTOS/Source/stream_buffer.c **** 									size_t xBufferLengthBytes,
 864:./Libraries/FreeRTOS/Source/stream_buffer.c **** 									BaseType_t * const pxHigherPriorityTaskWoken )
 865:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 1888              		.loc 1 865 1
 1889              		.cfi_startproc
 1890              		@ args = 0, pretend = 0, frame = 56
 1891              		@ frame_needed = 1, uses_anonymous_args = 0
 1892 0000 80B5     		push	{r7, lr}
 1893              	.LCFI62:
 1894              		.cfi_def_cfa_offset 8
 1895              		.cfi_offset 7, -8
 1896              		.cfi_offset 14, -4
 1897 0002 90B0     		sub	sp, sp, #64
 1898              	.LCFI63:
 1899              		.cfi_def_cfa_offset 72
 1900 0004 02AF     		add	r7, sp, #8
 1901              	.LCFI64:
 1902              		.cfi_def_cfa 7, 64
 1903 0006 F860     		str	r0, [r7, #12]
 1904 0008 B960     		str	r1, [r7, #8]
 1905 000a 7A60     		str	r2, [r7, #4]
 1906 000c 3B60     		str	r3, [r7]
 866:./Libraries/FreeRTOS/Source/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1907              		.loc 1 866 24
 1908 000e FB68     		ldr	r3, [r7, #12]
 1909 0010 FB62     		str	r3, [r7, #44]
 867:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 1910              		.loc 1 867 8
 1911 0012 0023     		movs	r3, #0
 1912 0014 7B63     		str	r3, [r7, #52]
 868:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 869:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pvRxData );
 1913              		.loc 1 869 2
 1914 0016 BB68     		ldr	r3, [r7, #8]
 1915 0018 002B     		cmp	r3, #0
ARM GAS  /tmp/cc9FsJVQ.s 			page 54


 1916 001a 0AD1     		bne	.L117
 1917              	.LBB150:
 1918              	.LBB151:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1919              		.loc 2 195 2
 1920              		.syntax unified
 1921              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1922 001c 4FF05003 			mov r3, #80												
 1923 0020 83F31188 		msr basepri, r3											
 1924 0024 BFF36F8F 		isb														
 1925 0028 BFF34F8F 		dsb														
 1926              	
 1927              	@ 0 "" 2
 1928              		.thumb
 1929              		.syntax unified
 1930 002c 3B62     		str	r3, [r7, #32]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1931              		.loc 2 203 1
 1932 002e 00BF     		nop
 1933              	.L118:
 1934              	.LBE151:
 1935              	.LBE150:
 1936              		.loc 1 869 2 discriminator 1
 1937 0030 FEE7     		b	.L118
 1938              	.L117:
 870:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 1939              		.loc 1 870 2
 1940 0032 FB6A     		ldr	r3, [r7, #44]
 1941 0034 002B     		cmp	r3, #0
 1942 0036 0AD1     		bne	.L119
 1943              	.LBB152:
 1944              	.LBB153:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1945              		.loc 2 195 2
 1946              		.syntax unified
 1947              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1948 0038 4FF05003 			mov r3, #80												
 1949 003c 83F31188 		msr basepri, r3											
 1950 0040 BFF36F8F 		isb														
 1951 0044 BFF34F8F 		dsb														
 1952              	
 1953              	@ 0 "" 2
 1954              		.thumb
 1955              		.syntax unified
 1956 0048 FB61     		str	r3, [r7, #28]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1957              		.loc 2 203 1
 1958 004a 00BF     		nop
 1959              	.L120:
 1960              	.LBE153:
 1961              	.LBE152:
 1962              		.loc 1 870 2 discriminator 2
 1963 004c FEE7     		b	.L120
 1964              	.L119:
 871:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 872:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* This receive function is used by both message buffers, which store
 873:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	discrete messages, and stream buffers, which store a continuous stream of
ARM GAS  /tmp/cc9FsJVQ.s 			page 55


 874:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	bytes.  Discrete messages include an additional
 875:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the
 876:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	message. */
 877:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 1965              		.loc 1 877 22
 1966 004e FB6A     		ldr	r3, [r7, #44]
 1967 0050 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1968              		.loc 1 877 32
 1969 0052 03F00103 		and	r3, r3, #1
 1970              		.loc 1 877 4
 1971 0056 002B     		cmp	r3, #0
 1972 0058 02D0     		beq	.L121
 878:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 879:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
 1973              		.loc 1 879 30
 1974 005a 0423     		movs	r3, #4
 1975 005c 3B63     		str	r3, [r7, #48]
 1976 005e 01E0     		b	.L122
 1977              	.L121:
 880:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 881:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 882:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 883:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xBytesToStoreMessageLength = 0;
 1978              		.loc 1 883 30
 1979 0060 0023     		movs	r3, #0
 1980 0062 3B63     		str	r3, [r7, #48]
 1981              	.L122:
 884:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 885:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 886:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 1982              		.loc 1 886 20
 1983 0064 F86A     		ldr	r0, [r7, #44]
 1984 0066 FFF7FEFF 		bl	prvBytesInBuffer
 1985 006a B862     		str	r0, [r7, #40]
 887:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 888:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* Whether receiving a discrete message (where xBytesToStoreMessageLength
 889:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	holds the number of bytes used to store the message length) or a stream of
 890:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	bytes (where xBytesToStoreMessageLength is zero), the number of bytes
 891:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	available must be greater than xBytesToStoreMessageLength to be able to
 892:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	read bytes from the buffer. */
 893:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xBytesAvailable > xBytesToStoreMessageLength )
 1986              		.loc 1 893 4
 1987 006c BA6A     		ldr	r2, [r7, #40]
 1988 006e 3B6B     		ldr	r3, [r7, #48]
 1989 0070 9A42     		cmp	r2, r3
 1990 0072 2FD9     		bls	.L123
 894:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 895:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xReceivedLength = prvReadMessageFromBuffer( pxStreamBuffer, pvRxData, xBufferLengthBytes, xBytesA
 1991              		.loc 1 895 21
 1992 0074 3B6B     		ldr	r3, [r7, #48]
 1993 0076 0093     		str	r3, [sp]
 1994 0078 BB6A     		ldr	r3, [r7, #40]
 1995 007a 7A68     		ldr	r2, [r7, #4]
 1996 007c B968     		ldr	r1, [r7, #8]
 1997 007e F86A     		ldr	r0, [r7, #44]
 1998 0080 FFF7FEFF 		bl	prvReadMessageFromBuffer
 1999 0084 7863     		str	r0, [r7, #52]
ARM GAS  /tmp/cc9FsJVQ.s 			page 56


 896:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 897:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* Was a task waiting for space in the buffer? */
 898:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( xReceivedLength != ( size_t ) 0 )
 2000              		.loc 1 898 5
 2001 0086 7B6B     		ldr	r3, [r7, #52]
 2002 0088 002B     		cmp	r3, #0
 2003 008a 23D0     		beq	.L123
 2004              	.LBB154:
 2005              	.LBB155:
 2006              	.LBB156:
 211:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2007              		.loc 2 211 2
 2008              		.syntax unified
 2009              	@ 211 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2010 008c EFF31182 			mrs r2, basepri											
 2011 0090 4FF05003 		mov r3, #80												
 2012 0094 83F31188 		msr basepri, r3											
 2013 0098 BFF36F8F 		isb														
 2014 009c BFF34F8F 		dsb														
 2015              	
 2016              	@ 0 "" 2
 2017              		.thumb
 2018              		.syntax unified
 2019 00a0 BA61     		str	r2, [r7, #24]
 2020 00a2 7B61     		str	r3, [r7, #20]
 223:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2021              		.loc 2 223 9
 2022 00a4 BB69     		ldr	r3, [r7, #24]
 2023              	.LBE156:
 2024              	.LBE155:
 899:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 900:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			sbRECEIVE_COMPLETED_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken );
 2025              		.loc 1 900 4
 2026 00a6 7B62     		str	r3, [r7, #36]
 2027 00a8 FB6A     		ldr	r3, [r7, #44]
 2028 00aa 5B69     		ldr	r3, [r3, #20]
 2029 00ac 002B     		cmp	r3, #0
 2030 00ae 0BD0     		beq	.L125
 2031              		.loc 1 900 4 is_stmt 0 discriminator 1
 2032 00b0 FB6A     		ldr	r3, [r7, #44]
 2033 00b2 5869     		ldr	r0, [r3, #20]
 2034 00b4 3B68     		ldr	r3, [r7]
 2035 00b6 0093     		str	r3, [sp]
 2036 00b8 0023     		movs	r3, #0
 2037 00ba 0022     		movs	r2, #0
 2038 00bc 0021     		movs	r1, #0
 2039 00be FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 2040 00c2 FB6A     		ldr	r3, [r7, #44]
 2041 00c4 0022     		movs	r2, #0
 2042 00c6 5A61     		str	r2, [r3, #20]
 2043              	.L125:
 2044 00c8 7B6A     		ldr	r3, [r7, #36]
 2045 00ca 3B61     		str	r3, [r7, #16]
 2046              	.LBB157:
 2047              	.LBB158:
 229:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2048              		.loc 2 229 2 is_stmt 1 discriminator 3
ARM GAS  /tmp/cc9FsJVQ.s 			page 57


 2049 00cc 3B69     		ldr	r3, [r7, #16]
 2050              		.syntax unified
 2051              	@ 229 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2052 00ce 83F31188 			msr basepri, r3	
 2053              	@ 0 "" 2
 2054              		.loc 2 233 1 discriminator 3
 2055              		.thumb
 2056              		.syntax unified
 2057 00d2 00BF     		nop
 2058              	.L123:
 2059              	.LBE158:
 2060              	.LBE157:
 2061              	.LBE154:
 901:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 902:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		else
 903:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 904:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 905:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 906:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 907:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 908:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 909:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 910:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 911:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 912:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	traceSTREAM_BUFFER_RECEIVE_FROM_ISR( xStreamBuffer, xReceivedLength );
 913:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 914:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xReceivedLength;
 2062              		.loc 1 914 9
 2063 00d4 7B6B     		ldr	r3, [r7, #52]
 915:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 2064              		.loc 1 915 1
 2065 00d6 1846     		mov	r0, r3
 2066 00d8 3837     		adds	r7, r7, #56
 2067              	.LCFI65:
 2068              		.cfi_def_cfa_offset 8
 2069 00da BD46     		mov	sp, r7
 2070              	.LCFI66:
 2071              		.cfi_def_cfa_register 13
 2072              		@ sp needed
 2073 00dc 80BD     		pop	{r7, pc}
 2074              		.cfi_endproc
 2075              	.LFE16:
 2077              		.section	.text.prvReadMessageFromBuffer,"ax",%progbits
 2078              		.align	1
 2079              		.syntax unified
 2080              		.thumb
 2081              		.thumb_func
 2082              		.fpu fpv5-d16
 2084              	prvReadMessageFromBuffer:
 2085              	.LFB17:
 916:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 917:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 918:./Libraries/FreeRTOS/Source/stream_buffer.c **** static size_t prvReadMessageFromBuffer( StreamBuffer_t *pxStreamBuffer,
 919:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										void *pvRxData,
 920:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										size_t xBufferLengthBytes,
 921:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										size_t xBytesAvailable,
 922:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										size_t xBytesToStoreMessageLength )
ARM GAS  /tmp/cc9FsJVQ.s 			page 58


 923:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 2086              		.loc 1 923 1
 2087              		.cfi_startproc
 2088              		@ args = 4, pretend = 0, frame = 32
 2089              		@ frame_needed = 1, uses_anonymous_args = 0
 2090 0000 80B5     		push	{r7, lr}
 2091              	.LCFI67:
 2092              		.cfi_def_cfa_offset 8
 2093              		.cfi_offset 7, -8
 2094              		.cfi_offset 14, -4
 2095 0002 88B0     		sub	sp, sp, #32
 2096              	.LCFI68:
 2097              		.cfi_def_cfa_offset 40
 2098 0004 00AF     		add	r7, sp, #0
 2099              	.LCFI69:
 2100              		.cfi_def_cfa_register 7
 2101 0006 F860     		str	r0, [r7, #12]
 2102 0008 B960     		str	r1, [r7, #8]
 2103 000a 7A60     		str	r2, [r7, #4]
 2104 000c 3B60     		str	r3, [r7]
 924:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xOriginalTail, xReceivedLength, xNextMessageLength;
 925:./Libraries/FreeRTOS/Source/stream_buffer.c **** configMESSAGE_BUFFER_LENGTH_TYPE xTempNextMessageLength;
 926:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 927:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xBytesToStoreMessageLength != ( size_t ) 0 )
 2105              		.loc 1 927 4
 2106 000e BB6A     		ldr	r3, [r7, #40]
 2107 0010 002B     		cmp	r3, #0
 2108 0012 19D0     		beq	.L128
 928:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 929:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* A discrete message is being received.  First receive the length
 930:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		of the message.  A copy of the tail is stored so the buffer can be
 931:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		returned to its prior state if the length of the message is too
 932:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		large for the provided buffer. */
 933:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xOriginalTail = pxStreamBuffer->xTail;
 2109              		.loc 1 933 17
 2110 0014 FB68     		ldr	r3, [r7, #12]
 2111 0016 1B68     		ldr	r3, [r3]
 2112 0018 BB61     		str	r3, [r7, #24]
 934:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempNextMessageLength, xBytesToS
 2113              		.loc 1 934 12
 2114 001a 07F11001 		add	r1, r7, #16
 2115 001e 3B68     		ldr	r3, [r7]
 2116 0020 BA6A     		ldr	r2, [r7, #40]
 2117 0022 F868     		ldr	r0, [r7, #12]
 2118 0024 FFF7FEFF 		bl	prvReadBytesFromBuffer
 935:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xNextMessageLength = ( size_t ) xTempNextMessageLength;
 2119              		.loc 1 935 22
 2120 0028 3B69     		ldr	r3, [r7, #16]
 2121 002a FB61     		str	r3, [r7, #28]
 936:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 937:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* Reduce the number of bytes available by the number of bytes just
 938:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		read out. */
 939:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xBytesAvailable -= xBytesToStoreMessageLength;
 2122              		.loc 1 939 19
 2123 002c 3A68     		ldr	r2, [r7]
 2124 002e BB6A     		ldr	r3, [r7, #40]
 2125 0030 D31A     		subs	r3, r2, r3
ARM GAS  /tmp/cc9FsJVQ.s 			page 59


 2126 0032 3B60     		str	r3, [r7]
 940:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 941:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* Check there is enough space in the buffer provided by the
 942:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		user. */
 943:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( xNextMessageLength > xBufferLengthBytes )
 2127              		.loc 1 943 5
 2128 0034 FA69     		ldr	r2, [r7, #28]
 2129 0036 7B68     		ldr	r3, [r7, #4]
 2130 0038 9A42     		cmp	r2, r3
 2131 003a 07D9     		bls	.L129
 944:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 945:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			/* The user has provided insufficient space to read the message
 946:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			so return the buffer to its previous state (so the length of
 947:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			the message is in the buffer again). */
 948:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			pxStreamBuffer->xTail = xOriginalTail;
 2132              		.loc 1 948 26
 2133 003c FB68     		ldr	r3, [r7, #12]
 2134 003e BA69     		ldr	r2, [r7, #24]
 2135 0040 1A60     		str	r2, [r3]
 949:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			xNextMessageLength = 0;
 2136              		.loc 1 949 23
 2137 0042 0023     		movs	r3, #0
 2138 0044 FB61     		str	r3, [r7, #28]
 2139 0046 01E0     		b	.L129
 2140              	.L128:
 950:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 951:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		else
 952:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
 953:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 954:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
 955:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 956:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 957:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 958:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* A stream of bytes is being received (as opposed to a discrete
 959:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		message), so read as many bytes as possible. */
 960:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xNextMessageLength = xBufferLengthBytes;
 2141              		.loc 1 960 22
 2142 0048 7B68     		ldr	r3, [r7, #4]
 2143 004a FB61     		str	r3, [r7, #28]
 2144              	.L129:
 961:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 962:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 963:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* Read the actual data. */
 964:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	xReceivedLength = prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) pvRxData, xNextMessageLeng
 2145              		.loc 1 964 20
 2146 004c 3B68     		ldr	r3, [r7]
 2147 004e FA69     		ldr	r2, [r7, #28]
 2148 0050 B968     		ldr	r1, [r7, #8]
 2149 0052 F868     		ldr	r0, [r7, #12]
 2150 0054 FFF7FEFF 		bl	prvReadBytesFromBuffer
 2151 0058 7861     		str	r0, [r7, #20]
 965:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 966:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xReceivedLength;
 2152              		.loc 1 966 9
 2153 005a 7B69     		ldr	r3, [r7, #20]
 967:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 2154              		.loc 1 967 1
ARM GAS  /tmp/cc9FsJVQ.s 			page 60


 2155 005c 1846     		mov	r0, r3
 2156 005e 2037     		adds	r7, r7, #32
 2157              	.LCFI70:
 2158              		.cfi_def_cfa_offset 8
 2159 0060 BD46     		mov	sp, r7
 2160              	.LCFI71:
 2161              		.cfi_def_cfa_register 13
 2162              		@ sp needed
 2163 0062 80BD     		pop	{r7, pc}
 2164              		.cfi_endproc
 2165              	.LFE17:
 2167              		.section	.text.xStreamBufferIsEmpty,"ax",%progbits
 2168              		.align	1
 2169              		.global	xStreamBufferIsEmpty
 2170              		.syntax unified
 2171              		.thumb
 2172              		.thumb_func
 2173              		.fpu fpv5-d16
 2175              	xStreamBufferIsEmpty:
 2176              	.LFB18:
 968:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 969:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 970:./Libraries/FreeRTOS/Source/stream_buffer.c **** BaseType_t xStreamBufferIsEmpty( StreamBufferHandle_t xStreamBuffer )
 971:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 2177              		.loc 1 971 1
 2178              		.cfi_startproc
 2179              		@ args = 0, pretend = 0, frame = 24
 2180              		@ frame_needed = 1, uses_anonymous_args = 0
 2181              		@ link register save eliminated.
 2182 0000 80B4     		push	{r7}
 2183              	.LCFI72:
 2184              		.cfi_def_cfa_offset 4
 2185              		.cfi_offset 7, -4
 2186 0002 87B0     		sub	sp, sp, #28
 2187              	.LCFI73:
 2188              		.cfi_def_cfa_offset 32
 2189 0004 00AF     		add	r7, sp, #0
 2190              	.LCFI74:
 2191              		.cfi_def_cfa_register 7
 2192 0006 7860     		str	r0, [r7, #4]
 972:./Libraries/FreeRTOS/Source/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2193              		.loc 1 972 30
 2194 0008 7B68     		ldr	r3, [r7, #4]
 2195 000a 3B61     		str	r3, [r7, #16]
 973:./Libraries/FreeRTOS/Source/stream_buffer.c **** BaseType_t xReturn;
 974:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xTail;
 975:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 976:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 2196              		.loc 1 976 2
 2197 000c 3B69     		ldr	r3, [r7, #16]
 2198 000e 002B     		cmp	r3, #0
 2199 0010 0AD1     		bne	.L132
 2200              	.LBB159:
 2201              	.LBB160:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2202              		.loc 2 195 2
 2203              		.syntax unified
ARM GAS  /tmp/cc9FsJVQ.s 			page 61


 2204              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2205 0012 4FF05003 			mov r3, #80												
 2206 0016 83F31188 		msr basepri, r3											
 2207 001a BFF36F8F 		isb														
 2208 001e BFF34F8F 		dsb														
 2209              	
 2210              	@ 0 "" 2
 2211              		.thumb
 2212              		.syntax unified
 2213 0022 BB60     		str	r3, [r7, #8]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2214              		.loc 2 203 1
 2215 0024 00BF     		nop
 2216              	.L133:
 2217              	.LBE160:
 2218              	.LBE159:
 2219              		.loc 1 976 2 discriminator 1
 2220 0026 FEE7     		b	.L133
 2221              	.L132:
 977:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 978:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* True if no bytes are available. */
 979:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	xTail = pxStreamBuffer->xTail;
 2222              		.loc 1 979 8
 2223 0028 3B69     		ldr	r3, [r7, #16]
 2224 002a 1B68     		ldr	r3, [r3]
 2225 002c FB60     		str	r3, [r7, #12]
 980:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( pxStreamBuffer->xHead == xTail )
 2226              		.loc 1 980 20
 2227 002e 3B69     		ldr	r3, [r7, #16]
 2228 0030 5B68     		ldr	r3, [r3, #4]
 2229              		.loc 1 980 4
 2230 0032 FA68     		ldr	r2, [r7, #12]
 2231 0034 9A42     		cmp	r2, r3
 2232 0036 02D1     		bne	.L134
 981:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 982:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xReturn = pdTRUE;
 2233              		.loc 1 982 11
 2234 0038 0123     		movs	r3, #1
 2235 003a 7B61     		str	r3, [r7, #20]
 2236 003c 01E0     		b	.L135
 2237              	.L134:
 983:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 984:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
 985:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 986:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xReturn = pdFALSE;
 2238              		.loc 1 986 11
 2239 003e 0023     		movs	r3, #0
 2240 0040 7B61     		str	r3, [r7, #20]
 2241              	.L135:
 987:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 988:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 989:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xReturn;
 2242              		.loc 1 989 9
 2243 0042 7B69     		ldr	r3, [r7, #20]
 990:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 2244              		.loc 1 990 1
 2245 0044 1846     		mov	r0, r3
ARM GAS  /tmp/cc9FsJVQ.s 			page 62


 2246 0046 1C37     		adds	r7, r7, #28
 2247              	.LCFI75:
 2248              		.cfi_def_cfa_offset 4
 2249 0048 BD46     		mov	sp, r7
 2250              	.LCFI76:
 2251              		.cfi_def_cfa_register 13
 2252              		@ sp needed
 2253 004a 5DF8047B 		ldr	r7, [sp], #4
 2254              	.LCFI77:
 2255              		.cfi_restore 7
 2256              		.cfi_def_cfa_offset 0
 2257 004e 7047     		bx	lr
 2258              		.cfi_endproc
 2259              	.LFE18:
 2261              		.section	.text.xStreamBufferIsFull,"ax",%progbits
 2262              		.align	1
 2263              		.global	xStreamBufferIsFull
 2264              		.syntax unified
 2265              		.thumb
 2266              		.thumb_func
 2267              		.fpu fpv5-d16
 2269              	xStreamBufferIsFull:
 2270              	.LFB19:
 991:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
 992:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 993:./Libraries/FreeRTOS/Source/stream_buffer.c **** BaseType_t xStreamBufferIsFull( StreamBufferHandle_t xStreamBuffer )
 994:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 2271              		.loc 1 994 1
 2272              		.cfi_startproc
 2273              		@ args = 0, pretend = 0, frame = 24
 2274              		@ frame_needed = 1, uses_anonymous_args = 0
 2275 0000 80B5     		push	{r7, lr}
 2276              	.LCFI78:
 2277              		.cfi_def_cfa_offset 8
 2278              		.cfi_offset 7, -8
 2279              		.cfi_offset 14, -4
 2280 0002 86B0     		sub	sp, sp, #24
 2281              	.LCFI79:
 2282              		.cfi_def_cfa_offset 32
 2283 0004 00AF     		add	r7, sp, #0
 2284              	.LCFI80:
 2285              		.cfi_def_cfa_register 7
 2286 0006 7860     		str	r0, [r7, #4]
 995:./Libraries/FreeRTOS/Source/stream_buffer.c **** BaseType_t xReturn;
 996:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xBytesToStoreMessageLength;
 997:./Libraries/FreeRTOS/Source/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2287              		.loc 1 997 30
 2288 0008 7B68     		ldr	r3, [r7, #4]
 2289 000a FB60     		str	r3, [r7, #12]
 998:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
 999:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 2290              		.loc 1 999 2
 2291 000c FB68     		ldr	r3, [r7, #12]
 2292 000e 002B     		cmp	r3, #0
 2293 0010 0AD1     		bne	.L138
 2294              	.LBB161:
 2295              	.LBB162:
ARM GAS  /tmp/cc9FsJVQ.s 			page 63


 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2296              		.loc 2 195 2
 2297              		.syntax unified
 2298              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2299 0012 4FF05003 			mov r3, #80												
 2300 0016 83F31188 		msr basepri, r3											
 2301 001a BFF36F8F 		isb														
 2302 001e BFF34F8F 		dsb														
 2303              	
 2304              	@ 0 "" 2
 2305              		.thumb
 2306              		.syntax unified
 2307 0022 BB60     		str	r3, [r7, #8]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2308              		.loc 2 203 1
 2309 0024 00BF     		nop
 2310              	.L139:
 2311              	.LBE162:
 2312              	.LBE161:
 2313              		.loc 1 999 2 discriminator 1
 2314 0026 FEE7     		b	.L139
 2315              	.L138:
1000:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1001:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* This generic version of the receive function is used by both message
1002:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	buffers, which store discrete messages, and stream buffers, which store a
1003:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	continuous stream of bytes.  Discrete messages include an additional
1004:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the message. */
1005:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 2316              		.loc 1 1005 22
 2317 0028 FB68     		ldr	r3, [r7, #12]
 2318 002a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 2319              		.loc 1 1005 32
 2320 002c 03F00103 		and	r3, r3, #1
 2321              		.loc 1 1005 4
 2322 0030 002B     		cmp	r3, #0
 2323 0032 02D0     		beq	.L140
1006:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
1007:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
 2324              		.loc 1 1007 30
 2325 0034 0423     		movs	r3, #4
 2326 0036 3B61     		str	r3, [r7, #16]
 2327 0038 01E0     		b	.L141
 2328              	.L140:
1008:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
1009:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
1010:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
1011:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xBytesToStoreMessageLength = 0;
 2329              		.loc 1 1011 30
 2330 003a 0023     		movs	r3, #0
 2331 003c 3B61     		str	r3, [r7, #16]
 2332              	.L141:
1012:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
1013:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1014:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* True if the available space equals zero. */
1015:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xStreamBufferSpacesAvailable( xStreamBuffer ) <= xBytesToStoreMessageLength )
 2333              		.loc 1 1015 6
 2334 003e 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/cc9FsJVQ.s 			page 64


 2335 0040 FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 2336 0044 0246     		mov	r2, r0
 2337              		.loc 1 1015 4
 2338 0046 3B69     		ldr	r3, [r7, #16]
 2339 0048 9342     		cmp	r3, r2
 2340 004a 02D3     		bcc	.L142
1016:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
1017:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xReturn = pdTRUE;
 2341              		.loc 1 1017 11
 2342 004c 0123     		movs	r3, #1
 2343 004e 7B61     		str	r3, [r7, #20]
 2344 0050 01E0     		b	.L143
 2345              	.L142:
1018:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
1019:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
1020:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
1021:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xReturn = pdFALSE;
 2346              		.loc 1 1021 11
 2347 0052 0023     		movs	r3, #0
 2348 0054 7B61     		str	r3, [r7, #20]
 2349              	.L143:
1022:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
1023:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1024:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xReturn;
 2350              		.loc 1 1024 9
 2351 0056 7B69     		ldr	r3, [r7, #20]
1025:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 2352              		.loc 1 1025 1
 2353 0058 1846     		mov	r0, r3
 2354 005a 1837     		adds	r7, r7, #24
 2355              	.LCFI81:
 2356              		.cfi_def_cfa_offset 8
 2357 005c BD46     		mov	sp, r7
 2358              	.LCFI82:
 2359              		.cfi_def_cfa_register 13
 2360              		@ sp needed
 2361 005e 80BD     		pop	{r7, pc}
 2362              		.cfi_endproc
 2363              	.LFE19:
 2365              		.section	.text.xStreamBufferSendCompletedFromISR,"ax",%progbits
 2366              		.align	1
 2367              		.global	xStreamBufferSendCompletedFromISR
 2368              		.syntax unified
 2369              		.thumb
 2370              		.thumb_func
 2371              		.fpu fpv5-d16
 2373              	xStreamBufferSendCompletedFromISR:
 2374              	.LFB20:
1026:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
1027:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1028:./Libraries/FreeRTOS/Source/stream_buffer.c **** BaseType_t xStreamBufferSendCompletedFromISR( StreamBufferHandle_t xStreamBuffer, BaseType_t *pxHig
1029:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 2375              		.loc 1 1029 1
 2376              		.cfi_startproc
 2377              		@ args = 0, pretend = 0, frame = 40
 2378              		@ frame_needed = 1, uses_anonymous_args = 0
 2379 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/cc9FsJVQ.s 			page 65


 2380              	.LCFI83:
 2381              		.cfi_def_cfa_offset 8
 2382              		.cfi_offset 7, -8
 2383              		.cfi_offset 14, -4
 2384 0002 8CB0     		sub	sp, sp, #48
 2385              	.LCFI84:
 2386              		.cfi_def_cfa_offset 56
 2387 0004 02AF     		add	r7, sp, #8
 2388              	.LCFI85:
 2389              		.cfi_def_cfa 7, 48
 2390 0006 7860     		str	r0, [r7, #4]
 2391 0008 3960     		str	r1, [r7]
1030:./Libraries/FreeRTOS/Source/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2392              		.loc 1 1030 24
 2393 000a 7B68     		ldr	r3, [r7, #4]
 2394 000c 3B62     		str	r3, [r7, #32]
1031:./Libraries/FreeRTOS/Source/stream_buffer.c **** BaseType_t xReturn;
1032:./Libraries/FreeRTOS/Source/stream_buffer.c **** UBaseType_t uxSavedInterruptStatus;
1033:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1034:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 2395              		.loc 1 1034 2
 2396 000e 3B6A     		ldr	r3, [r7, #32]
 2397 0010 002B     		cmp	r3, #0
 2398 0012 0AD1     		bne	.L146
 2399              	.LBB163:
 2400              	.LBB164:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2401              		.loc 2 195 2
 2402              		.syntax unified
 2403              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2404 0014 4FF05003 			mov r3, #80												
 2405 0018 83F31188 		msr basepri, r3											
 2406 001c BFF36F8F 		isb														
 2407 0020 BFF34F8F 		dsb														
 2408              	
 2409              	@ 0 "" 2
 2410              		.thumb
 2411              		.syntax unified
 2412 0024 BB61     		str	r3, [r7, #24]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2413              		.loc 2 203 1
 2414 0026 00BF     		nop
 2415              	.L147:
 2416              	.LBE164:
 2417              	.LBE163:
 2418              		.loc 1 1034 2 discriminator 1
 2419 0028 FEE7     		b	.L147
 2420              	.L146:
 2421              	.LBB165:
 2422              	.LBB166:
 211:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2423              		.loc 2 211 2
 2424              		.syntax unified
 2425              	@ 211 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2426 002a EFF31182 			mrs r2, basepri											
 2427 002e 4FF05003 		mov r3, #80												
 2428 0032 83F31188 		msr basepri, r3											
ARM GAS  /tmp/cc9FsJVQ.s 			page 66


 2429 0036 BFF36F8F 		isb														
 2430 003a BFF34F8F 		dsb														
 2431              	
 2432              	@ 0 "" 2
 2433              		.thumb
 2434              		.syntax unified
 2435 003e 7A61     		str	r2, [r7, #20]
 2436 0040 3B61     		str	r3, [r7, #16]
 223:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2437              		.loc 2 223 9
 2438 0042 7B69     		ldr	r3, [r7, #20]
 2439              	.LBE166:
 2440              	.LBE165:
1035:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1036:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();
 2441              		.loc 1 1036 43
 2442 0044 FB61     		str	r3, [r7, #28]
1037:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
1038:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )
 2443              		.loc 1 1038 25
 2444 0046 3B6A     		ldr	r3, [r7, #32]
 2445 0048 1B69     		ldr	r3, [r3, #16]
 2446              		.loc 1 1038 5
 2447 004a 002B     		cmp	r3, #0
 2448 004c 0ED0     		beq	.L149
1039:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
1040:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToReceive,
 2449              		.loc 1 1040 13
 2450 004e 3B6A     		ldr	r3, [r7, #32]
 2451 0050 1869     		ldr	r0, [r3, #16]
 2452 0052 3B68     		ldr	r3, [r7]
 2453 0054 0093     		str	r3, [sp]
 2454 0056 0023     		movs	r3, #0
 2455 0058 0022     		movs	r2, #0
 2456 005a 0021     		movs	r1, #0
 2457 005c FFF7FEFF 		bl	xTaskGenericNotifyFromISR
1041:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										 ( uint32_t ) 0,
1042:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										 eNoAction,
1043:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										 pxHigherPriorityTaskWoken );
1044:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			( pxStreamBuffer )->xTaskWaitingToReceive = NULL;
 2458              		.loc 1 1044 46
 2459 0060 3B6A     		ldr	r3, [r7, #32]
 2460 0062 0022     		movs	r2, #0
 2461 0064 1A61     		str	r2, [r3, #16]
1045:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			xReturn = pdTRUE;
 2462              		.loc 1 1045 12
 2463 0066 0123     		movs	r3, #1
 2464 0068 7B62     		str	r3, [r7, #36]
 2465 006a 01E0     		b	.L150
 2466              	.L149:
1046:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
1047:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		else
1048:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
1049:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			xReturn = pdFALSE;
 2467              		.loc 1 1049 12
 2468 006c 0023     		movs	r3, #0
 2469 006e 7B62     		str	r3, [r7, #36]
ARM GAS  /tmp/cc9FsJVQ.s 			page 67


 2470              	.L150:
 2471 0070 FB69     		ldr	r3, [r7, #28]
 2472 0072 FB60     		str	r3, [r7, #12]
 2473              	.LBB167:
 2474              	.LBB168:
 229:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2475              		.loc 2 229 2
 2476 0074 FB68     		ldr	r3, [r7, #12]
 2477              		.syntax unified
 2478              	@ 229 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2479 0076 83F31188 			msr basepri, r3	
 2480              	@ 0 "" 2
 2481              		.loc 2 233 1
 2482              		.thumb
 2483              		.syntax unified
 2484 007a 00BF     		nop
 2485              	.LBE168:
 2486              	.LBE167:
1050:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
1051:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
1052:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1053:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1054:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xReturn;
 2487              		.loc 1 1054 9
 2488 007c 7B6A     		ldr	r3, [r7, #36]
1055:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 2489              		.loc 1 1055 1
 2490 007e 1846     		mov	r0, r3
 2491 0080 2837     		adds	r7, r7, #40
 2492              	.LCFI86:
 2493              		.cfi_def_cfa_offset 8
 2494 0082 BD46     		mov	sp, r7
 2495              	.LCFI87:
 2496              		.cfi_def_cfa_register 13
 2497              		@ sp needed
 2498 0084 80BD     		pop	{r7, pc}
 2499              		.cfi_endproc
 2500              	.LFE20:
 2502              		.section	.text.xStreamBufferReceiveCompletedFromISR,"ax",%progbits
 2503              		.align	1
 2504              		.global	xStreamBufferReceiveCompletedFromISR
 2505              		.syntax unified
 2506              		.thumb
 2507              		.thumb_func
 2508              		.fpu fpv5-d16
 2510              	xStreamBufferReceiveCompletedFromISR:
 2511              	.LFB21:
1056:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
1057:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1058:./Libraries/FreeRTOS/Source/stream_buffer.c **** BaseType_t xStreamBufferReceiveCompletedFromISR( StreamBufferHandle_t xStreamBuffer, BaseType_t *px
1059:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 2512              		.loc 1 1059 1
 2513              		.cfi_startproc
 2514              		@ args = 0, pretend = 0, frame = 40
 2515              		@ frame_needed = 1, uses_anonymous_args = 0
 2516 0000 80B5     		push	{r7, lr}
 2517              	.LCFI88:
ARM GAS  /tmp/cc9FsJVQ.s 			page 68


 2518              		.cfi_def_cfa_offset 8
 2519              		.cfi_offset 7, -8
 2520              		.cfi_offset 14, -4
 2521 0002 8CB0     		sub	sp, sp, #48
 2522              	.LCFI89:
 2523              		.cfi_def_cfa_offset 56
 2524 0004 02AF     		add	r7, sp, #8
 2525              	.LCFI90:
 2526              		.cfi_def_cfa 7, 48
 2527 0006 7860     		str	r0, [r7, #4]
 2528 0008 3960     		str	r1, [r7]
1060:./Libraries/FreeRTOS/Source/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2529              		.loc 1 1060 24
 2530 000a 7B68     		ldr	r3, [r7, #4]
 2531 000c 3B62     		str	r3, [r7, #32]
1061:./Libraries/FreeRTOS/Source/stream_buffer.c **** BaseType_t xReturn;
1062:./Libraries/FreeRTOS/Source/stream_buffer.c **** UBaseType_t uxSavedInterruptStatus;
1063:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1064:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 2532              		.loc 1 1064 2
 2533 000e 3B6A     		ldr	r3, [r7, #32]
 2534 0010 002B     		cmp	r3, #0
 2535 0012 0AD1     		bne	.L153
 2536              	.LBB169:
 2537              	.LBB170:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2538              		.loc 2 195 2
 2539              		.syntax unified
 2540              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2541 0014 4FF05003 			mov r3, #80												
 2542 0018 83F31188 		msr basepri, r3											
 2543 001c BFF36F8F 		isb														
 2544 0020 BFF34F8F 		dsb														
 2545              	
 2546              	@ 0 "" 2
 2547              		.thumb
 2548              		.syntax unified
 2549 0024 BB61     		str	r3, [r7, #24]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2550              		.loc 2 203 1
 2551 0026 00BF     		nop
 2552              	.L154:
 2553              	.LBE170:
 2554              	.LBE169:
 2555              		.loc 1 1064 2 discriminator 1
 2556 0028 FEE7     		b	.L154
 2557              	.L153:
 2558              	.LBB171:
 2559              	.LBB172:
 211:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2560              		.loc 2 211 2
 2561              		.syntax unified
 2562              	@ 211 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2563 002a EFF31182 			mrs r2, basepri											
 2564 002e 4FF05003 		mov r3, #80												
 2565 0032 83F31188 		msr basepri, r3											
 2566 0036 BFF36F8F 		isb														
ARM GAS  /tmp/cc9FsJVQ.s 			page 69


 2567 003a BFF34F8F 		dsb														
 2568              	
 2569              	@ 0 "" 2
 2570              		.thumb
 2571              		.syntax unified
 2572 003e 7A61     		str	r2, [r7, #20]
 2573 0040 3B61     		str	r3, [r7, #16]
 223:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2574              		.loc 2 223 9
 2575 0042 7B69     		ldr	r3, [r7, #20]
 2576              	.LBE172:
 2577              	.LBE171:
1065:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1066:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();
 2578              		.loc 1 1066 43
 2579 0044 FB61     		str	r3, [r7, #28]
1067:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
1068:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )
 2580              		.loc 1 1068 25
 2581 0046 3B6A     		ldr	r3, [r7, #32]
 2582 0048 5B69     		ldr	r3, [r3, #20]
 2583              		.loc 1 1068 5
 2584 004a 002B     		cmp	r3, #0
 2585 004c 0ED0     		beq	.L156
1069:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
1070:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToSend,
 2586              		.loc 1 1070 13
 2587 004e 3B6A     		ldr	r3, [r7, #32]
 2588 0050 5869     		ldr	r0, [r3, #20]
 2589 0052 3B68     		ldr	r3, [r7]
 2590 0054 0093     		str	r3, [sp]
 2591 0056 0023     		movs	r3, #0
 2592 0058 0022     		movs	r2, #0
 2593 005a 0021     		movs	r1, #0
 2594 005c FFF7FEFF 		bl	xTaskGenericNotifyFromISR
1071:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										 ( uint32_t ) 0,
1072:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										 eNoAction,
1073:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										 pxHigherPriorityTaskWoken );
1074:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			( pxStreamBuffer )->xTaskWaitingToSend = NULL;
 2595              		.loc 1 1074 43
 2596 0060 3B6A     		ldr	r3, [r7, #32]
 2597 0062 0022     		movs	r2, #0
 2598 0064 5A61     		str	r2, [r3, #20]
1075:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			xReturn = pdTRUE;
 2599              		.loc 1 1075 12
 2600 0066 0123     		movs	r3, #1
 2601 0068 7B62     		str	r3, [r7, #36]
 2602 006a 01E0     		b	.L157
 2603              	.L156:
1076:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
1077:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		else
1078:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
1079:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			xReturn = pdFALSE;
 2604              		.loc 1 1079 12
 2605 006c 0023     		movs	r3, #0
 2606 006e 7B62     		str	r3, [r7, #36]
 2607              	.L157:
ARM GAS  /tmp/cc9FsJVQ.s 			page 70


 2608 0070 FB69     		ldr	r3, [r7, #28]
 2609 0072 FB60     		str	r3, [r7, #12]
 2610              	.LBB173:
 2611              	.LBB174:
 229:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2612              		.loc 2 229 2
 2613 0074 FB68     		ldr	r3, [r7, #12]
 2614              		.syntax unified
 2615              	@ 229 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2616 0076 83F31188 			msr basepri, r3	
 2617              	@ 0 "" 2
 2618              		.loc 2 233 1
 2619              		.thumb
 2620              		.syntax unified
 2621 007a 00BF     		nop
 2622              	.LBE174:
 2623              	.LBE173:
1080:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
1081:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
1082:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1083:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1084:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xReturn;
 2624              		.loc 1 1084 9
 2625 007c 7B6A     		ldr	r3, [r7, #36]
1085:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 2626              		.loc 1 1085 1
 2627 007e 1846     		mov	r0, r3
 2628 0080 2837     		adds	r7, r7, #40
 2629              	.LCFI91:
 2630              		.cfi_def_cfa_offset 8
 2631 0082 BD46     		mov	sp, r7
 2632              	.LCFI92:
 2633              		.cfi_def_cfa_register 13
 2634              		@ sp needed
 2635 0084 80BD     		pop	{r7, pc}
 2636              		.cfi_endproc
 2637              	.LFE21:
 2639              		.section	.text.prvWriteBytesToBuffer,"ax",%progbits
 2640              		.align	1
 2641              		.syntax unified
 2642              		.thumb
 2643              		.thumb_func
 2644              		.fpu fpv5-d16
 2646              	prvWriteBytesToBuffer:
 2647              	.LFB22:
1086:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
1087:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1088:./Libraries/FreeRTOS/Source/stream_buffer.c **** static size_t prvWriteBytesToBuffer( StreamBuffer_t * const pxStreamBuffer, const uint8_t *pucData,
1089:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 2648              		.loc 1 1089 1
 2649              		.cfi_startproc
 2650              		@ args = 0, pretend = 0, frame = 40
 2651              		@ frame_needed = 1, uses_anonymous_args = 0
 2652 0000 80B5     		push	{r7, lr}
 2653              	.LCFI93:
 2654              		.cfi_def_cfa_offset 8
 2655              		.cfi_offset 7, -8
ARM GAS  /tmp/cc9FsJVQ.s 			page 71


 2656              		.cfi_offset 14, -4
 2657 0002 8AB0     		sub	sp, sp, #40
 2658              	.LCFI94:
 2659              		.cfi_def_cfa_offset 48
 2660 0004 00AF     		add	r7, sp, #0
 2661              	.LCFI95:
 2662              		.cfi_def_cfa_register 7
 2663 0006 F860     		str	r0, [r7, #12]
 2664 0008 B960     		str	r1, [r7, #8]
 2665 000a 7A60     		str	r2, [r7, #4]
1090:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xNextHead, xFirstLength;
1091:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1092:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( xCount > ( size_t ) 0 );
 2666              		.loc 1 1092 2
 2667 000c 7B68     		ldr	r3, [r7, #4]
 2668 000e 002B     		cmp	r3, #0
 2669 0010 0AD1     		bne	.L160
 2670              	.LBB175:
 2671              	.LBB176:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2672              		.loc 2 195 2
 2673              		.syntax unified
 2674              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2675 0012 4FF05003 			mov r3, #80												
 2676 0016 83F31188 		msr basepri, r3											
 2677 001a BFF36F8F 		isb														
 2678 001e BFF34F8F 		dsb														
 2679              	
 2680              	@ 0 "" 2
 2681              		.thumb
 2682              		.syntax unified
 2683 0022 FB61     		str	r3, [r7, #28]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2684              		.loc 2 203 1
 2685 0024 00BF     		nop
 2686              	.L161:
 2687              	.LBE176:
 2688              	.LBE175:
 2689              		.loc 1 1092 2 discriminator 1
 2690 0026 FEE7     		b	.L161
 2691              	.L160:
1093:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1094:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	xNextHead = pxStreamBuffer->xHead;
 2692              		.loc 1 1094 12
 2693 0028 FB68     		ldr	r3, [r7, #12]
 2694 002a 5B68     		ldr	r3, [r3, #4]
 2695 002c 7B62     		str	r3, [r7, #36]
1095:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1096:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* Calculate the number of bytes that can be added in the first write -
1097:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	which may be less than the total number of bytes that need to be added if
1098:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	the buffer will wrap back to the beginning. */
1099:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	xFirstLength = configMIN( pxStreamBuffer->xLength - xNextHead, xCount );
 2696              		.loc 1 1099 17
 2697 002e FB68     		ldr	r3, [r7, #12]
 2698 0030 9A68     		ldr	r2, [r3, #8]
 2699 0032 7B6A     		ldr	r3, [r7, #36]
 2700 0034 D31A     		subs	r3, r2, r3
ARM GAS  /tmp/cc9FsJVQ.s 			page 72


 2701              		.loc 1 1099 15
 2702 0036 7A68     		ldr	r2, [r7, #4]
 2703 0038 9342     		cmp	r3, r2
 2704 003a 28BF     		it	cs
 2705 003c 1346     		movcs	r3, r2
 2706 003e 3B62     		str	r3, [r7, #32]
1100:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1101:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* Write as many bytes as can be written in the first write. */
1102:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	configASSERT( ( xNextHead + xFirstLength ) <= pxStreamBuffer->xLength );
 2707              		.loc 1 1102 2
 2708 0040 7A6A     		ldr	r2, [r7, #36]
 2709 0042 3B6A     		ldr	r3, [r7, #32]
 2710 0044 1A44     		add	r2, r2, r3
 2711 0046 FB68     		ldr	r3, [r7, #12]
 2712 0048 9B68     		ldr	r3, [r3, #8]
 2713 004a 9A42     		cmp	r2, r3
 2714 004c 0AD9     		bls	.L162
 2715              	.LBB177:
 2716              	.LBB178:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2717              		.loc 2 195 2
 2718              		.syntax unified
 2719              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2720 004e 4FF05003 			mov r3, #80												
 2721 0052 83F31188 		msr basepri, r3											
 2722 0056 BFF36F8F 		isb														
 2723 005a BFF34F8F 		dsb														
 2724              	
 2725              	@ 0 "" 2
 2726              		.thumb
 2727              		.syntax unified
 2728 005e BB61     		str	r3, [r7, #24]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2729              		.loc 2 203 1
 2730 0060 00BF     		nop
 2731              	.L163:
 2732              	.LBE178:
 2733              	.LBE177:
 2734              		.loc 1 1102 2 discriminator 2
 2735 0062 FEE7     		b	.L163
 2736              	.L162:
1103:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	( void ) memcpy( ( void* ) ( &( pxStreamBuffer->pucBuffer[ xNextHead ] ) ), ( const void * ) pucDa
 2737              		.loc 1 1103 48
 2738 0064 FB68     		ldr	r3, [r7, #12]
 2739 0066 9A69     		ldr	r2, [r3, #24]
 2740              		.loc 1 1103 31
 2741 0068 7B6A     		ldr	r3, [r7, #36]
 2742 006a 1344     		add	r3, r3, r2
 2743              		.loc 1 1103 11
 2744 006c 3A6A     		ldr	r2, [r7, #32]
 2745 006e B968     		ldr	r1, [r7, #8]
 2746 0070 1846     		mov	r0, r3
 2747 0072 FFF7FEFF 		bl	memcpy
1104:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1105:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* If the number of bytes written was less than the number that could be
1106:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	written in the first write... */
1107:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xCount > xFirstLength )
ARM GAS  /tmp/cc9FsJVQ.s 			page 73


 2748              		.loc 1 1107 4
 2749 0076 7A68     		ldr	r2, [r7, #4]
 2750 0078 3B6A     		ldr	r3, [r7, #32]
 2751 007a 9A42     		cmp	r2, r3
 2752 007c 1CD9     		bls	.L164
1108:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
1109:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* ...then write the remaining bytes to the start of the buffer. */
1110:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		configASSERT( ( xCount - xFirstLength ) <= pxStreamBuffer->xLength );
 2753              		.loc 1 1110 3
 2754 007e 7A68     		ldr	r2, [r7, #4]
 2755 0080 3B6A     		ldr	r3, [r7, #32]
 2756 0082 D21A     		subs	r2, r2, r3
 2757 0084 FB68     		ldr	r3, [r7, #12]
 2758 0086 9B68     		ldr	r3, [r3, #8]
 2759 0088 9A42     		cmp	r2, r3
 2760 008a 0AD9     		bls	.L165
 2761              	.LBB179:
 2762              	.LBB180:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2763              		.loc 2 195 2
 2764              		.syntax unified
 2765              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2766 008c 4FF05003 			mov r3, #80												
 2767 0090 83F31188 		msr basepri, r3											
 2768 0094 BFF36F8F 		isb														
 2769 0098 BFF34F8F 		dsb														
 2770              	
 2771              	@ 0 "" 2
 2772              		.thumb
 2773              		.syntax unified
 2774 009c 7B61     		str	r3, [r7, #20]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2775              		.loc 2 203 1
 2776 009e 00BF     		nop
 2777              	.L166:
 2778              	.LBE180:
 2779              	.LBE179:
 2780              		.loc 1 1110 3 discriminator 3
 2781 00a0 FEE7     		b	.L166
 2782              	.L165:
1111:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		( void ) memcpy( ( void * ) pxStreamBuffer->pucBuffer, ( const void * ) &( pucData[ xFirstLength 
 2783              		.loc 1 1111 45
 2784 00a2 FB68     		ldr	r3, [r7, #12]
 2785 00a4 9869     		ldr	r0, [r3, #24]
 2786              		.loc 1 1111 75
 2787 00a6 BA68     		ldr	r2, [r7, #8]
 2788 00a8 3B6A     		ldr	r3, [r7, #32]
 2789 00aa D118     		adds	r1, r2, r3
 2790              		.loc 1 1111 12
 2791 00ac 7A68     		ldr	r2, [r7, #4]
 2792 00ae 3B6A     		ldr	r3, [r7, #32]
 2793 00b0 D31A     		subs	r3, r2, r3
 2794 00b2 1A46     		mov	r2, r3
 2795 00b4 FFF7FEFF 		bl	memcpy
 2796              	.L164:
1112:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
1113:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
ARM GAS  /tmp/cc9FsJVQ.s 			page 74


1114:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
1115:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
1116:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
1117:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1118:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	xNextHead += xCount;
 2797              		.loc 1 1118 12
 2798 00b8 7A6A     		ldr	r2, [r7, #36]
 2799 00ba 7B68     		ldr	r3, [r7, #4]
 2800 00bc 1344     		add	r3, r3, r2
 2801 00be 7B62     		str	r3, [r7, #36]
1119:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xNextHead >= pxStreamBuffer->xLength )
 2802              		.loc 1 1119 33
 2803 00c0 FB68     		ldr	r3, [r7, #12]
 2804 00c2 9B68     		ldr	r3, [r3, #8]
 2805              		.loc 1 1119 4
 2806 00c4 7A6A     		ldr	r2, [r7, #36]
 2807 00c6 9A42     		cmp	r2, r3
 2808 00c8 04D3     		bcc	.L167
1120:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
1121:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xNextHead -= pxStreamBuffer->xLength;
 2809              		.loc 1 1121 30
 2810 00ca FB68     		ldr	r3, [r7, #12]
 2811 00cc 9B68     		ldr	r3, [r3, #8]
 2812              		.loc 1 1121 13
 2813 00ce 7A6A     		ldr	r2, [r7, #36]
 2814 00d0 D31A     		subs	r3, r2, r3
 2815 00d2 7B62     		str	r3, [r7, #36]
 2816              	.L167:
1122:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
1123:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
1124:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
1125:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
1126:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
1127:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1128:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	pxStreamBuffer->xHead = xNextHead;
 2817              		.loc 1 1128 24
 2818 00d4 FB68     		ldr	r3, [r7, #12]
 2819 00d6 7A6A     		ldr	r2, [r7, #36]
 2820 00d8 5A60     		str	r2, [r3, #4]
1129:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1130:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xCount;
 2821              		.loc 1 1130 9
 2822 00da 7B68     		ldr	r3, [r7, #4]
1131:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 2823              		.loc 1 1131 1
 2824 00dc 1846     		mov	r0, r3
 2825 00de 2837     		adds	r7, r7, #40
 2826              	.LCFI96:
 2827              		.cfi_def_cfa_offset 8
 2828 00e0 BD46     		mov	sp, r7
 2829              	.LCFI97:
 2830              		.cfi_def_cfa_register 13
 2831              		@ sp needed
 2832 00e2 80BD     		pop	{r7, pc}
 2833              		.cfi_endproc
 2834              	.LFE22:
 2836              		.section	.text.prvReadBytesFromBuffer,"ax",%progbits
ARM GAS  /tmp/cc9FsJVQ.s 			page 75


 2837              		.align	1
 2838              		.syntax unified
 2839              		.thumb
 2840              		.thumb_func
 2841              		.fpu fpv5-d16
 2843              	prvReadBytesFromBuffer:
 2844              	.LFB23:
1132:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
1133:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1134:./Libraries/FreeRTOS/Source/stream_buffer.c **** static size_t prvReadBytesFromBuffer( StreamBuffer_t *pxStreamBuffer, uint8_t *pucData, size_t xMax
1135:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 2845              		.loc 1 1135 1
 2846              		.cfi_startproc
 2847              		@ args = 0, pretend = 0, frame = 40
 2848              		@ frame_needed = 1, uses_anonymous_args = 0
 2849 0000 80B5     		push	{r7, lr}
 2850              	.LCFI98:
 2851              		.cfi_def_cfa_offset 8
 2852              		.cfi_offset 7, -8
 2853              		.cfi_offset 14, -4
 2854 0002 8AB0     		sub	sp, sp, #40
 2855              	.LCFI99:
 2856              		.cfi_def_cfa_offset 48
 2857 0004 00AF     		add	r7, sp, #0
 2858              	.LCFI100:
 2859              		.cfi_def_cfa_register 7
 2860 0006 F860     		str	r0, [r7, #12]
 2861 0008 B960     		str	r1, [r7, #8]
 2862 000a 7A60     		str	r2, [r7, #4]
 2863 000c 3B60     		str	r3, [r7]
1136:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xCount, xFirstLength, xNextTail;
1137:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1138:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* Use the minimum of the wanted bytes and the available bytes. */
1139:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	xCount = configMIN( xBytesAvailable, xMaxCount );
 2864              		.loc 1 1139 9
 2865 000e 7A68     		ldr	r2, [r7, #4]
 2866 0010 3B68     		ldr	r3, [r7]
 2867 0012 9342     		cmp	r3, r2
 2868 0014 28BF     		it	cs
 2869 0016 1346     		movcs	r3, r2
 2870 0018 3B62     		str	r3, [r7, #32]
1140:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1141:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if( xCount > ( size_t ) 0 )
 2871              		.loc 1 1141 4
 2872 001a 3B6A     		ldr	r3, [r7, #32]
 2873 001c 002B     		cmp	r3, #0
 2874 001e 64D0     		beq	.L170
1142:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
1143:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xNextTail = pxStreamBuffer->xTail;
 2875              		.loc 1 1143 13
 2876 0020 FB68     		ldr	r3, [r7, #12]
 2877 0022 1B68     		ldr	r3, [r3]
 2878 0024 7B62     		str	r3, [r7, #36]
1144:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1145:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* Calculate the number of bytes that can be read - which may be
1146:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		less than the number wanted if the data wraps around to the start of
1147:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		the buffer. */
ARM GAS  /tmp/cc9FsJVQ.s 			page 76


1148:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xFirstLength = configMIN( pxStreamBuffer->xLength - xNextTail, xCount );
 2879              		.loc 1 1148 18
 2880 0026 FB68     		ldr	r3, [r7, #12]
 2881 0028 9A68     		ldr	r2, [r3, #8]
 2882 002a 7B6A     		ldr	r3, [r7, #36]
 2883 002c D31A     		subs	r3, r2, r3
 2884              		.loc 1 1148 16
 2885 002e 3A6A     		ldr	r2, [r7, #32]
 2886 0030 9342     		cmp	r3, r2
 2887 0032 28BF     		it	cs
 2888 0034 1346     		movcs	r3, r2
 2889 0036 FB61     		str	r3, [r7, #28]
1149:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1150:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* Obtain the number of bytes it is possible to obtain in the first
1151:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		read.  Asserts check bounds of read and write. */
1152:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		configASSERT( xFirstLength <= xMaxCount );
 2890              		.loc 1 1152 3
 2891 0038 FA69     		ldr	r2, [r7, #28]
 2892 003a 7B68     		ldr	r3, [r7, #4]
 2893 003c 9A42     		cmp	r2, r3
 2894 003e 0AD9     		bls	.L171
 2895              	.LBB181:
 2896              	.LBB182:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2897              		.loc 2 195 2
 2898              		.syntax unified
 2899              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2900 0040 4FF05003 			mov r3, #80												
 2901 0044 83F31188 		msr basepri, r3											
 2902 0048 BFF36F8F 		isb														
 2903 004c BFF34F8F 		dsb														
 2904              	
 2905              	@ 0 "" 2
 2906              		.thumb
 2907              		.syntax unified
 2908 0050 BB61     		str	r3, [r7, #24]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2909              		.loc 2 203 1
 2910 0052 00BF     		nop
 2911              	.L172:
 2912              	.LBE182:
 2913              	.LBE181:
 2914              		.loc 1 1152 3 discriminator 1
 2915 0054 FEE7     		b	.L172
 2916              	.L171:
1153:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		configASSERT( ( xNextTail + xFirstLength ) <= pxStreamBuffer->xLength );
 2917              		.loc 1 1153 3
 2918 0056 7A6A     		ldr	r2, [r7, #36]
 2919 0058 FB69     		ldr	r3, [r7, #28]
 2920 005a 1A44     		add	r2, r2, r3
 2921 005c FB68     		ldr	r3, [r7, #12]
 2922 005e 9B68     		ldr	r3, [r3, #8]
 2923 0060 9A42     		cmp	r2, r3
 2924 0062 0AD9     		bls	.L173
 2925              	.LBB183:
 2926              	.LBB184:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  /tmp/cc9FsJVQ.s 			page 77


 2927              		.loc 2 195 2
 2928              		.syntax unified
 2929              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2930 0064 4FF05003 			mov r3, #80												
 2931 0068 83F31188 		msr basepri, r3											
 2932 006c BFF36F8F 		isb														
 2933 0070 BFF34F8F 		dsb														
 2934              	
 2935              	@ 0 "" 2
 2936              		.thumb
 2937              		.syntax unified
 2938 0074 7B61     		str	r3, [r7, #20]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2939              		.loc 2 203 1
 2940 0076 00BF     		nop
 2941              	.L174:
 2942              	.LBE184:
 2943              	.LBE183:
 2944              		.loc 1 1153 3 discriminator 2
 2945 0078 FEE7     		b	.L174
 2946              	.L173:
1154:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		( void ) memcpy( ( void * ) pucData, ( const void * ) &( pxStreamBuffer->pucBuffer[ xNextTail ] )
 2947              		.loc 1 1154 74
 2948 007a FB68     		ldr	r3, [r7, #12]
 2949 007c 9A69     		ldr	r2, [r3, #24]
 2950              		.loc 1 1154 57
 2951 007e 7B6A     		ldr	r3, [r7, #36]
 2952 0080 1344     		add	r3, r3, r2
 2953              		.loc 1 1154 12
 2954 0082 FA69     		ldr	r2, [r7, #28]
 2955 0084 1946     		mov	r1, r3
 2956 0086 B868     		ldr	r0, [r7, #8]
 2957 0088 FFF7FEFF 		bl	memcpy
1155:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1156:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* If the total number of wanted bytes is greater than the number
1157:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		that could be read in the first read... */
1158:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( xCount > xFirstLength )
 2958              		.loc 1 1158 5
 2959 008c 3A6A     		ldr	r2, [r7, #32]
 2960 008e FB69     		ldr	r3, [r7, #28]
 2961 0090 9A42     		cmp	r2, r3
 2962 0092 19D9     		bls	.L175
1159:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
1160:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			/*...then read the remaining bytes from the start of the buffer. */
1161:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			configASSERT( xCount <= xMaxCount );
 2963              		.loc 1 1161 4
 2964 0094 3A6A     		ldr	r2, [r7, #32]
 2965 0096 7B68     		ldr	r3, [r7, #4]
 2966 0098 9A42     		cmp	r2, r3
 2967 009a 0AD9     		bls	.L176
 2968              	.LBB185:
 2969              	.LBB186:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2970              		.loc 2 195 2
 2971              		.syntax unified
 2972              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2973 009c 4FF05003 			mov r3, #80												
ARM GAS  /tmp/cc9FsJVQ.s 			page 78


 2974 00a0 83F31188 		msr basepri, r3											
 2975 00a4 BFF36F8F 		isb														
 2976 00a8 BFF34F8F 		dsb														
 2977              	
 2978              	@ 0 "" 2
 2979              		.thumb
 2980              		.syntax unified
 2981 00ac 3B61     		str	r3, [r7, #16]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2982              		.loc 2 203 1
 2983 00ae 00BF     		nop
 2984              	.L177:
 2985              	.LBE186:
 2986              	.LBE185:
 2987              		.loc 1 1161 4 discriminator 3
 2988 00b0 FEE7     		b	.L177
 2989              	.L176:
1162:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			( void ) memcpy( ( void * ) &( pucData[ xFirstLength ] ), ( void * ) ( pxStreamBuffer->pucBuffer
 2990              		.loc 1 1162 32
 2991 00b2 BA68     		ldr	r2, [r7, #8]
 2992 00b4 FB69     		ldr	r3, [r7, #28]
 2993 00b6 D018     		adds	r0, r2, r3
 2994              		.loc 1 1162 89
 2995 00b8 FB68     		ldr	r3, [r7, #12]
 2996 00ba 9969     		ldr	r1, [r3, #24]
 2997              		.loc 1 1162 13
 2998 00bc 3A6A     		ldr	r2, [r7, #32]
 2999 00be FB69     		ldr	r3, [r7, #28]
 3000 00c0 D31A     		subs	r3, r2, r3
 3001 00c2 1A46     		mov	r2, r3
 3002 00c4 FFF7FEFF 		bl	memcpy
 3003              	.L175:
1163:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
1164:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		else
1165:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
1166:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
1167:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
1168:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1169:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* Move the tail pointer to effectively remove the data read from
1170:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		the buffer. */
1171:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xNextTail += xCount;
 3004              		.loc 1 1171 13
 3005 00c8 7A6A     		ldr	r2, [r7, #36]
 3006 00ca 3B6A     		ldr	r3, [r7, #32]
 3007 00cc 1344     		add	r3, r3, r2
 3008 00ce 7B62     		str	r3, [r7, #36]
1172:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1173:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		if( xNextTail >= pxStreamBuffer->xLength )
 3009              		.loc 1 1173 34
 3010 00d0 FB68     		ldr	r3, [r7, #12]
 3011 00d2 9B68     		ldr	r3, [r3, #8]
 3012              		.loc 1 1173 5
 3013 00d4 7A6A     		ldr	r2, [r7, #36]
 3014 00d6 9A42     		cmp	r2, r3
 3015 00d8 04D3     		bcc	.L178
1174:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		{
1175:./Libraries/FreeRTOS/Source/stream_buffer.c **** 			xNextTail -= pxStreamBuffer->xLength;
ARM GAS  /tmp/cc9FsJVQ.s 			page 79


 3016              		.loc 1 1175 31
 3017 00da FB68     		ldr	r3, [r7, #12]
 3018 00dc 9B68     		ldr	r3, [r3, #8]
 3019              		.loc 1 1175 14
 3020 00de 7A6A     		ldr	r2, [r7, #36]
 3021 00e0 D31A     		subs	r3, r2, r3
 3022 00e2 7B62     		str	r3, [r7, #36]
 3023              	.L178:
1176:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		}
1177:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1178:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		pxStreamBuffer->xTail = xNextTail;
 3024              		.loc 1 1178 25
 3025 00e4 FB68     		ldr	r3, [r7, #12]
 3026 00e6 7A6A     		ldr	r2, [r7, #36]
 3027 00e8 1A60     		str	r2, [r3]
 3028              	.L170:
1179:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
1180:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
1181:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
1182:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
1183:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
1184:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1185:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xCount;
 3029              		.loc 1 1185 9
 3030 00ea 3B6A     		ldr	r3, [r7, #32]
1186:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 3031              		.loc 1 1186 1
 3032 00ec 1846     		mov	r0, r3
 3033 00ee 2837     		adds	r7, r7, #40
 3034              	.LCFI101:
 3035              		.cfi_def_cfa_offset 8
 3036 00f0 BD46     		mov	sp, r7
 3037              	.LCFI102:
 3038              		.cfi_def_cfa_register 13
 3039              		@ sp needed
 3040 00f2 80BD     		pop	{r7, pc}
 3041              		.cfi_endproc
 3042              	.LFE23:
 3044              		.section	.text.prvBytesInBuffer,"ax",%progbits
 3045              		.align	1
 3046              		.syntax unified
 3047              		.thumb
 3048              		.thumb_func
 3049              		.fpu fpv5-d16
 3051              	prvBytesInBuffer:
 3052              	.LFB24:
1187:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
1188:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1189:./Libraries/FreeRTOS/Source/stream_buffer.c **** static size_t prvBytesInBuffer( const StreamBuffer_t * const pxStreamBuffer )
1190:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 3053              		.loc 1 1190 1
 3054              		.cfi_startproc
 3055              		@ args = 0, pretend = 0, frame = 16
 3056              		@ frame_needed = 1, uses_anonymous_args = 0
 3057              		@ link register save eliminated.
 3058 0000 80B4     		push	{r7}
 3059              	.LCFI103:
ARM GAS  /tmp/cc9FsJVQ.s 			page 80


 3060              		.cfi_def_cfa_offset 4
 3061              		.cfi_offset 7, -4
 3062 0002 85B0     		sub	sp, sp, #20
 3063              	.LCFI104:
 3064              		.cfi_def_cfa_offset 24
 3065 0004 00AF     		add	r7, sp, #0
 3066              	.LCFI105:
 3067              		.cfi_def_cfa_register 7
 3068 0006 7860     		str	r0, [r7, #4]
1191:./Libraries/FreeRTOS/Source/stream_buffer.c **** /* Returns the distance between xTail and xHead. */
1192:./Libraries/FreeRTOS/Source/stream_buffer.c **** size_t xCount;
1193:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1194:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	xCount = pxStreamBuffer->xLength + pxStreamBuffer->xHead;
 3069              		.loc 1 1194 25
 3070 0008 7B68     		ldr	r3, [r7, #4]
 3071 000a 9A68     		ldr	r2, [r3, #8]
 3072              		.loc 1 1194 51
 3073 000c 7B68     		ldr	r3, [r7, #4]
 3074 000e 5B68     		ldr	r3, [r3, #4]
 3075              		.loc 1 1194 9
 3076 0010 1344     		add	r3, r3, r2
 3077 0012 FB60     		str	r3, [r7, #12]
1195:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	xCount -= pxStreamBuffer->xTail;
 3078              		.loc 1 1195 26
 3079 0014 7B68     		ldr	r3, [r7, #4]
 3080 0016 1B68     		ldr	r3, [r3]
 3081              		.loc 1 1195 9
 3082 0018 FA68     		ldr	r2, [r7, #12]
 3083 001a D31A     		subs	r3, r2, r3
 3084 001c FB60     		str	r3, [r7, #12]
1196:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	if ( xCount >= pxStreamBuffer->xLength )
 3085              		.loc 1 1196 31
 3086 001e 7B68     		ldr	r3, [r7, #4]
 3087 0020 9B68     		ldr	r3, [r3, #8]
 3088              		.loc 1 1196 5
 3089 0022 FA68     		ldr	r2, [r7, #12]
 3090 0024 9A42     		cmp	r2, r3
 3091 0026 04D3     		bcc	.L181
1197:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
1198:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xCount -= pxStreamBuffer->xLength;
 3092              		.loc 1 1198 27
 3093 0028 7B68     		ldr	r3, [r7, #4]
 3094 002a 9B68     		ldr	r3, [r3, #8]
 3095              		.loc 1 1198 10
 3096 002c FA68     		ldr	r2, [r7, #12]
 3097 002e D31A     		subs	r3, r2, r3
 3098 0030 FB60     		str	r3, [r7, #12]
 3099              	.L181:
1199:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
1200:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	else
1201:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
1202:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
1203:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
1204:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1205:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	return xCount;
 3100              		.loc 1 1205 9
 3101 0032 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc9FsJVQ.s 			page 81


1206:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 3102              		.loc 1 1206 1
 3103 0034 1846     		mov	r0, r3
 3104 0036 1437     		adds	r7, r7, #20
 3105              	.LCFI106:
 3106              		.cfi_def_cfa_offset 4
 3107 0038 BD46     		mov	sp, r7
 3108              	.LCFI107:
 3109              		.cfi_def_cfa_register 13
 3110              		@ sp needed
 3111 003a 5DF8047B 		ldr	r7, [sp], #4
 3112              	.LCFI108:
 3113              		.cfi_restore 7
 3114              		.cfi_def_cfa_offset 0
 3115 003e 7047     		bx	lr
 3116              		.cfi_endproc
 3117              	.LFE24:
 3119              		.section	.text.prvInitialiseNewStreamBuffer,"ax",%progbits
 3120              		.align	1
 3121              		.syntax unified
 3122              		.thumb
 3123              		.thumb_func
 3124              		.fpu fpv5-d16
 3126              	prvInitialiseNewStreamBuffer:
 3127              	.LFB25:
1207:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
1208:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1209:./Libraries/FreeRTOS/Source/stream_buffer.c **** static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,
1210:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										  uint8_t * const pucBuffer,
1211:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										  size_t xBufferSizeBytes,
1212:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										  size_t xTriggerLevelBytes,
1213:./Libraries/FreeRTOS/Source/stream_buffer.c **** 										  uint8_t ucFlags )
1214:./Libraries/FreeRTOS/Source/stream_buffer.c **** {
 3128              		.loc 1 1214 1
 3129              		.cfi_startproc
 3130              		@ args = 4, pretend = 0, frame = 24
 3131              		@ frame_needed = 1, uses_anonymous_args = 0
 3132 0000 80B5     		push	{r7, lr}
 3133              	.LCFI109:
 3134              		.cfi_def_cfa_offset 8
 3135              		.cfi_offset 7, -8
 3136              		.cfi_offset 14, -4
 3137 0002 86B0     		sub	sp, sp, #24
 3138              	.LCFI110:
 3139              		.cfi_def_cfa_offset 32
 3140 0004 00AF     		add	r7, sp, #0
 3141              	.LCFI111:
 3142              		.cfi_def_cfa_register 7
 3143 0006 F860     		str	r0, [r7, #12]
 3144 0008 B960     		str	r1, [r7, #8]
 3145 000a 7A60     		str	r2, [r7, #4]
 3146 000c 3B60     		str	r3, [r7]
 3147              	.LBB187:
1215:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	/* Assert here is deliberately writing to the entire buffer to ensure it can
1216:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	be written to without generating exceptions, and is setting the buffer to a
1217:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	known value to assist in development/debugging. */
1218:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	#if( configASSERT_DEFINED == 1 )
ARM GAS  /tmp/cc9FsJVQ.s 			page 82


1219:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
1220:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		/* The value written just has to be identifiable when looking at the
1221:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		memory.  Don't use 0xA5 as that is the stack fill value and could
1222:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		result in confusion as to what is actually being observed. */
1223:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		const BaseType_t xWriteValue = 0x55;
 3148              		.loc 1 1223 20
 3149 000e 5523     		movs	r3, #85
 3150 0010 7B61     		str	r3, [r7, #20]
1224:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		configASSERT( memset( pucBuffer, ( int ) xWriteValue, xBufferSizeBytes ) == pucBuffer );
 3151              		.loc 1 1224 3
 3152 0012 7A68     		ldr	r2, [r7, #4]
 3153 0014 7969     		ldr	r1, [r7, #20]
 3154 0016 B868     		ldr	r0, [r7, #8]
 3155 0018 FFF7FEFF 		bl	memset
 3156 001c 0246     		mov	r2, r0
 3157 001e BB68     		ldr	r3, [r7, #8]
 3158 0020 9342     		cmp	r3, r2
 3159 0022 0AD0     		beq	.L184
 3160              	.LBB188:
 3161              	.LBB189:
 195:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3162              		.loc 2 195 2
 3163              		.syntax unified
 3164              	@ 195 "./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3165 0024 4FF05003 			mov r3, #80												
 3166 0028 83F31188 		msr basepri, r3											
 3167 002c BFF36F8F 		isb														
 3168 0030 BFF34F8F 		dsb														
 3169              	
 3170              	@ 0 "" 2
 3171              		.thumb
 3172              		.syntax unified
 3173 0034 3B61     		str	r3, [r7, #16]
 203:./Libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3174              		.loc 2 203 1
 3175 0036 00BF     		nop
 3176              	.L185:
 3177              	.LBE189:
 3178              	.LBE188:
 3179              		.loc 1 1224 3 discriminator 1
 3180 0038 FEE7     		b	.L185
 3181              	.L184:
 3182              	.LBE187:
1225:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	} /*lint !e529 !e438 xWriteValue is only used if configASSERT() is defined. */
1226:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	#endif
1227:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1228:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	( void ) memset( ( void * ) pxStreamBuffer, 0x00, sizeof( StreamBuffer_t ) ); /*lint !e9087 memset
 3183              		.loc 1 1228 11
 3184 003a 2422     		movs	r2, #36
 3185 003c 0021     		movs	r1, #0
 3186 003e F868     		ldr	r0, [r7, #12]
 3187 0040 FFF7FEFF 		bl	memset
1229:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	pxStreamBuffer->pucBuffer = pucBuffer;
 3188              		.loc 1 1229 28
 3189 0044 FB68     		ldr	r3, [r7, #12]
 3190 0046 BA68     		ldr	r2, [r7, #8]
 3191 0048 9A61     		str	r2, [r3, #24]
ARM GAS  /tmp/cc9FsJVQ.s 			page 83


1230:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	pxStreamBuffer->xLength = xBufferSizeBytes;
 3192              		.loc 1 1230 26
 3193 004a FB68     		ldr	r3, [r7, #12]
 3194 004c 7A68     		ldr	r2, [r7, #4]
 3195 004e 9A60     		str	r2, [r3, #8]
1231:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	pxStreamBuffer->xTriggerLevelBytes = xTriggerLevelBytes;
 3196              		.loc 1 1231 37
 3197 0050 FB68     		ldr	r3, [r7, #12]
 3198 0052 3A68     		ldr	r2, [r7]
 3199 0054 DA60     		str	r2, [r3, #12]
1232:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	pxStreamBuffer->ucFlags = ucFlags;
 3200              		.loc 1 1232 26
 3201 0056 FB68     		ldr	r3, [r7, #12]
 3202 0058 97F82020 		ldrb	r2, [r7, #32]
 3203 005c 1A77     		strb	r2, [r3, #28]
1233:./Libraries/FreeRTOS/Source/stream_buffer.c **** }
 3204              		.loc 1 1233 1
 3205 005e 00BF     		nop
 3206 0060 1837     		adds	r7, r7, #24
 3207              	.LCFI112:
 3208              		.cfi_def_cfa_offset 8
 3209 0062 BD46     		mov	sp, r7
 3210              	.LCFI113:
 3211              		.cfi_def_cfa_register 13
 3212              		@ sp needed
 3213 0064 80BD     		pop	{r7, pc}
 3214              		.cfi_endproc
 3215              	.LFE25:
 3217              		.section	.text.uxStreamBufferGetStreamBufferNumber,"ax",%progbits
 3218              		.align	1
 3219              		.global	uxStreamBufferGetStreamBufferNumber
 3220              		.syntax unified
 3221              		.thumb
 3222              		.thumb_func
 3223              		.fpu fpv5-d16
 3225              	uxStreamBufferGetStreamBufferNumber:
 3226              	.LFB26:
1234:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1235:./Libraries/FreeRTOS/Source/stream_buffer.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1236:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1237:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	UBaseType_t uxStreamBufferGetStreamBufferNumber( StreamBufferHandle_t xStreamBuffer )
1238:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 3227              		.loc 1 1238 2
 3228              		.cfi_startproc
 3229              		@ args = 0, pretend = 0, frame = 8
 3230              		@ frame_needed = 1, uses_anonymous_args = 0
 3231              		@ link register save eliminated.
 3232 0000 80B4     		push	{r7}
 3233              	.LCFI114:
 3234              		.cfi_def_cfa_offset 4
 3235              		.cfi_offset 7, -4
 3236 0002 83B0     		sub	sp, sp, #12
 3237              	.LCFI115:
 3238              		.cfi_def_cfa_offset 16
 3239 0004 00AF     		add	r7, sp, #0
 3240              	.LCFI116:
 3241              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cc9FsJVQ.s 			page 84


 3242 0006 7860     		str	r0, [r7, #4]
1239:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		return xStreamBuffer->uxStreamBufferNumber;
 3243              		.loc 1 1239 23
 3244 0008 7B68     		ldr	r3, [r7, #4]
 3245 000a 1B6A     		ldr	r3, [r3, #32]
1240:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 3246              		.loc 1 1240 2
 3247 000c 1846     		mov	r0, r3
 3248 000e 0C37     		adds	r7, r7, #12
 3249              	.LCFI117:
 3250              		.cfi_def_cfa_offset 4
 3251 0010 BD46     		mov	sp, r7
 3252              	.LCFI118:
 3253              		.cfi_def_cfa_register 13
 3254              		@ sp needed
 3255 0012 5DF8047B 		ldr	r7, [sp], #4
 3256              	.LCFI119:
 3257              		.cfi_restore 7
 3258              		.cfi_def_cfa_offset 0
 3259 0016 7047     		bx	lr
 3260              		.cfi_endproc
 3261              	.LFE26:
 3263              		.section	.text.vStreamBufferSetStreamBufferNumber,"ax",%progbits
 3264              		.align	1
 3265              		.global	vStreamBufferSetStreamBufferNumber
 3266              		.syntax unified
 3267              		.thumb
 3268              		.thumb_func
 3269              		.fpu fpv5-d16
 3271              	vStreamBufferSetStreamBufferNumber:
 3272              	.LFB27:
1241:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1242:./Libraries/FreeRTOS/Source/stream_buffer.c **** #endif /* configUSE_TRACE_FACILITY */
1243:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
1244:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1245:./Libraries/FreeRTOS/Source/stream_buffer.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1246:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1247:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	void vStreamBufferSetStreamBufferNumber( StreamBufferHandle_t xStreamBuffer, UBaseType_t uxStreamB
1248:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 3273              		.loc 1 1248 2
 3274              		.cfi_startproc
 3275              		@ args = 0, pretend = 0, frame = 8
 3276              		@ frame_needed = 1, uses_anonymous_args = 0
 3277              		@ link register save eliminated.
 3278 0000 80B4     		push	{r7}
 3279              	.LCFI120:
 3280              		.cfi_def_cfa_offset 4
 3281              		.cfi_offset 7, -4
 3282 0002 83B0     		sub	sp, sp, #12
 3283              	.LCFI121:
 3284              		.cfi_def_cfa_offset 16
 3285 0004 00AF     		add	r7, sp, #0
 3286              	.LCFI122:
 3287              		.cfi_def_cfa_register 7
 3288 0006 7860     		str	r0, [r7, #4]
 3289 0008 3960     		str	r1, [r7]
1249:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		xStreamBuffer->uxStreamBufferNumber = uxStreamBufferNumber;
ARM GAS  /tmp/cc9FsJVQ.s 			page 85


 3290              		.loc 1 1249 39
 3291 000a 7B68     		ldr	r3, [r7, #4]
 3292 000c 3A68     		ldr	r2, [r7]
 3293 000e 1A62     		str	r2, [r3, #32]
1250:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 3294              		.loc 1 1250 2
 3295 0010 00BF     		nop
 3296 0012 0C37     		adds	r7, r7, #12
 3297              	.LCFI123:
 3298              		.cfi_def_cfa_offset 4
 3299 0014 BD46     		mov	sp, r7
 3300              	.LCFI124:
 3301              		.cfi_def_cfa_register 13
 3302              		@ sp needed
 3303 0016 5DF8047B 		ldr	r7, [sp], #4
 3304              	.LCFI125:
 3305              		.cfi_restore 7
 3306              		.cfi_def_cfa_offset 0
 3307 001a 7047     		bx	lr
 3308              		.cfi_endproc
 3309              	.LFE27:
 3311              		.section	.text.ucStreamBufferGetStreamBufferType,"ax",%progbits
 3312              		.align	1
 3313              		.global	ucStreamBufferGetStreamBufferType
 3314              		.syntax unified
 3315              		.thumb
 3316              		.thumb_func
 3317              		.fpu fpv5-d16
 3319              	ucStreamBufferGetStreamBufferType:
 3320              	.LFB28:
1251:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1252:./Libraries/FreeRTOS/Source/stream_buffer.c **** #endif /* configUSE_TRACE_FACILITY */
1253:./Libraries/FreeRTOS/Source/stream_buffer.c **** /*-----------------------------------------------------------*/
1254:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1255:./Libraries/FreeRTOS/Source/stream_buffer.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1256:./Libraries/FreeRTOS/Source/stream_buffer.c **** 
1257:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	uint8_t ucStreamBufferGetStreamBufferType( StreamBufferHandle_t xStreamBuffer )
1258:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	{
 3321              		.loc 1 1258 2
 3322              		.cfi_startproc
 3323              		@ args = 0, pretend = 0, frame = 8
 3324              		@ frame_needed = 1, uses_anonymous_args = 0
 3325              		@ link register save eliminated.
 3326 0000 80B4     		push	{r7}
 3327              	.LCFI126:
 3328              		.cfi_def_cfa_offset 4
 3329              		.cfi_offset 7, -4
 3330 0002 83B0     		sub	sp, sp, #12
 3331              	.LCFI127:
 3332              		.cfi_def_cfa_offset 16
 3333 0004 00AF     		add	r7, sp, #0
 3334              	.LCFI128:
 3335              		.cfi_def_cfa_register 7
 3336 0006 7860     		str	r0, [r7, #4]
1259:./Libraries/FreeRTOS/Source/stream_buffer.c **** 		return ( xStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER );
 3337              		.loc 1 1259 25
 3338 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc9FsJVQ.s 			page 86


 3339 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3340              		.loc 1 1259 35
 3341 000c 03F00103 		and	r3, r3, #1
 3342 0010 DBB2     		uxtb	r3, r3
1260:./Libraries/FreeRTOS/Source/stream_buffer.c **** 	}
 3343              		.loc 1 1260 2
 3344 0012 1846     		mov	r0, r3
 3345 0014 0C37     		adds	r7, r7, #12
 3346              	.LCFI129:
 3347              		.cfi_def_cfa_offset 4
 3348 0016 BD46     		mov	sp, r7
 3349              	.LCFI130:
 3350              		.cfi_def_cfa_register 13
 3351              		@ sp needed
 3352 0018 5DF8047B 		ldr	r7, [sp], #4
 3353              	.LCFI131:
 3354              		.cfi_restore 7
 3355              		.cfi_def_cfa_offset 0
 3356 001c 7047     		bx	lr
 3357              		.cfi_endproc
 3358              	.LFE28:
 3360              		.text
 3361              	.Letext0:
 3362              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 3363              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 3364              		.file 5 "/usr/include/newlib/sys/_types.h"
 3365              		.file 6 "/usr/include/newlib/sys/reent.h"
 3366              		.file 7 "/usr/include/newlib/sys/lock.h"
 3367              		.file 8 "./User/code/Inc/FreeRTOSConfig.h"
 3368              		.file 9 "./Libraries/FreeRTOS/Source/include/FreeRTOS.h"
 3369              		.file 10 "./Libraries/FreeRTOS/Source/include/task.h"
 3370              		.file 11 "./Libraries/FreeRTOS/Source/include/stream_buffer.h"
ARM GAS  /tmp/cc9FsJVQ.s 			page 87


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stream_buffer.c
     /tmp/cc9FsJVQ.s:17     .text.xStreamBufferGenericCreate:0000000000000000 $t
     /tmp/cc9FsJVQ.s:25     .text.xStreamBufferGenericCreate:0000000000000000 xStreamBufferGenericCreate
     /tmp/cc9FsJVQ.s:3126   .text.prvInitialiseNewStreamBuffer:0000000000000000 prvInitialiseNewStreamBuffer
     /tmp/cc9FsJVQ.s:184    .text.xStreamBufferGenericCreateStatic:0000000000000000 $t
     /tmp/cc9FsJVQ.s:191    .text.xStreamBufferGenericCreateStatic:0000000000000000 xStreamBufferGenericCreateStatic
     /tmp/cc9FsJVQ.s:420    .text.vStreamBufferDelete:0000000000000000 $t
     /tmp/cc9FsJVQ.s:427    .text.vStreamBufferDelete:0000000000000000 vStreamBufferDelete
     /tmp/cc9FsJVQ.s:508    .text.xStreamBufferReset:0000000000000000 $t
     /tmp/cc9FsJVQ.s:515    .text.xStreamBufferReset:0000000000000000 xStreamBufferReset
     /tmp/cc9FsJVQ.s:622    .text.xStreamBufferSetTriggerLevel:0000000000000000 $t
     /tmp/cc9FsJVQ.s:629    .text.xStreamBufferSetTriggerLevel:0000000000000000 xStreamBufferSetTriggerLevel
     /tmp/cc9FsJVQ.s:725    .text.xStreamBufferSpacesAvailable:0000000000000000 $t
     /tmp/cc9FsJVQ.s:732    .text.xStreamBufferSpacesAvailable:0000000000000000 xStreamBufferSpacesAvailable
     /tmp/cc9FsJVQ.s:834    .text.xStreamBufferBytesAvailable:0000000000000000 $t
     /tmp/cc9FsJVQ.s:841    .text.xStreamBufferBytesAvailable:0000000000000000 xStreamBufferBytesAvailable
     /tmp/cc9FsJVQ.s:3051   .text.prvBytesInBuffer:0000000000000000 prvBytesInBuffer
     /tmp/cc9FsJVQ.s:908    .text.xStreamBufferSend:0000000000000000 $t
     /tmp/cc9FsJVQ.s:915    .text.xStreamBufferSend:0000000000000000 xStreamBufferSend
     /tmp/cc9FsJVQ.s:1398   .text.prvWriteMessageToBuffer:0000000000000000 prvWriteMessageToBuffer
     /tmp/cc9FsJVQ.s:1192   .text.xStreamBufferSendFromISR:0000000000000000 $t
     /tmp/cc9FsJVQ.s:1199   .text.xStreamBufferSendFromISR:0000000000000000 xStreamBufferSendFromISR
     /tmp/cc9FsJVQ.s:1392   .text.prvWriteMessageToBuffer:0000000000000000 $t
     /tmp/cc9FsJVQ.s:2646   .text.prvWriteBytesToBuffer:0000000000000000 prvWriteBytesToBuffer
     /tmp/cc9FsJVQ.s:1502   .text.xStreamBufferReceive:0000000000000000 $t
     /tmp/cc9FsJVQ.s:1509   .text.xStreamBufferReceive:0000000000000000 xStreamBufferReceive
     /tmp/cc9FsJVQ.s:2084   .text.prvReadMessageFromBuffer:0000000000000000 prvReadMessageFromBuffer
     /tmp/cc9FsJVQ.s:1739   .text.xStreamBufferNextMessageLengthBytes:0000000000000000 $t
     /tmp/cc9FsJVQ.s:1746   .text.xStreamBufferNextMessageLengthBytes:0000000000000000 xStreamBufferNextMessageLengthBytes
     /tmp/cc9FsJVQ.s:2843   .text.prvReadBytesFromBuffer:0000000000000000 prvReadBytesFromBuffer
     /tmp/cc9FsJVQ.s:1879   .text.xStreamBufferReceiveFromISR:0000000000000000 $t
     /tmp/cc9FsJVQ.s:1886   .text.xStreamBufferReceiveFromISR:0000000000000000 xStreamBufferReceiveFromISR
     /tmp/cc9FsJVQ.s:2078   .text.prvReadMessageFromBuffer:0000000000000000 $t
     /tmp/cc9FsJVQ.s:2168   .text.xStreamBufferIsEmpty:0000000000000000 $t
     /tmp/cc9FsJVQ.s:2175   .text.xStreamBufferIsEmpty:0000000000000000 xStreamBufferIsEmpty
     /tmp/cc9FsJVQ.s:2262   .text.xStreamBufferIsFull:0000000000000000 $t
     /tmp/cc9FsJVQ.s:2269   .text.xStreamBufferIsFull:0000000000000000 xStreamBufferIsFull
     /tmp/cc9FsJVQ.s:2366   .text.xStreamBufferSendCompletedFromISR:0000000000000000 $t
     /tmp/cc9FsJVQ.s:2373   .text.xStreamBufferSendCompletedFromISR:0000000000000000 xStreamBufferSendCompletedFromISR
     /tmp/cc9FsJVQ.s:2503   .text.xStreamBufferReceiveCompletedFromISR:0000000000000000 $t
     /tmp/cc9FsJVQ.s:2510   .text.xStreamBufferReceiveCompletedFromISR:0000000000000000 xStreamBufferReceiveCompletedFromISR
     /tmp/cc9FsJVQ.s:2640   .text.prvWriteBytesToBuffer:0000000000000000 $t
     /tmp/cc9FsJVQ.s:2837   .text.prvReadBytesFromBuffer:0000000000000000 $t
     /tmp/cc9FsJVQ.s:3045   .text.prvBytesInBuffer:0000000000000000 $t
     /tmp/cc9FsJVQ.s:3120   .text.prvInitialiseNewStreamBuffer:0000000000000000 $t
     /tmp/cc9FsJVQ.s:3218   .text.uxStreamBufferGetStreamBufferNumber:0000000000000000 $t
     /tmp/cc9FsJVQ.s:3225   .text.uxStreamBufferGetStreamBufferNumber:0000000000000000 uxStreamBufferGetStreamBufferNumber
     /tmp/cc9FsJVQ.s:3264   .text.vStreamBufferSetStreamBufferNumber:0000000000000000 $t
     /tmp/cc9FsJVQ.s:3271   .text.vStreamBufferSetStreamBufferNumber:0000000000000000 vStreamBufferSetStreamBufferNumber
     /tmp/cc9FsJVQ.s:3312   .text.ucStreamBufferGetStreamBufferType:0000000000000000 $t
     /tmp/cc9FsJVQ.s:3319   .text.ucStreamBufferGetStreamBufferType:0000000000000000 ucStreamBufferGetStreamBufferType

UNDEFINED SYMBOLS
pvPortMalloc
vPortFree
memset
ARM GAS  /tmp/cc9FsJVQ.s 			page 88


vPortEnterCritical
vPortExitCritical
vTaskSetTimeOutState
xTaskNotifyStateClear
xTaskGetCurrentTaskHandle
xTaskNotifyWait
xTaskCheckForTimeOut
vTaskSuspendAll
xTaskGenericNotify
xTaskResumeAll
xTaskGenericNotifyFromISR
memcpy
