ARM GAS  /tmp/ccPIf2eD.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_cmplx_dot_prod_f32.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_cmplx_dot_prod_f32,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	arm_cmplx_dot_prod_f32
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_cmplx_dot_prod_f32:
  27              	.LVL0:
  28              	.LFB145:
  29              		.file 1 "./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c"
   1:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Title:        arm_cmplx_dot_prod_f32.c
   4:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Description:  Floating-point complex dot product
   5:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
   6:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
   9:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /*
  12:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  14:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  16:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  20:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  22:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  28:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  29:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #include "arm_math.h"
ARM GAS  /tmp/ccPIf2eD.s 			page 2


  30:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  31:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  32:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @ingroup groupCmplxMath
  33:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  34:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  35:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  36:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @defgroup cmplx_dot_prod Complex Dot Product
  37:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  38:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   Computes the dot product of two complex vectors.
  39:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   The vectors are multiplied element-by-element and then summed.
  40:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  41:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   The <code>pSrcA</code> points to the first complex input vector and
  42:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   <code>pSrcB</code> points to the second complex input vector.
  43:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   <code>numSamples</code> specifies the number of complex samples
  44:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   and the data in each array is stored in an interleaved fashion
  45:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   (real, imag, real, imag, ...).
  46:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   Each array has a total of <code>2*numSamples</code> values.
  47:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  48:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   The underlying algorithm is used:
  49:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  50:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   <pre>
  51:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   realResult = 0;
  52:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   imagResult = 0;
  53:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   for (n = 0; n < numSamples; n++) {
  54:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       realResult += pSrcA[(2*n)+0] * pSrcB[(2*n)+0] - pSrcA[(2*n)+1] * pSrcB[(2*n)+1];
  55:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       imagResult += pSrcA[(2*n)+0] * pSrcB[(2*n)+1] + pSrcA[(2*n)+1] * pSrcB[(2*n)+0];
  56:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   }
  57:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   </pre>
  58:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  59:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   There are separate functions for floating-point, Q15, and Q31 data types.
  60:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  61:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  62:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  63:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @addtogroup cmplx_dot_prod
  64:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @{
  65:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  66:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  67:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  68:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @brief         Floating-point complex dot product.
  69:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[in]     pSrcA       points to the first input vector
  70:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[in]     pSrcB       points to the second input vector
  71:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[in]     numSamples  number of samples in each vector
  72:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[out]    realResult  real part of the result returned here
  73:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[out]    imagResult  imaginary part of the result returned here
  74:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @return        none
  75:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  76:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  77:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** void arm_cmplx_dot_prod_f32(
  78:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   const float32_t * pSrcA,
  79:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   const float32_t * pSrcB,
  80:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         uint32_t numSamples,
  81:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t * realResult,
  82:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t * imagResult)
  83:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** {
  30              		.loc 1 83 1 view -0
  31              		.cfi_startproc
  32              		@ args = 4, pretend = 0, frame = 0
ARM GAS  /tmp/ccPIf2eD.s 			page 3


  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  84:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         uint32_t blkCnt;                               /* Loop counter */
  35              		.loc 1 84 9 view .LVU1
  85:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t real_sum = 0.0f, imag_sum = 0.0f;    /* Temporary result variables */
  36              		.loc 1 85 9 view .LVU2
  86:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t a0,b0,c0,d0;
  37              		.loc 1 86 9 view .LVU3
  87:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  88:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #if defined(ARM_MATH_NEON)
  89:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     float32x4x2_t vec1,vec2,vec3,vec4;
  90:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     float32x4_t accR,accI;
  91:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     float32x2_t accum = vdup_n_f32(0);
  92:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  93:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     accR = vdupq_n_f32(0.0);
  94:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     accI = vdupq_n_f32(0.0);
  95:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  96:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /* Loop unrolling: Compute 8 outputs at a time */
  97:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt = numSamples >> 3U;
  98:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  99:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     while (blkCnt > 0U)
 100:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     {
 101:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* C = (A[0]+jA[1])*(B[0]+jB[1]) + ...  */
 102:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         /* Calculate dot product and then store the result in a temporary buffer. */
 103:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 104:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	vec1 = vld2q_f32(pSrcA);
 105:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec2 = vld2q_f32(pSrcB);
 106:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 107:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Increment pointers */
 108:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcA += 8;
 109:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcB += 8;
 110:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 111:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Re{C} = Re{A}*Re{B} - Im{A}*Im{B} */
 112:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accR = vmlaq_f32(accR,vec1.val[0],vec2.val[0]);
 113:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accR = vmlsq_f32(accR,vec1.val[1],vec2.val[1]);
 114:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 115:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Im{C} = Re{A}*Im{B} + Im{A}*Re{B} */
 116:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accI = vmlaq_f32(accI,vec1.val[1],vec2.val[0]);
 117:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accI = vmlaq_f32(accI,vec1.val[0],vec2.val[1]);
 118:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 119:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec3 = vld2q_f32(pSrcA);
 120:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec4 = vld2q_f32(pSrcB);
 121:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	
 122:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Increment pointers */
 123:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcA += 8;
 124:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcB += 8;
 125:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 126:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Re{C} = Re{A}*Re{B} - Im{A}*Im{B} */
 127:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accR = vmlaq_f32(accR,vec3.val[0],vec4.val[0]);
 128:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accR = vmlsq_f32(accR,vec3.val[1],vec4.val[1]);
 129:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 130:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Im{C} = Re{A}*Im{B} + Im{A}*Re{B} */
 131:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accI = vmlaq_f32(accI,vec3.val[1],vec4.val[0]);
 132:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accI = vmlaq_f32(accI,vec3.val[0],vec4.val[1]);
 133:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 134:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         /* Decrement the loop counter */
 135:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         blkCnt--;
ARM GAS  /tmp/ccPIf2eD.s 			page 4


 136:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     }
 137:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 138:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     accum = vpadd_f32(vget_low_f32(accR), vget_high_f32(accR));
 139:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += accum[0] + accum[1];
 140:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 141:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     accum = vpadd_f32(vget_low_f32(accI), vget_high_f32(accI));
 142:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += accum[0] + accum[1];
 143:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 144:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /* Tail */
 145:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt = numSamples & 0x7;
 146:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 147:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #else
 148:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 149:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 150:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 151:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   blkCnt = numSamples >> 2U;
 152:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 153:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   while (blkCnt > 0U)
 154:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
 155:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
 156:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
 157:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 158:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
 159:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 160:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
 161:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
 162:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
 163:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 164:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 165:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
 166:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
 167:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 168:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
 169:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 170:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
 171:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
 172:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
 173:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 174:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 175:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
 176:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
 177:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 178:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
 179:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 180:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
 181:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
 182:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
 183:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 184:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 185:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
 186:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
 187:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 188:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
 189:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 190:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
 191:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
 192:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
ARM GAS  /tmp/ccPIf2eD.s 			page 5


 193:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 194:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 195:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /* Decrement loop counter */
 196:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt--;
 197:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   }
 198:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 199:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Loop unrolling: Compute remaining outputs */
 200:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   blkCnt = numSamples % 0x4U;
 201:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 202:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #else
 203:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 204:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Initialize blkCnt with number of samples */
 205:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   blkCnt = numSamples;
  38              		.loc 1 205 3 view .LVU4
 206:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 207:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 208:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 209:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 210:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   while (blkCnt > 0U)
  39              		.loc 1 210 3 view .LVU5
  40              		.loc 1 210 9 view .LVU6
  83:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         uint32_t blkCnt;                               /* Loop counter */
  41              		.loc 1 83 1 is_stmt 0 view .LVU7
  42 0000 10B4     		push	{r4}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 4
  45              		.cfi_offset 4, -4
  83:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         uint32_t blkCnt;                               /* Loop counter */
  46              		.loc 1 83 1 view .LVU8
  47 0002 019C     		ldr	r4, [sp, #4]
  85:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t a0,b0,c0,d0;
  48              		.loc 1 85 36 view .LVU9
  49 0004 DFED167A 		vldr.32	s15, .L8
  50              		.loc 1 210 9 view .LVU10
  51 0008 02B3     		cbz	r2, .L4
  85:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t a0,b0,c0,d0;
  52              		.loc 1 85 19 view .LVU11
  53 000a B0EE677A 		vmov.f32	s14, s15
  54 000e 0830     		adds	r0, r0, #8
  55              	.LVL1:
  85:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t a0,b0,c0,d0;
  56              		.loc 1 85 19 view .LVU12
  57 0010 0831     		adds	r1, r1, #8
  58              	.LVL2:
  59              	.L3:
 211:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
 212:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
  60              		.loc 1 212 5 is_stmt 1 view .LVU13
  61              		.loc 1 212 8 is_stmt 0 view .LVU14
  62 0012 10ED025A 		vldr.32	s10, [r0, #-8]
  63              	.LVL3:
 213:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
  64              		.loc 1 213 5 is_stmt 1 view .LVU15
 210:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
  65              		.loc 1 210 9 is_stmt 0 view .LVU16
  66 0016 013A     		subs	r2, r2, #1
  67              	.LVL4:
ARM GAS  /tmp/ccPIf2eD.s 			page 6


 214:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
  68              		.loc 1 214 8 view .LVU17
  69 0018 51ED026A 		vldr.32	s13, [r1, #-8]
  70 001c 00F10800 		add	r0, r0, #8
  71              	.LVL5:
 215:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
  72              		.loc 1 215 8 view .LVU18
  73 0020 51ED015A 		vldr.32	s11, [r1, #-4]
  74 0024 01F10801 		add	r1, r1, #8
 216:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 217:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
  75              		.loc 1 217 14 view .LVU19
  76 0028 A5EE267A 		vfma.f32	s14, s10, s13
  77              	.LVL6:
 213:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
  78              		.loc 1 213 8 view .LVU20
  79 002c 10ED036A 		vldr.32	s12, [r0, #-12]
  80              	.LVL7:
 214:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
  81              		.loc 1 214 5 is_stmt 1 view .LVU21
 215:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  82              		.loc 1 215 5 view .LVU22
  83              		.loc 1 217 5 view .LVU23
 218:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
  84              		.loc 1 218 5 view .LVU24
  85              		.loc 1 218 14 is_stmt 0 view .LVU25
  86 0030 E5EE257A 		vfma.f32	s15, s10, s11
  87              	.LVL8:
 219:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
  88              		.loc 1 219 5 is_stmt 1 view .LVU26
  89              		.loc 1 219 14 is_stmt 0 view .LVU27
  90 0034 A6EE657A 		vfms.f32	s14, s12, s11
  91              	.LVL9:
 220:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
  92              		.loc 1 220 5 is_stmt 1 view .LVU28
  93              		.loc 1 220 14 is_stmt 0 view .LVU29
  94 0038 E6EE267A 		vfma.f32	s15, s12, s13
  95              	.LVL10:
 221:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 222:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /* Decrement loop counter */
 223:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt--;
  96              		.loc 1 223 5 is_stmt 1 view .LVU30
 210:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
  97              		.loc 1 210 9 view .LVU31
  98 003c E9D1     		bne	.L3
 224:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   }
 225:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 226:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Store real and imaginary result in destination buffer. */
 227:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   *realResult = real_sum;
  99              		.loc 1 227 3 view .LVU32
 100              		.loc 1 227 15 is_stmt 0 view .LVU33
 101 003e 83ED007A 		vstr.32	s14, [r3]
 228:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   *imagResult = imag_sum;
 102              		.loc 1 228 3 is_stmt 1 view .LVU34
 103              		.loc 1 228 15 is_stmt 0 view .LVU35
 104 0042 C4ED007A 		vstr.32	s15, [r4]
 229:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** }
ARM GAS  /tmp/ccPIf2eD.s 			page 7


 105              		.loc 1 229 1 view .LVU36
 106 0046 5DF8044B 		ldr	r4, [sp], #4
 107              	.LCFI1:
 108              		.cfi_remember_state
 109              		.cfi_restore 4
 110              		.cfi_def_cfa_offset 0
 111              	.LVL11:
 112              		.loc 1 229 1 view .LVU37
 113 004a 7047     		bx	lr
 114              	.LVL12:
 115              	.L4:
 116              	.LCFI2:
 117              		.cfi_restore_state
  85:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t a0,b0,c0,d0;
 118              		.loc 1 85 19 view .LVU38
 119 004c B0EE677A 		vmov.f32	s14, s15
 227:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   *imagResult = imag_sum;
 120              		.loc 1 227 3 is_stmt 1 view .LVU39
 227:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   *imagResult = imag_sum;
 121              		.loc 1 227 15 is_stmt 0 view .LVU40
 122 0050 83ED007A 		vstr.32	s14, [r3]
 228:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** }
 123              		.loc 1 228 3 is_stmt 1 view .LVU41
 228:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** }
 124              		.loc 1 228 15 is_stmt 0 view .LVU42
 125 0054 C4ED007A 		vstr.32	s15, [r4]
 126              		.loc 1 229 1 view .LVU43
 127 0058 5DF8044B 		ldr	r4, [sp], #4
 128              	.LCFI3:
 129              		.cfi_restore 4
 130              		.cfi_def_cfa_offset 0
 131              	.LVL13:
 132              		.loc 1 229 1 view .LVU44
 133 005c 7047     		bx	lr
 134              	.L9:
 135 005e 00BF     		.align	2
 136              	.L8:
 137 0060 00000000 		.word	0
 138              		.cfi_endproc
 139              	.LFE145:
 141              		.text
 142              	.Letext0:
 143              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 144              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 145              		.file 4 "/usr/include/newlib/sys/_types.h"
 146              		.file 5 "/usr/include/newlib/sys/reent.h"
 147              		.file 6 "/usr/include/newlib/sys/lock.h"
 148              		.file 7 "/usr/include/newlib/math.h"
 149              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/ccPIf2eD.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_cmplx_dot_prod_f32.c
     /tmp/ccPIf2eD.s:17     .text.arm_cmplx_dot_prod_f32:0000000000000000 $t
     /tmp/ccPIf2eD.s:26     .text.arm_cmplx_dot_prod_f32:0000000000000000 arm_cmplx_dot_prod_f32
     /tmp/ccPIf2eD.s:137    .text.arm_cmplx_dot_prod_f32:0000000000000060 $d

NO UNDEFINED SYMBOLS
