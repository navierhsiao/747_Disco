ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_fully_connected_mat_q7_vec_q15.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_fully_connected_mat_q7_vec_q15,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	arm_fully_connected_mat_q7_vec_q15
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_fully_connected_mat_q7_vec_q15:
  27              	.LVL0:
  28              	.LFB149:
  29              		.file 1 ".//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c
   1:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** /*
   2:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * Copyright (C) 2010-2018 Arm Limited or its affiliates. All rights reserved.
   3:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  *
   4:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * SPDX-License-Identifier: Apache-2.0
   5:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  *
   6:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
   7:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * not use this file except in compliance with the License.
   8:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * You may obtain a copy of the License at
   9:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  *
  10:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  11:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  *
  12:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  13:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  14:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * See the License for the specific language governing permissions and
  16:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * limitations under the License.
  17:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  */
  18:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
  19:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** /* ----------------------------------------------------------------------
  20:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * Project:      CMSIS NN Library
  21:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * Title:        arm_fully_connected_mat_q7_vec_q15.c
  22:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * Description:  Mixed Q15-Q7 fully-connected layer function
  23:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  *
  24:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * $Date:        17. January 2018
  25:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * $Revision:    V.1.0.0
  26:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  *
  27:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * Target Processor:  Cortex-M cores
  28:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  *
  29:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * -------------------------------------------------------------------- */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 2


  30:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
  31:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** #include "arm_math.h"
  32:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** #include "arm_nnfunctions.h"
  33:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
  34:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** /**
  35:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  *  @ingroup groupNN
  36:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  */
  37:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
  38:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** /**
  39:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * @addtogroup FC
  40:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  * @{
  41:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****  */
  42:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
  43:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****   /**
  44:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    * @brief Mixed Q15-Q7 fully-connected layer function
  45:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    * @param[in]       pV          pointer to input vector
  46:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    * @param[in]       pM          pointer to matrix weights
  47:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    * @param[in]       dim_vec     length of the vector
  48:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    * @param[in]       num_of_rows number of rows in weight matrix
  49:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    * @param[in]       bias_shift  amount of left-shift for bias
  50:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    * @param[in]       out_shift   amount of right-shift for output
  51:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    * @param[in]       bias        pointer to bias
  52:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    * @param[in,out]   pOut        pointer to output vector
  53:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    * @param[in,out]   vec_buffer  pointer to buffer space for input
  54:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    * @return     The function returns <code>ARM_MATH_SUCCESS</code>
  55:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    *
  56:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    * @details
  57:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    *
  58:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    * <b>Buffer size:</b>
  59:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    *
  60:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    * vec_buffer size: 0
  61:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    *
  62:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    *  Q7_Q15 version of the fully connected layer
  63:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    *
  64:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    *  Weights are in q7_t and Activations are in q15_t
  65:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    *
  66:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****    */
  67:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
  68:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** arm_status
  69:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** arm_fully_connected_mat_q7_vec_q15(const q15_t * pV,
  70:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****                                    const q7_t * pM,
  71:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****                                    const uint16_t dim_vec,
  72:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****                                    const uint16_t num_of_rows,
  73:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****                                    const uint16_t bias_shift,
  74:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****                                    const uint16_t out_shift, 
  75:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****                                    const q7_t * bias, 
  76:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****                                    q15_t * pOut, 
  77:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****                                    q15_t * vec_buffer)
  78:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** {
  30              		.loc 1 78 1 view -0
  31              		.cfi_startproc
  32              		@ args = 20, pretend = 0, frame = 64
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  79:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
  80:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** #if defined (ARM_MATH_DSP)
  81:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     /* Run the following code for Cortex-M4 and Cortex-M7 */
  82:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 3


  83:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     const q7_t *pB = pM;
  34              		.loc 1 83 5 view .LVU1
  78:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
  35              		.loc 1 78 1 is_stmt 0 view .LVU2
  36 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 36
  39              		.cfi_offset 4, -36
  40              		.cfi_offset 5, -32
  41              		.cfi_offset 6, -28
  42              		.cfi_offset 7, -24
  43              		.cfi_offset 8, -20
  44              		.cfi_offset 9, -16
  45              		.cfi_offset 10, -12
  46              		.cfi_offset 11, -8
  47              		.cfi_offset 14, -4
  48 0004 91B0     		sub	sp, sp, #68
  49              	.LCFI1:
  50              		.cfi_def_cfa_offset 104
  78:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
  51              		.loc 1 78 1 view .LVU3
  52 0006 BDF86840 		ldrh	r4, [sp, #104]
  53 000a 0E93     		str	r3, [sp, #56]
  84:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     const q7_t *pB2;
  85:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     q15_t    *pO = pOut;
  86:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     const q7_t *pBias = bias;
  87:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     const q15_t *pA = pV;
  88:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
  89:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     uint16_t  rowCnt = num_of_rows >> 1;
  90:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
  91:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     while (rowCnt)
  54              		.loc 1 91 11 view .LVU4
  55 000c 5B08     		lsrs	r3, r3, #1
  56              	.LVL1:
  78:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
  57              		.loc 1 78 1 view .LVU5
  58 000e 0794     		str	r4, [sp, #28]
  59 0010 BDF86C40 		ldrh	r4, [sp, #108]
  60 0014 0590     		str	r0, [sp, #20]
  61              	.LVL2:
  84:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     const q7_t *pB2;
  62              		.loc 1 84 5 is_stmt 1 view .LVU6
  85:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     const q7_t *pBias = bias;
  63              		.loc 1 85 5 view .LVU7
  86:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     const q15_t *pA = pV;
  64              		.loc 1 86 5 view .LVU8
  87:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
  65              		.loc 1 87 5 view .LVU9
  89:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
  66              		.loc 1 89 5 view .LVU10
  67              		.loc 1 91 5 view .LVU11
  68              		.loc 1 91 11 view .LVU12
  78:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
  69              		.loc 1 78 1 is_stmt 0 view .LVU13
  70 0016 0292     		str	r2, [sp, #8]
  71 0018 0694     		str	r4, [sp, #24]
  72              		.loc 1 91 11 view .LVU14
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 4


  73 001a 00F0A780 		beq	.L2
  74 001e 0746     		mov	r7, r0
  75              	.LBB53:
  92:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     {
  93:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         q31_t     sum =  ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
  76              		.loc 1 93 62 view .LVU15
  77 0020 0120     		movs	r0, #1
  78              	.LVL3:
  94:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         q31_t     sum2 = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
  95:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         uint16_t  colCnt = dim_vec >> 2;
  79              		.loc 1 95 19 view .LVU16
  80 0022 9508     		lsrs	r5, r2, #2
  81 0024 1646     		mov	r6, r2
  93:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         q31_t     sum2 = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
  82              		.loc 1 93 62 view .LVU17
  83 0026 A040     		lsls	r0, r0, r4
  84 0028 1C9C     		ldr	r4, [sp, #112]
  85 002a 5A1E     		subs	r2, r3, #1
  86              	.LVL4:
  87              		.loc 1 95 19 view .LVU18
  88 002c 0995     		str	r5, [sp, #36]
  89 002e 0234     		adds	r4, r4, #2
  90 0030 6B1E     		subs	r3, r5, #1
  91 0032 95B2     		uxth	r5, r2
  92 0034 06F00306 		and	r6, r6, #3
  93 0038 0194     		str	r4, [sp, #4]
  94 003a 9BB2     		uxth	r3, r3
  95 003c 1C9C     		ldr	r4, [sp, #112]
  96 003e 721E     		subs	r2, r6, #1
  97 0040 0133     		adds	r3, r3, #1
  98 0042 0F95     		str	r5, [sp, #60]
  99 0044 04EB4504 		add	r4, r4, r5, lsl #1
 100 0048 1D9D     		ldr	r5, [sp, #116]
 101 004a 92B2     		uxth	r2, r2
 102              	.LBB54:
 103              	.LBB55:
 104              	.LBB56:
 105              		.file 2 ".//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h"
   1:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /*
   2:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Copyright (C) 2010-2018 Arm Limited or its affiliates. All rights reserved.
   3:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
   4:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * SPDX-License-Identifier: Apache-2.0
   5:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
   6:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
   7:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * not use this file except in compliance with the License.
   8:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * You may obtain a copy of the License at
   9:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  10:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * www.apache.org/licenses/LICENSE-2.0
  11:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  12:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Unless required by applicable law or agreed to in writing, software
  13:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  14:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * See the License for the specific language governing permissions and
  16:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * limitations under the License.
  17:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  18:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  19:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /* ----------------------------------------------------------------------
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 5


  20:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Project:      CMSIS NN Library
  21:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Title:        arm_nnsupportfunctions.h
  22:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Description:  Public header file of support functions for CMSIS NN Library
  23:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  24:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * $Date:        13. July 2018
  25:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * $Revision:    V.1.0.0
  26:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  27:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Target Processor:  Cortex-M cores
  28:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * -------------------------------------------------------------------- */
  29:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  30:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #ifndef _ARM_NNSUPPORTFUNCTIONS_H_
  31:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #define _ARM_NNSUPPORTFUNCTIONS_H_
  32:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  33:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #include "arm_math.h"
  34:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #include "arm_common_tables.h"
  35:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  36:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #ifdef __cplusplus
  37:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** extern    "C"
  38:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
  39:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #endif
  40:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  41:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #define LEFT_SHIFT(_shift)  (_shift > 0 ? _shift : 0)
  42:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #define RIGHT_SHIFT(_shift) (_shift > 0 ? 0 : -_shift)
  43:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #define Q31_MIN (0x80000000L)
  44:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #define Q31_MAX (0x7FFFFFFFL)
  45:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  46:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
  47:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @brief Union for SIMD access of Q31/Q15/Q7 types
  48:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  49:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** union arm_nnword
  50:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
  51:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****     q31_t     word;
  52:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****                /**< Q31 type */
  53:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****     q15_t     half_words[2];
  54:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****                /**< Q15 type */
  55:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****     q7_t      bytes[4];
  56:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****                /**< Q7 type */
  57:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** };
  58:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  59:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
  60:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @brief Struct for specifying activation function types
  61:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  62:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  63:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** typedef enum
  64:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
  65:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****     ARM_SIGMOID = 0,
  66:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****                 /**< Sigmoid activation function */
  67:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****     ARM_TANH = 1,
  68:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****              /**< Tanh activation function */
  69:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** } arm_nn_activation_type;
  70:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  71:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
  72:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @defgroup nndata_convert Neural Network Data Conversion Functions
  73:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  74:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Perform data type conversion in-between neural network operations
  75:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  76:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 6


  77:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  78:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
  79:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @brief Converts the elements of the Q7 vector to Q15 vector without left-shift
  80:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[in]       *pSrc points to the Q7 input vector
  81:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[out]      *pDst points to the Q15 output vector
  82:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[in]       blockSize length of the input vector
  83:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @return none.
  84:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  85:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  86:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  87:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** void      arm_q7_to_q15_no_shift(const q7_t * pSrc, q15_t * pDst, uint32_t blockSize);
  88:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  89:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
  90:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @brief  Converts the elements of the Q7 vector to reordered Q15 vector without left-shift
  91:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[in]       *pSrc points to the Q7 input vector
  92:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[out]      *pDst points to the Q15 output vector
  93:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[in]       blockSize length of the input vector
  94:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @return none.
  95:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  96:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  97:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  98:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** void      arm_q7_to_q15_reordered_no_shift(const q7_t * pSrc, q15_t * pDst, uint32_t blockSize);
  99:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 100:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #if defined (ARM_MATH_DSP)
 101:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 102:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
 103:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @brief read and expand one Q7 word into two Q15 words
 104:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
 105:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 106:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** __STATIC_FORCEINLINE void *read_and_pad(void *source, q31_t * out1, q31_t * out2)
 107:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
 108:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inA = *__SIMD32(source)++;
 109:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf1 = __SXTB16(__ROR(inA, 8));
 110:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf2 = __SXTB16(inA);
 111:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 112:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #ifndef ARM_MATH_BIG_ENDIAN
 113:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out2 = __PKHTB(inAbuf1, inAbuf2, 16);
 106              		.loc 2 113 17 view .LVU19
 107 004c DFF8D8A1 		ldr	r10, .L32
 108 0050 0434     		adds	r4, r4, #4
 109 0052 0435     		adds	r5, r5, #4
 110 0054 0132     		adds	r2, r2, #1
 111 0056 0A96     		str	r6, [sp, #40]
 112 0058 0B94     		str	r4, [sp, #44]
 113              	.LBE56:
 114              	.LBE55:
 115              	.LBE54:
  93:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         q31_t     sum2 = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
 116              		.loc 1 93 62 view .LVU20
 117 005a 4408     		lsrs	r4, r0, #1
 118 005c 0395     		str	r5, [sp, #12]
 119 005e 0894     		str	r4, [sp, #32]
 120 0060 9C00     		lsls	r4, r3, #2
 121 0062 07EBC303 		add	r3, r7, r3, lsl #3
 122 0066 0D92     		str	r2, [sp, #52]
 123 0068 0494     		str	r4, [sp, #16]
 124 006a 0C93     		str	r3, [sp, #48]
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 7


 125              	.LVL5:
 126              	.L7:
  93:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         q31_t     sum2 = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
 127              		.loc 1 93 9 is_stmt 1 view .LVU21
  93:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         q31_t     sum2 = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
 128              		.loc 1 93 27 is_stmt 0 view .LVU22
 129 006c 019B     		ldr	r3, [sp, #4]
  96:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
  97:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         pA = pV;
  98:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         pB2 = pB + dim_vec;
 130              		.loc 1 98 13 view .LVU23
 131 006e 0298     		ldr	r0, [sp, #8]
  93:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         q31_t     sum2 = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
 132              		.loc 1 93 27 view .LVU24
 133 0070 13F9022C 		ldrsb	r2, [r3, #-2]
 134              		.loc 1 98 13 view .LVU25
 135 0074 01EB000B 		add	fp, r1, r0
  94:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         uint16_t  colCnt = dim_vec >> 2;
 136              		.loc 1 94 27 view .LVU26
 137 0078 13F9010C 		ldrsb	r0, [r3, #-1]
  93:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         q31_t     sum2 = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
 138              		.loc 1 93 45 view .LVU27
 139 007c 079B     		ldr	r3, [sp, #28]
 140 007e 9A40     		lsls	r2, r2, r3
  94:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         uint16_t  colCnt = dim_vec >> 2;
 141              		.loc 1 94 45 view .LVU28
 142 0080 9840     		lsls	r0, r0, r3
  93:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         q31_t     sum2 = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
 143              		.loc 1 93 60 view .LVU29
 144 0082 089B     		ldr	r3, [sp, #32]
 145 0084 1A44     		add	r2, r2, r3
 146              	.LVL6:
  94:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         uint16_t  colCnt = dim_vec >> 2;
 147              		.loc 1 94 9 is_stmt 1 view .LVU30
  94:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         uint16_t  colCnt = dim_vec >> 2;
 148              		.loc 1 94 60 is_stmt 0 view .LVU31
 149 0086 1844     		add	r0, r0, r3
 150              	.LVL7:
  95:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 151              		.loc 1 95 9 is_stmt 1 view .LVU32
  97:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         pB2 = pB + dim_vec;
 152              		.loc 1 97 9 view .LVU33
 153              		.loc 1 98 9 view .LVU34
  99:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 100:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         while (colCnt)
 154              		.loc 1 100 9 view .LVU35
 155              		.loc 1 100 15 view .LVU36
 156 0088 099B     		ldr	r3, [sp, #36]
 157 008a 002B     		cmp	r3, #0
 158 008c 00F0C780 		beq	.L13
 159              		.loc 1 100 15 is_stmt 0 view .LVU37
 160 0090 059B     		ldr	r3, [sp, #20]
  98:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 161              		.loc 1 98 13 view .LVU38
 162 0092 D946     		mov	r9, fp
 163 0094 03F1080C 		add	ip, r3, #8
 164 0098 049B     		ldr	r3, [sp, #16]
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 8


 165 009a 01EB0308 		add	r8, r1, r3
 166              	.LVL8:
 167              	.L4:
 168              	.LBB109:
 101:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         {
 102:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             q31_t     inV, inM11, inM12, inM21, inM22;
 169              		.loc 1 102 13 is_stmt 1 view .LVU39
 103:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             pB = (q7_t *) read_and_pad((void *)pB, &inM11, &inM12);
 170              		.loc 1 103 13 view .LVU40
 171              	.LBB72:
 172              	.LBI55:
 106:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
 173              		.loc 2 106 28 view .LVU41
 174              	.LBB67:
 108:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf1 = __SXTB16(__ROR(inA, 8));
 175              		.loc 2 108 9 view .LVU42
 109:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf2 = __SXTB16(inA);
 176              		.loc 2 109 9 view .LVU43
 109:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf2 = __SXTB16(inA);
 177              		.loc 2 109 29 is_stmt 0 view .LVU44
 178 009e 51F8047B 		ldr	r7, [r1], #4
 179              	.LVL9:
 180              	.LBB57:
 181              	.LBI57:
 182              		.file 3 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 9


  33:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 10


  90:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 11


 147:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 12


 204:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 13


 261:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 14


 318:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 15


 375:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 16


 432:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 17


 489:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 18


 546:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 19


 603:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 20


 660:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 21


 717:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 22


 774:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 23


 831:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 24


 888:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 25


 945:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 948:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 949:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 950:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 951:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 955:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 957:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 959:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 960:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 962:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 966:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 967:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 969:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 972:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 973:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 974:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 976:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 977:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 980:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 981:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 985:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 990:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 992:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 994:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 996:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1000:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 26


1002:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1006:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
1007:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1008:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1010:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1011:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1012:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1013:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1014:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1015:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1020:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1021:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 183              		.loc 3 1021 31 is_stmt 1 view .LVU45
 184              	.LBB58:
1022:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1023:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
 185              		.loc 3 1023 3 view .LVU46
1024:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
 186              		.loc 3 1024 3 view .LVU47
1025:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1026:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
1027:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 187              		.loc 3 1028 3 view .LVU48
 188              		.loc 3 1028 3 is_stmt 0 view .LVU49
 189              	.LBE58:
 190              	.LBE57:
 191              	.LBB60:
 192              	.LBI60:
1029:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1030:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1032:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1033:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1039:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1041:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1042:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1043:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1047:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1048:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 27


1049:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1050:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1051:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1052:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1057:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1062:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
1063:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
1065:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1066:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1068:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1069:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1070:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1071:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1072:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1073:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1078:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1080:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
1086:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    */
1089:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
1090:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1091:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
1092:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1093:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1095:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1096:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1097:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1102:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 28


1106:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1107:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1109:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1110:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1111:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1114:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1117:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1119:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1121:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1122:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1123:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1124:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1129:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1131:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1132:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1133:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1136:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1139:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1141:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1143:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1144:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1145:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1146:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1151:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1152:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1153:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1155:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
1156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1157:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1159:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1160:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1161:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 29


1163:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1168:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1170:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1171:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1172:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1174:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1175:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1176:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1177:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1178:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1185:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1187:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1188:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1189:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1191:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1192:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1193:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1194:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1195:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1202:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1203:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1204:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1205:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1206:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
1207:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1208:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1209:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1210:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1211:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1212:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
1213:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1214:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1215:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
1216:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1217:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1218:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1219:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 30


1220:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1221:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1222:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1223:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1224:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1225:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1226:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1227:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1228:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1229:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1230:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1231:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1232:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1233:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
1234:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1235:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1236:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1237:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __extension__ \
1238:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1239:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1240:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1241:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1242:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1243:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1244:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1245:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1246:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1247:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1248:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1249:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
1250:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1251:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1252:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1253:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  __extension__ \
1254:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1255:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1256:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1257:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1258:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1259:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1260:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1261:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1262:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1263:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1264:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1265:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
1266:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1267:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1268:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
1269:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1270:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1271:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1272:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1273:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1274:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1275:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1276:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 31


1277:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1278:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1279:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1280:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1281:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1282:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1283:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1284:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1285:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1286:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1287:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1288:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1289:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1290:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1291:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1292:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1293:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1294:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1295:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1296:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1297:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1298:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1299:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1300:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1301:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1302:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1303:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1304:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1305:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1306:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1307:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1308:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1309:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1310:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1311:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1312:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1313:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1314:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1315:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1316:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1317:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1318:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1319:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1320:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1321:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1322:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1323:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1324:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1325:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1326:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1327:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
1328:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1329:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1330:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1331:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1332:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1333:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 32


1334:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1335:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1336:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1337:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1338:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1339:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1340:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1341:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1342:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1343:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1344:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1345:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1346:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1347:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1348:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1349:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1350:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1351:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1352:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1353:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1354:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1355:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1356:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1357:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1358:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1359:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1360:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1361:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1362:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1363:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1364:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1365:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1366:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1367:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1368:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1369:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1370:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1371:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1372:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1373:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1374:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1375:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1376:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1377:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1378:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1379:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1380:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1381:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1382:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
1383:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1384:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
1385:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1386:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
1387:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
1388:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > max)
1389:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1390:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 33


1391:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1392:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < min)
1393:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1394:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return min;
1395:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1396:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1397:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return val;
1398:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1399:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1400:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1401:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1402:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1403:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1404:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1405:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1406:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1407:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
1408:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1409:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (sat <= 31U)
1410:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1411:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
1412:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
1413:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1414:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1415:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1416:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < 0)
1417:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1418:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return 0U;
1419:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1420:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1421:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (uint32_t)val;
1422:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1423:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1424:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1425:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1426:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1427:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1428:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1429:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1430:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1431:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1432:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1433:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1434:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1435:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1436:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1437:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
1438:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1439:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1440:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1441:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1442:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1443:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1444:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1445:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1446:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1447:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 34


1448:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1449:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1450:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1451:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1452:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
1453:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1454:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1455:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1456:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1457:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1458:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1459:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1460:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1461:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1462:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1463:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1464:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1465:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1466:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1467:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
1468:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1469:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1470:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1471:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1472:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1473:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1474:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1475:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1476:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1477:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1478:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1479:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1480:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1481:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1482:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1483:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1484:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1485:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1486:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1487:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1488:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1489:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1490:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1491:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1492:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1493:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1494:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1495:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1496:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1497:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1498:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1499:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1500:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1501:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1502:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1503:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1504:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 35


1505:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1506:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1507:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1508:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1509:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1510:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1511:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1512:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1513:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1514:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1515:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1516:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1517:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1518:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1519:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1520:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1521:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1522:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1523:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1524:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1525:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1526:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1527:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1528:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1529:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1530:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1531:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1532:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1533:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1534:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1535:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1536:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1537:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1538:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1539:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1540:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1541:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1542:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1543:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1544:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1545:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1546:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1547:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1548:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1549:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1550:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1551:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1552:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1553:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1554:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1555:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1556:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1557:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1558:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1559:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1560:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1561:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 36


1562:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1563:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1564:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1565:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
1566:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1567:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1568:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1569:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1570:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1571:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1572:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1573:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1574:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1575:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1576:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1577:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1578:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1579:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1580:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1581:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1582:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
1583:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1584:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1585:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1586:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1587:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1588:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1589:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1590:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1591:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1592:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1593:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1594:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1595:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1596:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1597:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1598:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1599:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
1600:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1601:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1602:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1603:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1604:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1605:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1606:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1607:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1608:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1609:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1610:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1611:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1612:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1613:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1614:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1615:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated SIMD instructions
1616:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
1617:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
1618:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 37


1619:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
1620:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1621:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1622:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1623:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1624:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1625:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1626:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1627:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1628:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1629:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1630:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1631:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1632:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1633:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1634:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1635:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1636:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1637:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1638:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1639:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1640:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1641:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1642:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1643:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1644:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1645:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1646:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1647:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1648:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1649:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1650:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1651:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1652:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1653:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1654:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1655:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1656:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1657:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1658:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1659:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1660:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1661:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1662:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1663:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1664:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1665:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1666:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1667:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1668:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1669:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1670:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1671:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1672:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1673:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1674:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1675:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 38


1676:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1677:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1678:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1679:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1680:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1681:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1682:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1683:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1684:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1685:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1686:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1687:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1688:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1689:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1690:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1691:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1692:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1693:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1694:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1695:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1696:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1697:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1698:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1699:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1700:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1701:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1702:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1703:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1704:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1705:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1706:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1707:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1708:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1709:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1710:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1711:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1712:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1713:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1714:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1715:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1716:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1717:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1718:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1719:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1720:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1721:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1722:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1723:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1724:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1725:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1726:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1727:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1728:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1729:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1730:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1731:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1732:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 39


1733:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1734:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1736:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1738:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1741:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1742:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1743:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1744:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1745:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1746:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1747:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1748:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1749:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1750:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1751:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1752:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1753:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1754:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1755:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1756:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1757:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1758:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1759:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1760:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1761:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1762:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1763:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1764:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1765:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1766:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1767:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1768:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1769:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1770:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1771:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1772:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1773:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1774:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1775:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1776:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1777:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1778:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1779:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1780:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1781:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1782:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1783:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1784:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1785:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1786:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1787:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1788:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1789:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 40


1790:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1791:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1792:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1793:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1794:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1795:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1796:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1797:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1798:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1799:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1800:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1801:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1802:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1803:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1804:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1805:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1806:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1807:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1808:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1809:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1810:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1811:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1812:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1813:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1814:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1815:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1816:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1817:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1818:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1819:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1820:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1821:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1822:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1823:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1824:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1825:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1826:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1827:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1828:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1829:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1830:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1831:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1832:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1833:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1834:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1835:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1836:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1837:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1838:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1839:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1840:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1841:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1842:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1843:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1844:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1845:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1846:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 41


1847:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1848:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1849:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1850:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1851:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1852:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1853:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1854:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1855:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1856:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1857:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1858:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1859:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1860:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1861:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1862:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1863:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1864:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1865:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1866:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1867:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1868:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1869:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1870:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1871:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1872:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1873:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1874:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1875:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1876:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1877:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1878:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1879:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1880:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1881:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1882:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1883:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1884:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1885:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1886:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1887:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1888:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1889:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1890:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1891:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1892:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1893:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1894:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1895:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1896:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1897:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1898:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1899:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1900:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1901:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1902:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1903:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 42


1904:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1905:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1906:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1907:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1908:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1909:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1910:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1911:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1912:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1913:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1914:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1915:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1916:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1917:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1918:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1919:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)
1920:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1921:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1922:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1923:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1924:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1925:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1926:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1927:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1928:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1929:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1930:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1931:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1932:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1933:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1934:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1935:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1936:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1937:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1938:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1939:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1940:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1941:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTB16(uint32_t op1)
1942:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1943:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1944:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1945:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1946:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1947:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1948:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1949:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1950:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1951:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1952:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1953:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1954:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1955:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1956:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1957:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTB16(uint32_t op1)
 193              		.loc 3 1957 31 is_stmt 1 view .LVU50
 194              	.LBB61:
1958:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 43


1959:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 195              		.loc 3 1959 3 view .LVU51
1960:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
 196              		.loc 3 1961 3 view .LVU52
 197              	.LBE61:
 198              	.LBE60:
 199              	.LBB63:
 200              	.LBB59:
1028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 201              		.loc 3 1028 23 is_stmt 0 view .LVU53
 202 00a2 4FEA3724 		ror	r4, r7, #8
 203              	.LVL10:
1028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 204              		.loc 3 1028 23 view .LVU54
 205              	.LBE59:
 206              	.LBE63:
 207              	.LBB64:
 208              	.LBB62:
 209              		.loc 3 1961 3 view .LVU55
 210              		.syntax unified
 211              	@ 1961 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 212 00a6 2FFA84F4 		sxtb16 r4, r4
 213              	@ 0 "" 2
 214              	.LVL11:
1962:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 215              		.loc 3 1962 3 is_stmt 1 view .LVU56
 216              		.loc 3 1962 3 is_stmt 0 view .LVU57
 217              		.thumb
 218              		.syntax unified
 219              	.LBE62:
 220              	.LBE64:
 110:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 221              		.loc 2 110 9 is_stmt 1 view .LVU58
 222              	.LBB65:
 223              	.LBI65:
1957:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 224              		.loc 3 1957 31 view .LVU59
 225              	.LBB66:
1959:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226              		.loc 3 1959 3 view .LVU60
1961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 227              		.loc 3 1961 3 view .LVU61
 228              		.syntax unified
 229              	@ 1961 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 230 00aa 2FFA87F7 		sxtb16 r7, r7
 231              	@ 0 "" 2
 232              	.LVL12:
 233              		.loc 3 1962 3 view .LVU62
 234              		.loc 3 1962 3 is_stmt 0 view .LVU63
 235              		.thumb
 236              		.syntax unified
 237              	.LBE66:
 238              	.LBE65:
 239              		.loc 2 113 9 is_stmt 1 view .LVU64
 114:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 240              		.loc 2 114 9 view .LVU65
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 44


 115:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #else
 116:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHTB(inAbuf1, inAbuf2, 16);
 117:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out2 = __PKHBT(inAbuf2, inAbuf1, 16);
 118:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #endif
 119:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 120:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         return source;
 241              		.loc 2 120 9 view .LVU66
 242              		.loc 2 120 9 is_stmt 0 view .LVU67
 243              	.LBE67:
 244              	.LBE72:
 104:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             pB2 = (q7_t *) read_and_pad((void *)pB2, &inM21, &inM22);
 245              		.loc 1 104 13 is_stmt 1 view .LVU68
 246              	.LBB73:
 247              	.LBI73:
 106:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
 248              		.loc 2 106 28 view .LVU69
 249              	.LBB74:
 108:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf1 = __SXTB16(__ROR(inA, 8));
 250              		.loc 2 108 9 view .LVU70
 109:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf2 = __SXTB16(inA);
 251              		.loc 2 109 9 view .LVU71
 109:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf2 = __SXTB16(inA);
 252              		.loc 2 109 29 is_stmt 0 view .LVU72
 253 00ae 59F8045B 		ldr	r5, [r9], #4
 254              	.LVL13:
 255              	.LBB75:
 256              	.LBI75:
1021:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 257              		.loc 3 1021 31 is_stmt 1 view .LVU73
 258              	.LBB76:
1023:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
 259              		.loc 3 1023 3 view .LVU74
1024:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 260              		.loc 3 1024 3 view .LVU75
1028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 261              		.loc 3 1028 3 view .LVU76
1028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 262              		.loc 3 1028 3 is_stmt 0 view .LVU77
 263              	.LBE76:
 264              	.LBE75:
 265              	.LBB78:
 266              	.LBI78:
1957:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 267              		.loc 3 1957 31 is_stmt 1 view .LVU78
 268              	.LBB79:
1959:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 269              		.loc 3 1959 3 view .LVU79
1961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 270              		.loc 3 1961 3 view .LVU80
 271              	.LBE79:
 272              	.LBE78:
 273              	.LBB81:
 274              	.LBB77:
1028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 275              		.loc 3 1028 23 is_stmt 0 view .LVU81
 276 00b2 4FEA3523 		ror	r3, r5, #8
 277              	.LVL14:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 45


1028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 278              		.loc 3 1028 23 view .LVU82
 279              	.LBE77:
 280              	.LBE81:
 281              	.LBB82:
 282              	.LBB80:
1961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 283              		.loc 3 1961 3 view .LVU83
 284              		.syntax unified
 285              	@ 1961 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 286 00b6 2FFA83F3 		sxtb16 r3, r3
 287              	@ 0 "" 2
 288              	.LVL15:
 289              		.loc 3 1962 3 is_stmt 1 view .LVU84
 290              		.loc 3 1962 3 is_stmt 0 view .LVU85
 291              		.thumb
 292              		.syntax unified
 293              	.LBE80:
 294              	.LBE82:
 110:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 295              		.loc 2 110 9 is_stmt 1 view .LVU86
 296              	.LBB83:
 297              	.LBI83:
1957:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 298              		.loc 3 1957 31 view .LVU87
 299              	.LBB84:
1959:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 300              		.loc 3 1959 3 view .LVU88
1961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 301              		.loc 3 1961 3 view .LVU89
 302              		.syntax unified
 303              	@ 1961 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 304 00ba 2FFA85F5 		sxtb16 r5, r5
 305              	@ 0 "" 2
 306              	.LVL16:
 307              		.loc 3 1962 3 view .LVU90
 308              		.loc 3 1962 3 is_stmt 0 view .LVU91
 309              		.thumb
 310              		.syntax unified
 311              	.LBE84:
 312              	.LBE83:
 113:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 313              		.loc 2 113 9 is_stmt 1 view .LVU92
 114:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #else
 314              		.loc 2 114 9 view .LVU93
 315              		.loc 2 120 9 view .LVU94
 316              		.loc 2 120 9 is_stmt 0 view .LVU95
 317              	.LBE74:
 318              	.LBE73:
 105:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 106:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             inV = *__SIMD32(pA)++;
 319              		.loc 1 106 13 is_stmt 1 view .LVU96
 107:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 108:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             sum = __SMLAD(inV, inM11, sum);
 320              		.loc 1 108 13 view .LVU97
 321              	.LBB87:
 322              	.LBB68:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 46


 114:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #else
 323              		.loc 2 114 17 is_stmt 0 view .LVU98
 324 00be 1FFA87FE 		uxth	lr, r7
 325              	.LBE68:
 326              	.LBE87:
 327              		.loc 1 108 19 view .LVU99
 328 00c2 5CF8086C 		ldr	r6, [ip, #-8]
 329              	.LVL17:
 330              	.LBB88:
 331              	.LBI88:
1963:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1964:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1965:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1966:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1967:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1968:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1969:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1970:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1971:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1972:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1973:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1974:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1975:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1976:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1977:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1978:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1979:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1980:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1981:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1982:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1983:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1984:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1985:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1986:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1987:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1988:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32_t op3)
 332              		.loc 3 1989 31 is_stmt 1 view .LVU100
 333              	.LBB89:
1990:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 334              		.loc 3 1991 3 view .LVU101
1992:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 335              		.loc 3 1993 3 view .LVU102
 336              	.LBE89:
 337              	.LBE88:
 338              	.LBB91:
 339              	.LBB69:
 114:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #else
 340              		.loc 2 114 17 is_stmt 0 view .LVU103
 341 00c6 4EEA044E 		orr	lr, lr, r4, lsl #16
 342              	.LBE69:
 343              	.LBE91:
 344              	.LBB92:
 345              	.LBB90:
 346              		.loc 3 1993 3 view .LVU104
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 47


 347              		.syntax unified
 348              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 349 00ca 26FB0E22 		smlad r2, r6, lr, r2
 350              	@ 0 "" 2
 351              	.LVL18:
1994:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 352              		.loc 3 1994 3 is_stmt 1 view .LVU105
 353              		.loc 3 1994 3 is_stmt 0 view .LVU106
 354              		.thumb
 355              		.syntax unified
 356              	.LBE90:
 357              	.LBE92:
 109:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             sum2 = __SMLAD(inV, inM21, sum2);
 358              		.loc 1 109 13 is_stmt 1 view .LVU107
 359              	.LBB93:
 360              	.LBI93:
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 361              		.loc 3 1989 31 view .LVU108
 362              	.LBB94:
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363              		.loc 3 1991 3 view .LVU109
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 364              		.loc 3 1993 3 view .LVU110
 365              	.LBE94:
 366              	.LBE93:
 367              	.LBB96:
 368              	.LBB85:
 114:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #else
 369              		.loc 2 114 17 is_stmt 0 view .LVU111
 370 00ce 1FFA85FE 		uxth	lr, r5
 371 00d2 4EEA034E 		orr	lr, lr, r3, lsl #16
 372              	.LBE85:
 373              	.LBE96:
 374              	.LBB97:
 375              	.LBB95:
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 376              		.loc 3 1993 3 view .LVU112
 377              		.syntax unified
 378              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 379 00d6 26FB0E00 		smlad r0, r6, lr, r0
 380              	@ 0 "" 2
 381              	.LVL19:
 382              		.loc 3 1994 3 is_stmt 1 view .LVU113
 383              		.loc 3 1994 3 is_stmt 0 view .LVU114
 384              		.thumb
 385              		.syntax unified
 386              	.LBE95:
 387              	.LBE97:
 110:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 111:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             inV = *__SIMD32(pA)++;
 388              		.loc 1 111 13 is_stmt 1 view .LVU115
 112:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 113:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             sum = __SMLAD(inV, inM12, sum);
 389              		.loc 1 113 13 view .LVU116
 390              	.LBB98:
 391              	.LBB70:
 113:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 48


 392              		.loc 2 113 17 is_stmt 0 view .LVU117
 393 00da 04EA0A04 		and	r4, r4, r10
 394              	.LVL20:
 113:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 395              		.loc 2 113 17 view .LVU118
 396              	.LBE70:
 397              	.LBE98:
 398              		.loc 1 113 19 view .LVU119
 399 00de 5CF8046C 		ldr	r6, [ip, #-4]
 400              	.LVL21:
 401              	.LBB99:
 402              	.LBI99:
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 403              		.loc 3 1989 31 is_stmt 1 view .LVU120
 404              	.LBB100:
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 405              		.loc 3 1991 3 view .LVU121
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 406              		.loc 3 1993 3 view .LVU122
 407              	.LBE100:
 408              	.LBE99:
 409              	.LBB102:
 410              	.LBB71:
 113:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 411              		.loc 2 113 17 is_stmt 0 view .LVU123
 412 00e2 44EA1744 		orr	r4, r4, r7, lsr #16
 413              	.LBE71:
 414              	.LBE102:
 415              	.LBB103:
 416              	.LBB101:
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 417              		.loc 3 1993 3 view .LVU124
 418              		.syntax unified
 419              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 420 00e6 26FB0422 		smlad r2, r6, r4, r2
 421              	@ 0 "" 2
 422              	.LVL22:
 423              		.loc 3 1994 3 is_stmt 1 view .LVU125
 424              		.loc 3 1994 3 is_stmt 0 view .LVU126
 425              		.thumb
 426              		.syntax unified
 427              	.LBE101:
 428              	.LBE103:
 114:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             sum2 = __SMLAD(inV, inM22, sum2);
 429              		.loc 1 114 13 is_stmt 1 view .LVU127
 430              	.LBB104:
 431              	.LBI104:
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 432              		.loc 3 1989 31 view .LVU128
 433              	.LBB105:
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 434              		.loc 3 1991 3 view .LVU129
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 435              		.loc 3 1993 3 view .LVU130
 436              	.LBE105:
 437              	.LBE104:
 438              	.LBB107:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 49


 439              	.LBB86:
 113:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 440              		.loc 2 113 17 is_stmt 0 view .LVU131
 441 00ea 03EA0A03 		and	r3, r3, r10
 442              	.LVL23:
 113:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 443              		.loc 2 113 17 view .LVU132
 444 00ee 43EA1543 		orr	r3, r3, r5, lsr #16
 445              	.LBE86:
 446              	.LBE107:
 447              	.LBB108:
 448              	.LBB106:
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 449              		.loc 3 1993 3 view .LVU133
 450              		.syntax unified
 451              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 452 00f2 26FB0300 		smlad r0, r6, r3, r0
 453              	@ 0 "" 2
 454              	.LVL24:
 455              		.loc 3 1994 3 is_stmt 1 view .LVU134
 456              		.loc 3 1994 3 is_stmt 0 view .LVU135
 457              		.thumb
 458              		.syntax unified
 459              	.LBE106:
 460              	.LBE108:
 115:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 116:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             colCnt--;
 461              		.loc 1 116 13 is_stmt 1 view .LVU136
 462              		.loc 1 116 13 is_stmt 0 view .LVU137
 463              	.LBE109:
 100:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         {
 464              		.loc 1 100 15 is_stmt 1 view .LVU138
 465 00f6 4145     		cmp	r1, r8
 466 00f8 0CF1080C 		add	ip, ip, #8
 467              	.LVL25:
 100:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         {
 468              		.loc 1 100 15 is_stmt 0 view .LVU139
 469 00fc CFD1     		bne	.L4
 470 00fe 049B     		ldr	r3, [sp, #16]
 471              	.LBB110:
 111:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 472              		.loc 1 111 32 view .LVU140
 473 0100 0C9C     		ldr	r4, [sp, #48]
 474 0102 9B44     		add	fp, fp, r3
 475              	.LVL26:
 476              	.L3:
 111:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 477              		.loc 1 111 32 view .LVU141
 478              	.LBE110:
 117:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         }
 118:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         colCnt = dim_vec & 0x3;
 479              		.loc 1 118 9 is_stmt 1 view .LVU142
 119:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         while (colCnt)
 480              		.loc 1 119 9 view .LVU143
 481              		.loc 1 119 15 view .LVU144
 482 0104 0A9B     		ldr	r3, [sp, #40]
 483 0106 002B     		cmp	r3, #0
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 50


 484 0108 00F08780 		beq	.L14
 485 010c 0D9B     		ldr	r3, [sp, #52]
 486 010e 08EB0301 		add	r1, r8, r3
 487              	.L6:
 488              	.LBB111:
 120:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         {
 121:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             q15_t     inV = *pA++;
 489              		.loc 1 121 13 view .LVU145
 490              	.LVL27:
 122:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             q7_t      inM = *pB++;
 123:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             q7_t      inM2 = *pB2++;
 124:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 125:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             sum += inV * inM;
 491              		.loc 1 125 17 is_stmt 0 view .LVU146
 492 0112 18F9016B 		ldrsb	r6, [r8], #1
 493              	.LVL28:
 121:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             q7_t      inM = *pB++;
 494              		.loc 1 121 23 view .LVU147
 495 0116 34F9023B 		ldrsh	r3, [r4], #2
 496              	.LVL29:
 122:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             q7_t      inM = *pB++;
 497              		.loc 1 122 13 is_stmt 1 view .LVU148
 123:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 498              		.loc 1 123 13 view .LVU149
 499              		.loc 1 125 13 view .LVU150
 126:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             sum2 += inV * inM2;
 500              		.loc 1 126 18 is_stmt 0 view .LVU151
 501 011a 1BF9015B 		ldrsb	r5, [fp], #1
 502              	.LVL30:
 503              		.loc 1 126 18 view .LVU152
 504              	.LBE111:
 119:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         {
 505              		.loc 1 119 15 view .LVU153
 506 011e 4145     		cmp	r1, r8
 507              	.LBB112:
 125:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             sum2 += inV * inM2;
 508              		.loc 1 125 17 view .LVU154
 509 0120 13FB0622 		smlabb	r2, r3, r6, r2
 510              	.LVL31:
 511              		.loc 1 126 13 is_stmt 1 view .LVU155
 512              		.loc 1 126 18 is_stmt 0 view .LVU156
 513 0124 13FB0500 		smlabb	r0, r3, r5, r0
 514              	.LVL32:
 127:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             colCnt--;
 515              		.loc 1 127 13 is_stmt 1 view .LVU157
 516              		.loc 1 127 13 is_stmt 0 view .LVU158
 517              	.LBE112:
 119:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         {
 518              		.loc 1 119 15 is_stmt 1 view .LVU159
 519 0128 F3D1     		bne	.L6
 520              	.LVL33:
 521              	.L5:
 128:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         }                       /* while over colCnt */
 129:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum >> out_shift), 16));
 522              		.loc 1 129 9 view .LVU160
 523              	.LBB113:
 524              		.loc 1 129 26 view .LVU161
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 51


 525              		.loc 1 129 26 view .LVU162
 526 012a 069C     		ldr	r4, [sp, #24]
 527              	.LVL34:
 528              		.loc 1 129 26 is_stmt 0 view .LVU163
 529 012c 019B     		ldr	r3, [sp, #4]
 530 012e 2241     		asrs	r2, r2, r4
 531              	.LVL35:
 532              		.loc 1 129 26 view .LVU164
 533              	.LBE113:
 534              	.LBB114:
 130:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum2 >> out_shift), 16));
 535              		.loc 1 130 26 view .LVU165
 536 0130 2041     		asrs	r0, r0, r4
 537              	.LVL36:
 538              		.loc 1 130 26 view .LVU166
 539              	.LBE114:
 131:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 132:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         /*adjust the pointers and counters */
 133:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         pB += dim_vec;
 540              		.loc 1 133 12 view .LVU167
 541 0132 029C     		ldr	r4, [sp, #8]
 542 0134 0233     		adds	r3, r3, #2
 543              	.LBB115:
 129:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum2 >> out_shift), 16));
 544              		.loc 1 129 26 view .LVU168
 545              		.syntax unified
 546              	@ 129 ".//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c" 1
 547 0136 02F30F02 		ssat r2, #16, r2
 548              	@ 0 "" 2
 549              	.LVL37:
 129:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum2 >> out_shift), 16));
 550              		.loc 1 129 26 is_stmt 1 view .LVU169
 129:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum2 >> out_shift), 16));
 551              		.loc 1 129 26 is_stmt 0 view .LVU170
 552              		.thumb
 553              		.syntax unified
 554              	.LBE115:
 555              		.loc 1 133 12 view .LVU171
 556 013a 2144     		add	r1, r1, r4
 129:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum2 >> out_shift), 16));
 557              		.loc 1 129 17 view .LVU172
 558 013c 039C     		ldr	r4, [sp, #12]
 559              	.LBB116:
 130:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum2 >> out_shift), 16));
 560              		.loc 1 130 26 view .LVU173
 561              		.syntax unified
 562              	@ 130 ".//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c" 1
 563 013e 00F30F00 		ssat r0, #16, r0
 564              	@ 0 "" 2
 565              		.thumb
 566              		.syntax unified
 567              	.LBE116:
 129:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum2 >> out_shift), 16));
 568              		.loc 1 129 17 view .LVU174
 569 0142 24F8042C 		strh	r2, [r4, #-4]	@ movhi
 130:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum2 >> out_shift), 16));
 570              		.loc 1 130 9 is_stmt 1 view .LVU175
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 52


 571              	.LBB117:
 130:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum2 >> out_shift), 16));
 572              		.loc 1 130 26 view .LVU176
 573              	.LVL38:
 130:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum2 >> out_shift), 16));
 574              		.loc 1 130 26 view .LVU177
 130:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum2 >> out_shift), 16));
 575              		.loc 1 130 26 view .LVU178
 130:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum2 >> out_shift), 16));
 576              		.loc 1 130 26 is_stmt 0 view .LVU179
 577              	.LBE117:
 130:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum2 >> out_shift), 16));
 578              		.loc 1 130 17 view .LVU180
 579 0146 2246     		mov	r2, r4
 580              	.LVL39:
 130:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum2 >> out_shift), 16));
 581              		.loc 1 130 17 view .LVU181
 582 0148 0193     		str	r3, [sp, #4]
 583              	.LVL40:
 130:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum2 >> out_shift), 16));
 584              		.loc 1 130 17 view .LVU182
 585 014a 0432     		adds	r2, r2, #4
 586 014c 24F8020C 		strh	r0, [r4, #-2]	@ movhi
 587              		.loc 1 133 9 is_stmt 1 view .LVU183
 588              	.LVL41:
 134:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         rowCnt--;
 589              		.loc 1 134 9 view .LVU184
 590              		.loc 1 134 9 is_stmt 0 view .LVU185
 591              	.LBE53:
  91:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     {
 592              		.loc 1 91 11 is_stmt 1 view .LVU186
 593 0150 0392     		str	r2, [sp, #12]
 594 0152 0B9A     		ldr	r2, [sp, #44]
 595 0154 9342     		cmp	r3, r2
 596 0156 89D1     		bne	.L7
 597 0158 0F9B     		ldr	r3, [sp, #60]
 598 015a 1C9A     		ldr	r2, [sp, #112]
 599 015c 0133     		adds	r3, r3, #1
 600 015e 02EB4302 		add	r2, r2, r3, lsl #1
 601 0162 1C92     		str	r2, [sp, #112]
 602              	.LVL42:
  91:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     {
 603              		.loc 1 91 11 is_stmt 0 view .LVU187
 604 0164 1D9A     		ldr	r2, [sp, #116]
 605 0166 02EB8303 		add	r3, r2, r3, lsl #2
 606 016a 1D93     		str	r3, [sp, #116]
 607              	.LVL43:
 608              	.L2:
 135:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     }
 136:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 137:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     /* left-over part of the rows */
 138:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     rowCnt = num_of_rows & 0x1;
 609              		.loc 1 138 5 is_stmt 1 view .LVU188
 139:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 140:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     while (rowCnt)
 610              		.loc 1 140 5 view .LVU189
 611              		.loc 1 140 11 view .LVU190
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 53


 612 016c 0E9B     		ldr	r3, [sp, #56]
 613 016e DB07     		lsls	r3, r3, #31
 614 0170 4FD5     		bpl	.L8
 615              	.LVL44:
 616              	.LBB118:
 141:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     {
 142:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         q31_t     sum = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
 617              		.loc 1 142 9 view .LVU191
 618              		.loc 1 142 26 is_stmt 0 view .LVU192
 619 0172 1C9B     		ldr	r3, [sp, #112]
 620              		.loc 1 142 44 view .LVU193
 621 0174 0798     		ldr	r0, [sp, #28]
 622              		.loc 1 142 26 view .LVU194
 623 0176 93F90020 		ldrsb	r2, [r3]
 624              		.loc 1 142 61 view .LVU195
 625 017a 0123     		movs	r3, #1
 626              		.loc 1 142 44 view .LVU196
 627 017c 8240     		lsls	r2, r2, r0
 628              		.loc 1 142 61 view .LVU197
 629 017e 0698     		ldr	r0, [sp, #24]
 630 0180 8340     		lsls	r3, r3, r0
 631              		.loc 1 142 59 view .LVU198
 632 0182 02EB5302 		add	r2, r2, r3, lsr #1
 633              	.LVL45:
 143:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         uint16_t  colCnt = dim_vec >> 2;
 634              		.loc 1 143 9 is_stmt 1 view .LVU199
 144:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 145:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         pA = pV;
 635              		.loc 1 145 9 view .LVU200
 146:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 147:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         while (colCnt)
 636              		.loc 1 147 9 view .LVU201
 637              		.loc 1 147 15 view .LVU202
 638 0186 029B     		ldr	r3, [sp, #8]
 639 0188 9B08     		lsrs	r3, r3, #2
 640 018a 4BD0     		beq	.L15
 641 018c 03F1FF3C 		add	ip, r3, #-1
 642 0190 059B     		ldr	r3, [sp, #20]
 643              	.LBB119:
 644              	.LBB120:
 645              	.LBB121:
 113:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 646              		.loc 2 113 17 is_stmt 0 view .LVU203
 647 0192 254F     		ldr	r7, .L32
 648 0194 1FFA8CFC 		uxth	ip, ip
 649 0198 03F10804 		add	r4, r3, #8
 650 019c 0CF1010C 		add	ip, ip, #1
 651 01a0 01EB8C06 		add	r6, r1, ip, lsl #2
 652              	.LVL46:
 653              	.L10:
 113:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 654              		.loc 2 113 17 view .LVU204
 655              	.LBE121:
 656              	.LBE120:
 148:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         {
 149:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             q31_t     inV1, inV2, inM11, inM12;
 657              		.loc 1 149 13 is_stmt 1 view .LVU205
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 54


 150:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 151:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             pB = (q7_t *) read_and_pad((void *)pB, &inM11, &inM12);
 658              		.loc 1 151 13 view .LVU206
 659              	.LBB137:
 660              	.LBI120:
 106:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
 661              		.loc 2 106 28 view .LVU207
 662              	.LBB132:
 108:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf1 = __SXTB16(__ROR(inA, 8));
 663              		.loc 2 108 9 view .LVU208
 109:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf2 = __SXTB16(inA);
 664              		.loc 2 109 9 view .LVU209
 109:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf2 = __SXTB16(inA);
 665              		.loc 2 109 29 is_stmt 0 view .LVU210
 666 01a4 51F8040B 		ldr	r0, [r1], #4
 667              	.LVL47:
 668              	.LBB122:
 669              	.LBI122:
1021:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 670              		.loc 3 1021 31 is_stmt 1 view .LVU211
 671              	.LBB123:
1023:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
 672              		.loc 3 1023 3 view .LVU212
1024:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 673              		.loc 3 1024 3 view .LVU213
1028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 674              		.loc 3 1028 3 view .LVU214
1028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 675              		.loc 3 1028 3 is_stmt 0 view .LVU215
 676              	.LBE123:
 677              	.LBE122:
 678              	.LBB125:
 679              	.LBI125:
1957:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 680              		.loc 3 1957 31 is_stmt 1 view .LVU216
 681              	.LBB126:
1959:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 682              		.loc 3 1959 3 view .LVU217
1961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 683              		.loc 3 1961 3 view .LVU218
 684              	.LBE126:
 685              	.LBE125:
 686              	.LBB128:
 687              	.LBB124:
1028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 688              		.loc 3 1028 23 is_stmt 0 view .LVU219
 689 01a8 4FEA3023 		ror	r3, r0, #8
 690              	.LVL48:
1028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 691              		.loc 3 1028 23 view .LVU220
 692              	.LBE124:
 693              	.LBE128:
 694              	.LBB129:
 695              	.LBB127:
1961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 696              		.loc 3 1961 3 view .LVU221
 697              		.syntax unified
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 55


 698              	@ 1961 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 699 01ac 2FFA83F3 		sxtb16 r3, r3
 700              	@ 0 "" 2
 701              	.LVL49:
1962:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 702              		.loc 3 1962 3 is_stmt 1 view .LVU222
1962:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 703              		.loc 3 1962 3 is_stmt 0 view .LVU223
 704              		.thumb
 705              		.syntax unified
 706              	.LBE127:
 707              	.LBE129:
 110:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 708              		.loc 2 110 9 is_stmt 1 view .LVU224
 709              	.LBB130:
 710              	.LBI130:
1957:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 711              		.loc 3 1957 31 view .LVU225
 712              	.LBB131:
1959:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 713              		.loc 3 1959 3 view .LVU226
1961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 714              		.loc 3 1961 3 view .LVU227
 715              		.syntax unified
 716              	@ 1961 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 717 01b0 2FFA80F0 		sxtb16 r0, r0
 718              	@ 0 "" 2
 719              	.LVL50:
1962:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 720              		.loc 3 1962 3 view .LVU228
1962:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 721              		.loc 3 1962 3 is_stmt 0 view .LVU229
 722              		.thumb
 723              		.syntax unified
 724              	.LBE131:
 725              	.LBE130:
 113:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 726              		.loc 2 113 9 is_stmt 1 view .LVU230
 114:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #else
 727              		.loc 2 114 9 view .LVU231
 728              		.loc 2 120 9 view .LVU232
 729              		.loc 2 120 9 is_stmt 0 view .LVU233
 730              	.LBE132:
 731              	.LBE137:
 152:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 153:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             inV1 = *__SIMD32(pA)++;
 732              		.loc 1 153 13 is_stmt 1 view .LVU234
 154:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             sum = __SMLAD(inV1, inM11, sum);
 733              		.loc 1 154 13 view .LVU235
 734              	.LBB138:
 735              	.LBI138:
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 736              		.loc 3 1989 31 view .LVU236
 737              	.LBB139:
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 738              		.loc 3 1991 3 view .LVU237
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 56


 739              		.loc 3 1993 3 view .LVU238
 740              	.LBE139:
 741              	.LBE138:
 742              	.LBB142:
 743              	.LBB133:
 114:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #else
 744              		.loc 2 114 17 is_stmt 0 view .LVU239
 745 01b4 1FFA80FE 		uxth	lr, r0
 746              	.LBE133:
 747              	.LBE142:
 748              	.LBB143:
 749              	.LBB140:
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 750              		.loc 3 1993 3 view .LVU240
 751 01b8 54F8085C 		ldr	r5, [r4, #-8]
 752              	.LBE140:
 753              	.LBE143:
 754              	.LBB144:
 755              	.LBB134:
 114:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #else
 756              		.loc 2 114 17 view .LVU241
 757 01bc 4EEA034E 		orr	lr, lr, r3, lsl #16
 758              	.LBE134:
 759              	.LBE144:
 760              	.LBB145:
 761              	.LBB141:
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 762              		.loc 3 1993 3 view .LVU242
 763              		.syntax unified
 764              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 765 01c0 25FB0E22 		smlad r2, r5, lr, r2
 766              	@ 0 "" 2
 767              	.LVL51:
 768              		.loc 3 1994 3 is_stmt 1 view .LVU243
 769              		.loc 3 1994 3 is_stmt 0 view .LVU244
 770              		.thumb
 771              		.syntax unified
 772              	.LBE141:
 773              	.LBE145:
 155:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 156:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             inV2 = *__SIMD32(pA)++;
 774              		.loc 1 156 13 is_stmt 1 view .LVU245
 157:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             sum = __SMLAD(inV2, inM12, sum);
 775              		.loc 1 157 13 view .LVU246
 776              	.LBB146:
 777              	.LBI146:
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 778              		.loc 3 1989 31 view .LVU247
 779              	.LBB147:
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 780              		.loc 3 1991 3 view .LVU248
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 781              		.loc 3 1993 3 view .LVU249
 782              	.LBE147:
 783              	.LBE146:
 784              	.LBB150:
 785              	.LBB135:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 57


 113:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 786              		.loc 2 113 17 is_stmt 0 view .LVU250
 787 01c4 3B40     		ands	r3, r3, r7
 788              	.LVL52:
 113:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 789              		.loc 2 113 17 view .LVU251
 790              	.LBE135:
 791              	.LBE150:
 792              	.LBB151:
 793              	.LBB148:
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 794              		.loc 3 1993 3 view .LVU252
 795 01c6 54F8045C 		ldr	r5, [r4, #-4]
 796              	.LBE148:
 797              	.LBE151:
 798              	.LBB152:
 799              	.LBB136:
 113:.//Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 800              		.loc 2 113 17 view .LVU253
 801 01ca 43EA1043 		orr	r3, r3, r0, lsr #16
 802              	.LBE136:
 803              	.LBE152:
 804              	.LBB153:
 805              	.LBB149:
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 806              		.loc 3 1993 3 view .LVU254
 807              		.syntax unified
 808              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 809 01ce 25FB0322 		smlad r2, r5, r3, r2
 810              	@ 0 "" 2
 811              	.LVL53:
 812              		.loc 3 1994 3 is_stmt 1 view .LVU255
 813              		.loc 3 1994 3 is_stmt 0 view .LVU256
 814              		.thumb
 815              		.syntax unified
 816              	.LBE149:
 817              	.LBE153:
 158:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 159:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             colCnt--;
 818              		.loc 1 159 13 is_stmt 1 view .LVU257
 819              		.loc 1 159 13 is_stmt 0 view .LVU258
 820              	.LBE119:
 147:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         {
 821              		.loc 1 147 15 is_stmt 1 view .LVU259
 822 01d2 8E42     		cmp	r6, r1
 823 01d4 04F10804 		add	r4, r4, #8
 824              	.LVL54:
 147:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         {
 825              		.loc 1 147 15 is_stmt 0 view .LVU260
 826 01d8 E4D1     		bne	.L10
 827 01da 059B     		ldr	r3, [sp, #20]
 828 01dc 03EBCC03 		add	r3, r3, ip, lsl #3
 829 01e0 0593     		str	r3, [sp, #20]
 830              	.LVL55:
 831              	.L9:
 160:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         }
 161:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 58


 162:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         /* left-over of the vector */
 163:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         colCnt = dim_vec & 0x3;
 832              		.loc 1 163 9 is_stmt 1 view .LVU261
 164:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         while (colCnt)
 833              		.loc 1 164 9 view .LVU262
 834              		.loc 1 164 15 view .LVU263
 835 01e2 029B     		ldr	r3, [sp, #8]
 836 01e4 13F00303 		ands	r3, r3, #3
 837 01e8 0CD0     		beq	.L11
 838 01ea 013B     		subs	r3, r3, #1
 839 01ec 0599     		ldr	r1, [sp, #20]
 840 01ee 9BB2     		uxth	r3, r3
 841 01f0 0133     		adds	r3, r3, #1
 842 01f2 3344     		add	r3, r3, r6
 843              	.LVL56:
 844              	.L12:
 845              	.LBB154:
 165:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         {
 166:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             q15_t     inV = *pA++;
 846              		.loc 1 166 13 view .LVU264
 167:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             q7_t      inM = *pB++;
 847              		.loc 1 167 13 view .LVU265
 168:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             sum += inV * inM;
 848              		.loc 1 168 13 view .LVU266
 849              		.loc 1 168 17 is_stmt 0 view .LVU267
 850 01f4 16F9010B 		ldrsb	r0, [r6], #1
 851              	.LVL57:
 852              		.loc 1 168 17 view .LVU268
 853 01f8 31F8024B 		ldrh	r4, [r1], #2
 854              	.LVL58:
 855              		.loc 1 168 17 view .LVU269
 856              	.LBE154:
 164:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         {
 857              		.loc 1 164 15 view .LVU270
 858 01fc B342     		cmp	r3, r6
 859              	.LBB155:
 860              		.loc 1 168 17 view .LVU271
 861 01fe 14FB0022 		smlabb	r2, r4, r0, r2
 862              	.LVL59:
 169:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             colCnt--;
 863              		.loc 1 169 13 is_stmt 1 view .LVU272
 864              		.loc 1 169 13 is_stmt 0 view .LVU273
 865              	.LBE155:
 164:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         {
 866              		.loc 1 164 15 is_stmt 1 view .LVU274
 867 0202 F7D1     		bne	.L12
 868              	.LVL60:
 869              	.L11:
 170:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         }
 171:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 172:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         *pO++ = (q15_t) (__SSAT((sum >> out_shift), 16));
 870              		.loc 1 172 9 view .LVU275
 871              	.LBB156:
 872              		.loc 1 172 26 view .LVU276
 873              		.loc 1 172 26 view .LVU277
 874 0204 069B     		ldr	r3, [sp, #24]
 875 0206 42FA03F3 		asr	r3, r2, r3
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 59


 876              	.LVL61:
 877              		.loc 1 172 26 is_stmt 0 view .LVU278
 878              	.LBE156:
 879              		.loc 1 172 17 view .LVU279
 880 020a 1D9A     		ldr	r2, [sp, #116]
 881              	.LVL62:
 882              	.LBB157:
 883              		.loc 1 172 26 view .LVU280
 884              		.syntax unified
 885              	@ 172 ".//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c" 1
 886 020c 03F30F03 		ssat r3, #16, r3
 887              	@ 0 "" 2
 888              	.LVL63:
 889              		.loc 1 172 26 is_stmt 1 view .LVU281
 890              		.loc 1 172 26 is_stmt 0 view .LVU282
 891              		.thumb
 892              		.syntax unified
 893              	.LBE157:
 894              		.loc 1 172 17 view .LVU283
 895 0210 1380     		strh	r3, [r2]	@ movhi
 173:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 174:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         rowCnt--;
 896              		.loc 1 174 9 is_stmt 1 view .LVU284
 897              	.LVL64:
 898              		.loc 1 174 9 is_stmt 0 view .LVU285
 899              	.LBE118:
 140:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     {
 900              		.loc 1 140 11 is_stmt 1 view .LVU286
 901              	.L8:
 175:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     }
 176:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 177:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** #else
 178:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     int       i, j;
 179:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     /* Run the following code as reference implementation for Cortex-M0 and Cortex-M3 */
 180:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     for (i = 0; i < num_of_rows; i++)
 181:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     {
 182:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         int       ip_out = ((q31_t)(bias[i]) << bias_shift) + NN_ROUND(out_shift);
 183:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         for (j = 0; j < dim_vec; j++)
 184:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         {
 185:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****             ip_out += pV[j] * pM[i * dim_vec + j];
 186:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         }
 187:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         pOut[i] = (q15_t) __SSAT((ip_out >> out_shift), 16);
 188:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     }
 189:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 190:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** #endif                          /* ARM_MATH_DSP */
 191:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 192:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     /* Return to ARM_MATH_SUCCESS */
 193:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****     return (ARM_MATH_SUCCESS);
 902              		.loc 1 193 5 view .LVU287
 194:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** 
 195:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c **** }
 903              		.loc 1 195 1 is_stmt 0 view .LVU288
 904 0212 0020     		movs	r0, #0
 905 0214 11B0     		add	sp, sp, #68
 906              	.LCFI2:
 907              		.cfi_remember_state
 908              		.cfi_def_cfa_offset 36
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 60


 909              		@ sp needed
 910 0216 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 911              	.LVL65:
 912              	.L14:
 913              	.LCFI3:
 914              		.cfi_restore_state
 915              	.LBB158:
 119:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         {
 916              		.loc 1 119 15 view .LVU289
 917 021a 4146     		mov	r1, r8
 918 021c 85E7     		b	.L5
 919              	.LVL66:
 920              	.L13:
 100:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         {
 921              		.loc 1 100 15 view .LVU290
 922 021e 8846     		mov	r8, r1
  97:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         pB2 = pB + dim_vec;
 923              		.loc 1 97 12 view .LVU291
 924 0220 059C     		ldr	r4, [sp, #20]
 925 0222 6FE7     		b	.L3
 926              	.LVL67:
 927              	.L15:
  97:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         pB2 = pB + dim_vec;
 928              		.loc 1 97 12 view .LVU292
 929              	.LBE158:
 930              	.LBB159:
 147:.//Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_mat_q7_vec_q15.c ****         {
 931              		.loc 1 147 15 view .LVU293
 932 0224 0E46     		mov	r6, r1
 933 0226 DCE7     		b	.L9
 934              	.L33:
 935              		.align	2
 936              	.L32:
 937 0228 0000FFFF 		.word	-65536
 938              	.LBE159:
 939              		.cfi_endproc
 940              	.LFE149:
 942              		.text
 943              	.Letext0:
 944              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/
 945              		.file 5 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_std
 946              		.file 6 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock
 947              		.file 7 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_typ
 948              		.file 8 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/in
 949              		.file 9 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reen
 950              		.file 10 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 951              		.file 11 ".//Libraries/CMSIS/DSP/Include/arm_math.h"
 952              		.file 12 ".//Libraries/CMSIS/DSP/Include/arm_common_tables.h"
 953              		.file 13 ".//Libraries/CMSIS/NN/Include/arm_nn_tables.h"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s 			page 61


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_fully_connected_mat_q7_vec_q15.c
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s:17     .text.arm_fully_connected_mat_q7_vec_q15:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s:26     .text.arm_fully_connected_mat_q7_vec_q15:0000000000000000 arm_fully_connected_mat_q7_vec_q15
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccJ3DT0z.s:937    .text.arm_fully_connected_mat_q7_vec_q15:0000000000000228 $d

NO UNDEFINED SYMBOLS
