ARM GAS  /tmp/cc34M5Ic.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_convolve_HWC_q7_basic.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_convolve_HWC_q7_basic,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	arm_convolve_HWC_q7_basic
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_convolve_HWC_q7_basic:
  27              	.LVL0:
  28              	.LFB149:
  29              		.file 1 "./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c"
   1:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** /*
   2:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * Copyright (C) 2010-2018 Arm Limited or its affiliates. All rights reserved.
   3:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  *
   4:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * SPDX-License-Identifier: Apache-2.0
   5:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  *
   6:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
   7:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * not use this file except in compliance with the License.
   8:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * You may obtain a copy of the License at
   9:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  *
  10:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * www.apache.org/licenses/LICENSE-2.0
  11:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  *
  12:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * Unless required by applicable law or agreed to in writing, software
  13:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  14:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * See the License for the specific language governing permissions and
  16:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * limitations under the License.
  17:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  */
  18:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
  19:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** /* ----------------------------------------------------------------------
  20:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * Project:      CMSIS NN Library
  21:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * Title:        arm_convolve_HWC_q7_basic.c
  22:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * Description:	 Q7 version of convolution
  23:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  *
  24:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * $Date:        17. January 2018
  25:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * $Revision:    V.1.0.0
  26:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  *
  27:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * Target Processor:  Cortex-M cores
  28:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  *
  29:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * -------------------------------------------------------------------- */
ARM GAS  /tmp/cc34M5Ic.s 			page 2


  30:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** #include "arm_math.h"
  31:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** #include "arm_nnfunctions.h"
  32:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
  33:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** /**
  34:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  *  @ingroup groupNN
  35:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  */
  36:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
  37:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** /**
  38:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * @addtogroup NNConv
  39:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  * @{
  40:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****  */
  41:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
  42:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****   /**
  43:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @brief Basic Q7 convolution function
  44:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @param[in]       Im_in       pointer to input tensor
  45:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @param[in]       dim_im_in   input tensor dimention
  46:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @param[in]       ch_im_in    number of input tensor channels
  47:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @param[in]       wt          pointer to kernel weights
  48:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @param[in]       ch_im_out   number of filters, i.e., output tensor channels
  49:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @param[in]       dim_kernel  filter kernel size
  50:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @param[in]       padding     padding sizes
  51:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @param[in]       stride      convolution stride
  52:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @param[in]       bias        pointer to bias
  53:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @param[in]       bias_shift  amount of left-shift for bias
  54:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @param[in]       out_shift   amount of right-shift for output
  55:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @param[in,out]   Im_out      pointer to output tensor
  56:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @param[in]       dim_im_out  output tensor dimension
  57:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @param[in,out]   bufferA     pointer to buffer space for input 
  58:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @param[in,out]   bufferB     pointer to buffer space for output
  59:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @return     The function returns <code>ARM_MATH_SUCCESS</code> 
  60:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    *
  61:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * @details
  62:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    *
  63:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * <b>Buffer size:</b>
  64:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    *
  65:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * bufferA size: 2*ch_im_in*dim_kernel*dim_kernel
  66:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    *
  67:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * bufferB size: 0
  68:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    *
  69:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * This basic version is designed to work for any input tensor and weight
  70:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    * dimension. 
  71:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****    */
  72:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
  73:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** arm_status
  74:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** arm_convolve_HWC_q7_basic(const q7_t * Im_in,
  75:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                           const uint16_t dim_im_in,
  76:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                           const uint16_t ch_im_in,
  77:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                           const q7_t * wt,
  78:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                           const uint16_t ch_im_out,
  79:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                           const uint16_t dim_kernel,
  80:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                           const uint16_t padding,
  81:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                           const uint16_t stride,
  82:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                           const q7_t * bias,
  83:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                           const uint16_t bias_shift,
  84:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                           const uint16_t out_shift,
  85:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                           q7_t * Im_out, 
  86:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                           const uint16_t dim_im_out, 
ARM GAS  /tmp/cc34M5Ic.s 			page 3


  87:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                           q15_t * bufferA, 
  88:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                           q7_t * bufferB)
  89:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** {
  30              		.loc 1 89 1 view -0
  31              		.cfi_startproc
  32              		@ args = 44, pretend = 0, frame = 80
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 89 1 is_stmt 0 view .LVU1
  35 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 36
  38              		.cfi_offset 4, -36
  39              		.cfi_offset 5, -32
  40              		.cfi_offset 6, -28
  41              		.cfi_offset 7, -24
  42              		.cfi_offset 8, -20
  43              		.cfi_offset 9, -16
  44              		.cfi_offset 10, -12
  45              		.cfi_offset 11, -8
  46              		.cfi_offset 14, -4
  47 0004 2DED028B 		vpush.64	{d8}
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 44
  50              		.cfi_offset 80, -44
  51              		.cfi_offset 81, -40
  52 0008 99B0     		sub	sp, sp, #100
  53              	.LCFI2:
  54              		.cfi_def_cfa_offset 144
  55              		.loc 1 89 1 view .LVU2
  56 000a 8846     		mov	r8, r1
  57 000c BDF89C10 		ldrh	r1, [sp, #156]
  58              	.LVL1:
  59              		.loc 1 89 1 view .LVU3
  60 0010 1393     		str	r3, [sp, #76]
  61 0012 0A91     		str	r1, [sp, #40]
  90:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
  91:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** #if defined (ARM_MATH_DSP)
  92:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     /* Run the following code for Cortex-M4 and Cortex-M7 */
  93:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
  94:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     int16_t   i_out_y, i_out_x, i_ker_y, i_ker_x;
  62              		.loc 1 94 5 is_stmt 1 view .LVU4
  95:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
  96:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     /* 
  97:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****      *  Here we use bufferA as q15_t internally as computation are done with q15_t level
  98:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****      *  im2col are done to output in q15_t format from q7_t input
  99:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****      */
 100:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     q15_t    *pBuffer = bufferA;
  63              		.loc 1 100 5 view .LVU5
  64              	.LVL2:
 101:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     q7_t     *pOut = Im_out;
  65              		.loc 1 101 5 view .LVU6
 102:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 103:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     /* This part implements the im2col function */
 104:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     for (i_out_y = 0; i_out_y < dim_im_out; i_out_y++)
  66              		.loc 1 104 5 view .LVU7
  67              		.loc 1 104 23 view .LVU8
  89:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
ARM GAS  /tmp/cc34M5Ic.s 			page 4


  68              		.loc 1 89 1 is_stmt 0 view .LVU9
  69 0014 BDF89030 		ldrh	r3, [sp, #144]
  70              	.LVL3:
  89:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
  71              		.loc 1 89 1 view .LVU10
  72 0018 BDF8A410 		ldrh	r1, [sp, #164]
  73 001c BDF8B050 		ldrh	r5, [sp, #176]
  74 0020 0890     		str	r0, [sp, #32]
  75 0022 1493     		str	r3, [sp, #80]
  76 0024 BDF89800 		ldrh	r0, [sp, #152]
  77              	.LVL4:
  89:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
  78              		.loc 1 89 1 view .LVU11
  79 0028 BDF89430 		ldrh	r3, [sp, #148]
  80 002c 1591     		str	r1, [sp, #84]
  81 002e BDF8A810 		ldrh	r1, [sp, #168]
  82 0032 0D95     		str	r5, [sp, #52]
  83 0034 0792     		str	r2, [sp, #28]
  84 0036 0C93     		str	r3, [sp, #48]
  85 0038 1090     		str	r0, [sp, #64]
  86 003a 1191     		str	r1, [sp, #68]
  87              		.loc 1 104 5 view .LVU12
  88 003c 002D     		cmp	r5, #0
  89 003e 00F0ED80 		beq	.L25
  90 0042 1446     		mov	r4, r2
 105:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     {
 106:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         for (i_out_x = 0; i_out_x < dim_im_out; i_out_x++)
 107:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             for (i_ker_y = i_out_y * stride - padding; i_ker_y < i_out_y * stride - padding + dim_k
 109:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 110:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 for (i_ker_x = i_out_x * stride - padding; i_ker_x < i_out_x * stride - padding + d
 111:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
 112:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     if (i_ker_y < 0 || i_ker_y >= dim_im_in || i_ker_x < 0 || i_ker_x >= dim_im_in)
 113:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     {
 114:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                         /* Filling 0 for out-of-bound paddings */
 115:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                         /* arm_fill_q15(0, pBuffer, ch_im_in); */
 116:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                         memset(pBuffer, 0, sizeof(q15_t)*ch_im_in);
 117:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     } else
 118:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     {
 119:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                         /* Copying the pixel data to column */
 120:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                         arm_q7_to_q15_no_shift((q7_t *)
 121:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                                                Im_in + (i_ker_y * dim_im_in + i_ker_x) * ch_im_in, 
 122:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     }
 123:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     pBuffer += ch_im_in;
 124:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 }
 125:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             }
 126:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 127:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             /* Computation is filed for every 2 columns */
 128:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             if (pBuffer == bufferA + 2 * ch_im_in * dim_kernel * dim_kernel)
  91              		.loc 1 128 36 view .LVU13
  92 0044 03FB03F1 		mul	r1, r3, r3
 129:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 130:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 pOut =
 131:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     arm_nn_mat_mult_kernel_q7_q15(wt, bufferA,
  93              		.loc 1 131 21 view .LVU14
  94 0048 13FB03F2 		smulbb	r2, r3, r3
  95              	.LVL5:
ARM GAS  /tmp/cc34M5Ic.s 			page 5


  96              		.loc 1 131 21 view .LVU15
  97 004c 4042     		rsbs	r0, r0, #0
 104:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     {
  98              		.loc 1 104 18 view .LVU16
  99 004e 0023     		movs	r3, #0
 128:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 100              		.loc 1 128 36 view .LVU17
 101 0050 2D9E     		ldr	r6, [sp, #180]
 102              		.loc 1 131 21 view .LVU18
 103 0052 12FB04F2 		smulbb	r2, r2, r4
 128:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 104              		.loc 1 128 36 view .LVU19
 105 0056 04FB01F1 		mul	r1, r4, r1
 106 005a 85B2     		uxth	r5, r0
 107              		.loc 1 131 21 view .LVU20
 108 005c B246     		mov	r10, r6
 109 005e 92B2     		uxth	r2, r2
 104:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     {
 110              		.loc 1 104 31 view .LVU21
 111 0060 1846     		mov	r0, r3
 128:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 112              		.loc 1 128 36 view .LVU22
 113 0062 06EB8101 		add	r1, r6, r1, lsl #2
 114 0066 1795     		str	r5, [sp, #92]
 115              		.loc 1 131 21 view .LVU23
 116 0068 08EE102A 		vmov	s16, r2	@ int
 116:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     } else
 117              		.loc 1 116 25 view .LVU24
 118 006c 4FEA4409 		lsl	r9, r4, #1
 119 0070 1A46     		mov	r2, r3
 128:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 120              		.loc 1 128 36 view .LVU25
 121 0072 0E91     		str	r1, [sp, #56]
 122              		.loc 1 131 21 view .LVU26
 123 0074 1295     		str	r5, [sp, #72]
 124              	.LVL6:
 125              	.L3:
 106:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 126              		.loc 1 106 27 is_stmt 1 view .LVU27
 127 0076 92B2     		uxth	r2, r2
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 128              		.loc 1 108 83 is_stmt 0 view .LVU28
 129 0078 0A9B     		ldr	r3, [sp, #40]
 130 007a 0C99     		ldr	r1, [sp, #48]
 131 007c 1692     		str	r2, [sp, #88]
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 132              		.loc 1 108 93 view .LVU29
 133 007e 179A     		ldr	r2, [sp, #92]
 134              	.LVL7:
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 135              		.loc 1 108 83 view .LVU30
 136 0080 00FB0310 		mla	r0, r0, r3, r1
 106:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 137              		.loc 1 106 22 view .LVU31
 138 0084 0023     		movs	r3, #0
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 139              		.loc 1 108 93 view .LVU32
ARM GAS  /tmp/cc34M5Ic.s 			page 6


 140 0086 0992     		str	r2, [sp, #36]
 141 0088 109A     		ldr	r2, [sp, #64]
 106:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 142              		.loc 1 106 22 view .LVU33
 143 008a 0B93     		str	r3, [sp, #44]
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 144              		.loc 1 108 93 view .LVU34
 145 008c 821A     		subs	r2, r0, r2
 146 008e 0692     		str	r2, [sp, #24]
 106:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 147              		.loc 1 106 35 view .LVU35
 148 0090 1A46     		mov	r2, r3
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 149              		.loc 1 108 26 view .LVU36
 150 0092 BDF94830 		ldrsh	r3, [sp, #72]
 151 0096 0F93     		str	r3, [sp, #60]
 152              	.LVL8:
 153              	.L13:
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 154              		.loc 1 108 13 is_stmt 1 view .LVU37
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 155              		.loc 1 108 56 view .LVU38
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 156              		.loc 1 108 13 is_stmt 0 view .LVU39
 157 0098 0F9B     		ldr	r3, [sp, #60]
 158 009a 0698     		ldr	r0, [sp, #24]
 159 009c 8342     		cmp	r3, r0
 160 009e 2EDA     		bge	.L4
 110:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
 161              		.loc 1 110 87 view .LVU40
 162 00a0 0A99     		ldr	r1, [sp, #40]
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 163              		.loc 1 108 26 view .LVU41
 164 00a2 1D46     		mov	r5, r3
 110:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
 165              		.loc 1 110 87 view .LVU42
 166 00a4 0C98     		ldr	r0, [sp, #48]
 110:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
 167              		.loc 1 110 97 view .LVU43
 168 00a6 1F46     		mov	r7, r3
 169 00a8 109B     		ldr	r3, [sp, #64]
 110:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
 170              		.loc 1 110 87 view .LVU44
 171 00aa 02FB0102 		mla	r2, r2, r1, r0
 110:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
 172              		.loc 1 110 30 view .LVU45
 173 00ae BDF924B0 		ldrsh	fp, [sp, #36]
 110:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
 174              		.loc 1 110 97 view .LVU46
 175 00b2 D61A     		subs	r6, r2, r3
 176              	.LVL9:
 177              	.L11:
 110:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
 178              		.loc 1 110 17 is_stmt 1 view .LVU47
 110:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
 179              		.loc 1 110 60 view .LVU48
 110:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
ARM GAS  /tmp/cc34M5Ic.s 			page 7


 180              		.loc 1 110 17 is_stmt 0 view .LVU49
 181 00b4 B345     		cmp	fp, r6
 182 00b6 1CDA     		bge	.L5
 121:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     }
 183              		.loc 1 121 65 view .LVU50
 184 00b8 07FB08F3 		mul	r3, r7, r8
 110:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
 185              		.loc 1 110 30 view .LVU51
 186 00bc 5C46     		mov	r4, fp
 121:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     }
 187              		.loc 1 121 65 view .LVU52
 188 00be DC46     		mov	ip, fp
 189 00c0 0593     		str	r3, [sp, #20]
 190              	.LVL10:
 191              	.L10:
 112:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     {
 192              		.loc 1 112 21 is_stmt 1 view .LVU53
 116:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     } else
 193              		.loc 1 116 25 view .LVU54
 112:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     {
 194              		.loc 1 112 24 is_stmt 0 view .LVU55
 195 00c2 002D     		cmp	r5, #0
 116:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     } else
 196              		.loc 1 116 25 view .LVU56
 197 00c4 4A46     		mov	r2, r9
 198 00c6 4FF00001 		mov	r1, #0
 199 00ca 5046     		mov	r0, r10
 112:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     {
 200              		.loc 1 112 24 view .LVU57
 201 00cc 09DB     		blt	.L6
 202              	.LVL11:
 112:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     {
 203              		.loc 1 112 76 discriminator 1 view .LVU58
 204 00ce E045     		cmp	r8, ip
 205 00d0 CCBF     		ite	gt
 206 00d2 0023     		movgt	r3, #0
 207 00d4 0123     		movle	r3, #1
 208 00d6 53EAD473 		orrs	r3, r3, r4, lsr #31
 209 00da 02D1     		bne	.L6
 210 00dc B845     		cmp	r8, r7
 211 00de 00F3A380 		bgt	.L7
 212              	.L6:
 116:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     } else
 213              		.loc 1 116 25 view .LVU59
 214 00e2 FFF7FEFF 		bl	memset
 215              	.LVL12:
 216              	.L9:
 123:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 }
 217              		.loc 1 123 21 is_stmt 1 discriminator 2 view .LVU60
 218 00e6 0134     		adds	r4, r4, #1
 219              	.LVL13:
 123:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 }
 220              		.loc 1 123 29 is_stmt 0 discriminator 2 view .LVU61
 221 00e8 CA44     		add	r10, r10, r9
 222              	.LVL14:
 110:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
 223              		.loc 1 110 111 is_stmt 1 discriminator 2 view .LVU62
ARM GAS  /tmp/cc34M5Ic.s 			page 8


 224 00ea 24B2     		sxth	r4, r4
 225              	.LVL15:
 110:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
 226              		.loc 1 110 60 discriminator 2 view .LVU63
 110:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
 227              		.loc 1 110 17 is_stmt 0 discriminator 2 view .LVU64
 228 00ec B442     		cmp	r4, r6
 110:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
 229              		.loc 1 110 68 discriminator 2 view .LVU65
 230 00ee A446     		mov	ip, r4
 110:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
 231              		.loc 1 110 17 discriminator 2 view .LVU66
 232 00f0 E7DB     		blt	.L10
 233              	.LVL16:
 234              	.L5:
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 235              		.loc 1 108 107 is_stmt 1 discriminator 2 view .LVU67
 236 00f2 0135     		adds	r5, r5, #1
 237              	.LVL17:
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 238              		.loc 1 108 13 is_stmt 0 discriminator 2 view .LVU68
 239 00f4 069B     		ldr	r3, [sp, #24]
 240 00f6 2DB2     		sxth	r5, r5
 241              	.LVL18:
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 242              		.loc 1 108 56 is_stmt 1 discriminator 2 view .LVU69
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 243              		.loc 1 108 13 is_stmt 0 discriminator 2 view .LVU70
 244 00f8 9D42     		cmp	r5, r3
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 245              		.loc 1 108 64 discriminator 2 view .LVU71
 246 00fa 2F46     		mov	r7, r5
 108:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 247              		.loc 1 108 13 discriminator 2 view .LVU72
 248 00fc DADB     		blt	.L11
 249              	.LVL19:
 250              	.L4:
 128:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 251              		.loc 1 128 13 is_stmt 1 view .LVU73
 128:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 252              		.loc 1 128 16 is_stmt 0 view .LVU74
 253 00fe 0E9B     		ldr	r3, [sp, #56]
 254 0100 5345     		cmp	r3, r10
 255 0102 00F09D80 		beq	.L35
 256              	.L12:
 106:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 257              		.loc 1 106 49 is_stmt 1 discriminator 2 view .LVU75
 258 0106 0B99     		ldr	r1, [sp, #44]
 259 0108 DDE90930 		ldrd	r3, r0, [sp, #36]
 260 010c 0131     		adds	r1, r1, #1
 261 010e 0344     		add	r3, r3, r0
 262 0110 1A46     		mov	r2, r3
 263 0112 0BB2     		sxth	r3, r1
 106:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 264              		.loc 1 106 9 is_stmt 0 discriminator 2 view .LVU76
 265 0114 0D99     		ldr	r1, [sp, #52]
 266 0116 92B2     		uxth	r2, r2
ARM GAS  /tmp/cc34M5Ic.s 			page 9


 267 0118 0B93     		str	r3, [sp, #44]
 268              	.LVL20:
 106:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 269              		.loc 1 106 27 is_stmt 1 discriminator 2 view .LVU77
 106:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 270              		.loc 1 106 9 is_stmt 0 discriminator 2 view .LVU78
 271 011a 8B42     		cmp	r3, r1
 272 011c 0992     		str	r2, [sp, #36]
 106:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 273              		.loc 1 106 35 discriminator 2 view .LVU79
 274 011e 1A46     		mov	r2, r3
 106:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 275              		.loc 1 106 9 discriminator 2 view .LVU80
 276 0120 BADB     		blt	.L13
 104:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     {
 277              		.loc 1 104 45 is_stmt 1 discriminator 2 view .LVU81
 278 0122 129B     		ldr	r3, [sp, #72]
 279              	.LVL21:
 104:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     {
 280              		.loc 1 104 45 is_stmt 0 discriminator 2 view .LVU82
 281 0124 169A     		ldr	r2, [sp, #88]
 282              	.LVL22:
 104:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     {
 283              		.loc 1 104 45 discriminator 2 view .LVU83
 284 0126 0344     		add	r3, r3, r0
 285 0128 0132     		adds	r2, r2, #1
 286 012a 9BB2     		uxth	r3, r3
 287 012c 12B2     		sxth	r2, r2
 288              	.LVL23:
 104:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     {
 289              		.loc 1 104 23 is_stmt 1 discriminator 2 view .LVU84
 290 012e 1293     		str	r3, [sp, #72]
 104:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     {
 291              		.loc 1 104 5 is_stmt 0 discriminator 2 view .LVU85
 292 0130 0D9B     		ldr	r3, [sp, #52]
 104:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     {
 293              		.loc 1 104 31 discriminator 2 view .LVU86
 294 0132 1046     		mov	r0, r2
 104:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     {
 295              		.loc 1 104 5 discriminator 2 view .LVU87
 296 0134 9A42     		cmp	r2, r3
 297 0136 9EDB     		blt	.L3
 132:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                                                   ch_im_out,
 133:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                                                   ch_im_in *
 134:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                                                   dim_kernel * dim_kernel, bias_shift, out_shift, b
 135:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 136:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 /* counter reset */
 137:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 pBuffer = bufferA;
 138:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             }
 139:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         }
 140:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     }
 141:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 142:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     /* left-over because odd number of output pixels */
 143:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     if (pBuffer != bufferA)
 298              		.loc 1 143 5 is_stmt 1 view .LVU88
 299              		.loc 1 143 8 is_stmt 0 view .LVU89
 300 0138 2D9B     		ldr	r3, [sp, #180]
ARM GAS  /tmp/cc34M5Ic.s 			page 10


 301 013a 9A45     		cmp	r10, r3
 302 013c 6ED0     		beq	.L25
 303              	.LVL24:
 304              	.LBB25:
 144:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     {
 145:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         const q7_t *pA = wt;
 146:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         int       i;
 147:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 148:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         for (i = 0; i < ch_im_out; i++)
 305              		.loc 1 148 21 is_stmt 1 view .LVU90
 306              		.loc 1 148 9 is_stmt 0 view .LVU91
 307 013e 149A     		ldr	r2, [sp, #80]
 308              	.LVL25:
 309              		.loc 1 148 9 view .LVU92
 310 0140 002A     		cmp	r2, #0
 311 0142 6BD0     		beq	.L25
 312              	.LBB26:
 149:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 150:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             /* Load the accumulator with bias first */
 151:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             q31_t     sum = ((q31_t)bias[i] << bias_shift) + NN_ROUND(out_shift);
 152:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 153:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             /* Point to the beging of the im2col buffer */
 154:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             q15_t    *pB = bufferA;
 155:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 156:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             /* Each time it process 4 entries */
 157:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             uint16_t  colCnt = ch_im_in * dim_kernel * dim_kernel >> 2;
 313              		.loc 1 157 41 view .LVU93
 314 0144 0C99     		ldr	r1, [sp, #48]
 151:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 315              		.loc 1 151 62 view .LVU94
 316 0146 4FF0010A 		mov	r10, #1
 317              	.LVL26:
 318              		.loc 1 157 41 view .LVU95
 319 014a 079B     		ldr	r3, [sp, #28]
 158:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 159:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             while (colCnt)
 160:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 161:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 q31_t     inA1, inA2;
 162:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 q31_t     inB1, inB2;
 163:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 164:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 pA = (q7_t *) read_and_pad((void *)pA, &inA1, &inA2);
 165:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 166:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 inB1 = *__SIMD32(pB)++;
 167:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 sum = __SMLAD(inA1, inB1, sum);
 168:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 inB2 = *__SIMD32(pB)++;
 169:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 sum = __SMLAD(inA2, inB2, sum);
 170:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 171:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 colCnt--;
 172:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             }
 173:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             colCnt = ch_im_in * dim_kernel * dim_kernel & 0x3;
 320              		.loc 1 173 20 view .LVU96
 321 014c 18EE100A 		vmov	r0, s16	@ int
 322              	.LVL27:
 323              	.LBB27:
 324              	.LBB28:
 325              	.LBB29:
 326              		.file 2 "./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h"
ARM GAS  /tmp/cc34M5Ic.s 			page 11


   1:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /*
   2:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Copyright (C) 2010-2018 Arm Limited or its affiliates. All rights reserved.
   3:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
   4:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * SPDX-License-Identifier: Apache-2.0
   5:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
   6:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
   7:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * not use this file except in compliance with the License.
   8:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * You may obtain a copy of the License at
   9:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  10:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * www.apache.org/licenses/LICENSE-2.0
  11:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  12:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Unless required by applicable law or agreed to in writing, software
  13:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  14:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * See the License for the specific language governing permissions and
  16:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * limitations under the License.
  17:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  18:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  19:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /* ----------------------------------------------------------------------
  20:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Project:      CMSIS NN Library
  21:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Title:        arm_nnsupportfunctions.h
  22:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Description:  Public header file of support functions for CMSIS NN Library
  23:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  24:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * $Date:        13. July 2018
  25:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * $Revision:    V.1.0.0
  26:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  27:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Target Processor:  Cortex-M cores
  28:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * -------------------------------------------------------------------- */
  29:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  30:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #ifndef _ARM_NNSUPPORTFUNCTIONS_H_
  31:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #define _ARM_NNSUPPORTFUNCTIONS_H_
  32:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  33:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #include "arm_math.h"
  34:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #include "arm_common_tables.h"
  35:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  36:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #ifdef __cplusplus
  37:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** extern    "C"
  38:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
  39:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #endif
  40:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  41:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #define LEFT_SHIFT(_shift)  (_shift > 0 ? _shift : 0)
  42:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #define RIGHT_SHIFT(_shift) (_shift > 0 ? 0 : -_shift)
  43:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #define Q31_MIN (0x80000000L)
  44:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #define Q31_MAX (0x7FFFFFFFL)
  45:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  46:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
  47:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @brief Union for SIMD access of Q31/Q15/Q7 types
  48:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  49:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** union arm_nnword
  50:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
  51:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****     q31_t     word;
  52:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****                /**< Q31 type */
  53:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****     q15_t     half_words[2];
  54:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****                /**< Q15 type */
  55:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****     q7_t      bytes[4];
  56:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****                /**< Q7 type */
  57:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** };
ARM GAS  /tmp/cc34M5Ic.s 			page 12


  58:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  59:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
  60:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @brief Struct for specifying activation function types
  61:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  62:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  63:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** typedef enum
  64:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
  65:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****     ARM_SIGMOID = 0,
  66:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****                 /**< Sigmoid activation function */
  67:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****     ARM_TANH = 1,
  68:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****              /**< Tanh activation function */
  69:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** } arm_nn_activation_type;
  70:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  71:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
  72:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @defgroup nndata_convert Neural Network Data Conversion Functions
  73:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  74:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Perform data type conversion in-between neural network operations
  75:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  76:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  77:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  78:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
  79:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @brief Converts the elements of the Q7 vector to Q15 vector without left-shift
  80:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[in]       *pSrc points to the Q7 input vector
  81:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[out]      *pDst points to the Q15 output vector
  82:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[in]       blockSize length of the input vector
  83:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @return none.
  84:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  85:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  86:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  87:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** void      arm_q7_to_q15_no_shift(const q7_t * pSrc, q15_t * pDst, uint32_t blockSize);
  88:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  89:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
  90:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @brief  Converts the elements of the Q7 vector to reordered Q15 vector without left-shift
  91:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[in]       *pSrc points to the Q7 input vector
  92:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[out]      *pDst points to the Q15 output vector
  93:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[in]       blockSize length of the input vector
  94:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @return none.
  95:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  96:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  97:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  98:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** void      arm_q7_to_q15_reordered_no_shift(const q7_t * pSrc, q15_t * pDst, uint32_t blockSize);
  99:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 100:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #if defined (ARM_MATH_DSP)
 101:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 102:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
 103:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @brief read and expand one Q7 word into two Q15 words
 104:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
 105:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 106:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** __STATIC_FORCEINLINE void *read_and_pad(void *source, q31_t * out1, q31_t * out2)
 107:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
 108:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inA = *__SIMD32(source)++;
 109:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf1 = __SXTB16(__ROR(inA, 8));
 110:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf2 = __SXTB16(inA);
 111:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 112:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #ifndef ARM_MATH_BIG_ENDIAN
 113:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out2 = __PKHTB(inAbuf1, inAbuf2, 16);
 327              		.loc 2 113 17 view .LVU97
ARM GAS  /tmp/cc34M5Ic.s 			page 13


 328 0150 474F     		ldr	r7, .L36
 329              	.LBE29:
 330              	.LBE28:
 331              	.LBE27:
 157:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 332              		.loc 1 157 41 view .LVU98
 333 0152 01FB03F3 		mul	r3, r1, r3
 334              		.loc 1 173 20 view .LVU99
 335 0156 00F0030E 		and	lr, r0, #3
 336 015a 2898     		ldr	r0, [sp, #160]
 157:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 337              		.loc 1 157 54 view .LVU100
 338 015c 01FB03F3 		mul	r3, r1, r3
 151:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 339              		.loc 1 151 62 view .LVU101
 340 0160 1199     		ldr	r1, [sp, #68]
 341 0162 0EF1FF3B 		add	fp, lr, #-1
 342 0166 451E     		subs	r5, r0, #1
 157:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 343              		.loc 1 157 23 view .LVU102
 344 0168 C3F38F08 		ubfx	r8, r3, #2, #16
 151:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 345              		.loc 1 151 62 view .LVU103
 346 016c 0AFA01FA 		lsl	r10, r10, r1
 347 0170 2B99     		ldr	r1, [sp, #172]
 348 0172 1FFA8BFB 		uxth	fp, fp
 349 0176 08F1FF33 		add	r3, r8, #-1
 350 017a 4FEA5A0A 		lsr	r10, r10, #1
 351 017e 0A44     		add	r2, r2, r1
 352 0180 0BF1010B 		add	fp, fp, #1
 353 0184 9BB2     		uxth	r3, r3
 354 0186 139C     		ldr	r4, [sp, #76]
 355 0188 9146     		mov	r9, r2
 356 018a 0133     		adds	r3, r3, #1
 357 018c 9A00     		lsls	r2, r3, #2
 358 018e 0592     		str	r2, [sp, #20]
 359 0190 2D9A     		ldr	r2, [sp, #180]
 360 0192 02EBC303 		add	r3, r2, r3, lsl #3
 361 0196 0693     		str	r3, [sp, #24]
 362              	.LVL28:
 363              	.L20:
 151:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 364              		.loc 1 151 13 is_stmt 1 view .LVU104
 151:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 365              		.loc 1 151 30 is_stmt 0 view .LVU105
 366 0198 15F9013F 		ldrsb	r3, [r5, #1]!
 367              	.LVL29:
 151:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 368              		.loc 1 151 45 view .LVU106
 369 019c 159A     		ldr	r2, [sp, #84]
 370 019e 9340     		lsls	r3, r3, r2
 151:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 371              		.loc 1 151 60 view .LVU107
 372 01a0 5344     		add	r3, r3, r10
 373              	.LVL30:
 154:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 374              		.loc 1 154 13 is_stmt 1 view .LVU108
ARM GAS  /tmp/cc34M5Ic.s 			page 14


 157:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 375              		.loc 1 157 13 view .LVU109
 159:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 376              		.loc 1 159 13 view .LVU110
 159:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 377              		.loc 1 159 19 view .LVU111
 378 01a2 B8F1000F 		cmp	r8, #0
 379 01a6 60D0     		beq	.L21
 159:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 380              		.loc 1 159 19 is_stmt 0 view .LVU112
 381 01a8 2D9A     		ldr	r2, [sp, #180]
 382 01aa 0795     		str	r5, [sp, #28]
 383 01ac 02F10800 		add	r0, r2, #8
 384 01b0 059A     		ldr	r2, [sp, #20]
 385 01b2 A618     		adds	r6, r4, r2
 386              	.LVL31:
 387              	.L17:
 388              	.LBB62:
 161:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 q31_t     inB1, inB2;
 389              		.loc 1 161 17 is_stmt 1 view .LVU113
 162:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 390              		.loc 1 162 17 view .LVU114
 164:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 391              		.loc 1 164 17 view .LVU115
 392              	.LBB45:
 393              	.LBI28:
 106:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
 394              		.loc 2 106 28 view .LVU116
 395              	.LBB40:
 108:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf1 = __SXTB16(__ROR(inA, 8));
 396              		.loc 2 108 9 view .LVU117
 109:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf2 = __SXTB16(inA);
 397              		.loc 2 109 9 view .LVU118
 109:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf2 = __SXTB16(inA);
 398              		.loc 2 109 29 is_stmt 0 view .LVU119
 399 01b4 54F8041B 		ldr	r1, [r4], #4
 400              	.LVL32:
 401              	.LBB30:
 402              	.LBI30:
 403              		.file 3 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/cc34M5Ic.s 			page 15


  18:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
ARM GAS  /tmp/cc34M5Ic.s 			page 16


  75:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
ARM GAS  /tmp/cc34M5Ic.s 			page 17


 132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
ARM GAS  /tmp/cc34M5Ic.s 			page 18


 189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
ARM GAS  /tmp/cc34M5Ic.s 			page 19


 246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/cc34M5Ic.s 			page 20


 303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc34M5Ic.s 			page 21


 360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc34M5Ic.s 			page 22


 417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc34M5Ic.s 			page 23


 474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/cc34M5Ic.s 			page 24


 531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc34M5Ic.s 			page 25


 588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
ARM GAS  /tmp/cc34M5Ic.s 			page 26


 645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
ARM GAS  /tmp/cc34M5Ic.s 			page 27


 702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc34M5Ic.s 			page 28


 759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
ARM GAS  /tmp/cc34M5Ic.s 			page 29


 816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
ARM GAS  /tmp/cc34M5Ic.s 			page 30


 873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
ARM GAS  /tmp/cc34M5Ic.s 			page 31


 930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 948:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 949:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 950:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 951:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 955:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 960:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 966:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 967:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 969:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 972:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 973:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 974:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 976:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 977:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 980:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 981:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 985:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
ARM GAS  /tmp/cc34M5Ic.s 			page 32


 987:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 989:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 990:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 992:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 996:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1000:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1006:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
1007:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1008:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1010:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1011:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1012:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1013:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1015:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1020:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1021:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 404              		.loc 3 1021 31 is_stmt 1 view .LVU120
 405              	.LBB31:
1022:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1023:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
 406              		.loc 3 1023 3 view .LVU121
1024:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
 407              		.loc 3 1024 3 view .LVU122
1025:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1026:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
1027:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 408              		.loc 3 1028 3 view .LVU123
 409              		.loc 3 1028 3 is_stmt 0 view .LVU124
 410              	.LBE31:
 411              	.LBE30:
 412              	.LBB33:
 413              	.LBI33:
1029:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1030:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1032:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1033:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
ARM GAS  /tmp/cc34M5Ic.s 			page 33


1034:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1039:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1041:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1042:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1043:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1047:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1051:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1052:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1057:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1062:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
1063:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
1065:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1066:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1069:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1070:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1071:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1072:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1073:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1080:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
1086:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    */
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
1090:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
ARM GAS  /tmp/cc34M5Ic.s 			page 34


1091:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
1092:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1093:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1095:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1096:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1097:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
ARM GAS  /tmp/cc34M5Ic.s 			page 35


1148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
1156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  /tmp/cc34M5Ic.s 			page 36


1205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
1207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
1213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
1216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
1234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __extension__ \
1238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
1250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  __extension__ \
1254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc34M5Ic.s 			page 37


1262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
1266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
1269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc34M5Ic.s 			page 38


1319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
1328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc34M5Ic.s 			page 39


1376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
1383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
1385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
1387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
1388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > max)
1389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < min)
1393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return min;
1395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return val;
1398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
1408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (sat <= 31U)
1410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
1412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
1413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < 0)
1417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return 0U;
1419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (uint32_t)val;
1422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
ARM GAS  /tmp/cc34M5Ic.s 			page 40


1433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
1438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
1453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
1468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
ARM GAS  /tmp/cc34M5Ic.s 			page 41


1490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
ARM GAS  /tmp/cc34M5Ic.s 			page 42


1547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
1566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
1583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
1600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
ARM GAS  /tmp/cc34M5Ic.s 			page 43


1604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated SIMD instructions
1616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
1617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
1618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
1620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc34M5Ic.s 			page 44


1661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc34M5Ic.s 			page 45


1718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc34M5Ic.s 			page 46


1775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
ARM GAS  /tmp/cc34M5Ic.s 			page 47


1832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc34M5Ic.s 			page 48


1889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)
1920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTB16(uint32_t op1)
1942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
ARM GAS  /tmp/cc34M5Ic.s 			page 49


1946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1948:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1949:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1950:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1951:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1952:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1953:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1954:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1955:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1956:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTB16(uint32_t op1)
 414              		.loc 3 1957 31 is_stmt 1 view .LVU125
 415              	.LBB34:
1958:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 416              		.loc 3 1959 3 view .LVU126
1960:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
 417              		.loc 3 1961 3 view .LVU127
 418              	.LBE34:
 419              	.LBE33:
 420              	.LBB36:
 421              	.LBB32:
1028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 422              		.loc 3 1028 23 is_stmt 0 view .LVU128
 423 01b8 4FEA3122 		ror	r2, r1, #8
 424              	.LVL33:
1028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 425              		.loc 3 1028 23 view .LVU129
 426              	.LBE32:
 427              	.LBE36:
 428              	.LBB37:
 429              	.LBB35:
 430              		.loc 3 1961 3 view .LVU130
 431              		.syntax unified
 432              	@ 1961 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 433 01bc 2FFA82F2 		sxtb16 r2, r2
 434              	@ 0 "" 2
 435              	.LVL34:
1962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 436              		.loc 3 1962 3 is_stmt 1 view .LVU131
 437              		.loc 3 1962 3 is_stmt 0 view .LVU132
 438              		.thumb
 439              		.syntax unified
 440              	.LBE35:
 441              	.LBE37:
 110:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 442              		.loc 2 110 9 is_stmt 1 view .LVU133
 443              	.LBB38:
 444              	.LBI38:
1957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 445              		.loc 3 1957 31 view .LVU134
 446              	.LBB39:
1959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 447              		.loc 3 1959 3 view .LVU135
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/cc34M5Ic.s 			page 50


 448              		.loc 3 1961 3 view .LVU136
 449              		.syntax unified
 450              	@ 1961 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 451 01c0 2FFA81FC 		sxtb16 ip, r1
 452              	@ 0 "" 2
 453              	.LVL35:
 454              		.loc 3 1962 3 view .LVU137
 455              		.loc 3 1962 3 is_stmt 0 view .LVU138
 456              		.thumb
 457              		.syntax unified
 458              	.LBE39:
 459              	.LBE38:
 460              		.loc 2 113 9 is_stmt 1 view .LVU139
 114:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 461              		.loc 2 114 9 view .LVU140
 115:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #else
 116:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHTB(inAbuf1, inAbuf2, 16);
 117:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out2 = __PKHBT(inAbuf2, inAbuf1, 16);
 118:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #endif
 119:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 120:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         return source;
 462              		.loc 2 120 9 view .LVU141
 463              		.loc 2 120 9 is_stmt 0 view .LVU142
 464              	.LBE40:
 465              	.LBE45:
 166:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 sum = __SMLAD(inA1, inB1, sum);
 466              		.loc 1 166 17 is_stmt 1 view .LVU143
 167:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 inB2 = *__SIMD32(pB)++;
 467              		.loc 1 167 17 view .LVU144
 468              	.LBB46:
 469              	.LBI46:
1963:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1964:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1965:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1966:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1967:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1968:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1969:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1970:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1971:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1972:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1973:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1974:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1975:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1976:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1977:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1978:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1979:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1980:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1981:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1982:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1983:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1984:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1985:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1986:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1987:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1988:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc34M5Ic.s 			page 51


1989:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32_t op3)
 470              		.loc 3 1989 31 view .LVU145
 471              	.LBB47:
1990:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1991:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 472              		.loc 3 1991 3 view .LVU146
1992:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 473              		.loc 3 1993 3 view .LVU147
 474              	.LBE47:
 475              	.LBE46:
 476              	.LBB50:
 477              	.LBB41:
 114:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #else
 478              		.loc 2 114 17 is_stmt 0 view .LVU148
 479 01c4 1FFA8CF1 		uxth	r1, ip
 480              	.LBE41:
 481              	.LBE50:
 482              	.LBB51:
 483              	.LBB48:
 484              		.loc 3 1993 3 view .LVU149
 485 01c8 50F8085C 		ldr	r5, [r0, #-8]
 486              	.LBE48:
 487              	.LBE51:
 488              	.LBB52:
 489              	.LBB42:
 114:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #else
 490              		.loc 2 114 17 view .LVU150
 491 01cc 41EA0241 		orr	r1, r1, r2, lsl #16
 492              	.LBE42:
 493              	.LBE52:
 494              	.LBB53:
 495              	.LBB49:
 496              		.loc 3 1993 3 view .LVU151
 497              		.syntax unified
 498              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 499 01d0 21FB0531 		smlad r1, r1, r5, r3
 500              	@ 0 "" 2
 501              	.LVL36:
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 502              		.loc 3 1994 3 is_stmt 1 view .LVU152
 503              		.loc 3 1994 3 is_stmt 0 view .LVU153
 504              		.thumb
 505              		.syntax unified
 506              	.LBE49:
 507              	.LBE53:
 168:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 sum = __SMLAD(inA2, inB2, sum);
 508              		.loc 1 168 17 is_stmt 1 view .LVU154
 169:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 509              		.loc 1 169 17 view .LVU155
 510              	.LBB54:
 511              	.LBI54:
1989:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 512              		.loc 3 1989 31 view .LVU156
 513              	.LBB55:
1991:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 514              		.loc 3 1991 3 view .LVU157
ARM GAS  /tmp/cc34M5Ic.s 			page 52


1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 515              		.loc 3 1993 3 view .LVU158
 516              	.LBE55:
 517              	.LBE54:
 518              	.LBB58:
 519              	.LBB43:
 113:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 520              		.loc 2 113 17 is_stmt 0 view .LVU159
 521 01d4 3A40     		ands	r2, r2, r7
 522              	.LVL37:
 113:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 523              		.loc 2 113 17 view .LVU160
 524              	.LBE43:
 525              	.LBE58:
 526              	.LBB59:
 527              	.LBB56:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 528              		.loc 3 1993 3 view .LVU161
 529 01d6 50F8043C 		ldr	r3, [r0, #-4]
 530              	.LBE56:
 531              	.LBE59:
 532              	.LBB60:
 533              	.LBB44:
 113:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 534              		.loc 2 113 17 view .LVU162
 535 01da 42EA1C4C 		orr	ip, r2, ip, lsr #16
 536              	.LVL38:
 113:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 537              		.loc 2 113 17 view .LVU163
 538              	.LBE44:
 539              	.LBE60:
 540              	.LBB61:
 541              	.LBB57:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 542              		.loc 3 1993 3 view .LVU164
 543              		.syntax unified
 544              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 545 01de 2CFB0313 		smlad r3, ip, r3, r1
 546              	@ 0 "" 2
 547              	.LVL39:
 548              		.loc 3 1994 3 is_stmt 1 view .LVU165
 549              		.loc 3 1994 3 is_stmt 0 view .LVU166
 550              		.thumb
 551              		.syntax unified
 552              	.LBE57:
 553              	.LBE61:
 171:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             }
 554              		.loc 1 171 17 is_stmt 1 view .LVU167
 171:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             }
 555              		.loc 1 171 17 is_stmt 0 view .LVU168
 556              	.LBE62:
 159:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 557              		.loc 1 159 19 is_stmt 1 view .LVU169
 558 01e2 A642     		cmp	r6, r4
 559 01e4 00F10800 		add	r0, r0, #8
 560              	.LVL40:
 159:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
ARM GAS  /tmp/cc34M5Ic.s 			page 53


 561              		.loc 1 159 19 is_stmt 0 view .LVU170
 562 01e8 E4D1     		bne	.L17
 563              	.LBB63:
 168:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 sum = __SMLAD(inA2, inB2, sum);
 564              		.loc 1 168 37 view .LVU171
 565 01ea DDE90625 		ldrd	r2, r5, [sp, #24]
 566              	.LVL41:
 567              	.L16:
 168:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 sum = __SMLAD(inA2, inB2, sum);
 568              		.loc 1 168 37 view .LVU172
 569              	.LBE63:
 570              		.loc 1 173 13 is_stmt 1 view .LVU173
 174:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             while (colCnt)
 571              		.loc 1 174 13 view .LVU174
 572              		.loc 1 174 19 view .LVU175
 573 01ee BEF1000F 		cmp	lr, #0
 574 01f2 38D0     		beq	.L22
 575 01f4 06EB0B04 		add	r4, r6, fp
 576              	.LVL42:
 577              	.L19:
 578              	.LBB64:
 175:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 176:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 q7_t      inA1 = *pA++;
 579              		.loc 1 176 17 view .LVU176
 177:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 q15_t     inB1 = *pB++;
 580              		.loc 1 177 17 view .LVU177
 178:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 sum += inA1 * inB1;
 581              		.loc 1 178 17 view .LVU178
 582              		.loc 1 178 21 is_stmt 0 view .LVU179
 583 01f8 16F9011B 		ldrsb	r1, [r6], #1
 584              	.LVL43:
 585              		.loc 1 178 21 view .LVU180
 586 01fc 32F8020B 		ldrh	r0, [r2], #2
 587              	.LVL44:
 588              		.loc 1 178 21 view .LVU181
 589              	.LBE64:
 174:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 590              		.loc 1 174 19 view .LVU182
 591 0200 B442     		cmp	r4, r6
 592              	.LBB65:
 593              		.loc 1 178 21 view .LVU183
 594 0202 10FB0133 		smlabb	r3, r0, r1, r3
 595              	.LVL45:
 179:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 colCnt--;
 596              		.loc 1 179 17 is_stmt 1 view .LVU184
 597              		.loc 1 179 17 is_stmt 0 view .LVU185
 598              	.LBE65:
 174:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 599              		.loc 1 174 19 is_stmt 1 view .LVU186
 600 0206 F7D1     		bne	.L19
 601              	.LVL46:
 602              	.L18:
 180:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             }
 181:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             *pOut++ = (q7_t) __SSAT((sum >> out_shift), 8);
 603              		.loc 1 181 13 discriminator 2 view .LVU187
 604              	.LBB66:
 605              		.loc 1 181 30 discriminator 2 view .LVU188
ARM GAS  /tmp/cc34M5Ic.s 			page 54


 606              		.loc 1 181 30 discriminator 2 view .LVU189
 607 0208 119A     		ldr	r2, [sp, #68]
 608              	.LVL47:
 609              		.loc 1 181 30 is_stmt 0 discriminator 2 view .LVU190
 610 020a 1341     		asrs	r3, r3, r2
 611              	.LVL48:
 612              		.loc 1 181 30 discriminator 2 view .LVU191
 613              	.LBE66:
 614              		.loc 1 181 23 discriminator 2 view .LVU192
 615 020c 2B9A     		ldr	r2, [sp, #172]
 616              	.LBB67:
 617              		.loc 1 181 30 discriminator 2 view .LVU193
 618              		.syntax unified
 619              	@ 181 "./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c" 1
 620 020e 03F30703 		ssat r3, #8, r3
 621              	@ 0 "" 2
 622              	.LVL49:
 623              		.loc 1 181 30 is_stmt 1 discriminator 2 view .LVU194
 624              		.loc 1 181 30 is_stmt 0 discriminator 2 view .LVU195
 625              		.thumb
 626              		.syntax unified
 627              	.LBE67:
 628              		.loc 1 181 23 discriminator 2 view .LVU196
 629 0212 02F8013B 		strb	r3, [r2], #1
 630              	.LVL50:
 631              		.loc 1 181 23 discriminator 2 view .LVU197
 632              	.LBE26:
 148:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 633              		.loc 1 148 9 discriminator 2 view .LVU198
 634 0216 9145     		cmp	r9, r2
 635              	.LBB68:
 636              		.loc 1 181 23 discriminator 2 view .LVU199
 637 0218 2B92     		str	r2, [sp, #172]
 638              		.loc 1 181 23 discriminator 2 view .LVU200
 639              	.LBE68:
 148:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 640              		.loc 1 148 36 is_stmt 1 discriminator 2 view .LVU201
 641              	.LVL51:
 148:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 642              		.loc 1 148 21 discriminator 2 view .LVU202
 148:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 643              		.loc 1 148 9 is_stmt 0 discriminator 2 view .LVU203
 644 021a BDD1     		bne	.L20
 645              	.LVL52:
 646              	.L25:
 148:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 647              		.loc 1 148 9 discriminator 2 view .LVU204
 648              	.LBE25:
 182:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         }
 183:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     }
 184:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** #else
 185:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     /* Run the following code as reference implementation for Cortex-M0 and Cortex-M3 */
 186:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 187:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     uint16_t  i, j, k, l, m, n;
 188:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     int       conv_out;
 189:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     signed char in_row, in_col;
 190:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
ARM GAS  /tmp/cc34M5Ic.s 			page 55


 191:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     for (i = 0; i < ch_im_out; i++)
 192:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     {
 193:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         for (j = 0; j < dim_im_out; j++)
 194:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         {
 195:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             for (k = 0; k < dim_im_out; k++)
 196:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 197:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 conv_out = ((q31_t)bias[i] << bias_shift) + NN_ROUND(out_shift);
 198:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 for (m = 0; m < dim_kernel; m++)
 199:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 {
 200:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     for (n = 0; n < dim_kernel; n++)
 201:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     {
 202:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                         // if-for implementation
 203:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                         in_row = stride * j + m - padding;
 204:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                         in_col = stride * k + n - padding;
 205:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                         if (in_row >= 0 && in_col >= 0 && in_row < dim_im_in && in_col < dim_im_in)
 206:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                         {
 207:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                             for (l = 0; l < ch_im_in; l++)
 208:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                             {
 209:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                                 conv_out +=
 210:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                                     Im_in[(in_row * dim_im_in + in_col) * ch_im_in +
 211:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                                           l] * wt[i * ch_im_in * dim_kernel * dim_kernel + (m * dim
 212:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                                                                                             n) * ch
 213:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                             }
 214:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                         }
 215:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     }
 216:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 }
 217:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                 Im_out[i + (j * dim_im_out + k) * ch_im_out] = (q7_t) __SSAT((conv_out >> out_shift
 218:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             }
 219:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****         }
 220:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     }
 221:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 222:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** #endif                          /* ARM_MATH_DSP */
 223:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** 
 224:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     /* Return to application */
 225:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****     return ARM_MATH_SUCCESS;
 226:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c **** }
 649              		.loc 1 226 1 view .LVU205
 650 021c 0020     		movs	r0, #0
 651 021e 19B0     		add	sp, sp, #100
 652              	.LCFI3:
 653              		.cfi_remember_state
 654              		.cfi_def_cfa_offset 44
 655              		@ sp needed
 656 0220 BDEC028B 		vldm	sp!, {d8}
 657              	.LCFI4:
 658              		.cfi_restore 80
 659              		.cfi_restore 81
 660              		.cfi_def_cfa_offset 36
 661 0224 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 662              	.LVL53:
 663              	.L7:
 664              	.LCFI5:
 665              		.cfi_restore_state
 120:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                                                Im_in + (i_ker_y * dim_im_in + i_ker_x) * ch_im_in, 
 666              		.loc 1 120 25 is_stmt 1 view .LVU206
 121:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     }
 667              		.loc 1 121 77 is_stmt 0 view .LVU207
ARM GAS  /tmp/cc34M5Ic.s 			page 56


 668 0228 059B     		ldr	r3, [sp, #20]
 120:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                                                Im_in + (i_ker_y * dim_im_in + i_ker_x) * ch_im_in, 
 669              		.loc 1 120 25 view .LVU208
 670 022a 5146     		mov	r1, r10
 121:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     }
 671              		.loc 1 121 77 view .LVU209
 672 022c 03EB0C00 		add	r0, r3, ip
 673              	.LVL54:
 120:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                                                Im_in + (i_ker_y * dim_im_in + i_ker_x) * ch_im_in, 
 674              		.loc 1 120 25 view .LVU210
 675 0230 079B     		ldr	r3, [sp, #28]
 676 0232 1A46     		mov	r2, r3
 677 0234 089B     		ldr	r3, [sp, #32]
 678 0236 02FB0030 		mla	r0, r2, r0, r3
 679 023a FFF7FEFF 		bl	arm_q7_to_q15_no_shift
 680              	.LVL55:
 681 023e 52E7     		b	.L9
 682              	.LVL56:
 683              	.L35:
 130:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                     arm_nn_mat_mult_kernel_q7_q15(wt, bufferA,
 684              		.loc 1 130 17 is_stmt 1 view .LVU211
 131:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                                                   ch_im_out,
 685              		.loc 1 131 21 is_stmt 0 view .LVU212
 686 0240 2B9B     		ldr	r3, [sp, #172]
 687 0242 289A     		ldr	r2, [sp, #160]
 688 0244 1199     		ldr	r1, [sp, #68]
 689 0246 1598     		ldr	r0, [sp, #84]
 690 0248 0393     		str	r3, [sp, #12]
 691 024a 18EE103A 		vmov	r3, s16	@ int
 692 024e 0292     		str	r2, [sp, #8]
 693 0250 0191     		str	r1, [sp, #4]
 694 0252 0090     		str	r0, [sp]
 695 0254 149A     		ldr	r2, [sp, #80]
 696 0256 2D99     		ldr	r1, [sp, #180]
 697 0258 1398     		ldr	r0, [sp, #76]
 698 025a FFF7FEFF 		bl	arm_nn_mat_mult_kernel_q7_q15
 699              	.LVL57:
 700 025e DDF8B4A0 		ldr	r10, [sp, #180]
 701              	.LVL58:
 131:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****                                                   ch_im_out,
 702              		.loc 1 131 21 view .LVU213
 703 0262 2B90     		str	r0, [sp, #172]
 704              	.LVL59:
 137:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             }
 705              		.loc 1 137 17 is_stmt 1 view .LVU214
 137:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             }
 706              		.loc 1 137 17 is_stmt 0 view .LVU215
 707 0264 4FE7     		b	.L12
 708              	.LVL60:
 709              	.L22:
 710              	.LBB70:
 711              	.LBB69:
 174:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 712              		.loc 1 174 19 view .LVU216
 713 0266 3446     		mov	r4, r6
 714 0268 CEE7     		b	.L18
 715              	.LVL61:
ARM GAS  /tmp/cc34M5Ic.s 			page 57


 716              	.L21:
 159:./Libraries/CMSIS/NN/Source/ConvolutionFunctions/arm_convolve_HWC_q7_basic.c ****             {
 717              		.loc 1 159 19 view .LVU217
 718 026a 2646     		mov	r6, r4
 719 026c 2D9A     		ldr	r2, [sp, #180]
 720 026e BEE7     		b	.L16
 721              	.L37:
 722              		.align	2
 723              	.L36:
 724 0270 0000FFFF 		.word	-65536
 725              	.LBE69:
 726              	.LBE70:
 727              		.cfi_endproc
 728              	.LFE149:
 730              		.text
 731              	.Letext0:
 732              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 733              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 734              		.file 6 "/usr/include/newlib/sys/_types.h"
 735              		.file 7 "/usr/include/newlib/sys/reent.h"
 736              		.file 8 "/usr/include/newlib/sys/lock.h"
 737              		.file 9 "/usr/include/newlib/math.h"
 738              		.file 10 "./Libraries/CMSIS/DSP/Include/arm_math.h"
 739              		.file 11 "./Libraries/CMSIS/DSP/Include/arm_common_tables.h"
 740              		.file 12 "./Libraries/CMSIS/NN/Include/arm_nn_tables.h"
 741              		.file 13 "./Libraries/CMSIS/NN/Include/arm_nnfunctions.h"
 742              		.file 14 "<built-in>"
ARM GAS  /tmp/cc34M5Ic.s 			page 58


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_convolve_HWC_q7_basic.c
     /tmp/cc34M5Ic.s:17     .text.arm_convolve_HWC_q7_basic:0000000000000000 $t
     /tmp/cc34M5Ic.s:26     .text.arm_convolve_HWC_q7_basic:0000000000000000 arm_convolve_HWC_q7_basic
     /tmp/cc34M5Ic.s:724    .text.arm_convolve_HWC_q7_basic:0000000000000270 $d

UNDEFINED SYMBOLS
memset
arm_q7_to_q15_no_shift
arm_nn_mat_mult_kernel_q7_q15
