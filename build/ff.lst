ARM GAS  /tmp/ccaQXGqa.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"ff.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.chk_lock,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	chk_lock:
  26              	.LVL0:
  27              	.LFB345:
  28              		.file 1 "./Libraries/FatFs/Src/ff.c"
   1:./Libraries/FatFs/Src/ff.c **** /*----------------------------------------------------------------------------/
   2:./Libraries/FatFs/Src/ff.c **** /  FatFs - Generic FAT file system module  R0.12c                             /
   3:./Libraries/FatFs/Src/ff.c **** /-----------------------------------------------------------------------------/
   4:./Libraries/FatFs/Src/ff.c **** /
   5:./Libraries/FatFs/Src/ff.c **** / Copyright (C) 2017, ChaN, all right reserved.
   6:./Libraries/FatFs/Src/ff.c **** /
   7:./Libraries/FatFs/Src/ff.c **** / FatFs module is an open source software. Redistribution and use of FatFs in
   8:./Libraries/FatFs/Src/ff.c **** / source and binary forms, with or without modification, are permitted provided
   9:./Libraries/FatFs/Src/ff.c **** / that the following condition is met:
  10:./Libraries/FatFs/Src/ff.c **** /
  11:./Libraries/FatFs/Src/ff.c **** / 1. Redistributions of source code must retain the above copyright notice,
  12:./Libraries/FatFs/Src/ff.c **** /    this condition and the following disclaimer.
  13:./Libraries/FatFs/Src/ff.c **** /
  14:./Libraries/FatFs/Src/ff.c **** / This software is provided by the copyright holder and contributors "AS IS"
  15:./Libraries/FatFs/Src/ff.c **** / and any warranties related to this software are DISCLAIMED.
  16:./Libraries/FatFs/Src/ff.c **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  17:./Libraries/FatFs/Src/ff.c **** / by use of this software.
  18:./Libraries/FatFs/Src/ff.c **** /----------------------------------------------------------------------------*/
  19:./Libraries/FatFs/Src/ff.c **** 
  20:./Libraries/FatFs/Src/ff.c **** 
  21:./Libraries/FatFs/Src/ff.c **** #include "ff.h"			/* Declarations of FatFs API */
  22:./Libraries/FatFs/Src/ff.c **** #include "diskio.h"		/* Declarations of device I/O functions */
  23:./Libraries/FatFs/Src/ff.c **** 
  24:./Libraries/FatFs/Src/ff.c **** 
  25:./Libraries/FatFs/Src/ff.c **** /*--------------------------------------------------------------------------
  26:./Libraries/FatFs/Src/ff.c **** 
  27:./Libraries/FatFs/Src/ff.c ****    Module Private Definitions
  28:./Libraries/FatFs/Src/ff.c **** 
  29:./Libraries/FatFs/Src/ff.c **** ---------------------------------------------------------------------------*/
  30:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 2


  31:./Libraries/FatFs/Src/ff.c **** #if _FATFS != 68300	/* Revision ID */
  32:./Libraries/FatFs/Src/ff.c **** #error Wrong include file (ff.h).
  33:./Libraries/FatFs/Src/ff.c **** #endif
  34:./Libraries/FatFs/Src/ff.c **** 
  35:./Libraries/FatFs/Src/ff.c **** 
  36:./Libraries/FatFs/Src/ff.c **** /* DBCS code ranges and SBCS upper conversion tables */
  37:./Libraries/FatFs/Src/ff.c **** 
  38:./Libraries/FatFs/Src/ff.c **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
  39:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
  40:./Libraries/FatFs/Src/ff.c **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
  41:./Libraries/FatFs/Src/ff.c **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
  42:./Libraries/FatFs/Src/ff.c **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
  43:./Libraries/FatFs/Src/ff.c **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
  44:./Libraries/FatFs/Src/ff.c **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
  45:./Libraries/FatFs/Src/ff.c **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
  46:./Libraries/FatFs/Src/ff.c **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
  47:./Libraries/FatFs/Src/ff.c **** 
  48:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
  49:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0x81
  50:./Libraries/FatFs/Src/ff.c **** #define _DF1E	0xFE
  51:./Libraries/FatFs/Src/ff.c **** #define _DS1S	0x40
  52:./Libraries/FatFs/Src/ff.c **** #define _DS1E	0x7E
  53:./Libraries/FatFs/Src/ff.c **** #define _DS2S	0x80
  54:./Libraries/FatFs/Src/ff.c **** #define _DS2E	0xFE
  55:./Libraries/FatFs/Src/ff.c **** 
  56:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 949	/* Korean */
  57:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0x81
  58:./Libraries/FatFs/Src/ff.c **** #define _DF1E	0xFE
  59:./Libraries/FatFs/Src/ff.c **** #define _DS1S	0x41
  60:./Libraries/FatFs/Src/ff.c **** #define _DS1E	0x5A
  61:./Libraries/FatFs/Src/ff.c **** #define _DS2S	0x61
  62:./Libraries/FatFs/Src/ff.c **** #define _DS2E	0x7A
  63:./Libraries/FatFs/Src/ff.c **** #define _DS3S	0x81
  64:./Libraries/FatFs/Src/ff.c **** #define _DS3E	0xFE
  65:./Libraries/FatFs/Src/ff.c **** 
  66:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
  67:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0x81
  68:./Libraries/FatFs/Src/ff.c **** #define _DF1E	0xFE
  69:./Libraries/FatFs/Src/ff.c **** #define _DS1S	0x40
  70:./Libraries/FatFs/Src/ff.c **** #define _DS1E	0x7E
  71:./Libraries/FatFs/Src/ff.c **** #define _DS2S	0xA1
  72:./Libraries/FatFs/Src/ff.c **** #define _DS2E	0xFE
  73:./Libraries/FatFs/Src/ff.c **** 
  74:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 437	/* U.S. */
  75:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
  76:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
  77:./Libraries/FatFs/Src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  78:./Libraries/FatFs/Src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
  79:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  80:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  81:./Libraries/FatFs/Src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  82:./Libraries/FatFs/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  83:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  84:./Libraries/FatFs/Src/ff.c **** 
  85:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 720	/* Arabic */
  86:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
  87:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
ARM GAS  /tmp/ccaQXGqa.s 			page 3


  88:./Libraries/FatFs/Src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  89:./Libraries/FatFs/Src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
  90:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  91:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  92:./Libraries/FatFs/Src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  93:./Libraries/FatFs/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  94:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  95:./Libraries/FatFs/Src/ff.c **** 
  96:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 737	/* Greek */
  97:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
  98:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  99:./Libraries/FatFs/Src/ff.c **** 				0x90,0x92,0x92,0x93,0x94,0x95,0x96,0x97,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87, \
 100:./Libraries/FatFs/Src/ff.c **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96, \
 101:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 102:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 103:./Libraries/FatFs/Src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 104:./Libraries/FatFs/Src/ff.c **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xEF,0xF5,0xF0,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 105:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 106:./Libraries/FatFs/Src/ff.c **** 
 107:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 771	/* KBL */
 108:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
 109:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 110:./Libraries/FatFs/Src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 111:./Libraries/FatFs/Src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 112:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 113:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 114:./Libraries/FatFs/Src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDC,0xDE,0xDE, \
 115:./Libraries/FatFs/Src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 116:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFE,0xFF}
 117:./Libraries/FatFs/Src/ff.c **** 
 118:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 775	/* Baltic */
 119:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
 120:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F, \
 121:./Libraries/FatFs/Src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0x95,0x96,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 122:./Libraries/FatFs/Src/ff.c **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 123:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 124:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 125:./Libraries/FatFs/Src/ff.c **** 				0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xA5,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 126:./Libraries/FatFs/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF, \
 127:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 128:./Libraries/FatFs/Src/ff.c **** 
 129:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 850	/* Latin 1 */
 130:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
 131:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x41,0x43,0x45,0x45,0x45,0x49,0x49,0x49,0x41,0x41, \
 132:./Libraries/FatFs/Src/ff.c **** 				0x45,0x92,0x92,0x4F,0x4F,0x4F,0x55,0x55,0x59,0x4F,0x55,0x4F,0x9C,0x4F,0x9E,0x9F, \
 133:./Libraries/FatFs/Src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 134:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0x41,0x41,0x41,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 135:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0x41,0x41,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 136:./Libraries/FatFs/Src/ff.c **** 				0xD1,0xD1,0x45,0x45,0x45,0x49,0x49,0x49,0x49,0xD9,0xDA,0xDB,0xDC,0xDD,0x49,0xDF, \
 137:./Libraries/FatFs/Src/ff.c **** 				0x4F,0xE1,0x4F,0x4F,0x4F,0x4F,0xE6,0xE8,0xE8,0x55,0x55,0x55,0x59,0x59,0xEE,0xEF, \
 138:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 139:./Libraries/FatFs/Src/ff.c **** 
 140:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 852	/* Latin 2 */
 141:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
 142:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F, \
 143:./Libraries/FatFs/Src/ff.c **** 				0x90,0x91,0x91,0xE2,0x99,0x95,0x95,0x97,0x97,0x99,0x9A,0x9B,0x9B,0x9D,0x9E,0xAC, \
 144:./Libraries/FatFs/Src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF, \
ARM GAS  /tmp/ccaQXGqa.s 			page 4


 145:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBD,0xBF, \
 146:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 147:./Libraries/FatFs/Src/ff.c **** 				0xD1,0xD1,0xD2,0xD3,0xD2,0xD5,0xD6,0xD7,0xB7,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 148:./Libraries/FatFs/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF, \
 149:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xEB,0xFC,0xFC,0xFE,0xFF}
 150:./Libraries/FatFs/Src/ff.c **** 
 151:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 855	/* Cyrillic */
 152:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
 153:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F, \
 154:./Libraries/FatFs/Src/ff.c **** 				0x91,0x91,0x93,0x93,0x95,0x95,0x97,0x97,0x99,0x99,0x9B,0x9B,0x9D,0x9D,0x9F,0x9F, \
 155:./Libraries/FatFs/Src/ff.c **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF, \
 156:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB6,0xB6,0xB8,0xB8,0xB9,0xBA,0xBB,0xBC,0xBE,0xBE,0xBF, \
 157:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 158:./Libraries/FatFs/Src/ff.c **** 				0xD1,0xD1,0xD3,0xD3,0xD5,0xD5,0xD7,0xD7,0xDD,0xD9,0xDA,0xDB,0xDC,0xDD,0xE0,0xDF, \
 159:./Libraries/FatFs/Src/ff.c **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF, \
 160:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFD,0xFE,0xFF}
 161:./Libraries/FatFs/Src/ff.c **** 
 162:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 857	/* Turkish */
 163:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
 164:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x49,0x8E,0x8F, \
 165:./Libraries/FatFs/Src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x98,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9E, \
 166:./Libraries/FatFs/Src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 167:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 168:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 169:./Libraries/FatFs/Src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0x49,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 170:./Libraries/FatFs/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0xED,0xEE,0xEF, \
 171:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 172:./Libraries/FatFs/Src/ff.c **** 
 173:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 860	/* Portuguese */
 174:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
 175:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x8F,0x8E,0x91,0x86,0x80,0x89,0x89,0x92,0x8B,0x8C,0x98,0x8E,0x8F, \
 176:./Libraries/FatFs/Src/ff.c **** 				0x90,0x91,0x92,0x8C,0x99,0xA9,0x96,0x9D,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 177:./Libraries/FatFs/Src/ff.c **** 				0x86,0x8B,0x9F,0x96,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 178:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 179:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 180:./Libraries/FatFs/Src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 181:./Libraries/FatFs/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 182:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 183:./Libraries/FatFs/Src/ff.c **** 
 184:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 861	/* Icelandic */
 185:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
 186:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x8B,0x8B,0x8D,0x8E,0x8F, \
 187:./Libraries/FatFs/Src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x8D,0x55,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 188:./Libraries/FatFs/Src/ff.c **** 				0xA4,0xA5,0xA6,0xA7,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 189:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 190:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 191:./Libraries/FatFs/Src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 192:./Libraries/FatFs/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 193:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 194:./Libraries/FatFs/Src/ff.c **** 
 195:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 862	/* Hebrew */
 196:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
 197:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 198:./Libraries/FatFs/Src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 199:./Libraries/FatFs/Src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 200:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 201:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
ARM GAS  /tmp/ccaQXGqa.s 			page 5


 202:./Libraries/FatFs/Src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 203:./Libraries/FatFs/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 204:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 205:./Libraries/FatFs/Src/ff.c **** 
 206:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 863	/* Canadian-French */
 207:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
 208:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x41,0x8F, \
 209:./Libraries/FatFs/Src/ff.c **** 				0x45,0x45,0x45,0x4F,0x45,0x49,0x55,0x55,0x98,0x4F,0x55,0x9B,0x9C,0x55,0x55,0x9F, \
 210:./Libraries/FatFs/Src/ff.c **** 				0xA0,0xA1,0x4F,0x55,0xA4,0xA5,0xA6,0xA7,0x49,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 211:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 212:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 213:./Libraries/FatFs/Src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 214:./Libraries/FatFs/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 215:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 216:./Libraries/FatFs/Src/ff.c **** 
 217:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 864	/* Arabic */
 218:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
 219:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 220:./Libraries/FatFs/Src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 221:./Libraries/FatFs/Src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 222:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 223:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 224:./Libraries/FatFs/Src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 225:./Libraries/FatFs/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 226:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 227:./Libraries/FatFs/Src/ff.c **** 
 228:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 865	/* Nordic */
 229:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
 230:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 231:./Libraries/FatFs/Src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 232:./Libraries/FatFs/Src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 233:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 234:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 235:./Libraries/FatFs/Src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 236:./Libraries/FatFs/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 237:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 238:./Libraries/FatFs/Src/ff.c **** 
 239:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 866	/* Russian */
 240:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
 241:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 242:./Libraries/FatFs/Src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 243:./Libraries/FatFs/Src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 244:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 245:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 246:./Libraries/FatFs/Src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 247:./Libraries/FatFs/Src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 248:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 249:./Libraries/FatFs/Src/ff.c **** 
 250:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 869	/* Greek 2 */
 251:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
 252:./Libraries/FatFs/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 253:./Libraries/FatFs/Src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x86,0x9C,0x8D,0x8F,0x90, \
 254:./Libraries/FatFs/Src/ff.c **** 				0x91,0x90,0x92,0x95,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 255:./Libraries/FatFs/Src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 256:./Libraries/FatFs/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 257:./Libraries/FatFs/Src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xA4,0xA5,0xA6,0xD9,0xDA,0xDB,0xDC,0xA7,0xA8,0xDF, \
 258:./Libraries/FatFs/Src/ff.c **** 				0xA9,0xAA,0xAC,0xAD,0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xCF,0xCF,0xD0,0xEF, \
ARM GAS  /tmp/ccaQXGqa.s 			page 6


 259:./Libraries/FatFs/Src/ff.c **** 				0xF0,0xF1,0xD1,0xD2,0xD3,0xF5,0xD4,0xF7,0xF8,0xF9,0xD5,0x96,0x95,0x98,0xFE,0xFF}
 260:./Libraries/FatFs/Src/ff.c **** 
 261:./Libraries/FatFs/Src/ff.c **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 262:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0
 263:./Libraries/FatFs/Src/ff.c **** #error Cannot enable LFN without valid code page.
 264:./Libraries/FatFs/Src/ff.c **** #endif
 265:./Libraries/FatFs/Src/ff.c **** #define _DF1S	0
 266:./Libraries/FatFs/Src/ff.c **** 
 267:./Libraries/FatFs/Src/ff.c **** #else
 268:./Libraries/FatFs/Src/ff.c **** #error Unknown code page
 269:./Libraries/FatFs/Src/ff.c **** 
 270:./Libraries/FatFs/Src/ff.c **** #endif
 271:./Libraries/FatFs/Src/ff.c **** 
 272:./Libraries/FatFs/Src/ff.c **** 
 273:./Libraries/FatFs/Src/ff.c **** /* Character code support macros */
 274:./Libraries/FatFs/Src/ff.c **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 275:./Libraries/FatFs/Src/ff.c **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 276:./Libraries/FatFs/Src/ff.c **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 277:./Libraries/FatFs/Src/ff.c **** 
 278:./Libraries/FatFs/Src/ff.c **** #if _DF1S != 0	/* Code page is DBCS */
 279:./Libraries/FatFs/Src/ff.c **** 
 280:./Libraries/FatFs/Src/ff.c **** #ifdef _DF2S	/* Two 1st byte areas */
 281:./Libraries/FatFs/Src/ff.c **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 282:./Libraries/FatFs/Src/ff.c **** #else			/* One 1st byte area */
 283:./Libraries/FatFs/Src/ff.c **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 284:./Libraries/FatFs/Src/ff.c **** #endif
 285:./Libraries/FatFs/Src/ff.c **** 
 286:./Libraries/FatFs/Src/ff.c **** #ifdef _DS3S	/* Three 2nd byte areas */
 287:./Libraries/FatFs/Src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 288:./Libraries/FatFs/Src/ff.c **** #else			/* Two 2nd byte areas */
 289:./Libraries/FatFs/Src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 290:./Libraries/FatFs/Src/ff.c **** #endif
 291:./Libraries/FatFs/Src/ff.c **** 
 292:./Libraries/FatFs/Src/ff.c **** #else			/* Code page is SBCS */
 293:./Libraries/FatFs/Src/ff.c **** 
 294:./Libraries/FatFs/Src/ff.c **** #define IsDBCS1(c)	0
 295:./Libraries/FatFs/Src/ff.c **** #define IsDBCS2(c)	0
 296:./Libraries/FatFs/Src/ff.c **** 
 297:./Libraries/FatFs/Src/ff.c **** #endif /* _DF1S */
 298:./Libraries/FatFs/Src/ff.c **** 
 299:./Libraries/FatFs/Src/ff.c **** 
 300:./Libraries/FatFs/Src/ff.c **** /* Additional file attribute bits for internal use */
 301:./Libraries/FatFs/Src/ff.c **** #define	AM_VOL		0x08	/* Volume label */
 302:./Libraries/FatFs/Src/ff.c **** #define AM_LFN		0x0F	/* LFN entry */
 303:./Libraries/FatFs/Src/ff.c **** #define AM_MASK		0x3F	/* Mask of defined bits */
 304:./Libraries/FatFs/Src/ff.c **** 
 305:./Libraries/FatFs/Src/ff.c **** 
 306:./Libraries/FatFs/Src/ff.c **** /* Additional file access control and file status flags for internal use */
 307:./Libraries/FatFs/Src/ff.c **** #define FA_SEEKEND	0x20	/* Seek to end of the file on file open */
 308:./Libraries/FatFs/Src/ff.c **** #define FA_MODIFIED	0x40	/* File has been modified */
 309:./Libraries/FatFs/Src/ff.c **** #define FA_DIRTY	0x80	/* FIL.buf[] needs to be written-back */
 310:./Libraries/FatFs/Src/ff.c **** 
 311:./Libraries/FatFs/Src/ff.c **** 
 312:./Libraries/FatFs/Src/ff.c **** /* Name status flags in fn[] */
 313:./Libraries/FatFs/Src/ff.c **** #define NSFLAG		11		/* Index of the name status byte */
 314:./Libraries/FatFs/Src/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 315:./Libraries/FatFs/Src/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
ARM GAS  /tmp/ccaQXGqa.s 			page 7


 316:./Libraries/FatFs/Src/ff.c **** #define NS_LAST		0x04	/* Last segment */
 317:./Libraries/FatFs/Src/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
 318:./Libraries/FatFs/Src/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 319:./Libraries/FatFs/Src/ff.c **** #define NS_DOT		0x20	/* Dot entry */
 320:./Libraries/FatFs/Src/ff.c **** #define NS_NOLFN	0x40	/* Do not find LFN */
 321:./Libraries/FatFs/Src/ff.c **** #define NS_NONAME	0x80	/* Not followed */
 322:./Libraries/FatFs/Src/ff.c **** 
 323:./Libraries/FatFs/Src/ff.c **** 
 324:./Libraries/FatFs/Src/ff.c **** /* Limits and boundaries */
 325:./Libraries/FatFs/Src/ff.c **** #define MAX_DIR		0x200000		/* Max size of FAT directory */
 326:./Libraries/FatFs/Src/ff.c **** #define MAX_DIR_EX	0x10000000		/* Max size of exFAT directory */
 327:./Libraries/FatFs/Src/ff.c **** #define MAX_FAT12	0xFF5			/* Max FAT12 clusters (differs from specs, but correct for real DOS/Windo
 328:./Libraries/FatFs/Src/ff.c **** #define	MAX_FAT16	0xFFF5			/* Max FAT16 clusters (differs from specs, but correct for real DOS/Wind
 329:./Libraries/FatFs/Src/ff.c **** #define	MAX_FAT32	0x0FFFFFF5		/* Max FAT32 clusters (not specified, practical limit) */
 330:./Libraries/FatFs/Src/ff.c **** #define	MAX_EXFAT	0x7FFFFFFD		/* Max exFAT clusters (differs from specs, implementation limit) */
 331:./Libraries/FatFs/Src/ff.c **** 
 332:./Libraries/FatFs/Src/ff.c **** 
 333:./Libraries/FatFs/Src/ff.c **** /* FatFs refers the FAT structure as simple byte array instead of structure member
 334:./Libraries/FatFs/Src/ff.c **** / because the C structure is not binary compatible between different platforms */
 335:./Libraries/FatFs/Src/ff.c **** 
 336:./Libraries/FatFs/Src/ff.c **** #define BS_JmpBoot			0		/* x86 jump instruction (3-byte) */
 337:./Libraries/FatFs/Src/ff.c **** #define BS_OEMName			3		/* OEM name (8-byte) */
 338:./Libraries/FatFs/Src/ff.c **** #define BPB_BytsPerSec		11		/* Sector size [byte] (WORD) */
 339:./Libraries/FatFs/Src/ff.c **** #define BPB_SecPerClus		13		/* Cluster size [sector] (BYTE) */
 340:./Libraries/FatFs/Src/ff.c **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (WORD) */
 341:./Libraries/FatFs/Src/ff.c **** #define BPB_NumFATs			16		/* Number of FATs (BYTE) */
 342:./Libraries/FatFs/Src/ff.c **** #define BPB_RootEntCnt		17		/* Size of root directory area for FAT12/16 [entry] (WORD) */
 343:./Libraries/FatFs/Src/ff.c **** #define BPB_TotSec16		19		/* Volume size (16-bit) [sector] (WORD) */
 344:./Libraries/FatFs/Src/ff.c **** #define BPB_Media			21		/* Media descriptor byte (BYTE) */
 345:./Libraries/FatFs/Src/ff.c **** #define BPB_FATSz16			22		/* FAT size (16-bit) [sector] (WORD) */
 346:./Libraries/FatFs/Src/ff.c **** #define BPB_SecPerTrk		24		/* Track size for int13h [sector] (WORD) */
 347:./Libraries/FatFs/Src/ff.c **** #define BPB_NumHeads		26		/* Number of heads for int13h (WORD) */
 348:./Libraries/FatFs/Src/ff.c **** #define BPB_HiddSec			28		/* Volume offset from top of the drive (DWORD) */
 349:./Libraries/FatFs/Src/ff.c **** #define BPB_TotSec32		32		/* Volume size (32-bit) [sector] (DWORD) */
 350:./Libraries/FatFs/Src/ff.c **** #define BS_DrvNum			36		/* Physical drive number for int13h (BYTE) */
 351:./Libraries/FatFs/Src/ff.c **** #define BS_NTres			37		/* Error flag (BYTE) */
 352:./Libraries/FatFs/Src/ff.c **** #define BS_BootSig			38		/* Extended boot signature (BYTE) */
 353:./Libraries/FatFs/Src/ff.c **** #define BS_VolID			39		/* Volume serial number (DWORD) */
 354:./Libraries/FatFs/Src/ff.c **** #define BS_VolLab			43		/* Volume label string (8-byte) */
 355:./Libraries/FatFs/Src/ff.c **** #define BS_FilSysType		54		/* File system type string (8-byte) */
 356:./Libraries/FatFs/Src/ff.c **** #define BS_BootCode			62		/* Boot code (448-byte) */
 357:./Libraries/FatFs/Src/ff.c **** #define BS_55AA				510		/* Signature word (WORD) */
 358:./Libraries/FatFs/Src/ff.c **** 
 359:./Libraries/FatFs/Src/ff.c **** #define BPB_FATSz32			36		/* FAT32: FAT size [sector] (DWORD) */
 360:./Libraries/FatFs/Src/ff.c **** #define BPB_ExtFlags32		40		/* FAT32: Extended flags (WORD) */
 361:./Libraries/FatFs/Src/ff.c **** #define BPB_FSVer32			42		/* FAT32: File system version (WORD) */
 362:./Libraries/FatFs/Src/ff.c **** #define BPB_RootClus32		44		/* FAT32: Root directory cluster (DWORD) */
 363:./Libraries/FatFs/Src/ff.c **** #define BPB_FSInfo32		48		/* FAT32: Offset of FSINFO sector (WORD) */
 364:./Libraries/FatFs/Src/ff.c **** #define BPB_BkBootSec32		50		/* FAT32: Offset of backup boot sector (WORD) */
 365:./Libraries/FatFs/Src/ff.c **** #define BS_DrvNum32			64		/* FAT32: Physical drive number for int13h (BYTE) */
 366:./Libraries/FatFs/Src/ff.c **** #define BS_NTres32			65		/* FAT32: Error flag (BYTE) */
 367:./Libraries/FatFs/Src/ff.c **** #define BS_BootSig32		66		/* FAT32: Extended boot signature (BYTE) */
 368:./Libraries/FatFs/Src/ff.c **** #define BS_VolID32			67		/* FAT32: Volume serial number (DWORD) */
 369:./Libraries/FatFs/Src/ff.c **** #define BS_VolLab32			71		/* FAT32: Volume label string (8-byte) */
 370:./Libraries/FatFs/Src/ff.c **** #define BS_FilSysType32		82		/* FAT32: File system type string (8-byte) */
 371:./Libraries/FatFs/Src/ff.c **** #define BS_BootCode32		90		/* FAT32: Boot code (420-byte) */
 372:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 8


 373:./Libraries/FatFs/Src/ff.c **** #define BPB_ZeroedEx		11		/* exFAT: MBZ field (53-byte) */
 374:./Libraries/FatFs/Src/ff.c **** #define BPB_VolOfsEx		64		/* exFAT: Volume offset from top of the drive [sector] (QWORD) */
 375:./Libraries/FatFs/Src/ff.c **** #define BPB_TotSecEx		72		/* exFAT: Volume size [sector] (QWORD) */
 376:./Libraries/FatFs/Src/ff.c **** #define BPB_FatOfsEx		80		/* exFAT: FAT offset from top of the volume [sector] (DWORD) */
 377:./Libraries/FatFs/Src/ff.c **** #define BPB_FatSzEx			84		/* exFAT: FAT size [sector] (DWORD) */
 378:./Libraries/FatFs/Src/ff.c **** #define BPB_DataOfsEx		88		/* exFAT: Data offset from top of the volume [sector] (DWORD) */
 379:./Libraries/FatFs/Src/ff.c **** #define BPB_NumClusEx		92		/* exFAT: Number of clusters (DWORD) */
 380:./Libraries/FatFs/Src/ff.c **** #define BPB_RootClusEx		96		/* exFAT: Root directory start cluster (DWORD) */
 381:./Libraries/FatFs/Src/ff.c **** #define BPB_VolIDEx			100		/* exFAT: Volume serial number (DWORD) */
 382:./Libraries/FatFs/Src/ff.c **** #define BPB_FSVerEx			104		/* exFAT: File system version (WORD) */
 383:./Libraries/FatFs/Src/ff.c **** #define BPB_VolFlagEx		106		/* exFAT: Volume flags (BYTE) */
 384:./Libraries/FatFs/Src/ff.c **** #define BPB_ActFatEx		107		/* exFAT: Active FAT flags (BYTE) */
 385:./Libraries/FatFs/Src/ff.c **** #define BPB_BytsPerSecEx	108		/* exFAT: Log2 of sector size in unit of byte (BYTE) */
 386:./Libraries/FatFs/Src/ff.c **** #define BPB_SecPerClusEx	109		/* exFAT: Log2 of cluster size in unit of sector (BYTE) */
 387:./Libraries/FatFs/Src/ff.c **** #define BPB_NumFATsEx		110		/* exFAT: Number of FATs (BYTE) */
 388:./Libraries/FatFs/Src/ff.c **** #define BPB_DrvNumEx		111		/* exFAT: Physical drive number for int13h (BYTE) */
 389:./Libraries/FatFs/Src/ff.c **** #define BPB_PercInUseEx		112		/* exFAT: Percent in use (BYTE) */
 390:./Libraries/FatFs/Src/ff.c **** #define	BPB_RsvdEx			113		/* exFAT: Reserved (7-byte) */
 391:./Libraries/FatFs/Src/ff.c **** #define BS_BootCodeEx		120		/* exFAT: Boot code (390-byte) */
 392:./Libraries/FatFs/Src/ff.c **** 
 393:./Libraries/FatFs/Src/ff.c **** #define	DIR_Name			0		/* Short file name (11-byte) */
 394:./Libraries/FatFs/Src/ff.c **** #define	DIR_Attr			11		/* Attribute (BYTE) */
 395:./Libraries/FatFs/Src/ff.c **** #define	DIR_NTres			12		/* Lower case flag (BYTE) */
 396:./Libraries/FatFs/Src/ff.c **** #define DIR_CrtTime10		13		/* Created time sub-second (BYTE) */
 397:./Libraries/FatFs/Src/ff.c **** #define	DIR_CrtTime			14		/* Created time (DWORD) */
 398:./Libraries/FatFs/Src/ff.c **** #define DIR_LstAccDate		18		/* Last accessed date (WORD) */
 399:./Libraries/FatFs/Src/ff.c **** #define	DIR_FstClusHI		20		/* Higher 16-bit of first cluster (WORD) */
 400:./Libraries/FatFs/Src/ff.c **** #define	DIR_ModTime			22		/* Modified time (DWORD) */
 401:./Libraries/FatFs/Src/ff.c **** #define	DIR_FstClusLO		26		/* Lower 16-bit of first cluster (WORD) */
 402:./Libraries/FatFs/Src/ff.c **** #define	DIR_FileSize		28		/* File size (DWORD) */
 403:./Libraries/FatFs/Src/ff.c **** #define	LDIR_Ord			0		/* LFN: LFN order and LLE flag (BYTE) */
 404:./Libraries/FatFs/Src/ff.c **** #define	LDIR_Attr			11		/* LFN: LFN attribute (BYTE) */
 405:./Libraries/FatFs/Src/ff.c **** #define	LDIR_Type			12		/* LFN: Entry type (BYTE) */
 406:./Libraries/FatFs/Src/ff.c **** #define	LDIR_Chksum			13		/* LFN: Checksum of the SFN (BYTE) */
 407:./Libraries/FatFs/Src/ff.c **** #define	LDIR_FstClusLO		26		/* LFN: MBZ field (WORD) */
 408:./Libraries/FatFs/Src/ff.c **** #define	XDIR_Type			0		/* exFAT: Type of exFAT directory entry (BYTE) */
 409:./Libraries/FatFs/Src/ff.c **** #define	XDIR_NumLabel		1		/* exFAT: Number of volume label characters (BYTE) */
 410:./Libraries/FatFs/Src/ff.c **** #define	XDIR_Label			2		/* exFAT: Volume label (11-WORD) */
 411:./Libraries/FatFs/Src/ff.c **** #define	XDIR_CaseSum		4		/* exFAT: Sum of case conversion table (DWORD) */
 412:./Libraries/FatFs/Src/ff.c **** #define	XDIR_NumSec			1		/* exFAT: Number of secondary entries (BYTE) */
 413:./Libraries/FatFs/Src/ff.c **** #define	XDIR_SetSum			2		/* exFAT: Sum of the set of directory entries (WORD) */
 414:./Libraries/FatFs/Src/ff.c **** #define	XDIR_Attr			4		/* exFAT: File attribute (WORD) */
 415:./Libraries/FatFs/Src/ff.c **** #define	XDIR_CrtTime		8		/* exFAT: Created time (DWORD) */
 416:./Libraries/FatFs/Src/ff.c **** #define	XDIR_ModTime		12		/* exFAT: Modified time (DWORD) */
 417:./Libraries/FatFs/Src/ff.c **** #define	XDIR_AccTime		16		/* exFAT: Last accessed time (DWORD) */
 418:./Libraries/FatFs/Src/ff.c **** #define	XDIR_CrtTime10		20		/* exFAT: Created time subsecond (BYTE) */
 419:./Libraries/FatFs/Src/ff.c **** #define	XDIR_ModTime10		21		/* exFAT: Modified time subsecond (BYTE) */
 420:./Libraries/FatFs/Src/ff.c **** #define	XDIR_CrtTZ			22		/* exFAT: Created timezone (BYTE) */
 421:./Libraries/FatFs/Src/ff.c **** #define	XDIR_ModTZ			23		/* exFAT: Modified timezone (BYTE) */
 422:./Libraries/FatFs/Src/ff.c **** #define	XDIR_AccTZ			24		/* exFAT: Last accessed timezone (BYTE) */
 423:./Libraries/FatFs/Src/ff.c **** #define	XDIR_GenFlags		33		/* exFAT: General secondary flags (WORD) */
 424:./Libraries/FatFs/Src/ff.c **** #define	XDIR_NumName		35		/* exFAT: Number of file name characters (BYTE) */
 425:./Libraries/FatFs/Src/ff.c **** #define	XDIR_NameHash		36		/* exFAT: Hash of file name (WORD) */
 426:./Libraries/FatFs/Src/ff.c **** #define XDIR_ValidFileSize	40		/* exFAT: Valid file size (QWORD) */
 427:./Libraries/FatFs/Src/ff.c **** #define	XDIR_FstClus		52		/* exFAT: First cluster of the file data (DWORD) */
 428:./Libraries/FatFs/Src/ff.c **** #define	XDIR_FileSize		56		/* exFAT: File/Directory size (QWORD) */
 429:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 9


 430:./Libraries/FatFs/Src/ff.c **** #define	SZDIRE				32		/* Size of a directory entry */
 431:./Libraries/FatFs/Src/ff.c **** #define	DDEM				0xE5	/* Deleted directory entry mark set to DIR_Name[0] */
 432:./Libraries/FatFs/Src/ff.c **** #define	RDDEM				0x05	/* Replacement of the character collides with DDEM */
 433:./Libraries/FatFs/Src/ff.c **** #define	LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 434:./Libraries/FatFs/Src/ff.c **** 
 435:./Libraries/FatFs/Src/ff.c **** #define	FSI_LeadSig			0		/* FAT32 FSI: Leading signature (DWORD) */
 436:./Libraries/FatFs/Src/ff.c **** #define	FSI_StrucSig		484		/* FAT32 FSI: Structure signature (DWORD) */
 437:./Libraries/FatFs/Src/ff.c **** #define	FSI_Free_Count		488		/* FAT32 FSI: Number of free clusters (DWORD) */
 438:./Libraries/FatFs/Src/ff.c **** #define	FSI_Nxt_Free		492		/* FAT32 FSI: Last allocated cluster (DWORD) */
 439:./Libraries/FatFs/Src/ff.c **** 
 440:./Libraries/FatFs/Src/ff.c **** #define MBR_Table			446		/* MBR: Offset of partition table in the MBR */
 441:./Libraries/FatFs/Src/ff.c **** #define	SZ_PTE				16		/* MBR: Size of a partition table entry */
 442:./Libraries/FatFs/Src/ff.c **** #define PTE_Boot			0		/* MBR PTE: Boot indicator */
 443:./Libraries/FatFs/Src/ff.c **** #define PTE_StHead			1		/* MBR PTE: Start head */
 444:./Libraries/FatFs/Src/ff.c **** #define PTE_StSec			2		/* MBR PTE: Start sector */
 445:./Libraries/FatFs/Src/ff.c **** #define PTE_StCyl			3		/* MBR PTE: Start cylinder */
 446:./Libraries/FatFs/Src/ff.c **** #define PTE_System			4		/* MBR PTE: System ID */
 447:./Libraries/FatFs/Src/ff.c **** #define PTE_EdHead			5		/* MBR PTE: End head */
 448:./Libraries/FatFs/Src/ff.c **** #define PTE_EdSec			6		/* MBR PTE: End sector */
 449:./Libraries/FatFs/Src/ff.c **** #define PTE_EdCyl			7		/* MBR PTE: End cylinder */
 450:./Libraries/FatFs/Src/ff.c **** #define PTE_StLba			8		/* MBR PTE: Start in LBA */
 451:./Libraries/FatFs/Src/ff.c **** #define PTE_SizLba			12		/* MBR PTE: Size in LBA */
 452:./Libraries/FatFs/Src/ff.c **** 
 453:./Libraries/FatFs/Src/ff.c **** 
 454:./Libraries/FatFs/Src/ff.c **** /* Post process after fatal error on file operation */
 455:./Libraries/FatFs/Src/ff.c **** #define	ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 456:./Libraries/FatFs/Src/ff.c **** 
 457:./Libraries/FatFs/Src/ff.c **** 
 458:./Libraries/FatFs/Src/ff.c **** /* Reentrancy related */
 459:./Libraries/FatFs/Src/ff.c **** #if _FS_REENTRANT
 460:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN == 1
 461:./Libraries/FatFs/Src/ff.c **** #error Static LFN work area cannot be used at thread-safe configuration
 462:./Libraries/FatFs/Src/ff.c **** #endif
 463:./Libraries/FatFs/Src/ff.c **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 464:./Libraries/FatFs/Src/ff.c **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 465:./Libraries/FatFs/Src/ff.c **** #else
 466:./Libraries/FatFs/Src/ff.c **** #define	ENTER_FF(fs)
 467:./Libraries/FatFs/Src/ff.c **** #define LEAVE_FF(fs, res)	return res
 468:./Libraries/FatFs/Src/ff.c **** #endif
 469:./Libraries/FatFs/Src/ff.c **** 
 470:./Libraries/FatFs/Src/ff.c **** 
 471:./Libraries/FatFs/Src/ff.c **** /* Definitions of volume - partition conversion */
 472:./Libraries/FatFs/Src/ff.c **** #if _MULTI_PARTITION
 473:./Libraries/FatFs/Src/ff.c **** #define LD2PD(vol) VolToPart[vol].pd	/* Get physical drive number */
 474:./Libraries/FatFs/Src/ff.c **** #define LD2PT(vol) VolToPart[vol].pt	/* Get partition index */
 475:./Libraries/FatFs/Src/ff.c **** #else
 476:./Libraries/FatFs/Src/ff.c **** #define LD2PD(vol) (BYTE)(vol)	/* Each logical drive is bound to the same physical drive number */
 477:./Libraries/FatFs/Src/ff.c **** #define LD2PT(vol) 0			/* Find first valid partition or in SFD */
 478:./Libraries/FatFs/Src/ff.c **** #endif
 479:./Libraries/FatFs/Src/ff.c **** 
 480:./Libraries/FatFs/Src/ff.c **** 
 481:./Libraries/FatFs/Src/ff.c **** /* Definitions of sector size */
 482:./Libraries/FatFs/Src/ff.c **** #if (_MAX_SS < _MIN_SS) || (_MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 483:./Libraries/FatFs/Src/ff.c **** #error Wrong sector size configuration
 484:./Libraries/FatFs/Src/ff.c **** #endif
 485:./Libraries/FatFs/Src/ff.c **** #if _MAX_SS == _MIN_SS
 486:./Libraries/FatFs/Src/ff.c **** #define	SS(fs)	((UINT)_MAX_SS)	/* Fixed sector size */
ARM GAS  /tmp/ccaQXGqa.s 			page 10


 487:./Libraries/FatFs/Src/ff.c **** #else
 488:./Libraries/FatFs/Src/ff.c **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
 489:./Libraries/FatFs/Src/ff.c **** #endif
 490:./Libraries/FatFs/Src/ff.c **** 
 491:./Libraries/FatFs/Src/ff.c **** 
 492:./Libraries/FatFs/Src/ff.c **** /* Timestamp */
 493:./Libraries/FatFs/Src/ff.c **** #if _FS_NORTC == 1
 494:./Libraries/FatFs/Src/ff.c **** #if _NORTC_YEAR < 1980 || _NORTC_YEAR > 2107 || _NORTC_MON < 1 || _NORTC_MON > 12 || _NORTC_MDAY < 
 495:./Libraries/FatFs/Src/ff.c **** #error Invalid _FS_NORTC settings
 496:./Libraries/FatFs/Src/ff.c **** #endif
 497:./Libraries/FatFs/Src/ff.c **** #define GET_FATTIME()	((DWORD)(_NORTC_YEAR - 1980) << 25 | (DWORD)_NORTC_MON << 21 | (DWORD)_NORTC_
 498:./Libraries/FatFs/Src/ff.c **** #else
 499:./Libraries/FatFs/Src/ff.c **** #define GET_FATTIME()	get_fattime()
 500:./Libraries/FatFs/Src/ff.c **** #endif
 501:./Libraries/FatFs/Src/ff.c **** 
 502:./Libraries/FatFs/Src/ff.c **** 
 503:./Libraries/FatFs/Src/ff.c **** /* File lock controls */
 504:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 505:./Libraries/FatFs/Src/ff.c **** #if _FS_READONLY
 506:./Libraries/FatFs/Src/ff.c **** #error _FS_LOCK must be 0 at read-only configuration
 507:./Libraries/FatFs/Src/ff.c **** #endif
 508:./Libraries/FatFs/Src/ff.c **** typedef struct {
 509:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 510:./Libraries/FatFs/Src/ff.c **** 	DWORD clu;		/* Object ID 2, containing directory (0:root) */
 511:./Libraries/FatFs/Src/ff.c **** 	DWORD ofs;		/* Object ID 3, offset in the directory */
 512:./Libraries/FatFs/Src/ff.c **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 513:./Libraries/FatFs/Src/ff.c **** } FILESEM;
 514:./Libraries/FatFs/Src/ff.c **** #endif
 515:./Libraries/FatFs/Src/ff.c **** 
 516:./Libraries/FatFs/Src/ff.c **** 
 517:./Libraries/FatFs/Src/ff.c **** 
 518:./Libraries/FatFs/Src/ff.c **** 
 519:./Libraries/FatFs/Src/ff.c **** 
 520:./Libraries/FatFs/Src/ff.c **** /*--------------------------------------------------------------------------
 521:./Libraries/FatFs/Src/ff.c **** 
 522:./Libraries/FatFs/Src/ff.c ****    Module Private Work Area
 523:./Libraries/FatFs/Src/ff.c **** 
 524:./Libraries/FatFs/Src/ff.c **** ---------------------------------------------------------------------------*/
 525:./Libraries/FatFs/Src/ff.c **** 
 526:./Libraries/FatFs/Src/ff.c **** /* Remark: Variables defined here without initial value shall be guaranteed
 527:./Libraries/FatFs/Src/ff.c **** /  zero/null at start-up. If not, the linker option or start-up routine is
 528:./Libraries/FatFs/Src/ff.c **** /  not compliance with C standard. */
 529:./Libraries/FatFs/Src/ff.c **** 
 530:./Libraries/FatFs/Src/ff.c **** #if _VOLUMES < 1 || _VOLUMES > 10
 531:./Libraries/FatFs/Src/ff.c **** #error Wrong _VOLUMES setting
 532:./Libraries/FatFs/Src/ff.c **** #endif
 533:./Libraries/FatFs/Src/ff.c **** static FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 534:./Libraries/FatFs/Src/ff.c **** static WORD Fsid;				/* File system mount ID */
 535:./Libraries/FatFs/Src/ff.c **** 
 536:./Libraries/FatFs/Src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
 537:./Libraries/FatFs/Src/ff.c **** static BYTE CurrVol;			/* Current drive */
 538:./Libraries/FatFs/Src/ff.c **** #endif
 539:./Libraries/FatFs/Src/ff.c **** 
 540:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 541:./Libraries/FatFs/Src/ff.c **** static FILESEM Files[_FS_LOCK];	/* Open object lock semaphores */
 542:./Libraries/FatFs/Src/ff.c **** #endif
 543:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 11


 544:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN == 0		/* Non-LFN configuration */
 545:./Libraries/FatFs/Src/ff.c **** #define	DEF_NAMBUF
 546:./Libraries/FatFs/Src/ff.c **** #define INIT_NAMBUF(fs)
 547:./Libraries/FatFs/Src/ff.c **** #define	FREE_NAMBUF()
 548:./Libraries/FatFs/Src/ff.c **** 
 549:./Libraries/FatFs/Src/ff.c **** #else					/* LFN configuration */
 550:./Libraries/FatFs/Src/ff.c **** #if _MAX_LFN < 12 || _MAX_LFN > 255
 551:./Libraries/FatFs/Src/ff.c **** #error Wrong _MAX_LFN value
 552:./Libraries/FatFs/Src/ff.c **** #endif
 553:./Libraries/FatFs/Src/ff.c **** #define MAXDIRB(nc)	((nc + 44U) / 15 * SZDIRE)
 554:./Libraries/FatFs/Src/ff.c **** 
 555:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN == 1		/* LFN enabled with static working buffer */
 556:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 557:./Libraries/FatFs/Src/ff.c **** static BYTE	DirBuf[MAXDIRB(_MAX_LFN)];	/* Directory entry block scratchpad buffer */
 558:./Libraries/FatFs/Src/ff.c **** #endif
 559:./Libraries/FatFs/Src/ff.c **** static WCHAR LfnBuf[_MAX_LFN + 1];	/* LFN enabled with static working buffer */
 560:./Libraries/FatFs/Src/ff.c **** #define	DEF_NAMBUF
 561:./Libraries/FatFs/Src/ff.c **** #define INIT_NAMBUF(fs)
 562:./Libraries/FatFs/Src/ff.c **** #define	FREE_NAMBUF()
 563:./Libraries/FatFs/Src/ff.c **** 
 564:./Libraries/FatFs/Src/ff.c **** #elif _USE_LFN == 2 	/* LFN enabled with dynamic working buffer on the stack */
 565:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 566:./Libraries/FatFs/Src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1]; BYTE dbuf[MAXDIRB(_MAX_LFN)];
 567:./Libraries/FatFs/Src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; (fs)->dirbuf = dbuf; }
 568:./Libraries/FatFs/Src/ff.c **** #define	FREE_NAMBUF()
 569:./Libraries/FatFs/Src/ff.c **** #else
 570:./Libraries/FatFs/Src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1];
 571:./Libraries/FatFs/Src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; }
 572:./Libraries/FatFs/Src/ff.c **** #define	FREE_NAMBUF()
 573:./Libraries/FatFs/Src/ff.c **** #endif
 574:./Libraries/FatFs/Src/ff.c **** 
 575:./Libraries/FatFs/Src/ff.c **** #elif _USE_LFN == 3 	/* LFN enabled with dynamic working buffer on the heap */
 576:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 577:./Libraries/FatFs/Src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 578:./Libraries/FatFs/Src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2 + MAXDIRB(_MAX_LFN)); if (!lfn) LEAVE_FF
 579:./Libraries/FatFs/Src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 580:./Libraries/FatFs/Src/ff.c **** #else
 581:./Libraries/FatFs/Src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 582:./Libraries/FatFs/Src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2); if (!lfn) LEAVE_FF(fs, FR_NOT_ENOUGH_C
 583:./Libraries/FatFs/Src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 584:./Libraries/FatFs/Src/ff.c **** #endif
 585:./Libraries/FatFs/Src/ff.c **** 
 586:./Libraries/FatFs/Src/ff.c **** #else
 587:./Libraries/FatFs/Src/ff.c **** #error Wrong _USE_LFN setting
 588:./Libraries/FatFs/Src/ff.c **** 
 589:./Libraries/FatFs/Src/ff.c **** #endif
 590:./Libraries/FatFs/Src/ff.c **** #endif	/* else _USE_LFN == 0 */
 591:./Libraries/FatFs/Src/ff.c **** 
 592:./Libraries/FatFs/Src/ff.c **** #ifdef _EXCVT
 593:./Libraries/FatFs/Src/ff.c **** static const BYTE ExCvt[] = _EXCVT;	/* Upper conversion table for SBCS extended characters */
 594:./Libraries/FatFs/Src/ff.c **** #endif
 595:./Libraries/FatFs/Src/ff.c **** 
 596:./Libraries/FatFs/Src/ff.c **** 
 597:./Libraries/FatFs/Src/ff.c **** 
 598:./Libraries/FatFs/Src/ff.c **** 
 599:./Libraries/FatFs/Src/ff.c **** 
 600:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 12


 601:./Libraries/FatFs/Src/ff.c **** /*--------------------------------------------------------------------------
 602:./Libraries/FatFs/Src/ff.c **** 
 603:./Libraries/FatFs/Src/ff.c ****    Module Private Functions
 604:./Libraries/FatFs/Src/ff.c **** 
 605:./Libraries/FatFs/Src/ff.c **** ---------------------------------------------------------------------------*/
 606:./Libraries/FatFs/Src/ff.c **** 
 607:./Libraries/FatFs/Src/ff.c **** 
 608:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
 609:./Libraries/FatFs/Src/ff.c **** /* Load/Store multi-byte word in the FAT structure                       */
 610:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
 611:./Libraries/FatFs/Src/ff.c **** 
 612:./Libraries/FatFs/Src/ff.c **** static
 613:./Libraries/FatFs/Src/ff.c **** WORD ld_word (const BYTE* ptr)	/*	 Load a 2-byte little-endian word */
 614:./Libraries/FatFs/Src/ff.c **** {
 615:./Libraries/FatFs/Src/ff.c **** 	WORD rv;
 616:./Libraries/FatFs/Src/ff.c **** 
 617:./Libraries/FatFs/Src/ff.c **** 	rv = ptr[1];
 618:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 619:./Libraries/FatFs/Src/ff.c **** 	return rv;
 620:./Libraries/FatFs/Src/ff.c **** }
 621:./Libraries/FatFs/Src/ff.c **** 
 622:./Libraries/FatFs/Src/ff.c **** static
 623:./Libraries/FatFs/Src/ff.c **** DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
 624:./Libraries/FatFs/Src/ff.c **** {
 625:./Libraries/FatFs/Src/ff.c **** 	DWORD rv;
 626:./Libraries/FatFs/Src/ff.c **** 
 627:./Libraries/FatFs/Src/ff.c **** 	rv = ptr[3];
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 630:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 631:./Libraries/FatFs/Src/ff.c **** 	return rv;
 632:./Libraries/FatFs/Src/ff.c **** }
 633:./Libraries/FatFs/Src/ff.c **** 
 634:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 635:./Libraries/FatFs/Src/ff.c **** static
 636:./Libraries/FatFs/Src/ff.c **** QWORD ld_qword (const BYTE* ptr)	/* Load an 8-byte little-endian word */
 637:./Libraries/FatFs/Src/ff.c **** {
 638:./Libraries/FatFs/Src/ff.c **** 	QWORD rv;
 639:./Libraries/FatFs/Src/ff.c **** 
 640:./Libraries/FatFs/Src/ff.c **** 	rv = ptr[7];
 641:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[6];
 642:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[5];
 643:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[4];
 644:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[3];
 645:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 646:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 647:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 648:./Libraries/FatFs/Src/ff.c **** 	return rv;
 649:./Libraries/FatFs/Src/ff.c **** }
 650:./Libraries/FatFs/Src/ff.c **** #endif
 651:./Libraries/FatFs/Src/ff.c **** 
 652:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 653:./Libraries/FatFs/Src/ff.c **** static
 654:./Libraries/FatFs/Src/ff.c **** void st_word (BYTE* ptr, WORD val)	/* Store a 2-byte word in little-endian */
 655:./Libraries/FatFs/Src/ff.c **** {
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 657:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
ARM GAS  /tmp/ccaQXGqa.s 			page 13


 658:./Libraries/FatFs/Src/ff.c **** }
 659:./Libraries/FatFs/Src/ff.c **** 
 660:./Libraries/FatFs/Src/ff.c **** static
 661:./Libraries/FatFs/Src/ff.c **** void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
 662:./Libraries/FatFs/Src/ff.c **** {
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 666:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 667:./Libraries/FatFs/Src/ff.c **** }
 668:./Libraries/FatFs/Src/ff.c **** 
 669:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 670:./Libraries/FatFs/Src/ff.c **** static
 671:./Libraries/FatFs/Src/ff.c **** void st_qword (BYTE* ptr, QWORD val)	/* Store an 8-byte word in little-endian */
 672:./Libraries/FatFs/Src/ff.c **** {
 673:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 674:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 675:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 676:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 677:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 678:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 679:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 680:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 681:./Libraries/FatFs/Src/ff.c **** }
 682:./Libraries/FatFs/Src/ff.c **** #endif
 683:./Libraries/FatFs/Src/ff.c **** #endif	/* !_FS_READONLY */
 684:./Libraries/FatFs/Src/ff.c **** 
 685:./Libraries/FatFs/Src/ff.c **** 
 686:./Libraries/FatFs/Src/ff.c **** 
 687:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
 688:./Libraries/FatFs/Src/ff.c **** /* String functions                                                      */
 689:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
 690:./Libraries/FatFs/Src/ff.c **** 
 691:./Libraries/FatFs/Src/ff.c **** /* Copy memory to memory */
 692:./Libraries/FatFs/Src/ff.c **** static
 693:./Libraries/FatFs/Src/ff.c **** void mem_cpy (void* dst, const void* src, UINT cnt) {
 694:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 695:./Libraries/FatFs/Src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 696:./Libraries/FatFs/Src/ff.c **** 
 697:./Libraries/FatFs/Src/ff.c **** 	if (cnt) {
 698:./Libraries/FatFs/Src/ff.c **** 		do {
 699:./Libraries/FatFs/Src/ff.c **** 			*d++ = *s++;
 700:./Libraries/FatFs/Src/ff.c **** 		} while (--cnt);
 701:./Libraries/FatFs/Src/ff.c **** 	}
 702:./Libraries/FatFs/Src/ff.c **** }
 703:./Libraries/FatFs/Src/ff.c **** 
 704:./Libraries/FatFs/Src/ff.c **** /* Fill memory block */
 705:./Libraries/FatFs/Src/ff.c **** static
 706:./Libraries/FatFs/Src/ff.c **** void mem_set (void* dst, int val, UINT cnt) {
 707:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 708:./Libraries/FatFs/Src/ff.c **** 
 709:./Libraries/FatFs/Src/ff.c **** 	do {
 710:./Libraries/FatFs/Src/ff.c **** 		*d++ = (BYTE)val;
 711:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 712:./Libraries/FatFs/Src/ff.c **** }
 713:./Libraries/FatFs/Src/ff.c **** 
 714:./Libraries/FatFs/Src/ff.c **** /* Compare memory block */
ARM GAS  /tmp/ccaQXGqa.s 			page 14


 715:./Libraries/FatFs/Src/ff.c **** static
 716:./Libraries/FatFs/Src/ff.c **** int mem_cmp (const void* dst, const void* src, UINT cnt) {	/* ZR:same, NZ:different */
 717:./Libraries/FatFs/Src/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 718:./Libraries/FatFs/Src/ff.c **** 	int r = 0;
 719:./Libraries/FatFs/Src/ff.c **** 
 720:./Libraries/FatFs/Src/ff.c **** 	do {
 721:./Libraries/FatFs/Src/ff.c **** 		r = *d++ - *s++;
 722:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt && r == 0);
 723:./Libraries/FatFs/Src/ff.c **** 
 724:./Libraries/FatFs/Src/ff.c **** 	return r;
 725:./Libraries/FatFs/Src/ff.c **** }
 726:./Libraries/FatFs/Src/ff.c **** 
 727:./Libraries/FatFs/Src/ff.c **** /* Check if chr is contained in the string */
 728:./Libraries/FatFs/Src/ff.c **** static
 729:./Libraries/FatFs/Src/ff.c **** int chk_chr (const char* str, int chr) {	/* NZ:contained, ZR:not contained */
 730:./Libraries/FatFs/Src/ff.c **** 	while (*str && *str != chr) str++;
 731:./Libraries/FatFs/Src/ff.c **** 	return *str;
 732:./Libraries/FatFs/Src/ff.c **** }
 733:./Libraries/FatFs/Src/ff.c **** 
 734:./Libraries/FatFs/Src/ff.c **** 
 735:./Libraries/FatFs/Src/ff.c **** 
 736:./Libraries/FatFs/Src/ff.c **** 
 737:./Libraries/FatFs/Src/ff.c **** #if _FS_REENTRANT
 738:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
 739:./Libraries/FatFs/Src/ff.c **** /* Request/Release grant to access the volume                            */
 740:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
 741:./Libraries/FatFs/Src/ff.c **** static
 742:./Libraries/FatFs/Src/ff.c **** int lock_fs (
 743:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs		/* File system object */
 744:./Libraries/FatFs/Src/ff.c **** )
 745:./Libraries/FatFs/Src/ff.c **** {
 746:./Libraries/FatFs/Src/ff.c **** 	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 747:./Libraries/FatFs/Src/ff.c **** }
 748:./Libraries/FatFs/Src/ff.c **** 
 749:./Libraries/FatFs/Src/ff.c **** 
 750:./Libraries/FatFs/Src/ff.c **** static
 751:./Libraries/FatFs/Src/ff.c **** void unlock_fs (
 752:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 753:./Libraries/FatFs/Src/ff.c **** 	FRESULT res		/* Result code to be returned */
 754:./Libraries/FatFs/Src/ff.c **** )
 755:./Libraries/FatFs/Src/ff.c **** {
 756:./Libraries/FatFs/Src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 757:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 758:./Libraries/FatFs/Src/ff.c **** 	}
 759:./Libraries/FatFs/Src/ff.c **** }
 760:./Libraries/FatFs/Src/ff.c **** 
 761:./Libraries/FatFs/Src/ff.c **** #endif
 762:./Libraries/FatFs/Src/ff.c **** 
 763:./Libraries/FatFs/Src/ff.c **** 
 764:./Libraries/FatFs/Src/ff.c **** 
 765:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 766:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
 767:./Libraries/FatFs/Src/ff.c **** /* File lock control functions                                           */
 768:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
 769:./Libraries/FatFs/Src/ff.c **** 
 770:./Libraries/FatFs/Src/ff.c **** static
 771:./Libraries/FatFs/Src/ff.c **** FRESULT chk_lock (	/* Check if the file can be accessed */
ARM GAS  /tmp/ccaQXGqa.s 			page 15


 772:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 773:./Libraries/FatFs/Src/ff.c **** 	int acc			/* Desired access type (0:Read, 1:Write, 2:Delete/Rename) */
 774:./Libraries/FatFs/Src/ff.c **** )
 775:./Libraries/FatFs/Src/ff.c **** {
  29              		.loc 1 775 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 776:./Libraries/FatFs/Src/ff.c **** 	UINT i, be;
  34              		.loc 1 776 2 view .LVU1
 777:./Libraries/FatFs/Src/ff.c **** 
 778:./Libraries/FatFs/Src/ff.c **** 	/* Search file semaphore table */
 779:./Libraries/FatFs/Src/ff.c **** 	for (i = be = 0; i < _FS_LOCK; i++) {
  35              		.loc 1 779 2 view .LVU2
  36              		.loc 1 779 19 view .LVU3
 780:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
  37              		.loc 1 780 3 view .LVU4
  38              		.loc 1 780 15 is_stmt 0 view .LVU5
  39 0000 1C4A     		ldr	r2, .L23
  40 0002 1368     		ldr	r3, [r2]
 775:./Libraries/FatFs/Src/ff.c **** 	UINT i, be;
  41              		.loc 1 775 1 view .LVU6
  42 0004 30B4     		push	{r4, r5}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 8
  45              		.cfi_offset 4, -8
  46              		.cfi_offset 5, -4
  47              		.loc 1 780 6 view .LVU7
  48 0006 002B     		cmp	r3, #0
  49 0008 32D0     		beq	.L7
 781:./Libraries/FatFs/Src/ff.c **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
  50              		.loc 1 781 4 is_stmt 1 view .LVU8
  51              		.loc 1 781 7 is_stmt 0 view .LVU9
  52 000a 0468     		ldr	r4, [r0]
  53 000c 9C42     		cmp	r4, r3
  54 000e 0ED0     		beq	.L20
  55              	.L9:
 779:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
  56              		.loc 1 779 14 view .LVU10
  57 0010 0024     		movs	r4, #0
  58              	.L2:
  59              	.LVL1:
 779:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
  60              		.loc 1 779 33 is_stmt 1 view .LVU11
 779:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
  61              		.loc 1 779 19 view .LVU12
 780:./Libraries/FatFs/Src/ff.c **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
  62              		.loc 1 780 3 view .LVU13
 780:./Libraries/FatFs/Src/ff.c **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
  63              		.loc 1 780 15 is_stmt 0 view .LVU14
  64 0012 1369     		ldr	r3, [r2, #16]
 780:./Libraries/FatFs/Src/ff.c **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
  65              		.loc 1 780 6 view .LVU15
  66 0014 43B1     		cbz	r3, .L13
  67              		.loc 1 781 4 is_stmt 1 view .LVU16
  68              		.loc 1 781 7 is_stmt 0 view .LVU17
ARM GAS  /tmp/ccaQXGqa.s 			page 16


  69 0016 0568     		ldr	r5, [r0]
  70 0018 AB42     		cmp	r3, r5
  71 001a 1CD0     		beq	.L21
  72              	.LVL2:
  73              	.L5:
 779:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
  74              		.loc 1 779 33 is_stmt 1 discriminator 2 view .LVU18
 779:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
  75              		.loc 1 779 19 discriminator 2 view .LVU19
 782:./Libraries/FatFs/Src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 783:./Libraries/FatFs/Src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 784:./Libraries/FatFs/Src/ff.c **** 		} else {			/* Blank entry */
 785:./Libraries/FatFs/Src/ff.c **** 			be = 1;
 786:./Libraries/FatFs/Src/ff.c **** 		}
 787:./Libraries/FatFs/Src/ff.c **** 	}
 788:./Libraries/FatFs/Src/ff.c **** 	if (i == _FS_LOCK) {	/* The object is not opened */
  76              		.loc 1 788 2 discriminator 2 view .LVU20
 789:./Libraries/FatFs/Src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
  77              		.loc 1 789 3 discriminator 2 view .LVU21
  78              		.loc 1 789 35 is_stmt 0 discriminator 2 view .LVU22
  79 001c 0229     		cmp	r1, #2
  80 001e 03D0     		beq	.L13
  81 0020 14B9     		cbnz	r4, .L13
  82              		.loc 1 789 35 view .LVU23
  83 0022 1220     		movs	r0, #18
 790:./Libraries/FatFs/Src/ff.c **** 	}
 791:./Libraries/FatFs/Src/ff.c **** 
 792:./Libraries/FatFs/Src/ff.c **** 	/* The object has been opened. Reject any open against writing file and all write mode open */
 793:./Libraries/FatFs/Src/ff.c **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 794:./Libraries/FatFs/Src/ff.c **** }
  84              		.loc 1 794 1 view .LVU24
  85 0024 30BC     		pop	{r4, r5}
  86              	.LCFI1:
  87              		.cfi_remember_state
  88              		.cfi_restore 5
  89              		.cfi_restore 4
  90              		.cfi_def_cfa_offset 0
  91              	.LVL3:
  92              		.loc 1 794 1 view .LVU25
  93 0026 7047     		bx	lr
  94              	.LVL4:
  95              	.L13:
  96              	.LCFI2:
  97              		.cfi_restore_state
 793:./Libraries/FatFs/Src/ff.c **** }
  98              		.loc 1 793 52 view .LVU26
  99 0028 0020     		movs	r0, #0
 100              	.LVL5:
 101              	.L16:
 102              		.loc 1 794 1 view .LVU27
 103 002a 30BC     		pop	{r4, r5}
 104              	.LCFI3:
 105              		.cfi_remember_state
 106              		.cfi_restore 5
 107              		.cfi_restore 4
 108              		.cfi_def_cfa_offset 0
 109 002c 7047     		bx	lr
ARM GAS  /tmp/ccaQXGqa.s 			page 17


 110              	.LVL6:
 111              	.L20:
 112              	.LCFI4:
 113              		.cfi_restore_state
 781:./Libraries/FatFs/Src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 114              		.loc 1 781 34 view .LVU28
 115 002e 5468     		ldr	r4, [r2, #4]
 116 0030 8368     		ldr	r3, [r0, #8]
 117 0032 9C42     		cmp	r4, r3
 118 0034 ECD1     		bne	.L9
 782:./Libraries/FatFs/Src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 119              		.loc 1 782 36 view .LVU29
 120 0036 9468     		ldr	r4, [r2, #8]
 121 0038 4369     		ldr	r3, [r0, #20]
 122 003a 9C42     		cmp	r4, r3
 123 003c E8D1     		bne	.L9
 788:./Libraries/FatFs/Src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 124              		.loc 1 788 2 is_stmt 1 view .LVU30
 793:./Libraries/FatFs/Src/ff.c **** }
 125              		.loc 1 793 2 view .LVU31
 779:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 126              		.loc 1 779 9 is_stmt 0 view .LVU32
 127 003e 0023     		movs	r3, #0
 793:./Libraries/FatFs/Src/ff.c **** }
 128              		.loc 1 793 52 view .LVU33
 129 0040 A1B9     		cbnz	r1, .L22
 130              	.LVL7:
 131              	.L17:
 793:./Libraries/FatFs/Src/ff.c **** }
 132              		.loc 1 793 25 discriminator 2 view .LVU34
 133 0042 02EB0312 		add	r2, r2, r3, lsl #4
 793:./Libraries/FatFs/Src/ff.c **** }
 134              		.loc 1 793 14 discriminator 2 view .LVU35
 135 0046 9389     		ldrh	r3, [r2, #12]
 136 0048 B3F5807F 		cmp	r3, #256
 137              		.loc 1 794 1 discriminator 2 view .LVU36
 138 004c 30BC     		pop	{r4, r5}
 139              	.LCFI5:
 140              		.cfi_remember_state
 141              		.cfi_restore 5
 142              		.cfi_restore 4
 143              		.cfi_def_cfa_offset 0
 793:./Libraries/FatFs/Src/ff.c **** }
 144              		.loc 1 793 52 discriminator 2 view .LVU37
 145 004e 14BF     		ite	ne
 146 0050 0020     		movne	r0, #0
 147 0052 1020     		moveq	r0, #16
 148              		.loc 1 794 1 discriminator 2 view .LVU38
 149 0054 7047     		bx	lr
 150              	.LVL8:
 151              	.L21:
 152              	.LCFI6:
 153              		.cfi_restore_state
 781:./Libraries/FatFs/Src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 154              		.loc 1 781 34 discriminator 1 view .LVU39
 155 0056 5569     		ldr	r5, [r2, #20]
 156 0058 8368     		ldr	r3, [r0, #8]
ARM GAS  /tmp/ccaQXGqa.s 			page 18


 157 005a 9D42     		cmp	r5, r3
 158 005c DED1     		bne	.L5
 782:./Libraries/FatFs/Src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 159              		.loc 1 782 36 view .LVU40
 160 005e 4369     		ldr	r3, [r0, #20]
 161 0060 9069     		ldr	r0, [r2, #24]
 162              	.LVL9:
 782:./Libraries/FatFs/Src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 163              		.loc 1 782 36 view .LVU41
 164 0062 9842     		cmp	r0, r3
 165 0064 DAD1     		bne	.L5
 779:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 166              		.loc 1 779 34 view .LVU42
 167 0066 0123     		movs	r3, #1
 788:./Libraries/FatFs/Src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 168              		.loc 1 788 2 is_stmt 1 view .LVU43
 793:./Libraries/FatFs/Src/ff.c **** }
 169              		.loc 1 793 2 view .LVU44
 793:./Libraries/FatFs/Src/ff.c **** }
 170              		.loc 1 793 52 is_stmt 0 view .LVU45
 171 0068 0029     		cmp	r1, #0
 172 006a EAD0     		beq	.L17
 173              	.LVL10:
 174              	.L22:
 793:./Libraries/FatFs/Src/ff.c **** }
 175              		.loc 1 793 52 view .LVU46
 176 006c 1020     		movs	r0, #16
 177 006e DCE7     		b	.L16
 178              	.LVL11:
 179              	.L7:
 785:./Libraries/FatFs/Src/ff.c **** 		}
 180              		.loc 1 785 7 view .LVU47
 181 0070 0124     		movs	r4, #1
 182 0072 CEE7     		b	.L2
 183              	.L24:
 184              		.align	2
 185              	.L23:
 186 0074 00000000 		.word	.LANCHOR0
 187              		.cfi_endproc
 188              	.LFE345:
 190              		.section	.text.inc_lock,"ax",%progbits
 191              		.align	1
 192              		.p2align 2,,3
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 196              		.fpu fpv5-d16
 198              	inc_lock:
 199              	.LVL12:
 200              	.LFB347:
 795:./Libraries/FatFs/Src/ff.c **** 
 796:./Libraries/FatFs/Src/ff.c **** 
 797:./Libraries/FatFs/Src/ff.c **** static
 798:./Libraries/FatFs/Src/ff.c **** int enq_lock (void)	/* Check if an entry is available for a new object */
 799:./Libraries/FatFs/Src/ff.c **** {
 800:./Libraries/FatFs/Src/ff.c **** 	UINT i;
 801:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 19


 802:./Libraries/FatFs/Src/ff.c **** 	for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 803:./Libraries/FatFs/Src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 804:./Libraries/FatFs/Src/ff.c **** }
 805:./Libraries/FatFs/Src/ff.c **** 
 806:./Libraries/FatFs/Src/ff.c **** 
 807:./Libraries/FatFs/Src/ff.c **** static
 808:./Libraries/FatFs/Src/ff.c **** UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
 809:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
 810:./Libraries/FatFs/Src/ff.c **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 811:./Libraries/FatFs/Src/ff.c **** )
 812:./Libraries/FatFs/Src/ff.c **** {
 201              		.loc 1 812 1 is_stmt 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 813:./Libraries/FatFs/Src/ff.c **** 	UINT i;
 206              		.loc 1 813 2 view .LVU49
 814:./Libraries/FatFs/Src/ff.c **** 
 815:./Libraries/FatFs/Src/ff.c **** 
 816:./Libraries/FatFs/Src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 207              		.loc 1 816 2 view .LVU50
 208              		.loc 1 816 14 view .LVU51
 817:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 209              		.loc 1 817 15 is_stmt 0 view .LVU52
 210 0000 284B     		ldr	r3, .L45
 812:./Libraries/FatFs/Src/ff.c **** 	UINT i;
 211              		.loc 1 812 1 view .LVU53
 212 0002 F0B4     		push	{r4, r5, r6, r7}
 213              	.LCFI7:
 214              		.cfi_def_cfa_offset 16
 215              		.cfi_offset 4, -16
 216              		.cfi_offset 5, -12
 217              		.cfi_offset 6, -8
 218              		.cfi_offset 7, -4
 219              		.loc 1 817 15 view .LVU54
 220 0004 1A68     		ldr	r2, [r3]
 221              		.loc 1 817 29 view .LVU55
 222 0006 0568     		ldr	r5, [r0]
 223              		.loc 1 817 3 is_stmt 1 view .LVU56
 224              		.loc 1 817 6 is_stmt 0 view .LVU57
 225 0008 9542     		cmp	r5, r2
 226 000a 1BD0     		beq	.L41
 227              	.L26:
 816:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 228              		.loc 1 816 28 is_stmt 1 view .LVU58
 229              	.LVL13:
 816:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 230              		.loc 1 816 14 view .LVU59
 231              		.loc 1 817 3 view .LVU60
 232              		.loc 1 817 15 is_stmt 0 view .LVU61
 233 000c 1C69     		ldr	r4, [r3, #16]
 234              		.loc 1 817 6 view .LVU62
 235 000e AC42     		cmp	r4, r5
 236 0010 06D0     		beq	.L42
 237              	.L28:
 816:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
ARM GAS  /tmp/ccaQXGqa.s 			page 20


 238              		.loc 1 816 28 is_stmt 1 discriminator 2 view .LVU63
 239              	.LVL14:
 816:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 240              		.loc 1 816 14 discriminator 2 view .LVU64
 818:./Libraries/FatFs/Src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 819:./Libraries/FatFs/Src/ff.c **** 			Files[i].ofs == dp->dptr) break;
 820:./Libraries/FatFs/Src/ff.c **** 	}
 821:./Libraries/FatFs/Src/ff.c **** 
 822:./Libraries/FatFs/Src/ff.c **** 	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
 241              		.loc 1 822 2 discriminator 2 view .LVU65
 823:./Libraries/FatFs/Src/ff.c **** 		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 242              		.loc 1 823 15 discriminator 2 view .LVU66
 243              		.loc 1 823 28 is_stmt 0 discriminator 2 view .LVU67
 244 0012 62B3     		cbz	r2, .L36
 245              		.loc 1 823 49 is_stmt 1 view .LVU68
 246              		.loc 1 823 44 view .LVU69
 247              	.LVL15:
 248              		.loc 1 823 15 view .LVU70
 249              		.loc 1 823 28 is_stmt 0 view .LVU71
 250 0014 002C     		cmp	r4, #0
 251 0016 41D0     		beq	.L43
 252              	.LVL16:
 253              	.L39:
 824:./Libraries/FatFs/Src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 254              		.loc 1 824 29 view .LVU72
 255 0018 0024     		movs	r4, #0
 825:./Libraries/FatFs/Src/ff.c **** 		Files[i].fs = dp->obj.fs;
 826:./Libraries/FatFs/Src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 827:./Libraries/FatFs/Src/ff.c **** 		Files[i].ofs = dp->dptr;
 828:./Libraries/FatFs/Src/ff.c **** 		Files[i].ctr = 0;
 829:./Libraries/FatFs/Src/ff.c **** 	}
 830:./Libraries/FatFs/Src/ff.c **** 
 831:./Libraries/FatFs/Src/ff.c **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 832:./Libraries/FatFs/Src/ff.c **** 
 833:./Libraries/FatFs/Src/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 834:./Libraries/FatFs/Src/ff.c **** 
 835:./Libraries/FatFs/Src/ff.c **** 	return i + 1;
 836:./Libraries/FatFs/Src/ff.c **** }
 256              		.loc 1 836 1 view .LVU73
 257 001a 2046     		mov	r0, r4
 258              	.LVL17:
 259              		.loc 1 836 1 view .LVU74
 260 001c F0BC     		pop	{r4, r5, r6, r7}
 261              	.LCFI8:
 262              		.cfi_remember_state
 263              		.cfi_restore 7
 264              		.cfi_restore 6
 265              		.cfi_restore 5
 266              		.cfi_restore 4
 267              		.cfi_def_cfa_offset 0
 268 001e 7047     		bx	lr
 269              	.LVL18:
 270              	.L42:
 271              	.LCFI9:
 272              		.cfi_restore_state
 817:./Libraries/FatFs/Src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 273              		.loc 1 817 33 discriminator 1 view .LVU75
ARM GAS  /tmp/ccaQXGqa.s 			page 21


 274 0020 5F69     		ldr	r7, [r3, #20]
 275 0022 8668     		ldr	r6, [r0, #8]
 276 0024 B742     		cmp	r7, r6
 277 0026 F4D1     		bne	.L28
 818:./Libraries/FatFs/Src/ff.c **** 			Files[i].ofs == dp->dptr) break;
 278              		.loc 1 818 35 view .LVU76
 279 0028 9F69     		ldr	r7, [r3, #24]
 280 002a 4669     		ldr	r6, [r0, #20]
 281 002c B742     		cmp	r7, r6
 282 002e F0D1     		bne	.L28
 831:./Libraries/FatFs/Src/ff.c **** 
 283              		.loc 1 831 2 is_stmt 1 view .LVU77
 816:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 284              		.loc 1 816 29 is_stmt 0 view .LVU78
 285 0030 0122     		movs	r2, #1
 831:./Libraries/FatFs/Src/ff.c **** 
 286              		.loc 1 831 5 view .LVU79
 287 0032 91B9     		cbnz	r1, .L33
 288              	.LVL19:
 289              	.L44:
 831:./Libraries/FatFs/Src/ff.c **** 
 290              		.loc 1 831 5 view .LVU80
 291 0034 03EB0211 		add	r1, r3, r2, lsl #4
 292              	.LVL20:
 831:./Libraries/FatFs/Src/ff.c **** 
 293              		.loc 1 831 5 view .LVU81
 294 0038 541C     		adds	r4, r2, #1
 295 003a 1601     		lsls	r6, r2, #4
 296 003c 8989     		ldrh	r1, [r1, #12]
 297 003e 0131     		adds	r1, r1, #1
 298 0040 89B2     		uxth	r1, r1
 299 0042 26E0     		b	.L31
 300              	.LVL21:
 301              	.L41:
 817:./Libraries/FatFs/Src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 302              		.loc 1 817 33 view .LVU82
 303 0044 5E68     		ldr	r6, [r3, #4]
 304 0046 8468     		ldr	r4, [r0, #8]
 305 0048 A642     		cmp	r6, r4
 306 004a DFD1     		bne	.L26
 818:./Libraries/FatFs/Src/ff.c **** 			Files[i].ofs == dp->dptr) break;
 307              		.loc 1 818 35 view .LVU83
 308 004c 4669     		ldr	r6, [r0, #20]
 309 004e 9C68     		ldr	r4, [r3, #8]
 310 0050 A642     		cmp	r6, r4
 311 0052 DBD1     		bne	.L26
 816:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 312              		.loc 1 816 9 view .LVU84
 313 0054 0022     		movs	r2, #0
 831:./Libraries/FatFs/Src/ff.c **** 
 314              		.loc 1 831 2 is_stmt 1 view .LVU85
 831:./Libraries/FatFs/Src/ff.c **** 
 315              		.loc 1 831 5 is_stmt 0 view .LVU86
 316 0056 0029     		cmp	r1, #0
 317 0058 ECD0     		beq	.L44
 318              	.LVL22:
 319              	.L33:
ARM GAS  /tmp/ccaQXGqa.s 			page 22


 831:./Libraries/FatFs/Src/ff.c **** 
 320              		.loc 1 831 21 discriminator 1 view .LVU87
 321 005a 03EB0211 		add	r1, r3, r2, lsl #4
 322              	.LVL23:
 831:./Libraries/FatFs/Src/ff.c **** 
 323              		.loc 1 831 21 discriminator 1 view .LVU88
 324 005e 1601     		lsls	r6, r2, #4
 831:./Libraries/FatFs/Src/ff.c **** 
 325              		.loc 1 831 10 discriminator 1 view .LVU89
 326 0060 8989     		ldrh	r1, [r1, #12]
 327 0062 0029     		cmp	r1, #0
 328 0064 D8D1     		bne	.L39
 329 0066 541C     		adds	r4, r2, #1
 833:./Libraries/FatFs/Src/ff.c **** 
 330              		.loc 1 833 15 view .LVU90
 331 0068 4FF48071 		mov	r1, #256
 332 006c 11E0     		b	.L31
 333              	.LVL24:
 334              	.L36:
 823:./Libraries/FatFs/Src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 335              		.loc 1 823 28 view .LVU91
 336 006e 0124     		movs	r4, #1
 337              	.LVL25:
 338              	.L29:
 825:./Libraries/FatFs/Src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 339              		.loc 1 825 3 is_stmt 1 view .LVU92
 831:./Libraries/FatFs/Src/ff.c **** 
 340              		.loc 1 831 5 is_stmt 0 view .LVU93
 341 0070 0029     		cmp	r1, #0
 825:./Libraries/FatFs/Src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 342              		.loc 1 825 15 view .LVU94
 343 0072 4FEA0216 		lsl	r6, r2, #4
 827:./Libraries/FatFs/Src/ff.c **** 		Files[i].ctr = 0;
 344              		.loc 1 827 16 view .LVU95
 345 0076 4169     		ldr	r1, [r0, #20]
 346              	.LVL26:
 825:./Libraries/FatFs/Src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 347              		.loc 1 825 15 view .LVU96
 348 0078 03EB0212 		add	r2, r3, r2, lsl #4
 826:./Libraries/FatFs/Src/ff.c **** 		Files[i].ofs = dp->dptr;
 349              		.loc 1 826 16 view .LVU97
 350 007c 8768     		ldr	r7, [r0, #8]
 828:./Libraries/FatFs/Src/ff.c **** 	}
 351              		.loc 1 828 16 view .LVU98
 352 007e 4FF00000 		mov	r0, #0
 353              	.LVL27:
 827:./Libraries/FatFs/Src/ff.c **** 		Files[i].ctr = 0;
 354              		.loc 1 827 16 view .LVU99
 355 0082 9160     		str	r1, [r2, #8]
 831:./Libraries/FatFs/Src/ff.c **** 
 356              		.loc 1 831 5 view .LVU100
 357 0084 14BF     		ite	ne
 358 0086 4FF48071 		movne	r1, #256
 359 008a 0121     		moveq	r1, #1
 825:./Libraries/FatFs/Src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 360              		.loc 1 825 15 view .LVU101
 361 008c 9D51     		str	r5, [r3, r6]
ARM GAS  /tmp/ccaQXGqa.s 			page 23


 826:./Libraries/FatFs/Src/ff.c **** 		Files[i].ofs = dp->dptr;
 362              		.loc 1 826 3 is_stmt 1 view .LVU102
 826:./Libraries/FatFs/Src/ff.c **** 		Files[i].ofs = dp->dptr;
 363              		.loc 1 826 16 is_stmt 0 view .LVU103
 364 008e 5760     		str	r7, [r2, #4]
 827:./Libraries/FatFs/Src/ff.c **** 		Files[i].ctr = 0;
 365              		.loc 1 827 3 is_stmt 1 view .LVU104
 828:./Libraries/FatFs/Src/ff.c **** 	}
 366              		.loc 1 828 3 view .LVU105
 828:./Libraries/FatFs/Src/ff.c **** 	}
 367              		.loc 1 828 16 is_stmt 0 view .LVU106
 368 0090 9081     		strh	r0, [r2, #12]	@ movhi
 831:./Libraries/FatFs/Src/ff.c **** 
 369              		.loc 1 831 2 is_stmt 1 view .LVU107
 370              	.L31:
 833:./Libraries/FatFs/Src/ff.c **** 
 371              		.loc 1 833 15 is_stmt 0 discriminator 4 view .LVU108
 372 0092 3344     		add	r3, r3, r6
 373              		.loc 1 836 1 discriminator 4 view .LVU109
 374 0094 2046     		mov	r0, r4
 375 0096 F0BC     		pop	{r4, r5, r6, r7}
 376              	.LCFI10:
 377              		.cfi_remember_state
 378              		.cfi_restore 7
 379              		.cfi_restore 6
 380              		.cfi_restore 5
 381              		.cfi_restore 4
 382              		.cfi_def_cfa_offset 0
 833:./Libraries/FatFs/Src/ff.c **** 
 383              		.loc 1 833 15 discriminator 4 view .LVU110
 384 0098 9981     		strh	r1, [r3, #12]	@ movhi
 835:./Libraries/FatFs/Src/ff.c **** }
 385              		.loc 1 835 2 is_stmt 1 discriminator 4 view .LVU111
 386              		.loc 1 836 1 is_stmt 0 discriminator 4 view .LVU112
 387 009a 7047     		bx	lr
 388              	.LVL28:
 389              	.L43:
 390              	.LCFI11:
 391              		.cfi_restore_state
 823:./Libraries/FatFs/Src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 392              		.loc 1 823 28 view .LVU113
 393 009c 0224     		movs	r4, #2
 823:./Libraries/FatFs/Src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 394              		.loc 1 823 45 view .LVU114
 395 009e 0122     		movs	r2, #1
 396 00a0 E6E7     		b	.L29
 397              	.L46:
 398 00a2 00BF     		.align	2
 399              	.L45:
 400 00a4 00000000 		.word	.LANCHOR0
 401              		.cfi_endproc
 402              	.LFE347:
 404              		.section	.text.get_ldnumber,"ax",%progbits
 405              		.align	1
 406              		.p2align 2,,3
 407              		.syntax unified
 408              		.thumb
ARM GAS  /tmp/ccaQXGqa.s 			page 24


 409              		.thumb_func
 410              		.fpu fpv5-d16
 412              	get_ldnumber:
 413              	.LVL29:
 414              	.LFB371:
 837:./Libraries/FatFs/Src/ff.c **** 
 838:./Libraries/FatFs/Src/ff.c **** 
 839:./Libraries/FatFs/Src/ff.c **** static
 840:./Libraries/FatFs/Src/ff.c **** FRESULT dec_lock (	/* Decrement object open counter */
 841:./Libraries/FatFs/Src/ff.c **** 	UINT i			/* Semaphore index (1..) */
 842:./Libraries/FatFs/Src/ff.c **** )
 843:./Libraries/FatFs/Src/ff.c **** {
 844:./Libraries/FatFs/Src/ff.c **** 	WORD n;
 845:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 846:./Libraries/FatFs/Src/ff.c **** 
 847:./Libraries/FatFs/Src/ff.c **** 
 848:./Libraries/FatFs/Src/ff.c **** 	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 849:./Libraries/FatFs/Src/ff.c **** 		n = Files[i].ctr;
 850:./Libraries/FatFs/Src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 851:./Libraries/FatFs/Src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 852:./Libraries/FatFs/Src/ff.c **** 		Files[i].ctr = n;
 853:./Libraries/FatFs/Src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 854:./Libraries/FatFs/Src/ff.c **** 		res = FR_OK;
 855:./Libraries/FatFs/Src/ff.c **** 	} else {
 856:./Libraries/FatFs/Src/ff.c **** 		res = FR_INT_ERR;			/* Invalid index nunber */
 857:./Libraries/FatFs/Src/ff.c **** 	}
 858:./Libraries/FatFs/Src/ff.c **** 	return res;
 859:./Libraries/FatFs/Src/ff.c **** }
 860:./Libraries/FatFs/Src/ff.c **** 
 861:./Libraries/FatFs/Src/ff.c **** 
 862:./Libraries/FatFs/Src/ff.c **** static
 863:./Libraries/FatFs/Src/ff.c **** void clear_lock (	/* Clear lock entries of the volume */
 864:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs
 865:./Libraries/FatFs/Src/ff.c **** )
 866:./Libraries/FatFs/Src/ff.c **** {
 867:./Libraries/FatFs/Src/ff.c **** 	UINT i;
 868:./Libraries/FatFs/Src/ff.c **** 
 869:./Libraries/FatFs/Src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {
 870:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 871:./Libraries/FatFs/Src/ff.c **** 	}
 872:./Libraries/FatFs/Src/ff.c **** }
 873:./Libraries/FatFs/Src/ff.c **** 
 874:./Libraries/FatFs/Src/ff.c **** #endif	/* _FS_LOCK != 0 */
 875:./Libraries/FatFs/Src/ff.c **** 
 876:./Libraries/FatFs/Src/ff.c **** 
 877:./Libraries/FatFs/Src/ff.c **** 
 878:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
 879:./Libraries/FatFs/Src/ff.c **** /* Move/Flush disk access window in the file system object               */
 880:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
 881:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 882:./Libraries/FatFs/Src/ff.c **** static
 883:./Libraries/FatFs/Src/ff.c **** FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERROR */
 884:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs			/* File system object */
 885:./Libraries/FatFs/Src/ff.c **** )
 886:./Libraries/FatFs/Src/ff.c **** {
 887:./Libraries/FatFs/Src/ff.c **** 	DWORD wsect;
 888:./Libraries/FatFs/Src/ff.c **** 	UINT nf;
ARM GAS  /tmp/ccaQXGqa.s 			page 25


 889:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_OK;
 890:./Libraries/FatFs/Src/ff.c **** 
 891:./Libraries/FatFs/Src/ff.c **** 
 892:./Libraries/FatFs/Src/ff.c **** 	if (fs->wflag) {	/* Write back the sector if it is dirty */
 893:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 894:./Libraries/FatFs/Src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 895:./Libraries/FatFs/Src/ff.c **** 			res = FR_DISK_ERR;
 896:./Libraries/FatFs/Src/ff.c **** 		} else {
 897:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 0;
 898:./Libraries/FatFs/Src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 899:./Libraries/FatFs/Src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 900:./Libraries/FatFs/Src/ff.c **** 					wsect += fs->fsize;
 901:./Libraries/FatFs/Src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 902:./Libraries/FatFs/Src/ff.c **** 				}
 903:./Libraries/FatFs/Src/ff.c **** 			}
 904:./Libraries/FatFs/Src/ff.c **** 		}
 905:./Libraries/FatFs/Src/ff.c **** 	}
 906:./Libraries/FatFs/Src/ff.c **** 	return res;
 907:./Libraries/FatFs/Src/ff.c **** }
 908:./Libraries/FatFs/Src/ff.c **** #endif
 909:./Libraries/FatFs/Src/ff.c **** 
 910:./Libraries/FatFs/Src/ff.c **** 
 911:./Libraries/FatFs/Src/ff.c **** static
 912:./Libraries/FatFs/Src/ff.c **** FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERROR */
 913:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 914:./Libraries/FatFs/Src/ff.c **** 	DWORD sector		/* Sector number to make appearance in the fs->win[] */
 915:./Libraries/FatFs/Src/ff.c **** )
 916:./Libraries/FatFs/Src/ff.c **** {
 917:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_OK;
 918:./Libraries/FatFs/Src/ff.c **** 
 919:./Libraries/FatFs/Src/ff.c **** 
 920:./Libraries/FatFs/Src/ff.c **** 	if (sector != fs->winsect) {	/* Window offset changed? */
 921:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 922:./Libraries/FatFs/Src/ff.c **** 		res = sync_window(fs);		/* Write-back changes */
 923:./Libraries/FatFs/Src/ff.c **** #endif
 924:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {			/* Fill sector window with new data */
 925:./Libraries/FatFs/Src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 926:./Libraries/FatFs/Src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 927:./Libraries/FatFs/Src/ff.c **** 				res = FR_DISK_ERR;
 928:./Libraries/FatFs/Src/ff.c **** 			}
 929:./Libraries/FatFs/Src/ff.c **** 			fs->winsect = sector;
 930:./Libraries/FatFs/Src/ff.c **** 		}
 931:./Libraries/FatFs/Src/ff.c **** 	}
 932:./Libraries/FatFs/Src/ff.c **** 	return res;
 933:./Libraries/FatFs/Src/ff.c **** }
 934:./Libraries/FatFs/Src/ff.c **** 
 935:./Libraries/FatFs/Src/ff.c **** 
 936:./Libraries/FatFs/Src/ff.c **** 
 937:./Libraries/FatFs/Src/ff.c **** 
 938:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 939:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
 940:./Libraries/FatFs/Src/ff.c **** /* Synchronize file system and strage device                             */
 941:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
 942:./Libraries/FatFs/Src/ff.c **** 
 943:./Libraries/FatFs/Src/ff.c **** static
 944:./Libraries/FatFs/Src/ff.c **** FRESULT sync_fs (	/* FR_OK:succeeded, !=0:error */
 945:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs		/* File system object */
ARM GAS  /tmp/ccaQXGqa.s 			page 26


 946:./Libraries/FatFs/Src/ff.c **** )
 947:./Libraries/FatFs/Src/ff.c **** {
 948:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 949:./Libraries/FatFs/Src/ff.c **** 
 950:./Libraries/FatFs/Src/ff.c **** 
 951:./Libraries/FatFs/Src/ff.c **** 	res = sync_window(fs);
 952:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 953:./Libraries/FatFs/Src/ff.c **** 		/* Update FSInfo sector if needed */
 954:./Libraries/FatFs/Src/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
 955:./Libraries/FatFs/Src/ff.c **** 			/* Create FSInfo structure */
 956:./Libraries/FatFs/Src/ff.c **** 			mem_set(fs->win, 0, SS(fs));
 957:./Libraries/FatFs/Src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 958:./Libraries/FatFs/Src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 959:./Libraries/FatFs/Src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 960:./Libraries/FatFs/Src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 961:./Libraries/FatFs/Src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 962:./Libraries/FatFs/Src/ff.c **** 			/* Write it into the FSInfo sector */
 963:./Libraries/FatFs/Src/ff.c **** 			fs->winsect = fs->volbase + 1;
 964:./Libraries/FatFs/Src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 965:./Libraries/FatFs/Src/ff.c **** 			fs->fsi_flag = 0;
 966:./Libraries/FatFs/Src/ff.c **** 		}
 967:./Libraries/FatFs/Src/ff.c **** 		/* Make sure that no pending write process in the physical drive */
 968:./Libraries/FatFs/Src/ff.c **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
 969:./Libraries/FatFs/Src/ff.c **** 	}
 970:./Libraries/FatFs/Src/ff.c **** 
 971:./Libraries/FatFs/Src/ff.c **** 	return res;
 972:./Libraries/FatFs/Src/ff.c **** }
 973:./Libraries/FatFs/Src/ff.c **** 
 974:./Libraries/FatFs/Src/ff.c **** #endif
 975:./Libraries/FatFs/Src/ff.c **** 
 976:./Libraries/FatFs/Src/ff.c **** 
 977:./Libraries/FatFs/Src/ff.c **** 
 978:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
 979:./Libraries/FatFs/Src/ff.c **** /* Get sector# from cluster#                                             */
 980:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
 981:./Libraries/FatFs/Src/ff.c **** 
 982:./Libraries/FatFs/Src/ff.c **** static
 983:./Libraries/FatFs/Src/ff.c **** DWORD clust2sect (	/* !=0:Sector number, 0:Failed (invalid cluster#) */
 984:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 985:./Libraries/FatFs/Src/ff.c **** 	DWORD clst		/* Cluster# to be converted */
 986:./Libraries/FatFs/Src/ff.c **** )
 987:./Libraries/FatFs/Src/ff.c **** {
 988:./Libraries/FatFs/Src/ff.c **** 	clst -= 2;
 989:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 990:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 991:./Libraries/FatFs/Src/ff.c **** }
 992:./Libraries/FatFs/Src/ff.c **** 
 993:./Libraries/FatFs/Src/ff.c **** 
 994:./Libraries/FatFs/Src/ff.c **** 
 995:./Libraries/FatFs/Src/ff.c **** 
 996:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
 997:./Libraries/FatFs/Src/ff.c **** /* FAT access - Read value of a FAT entry                                */
 998:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
 999:./Libraries/FatFs/Src/ff.c **** 
1000:./Libraries/FatFs/Src/ff.c **** static
1001:./Libraries/FatFs/Src/ff.c **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
1002:./Libraries/FatFs/Src/ff.c **** 	_FDID* obj,	/* Corresponding object */
ARM GAS  /tmp/ccaQXGqa.s 			page 27


1003:./Libraries/FatFs/Src/ff.c **** 	DWORD clst	/* Cluster number to get the value */
1004:./Libraries/FatFs/Src/ff.c **** )
1005:./Libraries/FatFs/Src/ff.c **** {
1006:./Libraries/FatFs/Src/ff.c **** 	UINT wc, bc;
1007:./Libraries/FatFs/Src/ff.c **** 	DWORD val;
1008:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = obj->fs;
1009:./Libraries/FatFs/Src/ff.c **** 
1010:./Libraries/FatFs/Src/ff.c **** 
1011:./Libraries/FatFs/Src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
1012:./Libraries/FatFs/Src/ff.c **** 		val = 1;	/* Internal error */
1013:./Libraries/FatFs/Src/ff.c **** 
1014:./Libraries/FatFs/Src/ff.c **** 	} else {
1015:./Libraries/FatFs/Src/ff.c **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
1016:./Libraries/FatFs/Src/ff.c **** 
1017:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
1018:./Libraries/FatFs/Src/ff.c **** 		case FS_FAT12 :
1019:./Libraries/FatFs/Src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1020:./Libraries/FatFs/Src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1021:./Libraries/FatFs/Src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
1022:./Libraries/FatFs/Src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1023:./Libraries/FatFs/Src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
1024:./Libraries/FatFs/Src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
1025:./Libraries/FatFs/Src/ff.c **** 			break;
1026:./Libraries/FatFs/Src/ff.c **** 
1027:./Libraries/FatFs/Src/ff.c **** 		case FS_FAT16 :
1028:./Libraries/FatFs/Src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
1029:./Libraries/FatFs/Src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
1030:./Libraries/FatFs/Src/ff.c **** 			break;
1031:./Libraries/FatFs/Src/ff.c **** 
1032:./Libraries/FatFs/Src/ff.c **** 		case FS_FAT32 :
1033:./Libraries/FatFs/Src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1034:./Libraries/FatFs/Src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
1035:./Libraries/FatFs/Src/ff.c **** 			break;
1036:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
1037:./Libraries/FatFs/Src/ff.c **** 		case FS_EXFAT :
1038:./Libraries/FatFs/Src/ff.c **** 			if (obj->objsize) {
1039:./Libraries/FatFs/Src/ff.c **** 				DWORD cofs = clst - obj->sclust;	/* Offset from start cluster */
1040:./Libraries/FatFs/Src/ff.c **** 				DWORD clen = (DWORD)((obj->objsize - 1) / SS(fs)) / fs->csize;	/* Number of clusters - 1 */
1041:./Libraries/FatFs/Src/ff.c **** 
1042:./Libraries/FatFs/Src/ff.c **** 				if (obj->stat == 2) {	/* Is there no valid chain on the FAT? */
1043:./Libraries/FatFs/Src/ff.c **** 					if (cofs <= clen) {
1044:./Libraries/FatFs/Src/ff.c **** 						val = (cofs == clen) ? 0x7FFFFFFF : clst + 1;	/* Generate the value */
1045:./Libraries/FatFs/Src/ff.c **** 						break;
1046:./Libraries/FatFs/Src/ff.c **** 					}
1047:./Libraries/FatFs/Src/ff.c **** 				}
1048:./Libraries/FatFs/Src/ff.c **** 				if (obj->stat == 3 && cofs < obj->n_cont) {	/* Is it in the 1st fragment? */
1049:./Libraries/FatFs/Src/ff.c **** 					val = clst + 1; 	/* Generate the value */
1050:./Libraries/FatFs/Src/ff.c **** 					break;
1051:./Libraries/FatFs/Src/ff.c **** 				}
1052:./Libraries/FatFs/Src/ff.c **** 				if (obj->stat != 2) {	/* Get value from FAT if FAT chain is valid */
1053:./Libraries/FatFs/Src/ff.c **** 					if (obj->n_frag != 0) {	/* Is it on the growing edge? */
1054:./Libraries/FatFs/Src/ff.c **** 						val = 0x7FFFFFFF;	/* Generate EOC */
1055:./Libraries/FatFs/Src/ff.c **** 					} else {
1056:./Libraries/FatFs/Src/ff.c **** 						if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1057:./Libraries/FatFs/Src/ff.c **** 						val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x7FFFFFFF;
1058:./Libraries/FatFs/Src/ff.c **** 					}
1059:./Libraries/FatFs/Src/ff.c **** 					break;
ARM GAS  /tmp/ccaQXGqa.s 			page 28


1060:./Libraries/FatFs/Src/ff.c **** 				}
1061:./Libraries/FatFs/Src/ff.c **** 			}
1062:./Libraries/FatFs/Src/ff.c **** 			/* go to default */
1063:./Libraries/FatFs/Src/ff.c **** #endif
1064:./Libraries/FatFs/Src/ff.c **** 		default:
1065:./Libraries/FatFs/Src/ff.c **** 			val = 1;	/* Internal error */
1066:./Libraries/FatFs/Src/ff.c **** 		}
1067:./Libraries/FatFs/Src/ff.c **** 	}
1068:./Libraries/FatFs/Src/ff.c **** 
1069:./Libraries/FatFs/Src/ff.c **** 	return val;
1070:./Libraries/FatFs/Src/ff.c **** }
1071:./Libraries/FatFs/Src/ff.c **** 
1072:./Libraries/FatFs/Src/ff.c **** 
1073:./Libraries/FatFs/Src/ff.c **** 
1074:./Libraries/FatFs/Src/ff.c **** 
1075:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
1076:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1077:./Libraries/FatFs/Src/ff.c **** /* FAT access - Change value of a FAT entry                              */
1078:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1079:./Libraries/FatFs/Src/ff.c **** 
1080:./Libraries/FatFs/Src/ff.c **** static
1081:./Libraries/FatFs/Src/ff.c **** FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
1082:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
1083:./Libraries/FatFs/Src/ff.c **** 	DWORD clst,		/* FAT index number (cluster number) to be changed */
1084:./Libraries/FatFs/Src/ff.c **** 	DWORD val		/* New value to be set to the entry */
1085:./Libraries/FatFs/Src/ff.c **** )
1086:./Libraries/FatFs/Src/ff.c **** {
1087:./Libraries/FatFs/Src/ff.c **** 	UINT bc;
1088:./Libraries/FatFs/Src/ff.c **** 	BYTE *p;
1089:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_INT_ERR;
1090:./Libraries/FatFs/Src/ff.c **** 
1091:./Libraries/FatFs/Src/ff.c **** 	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
1092:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
1093:./Libraries/FatFs/Src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
1094:./Libraries/FatFs/Src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1095:./Libraries/FatFs/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1096:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
1097:./Libraries/FatFs/Src/ff.c **** 			p = fs->win + bc++ % SS(fs);
1098:./Libraries/FatFs/Src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
1099:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
1100:./Libraries/FatFs/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1101:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
1102:./Libraries/FatFs/Src/ff.c **** 			p = fs->win + bc % SS(fs);
1103:./Libraries/FatFs/Src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
1104:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
1105:./Libraries/FatFs/Src/ff.c **** 			break;
1106:./Libraries/FatFs/Src/ff.c **** 
1107:./Libraries/FatFs/Src/ff.c **** 		case FS_FAT16 :	/* WORD aligned items */
1108:./Libraries/FatFs/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
1109:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
1110:./Libraries/FatFs/Src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
1111:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
1112:./Libraries/FatFs/Src/ff.c **** 			break;
1113:./Libraries/FatFs/Src/ff.c **** 
1114:./Libraries/FatFs/Src/ff.c **** 		case FS_FAT32 :	/* DWORD aligned items */
1115:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
1116:./Libraries/FatFs/Src/ff.c **** 		case FS_EXFAT :
ARM GAS  /tmp/ccaQXGqa.s 			page 29


1117:./Libraries/FatFs/Src/ff.c **** #endif
1118:./Libraries/FatFs/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
1119:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
1120:./Libraries/FatFs/Src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1121:./Libraries/FatFs/Src/ff.c **** 				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
1122:./Libraries/FatFs/Src/ff.c **** 			}
1123:./Libraries/FatFs/Src/ff.c **** 			st_dword(fs->win + clst * 4 % SS(fs), val);
1124:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
1125:./Libraries/FatFs/Src/ff.c **** 			break;
1126:./Libraries/FatFs/Src/ff.c **** 		}
1127:./Libraries/FatFs/Src/ff.c **** 	}
1128:./Libraries/FatFs/Src/ff.c **** 	return res;
1129:./Libraries/FatFs/Src/ff.c **** }
1130:./Libraries/FatFs/Src/ff.c **** 
1131:./Libraries/FatFs/Src/ff.c **** #endif /* !_FS_READONLY */
1132:./Libraries/FatFs/Src/ff.c **** 
1133:./Libraries/FatFs/Src/ff.c **** 
1134:./Libraries/FatFs/Src/ff.c **** 
1135:./Libraries/FatFs/Src/ff.c **** 
1136:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
1137:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1138:./Libraries/FatFs/Src/ff.c **** /* exFAT: Accessing FAT and Allocation Bitmap                            */
1139:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1140:./Libraries/FatFs/Src/ff.c **** 
1141:./Libraries/FatFs/Src/ff.c **** /*--------------------------------------*/
1142:./Libraries/FatFs/Src/ff.c **** /* Find a contiguous free cluster block */
1143:./Libraries/FatFs/Src/ff.c **** /*--------------------------------------*/
1144:./Libraries/FatFs/Src/ff.c **** 
1145:./Libraries/FatFs/Src/ff.c **** static
1146:./Libraries/FatFs/Src/ff.c **** DWORD find_bitmap (	/* 0:Not found, 2..:Cluster block found, 0xFFFFFFFF:Disk error */
1147:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,	/* File system object */
1148:./Libraries/FatFs/Src/ff.c **** 	DWORD clst,	/* Cluster number to scan from */
1149:./Libraries/FatFs/Src/ff.c **** 	DWORD ncl	/* Number of contiguous clusters to find (1..) */
1150:./Libraries/FatFs/Src/ff.c **** )
1151:./Libraries/FatFs/Src/ff.c **** {
1152:./Libraries/FatFs/Src/ff.c **** 	BYTE bm, bv;
1153:./Libraries/FatFs/Src/ff.c **** 	UINT i;
1154:./Libraries/FatFs/Src/ff.c **** 	DWORD val, scl, ctr;
1155:./Libraries/FatFs/Src/ff.c **** 
1156:./Libraries/FatFs/Src/ff.c **** 
1157:./Libraries/FatFs/Src/ff.c **** 	clst -= 2;	/* The first bit in the bitmap corresponds to cluster #2 */
1158:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) clst = 0;
1159:./Libraries/FatFs/Src/ff.c **** 	scl = val = clst; ctr = 0;
1160:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
1161:./Libraries/FatFs/Src/ff.c **** 		if (move_window(fs, fs->database + val / 8 / SS(fs)) != FR_OK) return 0xFFFFFFFF;	/* (assuming bi
1162:./Libraries/FatFs/Src/ff.c **** 		i = val / 8 % SS(fs); bm = 1 << (val % 8);
1163:./Libraries/FatFs/Src/ff.c **** 		do {
1164:./Libraries/FatFs/Src/ff.c **** 			do {
1165:./Libraries/FatFs/Src/ff.c **** 				bv = fs->win[i] & bm; bm <<= 1;		/* Get bit value */
1166:./Libraries/FatFs/Src/ff.c **** 				if (++val >= fs->n_fatent - 2) {	/* Next cluster (with wrap-around) */
1167:./Libraries/FatFs/Src/ff.c **** 					val = 0; bm = 0; i = SS(fs);
1168:./Libraries/FatFs/Src/ff.c **** 				}
1169:./Libraries/FatFs/Src/ff.c **** 				if (!bv) {	/* Is it a free cluster? */
1170:./Libraries/FatFs/Src/ff.c **** 					if (++ctr == ncl) return scl + 2;	/* Check if run length is sufficient for required */
1171:./Libraries/FatFs/Src/ff.c **** 				} else {
1172:./Libraries/FatFs/Src/ff.c **** 					scl = val; ctr = 0;		/* Encountered a cluster in-use, restart to scan */
1173:./Libraries/FatFs/Src/ff.c **** 				}
ARM GAS  /tmp/ccaQXGqa.s 			page 30


1174:./Libraries/FatFs/Src/ff.c **** 				if (val == clst) return 0;	/* All cluster scanned? */
1175:./Libraries/FatFs/Src/ff.c **** 			} while (bm);
1176:./Libraries/FatFs/Src/ff.c **** 			bm = 1;
1177:./Libraries/FatFs/Src/ff.c **** 		} while (++i < SS(fs));
1178:./Libraries/FatFs/Src/ff.c **** 	}
1179:./Libraries/FatFs/Src/ff.c **** }
1180:./Libraries/FatFs/Src/ff.c **** 
1181:./Libraries/FatFs/Src/ff.c **** 
1182:./Libraries/FatFs/Src/ff.c **** /*----------------------------------------*/
1183:./Libraries/FatFs/Src/ff.c **** /* Set/Clear a block of allocation bitmap */
1184:./Libraries/FatFs/Src/ff.c **** /*----------------------------------------*/
1185:./Libraries/FatFs/Src/ff.c **** 
1186:./Libraries/FatFs/Src/ff.c **** static
1187:./Libraries/FatFs/Src/ff.c **** FRESULT change_bitmap (
1188:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,	/* File system object */
1189:./Libraries/FatFs/Src/ff.c **** 	DWORD clst,	/* Cluster number to change from */
1190:./Libraries/FatFs/Src/ff.c **** 	DWORD ncl,	/* Number of clusters to be changed */
1191:./Libraries/FatFs/Src/ff.c **** 	int bv		/* bit value to be set (0 or 1) */
1192:./Libraries/FatFs/Src/ff.c **** )
1193:./Libraries/FatFs/Src/ff.c **** {
1194:./Libraries/FatFs/Src/ff.c **** 	BYTE bm;
1195:./Libraries/FatFs/Src/ff.c **** 	UINT i;
1196:./Libraries/FatFs/Src/ff.c **** 	DWORD sect;
1197:./Libraries/FatFs/Src/ff.c **** 
1198:./Libraries/FatFs/Src/ff.c **** 	clst -= 2;	/* The first bit corresponds to cluster #2 */
1199:./Libraries/FatFs/Src/ff.c **** 	sect = fs->database + clst / 8 / SS(fs);	/* Sector address (assuming bitmap is located top of the 
1200:./Libraries/FatFs/Src/ff.c **** 	i = clst / 8 % SS(fs);						/* Byte offset in the sector */
1201:./Libraries/FatFs/Src/ff.c **** 	bm = 1 << (clst % 8);						/* Bit mask in the byte */
1202:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
1203:./Libraries/FatFs/Src/ff.c **** 		if (move_window(fs, sect++) != FR_OK) return FR_DISK_ERR;
1204:./Libraries/FatFs/Src/ff.c **** 		do {
1205:./Libraries/FatFs/Src/ff.c **** 			do {
1206:./Libraries/FatFs/Src/ff.c **** 				if (bv == (int)((fs->win[i] & bm) != 0)) return FR_INT_ERR;	/* Is the bit expected value? */
1207:./Libraries/FatFs/Src/ff.c **** 				fs->win[i] ^= bm;	/* Flip the bit */
1208:./Libraries/FatFs/Src/ff.c **** 				fs->wflag = 1;
1209:./Libraries/FatFs/Src/ff.c **** 				if (--ncl == 0) return FR_OK;	/* All bits processed? */
1210:./Libraries/FatFs/Src/ff.c **** 			} while (bm <<= 1);		/* Next bit */
1211:./Libraries/FatFs/Src/ff.c **** 			bm = 1;
1212:./Libraries/FatFs/Src/ff.c **** 		} while (++i < SS(fs));		/* Next byte */
1213:./Libraries/FatFs/Src/ff.c **** 		i = 0;
1214:./Libraries/FatFs/Src/ff.c **** 	}
1215:./Libraries/FatFs/Src/ff.c **** }
1216:./Libraries/FatFs/Src/ff.c **** 
1217:./Libraries/FatFs/Src/ff.c **** 
1218:./Libraries/FatFs/Src/ff.c **** /*---------------------------------------------*/
1219:./Libraries/FatFs/Src/ff.c **** /* Fill the first fragment of the FAT chain    */
1220:./Libraries/FatFs/Src/ff.c **** /*---------------------------------------------*/
1221:./Libraries/FatFs/Src/ff.c **** 
1222:./Libraries/FatFs/Src/ff.c **** static
1223:./Libraries/FatFs/Src/ff.c **** FRESULT fill_first_frag (
1224:./Libraries/FatFs/Src/ff.c **** 	_FDID* obj	/* Pointer to the corresponding object */
1225:./Libraries/FatFs/Src/ff.c **** )
1226:./Libraries/FatFs/Src/ff.c **** {
1227:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
1228:./Libraries/FatFs/Src/ff.c **** 	DWORD cl, n;
1229:./Libraries/FatFs/Src/ff.c **** 
1230:./Libraries/FatFs/Src/ff.c **** 	if (obj->stat == 3) {	/* Has the object been changed 'fragmented'? */
ARM GAS  /tmp/ccaQXGqa.s 			page 31


1231:./Libraries/FatFs/Src/ff.c **** 		for (cl = obj->sclust, n = obj->n_cont; n; cl++, n--) {	/* Create cluster chain on the FAT */
1232:./Libraries/FatFs/Src/ff.c **** 			res = put_fat(obj->fs, cl, cl + 1);
1233:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) return res;
1234:./Libraries/FatFs/Src/ff.c **** 		}
1235:./Libraries/FatFs/Src/ff.c **** 		obj->stat = 0;	/* Change status 'FAT chain is valid' */
1236:./Libraries/FatFs/Src/ff.c **** 	}
1237:./Libraries/FatFs/Src/ff.c **** 	return FR_OK;
1238:./Libraries/FatFs/Src/ff.c **** }
1239:./Libraries/FatFs/Src/ff.c **** 
1240:./Libraries/FatFs/Src/ff.c **** 
1241:./Libraries/FatFs/Src/ff.c **** /*---------------------------------------------*/
1242:./Libraries/FatFs/Src/ff.c **** /* Fill the last fragment of the FAT chain     */
1243:./Libraries/FatFs/Src/ff.c **** /*---------------------------------------------*/
1244:./Libraries/FatFs/Src/ff.c **** 
1245:./Libraries/FatFs/Src/ff.c **** static
1246:./Libraries/FatFs/Src/ff.c **** FRESULT fill_last_frag (
1247:./Libraries/FatFs/Src/ff.c **** 	_FDID* obj,	/* Pointer to the corresponding object */
1248:./Libraries/FatFs/Src/ff.c **** 	DWORD lcl,	/* Last cluster of the fragment */
1249:./Libraries/FatFs/Src/ff.c **** 	DWORD term	/* Value to set the last FAT entry */
1250:./Libraries/FatFs/Src/ff.c **** )
1251:./Libraries/FatFs/Src/ff.c **** {
1252:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
1253:./Libraries/FatFs/Src/ff.c **** 
1254:./Libraries/FatFs/Src/ff.c **** 	while (obj->n_frag > 0) {	/* Create the last chain on the FAT */
1255:./Libraries/FatFs/Src/ff.c **** 		res = put_fat(obj->fs, lcl - obj->n_frag + 1, (obj->n_frag > 1) ? lcl - obj->n_frag + 2 : term);
1256:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) return res;
1257:./Libraries/FatFs/Src/ff.c **** 		obj->n_frag--;
1258:./Libraries/FatFs/Src/ff.c **** 	}
1259:./Libraries/FatFs/Src/ff.c **** 	return FR_OK;
1260:./Libraries/FatFs/Src/ff.c **** }
1261:./Libraries/FatFs/Src/ff.c **** 
1262:./Libraries/FatFs/Src/ff.c **** #endif	/* _FS_EXFAT && !_FS_READONLY */
1263:./Libraries/FatFs/Src/ff.c **** 
1264:./Libraries/FatFs/Src/ff.c **** 
1265:./Libraries/FatFs/Src/ff.c **** 
1266:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
1267:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1268:./Libraries/FatFs/Src/ff.c **** /* FAT handling - Remove a cluster chain                                 */
1269:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1270:./Libraries/FatFs/Src/ff.c **** static
1271:./Libraries/FatFs/Src/ff.c **** FRESULT remove_chain (	/* FR_OK(0):succeeded, !=0:error */
1272:./Libraries/FatFs/Src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1273:./Libraries/FatFs/Src/ff.c **** 	DWORD clst,			/* Cluster to remove a chain from */
1274:./Libraries/FatFs/Src/ff.c **** 	DWORD pclst			/* Previous cluster of clst (0:an entire chain) */
1275:./Libraries/FatFs/Src/ff.c **** )
1276:./Libraries/FatFs/Src/ff.c **** {
1277:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_OK;
1278:./Libraries/FatFs/Src/ff.c **** 	DWORD nxt;
1279:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = obj->fs;
1280:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1281:./Libraries/FatFs/Src/ff.c **** 	DWORD scl = clst, ecl = clst;
1282:./Libraries/FatFs/Src/ff.c **** #endif
1283:./Libraries/FatFs/Src/ff.c **** #if _USE_TRIM
1284:./Libraries/FatFs/Src/ff.c **** 	DWORD rt[2];
1285:./Libraries/FatFs/Src/ff.c **** #endif
1286:./Libraries/FatFs/Src/ff.c **** 
1287:./Libraries/FatFs/Src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
ARM GAS  /tmp/ccaQXGqa.s 			page 32


1288:./Libraries/FatFs/Src/ff.c **** 
1289:./Libraries/FatFs/Src/ff.c **** 	/* Mark the previous cluster 'EOC' on the FAT if it exists */
1290:./Libraries/FatFs/Src/ff.c **** 	if (pclst && (!_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
1291:./Libraries/FatFs/Src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
1292:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) return res;
1293:./Libraries/FatFs/Src/ff.c **** 	}
1294:./Libraries/FatFs/Src/ff.c **** 
1295:./Libraries/FatFs/Src/ff.c **** 	/* Remove the chain */
1296:./Libraries/FatFs/Src/ff.c **** 	do {
1297:./Libraries/FatFs/Src/ff.c **** 		nxt = get_fat(obj, clst);			/* Get cluster status */
1298:./Libraries/FatFs/Src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
1299:./Libraries/FatFs/Src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
1300:./Libraries/FatFs/Src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
1301:./Libraries/FatFs/Src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1302:./Libraries/FatFs/Src/ff.c **** 			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
1303:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) return res;
1304:./Libraries/FatFs/Src/ff.c **** 		}
1305:./Libraries/FatFs/Src/ff.c **** 		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
1306:./Libraries/FatFs/Src/ff.c **** 			fs->free_clst++;
1307:./Libraries/FatFs/Src/ff.c **** 			fs->fsi_flag |= 1;
1308:./Libraries/FatFs/Src/ff.c **** 		}
1309:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1310:./Libraries/FatFs/Src/ff.c **** 		if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1311:./Libraries/FatFs/Src/ff.c **** 			ecl = nxt;
1312:./Libraries/FatFs/Src/ff.c **** 		} else {				/* End of contiguous cluster block */
1313:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
1314:./Libraries/FatFs/Src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
1315:./Libraries/FatFs/Src/ff.c **** 				res = change_bitmap(fs, scl, ecl - scl + 1, 0);	/* Mark the cluster block 'free' on the bitmap 
1316:./Libraries/FatFs/Src/ff.c **** 				if (res != FR_OK) return res;
1317:./Libraries/FatFs/Src/ff.c **** 			}
1318:./Libraries/FatFs/Src/ff.c **** #endif
1319:./Libraries/FatFs/Src/ff.c **** #if _USE_TRIM
1320:./Libraries/FatFs/Src/ff.c **** 			rt[0] = clust2sect(fs, scl);					/* Start sector */
1321:./Libraries/FatFs/Src/ff.c **** 			rt[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
1322:./Libraries/FatFs/Src/ff.c **** 			disk_ioctl(fs->drv, CTRL_TRIM, rt);				/* Inform device the block can be erased */
1323:./Libraries/FatFs/Src/ff.c **** #endif
1324:./Libraries/FatFs/Src/ff.c **** 			scl = ecl = nxt;
1325:./Libraries/FatFs/Src/ff.c **** 		}
1326:./Libraries/FatFs/Src/ff.c **** #endif
1327:./Libraries/FatFs/Src/ff.c **** 		clst = nxt;					/* Next cluster */
1328:./Libraries/FatFs/Src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
1329:./Libraries/FatFs/Src/ff.c **** 
1330:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
1331:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
1332:./Libraries/FatFs/Src/ff.c **** 		if (pclst == 0) {	/* Does the object have no chain? */
1333:./Libraries/FatFs/Src/ff.c **** 			obj->stat = 0;		/* Change the object status 'initial' */
1334:./Libraries/FatFs/Src/ff.c **** 		} else {
1335:./Libraries/FatFs/Src/ff.c **** 			if (obj->stat == 3 && pclst >= obj->sclust && pclst <= obj->sclust + obj->n_cont) {	/* Did the c
1336:./Libraries/FatFs/Src/ff.c **** 				obj->stat = 2;	/* Change the object status 'contiguous' */
1337:./Libraries/FatFs/Src/ff.c **** 			}
1338:./Libraries/FatFs/Src/ff.c **** 		}
1339:./Libraries/FatFs/Src/ff.c **** 	}
1340:./Libraries/FatFs/Src/ff.c **** #endif
1341:./Libraries/FatFs/Src/ff.c **** 	return FR_OK;
1342:./Libraries/FatFs/Src/ff.c **** }
1343:./Libraries/FatFs/Src/ff.c **** 
1344:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 33


1345:./Libraries/FatFs/Src/ff.c **** 
1346:./Libraries/FatFs/Src/ff.c **** 
1347:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1348:./Libraries/FatFs/Src/ff.c **** /* FAT handling - Stretch a chain or Create a new chain                  */
1349:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1350:./Libraries/FatFs/Src/ff.c **** static
1351:./Libraries/FatFs/Src/ff.c **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1352:./Libraries/FatFs/Src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1353:./Libraries/FatFs/Src/ff.c **** 	DWORD clst			/* Cluster# to stretch, 0:Create a new chain */
1354:./Libraries/FatFs/Src/ff.c **** )
1355:./Libraries/FatFs/Src/ff.c **** {
1356:./Libraries/FatFs/Src/ff.c **** 	DWORD cs, ncl, scl;
1357:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
1358:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = obj->fs;
1359:./Libraries/FatFs/Src/ff.c **** 
1360:./Libraries/FatFs/Src/ff.c **** 
1361:./Libraries/FatFs/Src/ff.c **** 	if (clst == 0) {	/* Create a new chain */
1362:./Libraries/FatFs/Src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
1363:./Libraries/FatFs/Src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
1364:./Libraries/FatFs/Src/ff.c **** 	}
1365:./Libraries/FatFs/Src/ff.c **** 	else {				/* Stretch current chain */
1366:./Libraries/FatFs/Src/ff.c **** 		cs = get_fat(obj, clst);			/* Check the cluster status */
1367:./Libraries/FatFs/Src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
1368:./Libraries/FatFs/Src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
1369:./Libraries/FatFs/Src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1370:./Libraries/FatFs/Src/ff.c **** 		scl = clst;
1371:./Libraries/FatFs/Src/ff.c **** 	}
1372:./Libraries/FatFs/Src/ff.c **** 
1373:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
1374:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
1375:./Libraries/FatFs/Src/ff.c **** 		ncl = find_bitmap(fs, scl, 1);				/* Find a free cluster */
1376:./Libraries/FatFs/Src/ff.c **** 		if (ncl == 0 || ncl == 0xFFFFFFFF) return ncl;	/* No free cluster or hard error? */
1377:./Libraries/FatFs/Src/ff.c **** 		res = change_bitmap(fs, ncl, 1, 1);			/* Mark the cluster 'in use' */
1378:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_INT_ERR) return 1;
1379:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_DISK_ERR) return 0xFFFFFFFF;
1380:./Libraries/FatFs/Src/ff.c **** 		if (clst == 0) {							/* Is it a new chain? */
1381:./Libraries/FatFs/Src/ff.c **** 			obj->stat = 2;							/* Set status 'contiguous' */
1382:./Libraries/FatFs/Src/ff.c **** 		} else {									/* It is a stretched chain */
1383:./Libraries/FatFs/Src/ff.c **** 			if (obj->stat == 2 && ncl != scl + 1) {	/* Is the chain got fragmented? */
1384:./Libraries/FatFs/Src/ff.c **** 				obj->n_cont = scl - obj->sclust;	/* Set size of the contiguous part */
1385:./Libraries/FatFs/Src/ff.c **** 				obj->stat = 3;						/* Change status 'just fragmented' */
1386:./Libraries/FatFs/Src/ff.c **** 			}
1387:./Libraries/FatFs/Src/ff.c **** 		}
1388:./Libraries/FatFs/Src/ff.c **** 		if (obj->stat != 2) {	/* Is the file non-contiguous? */
1389:./Libraries/FatFs/Src/ff.c **** 			if (ncl == clst + 1) {	/* Is the cluster next to previous one? */
1390:./Libraries/FatFs/Src/ff.c **** 				obj->n_frag = obj->n_frag ? obj->n_frag + 1 : 2;	/* Increment size of last framgent */
1391:./Libraries/FatFs/Src/ff.c **** 			} else {				/* New fragment */
1392:./Libraries/FatFs/Src/ff.c **** 				if (obj->n_frag == 0) obj->n_frag = 1;
1393:./Libraries/FatFs/Src/ff.c **** 				res = fill_last_frag(obj, clst, ncl);	/* Fill last fragment on the FAT and link it to new one *
1394:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK) obj->n_frag = 1;
1395:./Libraries/FatFs/Src/ff.c **** 			}
1396:./Libraries/FatFs/Src/ff.c **** 		}
1397:./Libraries/FatFs/Src/ff.c **** 	} else
1398:./Libraries/FatFs/Src/ff.c **** #endif
1399:./Libraries/FatFs/Src/ff.c **** 	{	/* On the FAT12/16/32 volume */
1400:./Libraries/FatFs/Src/ff.c **** 		ncl = scl;	/* Start cluster */
1401:./Libraries/FatFs/Src/ff.c **** 		for (;;) {
ARM GAS  /tmp/ccaQXGqa.s 			page 34


1402:./Libraries/FatFs/Src/ff.c **** 			ncl++;							/* Next cluster */
1403:./Libraries/FatFs/Src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
1404:./Libraries/FatFs/Src/ff.c **** 				ncl = 2;
1405:./Libraries/FatFs/Src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
1406:./Libraries/FatFs/Src/ff.c **** 			}
1407:./Libraries/FatFs/Src/ff.c **** 			cs = get_fat(obj, ncl);			/* Get the cluster status */
1408:./Libraries/FatFs/Src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
1409:./Libraries/FatFs/Src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
1410:./Libraries/FatFs/Src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
1411:./Libraries/FatFs/Src/ff.c **** 		}
1412:./Libraries/FatFs/Src/ff.c **** 		res = put_fat(fs, ncl, 0xFFFFFFFF);	/* Mark the new cluster 'EOC' */
1413:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK && clst != 0) {
1414:./Libraries/FatFs/Src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
1415:./Libraries/FatFs/Src/ff.c **** 		}
1416:./Libraries/FatFs/Src/ff.c **** 	}
1417:./Libraries/FatFs/Src/ff.c **** 
1418:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
1419:./Libraries/FatFs/Src/ff.c **** 		fs->last_clst = ncl;
1420:./Libraries/FatFs/Src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
1421:./Libraries/FatFs/Src/ff.c **** 		fs->fsi_flag |= 1;
1422:./Libraries/FatFs/Src/ff.c **** 	} else {
1423:./Libraries/FatFs/Src/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
1424:./Libraries/FatFs/Src/ff.c **** 	}
1425:./Libraries/FatFs/Src/ff.c **** 
1426:./Libraries/FatFs/Src/ff.c **** 	return ncl;		/* Return new cluster number or error status */
1427:./Libraries/FatFs/Src/ff.c **** }
1428:./Libraries/FatFs/Src/ff.c **** 
1429:./Libraries/FatFs/Src/ff.c **** #endif /* !_FS_READONLY */
1430:./Libraries/FatFs/Src/ff.c **** 
1431:./Libraries/FatFs/Src/ff.c **** 
1432:./Libraries/FatFs/Src/ff.c **** 
1433:./Libraries/FatFs/Src/ff.c **** 
1434:./Libraries/FatFs/Src/ff.c **** #if _USE_FASTSEEK
1435:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1436:./Libraries/FatFs/Src/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1437:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1438:./Libraries/FatFs/Src/ff.c **** 
1439:./Libraries/FatFs/Src/ff.c **** static
1440:./Libraries/FatFs/Src/ff.c **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1441:./Libraries/FatFs/Src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1442:./Libraries/FatFs/Src/ff.c **** 	FSIZE_t ofs		/* File offset to be converted to cluster# */
1443:./Libraries/FatFs/Src/ff.c **** )
1444:./Libraries/FatFs/Src/ff.c **** {
1445:./Libraries/FatFs/Src/ff.c **** 	DWORD cl, ncl, *tbl;
1446:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = fp->obj.fs;
1447:./Libraries/FatFs/Src/ff.c **** 
1448:./Libraries/FatFs/Src/ff.c **** 
1449:./Libraries/FatFs/Src/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
1450:./Libraries/FatFs/Src/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
1451:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
1452:./Libraries/FatFs/Src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
1453:./Libraries/FatFs/Src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
1454:./Libraries/FatFs/Src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
1455:./Libraries/FatFs/Src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
1456:./Libraries/FatFs/Src/ff.c **** 	}
1457:./Libraries/FatFs/Src/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
1458:./Libraries/FatFs/Src/ff.c **** }
ARM GAS  /tmp/ccaQXGqa.s 			page 35


1459:./Libraries/FatFs/Src/ff.c **** 
1460:./Libraries/FatFs/Src/ff.c **** #endif	/* _USE_FASTSEEK */
1461:./Libraries/FatFs/Src/ff.c **** 
1462:./Libraries/FatFs/Src/ff.c **** 
1463:./Libraries/FatFs/Src/ff.c **** 
1464:./Libraries/FatFs/Src/ff.c **** 
1465:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1466:./Libraries/FatFs/Src/ff.c **** /* Directory handling - Set directory index                              */
1467:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1468:./Libraries/FatFs/Src/ff.c **** 
1469:./Libraries/FatFs/Src/ff.c **** static
1470:./Libraries/FatFs/Src/ff.c **** FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
1471:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
1472:./Libraries/FatFs/Src/ff.c **** 	DWORD ofs		/* Offset of directory table */
1473:./Libraries/FatFs/Src/ff.c **** )
1474:./Libraries/FatFs/Src/ff.c **** {
1475:./Libraries/FatFs/Src/ff.c **** 	DWORD csz, clst;
1476:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
1477:./Libraries/FatFs/Src/ff.c **** 
1478:./Libraries/FatFs/Src/ff.c **** 
1479:./Libraries/FatFs/Src/ff.c **** 	if (ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE)
1480:./Libraries/FatFs/Src/ff.c **** 		return FR_INT_ERR;
1481:./Libraries/FatFs/Src/ff.c **** 	}
1482:./Libraries/FatFs/Src/ff.c **** 	dp->dptr = ofs;				/* Set current offset */
1483:./Libraries/FatFs/Src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
1484:./Libraries/FatFs/Src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
1485:./Libraries/FatFs/Src/ff.c **** 		clst = fs->dirbase;
1486:./Libraries/FatFs/Src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
1487:./Libraries/FatFs/Src/ff.c **** 	}
1488:./Libraries/FatFs/Src/ff.c **** 
1489:./Libraries/FatFs/Src/ff.c **** 	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
1490:./Libraries/FatFs/Src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
1491:./Libraries/FatFs/Src/ff.c **** 		dp->sect = fs->dirbase;
1492:./Libraries/FatFs/Src/ff.c **** 
1493:./Libraries/FatFs/Src/ff.c **** 	} else {			/* Dynamic table (sub-directory or root-directory in FAT32+) */
1494:./Libraries/FatFs/Src/ff.c **** 		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
1495:./Libraries/FatFs/Src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
1496:./Libraries/FatFs/Src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
1497:./Libraries/FatFs/Src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1498:./Libraries/FatFs/Src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
1499:./Libraries/FatFs/Src/ff.c **** 			ofs -= csz;
1500:./Libraries/FatFs/Src/ff.c **** 		}
1501:./Libraries/FatFs/Src/ff.c **** 		dp->sect = clust2sect(fs, clst);
1502:./Libraries/FatFs/Src/ff.c **** 	}
1503:./Libraries/FatFs/Src/ff.c **** 	dp->clust = clst;					/* Current cluster# */
1504:./Libraries/FatFs/Src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
1505:./Libraries/FatFs/Src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
1506:./Libraries/FatFs/Src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
1507:./Libraries/FatFs/Src/ff.c **** 
1508:./Libraries/FatFs/Src/ff.c **** 	return FR_OK;
1509:./Libraries/FatFs/Src/ff.c **** }
1510:./Libraries/FatFs/Src/ff.c **** 
1511:./Libraries/FatFs/Src/ff.c **** 
1512:./Libraries/FatFs/Src/ff.c **** 
1513:./Libraries/FatFs/Src/ff.c **** 
1514:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1515:./Libraries/FatFs/Src/ff.c **** /* Directory handling - Move directory table index next                  */
ARM GAS  /tmp/ccaQXGqa.s 			page 36


1516:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1517:./Libraries/FatFs/Src/ff.c **** 
1518:./Libraries/FatFs/Src/ff.c **** static
1519:./Libraries/FatFs/Src/ff.c **** FRESULT dir_next (	/* FR_OK(0):succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
1520:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1521:./Libraries/FatFs/Src/ff.c **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1522:./Libraries/FatFs/Src/ff.c **** )
1523:./Libraries/FatFs/Src/ff.c **** {
1524:./Libraries/FatFs/Src/ff.c **** 	DWORD ofs, clst;
1525:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
1526:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
1527:./Libraries/FatFs/Src/ff.c **** 	UINT n;
1528:./Libraries/FatFs/Src/ff.c **** #endif
1529:./Libraries/FatFs/Src/ff.c **** 
1530:./Libraries/FatFs/Src/ff.c **** 	ofs = dp->dptr + SZDIRE;	/* Next entry */
1531:./Libraries/FatFs/Src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
1532:./Libraries/FatFs/Src/ff.c **** 
1533:./Libraries/FatFs/Src/ff.c **** 	if (ofs % SS(fs) == 0) {	/* Sector changed? */
1534:./Libraries/FatFs/Src/ff.c **** 		dp->sect++;				/* Next sector */
1535:./Libraries/FatFs/Src/ff.c **** 
1536:./Libraries/FatFs/Src/ff.c **** 		if (!dp->clust) {		/* Static table */
1537:./Libraries/FatFs/Src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
1538:./Libraries/FatFs/Src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
1539:./Libraries/FatFs/Src/ff.c **** 			}
1540:./Libraries/FatFs/Src/ff.c **** 		}
1541:./Libraries/FatFs/Src/ff.c **** 		else {					/* Dynamic table */
1542:./Libraries/FatFs/Src/ff.c **** 			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {		/* Cluster changed? */
1543:./Libraries/FatFs/Src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
1544:./Libraries/FatFs/Src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
1545:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
1546:./Libraries/FatFs/Src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
1547:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
1548:./Libraries/FatFs/Src/ff.c **** 					if (!stretch) {								/* If no stretch, report EOT */
1549:./Libraries/FatFs/Src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
1550:./Libraries/FatFs/Src/ff.c **** 					}
1551:./Libraries/FatFs/Src/ff.c **** 					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
1552:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1553:./Libraries/FatFs/Src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
1554:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1555:./Libraries/FatFs/Src/ff.c **** 					/* Clean-up the stretched table */
1556:./Libraries/FatFs/Src/ff.c **** 					if (_FS_EXFAT) dp->obj.stat |= 4;			/* The directory needs to be updated */
1557:./Libraries/FatFs/Src/ff.c **** 					if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
1558:./Libraries/FatFs/Src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
1559:./Libraries/FatFs/Src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
1560:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
1561:./Libraries/FatFs/Src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
1562:./Libraries/FatFs/Src/ff.c **** 					}
1563:./Libraries/FatFs/Src/ff.c **** 					fs->winsect -= n;							/* Restore window offset */
1564:./Libraries/FatFs/Src/ff.c **** #else
1565:./Libraries/FatFs/Src/ff.c **** 					if (!stretch) dp->sect = 0;					/* (this line is to suppress compiler warning) */
1566:./Libraries/FatFs/Src/ff.c **** 					dp->sect = 0; return FR_NO_FILE;			/* Report EOT */
1567:./Libraries/FatFs/Src/ff.c **** #endif
1568:./Libraries/FatFs/Src/ff.c **** 				}
1569:./Libraries/FatFs/Src/ff.c **** 				dp->clust = clst;		/* Initialize data for new cluster */
1570:./Libraries/FatFs/Src/ff.c **** 				dp->sect = clust2sect(fs, clst);
1571:./Libraries/FatFs/Src/ff.c **** 			}
1572:./Libraries/FatFs/Src/ff.c **** 		}
ARM GAS  /tmp/ccaQXGqa.s 			page 37


1573:./Libraries/FatFs/Src/ff.c **** 	}
1574:./Libraries/FatFs/Src/ff.c **** 	dp->dptr = ofs;						/* Current entry */
1575:./Libraries/FatFs/Src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
1576:./Libraries/FatFs/Src/ff.c **** 
1577:./Libraries/FatFs/Src/ff.c **** 	return FR_OK;
1578:./Libraries/FatFs/Src/ff.c **** }
1579:./Libraries/FatFs/Src/ff.c **** 
1580:./Libraries/FatFs/Src/ff.c **** 
1581:./Libraries/FatFs/Src/ff.c **** 
1582:./Libraries/FatFs/Src/ff.c **** 
1583:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
1584:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1585:./Libraries/FatFs/Src/ff.c **** /* Directory handling - Reserve a block of directory entries             */
1586:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1587:./Libraries/FatFs/Src/ff.c **** 
1588:./Libraries/FatFs/Src/ff.c **** static
1589:./Libraries/FatFs/Src/ff.c **** FRESULT dir_alloc (	/* FR_OK(0):succeeded, !=0:error */
1590:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1591:./Libraries/FatFs/Src/ff.c **** 	UINT nent		/* Number of contiguous entries to allocate */
1592:./Libraries/FatFs/Src/ff.c **** )
1593:./Libraries/FatFs/Src/ff.c **** {
1594:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
1595:./Libraries/FatFs/Src/ff.c **** 	UINT n;
1596:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
1597:./Libraries/FatFs/Src/ff.c **** 
1598:./Libraries/FatFs/Src/ff.c **** 
1599:./Libraries/FatFs/Src/ff.c **** 	res = dir_sdi(dp, 0);
1600:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
1601:./Libraries/FatFs/Src/ff.c **** 		n = 0;
1602:./Libraries/FatFs/Src/ff.c **** 		do {
1603:./Libraries/FatFs/Src/ff.c **** 			res = move_window(fs, dp->sect);
1604:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
1605:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
1606:./Libraries/FatFs/Src/ff.c **** 			if ((fs->fs_type == FS_EXFAT) ? (int)((dp->dir[XDIR_Type] & 0x80) == 0) : (int)(dp->dir[DIR_Name
1607:./Libraries/FatFs/Src/ff.c **** #else
1608:./Libraries/FatFs/Src/ff.c **** 			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
1609:./Libraries/FatFs/Src/ff.c **** #endif
1610:./Libraries/FatFs/Src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1611:./Libraries/FatFs/Src/ff.c **** 			} else {
1612:./Libraries/FatFs/Src/ff.c **** 				n = 0;					/* Not a blank entry. Restart to search */
1613:./Libraries/FatFs/Src/ff.c **** 			}
1614:./Libraries/FatFs/Src/ff.c **** 			res = dir_next(dp, 1);
1615:./Libraries/FatFs/Src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
1616:./Libraries/FatFs/Src/ff.c **** 	}
1617:./Libraries/FatFs/Src/ff.c **** 
1618:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1619:./Libraries/FatFs/Src/ff.c **** 	return res;
1620:./Libraries/FatFs/Src/ff.c **** }
1621:./Libraries/FatFs/Src/ff.c **** 
1622:./Libraries/FatFs/Src/ff.c **** #endif	/* !_FS_READONLY */
1623:./Libraries/FatFs/Src/ff.c **** 
1624:./Libraries/FatFs/Src/ff.c **** 
1625:./Libraries/FatFs/Src/ff.c **** 
1626:./Libraries/FatFs/Src/ff.c **** 
1627:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1628:./Libraries/FatFs/Src/ff.c **** /* FAT: Directory handling - Load/Store start cluster number             */
1629:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/ccaQXGqa.s 			page 38


1630:./Libraries/FatFs/Src/ff.c **** 
1631:./Libraries/FatFs/Src/ff.c **** static
1632:./Libraries/FatFs/Src/ff.c **** DWORD ld_clust (	/* Returns the top cluster value of the SFN entry */
1633:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
1634:./Libraries/FatFs/Src/ff.c **** 	const BYTE* dir	/* Pointer to the key entry */
1635:./Libraries/FatFs/Src/ff.c **** )
1636:./Libraries/FatFs/Src/ff.c **** {
1637:./Libraries/FatFs/Src/ff.c **** 	DWORD cl;
1638:./Libraries/FatFs/Src/ff.c **** 
1639:./Libraries/FatFs/Src/ff.c **** 	cl = ld_word(dir + DIR_FstClusLO);
1640:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
1641:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
1642:./Libraries/FatFs/Src/ff.c **** 	}
1643:./Libraries/FatFs/Src/ff.c **** 
1644:./Libraries/FatFs/Src/ff.c **** 	return cl;
1645:./Libraries/FatFs/Src/ff.c **** }
1646:./Libraries/FatFs/Src/ff.c **** 
1647:./Libraries/FatFs/Src/ff.c **** 
1648:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
1649:./Libraries/FatFs/Src/ff.c **** static
1650:./Libraries/FatFs/Src/ff.c **** void st_clust (
1651:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
1652:./Libraries/FatFs/Src/ff.c **** 	BYTE* dir,	/* Pointer to the key entry */
1653:./Libraries/FatFs/Src/ff.c **** 	DWORD cl	/* Value to be set */
1654:./Libraries/FatFs/Src/ff.c **** )
1655:./Libraries/FatFs/Src/ff.c **** {
1656:./Libraries/FatFs/Src/ff.c **** 	st_word(dir + DIR_FstClusLO, (WORD)cl);
1657:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
1658:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
1659:./Libraries/FatFs/Src/ff.c **** 	}
1660:./Libraries/FatFs/Src/ff.c **** }
1661:./Libraries/FatFs/Src/ff.c **** #endif
1662:./Libraries/FatFs/Src/ff.c **** 
1663:./Libraries/FatFs/Src/ff.c **** 
1664:./Libraries/FatFs/Src/ff.c **** 
1665:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0
1666:./Libraries/FatFs/Src/ff.c **** /*------------------------------------------------------------------------*/
1667:./Libraries/FatFs/Src/ff.c **** /* FAT-LFN: LFN handling                                                  */
1668:./Libraries/FatFs/Src/ff.c **** /*------------------------------------------------------------------------*/
1669:./Libraries/FatFs/Src/ff.c **** static
1670:./Libraries/FatFs/Src/ff.c **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN characters in the direc
1671:./Libraries/FatFs/Src/ff.c **** 
1672:./Libraries/FatFs/Src/ff.c **** 
1673:./Libraries/FatFs/Src/ff.c **** /*--------------------------------------------------------*/
1674:./Libraries/FatFs/Src/ff.c **** /* FAT-LFN: Compare a part of file name with an LFN entry */
1675:./Libraries/FatFs/Src/ff.c **** /*--------------------------------------------------------*/
1676:./Libraries/FatFs/Src/ff.c **** static
1677:./Libraries/FatFs/Src/ff.c **** int cmp_lfn (				/* 1:matched, 0:not matched */
1678:./Libraries/FatFs/Src/ff.c **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN working buffer to be compared */
1679:./Libraries/FatFs/Src/ff.c **** 	BYTE* dir				/* Pointer to the directory entry containing the part of LFN */
1680:./Libraries/FatFs/Src/ff.c **** )
1681:./Libraries/FatFs/Src/ff.c **** {
1682:./Libraries/FatFs/Src/ff.c **** 	UINT i, s;
1683:./Libraries/FatFs/Src/ff.c **** 	WCHAR wc, uc;
1684:./Libraries/FatFs/Src/ff.c **** 
1685:./Libraries/FatFs/Src/ff.c **** 
1686:./Libraries/FatFs/Src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
ARM GAS  /tmp/ccaQXGqa.s 			page 39


1687:./Libraries/FatFs/Src/ff.c **** 
1688:./Libraries/FatFs/Src/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1689:./Libraries/FatFs/Src/ff.c **** 
1690:./Libraries/FatFs/Src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1691:./Libraries/FatFs/Src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1692:./Libraries/FatFs/Src/ff.c **** 		if (wc) {
1693:./Libraries/FatFs/Src/ff.c **** 			if (i >= _MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
1694:./Libraries/FatFs/Src/ff.c **** 				return 0;					/* Not matched */
1695:./Libraries/FatFs/Src/ff.c **** 			}
1696:./Libraries/FatFs/Src/ff.c **** 			wc = uc;
1697:./Libraries/FatFs/Src/ff.c **** 		} else {
1698:./Libraries/FatFs/Src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1699:./Libraries/FatFs/Src/ff.c **** 		}
1700:./Libraries/FatFs/Src/ff.c **** 	}
1701:./Libraries/FatFs/Src/ff.c **** 
1702:./Libraries/FatFs/Src/ff.c **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different len
1703:./Libraries/FatFs/Src/ff.c **** 
1704:./Libraries/FatFs/Src/ff.c **** 	return 1;		/* The part of LFN matched */
1705:./Libraries/FatFs/Src/ff.c **** }
1706:./Libraries/FatFs/Src/ff.c **** 
1707:./Libraries/FatFs/Src/ff.c **** 
1708:./Libraries/FatFs/Src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
1709:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------*/
1710:./Libraries/FatFs/Src/ff.c **** /* FAT-LFN: Pick a part of file name from an LFN entry */
1711:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------*/
1712:./Libraries/FatFs/Src/ff.c **** static
1713:./Libraries/FatFs/Src/ff.c **** int pick_lfn (			/* 1:succeeded, 0:buffer overflow or invalid LFN entry */
1714:./Libraries/FatFs/Src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the LFN working buffer */
1715:./Libraries/FatFs/Src/ff.c **** 	BYTE* dir			/* Pointer to the LFN entry */
1716:./Libraries/FatFs/Src/ff.c **** )
1717:./Libraries/FatFs/Src/ff.c **** {
1718:./Libraries/FatFs/Src/ff.c **** 	UINT i, s;
1719:./Libraries/FatFs/Src/ff.c **** 	WCHAR wc, uc;
1720:./Libraries/FatFs/Src/ff.c **** 
1721:./Libraries/FatFs/Src/ff.c **** 
1722:./Libraries/FatFs/Src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO is 0 */
1723:./Libraries/FatFs/Src/ff.c **** 
1724:./Libraries/FatFs/Src/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Offset in the LFN buffer */
1725:./Libraries/FatFs/Src/ff.c **** 
1726:./Libraries/FatFs/Src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1727:./Libraries/FatFs/Src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1728:./Libraries/FatFs/Src/ff.c **** 		if (wc) {
1729:./Libraries/FatFs/Src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1730:./Libraries/FatFs/Src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1731:./Libraries/FatFs/Src/ff.c **** 		} else {
1732:./Libraries/FatFs/Src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1733:./Libraries/FatFs/Src/ff.c **** 		}
1734:./Libraries/FatFs/Src/ff.c **** 	}
1735:./Libraries/FatFs/Src/ff.c **** 
1736:./Libraries/FatFs/Src/ff.c **** 	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
1737:./Libraries/FatFs/Src/ff.c **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
1738:./Libraries/FatFs/Src/ff.c **** 		lfnbuf[i] = 0;
1739:./Libraries/FatFs/Src/ff.c **** 	}
1740:./Libraries/FatFs/Src/ff.c **** 
1741:./Libraries/FatFs/Src/ff.c **** 	return 1;		/* The part of LFN is valid */
1742:./Libraries/FatFs/Src/ff.c **** }
1743:./Libraries/FatFs/Src/ff.c **** #endif
ARM GAS  /tmp/ccaQXGqa.s 			page 40


1744:./Libraries/FatFs/Src/ff.c **** 
1745:./Libraries/FatFs/Src/ff.c **** 
1746:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
1747:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------*/
1748:./Libraries/FatFs/Src/ff.c **** /* FAT-LFN: Create an entry of LFN entries */
1749:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------*/
1750:./Libraries/FatFs/Src/ff.c **** static
1751:./Libraries/FatFs/Src/ff.c **** void put_lfn (
1752:./Libraries/FatFs/Src/ff.c **** 	const WCHAR* lfn,	/* Pointer to the LFN */
1753:./Libraries/FatFs/Src/ff.c **** 	BYTE* dir,			/* Pointer to the LFN entry to be created */
1754:./Libraries/FatFs/Src/ff.c **** 	BYTE ord,			/* LFN order (1-20) */
1755:./Libraries/FatFs/Src/ff.c **** 	BYTE sum			/* Checksum of the corresponding SFN */
1756:./Libraries/FatFs/Src/ff.c **** )
1757:./Libraries/FatFs/Src/ff.c **** {
1758:./Libraries/FatFs/Src/ff.c **** 	UINT i, s;
1759:./Libraries/FatFs/Src/ff.c **** 	WCHAR wc;
1760:./Libraries/FatFs/Src/ff.c **** 
1761:./Libraries/FatFs/Src/ff.c **** 
1762:./Libraries/FatFs/Src/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set checksum */
1763:./Libraries/FatFs/Src/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1764:./Libraries/FatFs/Src/ff.c **** 	dir[LDIR_Type] = 0;
1765:./Libraries/FatFs/Src/ff.c **** 	st_word(dir + LDIR_FstClusLO, 0);
1766:./Libraries/FatFs/Src/ff.c **** 
1767:./Libraries/FatFs/Src/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
1768:./Libraries/FatFs/Src/ff.c **** 	s = wc = 0;
1769:./Libraries/FatFs/Src/ff.c **** 	do {
1770:./Libraries/FatFs/Src/ff.c **** 		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
1771:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
1772:./Libraries/FatFs/Src/ff.c **** 		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
1773:./Libraries/FatFs/Src/ff.c **** 	} while (++s < 13);
1774:./Libraries/FatFs/Src/ff.c **** 	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
1775:./Libraries/FatFs/Src/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
1776:./Libraries/FatFs/Src/ff.c **** }
1777:./Libraries/FatFs/Src/ff.c **** 
1778:./Libraries/FatFs/Src/ff.c **** #endif	/* !_FS_READONLY */
1779:./Libraries/FatFs/Src/ff.c **** #endif	/* _USE_LFN != 0 */
1780:./Libraries/FatFs/Src/ff.c **** 
1781:./Libraries/FatFs/Src/ff.c **** 
1782:./Libraries/FatFs/Src/ff.c **** 
1783:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0 && !_FS_READONLY
1784:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1785:./Libraries/FatFs/Src/ff.c **** /* FAT-LFN: Create a Numbered SFN                                        */
1786:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1787:./Libraries/FatFs/Src/ff.c **** 
1788:./Libraries/FatFs/Src/ff.c **** static
1789:./Libraries/FatFs/Src/ff.c **** void gen_numname (
1790:./Libraries/FatFs/Src/ff.c **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
1791:./Libraries/FatFs/Src/ff.c **** 	const BYTE* src,	/* Pointer to SFN */
1792:./Libraries/FatFs/Src/ff.c **** 	const WCHAR* lfn,	/* Pointer to LFN */
1793:./Libraries/FatFs/Src/ff.c **** 	UINT seq			/* Sequence number */
1794:./Libraries/FatFs/Src/ff.c **** )
1795:./Libraries/FatFs/Src/ff.c **** {
1796:./Libraries/FatFs/Src/ff.c **** 	BYTE ns[8], c;
1797:./Libraries/FatFs/Src/ff.c **** 	UINT i, j;
1798:./Libraries/FatFs/Src/ff.c **** 	WCHAR wc;
1799:./Libraries/FatFs/Src/ff.c **** 	DWORD sr;
1800:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 41


1801:./Libraries/FatFs/Src/ff.c **** 
1802:./Libraries/FatFs/Src/ff.c **** 	mem_cpy(dst, src, 11);
1803:./Libraries/FatFs/Src/ff.c **** 
1804:./Libraries/FatFs/Src/ff.c **** 	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number 
1805:./Libraries/FatFs/Src/ff.c **** 		sr = seq;
1806:./Libraries/FatFs/Src/ff.c **** 		while (*lfn) {	/* Create a CRC */
1807:./Libraries/FatFs/Src/ff.c **** 			wc = *lfn++;
1808:./Libraries/FatFs/Src/ff.c **** 			for (i = 0; i < 16; i++) {
1809:./Libraries/FatFs/Src/ff.c **** 				sr = (sr << 1) + (wc & 1);
1810:./Libraries/FatFs/Src/ff.c **** 				wc >>= 1;
1811:./Libraries/FatFs/Src/ff.c **** 				if (sr & 0x10000) sr ^= 0x11021;
1812:./Libraries/FatFs/Src/ff.c **** 			}
1813:./Libraries/FatFs/Src/ff.c **** 		}
1814:./Libraries/FatFs/Src/ff.c **** 		seq = (UINT)sr;
1815:./Libraries/FatFs/Src/ff.c **** 	}
1816:./Libraries/FatFs/Src/ff.c **** 
1817:./Libraries/FatFs/Src/ff.c **** 	/* itoa (hexdecimal) */
1818:./Libraries/FatFs/Src/ff.c **** 	i = 7;
1819:./Libraries/FatFs/Src/ff.c **** 	do {
1820:./Libraries/FatFs/Src/ff.c **** 		c = (BYTE)((seq % 16) + '0');
1821:./Libraries/FatFs/Src/ff.c **** 		if (c > '9') c += 7;
1822:./Libraries/FatFs/Src/ff.c **** 		ns[i--] = c;
1823:./Libraries/FatFs/Src/ff.c **** 		seq /= 16;
1824:./Libraries/FatFs/Src/ff.c **** 	} while (seq);
1825:./Libraries/FatFs/Src/ff.c **** 	ns[i] = '~';
1826:./Libraries/FatFs/Src/ff.c **** 
1827:./Libraries/FatFs/Src/ff.c **** 	/* Append the number */
1828:./Libraries/FatFs/Src/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
1829:./Libraries/FatFs/Src/ff.c **** 		if (IsDBCS1(dst[j])) {
1830:./Libraries/FatFs/Src/ff.c **** 			if (j == i - 1) break;
1831:./Libraries/FatFs/Src/ff.c **** 			j++;
1832:./Libraries/FatFs/Src/ff.c **** 		}
1833:./Libraries/FatFs/Src/ff.c **** 	}
1834:./Libraries/FatFs/Src/ff.c **** 	do {
1835:./Libraries/FatFs/Src/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
1836:./Libraries/FatFs/Src/ff.c **** 	} while (j < 8);
1837:./Libraries/FatFs/Src/ff.c **** }
1838:./Libraries/FatFs/Src/ff.c **** #endif	/* _USE_LFN != 0 && !_FS_READONLY */
1839:./Libraries/FatFs/Src/ff.c **** 
1840:./Libraries/FatFs/Src/ff.c **** 
1841:./Libraries/FatFs/Src/ff.c **** 
1842:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0
1843:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1844:./Libraries/FatFs/Src/ff.c **** /* FAT-LFN: Calculate checksum of an SFN entry                           */
1845:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1846:./Libraries/FatFs/Src/ff.c **** 
1847:./Libraries/FatFs/Src/ff.c **** static
1848:./Libraries/FatFs/Src/ff.c **** BYTE sum_sfn (
1849:./Libraries/FatFs/Src/ff.c **** 	const BYTE* dir		/* Pointer to the SFN entry */
1850:./Libraries/FatFs/Src/ff.c **** )
1851:./Libraries/FatFs/Src/ff.c **** {
1852:./Libraries/FatFs/Src/ff.c **** 	BYTE sum = 0;
1853:./Libraries/FatFs/Src/ff.c **** 	UINT n = 11;
1854:./Libraries/FatFs/Src/ff.c **** 
1855:./Libraries/FatFs/Src/ff.c **** 	do {
1856:./Libraries/FatFs/Src/ff.c **** 		sum = (sum >> 1) + (sum << 7) + *dir++;
1857:./Libraries/FatFs/Src/ff.c **** 	} while (--n);
ARM GAS  /tmp/ccaQXGqa.s 			page 42


1858:./Libraries/FatFs/Src/ff.c **** 	return sum;
1859:./Libraries/FatFs/Src/ff.c **** }
1860:./Libraries/FatFs/Src/ff.c **** 
1861:./Libraries/FatFs/Src/ff.c **** #endif	/* _USE_LFN != 0 */
1862:./Libraries/FatFs/Src/ff.c **** 
1863:./Libraries/FatFs/Src/ff.c **** 
1864:./Libraries/FatFs/Src/ff.c **** 
1865:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
1866:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1867:./Libraries/FatFs/Src/ff.c **** /* exFAT: Checksum                                                       */
1868:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
1869:./Libraries/FatFs/Src/ff.c **** 
1870:./Libraries/FatFs/Src/ff.c **** static
1871:./Libraries/FatFs/Src/ff.c **** WORD xdir_sum (			/* Get checksum of the directoly block */
1872:./Libraries/FatFs/Src/ff.c **** 	const BYTE* dir		/* Directory entry block to be calculated */
1873:./Libraries/FatFs/Src/ff.c **** )
1874:./Libraries/FatFs/Src/ff.c **** {
1875:./Libraries/FatFs/Src/ff.c **** 	UINT i, szblk;
1876:./Libraries/FatFs/Src/ff.c **** 	WORD sum;
1877:./Libraries/FatFs/Src/ff.c **** 
1878:./Libraries/FatFs/Src/ff.c **** 
1879:./Libraries/FatFs/Src/ff.c **** 	szblk = (dir[XDIR_NumSec] + 1) * SZDIRE;
1880:./Libraries/FatFs/Src/ff.c **** 	for (i = sum = 0; i < szblk; i++) {
1881:./Libraries/FatFs/Src/ff.c **** 		if (i == XDIR_SetSum) {	/* Skip sum field */
1882:./Libraries/FatFs/Src/ff.c **** 			i++;
1883:./Libraries/FatFs/Src/ff.c **** 		} else {
1884:./Libraries/FatFs/Src/ff.c **** 			sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + dir[i];
1885:./Libraries/FatFs/Src/ff.c **** 		}
1886:./Libraries/FatFs/Src/ff.c **** 	}
1887:./Libraries/FatFs/Src/ff.c **** 	return sum;
1888:./Libraries/FatFs/Src/ff.c **** }
1889:./Libraries/FatFs/Src/ff.c **** 
1890:./Libraries/FatFs/Src/ff.c **** 
1891:./Libraries/FatFs/Src/ff.c **** 
1892:./Libraries/FatFs/Src/ff.c **** static
1893:./Libraries/FatFs/Src/ff.c **** WORD xname_sum (		/* Get check sum (to be used as hash) of the name */
1894:./Libraries/FatFs/Src/ff.c **** 	const WCHAR* name	/* File name to be calculated */
1895:./Libraries/FatFs/Src/ff.c **** )
1896:./Libraries/FatFs/Src/ff.c **** {
1897:./Libraries/FatFs/Src/ff.c **** 	WCHAR chr;
1898:./Libraries/FatFs/Src/ff.c **** 	WORD sum = 0;
1899:./Libraries/FatFs/Src/ff.c **** 
1900:./Libraries/FatFs/Src/ff.c **** 
1901:./Libraries/FatFs/Src/ff.c **** 	while ((chr = *name++) != 0) {
1902:./Libraries/FatFs/Src/ff.c **** 		chr = ff_wtoupper(chr);		/* File name needs to be ignored case */
1903:./Libraries/FatFs/Src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr & 0xFF);
1904:./Libraries/FatFs/Src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr >> 8);
1905:./Libraries/FatFs/Src/ff.c **** 	}
1906:./Libraries/FatFs/Src/ff.c **** 	return sum;
1907:./Libraries/FatFs/Src/ff.c **** }
1908:./Libraries/FatFs/Src/ff.c **** 
1909:./Libraries/FatFs/Src/ff.c **** 
1910:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY && _USE_MKFS
1911:./Libraries/FatFs/Src/ff.c **** static
1912:./Libraries/FatFs/Src/ff.c **** DWORD xsum32 (
1913:./Libraries/FatFs/Src/ff.c **** 	BYTE  dat,	/* Data to be sumed */
1914:./Libraries/FatFs/Src/ff.c **** 	DWORD sum	/* Previous value */
ARM GAS  /tmp/ccaQXGqa.s 			page 43


1915:./Libraries/FatFs/Src/ff.c **** )
1916:./Libraries/FatFs/Src/ff.c **** {
1917:./Libraries/FatFs/Src/ff.c **** 	sum = ((sum & 1) ? 0x80000000 : 0) + (sum >> 1) + dat;
1918:./Libraries/FatFs/Src/ff.c **** 	return sum;
1919:./Libraries/FatFs/Src/ff.c **** }
1920:./Libraries/FatFs/Src/ff.c **** #endif
1921:./Libraries/FatFs/Src/ff.c **** 
1922:./Libraries/FatFs/Src/ff.c **** 
1923:./Libraries/FatFs/Src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
1924:./Libraries/FatFs/Src/ff.c **** /*------------------------------------------------------*/
1925:./Libraries/FatFs/Src/ff.c **** /* exFAT: Get object information from a directory block */
1926:./Libraries/FatFs/Src/ff.c **** /*------------------------------------------------------*/
1927:./Libraries/FatFs/Src/ff.c **** 
1928:./Libraries/FatFs/Src/ff.c **** static
1929:./Libraries/FatFs/Src/ff.c **** void get_xdir_info (
1930:./Libraries/FatFs/Src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block 85+C0+C1s */
1931:./Libraries/FatFs/Src/ff.c **** 	FILINFO* fno		/* Buffer to store the extracted file information */
1932:./Libraries/FatFs/Src/ff.c **** )
1933:./Libraries/FatFs/Src/ff.c **** {
1934:./Libraries/FatFs/Src/ff.c **** 	UINT di, si;
1935:./Libraries/FatFs/Src/ff.c **** 	WCHAR w;
1936:./Libraries/FatFs/Src/ff.c **** #if !_LFN_UNICODE
1937:./Libraries/FatFs/Src/ff.c **** 	UINT nc;
1938:./Libraries/FatFs/Src/ff.c **** #endif
1939:./Libraries/FatFs/Src/ff.c **** 
1940:./Libraries/FatFs/Src/ff.c **** 	/* Get file name */
1941:./Libraries/FatFs/Src/ff.c **** 	di = 0;
1942:./Libraries/FatFs/Src/ff.c **** #if _LFN_UNICODE
1943:./Libraries/FatFs/Src/ff.c **** 	for (si = SZDIRE * 2; di < dirb[XDIR_NumName]; si += 2, di++) {
1944:./Libraries/FatFs/Src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1945:./Libraries/FatFs/Src/ff.c **** 		w = ld_word(dirb + si);					/* Get a character */
1946:./Libraries/FatFs/Src/ff.c **** 		if (di >= _MAX_LFN) { di = 0; break; }	/* Buffer overflow --> inaccessible object name */
1947:./Libraries/FatFs/Src/ff.c **** 		fno->fname[di] = w;						/* Store it */
1948:./Libraries/FatFs/Src/ff.c **** 	}
1949:./Libraries/FatFs/Src/ff.c **** #else
1950:./Libraries/FatFs/Src/ff.c **** 	for (si = SZDIRE * 2, nc = 0; nc < dirb[XDIR_NumName]; si += 2, nc++) {
1951:./Libraries/FatFs/Src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1952:./Libraries/FatFs/Src/ff.c **** 		w = ff_convert(ld_word(dirb + si), 0);	/* Get a character and Unicode -> OEM */
1953:./Libraries/FatFs/Src/ff.c **** 		if (_DF1S && w >= 0x100) {				/* Is it a double byte char? (always false at SBCS cfg) */
1954:./Libraries/FatFs/Src/ff.c **** 			fno->fname[di++] = (char)(w >> 8);	/* Put 1st byte of the DBC */
1955:./Libraries/FatFs/Src/ff.c **** 		}
1956:./Libraries/FatFs/Src/ff.c **** 		if (w == 0 || di >= _MAX_LFN) { di = 0; break; }	/* Invalid char or buffer overflow --> inaccessi
1957:./Libraries/FatFs/Src/ff.c **** 		fno->fname[di++] = (char)w;
1958:./Libraries/FatFs/Src/ff.c **** 	}
1959:./Libraries/FatFs/Src/ff.c **** #endif
1960:./Libraries/FatFs/Src/ff.c **** 	if (di == 0) fno->fname[di++] = '?';	/* Inaccessible object name? */
1961:./Libraries/FatFs/Src/ff.c **** 	fno->fname[di] = 0;						/* Terminate file name */
1962:./Libraries/FatFs/Src/ff.c **** 
1963:./Libraries/FatFs/Src/ff.c **** 	fno->altname[0] = 0;							/* No SFN */
1964:./Libraries/FatFs/Src/ff.c **** 	fno->fattrib = dirb[XDIR_Attr];					/* Attribute */
1965:./Libraries/FatFs/Src/ff.c **** 	fno->fsize = (fno->fattrib & AM_DIR) ? 0 : ld_qword(dirb + XDIR_FileSize);	/* Size */
1966:./Libraries/FatFs/Src/ff.c **** 	fno->ftime = ld_word(dirb + XDIR_ModTime + 0);	/* Time */
1967:./Libraries/FatFs/Src/ff.c **** 	fno->fdate = ld_word(dirb + XDIR_ModTime + 2);	/* Date */
1968:./Libraries/FatFs/Src/ff.c **** }
1969:./Libraries/FatFs/Src/ff.c **** 
1970:./Libraries/FatFs/Src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
1971:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 44


1972:./Libraries/FatFs/Src/ff.c **** 
1973:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------*/
1974:./Libraries/FatFs/Src/ff.c **** /* exFAT: Get a directry entry block */
1975:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------*/
1976:./Libraries/FatFs/Src/ff.c **** 
1977:./Libraries/FatFs/Src/ff.c **** static
1978:./Libraries/FatFs/Src/ff.c **** FRESULT load_xdir (	/* FR_INT_ERR: invalid entry block */
1979:./Libraries/FatFs/Src/ff.c **** 	DIR* dp			/* Pointer to the reading direcotry object pointing the 85 entry */
1980:./Libraries/FatFs/Src/ff.c **** )
1981:./Libraries/FatFs/Src/ff.c **** {
1982:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
1983:./Libraries/FatFs/Src/ff.c **** 	UINT i, sz_ent;
1984:./Libraries/FatFs/Src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the on-memory direcotry entry block 85+C0+C1s */
1985:./Libraries/FatFs/Src/ff.c **** 
1986:./Libraries/FatFs/Src/ff.c **** 
1987:./Libraries/FatFs/Src/ff.c **** 	/* Load 85 entry */
1988:./Libraries/FatFs/Src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1989:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK) return res;
1990:./Libraries/FatFs/Src/ff.c **** 	if (dp->dir[XDIR_Type] != 0x85) return FR_INT_ERR;
1991:./Libraries/FatFs/Src/ff.c **** 	mem_cpy(dirb + 0, dp->dir, SZDIRE);
1992:./Libraries/FatFs/Src/ff.c **** 	sz_ent = (dirb[XDIR_NumSec] + 1) * SZDIRE;
1993:./Libraries/FatFs/Src/ff.c **** 	if (sz_ent < 3 * SZDIRE || sz_ent > 19 * SZDIRE) return FR_INT_ERR;
1994:./Libraries/FatFs/Src/ff.c **** 
1995:./Libraries/FatFs/Src/ff.c **** 	/* Load C0 entry */
1996:./Libraries/FatFs/Src/ff.c **** 	res = dir_next(dp, 0);
1997:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK) return res;
1998:./Libraries/FatFs/Src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1999:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK) return res;
2000:./Libraries/FatFs/Src/ff.c **** 	if (dp->dir[XDIR_Type] != 0xC0) return FR_INT_ERR;
2001:./Libraries/FatFs/Src/ff.c **** 	mem_cpy(dirb + SZDIRE, dp->dir, SZDIRE);
2002:./Libraries/FatFs/Src/ff.c **** 	if (MAXDIRB(dirb[XDIR_NumName]) > sz_ent) return FR_INT_ERR;
2003:./Libraries/FatFs/Src/ff.c **** 
2004:./Libraries/FatFs/Src/ff.c **** 	/* Load C1 entries */
2005:./Libraries/FatFs/Src/ff.c **** 	i = SZDIRE * 2;	/* C1 offset */
2006:./Libraries/FatFs/Src/ff.c **** 	do {
2007:./Libraries/FatFs/Src/ff.c **** 		res = dir_next(dp, 0);
2008:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) return res;
2009:./Libraries/FatFs/Src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2010:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) return res;
2011:./Libraries/FatFs/Src/ff.c **** 		if (dp->dir[XDIR_Type] != 0xC1) return FR_INT_ERR;
2012:./Libraries/FatFs/Src/ff.c **** 		if (i < MAXDIRB(_MAX_LFN)) mem_cpy(dirb + i, dp->dir, SZDIRE);
2013:./Libraries/FatFs/Src/ff.c **** 	} while ((i += SZDIRE) < sz_ent);
2014:./Libraries/FatFs/Src/ff.c **** 
2015:./Libraries/FatFs/Src/ff.c **** 	/* Sanity check (do it when accessible object name) */
2016:./Libraries/FatFs/Src/ff.c **** 	if (i <= MAXDIRB(_MAX_LFN)) {
2017:./Libraries/FatFs/Src/ff.c **** 		if (xdir_sum(dirb) != ld_word(dirb + XDIR_SetSum)) return FR_INT_ERR;
2018:./Libraries/FatFs/Src/ff.c **** 	}
2019:./Libraries/FatFs/Src/ff.c **** 	return FR_OK;
2020:./Libraries/FatFs/Src/ff.c **** }
2021:./Libraries/FatFs/Src/ff.c **** 
2022:./Libraries/FatFs/Src/ff.c **** 
2023:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY || _FS_RPATH != 0
2024:./Libraries/FatFs/Src/ff.c **** /*------------------------------------------------*/
2025:./Libraries/FatFs/Src/ff.c **** /* exFAT: Load the object's directory entry block */
2026:./Libraries/FatFs/Src/ff.c **** /*------------------------------------------------*/
2027:./Libraries/FatFs/Src/ff.c **** static
2028:./Libraries/FatFs/Src/ff.c **** FRESULT load_obj_dir (
ARM GAS  /tmp/ccaQXGqa.s 			page 45


2029:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,			/* Blank directory object to be used to access containing direcotry */
2030:./Libraries/FatFs/Src/ff.c **** 	const _FDID* obj	/* Object with its containing directory information */
2031:./Libraries/FatFs/Src/ff.c **** )
2032:./Libraries/FatFs/Src/ff.c **** {
2033:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
2034:./Libraries/FatFs/Src/ff.c **** 
2035:./Libraries/FatFs/Src/ff.c **** 	/* Open object containing directory */
2036:./Libraries/FatFs/Src/ff.c **** 	dp->obj.fs = obj->fs;
2037:./Libraries/FatFs/Src/ff.c **** 	dp->obj.sclust = obj->c_scl;
2038:./Libraries/FatFs/Src/ff.c **** 	dp->obj.stat = (BYTE)obj->c_size;
2039:./Libraries/FatFs/Src/ff.c **** 	dp->obj.objsize = obj->c_size & 0xFFFFFF00;
2040:./Libraries/FatFs/Src/ff.c **** 	dp->blk_ofs = obj->c_ofs;
2041:./Libraries/FatFs/Src/ff.c **** 
2042:./Libraries/FatFs/Src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);	/* Goto object's entry block */
2043:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
2044:./Libraries/FatFs/Src/ff.c **** 		res = load_xdir(dp);		/* Load the object's entry block */
2045:./Libraries/FatFs/Src/ff.c **** 	}
2046:./Libraries/FatFs/Src/ff.c **** 	return res;
2047:./Libraries/FatFs/Src/ff.c **** }
2048:./Libraries/FatFs/Src/ff.c **** #endif
2049:./Libraries/FatFs/Src/ff.c **** 
2050:./Libraries/FatFs/Src/ff.c **** 
2051:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
2052:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------*/
2053:./Libraries/FatFs/Src/ff.c **** /* exFAT: Store the directory block to the media */
2054:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------*/
2055:./Libraries/FatFs/Src/ff.c **** static
2056:./Libraries/FatFs/Src/ff.c **** FRESULT store_xdir (
2057:./Libraries/FatFs/Src/ff.c **** 	DIR* dp				/* Pointer to the direcotry object */
2058:./Libraries/FatFs/Src/ff.c **** )
2059:./Libraries/FatFs/Src/ff.c **** {
2060:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
2061:./Libraries/FatFs/Src/ff.c **** 	UINT nent;
2062:./Libraries/FatFs/Src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the direcotry entry block 85+C0+C1s */
2063:./Libraries/FatFs/Src/ff.c **** 
2064:./Libraries/FatFs/Src/ff.c **** 	/* Create set sum */
2065:./Libraries/FatFs/Src/ff.c **** 	st_word(dirb + XDIR_SetSum, xdir_sum(dirb));
2066:./Libraries/FatFs/Src/ff.c **** 	nent = dirb[XDIR_NumSec] + 1;
2067:./Libraries/FatFs/Src/ff.c **** 
2068:./Libraries/FatFs/Src/ff.c **** 	/* Store the set of directory to the volume */
2069:./Libraries/FatFs/Src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);
2070:./Libraries/FatFs/Src/ff.c **** 	while (res == FR_OK) {
2071:./Libraries/FatFs/Src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2072:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) break;
2073:./Libraries/FatFs/Src/ff.c **** 		mem_cpy(dp->dir, dirb, SZDIRE);
2074:./Libraries/FatFs/Src/ff.c **** 		dp->obj.fs->wflag = 1;
2075:./Libraries/FatFs/Src/ff.c **** 		if (--nent == 0) break;
2076:./Libraries/FatFs/Src/ff.c **** 		dirb += SZDIRE;
2077:./Libraries/FatFs/Src/ff.c **** 		res = dir_next(dp, 0);
2078:./Libraries/FatFs/Src/ff.c **** 	}
2079:./Libraries/FatFs/Src/ff.c **** 	return (res == FR_OK || res == FR_DISK_ERR) ? res : FR_INT_ERR;
2080:./Libraries/FatFs/Src/ff.c **** }
2081:./Libraries/FatFs/Src/ff.c **** 
2082:./Libraries/FatFs/Src/ff.c **** 
2083:./Libraries/FatFs/Src/ff.c **** 
2084:./Libraries/FatFs/Src/ff.c **** /*-------------------------------------------*/
2085:./Libraries/FatFs/Src/ff.c **** /* exFAT: Create a new directory enrty block */
ARM GAS  /tmp/ccaQXGqa.s 			page 46


2086:./Libraries/FatFs/Src/ff.c **** /*-------------------------------------------*/
2087:./Libraries/FatFs/Src/ff.c **** 
2088:./Libraries/FatFs/Src/ff.c **** static
2089:./Libraries/FatFs/Src/ff.c **** void create_xdir (
2090:./Libraries/FatFs/Src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block buffer */
2091:./Libraries/FatFs/Src/ff.c **** 	const WCHAR* lfn	/* Pointer to the nul terminated file name */
2092:./Libraries/FatFs/Src/ff.c **** )
2093:./Libraries/FatFs/Src/ff.c **** {
2094:./Libraries/FatFs/Src/ff.c **** 	UINT i;
2095:./Libraries/FatFs/Src/ff.c **** 	BYTE nb, nc;
2096:./Libraries/FatFs/Src/ff.c **** 	WCHAR chr;
2097:./Libraries/FatFs/Src/ff.c **** 
2098:./Libraries/FatFs/Src/ff.c **** 
2099:./Libraries/FatFs/Src/ff.c **** 	/* Create 85+C0 entry */
2100:./Libraries/FatFs/Src/ff.c **** 	mem_set(dirb, 0, 2 * SZDIRE);
2101:./Libraries/FatFs/Src/ff.c **** 	dirb[XDIR_Type] = 0x85;
2102:./Libraries/FatFs/Src/ff.c **** 	dirb[XDIR_Type + SZDIRE] = 0xC0;
2103:./Libraries/FatFs/Src/ff.c **** 
2104:./Libraries/FatFs/Src/ff.c **** 	/* Create C1 entries */
2105:./Libraries/FatFs/Src/ff.c **** 	nc = 0; nb = 1; chr = 1; i = SZDIRE * 2;
2106:./Libraries/FatFs/Src/ff.c **** 	do {
2107:./Libraries/FatFs/Src/ff.c **** 		dirb[i++] = 0xC1; dirb[i++] = 0;	/* Entry type C1 */
2108:./Libraries/FatFs/Src/ff.c **** 		do {	/* Fill name field */
2109:./Libraries/FatFs/Src/ff.c **** 			if (chr && (chr = lfn[nc]) != 0) nc++;	/* Get a character if exist */
2110:./Libraries/FatFs/Src/ff.c **** 			st_word(dirb + i, chr); 		/* Store it */
2111:./Libraries/FatFs/Src/ff.c **** 		} while ((i += 2) % SZDIRE != 0);
2112:./Libraries/FatFs/Src/ff.c **** 		nb++;
2113:./Libraries/FatFs/Src/ff.c **** 	} while (lfn[nc]);	/* Fill next entry if any char follows */
2114:./Libraries/FatFs/Src/ff.c **** 
2115:./Libraries/FatFs/Src/ff.c **** 	dirb[XDIR_NumName] = nc;	/* Set name length */
2116:./Libraries/FatFs/Src/ff.c **** 	dirb[XDIR_NumSec] = nb;		/* Set block length */
2117:./Libraries/FatFs/Src/ff.c **** 	st_word(dirb + XDIR_NameHash, xname_sum(lfn));	/* Set name hash */
2118:./Libraries/FatFs/Src/ff.c **** }
2119:./Libraries/FatFs/Src/ff.c **** 
2120:./Libraries/FatFs/Src/ff.c **** #endif	/* !_FS_READONLY */
2121:./Libraries/FatFs/Src/ff.c **** #endif	/* _FS_EXFAT */
2122:./Libraries/FatFs/Src/ff.c **** 
2123:./Libraries/FatFs/Src/ff.c **** 
2124:./Libraries/FatFs/Src/ff.c **** 
2125:./Libraries/FatFs/Src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
2126:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2127:./Libraries/FatFs/Src/ff.c **** /* Read an object from the directory                                     */
2128:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2129:./Libraries/FatFs/Src/ff.c **** 
2130:./Libraries/FatFs/Src/ff.c **** static
2131:./Libraries/FatFs/Src/ff.c **** FRESULT dir_read (
2132:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
2133:./Libraries/FatFs/Src/ff.c **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
2134:./Libraries/FatFs/Src/ff.c **** )
2135:./Libraries/FatFs/Src/ff.c **** {
2136:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_NO_FILE;
2137:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
2138:./Libraries/FatFs/Src/ff.c **** 	BYTE a, c;
2139:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0
2140:./Libraries/FatFs/Src/ff.c **** 	BYTE ord = 0xFF, sum = 0xFF;
2141:./Libraries/FatFs/Src/ff.c **** #endif
2142:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 47


2143:./Libraries/FatFs/Src/ff.c **** 	while (dp->sect) {
2144:./Libraries/FatFs/Src/ff.c **** 		res = move_window(fs, dp->sect);
2145:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) break;
2146:./Libraries/FatFs/Src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
2147:./Libraries/FatFs/Src/ff.c **** 		if (c == 0) {
2148:./Libraries/FatFs/Src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
2149:./Libraries/FatFs/Src/ff.c **** 		}
2150:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
2151:./Libraries/FatFs/Src/ff.c **** 		if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2152:./Libraries/FatFs/Src/ff.c **** 			if (_USE_LABEL && vol) {
2153:./Libraries/FatFs/Src/ff.c **** 				if (c == 0x83) break;	/* Volume label entry? */
2154:./Libraries/FatFs/Src/ff.c **** 			} else {
2155:./Libraries/FatFs/Src/ff.c **** 				if (c == 0x85) {		/* Start of the file entry block? */
2156:./Libraries/FatFs/Src/ff.c **** 					dp->blk_ofs = dp->dptr;	/* Get location of the block */
2157:./Libraries/FatFs/Src/ff.c **** 					res = load_xdir(dp);	/* Load the entry block */
2158:./Libraries/FatFs/Src/ff.c **** 					if (res == FR_OK) {
2159:./Libraries/FatFs/Src/ff.c **** 						dp->obj.attr = fs->dirbuf[XDIR_Attr] & AM_MASK;	/* Get attribute */
2160:./Libraries/FatFs/Src/ff.c **** 					}
2161:./Libraries/FatFs/Src/ff.c **** 					break;
2162:./Libraries/FatFs/Src/ff.c **** 				}
2163:./Libraries/FatFs/Src/ff.c **** 			}
2164:./Libraries/FatFs/Src/ff.c **** 		} else
2165:./Libraries/FatFs/Src/ff.c **** #endif
2166:./Libraries/FatFs/Src/ff.c **** 		{	/* On the FAT12/16/32 volume */
2167:./Libraries/FatFs/Src/ff.c **** 			dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
2168:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2169:./Libraries/FatFs/Src/ff.c **** 			if (c == DDEM || c == '.' || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry without valid 
2170:./Libraries/FatFs/Src/ff.c **** 				ord = 0xFF;
2171:./Libraries/FatFs/Src/ff.c **** 			} else {
2172:./Libraries/FatFs/Src/ff.c **** 				if (a == AM_LFN) {			/* An LFN entry is found */
2173:./Libraries/FatFs/Src/ff.c **** 					if (c & LLEF) {			/* Is it start of an LFN sequence? */
2174:./Libraries/FatFs/Src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2175:./Libraries/FatFs/Src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;
2176:./Libraries/FatFs/Src/ff.c **** 						dp->blk_ofs = dp->dptr;
2177:./Libraries/FatFs/Src/ff.c **** 					}
2178:./Libraries/FatFs/Src/ff.c **** 					/* Check LFN validity and capture it */
2179:./Libraries/FatFs/Src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0
2180:./Libraries/FatFs/Src/ff.c **** 				} else {					/* An SFN entry is found */
2181:./Libraries/FatFs/Src/ff.c **** 					if (ord || sum != sum_sfn(dp->dir)) {	/* Is there a valid LFN? */
2182:./Libraries/FatFs/Src/ff.c **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
2183:./Libraries/FatFs/Src/ff.c **** 					}
2184:./Libraries/FatFs/Src/ff.c **** 					break;
2185:./Libraries/FatFs/Src/ff.c **** 				}
2186:./Libraries/FatFs/Src/ff.c **** 			}
2187:./Libraries/FatFs/Src/ff.c **** #else		/* Non LFN configuration */
2188:./Libraries/FatFs/Src/ff.c **** 			if (c != DDEM && c != '.' && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol) {	/* Is it a 
2189:./Libraries/FatFs/Src/ff.c **** 				break;
2190:./Libraries/FatFs/Src/ff.c **** 			}
2191:./Libraries/FatFs/Src/ff.c **** #endif
2192:./Libraries/FatFs/Src/ff.c **** 		}
2193:./Libraries/FatFs/Src/ff.c **** 		res = dir_next(dp, 0);		/* Next entry */
2194:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) break;
2195:./Libraries/FatFs/Src/ff.c **** 	}
2196:./Libraries/FatFs/Src/ff.c **** 
2197:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
2198:./Libraries/FatFs/Src/ff.c **** 	return res;
2199:./Libraries/FatFs/Src/ff.c **** }
ARM GAS  /tmp/ccaQXGqa.s 			page 48


2200:./Libraries/FatFs/Src/ff.c **** 
2201:./Libraries/FatFs/Src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
2202:./Libraries/FatFs/Src/ff.c **** 
2203:./Libraries/FatFs/Src/ff.c **** 
2204:./Libraries/FatFs/Src/ff.c **** 
2205:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2206:./Libraries/FatFs/Src/ff.c **** /* Directory handling - Find an object in the directory                  */
2207:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2208:./Libraries/FatFs/Src/ff.c **** 
2209:./Libraries/FatFs/Src/ff.c **** static
2210:./Libraries/FatFs/Src/ff.c **** FRESULT dir_find (	/* FR_OK(0):succeeded, !=0:error */
2211:./Libraries/FatFs/Src/ff.c **** 	DIR* dp			/* Pointer to the directory object with the file name */
2212:./Libraries/FatFs/Src/ff.c **** )
2213:./Libraries/FatFs/Src/ff.c **** {
2214:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
2215:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
2216:./Libraries/FatFs/Src/ff.c **** 	BYTE c;
2217:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0
2218:./Libraries/FatFs/Src/ff.c **** 	BYTE a, ord, sum;
2219:./Libraries/FatFs/Src/ff.c **** #endif
2220:./Libraries/FatFs/Src/ff.c **** 
2221:./Libraries/FatFs/Src/ff.c **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
2222:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK) return res;
2223:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
2224:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2225:./Libraries/FatFs/Src/ff.c **** 		BYTE nc;
2226:./Libraries/FatFs/Src/ff.c **** 		UINT di, ni;
2227:./Libraries/FatFs/Src/ff.c **** 		WORD hash = xname_sum(fs->lfnbuf);		/* Hash value of the name to find */
2228:./Libraries/FatFs/Src/ff.c **** 
2229:./Libraries/FatFs/Src/ff.c **** 		while ((res = dir_read(dp, 0)) == FR_OK) {	/* Read an item */
2230:./Libraries/FatFs/Src/ff.c **** #if _MAX_LFN < 255
2231:./Libraries/FatFs/Src/ff.c **** 			if (fs->dirbuf[XDIR_NumName] > _MAX_LFN) continue;			/* Skip comparison if inaccessible object n
2232:./Libraries/FatFs/Src/ff.c **** #endif
2233:./Libraries/FatFs/Src/ff.c **** 			if (ld_word(fs->dirbuf + XDIR_NameHash) != hash) continue;	/* Skip comparison if hash mismatched
2234:./Libraries/FatFs/Src/ff.c **** 			for (nc = fs->dirbuf[XDIR_NumName], di = SZDIRE * 2, ni = 0; nc; nc--, di += 2, ni++) {	/* Compa
2235:./Libraries/FatFs/Src/ff.c **** 				if ((di % SZDIRE) == 0) di += 2;
2236:./Libraries/FatFs/Src/ff.c **** 				if (ff_wtoupper(ld_word(fs->dirbuf + di)) != ff_wtoupper(fs->lfnbuf[ni])) break;
2237:./Libraries/FatFs/Src/ff.c **** 			}
2238:./Libraries/FatFs/Src/ff.c **** 			if (nc == 0 && !fs->lfnbuf[ni]) break;	/* Name matched? */
2239:./Libraries/FatFs/Src/ff.c **** 		}
2240:./Libraries/FatFs/Src/ff.c **** 		return res;
2241:./Libraries/FatFs/Src/ff.c **** 	}
2242:./Libraries/FatFs/Src/ff.c **** #endif
2243:./Libraries/FatFs/Src/ff.c **** 	/* On the FAT12/16/32 volume */
2244:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0
2245:./Libraries/FatFs/Src/ff.c **** 	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2246:./Libraries/FatFs/Src/ff.c **** #endif
2247:./Libraries/FatFs/Src/ff.c **** 	do {
2248:./Libraries/FatFs/Src/ff.c **** 		res = move_window(fs, dp->sect);
2249:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) break;
2250:./Libraries/FatFs/Src/ff.c **** 		c = dp->dir[DIR_Name];
2251:./Libraries/FatFs/Src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
2252:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2253:./Libraries/FatFs/Src/ff.c **** 		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
2254:./Libraries/FatFs/Src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
2255:./Libraries/FatFs/Src/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2256:./Libraries/FatFs/Src/ff.c **** 		} else {
ARM GAS  /tmp/ccaQXGqa.s 			page 49


2257:./Libraries/FatFs/Src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
2258:./Libraries/FatFs/Src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
2259:./Libraries/FatFs/Src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
2260:./Libraries/FatFs/Src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2261:./Libraries/FatFs/Src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
2262:./Libraries/FatFs/Src/ff.c **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
2263:./Libraries/FatFs/Src/ff.c **** 					}
2264:./Libraries/FatFs/Src/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
2265:./Libraries/FatFs/Src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0x
2266:./Libraries/FatFs/Src/ff.c **** 				}
2267:./Libraries/FatFs/Src/ff.c **** 			} else {					/* An SFN entry is found */
2268:./Libraries/FatFs/Src/ff.c **** 				if (!ord && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
2269:./Libraries/FatFs/Src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
2270:./Libraries/FatFs/Src/ff.c **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2271:./Libraries/FatFs/Src/ff.c **** 			}
2272:./Libraries/FatFs/Src/ff.c **** 		}
2273:./Libraries/FatFs/Src/ff.c **** #else		/* Non LFN configuration */
2274:./Libraries/FatFs/Src/ff.c **** 		dp->obj.attr = dp->dir[DIR_Attr] & AM_MASK;
2275:./Libraries/FatFs/Src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
2276:./Libraries/FatFs/Src/ff.c **** #endif
2277:./Libraries/FatFs/Src/ff.c **** 		res = dir_next(dp, 0);	/* Next entry */
2278:./Libraries/FatFs/Src/ff.c **** 	} while (res == FR_OK);
2279:./Libraries/FatFs/Src/ff.c **** 
2280:./Libraries/FatFs/Src/ff.c **** 	return res;
2281:./Libraries/FatFs/Src/ff.c **** }
2282:./Libraries/FatFs/Src/ff.c **** 
2283:./Libraries/FatFs/Src/ff.c **** 
2284:./Libraries/FatFs/Src/ff.c **** 
2285:./Libraries/FatFs/Src/ff.c **** 
2286:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
2287:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2288:./Libraries/FatFs/Src/ff.c **** /* Register an object to the directory                                   */
2289:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2290:./Libraries/FatFs/Src/ff.c **** 
2291:./Libraries/FatFs/Src/ff.c **** static
2292:./Libraries/FatFs/Src/ff.c **** FRESULT dir_register (	/* FR_OK:succeeded, FR_DENIED:no free entry or too many SFN collision, FR_DI
2293:./Libraries/FatFs/Src/ff.c **** 	DIR* dp				/* Target directory with object name to be created */
2294:./Libraries/FatFs/Src/ff.c **** )
2295:./Libraries/FatFs/Src/ff.c **** {
2296:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
2297:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
2298:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2299:./Libraries/FatFs/Src/ff.c **** 	UINT n, nlen, nent;
2300:./Libraries/FatFs/Src/ff.c **** 	BYTE sn[12], sum;
2301:./Libraries/FatFs/Src/ff.c **** 
2302:./Libraries/FatFs/Src/ff.c **** 
2303:./Libraries/FatFs/Src/ff.c **** 	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
2304:./Libraries/FatFs/Src/ff.c **** 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
2305:./Libraries/FatFs/Src/ff.c **** 
2306:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
2307:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2308:./Libraries/FatFs/Src/ff.c **** 		DIR dj;
2309:./Libraries/FatFs/Src/ff.c **** 
2310:./Libraries/FatFs/Src/ff.c **** 		nent = (nlen + 14) / 15 + 2;	/* Number of entries to allocate (85+C0+C1s) */
2311:./Libraries/FatFs/Src/ff.c **** 		res = dir_alloc(dp, nent);		/* Allocate entries */
2312:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) return res;
2313:./Libraries/FatFs/Src/ff.c **** 		dp->blk_ofs = dp->dptr - SZDIRE * (nent - 1);	/* Set the allocated entry block offset */
ARM GAS  /tmp/ccaQXGqa.s 			page 50


2314:./Libraries/FatFs/Src/ff.c **** 
2315:./Libraries/FatFs/Src/ff.c **** 		if (dp->obj.sclust != 0 && (dp->obj.stat & 4)) {	/* Has the sub-directory been stretched? */
2316:./Libraries/FatFs/Src/ff.c **** 			dp->obj.objsize += (DWORD)fs->csize * SS(fs);	/* Increase the directory size by cluster size */
2317:./Libraries/FatFs/Src/ff.c **** 			res = fill_first_frag(&dp->obj);				/* Fill first fragment on the FAT if needed */
2318:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) return res;
2319:./Libraries/FatFs/Src/ff.c **** 			res = fill_last_frag(&dp->obj, dp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if neede
2320:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) return res;
2321:./Libraries/FatFs/Src/ff.c **** 			res = load_obj_dir(&dj, &dp->obj);				/* Load the object status */
2322:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) return res;
2323:./Libraries/FatFs/Src/ff.c **** 			st_qword(fs->dirbuf + XDIR_FileSize, dp->obj.objsize);		/* Update the allocation status */
2324:./Libraries/FatFs/Src/ff.c **** 			st_qword(fs->dirbuf + XDIR_ValidFileSize, dp->obj.objsize);
2325:./Libraries/FatFs/Src/ff.c **** 			fs->dirbuf[XDIR_GenFlags] = dp->obj.stat | 1;
2326:./Libraries/FatFs/Src/ff.c **** 			res = store_xdir(&dj);							/* Store the object status */
2327:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) return res;
2328:./Libraries/FatFs/Src/ff.c **** 		}
2329:./Libraries/FatFs/Src/ff.c **** 
2330:./Libraries/FatFs/Src/ff.c **** 		create_xdir(fs->dirbuf, fs->lfnbuf);	/* Create on-memory directory block to be written later */
2331:./Libraries/FatFs/Src/ff.c **** 		return FR_OK;
2332:./Libraries/FatFs/Src/ff.c **** 	}
2333:./Libraries/FatFs/Src/ff.c **** #endif
2334:./Libraries/FatFs/Src/ff.c **** 	/* On the FAT12/16/32 volume */
2335:./Libraries/FatFs/Src/ff.c **** 	mem_cpy(sn, dp->fn, 12);
2336:./Libraries/FatFs/Src/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
2337:./Libraries/FatFs/Src/ff.c **** 		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
2338:./Libraries/FatFs/Src/ff.c **** 		for (n = 1; n < 100; n++) {
2339:./Libraries/FatFs/Src/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
2340:./Libraries/FatFs/Src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
2341:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
2342:./Libraries/FatFs/Src/ff.c **** 		}
2343:./Libraries/FatFs/Src/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
2344:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
2345:./Libraries/FatFs/Src/ff.c **** 		dp->fn[NSFLAG] = sn[NSFLAG];
2346:./Libraries/FatFs/Src/ff.c **** 	}
2347:./Libraries/FatFs/Src/ff.c **** 
2348:./Libraries/FatFs/Src/ff.c **** 	/* Create an SFN with/without LFNs. */
2349:./Libraries/FatFs/Src/ff.c **** 	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
2350:./Libraries/FatFs/Src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
2351:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
2352:./Libraries/FatFs/Src/ff.c **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
2353:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
2354:./Libraries/FatFs/Src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
2355:./Libraries/FatFs/Src/ff.c **** 			do {					/* Store LFN entries in bottom first */
2356:./Libraries/FatFs/Src/ff.c **** 				res = move_window(fs, dp->sect);
2357:./Libraries/FatFs/Src/ff.c **** 				if (res != FR_OK) break;
2358:./Libraries/FatFs/Src/ff.c **** 				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
2359:./Libraries/FatFs/Src/ff.c **** 				fs->wflag = 1;
2360:./Libraries/FatFs/Src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
2361:./Libraries/FatFs/Src/ff.c **** 			} while (res == FR_OK && --nent);
2362:./Libraries/FatFs/Src/ff.c **** 		}
2363:./Libraries/FatFs/Src/ff.c **** 	}
2364:./Libraries/FatFs/Src/ff.c **** 
2365:./Libraries/FatFs/Src/ff.c **** #else	/* Non LFN configuration */
2366:./Libraries/FatFs/Src/ff.c **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
2367:./Libraries/FatFs/Src/ff.c **** 
2368:./Libraries/FatFs/Src/ff.c **** #endif
2369:./Libraries/FatFs/Src/ff.c **** 
2370:./Libraries/FatFs/Src/ff.c **** 	/* Set SFN entry */
ARM GAS  /tmp/ccaQXGqa.s 			page 51


2371:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
2372:./Libraries/FatFs/Src/ff.c **** 		res = move_window(fs, dp->sect);
2373:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
2374:./Libraries/FatFs/Src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
2375:./Libraries/FatFs/Src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
2376:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0
2377:./Libraries/FatFs/Src/ff.c **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
2378:./Libraries/FatFs/Src/ff.c **** #endif
2379:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
2380:./Libraries/FatFs/Src/ff.c **** 		}
2381:./Libraries/FatFs/Src/ff.c **** 	}
2382:./Libraries/FatFs/Src/ff.c **** 
2383:./Libraries/FatFs/Src/ff.c **** 	return res;
2384:./Libraries/FatFs/Src/ff.c **** }
2385:./Libraries/FatFs/Src/ff.c **** 
2386:./Libraries/FatFs/Src/ff.c **** #endif /* !_FS_READONLY */
2387:./Libraries/FatFs/Src/ff.c **** 
2388:./Libraries/FatFs/Src/ff.c **** 
2389:./Libraries/FatFs/Src/ff.c **** 
2390:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE == 0
2391:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2392:./Libraries/FatFs/Src/ff.c **** /* Remove an object from the directory                                   */
2393:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2394:./Libraries/FatFs/Src/ff.c **** 
2395:./Libraries/FatFs/Src/ff.c **** static
2396:./Libraries/FatFs/Src/ff.c **** FRESULT dir_remove (	/* FR_OK:Succeeded, FR_DISK_ERR:A disk error */
2397:./Libraries/FatFs/Src/ff.c **** 	DIR* dp				/* Directory object pointing the entry to be removed */
2398:./Libraries/FatFs/Src/ff.c **** )
2399:./Libraries/FatFs/Src/ff.c **** {
2400:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
2401:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
2402:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2403:./Libraries/FatFs/Src/ff.c **** 	DWORD last = dp->dptr;
2404:./Libraries/FatFs/Src/ff.c **** 
2405:./Libraries/FatFs/Src/ff.c **** 	res = (dp->blk_ofs == 0xFFFFFFFF) ? FR_OK : dir_sdi(dp, dp->blk_ofs);	/* Goto top of the entry blo
2406:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
2407:./Libraries/FatFs/Src/ff.c **** 		do {
2408:./Libraries/FatFs/Src/ff.c **** 			res = move_window(fs, dp->sect);
2409:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
2410:./Libraries/FatFs/Src/ff.c **** 			/* Mark an entry 'deleted' */
2411:./Libraries/FatFs/Src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2412:./Libraries/FatFs/Src/ff.c **** 				dp->dir[XDIR_Type] &= 0x7F;
2413:./Libraries/FatFs/Src/ff.c **** 			} else {									/* On the FAT12/16/32 volume */
2414:./Libraries/FatFs/Src/ff.c **** 				dp->dir[DIR_Name] = DDEM;
2415:./Libraries/FatFs/Src/ff.c **** 			}
2416:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
2417:./Libraries/FatFs/Src/ff.c **** 			if (dp->dptr >= last) break;	/* If reached last entry then all entries of the object has been de
2418:./Libraries/FatFs/Src/ff.c **** 			res = dir_next(dp, 0);	/* Next entry */
2419:./Libraries/FatFs/Src/ff.c **** 		} while (res == FR_OK);
2420:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
2421:./Libraries/FatFs/Src/ff.c **** 	}
2422:./Libraries/FatFs/Src/ff.c **** #else			/* Non LFN configuration */
2423:./Libraries/FatFs/Src/ff.c **** 
2424:./Libraries/FatFs/Src/ff.c **** 	res = move_window(fs, dp->sect);
2425:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
2426:./Libraries/FatFs/Src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
2427:./Libraries/FatFs/Src/ff.c **** 		fs->wflag = 1;
ARM GAS  /tmp/ccaQXGqa.s 			page 52


2428:./Libraries/FatFs/Src/ff.c **** 	}
2429:./Libraries/FatFs/Src/ff.c **** #endif
2430:./Libraries/FatFs/Src/ff.c **** 
2431:./Libraries/FatFs/Src/ff.c **** 	return res;
2432:./Libraries/FatFs/Src/ff.c **** }
2433:./Libraries/FatFs/Src/ff.c **** 
2434:./Libraries/FatFs/Src/ff.c **** #endif /* !_FS_READONLY && _FS_MINIMIZE == 0 */
2435:./Libraries/FatFs/Src/ff.c **** 
2436:./Libraries/FatFs/Src/ff.c **** 
2437:./Libraries/FatFs/Src/ff.c **** 
2438:./Libraries/FatFs/Src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
2439:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2440:./Libraries/FatFs/Src/ff.c **** /* Get file information from directory entry                             */
2441:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2442:./Libraries/FatFs/Src/ff.c **** 
2443:./Libraries/FatFs/Src/ff.c **** static
2444:./Libraries/FatFs/Src/ff.c **** void get_fileinfo (		/* No return code */
2445:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2446:./Libraries/FatFs/Src/ff.c **** 	FILINFO* fno	 	/* Pointer to the file information to be filled */
2447:./Libraries/FatFs/Src/ff.c **** )
2448:./Libraries/FatFs/Src/ff.c **** {
2449:./Libraries/FatFs/Src/ff.c **** 	UINT i, j;
2450:./Libraries/FatFs/Src/ff.c **** 	TCHAR c;
2451:./Libraries/FatFs/Src/ff.c **** 	DWORD tm;
2452:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0
2453:./Libraries/FatFs/Src/ff.c **** 	WCHAR w, lfv;
2454:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
2455:./Libraries/FatFs/Src/ff.c **** #endif
2456:./Libraries/FatFs/Src/ff.c **** 
2457:./Libraries/FatFs/Src/ff.c **** 
2458:./Libraries/FatFs/Src/ff.c **** 	fno->fname[0] = 0;		/* Invaidate file info */
2459:./Libraries/FatFs/Src/ff.c **** 	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
2460:./Libraries/FatFs/Src/ff.c **** 
2461:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2462:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
2463:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2464:./Libraries/FatFs/Src/ff.c **** 		get_xdir_info(fs->dirbuf, fno);
2465:./Libraries/FatFs/Src/ff.c **** 		return;
2466:./Libraries/FatFs/Src/ff.c **** 	} else
2467:./Libraries/FatFs/Src/ff.c **** #endif
2468:./Libraries/FatFs/Src/ff.c **** 	{	/* On the FAT12/16/32 volume */
2469:./Libraries/FatFs/Src/ff.c **** 		if (dp->blk_ofs != 0xFFFFFFFF) {	/* Get LFN if available */
2470:./Libraries/FatFs/Src/ff.c **** 			i = j = 0;
2471:./Libraries/FatFs/Src/ff.c **** 			while ((w = fs->lfnbuf[j++]) != 0) {	/* Get an LFN character */
2472:./Libraries/FatFs/Src/ff.c **** #if !_LFN_UNICODE
2473:./Libraries/FatFs/Src/ff.c **** 				w = ff_convert(w, 0);		/* Unicode -> OEM */
2474:./Libraries/FatFs/Src/ff.c **** 				if (w == 0) { i = 0; break; }	/* No LFN if it could not be converted */
2475:./Libraries/FatFs/Src/ff.c **** 				if (_DF1S && w >= 0x100) {	/* Put 1st byte if it is a DBC (always false at SBCS cfg) */
2476:./Libraries/FatFs/Src/ff.c **** 					fno->fname[i++] = (char)(w >> 8);
2477:./Libraries/FatFs/Src/ff.c **** 				}
2478:./Libraries/FatFs/Src/ff.c **** #endif
2479:./Libraries/FatFs/Src/ff.c **** 				if (i >= _MAX_LFN) { i = 0; break; }	/* No LFN if buffer overflow */
2480:./Libraries/FatFs/Src/ff.c **** 				fno->fname[i++] = (TCHAR)w;
2481:./Libraries/FatFs/Src/ff.c **** 			}
2482:./Libraries/FatFs/Src/ff.c **** 			fno->fname[i] = 0;	/* Terminate the LFN */
2483:./Libraries/FatFs/Src/ff.c **** 		}
2484:./Libraries/FatFs/Src/ff.c **** 	}
ARM GAS  /tmp/ccaQXGqa.s 			page 53


2485:./Libraries/FatFs/Src/ff.c **** 
2486:./Libraries/FatFs/Src/ff.c **** 	i = j = 0;
2487:./Libraries/FatFs/Src/ff.c **** 	lfv = fno->fname[i];	/* LFN is exist if non-zero */
2488:./Libraries/FatFs/Src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2489:./Libraries/FatFs/Src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2490:./Libraries/FatFs/Src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2491:./Libraries/FatFs/Src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2492:./Libraries/FatFs/Src/ff.c **** 		if (i == 9) {						/* Insert a . if extension is exist */
2493:./Libraries/FatFs/Src/ff.c **** 			if (!lfv) fno->fname[j] = '.';
2494:./Libraries/FatFs/Src/ff.c **** 			fno->altname[j++] = '.';
2495:./Libraries/FatFs/Src/ff.c **** 		}
2496:./Libraries/FatFs/Src/ff.c **** #if _LFN_UNICODE
2497:./Libraries/FatFs/Src/ff.c **** 		if (IsDBCS1(c) && i != 8 && i != 11 && IsDBCS2(dp->dir[i])) {
2498:./Libraries/FatFs/Src/ff.c **** 			c = c << 8 | dp->dir[i++];
2499:./Libraries/FatFs/Src/ff.c **** 		}
2500:./Libraries/FatFs/Src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
2501:./Libraries/FatFs/Src/ff.c **** 		if (!c) c = '?';
2502:./Libraries/FatFs/Src/ff.c **** #endif
2503:./Libraries/FatFs/Src/ff.c **** 		fno->altname[j] = c;
2504:./Libraries/FatFs/Src/ff.c **** 		if (!lfv) {
2505:./Libraries/FatFs/Src/ff.c **** 			if (IsUpper(c) && (dp->dir[DIR_NTres] & ((i >= 9) ? NS_EXT : NS_BODY))) {
2506:./Libraries/FatFs/Src/ff.c **** 				c += 0x20;			/* To lower */
2507:./Libraries/FatFs/Src/ff.c **** 			}
2508:./Libraries/FatFs/Src/ff.c **** 			fno->fname[j] = c;
2509:./Libraries/FatFs/Src/ff.c **** 		}
2510:./Libraries/FatFs/Src/ff.c **** 		j++;
2511:./Libraries/FatFs/Src/ff.c **** 	}
2512:./Libraries/FatFs/Src/ff.c **** 	if (!lfv) {
2513:./Libraries/FatFs/Src/ff.c **** 		fno->fname[j] = 0;
2514:./Libraries/FatFs/Src/ff.c **** 		if (!dp->dir[DIR_NTres]) j = 0;	/* Altname is no longer needed if neither LFN nor case info is ex
2515:./Libraries/FatFs/Src/ff.c **** 	}
2516:./Libraries/FatFs/Src/ff.c **** 	fno->altname[j] = 0;	/* Terminate the SFN */
2517:./Libraries/FatFs/Src/ff.c **** 
2518:./Libraries/FatFs/Src/ff.c **** #else	/* Non-LFN configuration */
2519:./Libraries/FatFs/Src/ff.c **** 	i = j = 0;
2520:./Libraries/FatFs/Src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2521:./Libraries/FatFs/Src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2522:./Libraries/FatFs/Src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2523:./Libraries/FatFs/Src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2524:./Libraries/FatFs/Src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
2525:./Libraries/FatFs/Src/ff.c **** 		fno->fname[j++] = c;
2526:./Libraries/FatFs/Src/ff.c **** 	}
2527:./Libraries/FatFs/Src/ff.c **** 	fno->fname[j] = 0;
2528:./Libraries/FatFs/Src/ff.c **** #endif
2529:./Libraries/FatFs/Src/ff.c **** 
2530:./Libraries/FatFs/Src/ff.c **** 	fno->fattrib = dp->dir[DIR_Attr];				/* Attribute */
2531:./Libraries/FatFs/Src/ff.c **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);	/* Size */
2532:./Libraries/FatFs/Src/ff.c **** 	tm = ld_dword(dp->dir + DIR_ModTime);			/* Timestamp */
2533:./Libraries/FatFs/Src/ff.c **** 	fno->ftime = (WORD)tm; fno->fdate = (WORD)(tm >> 16);
2534:./Libraries/FatFs/Src/ff.c **** }
2535:./Libraries/FatFs/Src/ff.c **** 
2536:./Libraries/FatFs/Src/ff.c **** #endif /* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
2537:./Libraries/FatFs/Src/ff.c **** 
2538:./Libraries/FatFs/Src/ff.c **** 
2539:./Libraries/FatFs/Src/ff.c **** 
2540:./Libraries/FatFs/Src/ff.c **** #if _USE_FIND && _FS_MINIMIZE <= 1
2541:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/ccaQXGqa.s 			page 54


2542:./Libraries/FatFs/Src/ff.c **** /* Pattern matching                                                      */
2543:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2544:./Libraries/FatFs/Src/ff.c **** 
2545:./Libraries/FatFs/Src/ff.c **** static
2546:./Libraries/FatFs/Src/ff.c **** WCHAR get_achar (		/* Get a character and advances ptr 1 or 2 */
2547:./Libraries/FatFs/Src/ff.c **** 	const TCHAR** ptr	/* Pointer to pointer to the SBCS/DBCS/Unicode string */
2548:./Libraries/FatFs/Src/ff.c **** )
2549:./Libraries/FatFs/Src/ff.c **** {
2550:./Libraries/FatFs/Src/ff.c **** #if !_LFN_UNICODE
2551:./Libraries/FatFs/Src/ff.c **** 	WCHAR chr;
2552:./Libraries/FatFs/Src/ff.c **** 
2553:./Libraries/FatFs/Src/ff.c **** 	chr = (BYTE)*(*ptr)++;					/* Get a byte */
2554:./Libraries/FatFs/Src/ff.c **** 	if (IsLower(chr)) chr -= 0x20;			/* To upper ASCII char */
2555:./Libraries/FatFs/Src/ff.c **** #ifdef _EXCVT
2556:./Libraries/FatFs/Src/ff.c **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
2557:./Libraries/FatFs/Src/ff.c **** #else
2558:./Libraries/FatFs/Src/ff.c **** 	if (IsDBCS1(chr) && IsDBCS2(**ptr)) {		/* Get DBC 2nd byte if needed */
2559:./Libraries/FatFs/Src/ff.c **** 		chr = chr << 8 | (BYTE)*(*ptr)++;
2560:./Libraries/FatFs/Src/ff.c **** 	}
2561:./Libraries/FatFs/Src/ff.c **** #endif
2562:./Libraries/FatFs/Src/ff.c **** 	return chr;
2563:./Libraries/FatFs/Src/ff.c **** #else
2564:./Libraries/FatFs/Src/ff.c **** 	return ff_wtoupper(*(*ptr)++);			/* Get a word and to upper */
2565:./Libraries/FatFs/Src/ff.c **** #endif
2566:./Libraries/FatFs/Src/ff.c **** }
2567:./Libraries/FatFs/Src/ff.c **** 
2568:./Libraries/FatFs/Src/ff.c **** 
2569:./Libraries/FatFs/Src/ff.c **** static
2570:./Libraries/FatFs/Src/ff.c **** int pattern_matching (	/* 0:not matched, 1:matched */
2571:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* pat,	/* Matching pattern */
2572:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* nam,	/* String to be tested */
2573:./Libraries/FatFs/Src/ff.c **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
2574:./Libraries/FatFs/Src/ff.c **** 	int inf				/* Infinite search (* specified) */
2575:./Libraries/FatFs/Src/ff.c **** )
2576:./Libraries/FatFs/Src/ff.c **** {
2577:./Libraries/FatFs/Src/ff.c **** 	const TCHAR *pp, *np;
2578:./Libraries/FatFs/Src/ff.c **** 	WCHAR pc, nc;
2579:./Libraries/FatFs/Src/ff.c **** 	int nm, nx;
2580:./Libraries/FatFs/Src/ff.c **** 
2581:./Libraries/FatFs/Src/ff.c **** 
2582:./Libraries/FatFs/Src/ff.c **** 	while (skip--) {				/* Pre-skip name chars */
2583:./Libraries/FatFs/Src/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
2584:./Libraries/FatFs/Src/ff.c **** 	}
2585:./Libraries/FatFs/Src/ff.c **** 	if (!*pat && inf) return 1;		/* (short circuit) */
2586:./Libraries/FatFs/Src/ff.c **** 
2587:./Libraries/FatFs/Src/ff.c **** 	do {
2588:./Libraries/FatFs/Src/ff.c **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
2589:./Libraries/FatFs/Src/ff.c **** 		for (;;) {
2590:./Libraries/FatFs/Src/ff.c **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
2591:./Libraries/FatFs/Src/ff.c **** 				nm = nx = 0;
2592:./Libraries/FatFs/Src/ff.c **** 				do {				/* Analyze the wildcard chars */
2593:./Libraries/FatFs/Src/ff.c **** 					if (*pp++ == '?') nm++; else nx = 1;
2594:./Libraries/FatFs/Src/ff.c **** 				} while (*pp == '?' || *pp == '*');
2595:./Libraries/FatFs/Src/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
2596:./Libraries/FatFs/Src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
2597:./Libraries/FatFs/Src/ff.c **** 			}
2598:./Libraries/FatFs/Src/ff.c **** 			pc = get_achar(&pp);	/* Get a pattern char */
ARM GAS  /tmp/ccaQXGqa.s 			page 55


2599:./Libraries/FatFs/Src/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
2600:./Libraries/FatFs/Src/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
2601:./Libraries/FatFs/Src/ff.c **** 			if (pc == 0) return 1;	/* Branch matched? (matched at end of both strings) */
2602:./Libraries/FatFs/Src/ff.c **** 		}
2603:./Libraries/FatFs/Src/ff.c **** 		get_achar(&nam);			/* nam++ */
2604:./Libraries/FatFs/Src/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
2605:./Libraries/FatFs/Src/ff.c **** 
2606:./Libraries/FatFs/Src/ff.c **** 	return 0;
2607:./Libraries/FatFs/Src/ff.c **** }
2608:./Libraries/FatFs/Src/ff.c **** 
2609:./Libraries/FatFs/Src/ff.c **** #endif /* _USE_FIND && _FS_MINIMIZE <= 1 */
2610:./Libraries/FatFs/Src/ff.c **** 
2611:./Libraries/FatFs/Src/ff.c **** 
2612:./Libraries/FatFs/Src/ff.c **** 
2613:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2614:./Libraries/FatFs/Src/ff.c **** /* Pick a top segment and create the object name in directory form       */
2615:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2616:./Libraries/FatFs/Src/ff.c **** 
2617:./Libraries/FatFs/Src/ff.c **** static
2618:./Libraries/FatFs/Src/ff.c **** FRESULT create_name (	/* FR_OK: successful, FR_INVALID_NAME: could not create */
2619:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2620:./Libraries/FatFs/Src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
2621:./Libraries/FatFs/Src/ff.c **** )
2622:./Libraries/FatFs/Src/ff.c **** {
2623:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2624:./Libraries/FatFs/Src/ff.c **** 	BYTE b, cf;
2625:./Libraries/FatFs/Src/ff.c **** 	WCHAR w, *lfn;
2626:./Libraries/FatFs/Src/ff.c **** 	UINT i, ni, si, di;
2627:./Libraries/FatFs/Src/ff.c **** 	const TCHAR *p;
2628:./Libraries/FatFs/Src/ff.c **** 
2629:./Libraries/FatFs/Src/ff.c **** 	/* Create LFN in Unicode */
2630:./Libraries/FatFs/Src/ff.c **** 	p = *path; lfn = dp->obj.fs->lfnbuf; si = di = 0;
2631:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
2632:./Libraries/FatFs/Src/ff.c **** 		w = p[si++];					/* Get a character */
2633:./Libraries/FatFs/Src/ff.c **** 		if (w < ' ') break;				/* Break if end of the path name */
2634:./Libraries/FatFs/Src/ff.c **** 		if (w == '/' || w == '\\') {	/* Break if a separator is found */
2635:./Libraries/FatFs/Src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
2636:./Libraries/FatFs/Src/ff.c **** 			break;
2637:./Libraries/FatFs/Src/ff.c **** 		}
2638:./Libraries/FatFs/Src/ff.c **** 		if (di >= _MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
2639:./Libraries/FatFs/Src/ff.c **** #if !_LFN_UNICODE
2640:./Libraries/FatFs/Src/ff.c **** 		w &= 0xFF;
2641:./Libraries/FatFs/Src/ff.c **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
2642:./Libraries/FatFs/Src/ff.c **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
2643:./Libraries/FatFs/Src/ff.c **** 			w = (w << 8) + b;			/* Create a DBC */
2644:./Libraries/FatFs/Src/ff.c **** 			if (!IsDBCS2(b)) return FR_INVALID_NAME;	/* Reject invalid sequence */
2645:./Libraries/FatFs/Src/ff.c **** 		}
2646:./Libraries/FatFs/Src/ff.c **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
2647:./Libraries/FatFs/Src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
2648:./Libraries/FatFs/Src/ff.c **** #endif
2649:./Libraries/FatFs/Src/ff.c **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) return FR_INVALID_NAME;	/* Reject illegal characters
2650:./Libraries/FatFs/Src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
2651:./Libraries/FatFs/Src/ff.c **** 	}
2652:./Libraries/FatFs/Src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
2653:./Libraries/FatFs/Src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
2654:./Libraries/FatFs/Src/ff.c **** #if _FS_RPATH != 0
2655:./Libraries/FatFs/Src/ff.c **** 	if ((di == 1 && lfn[di - 1] == '.') ||
ARM GAS  /tmp/ccaQXGqa.s 			page 56


2656:./Libraries/FatFs/Src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
2657:./Libraries/FatFs/Src/ff.c **** 		lfn[di] = 0;
2658:./Libraries/FatFs/Src/ff.c **** 		for (i = 0; i < 11; i++)		/* Create dot name for SFN entry */
2659:./Libraries/FatFs/Src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
2660:./Libraries/FatFs/Src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
2661:./Libraries/FatFs/Src/ff.c **** 		return FR_OK;
2662:./Libraries/FatFs/Src/ff.c **** 	}
2663:./Libraries/FatFs/Src/ff.c **** #endif
2664:./Libraries/FatFs/Src/ff.c **** 	while (di) {						/* Snip off trailing spaces and dots if exist */
2665:./Libraries/FatFs/Src/ff.c **** 		w = lfn[di - 1];
2666:./Libraries/FatFs/Src/ff.c **** 		if (w != ' ' && w != '.') break;
2667:./Libraries/FatFs/Src/ff.c **** 		di--;
2668:./Libraries/FatFs/Src/ff.c **** 	}
2669:./Libraries/FatFs/Src/ff.c **** 	lfn[di] = 0;						/* LFN is created */
2670:./Libraries/FatFs/Src/ff.c **** 	if (di == 0) return FR_INVALID_NAME;	/* Reject nul name */
2671:./Libraries/FatFs/Src/ff.c **** 
2672:./Libraries/FatFs/Src/ff.c **** 	/* Create SFN in directory form */
2673:./Libraries/FatFs/Src/ff.c **** 	mem_set(dp->fn, ' ', 11);
2674:./Libraries/FatFs/Src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
2675:./Libraries/FatFs/Src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
2676:./Libraries/FatFs/Src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
2677:./Libraries/FatFs/Src/ff.c **** 
2678:./Libraries/FatFs/Src/ff.c **** 	i = b = 0; ni = 8;
2679:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
2680:./Libraries/FatFs/Src/ff.c **** 		w = lfn[si++];					/* Get an LFN character */
2681:./Libraries/FatFs/Src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
2682:./Libraries/FatFs/Src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
2683:./Libraries/FatFs/Src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
2684:./Libraries/FatFs/Src/ff.c **** 		}
2685:./Libraries/FatFs/Src/ff.c **** 
2686:./Libraries/FatFs/Src/ff.c **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
2687:./Libraries/FatFs/Src/ff.c **** 			if (ni == 11) {				/* Long extension */
2688:./Libraries/FatFs/Src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
2689:./Libraries/FatFs/Src/ff.c **** 			}
2690:./Libraries/FatFs/Src/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
2691:./Libraries/FatFs/Src/ff.c **** 			if (si > di) break;			/* No extension */
2692:./Libraries/FatFs/Src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
2693:./Libraries/FatFs/Src/ff.c **** 			b <<= 2; continue;
2694:./Libraries/FatFs/Src/ff.c **** 		}
2695:./Libraries/FatFs/Src/ff.c **** 
2696:./Libraries/FatFs/Src/ff.c **** 		if (w >= 0x80) {				/* Non ASCII character */
2697:./Libraries/FatFs/Src/ff.c **** #ifdef _EXCVT
2698:./Libraries/FatFs/Src/ff.c **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
2699:./Libraries/FatFs/Src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
2700:./Libraries/FatFs/Src/ff.c **** #else
2701:./Libraries/FatFs/Src/ff.c **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
2702:./Libraries/FatFs/Src/ff.c **** #endif
2703:./Libraries/FatFs/Src/ff.c **** 			cf |= NS_LFN;				/* Force create LFN entry */
2704:./Libraries/FatFs/Src/ff.c **** 		}
2705:./Libraries/FatFs/Src/ff.c **** 
2706:./Libraries/FatFs/Src/ff.c **** 		if (_DF1S && w >= 0x100) {		/* Is this DBC? (always false at SBCS cfg) */
2707:./Libraries/FatFs/Src/ff.c **** 			if (i >= ni - 1) {
2708:./Libraries/FatFs/Src/ff.c **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
2709:./Libraries/FatFs/Src/ff.c **** 			}
2710:./Libraries/FatFs/Src/ff.c **** 			dp->fn[i++] = (BYTE)(w >> 8);
2711:./Libraries/FatFs/Src/ff.c **** 		} else {						/* SBC */
2712:./Libraries/FatFs/Src/ff.c **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
ARM GAS  /tmp/ccaQXGqa.s 			page 57


2713:./Libraries/FatFs/Src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2714:./Libraries/FatFs/Src/ff.c **** 			} else {
2715:./Libraries/FatFs/Src/ff.c **** 				if (IsUpper(w)) {		/* ASCII large capital */
2716:./Libraries/FatFs/Src/ff.c **** 					b |= 2;
2717:./Libraries/FatFs/Src/ff.c **** 				} else {
2718:./Libraries/FatFs/Src/ff.c **** 					if (IsLower(w)) {	/* ASCII small capital */
2719:./Libraries/FatFs/Src/ff.c **** 						b |= 1; w -= 0x20;
2720:./Libraries/FatFs/Src/ff.c **** 					}
2721:./Libraries/FatFs/Src/ff.c **** 				}
2722:./Libraries/FatFs/Src/ff.c **** 			}
2723:./Libraries/FatFs/Src/ff.c **** 		}
2724:./Libraries/FatFs/Src/ff.c **** 		dp->fn[i++] = (BYTE)w;
2725:./Libraries/FatFs/Src/ff.c **** 	}
2726:./Libraries/FatFs/Src/ff.c **** 
2727:./Libraries/FatFs/Src/ff.c **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it
2728:./Libraries/FatFs/Src/ff.c **** 
2729:./Libraries/FatFs/Src/ff.c **** 	if (ni == 8) b <<= 2;
2730:./Libraries/FatFs/Src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* Create LFN entry when there are com
2731:./Libraries/FatFs/Src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
2732:./Libraries/FatFs/Src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
2733:./Libraries/FatFs/Src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
2734:./Libraries/FatFs/Src/ff.c **** 	}
2735:./Libraries/FatFs/Src/ff.c **** 
2736:./Libraries/FatFs/Src/ff.c **** 	dp->fn[NSFLAG] = cf;	/* SFN is created */
2737:./Libraries/FatFs/Src/ff.c **** 
2738:./Libraries/FatFs/Src/ff.c **** 	return FR_OK;
2739:./Libraries/FatFs/Src/ff.c **** 
2740:./Libraries/FatFs/Src/ff.c **** 
2741:./Libraries/FatFs/Src/ff.c **** #else	/* _USE_LFN != 0 : Non-LFN configuration */
2742:./Libraries/FatFs/Src/ff.c **** 	BYTE c, d, *sfn;
2743:./Libraries/FatFs/Src/ff.c **** 	UINT ni, si, i;
2744:./Libraries/FatFs/Src/ff.c **** 	const char *p;
2745:./Libraries/FatFs/Src/ff.c **** 
2746:./Libraries/FatFs/Src/ff.c **** 	/* Create file name in directory form */
2747:./Libraries/FatFs/Src/ff.c **** 	p = *path; sfn = dp->fn;
2748:./Libraries/FatFs/Src/ff.c **** 	mem_set(sfn, ' ', 11);
2749:./Libraries/FatFs/Src/ff.c **** 	si = i = 0; ni = 8;
2750:./Libraries/FatFs/Src/ff.c **** #if _FS_RPATH != 0
2751:./Libraries/FatFs/Src/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
2752:./Libraries/FatFs/Src/ff.c **** 		for (;;) {
2753:./Libraries/FatFs/Src/ff.c **** 			c = (BYTE)p[si++];
2754:./Libraries/FatFs/Src/ff.c **** 			if (c != '.' || si >= 3) break;
2755:./Libraries/FatFs/Src/ff.c **** 			sfn[i++] = c;
2756:./Libraries/FatFs/Src/ff.c **** 		}
2757:./Libraries/FatFs/Src/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
2758:./Libraries/FatFs/Src/ff.c **** 		*path = p + si;								/* Return pointer to the next segment */
2759:./Libraries/FatFs/Src/ff.c **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of the path
2760:./Libraries/FatFs/Src/ff.c **** 		return FR_OK;
2761:./Libraries/FatFs/Src/ff.c **** 	}
2762:./Libraries/FatFs/Src/ff.c **** #endif
2763:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
2764:./Libraries/FatFs/Src/ff.c **** 		c = (BYTE)p[si++];
2765:./Libraries/FatFs/Src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
2766:./Libraries/FatFs/Src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
2767:./Libraries/FatFs/Src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
2768:./Libraries/FatFs/Src/ff.c **** 			break;
2769:./Libraries/FatFs/Src/ff.c **** 		}
ARM GAS  /tmp/ccaQXGqa.s 			page 58


2770:./Libraries/FatFs/Src/ff.c **** 		if (c == '.' || i >= ni) {		/* End of body or over size? */
2771:./Libraries/FatFs/Src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
2772:./Libraries/FatFs/Src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
2773:./Libraries/FatFs/Src/ff.c **** 			continue;
2774:./Libraries/FatFs/Src/ff.c **** 		}
2775:./Libraries/FatFs/Src/ff.c **** 		if (c >= 0x80) {				/* Extended character? */
2776:./Libraries/FatFs/Src/ff.c **** #ifdef _EXCVT
2777:./Libraries/FatFs/Src/ff.c **** 			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
2778:./Libraries/FatFs/Src/ff.c **** #else
2779:./Libraries/FatFs/Src/ff.c **** #if !_DF1S
2780:./Libraries/FatFs/Src/ff.c **** 			return FR_INVALID_NAME;		/* Reject extended characters (ASCII only cfg) */
2781:./Libraries/FatFs/Src/ff.c **** #endif
2782:./Libraries/FatFs/Src/ff.c **** #endif
2783:./Libraries/FatFs/Src/ff.c **** 		}
2784:./Libraries/FatFs/Src/ff.c **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false at SBCS cfg.) */
2785:./Libraries/FatFs/Src/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
2786:./Libraries/FatFs/Src/ff.c **** 			if (!IsDBCS2(d) || i >= ni - 1) return FR_INVALID_NAME;	/* Reject invalid DBC */
2787:./Libraries/FatFs/Src/ff.c **** 			sfn[i++] = c;
2788:./Libraries/FatFs/Src/ff.c **** 			sfn[i++] = d;
2789:./Libraries/FatFs/Src/ff.c **** 		} else {						/* SBC */
2790:./Libraries/FatFs/Src/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return FR_INVALID_NAME;	/* Reject illegal chrs for SFN */
2791:./Libraries/FatFs/Src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
2792:./Libraries/FatFs/Src/ff.c **** 			sfn[i++] = c;
2793:./Libraries/FatFs/Src/ff.c **** 		}
2794:./Libraries/FatFs/Src/ff.c **** 	}
2795:./Libraries/FatFs/Src/ff.c **** 	*path = p + si;						/* Return pointer to the next segment */
2796:./Libraries/FatFs/Src/ff.c **** 	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
2797:./Libraries/FatFs/Src/ff.c **** 
2798:./Libraries/FatFs/Src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with 
2799:./Libraries/FatFs/Src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
2800:./Libraries/FatFs/Src/ff.c **** 
2801:./Libraries/FatFs/Src/ff.c **** 	return FR_OK;
2802:./Libraries/FatFs/Src/ff.c **** #endif /* _USE_LFN != 0 */
2803:./Libraries/FatFs/Src/ff.c **** }
2804:./Libraries/FatFs/Src/ff.c **** 
2805:./Libraries/FatFs/Src/ff.c **** 
2806:./Libraries/FatFs/Src/ff.c **** 
2807:./Libraries/FatFs/Src/ff.c **** 
2808:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2809:./Libraries/FatFs/Src/ff.c **** /* Follow a file path                                                    */
2810:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2811:./Libraries/FatFs/Src/ff.c **** 
2812:./Libraries/FatFs/Src/ff.c **** static
2813:./Libraries/FatFs/Src/ff.c **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
2814:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,			/* Directory object to return last directory and found object */
2815:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path	/* Full-path string to find a file or directory */
2816:./Libraries/FatFs/Src/ff.c **** )
2817:./Libraries/FatFs/Src/ff.c **** {
2818:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
2819:./Libraries/FatFs/Src/ff.c **** 	BYTE ns;
2820:./Libraries/FatFs/Src/ff.c **** 	_FDID *obj = &dp->obj;
2821:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = obj->fs;
2822:./Libraries/FatFs/Src/ff.c **** 
2823:./Libraries/FatFs/Src/ff.c **** 
2824:./Libraries/FatFs/Src/ff.c **** #if _FS_RPATH != 0
2825:./Libraries/FatFs/Src/ff.c **** 	if (*path != '/' && *path != '\\') {	/* Without heading separator */
2826:./Libraries/FatFs/Src/ff.c **** 		obj->sclust = fs->cdir;				/* Start from current directory */
ARM GAS  /tmp/ccaQXGqa.s 			page 59


2827:./Libraries/FatFs/Src/ff.c **** 	} else
2828:./Libraries/FatFs/Src/ff.c **** #endif
2829:./Libraries/FatFs/Src/ff.c **** 	{										/* With heading separator */
2830:./Libraries/FatFs/Src/ff.c **** 		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
2831:./Libraries/FatFs/Src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
2832:./Libraries/FatFs/Src/ff.c **** 	}
2833:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
2834:./Libraries/FatFs/Src/ff.c **** 	obj->n_frag = 0;	/* Invalidate last fragment counter of the object */
2835:./Libraries/FatFs/Src/ff.c **** #if _FS_RPATH != 0
2836:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_EXFAT && obj->sclust) {	/* Retrieve the sub-directory status if needed */
2837:./Libraries/FatFs/Src/ff.c **** 		DIR dj;
2838:./Libraries/FatFs/Src/ff.c **** 
2839:./Libraries/FatFs/Src/ff.c **** 		obj->c_scl = fs->cdc_scl;
2840:./Libraries/FatFs/Src/ff.c **** 		obj->c_size = fs->cdc_size;
2841:./Libraries/FatFs/Src/ff.c **** 		obj->c_ofs = fs->cdc_ofs;
2842:./Libraries/FatFs/Src/ff.c **** 		res = load_obj_dir(&dj, obj);
2843:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) return res;
2844:./Libraries/FatFs/Src/ff.c **** 		obj->objsize = ld_dword(fs->dirbuf + XDIR_FileSize);
2845:./Libraries/FatFs/Src/ff.c **** 		obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2846:./Libraries/FatFs/Src/ff.c **** 	}
2847:./Libraries/FatFs/Src/ff.c **** #endif
2848:./Libraries/FatFs/Src/ff.c **** #endif
2849:./Libraries/FatFs/Src/ff.c **** 
2850:./Libraries/FatFs/Src/ff.c **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
2851:./Libraries/FatFs/Src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
2852:./Libraries/FatFs/Src/ff.c **** 		res = dir_sdi(dp, 0);
2853:./Libraries/FatFs/Src/ff.c **** 
2854:./Libraries/FatFs/Src/ff.c **** 	} else {								/* Follow path */
2855:./Libraries/FatFs/Src/ff.c **** 		for (;;) {
2856:./Libraries/FatFs/Src/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
2857:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
2858:./Libraries/FatFs/Src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
2859:./Libraries/FatFs/Src/ff.c **** 			ns = dp->fn[NSFLAG];
2860:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
2861:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
2862:./Libraries/FatFs/Src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
2863:./Libraries/FatFs/Src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
2864:./Libraries/FatFs/Src/ff.c **** 						dp->fn[NSFLAG] = NS_NONAME;
2865:./Libraries/FatFs/Src/ff.c **** 						res = FR_OK;
2866:./Libraries/FatFs/Src/ff.c **** 					} else {							/* Could not find the object */
2867:./Libraries/FatFs/Src/ff.c **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
2868:./Libraries/FatFs/Src/ff.c **** 					}
2869:./Libraries/FatFs/Src/ff.c **** 				}
2870:./Libraries/FatFs/Src/ff.c **** 				break;
2871:./Libraries/FatFs/Src/ff.c **** 			}
2872:./Libraries/FatFs/Src/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
2873:./Libraries/FatFs/Src/ff.c **** 			/* Get into the sub-directory */
2874:./Libraries/FatFs/Src/ff.c **** 			if (!(obj->attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
2875:./Libraries/FatFs/Src/ff.c **** 				res = FR_NO_PATH; break;
2876:./Libraries/FatFs/Src/ff.c **** 			}
2877:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
2878:./Libraries/FatFs/Src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {		/* Save containing directory information for next dir */
2879:./Libraries/FatFs/Src/ff.c **** 				obj->c_scl = obj->sclust;
2880:./Libraries/FatFs/Src/ff.c **** 				obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
2881:./Libraries/FatFs/Src/ff.c **** 				obj->c_ofs = dp->blk_ofs;
2882:./Libraries/FatFs/Src/ff.c **** 				obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Open next directory */
2883:./Libraries/FatFs/Src/ff.c **** 				obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
ARM GAS  /tmp/ccaQXGqa.s 			page 60


2884:./Libraries/FatFs/Src/ff.c **** 				obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
2885:./Libraries/FatFs/Src/ff.c **** 			} else
2886:./Libraries/FatFs/Src/ff.c **** #endif
2887:./Libraries/FatFs/Src/ff.c **** 			{
2888:./Libraries/FatFs/Src/ff.c **** 				obj->sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
2889:./Libraries/FatFs/Src/ff.c **** 			}
2890:./Libraries/FatFs/Src/ff.c **** 		}
2891:./Libraries/FatFs/Src/ff.c **** 	}
2892:./Libraries/FatFs/Src/ff.c **** 
2893:./Libraries/FatFs/Src/ff.c **** 	return res;
2894:./Libraries/FatFs/Src/ff.c **** }
2895:./Libraries/FatFs/Src/ff.c **** 
2896:./Libraries/FatFs/Src/ff.c **** 
2897:./Libraries/FatFs/Src/ff.c **** 
2898:./Libraries/FatFs/Src/ff.c **** 
2899:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2900:./Libraries/FatFs/Src/ff.c **** /* Get logical drive number from path name                               */
2901:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2902:./Libraries/FatFs/Src/ff.c **** 
2903:./Libraries/FatFs/Src/ff.c **** static
2904:./Libraries/FatFs/Src/ff.c **** int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
2905:./Libraries/FatFs/Src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the path name */
2906:./Libraries/FatFs/Src/ff.c **** )
2907:./Libraries/FatFs/Src/ff.c **** {
 415              		.loc 1 2907 1 is_stmt 1 view -0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              		@ link register save eliminated.
2908:./Libraries/FatFs/Src/ff.c **** 	const TCHAR *tp, *tt;
 420              		.loc 1 2908 2 view .LVU116
2909:./Libraries/FatFs/Src/ff.c **** 	UINT i;
 421              		.loc 1 2909 2 view .LVU117
2910:./Libraries/FatFs/Src/ff.c **** 	int vol = -1;
 422              		.loc 1 2910 2 view .LVU118
2911:./Libraries/FatFs/Src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
2912:./Libraries/FatFs/Src/ff.c **** 	static const char* const volid[] = {_VOLUME_STRS};
2913:./Libraries/FatFs/Src/ff.c **** 	const char *sp;
2914:./Libraries/FatFs/Src/ff.c **** 	char c;
2915:./Libraries/FatFs/Src/ff.c **** 	TCHAR tc;
2916:./Libraries/FatFs/Src/ff.c **** #endif
2917:./Libraries/FatFs/Src/ff.c **** 
2918:./Libraries/FatFs/Src/ff.c **** 
2919:./Libraries/FatFs/Src/ff.c **** 	if (*path) {	/* If the pointer is not a null */
 423              		.loc 1 2919 2 view .LVU119
 424              		.loc 1 2919 6 is_stmt 0 view .LVU120
 425 0000 0168     		ldr	r1, [r0]
 426              		.loc 1 2919 5 view .LVU121
 427 0002 11B3     		cbz	r1, .L52
 428              	.LVL30:
2920:./Libraries/FatFs/Src/ff.c **** 		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the pa
 429              		.loc 1 2920 20 is_stmt 1 view .LVU122
 430              		.loc 1 2920 3 is_stmt 0 view .LVU123
 431 0004 0A46     		mov	r2, r1
2907:./Libraries/FatFs/Src/ff.c **** 	const TCHAR *tp, *tt;
 432              		.loc 1 2907 1 view .LVU124
 433 0006 10B4     		push	{r4}
ARM GAS  /tmp/ccaQXGqa.s 			page 61


 434              	.LCFI12:
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 4, -4
 437 0008 0446     		mov	r4, r0
 438              		.loc 1 2920 26 view .LVU125
 439 000a 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 440              	.LVL31:
 441              		.loc 1 2920 3 view .LVU126
 442 000c 3A28     		cmp	r0, #58
 443 000e 11D0     		beq	.L53
 444 0010 2028     		cmp	r0, #32
 445 0012 0FD9     		bls	.L53
 446              	.LVL32:
 447              	.L50:
 448              		.loc 1 2920 77 is_stmt 1 discriminator 3 view .LVU127
 449              		.loc 1 2920 71 discriminator 3 view .LVU128
 450              		.loc 1 2920 20 discriminator 3 view .LVU129
 451              		.loc 1 2920 26 is_stmt 0 discriminator 3 view .LVU130
 452 0014 12F8013F 		ldrb	r3, [r2, #1]!	@ zero_extendqisi2
 453              	.LVL33:
 454              		.loc 1 2920 3 discriminator 3 view .LVU131
 455 0018 202B     		cmp	r3, #32
 456 001a 0CD9     		bls	.L49
 457 001c 3A2B     		cmp	r3, #58
 458 001e F9D1     		bne	.L50
 459              	.L72:
2921:./Libraries/FatFs/Src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
2922:./Libraries/FatFs/Src/ff.c **** 			tp = *path;
 460              		.loc 1 2922 4 is_stmt 1 view .LVU132
 461              	.LVL34:
2923:./Libraries/FatFs/Src/ff.c **** 			i = *tp++ - '0';
 462              		.loc 1 2923 4 view .LVU133
2924:./Libraries/FatFs/Src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 463              		.loc 1 2924 4 view .LVU134
2925:./Libraries/FatFs/Src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 464              		.loc 1 2925 5 view .LVU135
2923:./Libraries/FatFs/Src/ff.c **** 			i = *tp++ - '0';
 465              		.loc 1 2923 11 is_stmt 0 view .LVU136
 466 0020 0131     		adds	r1, r1, #1
 467              	.LVL35:
 468              		.loc 1 2925 8 view .LVU137
 469 0022 8A42     		cmp	r2, r1
 470 0024 01D1     		bne	.L55
 471              		.loc 1 2925 8 view .LVU138
 472 0026 3028     		cmp	r0, #48
 473 0028 0BD0     		beq	.L77
 474              	.L55:
2910:./Libraries/FatFs/Src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 475              		.loc 1 2910 6 view .LVU139
 476 002a 4FF0FF30 		mov	r0, #-1
 477              	.LVL36:
2926:./Libraries/FatFs/Src/ff.c **** 					vol = (int)i;
2927:./Libraries/FatFs/Src/ff.c **** 					*path = ++tt;
2928:./Libraries/FatFs/Src/ff.c **** 				}
2929:./Libraries/FatFs/Src/ff.c **** 			}
2930:./Libraries/FatFs/Src/ff.c **** #if _STR_VOLUME_ID
2931:./Libraries/FatFs/Src/ff.c **** 			 else {	/* No numeric drive number, find string drive id */
ARM GAS  /tmp/ccaQXGqa.s 			page 62


2932:./Libraries/FatFs/Src/ff.c **** 				i = 0; tt++;
2933:./Libraries/FatFs/Src/ff.c **** 				do {
2934:./Libraries/FatFs/Src/ff.c **** 					sp = volid[i]; tp = *path;
2935:./Libraries/FatFs/Src/ff.c **** 					do {	/* Compare a string drive id with path name */
2936:./Libraries/FatFs/Src/ff.c **** 						c = *sp++; tc = *tp++;
2937:./Libraries/FatFs/Src/ff.c **** 						if (IsLower(tc)) tc -= 0x20;
2938:./Libraries/FatFs/Src/ff.c **** 					} while (c && (TCHAR)c == tc);
2939:./Libraries/FatFs/Src/ff.c **** 				} while ((c || tp != tt) && ++i < _VOLUMES);	/* Repeat for each id until pattern match */
2940:./Libraries/FatFs/Src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2941:./Libraries/FatFs/Src/ff.c **** 					vol = (int)i;
2942:./Libraries/FatFs/Src/ff.c **** 					*path = tt;
2943:./Libraries/FatFs/Src/ff.c **** 				}
2944:./Libraries/FatFs/Src/ff.c **** 			}
2945:./Libraries/FatFs/Src/ff.c **** #endif
2946:./Libraries/FatFs/Src/ff.c **** 			return vol;
2947:./Libraries/FatFs/Src/ff.c **** 		}
2948:./Libraries/FatFs/Src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
2949:./Libraries/FatFs/Src/ff.c **** 		vol = CurrVol;	/* Current drive */
2950:./Libraries/FatFs/Src/ff.c **** #else
2951:./Libraries/FatFs/Src/ff.c **** 		vol = 0;		/* Drive 0 */
2952:./Libraries/FatFs/Src/ff.c **** #endif
2953:./Libraries/FatFs/Src/ff.c **** 	}
2954:./Libraries/FatFs/Src/ff.c **** 	return vol;
2955:./Libraries/FatFs/Src/ff.c **** }
 478              		.loc 1 2955 1 view .LVU140
 479 002e 5DF8044B 		ldr	r4, [sp], #4
 480              	.LCFI13:
 481              		.cfi_remember_state
 482              		.cfi_restore 4
 483              		.cfi_def_cfa_offset 0
 484              	.LVL37:
 485              		.loc 1 2955 1 view .LVU141
 486 0032 7047     		bx	lr
 487              	.LVL38:
 488              	.L53:
 489              	.LCFI14:
 490              		.cfi_restore_state
2920:./Libraries/FatFs/Src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
 491              		.loc 1 2920 26 view .LVU142
 492 0034 0346     		mov	r3, r0
 493              	.LVL39:
 494              	.L49:
2921:./Libraries/FatFs/Src/ff.c **** 			tp = *path;
 495              		.loc 1 2921 3 is_stmt 1 view .LVU143
2921:./Libraries/FatFs/Src/ff.c **** 			tp = *path;
 496              		.loc 1 2921 6 is_stmt 0 view .LVU144
 497 0036 3A2B     		cmp	r3, #58
 498 0038 F2D0     		beq	.L72
2951:./Libraries/FatFs/Src/ff.c **** #endif
 499              		.loc 1 2951 7 view .LVU145
 500 003a 0020     		movs	r0, #0
 501              	.LVL40:
 502              	.L47:
 503              		.loc 1 2955 1 view .LVU146
 504 003c 5DF8044B 		ldr	r4, [sp], #4
 505              	.LCFI15:
 506              		.cfi_remember_state
ARM GAS  /tmp/ccaQXGqa.s 			page 63


 507              		.cfi_restore 4
 508              		.cfi_def_cfa_offset 0
 509              	.LVL41:
 510              		.loc 1 2955 1 view .LVU147
 511 0040 7047     		bx	lr
 512              	.LVL42:
 513              	.L77:
 514              	.LCFI16:
 515              		.cfi_restore_state
2926:./Libraries/FatFs/Src/ff.c **** 					*path = ++tt;
 516              		.loc 1 2926 6 is_stmt 1 view .LVU148
2927:./Libraries/FatFs/Src/ff.c **** 				}
 517              		.loc 1 2927 6 view .LVU149
2927:./Libraries/FatFs/Src/ff.c **** 				}
 518              		.loc 1 2927 12 is_stmt 0 view .LVU150
 519 0042 0132     		adds	r2, r2, #1
 520              	.LVL43:
2926:./Libraries/FatFs/Src/ff.c **** 					*path = ++tt;
 521              		.loc 1 2926 10 view .LVU151
 522 0044 0020     		movs	r0, #0
 523              	.LVL44:
2927:./Libraries/FatFs/Src/ff.c **** 				}
 524              		.loc 1 2927 12 view .LVU152
 525 0046 2260     		str	r2, [r4]
 526 0048 F8E7     		b	.L47
 527              	.LVL45:
 528              	.L52:
 529              	.LCFI17:
 530              		.cfi_def_cfa_offset 0
 531              		.cfi_restore 4
2910:./Libraries/FatFs/Src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 532              		.loc 1 2910 6 view .LVU153
 533 004a 4FF0FF30 		mov	r0, #-1
 534              	.LVL46:
 535              		.loc 1 2955 1 view .LVU154
 536 004e 7047     		bx	lr
 537              		.cfi_endproc
 538              	.LFE371:
 540              		.section	.text.mem_cpy.part.0,"ax",%progbits
 541              		.align	1
 542              		.p2align 2,,3
 543              		.syntax unified
 544              		.thumb
 545              		.thumb_func
 546              		.fpu fpv5-d16
 548              	mem_cpy.part.0:
 549              	.LVL47:
 550              	.LFB399:
 693:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 551              		.loc 1 693 6 is_stmt 1 view -0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 693:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 556              		.loc 1 693 6 is_stmt 0 view .LVU156
 557 0000 0138     		subs	r0, r0, #1
ARM GAS  /tmp/ccaQXGqa.s 			page 64


 558              	.LVL48:
 693:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 559              		.loc 1 693 6 view .LVU157
 560 0002 0A44     		add	r2, r2, r1
 561              	.LVL49:
 562              	.L79:
 698:./Libraries/FatFs/Src/ff.c **** 			*d++ = *s++;
 563              		.loc 1 698 3 is_stmt 1 view .LVU158
 699:./Libraries/FatFs/Src/ff.c **** 		} while (--cnt);
 564              		.loc 1 699 4 view .LVU159
 699:./Libraries/FatFs/Src/ff.c **** 		} while (--cnt);
 565              		.loc 1 699 11 is_stmt 0 view .LVU160
 566 0004 11F8013B 		ldrb	r3, [r1], #1	@ zero_extendqisi2
 567              	.LVL50:
 700:./Libraries/FatFs/Src/ff.c **** 	}
 568              		.loc 1 700 3 view .LVU161
 569 0008 9142     		cmp	r1, r2
 699:./Libraries/FatFs/Src/ff.c **** 		} while (--cnt);
 570              		.loc 1 699 9 view .LVU162
 571 000a 00F8013F 		strb	r3, [r0, #1]!
 700:./Libraries/FatFs/Src/ff.c **** 	}
 572              		.loc 1 700 11 is_stmt 1 view .LVU163
 700:./Libraries/FatFs/Src/ff.c **** 	}
 573              		.loc 1 700 3 is_stmt 0 view .LVU164
 574 000e F9D1     		bne	.L79
 702:./Libraries/FatFs/Src/ff.c **** 
 575              		.loc 1 702 1 view .LVU165
 576 0010 7047     		bx	lr
 577              		.cfi_endproc
 578              	.LFE399:
 580 0012 00BF     		.section	.text.get_fileinfo.isra.0.part.0,"ax",%progbits
 581              		.align	1
 582              		.p2align 2,,3
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
 586              		.fpu fpv5-d16
 588              	get_fileinfo.isra.0.part.0:
 589              	.LVL51:
 590              	.LFB404:
2444:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
 591              		.loc 1 2444 6 is_stmt 1 view -0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		@ link register save eliminated.
2520:./Libraries/FatFs/Src/ff.c **** 		c = (TCHAR)dp->dir[i++];
 596              		.loc 1 2520 8 view .LVU167
2444:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
 597              		.loc 1 2444 6 is_stmt 0 view .LVU168
 598 0000 F0B4     		push	{r4, r5, r6, r7}
 599              	.LCFI18:
 600              		.cfi_def_cfa_offset 16
 601              		.cfi_offset 4, -16
 602              		.cfi_offset 5, -12
 603              		.cfi_offset 6, -8
 604              		.cfi_offset 7, -4
ARM GAS  /tmp/ccaQXGqa.s 			page 65


2521:./Libraries/FatFs/Src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
 605              		.loc 1 2521 16 view .LVU169
 606 0002 0568     		ldr	r5, [r0]
2519:./Libraries/FatFs/Src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
 607              		.loc 1 2519 8 view .LVU170
 608 0004 0024     		movs	r4, #0
2524:./Libraries/FatFs/Src/ff.c **** 		fno->fname[j++] = c;
 609              		.loc 1 2524 31 view .LVU171
 610 0006 2E27     		movs	r7, #46
 611 0008 6A1E     		subs	r2, r5, #1
 612 000a 05F10A06 		add	r6, r5, #10
 613 000e 04E0     		b	.L85
 614              	.LVL52:
 615              	.L84:
2525:./Libraries/FatFs/Src/ff.c **** 	}
 616              		.loc 1 2525 3 is_stmt 1 view .LVU172
2525:./Libraries/FatFs/Src/ff.c **** 	}
 617              		.loc 1 2525 19 is_stmt 0 view .LVU173
 618 0010 0819     		adds	r0, r1, r4
 619 0012 0134     		adds	r4, r4, #1
 620              	.LVL53:
2525:./Libraries/FatFs/Src/ff.c **** 	}
 621              		.loc 1 2525 19 view .LVU174
 622 0014 4372     		strb	r3, [r0, #9]
 623              	.L82:
2520:./Libraries/FatFs/Src/ff.c **** 		c = (TCHAR)dp->dir[i++];
 624              		.loc 1 2520 8 is_stmt 1 view .LVU175
 625 0016 B242     		cmp	r2, r6
 626 0018 0FD0     		beq	.L91
 627              	.LVL54:
 628              	.L85:
2521:./Libraries/FatFs/Src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
 629              		.loc 1 2521 3 view .LVU176
2523:./Libraries/FatFs/Src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
 630              		.loc 1 2523 3 view .LVU177
 631 001a 1046     		mov	r0, r2
2521:./Libraries/FatFs/Src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
 632              		.loc 1 2521 5 is_stmt 0 view .LVU178
 633 001c 12F8013F 		ldrb	r3, [r2, #1]!	@ zero_extendqisi2
 634              	.LVL55:
2522:./Libraries/FatFs/Src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
 635              		.loc 1 2522 3 is_stmt 1 view .LVU179
2522:./Libraries/FatFs/Src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
 636              		.loc 1 2522 6 is_stmt 0 view .LVU180
 637 0020 202B     		cmp	r3, #32
2524:./Libraries/FatFs/Src/ff.c **** 		fno->fname[j++] = c;
 638              		.loc 1 2524 6 view .LVU181
 639 0022 A0F10700 		sub	r0, r0, #7
2522:./Libraries/FatFs/Src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
 640              		.loc 1 2522 6 view .LVU182
 641 0026 F6D0     		beq	.L82
2523:./Libraries/FatFs/Src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
 642              		.loc 1 2523 21 view .LVU183
 643 0028 052B     		cmp	r3, #5
 644 002a 08BF     		it	eq
 645 002c E523     		moveq	r3, #229
 646              	.LVL56:
ARM GAS  /tmp/ccaQXGqa.s 			page 66


2524:./Libraries/FatFs/Src/ff.c **** 		fno->fname[j++] = c;
 647              		.loc 1 2524 3 is_stmt 1 view .LVU184
2524:./Libraries/FatFs/Src/ff.c **** 		fno->fname[j++] = c;
 648              		.loc 1 2524 6 is_stmt 0 view .LVU185
 649 002e A842     		cmp	r0, r5
 650 0030 EED1     		bne	.L84
2524:./Libraries/FatFs/Src/ff.c **** 		fno->fname[j++] = c;
 651              		.loc 1 2524 15 is_stmt 1 view .LVU186
 652              	.LVL57:
2524:./Libraries/FatFs/Src/ff.c **** 		fno->fname[j++] = c;
 653              		.loc 1 2524 31 is_stmt 0 view .LVU187
 654 0032 0819     		adds	r0, r1, r4
 655 0034 0134     		adds	r4, r4, #1
 656              	.LVL58:
2524:./Libraries/FatFs/Src/ff.c **** 		fno->fname[j++] = c;
 657              		.loc 1 2524 31 view .LVU188
 658 0036 4772     		strb	r7, [r0, #9]
 659 0038 EAE7     		b	.L84
 660              	.L91:
2527:./Libraries/FatFs/Src/ff.c **** #endif
 661              		.loc 1 2527 2 is_stmt 1 view .LVU189
2527:./Libraries/FatFs/Src/ff.c **** #endif
 662              		.loc 1 2527 16 is_stmt 0 view .LVU190
 663 003a 0C44     		add	r4, r4, r1
 664              	.LVL59:
2527:./Libraries/FatFs/Src/ff.c **** #endif
 665              		.loc 1 2527 16 view .LVU191
 666 003c 0023     		movs	r3, #0
 667              	.LVL60:
2527:./Libraries/FatFs/Src/ff.c **** #endif
 668              		.loc 1 2527 16 view .LVU192
 669 003e 6372     		strb	r3, [r4, #9]
2530:./Libraries/FatFs/Src/ff.c **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);	/* Size */
 670              		.loc 1 2530 2 is_stmt 1 view .LVU193
2530:./Libraries/FatFs/Src/ff.c **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);	/* Size */
 671              		.loc 1 2530 15 is_stmt 0 view .LVU194
 672 0040 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 673 0042 0B72     		strb	r3, [r1, #8]
2531:./Libraries/FatFs/Src/ff.c **** 	tm = ld_dword(dp->dir + DIR_ModTime);			/* Timestamp */
 674              		.loc 1 2531 2 is_stmt 1 view .LVU195
 675              	.LVL61:
 676              	.LBB542:
 677              	.LBI542:
 623:./Libraries/FatFs/Src/ff.c **** {
 678              		.loc 1 623 7 view .LVU196
 679              	.LBB543:
 625:./Libraries/FatFs/Src/ff.c **** 
 680              		.loc 1 625 2 view .LVU197
 627:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 681              		.loc 1 627 2 view .LVU198
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 682              		.loc 1 628 2 view .LVU199
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 683              		.loc 1 629 2 view .LVU200
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 684              		.loc 1 628 5 is_stmt 0 view .LVU201
 685 0044 E88B     		ldrh	r0, [r5, #30]	@ unaligned
ARM GAS  /tmp/ccaQXGqa.s 			page 67


 686              	.LVL62:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 687              		.loc 1 630 2 is_stmt 1 view .LVU202
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 688              		.loc 1 629 20 is_stmt 0 view .LVU203
 689 0046 6A7F     		ldrb	r2, [r5, #29]	@ zero_extendqisi2
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 690              		.loc 1 630 20 view .LVU204
 691 0048 2B7F     		ldrb	r3, [r5, #28]	@ zero_extendqisi2
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 692              		.loc 1 629 5 view .LVU205
 693 004a 42EA0022 		orr	r2, r2, r0, lsl #8
 694              	.LVL63:
 631:./Libraries/FatFs/Src/ff.c **** }
 695              		.loc 1 631 2 is_stmt 1 view .LVU206
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 696              		.loc 1 630 5 is_stmt 0 view .LVU207
 697 004e 43EA0223 		orr	r3, r3, r2, lsl #8
 698              	.LBE543:
 699              	.LBE542:
2531:./Libraries/FatFs/Src/ff.c **** 	tm = ld_dword(dp->dir + DIR_ModTime);			/* Timestamp */
 700              		.loc 1 2531 13 view .LVU208
 701 0052 0B60     		str	r3, [r1]
2532:./Libraries/FatFs/Src/ff.c **** 	fno->ftime = (WORD)tm; fno->fdate = (WORD)(tm >> 16);
 702              		.loc 1 2532 2 is_stmt 1 view .LVU209
 703              	.LVL64:
 704              	.LBB544:
 705              	.LBI544:
 623:./Libraries/FatFs/Src/ff.c **** {
 706              		.loc 1 623 7 view .LVU210
 707              	.LBB545:
 625:./Libraries/FatFs/Src/ff.c **** 
 708              		.loc 1 625 2 view .LVU211
 627:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 709              		.loc 1 627 2 view .LVU212
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 710              		.loc 1 628 2 view .LVU213
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 711              		.loc 1 629 2 view .LVU214
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 712              		.loc 1 628 5 is_stmt 0 view .LVU215
 713 0054 288B     		ldrh	r0, [r5, #24]	@ unaligned
 714              	.LVL65:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 715              		.loc 1 630 2 is_stmt 1 view .LVU216
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 716              		.loc 1 629 20 is_stmt 0 view .LVU217
 717 0056 EA7D     		ldrb	r2, [r5, #23]	@ zero_extendqisi2
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 718              		.loc 1 630 20 view .LVU218
 719 0058 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 720              		.loc 1 629 5 view .LVU219
 721 005a 42EA0022 		orr	r2, r2, r0, lsl #8
 722              	.LVL66:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 723              		.loc 1 630 5 view .LVU220
ARM GAS  /tmp/ccaQXGqa.s 			page 68


 724 005e 43EA0223 		orr	r3, r3, r2, lsl #8
 725              	.LVL67:
 631:./Libraries/FatFs/Src/ff.c **** }
 726              		.loc 1 631 2 is_stmt 1 view .LVU221
 631:./Libraries/FatFs/Src/ff.c **** }
 727              		.loc 1 631 2 is_stmt 0 view .LVU222
 728              	.LBE545:
 729              	.LBE544:
2533:./Libraries/FatFs/Src/ff.c **** }
 730              		.loc 1 2533 2 is_stmt 1 view .LVU223
2533:./Libraries/FatFs/Src/ff.c **** }
 731              		.loc 1 2533 48 is_stmt 0 view .LVU224
 732 0062 1A0C     		lsrs	r2, r3, #16
2533:./Libraries/FatFs/Src/ff.c **** }
 733              		.loc 1 2533 15 view .LVU225
 734 0064 CB80     		strh	r3, [r1, #6]	@ movhi
2533:./Libraries/FatFs/Src/ff.c **** }
 735              		.loc 1 2533 25 is_stmt 1 view .LVU226
2534:./Libraries/FatFs/Src/ff.c **** 
 736              		.loc 1 2534 1 is_stmt 0 view .LVU227
 737 0066 F0BC     		pop	{r4, r5, r6, r7}
 738              	.LCFI19:
 739              		.cfi_restore 7
 740              		.cfi_restore 6
 741              		.cfi_restore 5
 742              		.cfi_restore 4
 743              		.cfi_def_cfa_offset 0
2533:./Libraries/FatFs/Src/ff.c **** }
 744              		.loc 1 2533 38 view .LVU228
 745 0068 8A80     		strh	r2, [r1, #4]	@ movhi
2534:./Libraries/FatFs/Src/ff.c **** 
 746              		.loc 1 2534 1 view .LVU229
 747 006a 7047     		bx	lr
 748              		.cfi_endproc
 749              	.LFE404:
 751              		.section	.text.sync_window.part.0,"ax",%progbits
 752              		.align	1
 753              		.p2align 2,,3
 754              		.syntax unified
 755              		.thumb
 756              		.thumb_func
 757              		.fpu fpv5-d16
 759              	sync_window.part.0:
 760              	.LVL68:
 761              	.LFB406:
 883:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs			/* File system object */
 762              		.loc 1 883 9 is_stmt 1 view -0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 0, uses_anonymous_args = 0
 893:./Libraries/FatFs/Src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 766              		.loc 1 893 3 view .LVU231
 883:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs			/* File system object */
 767              		.loc 1 883 9 is_stmt 0 view .LVU232
 768 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 769              	.LCFI20:
 770              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccaQXGqa.s 			page 69


 771              		.cfi_offset 4, -24
 772              		.cfi_offset 5, -20
 773              		.cfi_offset 6, -16
 774              		.cfi_offset 7, -12
 775              		.cfi_offset 8, -8
 776              		.cfi_offset 14, -4
 893:./Libraries/FatFs/Src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 777              		.loc 1 893 9 view .LVU233
 778 0004 056B     		ldr	r5, [r0, #48]
 779              	.LVL69:
 894:./Libraries/FatFs/Src/ff.c **** 			res = FR_DISK_ERR;
 780              		.loc 1 894 3 is_stmt 1 view .LVU234
 894:./Libraries/FatFs/Src/ff.c **** 			res = FR_DISK_ERR;
 781              		.loc 1 894 29 is_stmt 0 view .LVU235
 782 0006 00F13408 		add	r8, r0, #52
 883:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs			/* File system object */
 783              		.loc 1 883 9 view .LVU236
 784 000a 0446     		mov	r4, r0
 894:./Libraries/FatFs/Src/ff.c **** 			res = FR_DISK_ERR;
 785              		.loc 1 894 7 view .LVU237
 786 000c 0123     		movs	r3, #1
 787 000e 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 788              	.LVL70:
 894:./Libraries/FatFs/Src/ff.c **** 			res = FR_DISK_ERR;
 789              		.loc 1 894 7 view .LVU238
 790 0010 2A46     		mov	r2, r5
 791 0012 4146     		mov	r1, r8
 792 0014 FFF7FEFF 		bl	disk_write
 793              	.LVL71:
 894:./Libraries/FatFs/Src/ff.c **** 			res = FR_DISK_ERR;
 794              		.loc 1 894 6 view .LVU239
 795 0018 C0B9     		cbnz	r0, .L97
 898:./Libraries/FatFs/Src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 796              		.loc 1 898 14 view .LVU240
 797 001a 626A     		ldr	r2, [r4, #36]
 798 001c 0746     		mov	r7, r0
 897:./Libraries/FatFs/Src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 799              		.loc 1 897 4 is_stmt 1 view .LVU241
 898:./Libraries/FatFs/Src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 800              		.loc 1 898 32 is_stmt 0 view .LVU242
 801 001e E369     		ldr	r3, [r4, #28]
 898:./Libraries/FatFs/Src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 802              		.loc 1 898 14 view .LVU243
 803 0020 AA1A     		subs	r2, r5, r2
 897:./Libraries/FatFs/Src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 804              		.loc 1 897 14 view .LVU244
 805 0022 E070     		strb	r0, [r4, #3]
 898:./Libraries/FatFs/Src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 806              		.loc 1 898 4 is_stmt 1 view .LVU245
 898:./Libraries/FatFs/Src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 807              		.loc 1 898 7 is_stmt 0 view .LVU246
 808 0024 9A42     		cmp	r2, r3
 809 0026 0ED2     		bcs	.L93
 899:./Libraries/FatFs/Src/ff.c **** 					wsect += fs->fsize;
 810              		.loc 1 899 5 is_stmt 1 view .LVU247
 899:./Libraries/FatFs/Src/ff.c **** 					wsect += fs->fsize;
 811              		.loc 1 899 13 is_stmt 0 view .LVU248
ARM GAS  /tmp/ccaQXGqa.s 			page 70


 812 0028 A678     		ldrb	r6, [r4, #2]	@ zero_extendqisi2
 813              	.LVL72:
 899:./Libraries/FatFs/Src/ff.c **** 					wsect += fs->fsize;
 814              		.loc 1 899 27 is_stmt 1 view .LVU249
 899:./Libraries/FatFs/Src/ff.c **** 					wsect += fs->fsize;
 815              		.loc 1 899 5 is_stmt 0 view .LVU250
 816 002a 012E     		cmp	r6, #1
 817 002c 01D8     		bhi	.L96
 818 002e 0AE0     		b	.L93
 819              	.L102:
 899:./Libraries/FatFs/Src/ff.c **** 					wsect += fs->fsize;
 820              		.loc 1 899 5 view .LVU251
 821 0030 E369     		ldr	r3, [r4, #28]
 822              	.L96:
 900:./Libraries/FatFs/Src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 823              		.loc 1 900 6 is_stmt 1 view .LVU252
 900:./Libraries/FatFs/Src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 824              		.loc 1 900 12 is_stmt 0 view .LVU253
 825 0032 1D44     		add	r5, r5, r3
 826              	.LVL73:
 901:./Libraries/FatFs/Src/ff.c **** 				}
 827              		.loc 1 901 6 is_stmt 1 view .LVU254
 899:./Libraries/FatFs/Src/ff.c **** 					wsect += fs->fsize;
 828              		.loc 1 899 38 is_stmt 0 view .LVU255
 829 0034 013E     		subs	r6, r6, #1
 830              	.LVL74:
 901:./Libraries/FatFs/Src/ff.c **** 				}
 831              		.loc 1 901 6 view .LVU256
 832 0036 0123     		movs	r3, #1
 833 0038 4146     		mov	r1, r8
 834 003a 2A46     		mov	r2, r5
 835 003c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 836 003e FFF7FEFF 		bl	disk_write
 837              	.LVL75:
 899:./Libraries/FatFs/Src/ff.c **** 					wsect += fs->fsize;
 838              		.loc 1 899 36 is_stmt 1 view .LVU257
 899:./Libraries/FatFs/Src/ff.c **** 					wsect += fs->fsize;
 839              		.loc 1 899 27 view .LVU258
 899:./Libraries/FatFs/Src/ff.c **** 					wsect += fs->fsize;
 840              		.loc 1 899 5 is_stmt 0 view .LVU259
 841 0042 012E     		cmp	r6, #1
 842 0044 F4D1     		bne	.L102
 843              	.LVL76:
 844              	.L93:
 906:./Libraries/FatFs/Src/ff.c **** }
 845              		.loc 1 906 2 is_stmt 1 view .LVU260
 907:./Libraries/FatFs/Src/ff.c **** #endif
 846              		.loc 1 907 1 is_stmt 0 view .LVU261
 847 0046 3846     		mov	r0, r7
 848 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 849              	.LVL77:
 850              	.L97:
 895:./Libraries/FatFs/Src/ff.c **** 		} else {
 851              		.loc 1 895 8 view .LVU262
 852 004c 0127     		movs	r7, #1
 853              	.LVL78:
 906:./Libraries/FatFs/Src/ff.c **** }
ARM GAS  /tmp/ccaQXGqa.s 			page 71


 854              		.loc 1 906 2 is_stmt 1 view .LVU263
 907:./Libraries/FatFs/Src/ff.c **** #endif
 855              		.loc 1 907 1 is_stmt 0 view .LVU264
 856 004e 3846     		mov	r0, r7
 857 0050 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 907:./Libraries/FatFs/Src/ff.c **** #endif
 858              		.loc 1 907 1 view .LVU265
 859              		.cfi_endproc
 860              	.LFE406:
 862              		.section	.text.sync_fs,"ax",%progbits
 863              		.align	1
 864              		.p2align 2,,3
 865              		.syntax unified
 866              		.thumb
 867              		.thumb_func
 868              		.fpu fpv5-d16
 870              	sync_fs:
 871              	.LVL79:
 872              	.LFB352:
 947:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 873              		.loc 1 947 1 is_stmt 1 view -0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 0
 876              		@ frame_needed = 0, uses_anonymous_args = 0
 948:./Libraries/FatFs/Src/ff.c **** 
 877              		.loc 1 948 2 view .LVU267
 951:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 878              		.loc 1 951 2 view .LVU268
 947:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 879              		.loc 1 947 1 is_stmt 0 view .LVU269
 880 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 881              	.LCFI21:
 882              		.cfi_def_cfa_offset 24
 883              		.cfi_offset 3, -24
 884              		.cfi_offset 4, -20
 885              		.cfi_offset 5, -16
 886              		.cfi_offset 6, -12
 887              		.cfi_offset 7, -8
 888              		.cfi_offset 14, -4
 889              	.LBB546:
 890              	.LBB547:
 892:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 891              		.loc 1 892 5 view .LVU270
 892 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 893              	.LBE547:
 894              	.LBE546:
 947:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 895              		.loc 1 947 1 view .LVU271
 896 0004 0446     		mov	r4, r0
 897              	.LVL80:
 898              	.LBB550:
 899              	.LBI546:
 883:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs			/* File system object */
 900              		.loc 1 883 9 is_stmt 1 view .LVU272
 901              	.LBB548:
 887:./Libraries/FatFs/Src/ff.c **** 	UINT nf;
 902              		.loc 1 887 2 view .LVU273
ARM GAS  /tmp/ccaQXGqa.s 			page 72


 888:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_OK;
 903              		.loc 1 888 2 view .LVU274
 889:./Libraries/FatFs/Src/ff.c **** 
 904              		.loc 1 889 2 view .LVU275
 892:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 905              		.loc 1 892 2 view .LVU276
 892:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 906              		.loc 1 892 5 is_stmt 0 view .LVU277
 907 0006 5BB9     		cbnz	r3, .L104
 908              	.LVL81:
 892:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 909              		.loc 1 892 5 view .LVU278
 910              	.LBE548:
 911              	.LBE550:
 954:./Libraries/FatFs/Src/ff.c **** 			/* Create FSInfo structure */
 912              		.loc 1 954 3 is_stmt 1 view .LVU279
 954:./Libraries/FatFs/Src/ff.c **** 			/* Create FSInfo structure */
 913              		.loc 1 954 6 is_stmt 0 view .LVU280
 914 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 915 000a 032B     		cmp	r3, #3
 916 000c 0FD0     		beq	.L116
 917              	.LVL82:
 918              	.L106:
 968:./Libraries/FatFs/Src/ff.c **** 	}
 919              		.loc 1 968 3 is_stmt 1 view .LVU281
 968:./Libraries/FatFs/Src/ff.c **** 	}
 920              		.loc 1 968 7 is_stmt 0 view .LVU282
 921 000e 0022     		movs	r2, #0
 922 0010 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 923 0012 1146     		mov	r1, r2
 924 0014 FFF7FEFF 		bl	disk_ioctl
 925              	.LVL83:
 968:./Libraries/FatFs/Src/ff.c **** 	}
 926              		.loc 1 968 56 view .LVU283
 927 0018 0038     		subs	r0, r0, #0
 928 001a 18BF     		it	ne
 929 001c 0120     		movne	r0, #1
 930              	.L108:
 931              	.LVL84:
 971:./Libraries/FatFs/Src/ff.c **** }
 932              		.loc 1 971 2 is_stmt 1 view .LVU284
 972:./Libraries/FatFs/Src/ff.c **** 
 933              		.loc 1 972 1 is_stmt 0 view .LVU285
 934 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 935              	.LVL85:
 936              	.L104:
 937              	.LBB551:
 938              	.LBB549:
 972:./Libraries/FatFs/Src/ff.c **** 
 939              		.loc 1 972 1 view .LVU286
 940 0020 FFF7FEFF 		bl	sync_window.part.0
 941              	.LVL86:
 906:./Libraries/FatFs/Src/ff.c **** }
 942              		.loc 1 906 2 is_stmt 1 view .LVU287
 906:./Libraries/FatFs/Src/ff.c **** }
 943              		.loc 1 906 2 is_stmt 0 view .LVU288
 944              	.LBE549:
ARM GAS  /tmp/ccaQXGqa.s 			page 73


 945              	.LBE551:
 952:./Libraries/FatFs/Src/ff.c **** 		/* Update FSInfo sector if needed */
 946              		.loc 1 952 2 is_stmt 1 view .LVU289
 952:./Libraries/FatFs/Src/ff.c **** 		/* Update FSInfo sector if needed */
 947              		.loc 1 952 5 is_stmt 0 view .LVU290
 948 0024 0028     		cmp	r0, #0
 949 0026 FAD1     		bne	.L108
 950              	.LVL87:
 954:./Libraries/FatFs/Src/ff.c **** 			/* Create FSInfo structure */
 951              		.loc 1 954 3 is_stmt 1 view .LVU291
 954:./Libraries/FatFs/Src/ff.c **** 			/* Create FSInfo structure */
 952              		.loc 1 954 6 is_stmt 0 view .LVU292
 953 0028 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 954 002a 032B     		cmp	r3, #3
 955 002c EFD1     		bne	.L106
 956              	.L116:
 954:./Libraries/FatFs/Src/ff.c **** 			/* Create FSInfo structure */
 957              		.loc 1 954 31 discriminator 1 view .LVU293
 958 002e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 959 0030 012B     		cmp	r3, #1
 960 0032 ECD1     		bne	.L106
 956:./Libraries/FatFs/Src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 961              		.loc 1 956 4 is_stmt 1 view .LVU294
 956:./Libraries/FatFs/Src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 962              		.loc 1 956 14 is_stmt 0 view .LVU295
 963 0034 04F13401 		add	r1, r4, #52
 964              	.LVL88:
 965              	.LBB552:
 966              	.LBI552:
 706:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 967              		.loc 1 706 6 is_stmt 1 view .LVU296
 968              	.LBB553:
 707:./Libraries/FatFs/Src/ff.c **** 
 969              		.loc 1 707 2 view .LVU297
 707:./Libraries/FatFs/Src/ff.c **** 
 970              		.loc 1 707 2 is_stmt 0 view .LVU298
 971 0038 04F50D72 		add	r2, r4, #564
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 972              		.loc 1 710 8 view .LVU299
 973 003c 0025     		movs	r5, #0
 707:./Libraries/FatFs/Src/ff.c **** 
 974              		.loc 1 707 8 view .LVU300
 975 003e 0B46     		mov	r3, r1
 976              	.LVL89:
 977              	.L109:
 709:./Libraries/FatFs/Src/ff.c **** 		*d++ = (BYTE)val;
 978              		.loc 1 709 2 is_stmt 1 view .LVU301
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 979              		.loc 1 710 3 view .LVU302
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 980              		.loc 1 710 8 is_stmt 0 view .LVU303
 981 0040 03F8015B 		strb	r5, [r3], #1
 982              	.LVL90:
 711:./Libraries/FatFs/Src/ff.c **** }
 983              		.loc 1 711 10 is_stmt 1 view .LVU304
 711:./Libraries/FatFs/Src/ff.c **** }
 984              		.loc 1 711 2 is_stmt 0 view .LVU305
ARM GAS  /tmp/ccaQXGqa.s 			page 74


 985 0044 9A42     		cmp	r2, r3
 986 0046 FBD1     		bne	.L109
 987              	.LVL91:
 711:./Libraries/FatFs/Src/ff.c **** }
 988              		.loc 1 711 2 view .LVU306
 989              	.LBE553:
 990              	.LBE552:
 957:./Libraries/FatFs/Src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 991              		.loc 1 957 4 is_stmt 1 view .LVU307
 992              	.LBB554:
 993              	.LBI554:
 654:./Libraries/FatFs/Src/ff.c **** {
 994              		.loc 1 654 6 view .LVU308
 995              	.LBB555:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 996              		.loc 1 656 2 view .LVU309
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 997              		.loc 1 656 2 is_stmt 0 view .LVU310
 998              	.LBE555:
 999              	.LBE554:
 960:./Libraries/FatFs/Src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 1000              		.loc 1 960 4 view .LVU311
 1001 0048 6069     		ldr	r0, [r4, #20]
 1002              	.LBB560:
 1003              	.LBB556:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1004              		.loc 1 656 9 view .LVU312
 1005 004a 5526     		movs	r6, #85
 1006              	.LBE556:
 1007              	.LBE560:
 961:./Libraries/FatFs/Src/ff.c **** 			/* Write it into the FSInfo sector */
 1008              		.loc 1 961 4 view .LVU313
 1009 004c 2369     		ldr	r3, [r4, #16]
 1010              	.LBB561:
 1011              	.LBB562:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1012              		.loc 1 663 26 view .LVU314
 1013 004e 070A     		lsrs	r7, r0, #8
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1014              		.loc 1 663 11 view .LVU315
 1015 0050 84F81C02 		strb	r0, [r4, #540]
 1016              	.LBE562:
 1017              	.LBE561:
 963:./Libraries/FatFs/Src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 1018              		.loc 1 963 30 view .LVU316
 1019 0054 226A     		ldr	r2, [r4, #32]
 1020              	.LBB567:
 1021              	.LBB563:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1022              		.loc 1 664 11 view .LVU317
 1023 0056 84F81D72 		strb	r7, [r4, #541]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1024              		.loc 1 664 26 view .LVU318
 1025 005a 070C     		lsrs	r7, r0, #16
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1026              		.loc 1 665 26 view .LVU319
 1027 005c 000E     		lsrs	r0, r0, #24
ARM GAS  /tmp/ccaQXGqa.s 			page 75


 1028              	.LBE563:
 1029              	.LBE567:
 1030              	.LBB568:
 1031              	.LBB569:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1032              		.loc 1 663 11 view .LVU320
 1033 005e 84F82032 		strb	r3, [r4, #544]
 1034              	.LBE569:
 1035              	.LBE568:
 1036              	.LBB576:
 1037              	.LBB564:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1038              		.loc 1 665 11 view .LVU321
 1039 0062 84F81E72 		strb	r7, [r4, #542]
 1040              	.LBE564:
 1041              	.LBE576:
 1042              	.LBB577:
 1043              	.LBB570:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1044              		.loc 1 663 26 view .LVU322
 1045 0066 1F0A     		lsrs	r7, r3, #8
 1046              	.LBE570:
 1047              	.LBE577:
 1048              	.LBB578:
 1049              	.LBB565:
 666:./Libraries/FatFs/Src/ff.c **** }
 1050              		.loc 1 666 11 view .LVU323
 1051 0068 84F81F02 		strb	r0, [r4, #543]
 1052              	.LBE565:
 1053              	.LBE578:
 1054              	.LBB579:
 1055              	.LBB571:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1056              		.loc 1 664 26 view .LVU324
 1057 006c 180C     		lsrs	r0, r3, #16
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1058              		.loc 1 665 26 view .LVU325
 1059 006e 1B0E     		lsrs	r3, r3, #24
 1060              	.LBE571:
 1061              	.LBE579:
 963:./Libraries/FatFs/Src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 1062              		.loc 1 963 30 view .LVU326
 1063 0070 0132     		adds	r2, r2, #1
 1064              	.LBB580:
 1065              	.LBB572:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1066              		.loc 1 665 11 view .LVU327
 1067 0072 84F82202 		strb	r0, [r4, #546]
 1068              	.LBE572:
 1069              	.LBE580:
 1070              	.LBB581:
 1071              	.LBB557:
 657:./Libraries/FatFs/Src/ff.c **** }
 1072              		.loc 1 657 9 view .LVU328
 1073 0076 AA20     		movs	r0, #170
 1074              	.LBE557:
 1075              	.LBE581:
ARM GAS  /tmp/ccaQXGqa.s 			page 76


 1076              	.LBB582:
 1077              	.LBB573:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1078              		.loc 1 664 11 view .LVU329
 1079 0078 84F82172 		strb	r7, [r4, #545]
 1080              	.LBE573:
 1081              	.LBE582:
 1082              	.LBB583:
 1083              	.LBB584:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1084              		.loc 1 665 9 view .LVU330
 1085 007c 6127     		movs	r7, #97
 1086              	.LBE584:
 1087              	.LBE583:
 1088              	.LBB591:
 1089              	.LBB574:
 666:./Libraries/FatFs/Src/ff.c **** }
 1090              		.loc 1 666 11 view .LVU331
 1091 007e 84F82332 		strb	r3, [r4, #547]
 1092              	.LBE574:
 1093              	.LBE591:
 1094              	.LBB592:
 1095              	.LBB585:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1096              		.loc 1 663 9 view .LVU332
 1097 0082 5223     		movs	r3, #82
 1098              	.LBE585:
 1099              	.LBE592:
 1100              	.LBB593:
 1101              	.LBB558:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1102              		.loc 1 656 9 view .LVU333
 1103 0084 84F83262 		strb	r6, [r4, #562]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1104              		.loc 1 656 22 is_stmt 1 view .LVU334
 1105              	.LVL92:
 657:./Libraries/FatFs/Src/ff.c **** }
 1106              		.loc 1 657 2 view .LVU335
 657:./Libraries/FatFs/Src/ff.c **** }
 1107              		.loc 1 657 2 is_stmt 0 view .LVU336
 1108              	.LBE558:
 1109              	.LBE593:
 1110              	.LBB594:
 1111              	.LBB586:
 666:./Libraries/FatFs/Src/ff.c **** }
 1112              		.loc 1 666 9 view .LVU337
 1113 0088 4126     		movs	r6, #65
 1114              	.LBE586:
 1115              	.LBE594:
 1116              	.LBB595:
 1117              	.LBB559:
 657:./Libraries/FatFs/Src/ff.c **** }
 1118              		.loc 1 657 9 view .LVU338
 1119 008a 84F83302 		strb	r0, [r4, #563]
 1120              	.LVL93:
 657:./Libraries/FatFs/Src/ff.c **** }
 1121              		.loc 1 657 9 view .LVU339
ARM GAS  /tmp/ccaQXGqa.s 			page 77


 1122              	.LBE559:
 1123              	.LBE595:
 958:./Libraries/FatFs/Src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 1124              		.loc 1 958 4 is_stmt 1 view .LVU340
 1125              	.LBB596:
 1126              	.LBI583:
 661:./Libraries/FatFs/Src/ff.c **** {
 1127              		.loc 1 661 6 view .LVU341
 1128              	.LBB587:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1129              		.loc 1 663 2 view .LVU342
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1130              		.loc 1 663 2 is_stmt 0 view .LVU343
 1131              	.LBE587:
 1132              	.LBE596:
 1133              	.LBB597:
 1134              	.LBB598:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1135              		.loc 1 663 9 view .LVU344
 1136 008e 7220     		movs	r0, #114
 1137              	.LBE598:
 1138              	.LBE597:
 1139              	.LBB603:
 1140              	.LBB588:
 1141 0090 84F83430 		strb	r3, [r4, #52]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1142              		.loc 1 663 22 is_stmt 1 view .LVU345
 1143              	.LVL94:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1144              		.loc 1 664 2 view .LVU346
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1145              		.loc 1 664 9 is_stmt 0 view .LVU347
 1146 0094 84F83530 		strb	r3, [r4, #53]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1147              		.loc 1 664 22 is_stmt 1 view .LVU348
 1148              	.LVL95:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1149              		.loc 1 665 2 view .LVU349
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1150              		.loc 1 665 2 is_stmt 0 view .LVU350
 1151              	.LBE588:
 1152              	.LBE603:
 964:./Libraries/FatFs/Src/ff.c **** 			fs->fsi_flag = 0;
 1153              		.loc 1 964 4 view .LVU351
 1154 0098 0123     		movs	r3, #1
 1155              	.LBB604:
 1156              	.LBB599:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1157              		.loc 1 663 9 view .LVU352
 1158 009a 84F81802 		strb	r0, [r4, #536]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1159              		.loc 1 664 9 view .LVU353
 1160 009e 84F81902 		strb	r0, [r4, #537]
 1161              	.LBE599:
 1162              	.LBE604:
 963:./Libraries/FatFs/Src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 1163              		.loc 1 963 16 view .LVU354
ARM GAS  /tmp/ccaQXGqa.s 			page 78


 1164 00a2 2263     		str	r2, [r4, #48]
 964:./Libraries/FatFs/Src/ff.c **** 			fs->fsi_flag = 0;
 1165              		.loc 1 964 4 view .LVU355
 1166 00a4 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1167              	.LBB605:
 1168              	.LBB589:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1169              		.loc 1 665 9 view .LVU356
 1170 00a6 84F83670 		strb	r7, [r4, #54]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1171              		.loc 1 665 22 is_stmt 1 view .LVU357
 1172              	.LVL96:
 666:./Libraries/FatFs/Src/ff.c **** }
 1173              		.loc 1 666 2 view .LVU358
 666:./Libraries/FatFs/Src/ff.c **** }
 1174              		.loc 1 666 2 is_stmt 0 view .LVU359
 1175              	.LBE589:
 1176              	.LBE605:
 1177              	.LBB606:
 1178              	.LBB600:
 666:./Libraries/FatFs/Src/ff.c **** }
 1179              		.loc 1 666 9 view .LVU360
 1180 00aa 84F81B72 		strb	r7, [r4, #539]
 1181              	.LBE600:
 1182              	.LBE606:
 1183              	.LBB607:
 1184              	.LBB590:
 1185 00ae 84F83760 		strb	r6, [r4, #55]
 1186              	.LVL97:
 666:./Libraries/FatFs/Src/ff.c **** }
 1187              		.loc 1 666 9 view .LVU361
 1188              	.LBE590:
 1189              	.LBE607:
 959:./Libraries/FatFs/Src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 1190              		.loc 1 959 4 is_stmt 1 view .LVU362
 1191              	.LBB608:
 1192              	.LBI597:
 661:./Libraries/FatFs/Src/ff.c **** {
 1193              		.loc 1 661 6 view .LVU363
 1194              	.LBB601:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1195              		.loc 1 663 2 view .LVU364
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1196              		.loc 1 663 22 view .LVU365
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1197              		.loc 1 664 2 view .LVU366
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1198              		.loc 1 664 22 view .LVU367
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1199              		.loc 1 665 2 view .LVU368
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1200              		.loc 1 665 22 view .LVU369
 666:./Libraries/FatFs/Src/ff.c **** }
 1201              		.loc 1 666 2 view .LVU370
 666:./Libraries/FatFs/Src/ff.c **** }
 1202              		.loc 1 666 2 is_stmt 0 view .LVU371
 1203              	.LBE601:
ARM GAS  /tmp/ccaQXGqa.s 			page 79


 1204              	.LBE608:
 960:./Libraries/FatFs/Src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 1205              		.loc 1 960 4 is_stmt 1 view .LVU372
 1206              	.LBB609:
 1207              	.LBI561:
 661:./Libraries/FatFs/Src/ff.c **** {
 1208              		.loc 1 661 6 view .LVU373
 1209              	.LBB566:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1210              		.loc 1 663 2 view .LVU374
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1211              		.loc 1 663 22 view .LVU375
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1212              		.loc 1 664 2 view .LVU376
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1213              		.loc 1 664 22 view .LVU377
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1214              		.loc 1 665 2 view .LVU378
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1215              		.loc 1 665 22 view .LVU379
 666:./Libraries/FatFs/Src/ff.c **** }
 1216              		.loc 1 666 2 view .LVU380
 666:./Libraries/FatFs/Src/ff.c **** }
 1217              		.loc 1 666 2 is_stmt 0 view .LVU381
 1218              	.LBE566:
 1219              	.LBE609:
 961:./Libraries/FatFs/Src/ff.c **** 			/* Write it into the FSInfo sector */
 1220              		.loc 1 961 4 is_stmt 1 view .LVU382
 1221              	.LBB610:
 1222              	.LBI568:
 661:./Libraries/FatFs/Src/ff.c **** {
 1223              		.loc 1 661 6 view .LVU383
 1224              	.LBB575:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1225              		.loc 1 663 2 view .LVU384
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1226              		.loc 1 663 22 view .LVU385
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1227              		.loc 1 664 2 view .LVU386
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 1228              		.loc 1 664 22 view .LVU387
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1229              		.loc 1 665 2 view .LVU388
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1230              		.loc 1 665 22 view .LVU389
 666:./Libraries/FatFs/Src/ff.c **** }
 1231              		.loc 1 666 2 view .LVU390
 666:./Libraries/FatFs/Src/ff.c **** }
 1232              		.loc 1 666 2 is_stmt 0 view .LVU391
 1233              	.LBE575:
 1234              	.LBE610:
 963:./Libraries/FatFs/Src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 1235              		.loc 1 963 4 is_stmt 1 view .LVU392
 964:./Libraries/FatFs/Src/ff.c **** 			fs->fsi_flag = 0;
 1236              		.loc 1 964 4 view .LVU393
 1237              	.LBB611:
 1238              	.LBB602:
ARM GAS  /tmp/ccaQXGqa.s 			page 80


 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 1239              		.loc 1 665 9 is_stmt 0 view .LVU394
 1240 00b2 84F81A62 		strb	r6, [r4, #538]
 1241              	.LBE602:
 1242              	.LBE611:
 964:./Libraries/FatFs/Src/ff.c **** 			fs->fsi_flag = 0;
 1243              		.loc 1 964 4 view .LVU395
 1244 00b6 FFF7FEFF 		bl	disk_write
 1245              	.LVL98:
 965:./Libraries/FatFs/Src/ff.c **** 		}
 1246              		.loc 1 965 4 is_stmt 1 view .LVU396
 965:./Libraries/FatFs/Src/ff.c **** 		}
 1247              		.loc 1 965 17 is_stmt 0 view .LVU397
 1248 00ba 2571     		strb	r5, [r4, #4]
 1249 00bc A7E7     		b	.L106
 1250              		.cfi_endproc
 1251              	.LFE352:
 1253 00be 00BF     		.section	.text.move_window.part.0,"ax",%progbits
 1254              		.align	1
 1255              		.p2align 2,,3
 1256              		.syntax unified
 1257              		.thumb
 1258              		.thumb_func
 1259              		.fpu fpv5-d16
 1261              	move_window.part.0:
 1262              	.LVL99:
 1263              	.LFB407:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 1264              		.loc 1 912 9 is_stmt 1 view -0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 0
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 922:./Libraries/FatFs/Src/ff.c **** #endif
 1268              		.loc 1 922 3 view .LVU399
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 1269              		.loc 1 912 9 is_stmt 0 view .LVU400
 1270 0000 38B5     		push	{r3, r4, r5, lr}
 1271              	.LCFI22:
 1272              		.cfi_def_cfa_offset 16
 1273              		.cfi_offset 3, -16
 1274              		.cfi_offset 4, -12
 1275              		.cfi_offset 5, -8
 1276              		.cfi_offset 14, -4
 1277              	.LBB612:
 1278              	.LBB613:
 892:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 1279              		.loc 1 892 5 view .LVU401
 1280 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1281              	.LBE613:
 1282              	.LBE612:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 1283              		.loc 1 912 9 view .LVU402
 1284 0004 0446     		mov	r4, r0
 1285              	.LVL100:
 1286              	.LBB617:
 1287              	.LBI612:
 883:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs			/* File system object */
ARM GAS  /tmp/ccaQXGqa.s 			page 81


 1288              		.loc 1 883 9 is_stmt 1 view .LVU403
 1289              	.LBB614:
 887:./Libraries/FatFs/Src/ff.c **** 	UINT nf;
 1290              		.loc 1 887 2 view .LVU404
 888:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_OK;
 1291              		.loc 1 888 2 view .LVU405
 889:./Libraries/FatFs/Src/ff.c **** 
 1292              		.loc 1 889 2 view .LVU406
 892:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 1293              		.loc 1 892 2 view .LVU407
 1294              	.LBE614:
 1295              	.LBE617:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 1296              		.loc 1 912 9 is_stmt 0 view .LVU408
 1297 0006 0D46     		mov	r5, r1
 1298              	.LBB618:
 1299              	.LBB615:
 892:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 1300              		.loc 1 892 5 view .LVU409
 1301 0008 63B9     		cbnz	r3, .L118
 1302              	.LVL101:
 1303              	.L120:
 892:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 1304              		.loc 1 892 5 view .LVU410
 1305              	.LBE615:
 1306              	.LBE618:
 925:./Libraries/FatFs/Src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 1307              		.loc 1 925 4 is_stmt 1 view .LVU411
 925:./Libraries/FatFs/Src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 1308              		.loc 1 925 8 is_stmt 0 view .LVU412
 1309 000a 0123     		movs	r3, #1
 1310 000c 2A46     		mov	r2, r5
 1311 000e 04F13401 		add	r1, r4, #52
 1312 0012 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1313 0014 FFF7FEFF 		bl	disk_read
 1314              	.LVL102:
 925:./Libraries/FatFs/Src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 1315              		.loc 1 925 7 view .LVU413
 1316 0018 10B1     		cbz	r0, .L119
 927:./Libraries/FatFs/Src/ff.c **** 			}
 1317              		.loc 1 927 9 view .LVU414
 1318 001a 0120     		movs	r0, #1
 926:./Libraries/FatFs/Src/ff.c **** 				res = FR_DISK_ERR;
 1319              		.loc 1 926 12 view .LVU415
 1320 001c 4FF0FF35 		mov	r5, #-1
 1321              	.LVL103:
 1322              	.L119:
 929:./Libraries/FatFs/Src/ff.c **** 		}
 1323              		.loc 1 929 4 is_stmt 1 view .LVU416
 929:./Libraries/FatFs/Src/ff.c **** 		}
 1324              		.loc 1 929 16 is_stmt 0 view .LVU417
 1325 0020 2563     		str	r5, [r4, #48]
 932:./Libraries/FatFs/Src/ff.c **** }
 1326              		.loc 1 932 2 is_stmt 1 view .LVU418
 933:./Libraries/FatFs/Src/ff.c **** 
 1327              		.loc 1 933 1 is_stmt 0 view .LVU419
 1328 0022 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccaQXGqa.s 			page 82


 1329              	.LVL104:
 1330              	.L118:
 1331              	.LBB619:
 1332              	.LBB616:
 933:./Libraries/FatFs/Src/ff.c **** 
 1333              		.loc 1 933 1 view .LVU420
 1334 0024 FFF7FEFF 		bl	sync_window.part.0
 1335              	.LVL105:
 906:./Libraries/FatFs/Src/ff.c **** }
 1336              		.loc 1 906 2 is_stmt 1 view .LVU421
 906:./Libraries/FatFs/Src/ff.c **** }
 1337              		.loc 1 906 2 is_stmt 0 view .LVU422
 1338              	.LBE616:
 1339              	.LBE619:
 924:./Libraries/FatFs/Src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 1340              		.loc 1 924 3 is_stmt 1 view .LVU423
 924:./Libraries/FatFs/Src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 1341              		.loc 1 924 6 is_stmt 0 view .LVU424
 1342 0028 0028     		cmp	r0, #0
 1343 002a EED0     		beq	.L120
 932:./Libraries/FatFs/Src/ff.c **** }
 1344              		.loc 1 932 2 is_stmt 1 view .LVU425
 933:./Libraries/FatFs/Src/ff.c **** 
 1345              		.loc 1 933 1 is_stmt 0 view .LVU426
 1346 002c 38BD     		pop	{r3, r4, r5, pc}
 933:./Libraries/FatFs/Src/ff.c **** 
 1347              		.loc 1 933 1 view .LVU427
 1348              		.cfi_endproc
 1349              	.LFE407:
 1351 002e 00BF     		.section	.text.dir_remove,"ax",%progbits
 1352              		.align	1
 1353              		.p2align 2,,3
 1354              		.syntax unified
 1355              		.thumb
 1356              		.thumb_func
 1357              		.fpu fpv5-d16
 1359              	dir_remove:
 1360              	.LVL106:
 1361              	.LFB367:
2399:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 1362              		.loc 1 2399 1 is_stmt 1 view -0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 0
 1365              		@ frame_needed = 0, uses_anonymous_args = 0
2400:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
 1366              		.loc 1 2400 2 view .LVU429
2401:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 1367              		.loc 1 2401 2 view .LVU430
2399:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 1368              		.loc 1 2399 1 is_stmt 0 view .LVU431
 1369 0000 38B5     		push	{r3, r4, r5, lr}
 1370              	.LCFI23:
 1371              		.cfi_def_cfa_offset 16
 1372              		.cfi_offset 3, -16
 1373              		.cfi_offset 4, -12
 1374              		.cfi_offset 5, -8
 1375              		.cfi_offset 14, -4
ARM GAS  /tmp/ccaQXGqa.s 			page 83


2401:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 1376              		.loc 1 2401 9 view .LVU432
 1377 0002 0568     		ldr	r5, [r0]
 1378              	.LVL107:
2424:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 1379              		.loc 1 2424 2 is_stmt 1 view .LVU433
2399:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 1380              		.loc 1 2399 1 is_stmt 0 view .LVU434
 1381 0004 0446     		mov	r4, r0
2424:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 1382              		.loc 1 2424 8 view .LVU435
 1383 0006 C169     		ldr	r1, [r0, #28]
 1384              	.LVL108:
 1385              	.LBB620:
 1386              	.LBI620:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 1387              		.loc 1 912 9 is_stmt 1 view .LVU436
 1388              	.LBB621:
 917:./Libraries/FatFs/Src/ff.c **** 
 1389              		.loc 1 917 2 view .LVU437
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 1390              		.loc 1 920 2 view .LVU438
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 1391              		.loc 1 920 5 is_stmt 0 view .LVU439
 1392 0008 2B6B     		ldr	r3, [r5, #48]
 1393 000a 9942     		cmp	r1, r3
 1394 000c 03D0     		beq	.L132
 1395 000e 2846     		mov	r0, r5
 1396              	.LVL109:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 1397              		.loc 1 920 5 view .LVU440
 1398 0010 FFF7FEFF 		bl	move_window.part.0
 1399              	.LVL110:
 932:./Libraries/FatFs/Src/ff.c **** }
 1400              		.loc 1 932 2 is_stmt 1 view .LVU441
 932:./Libraries/FatFs/Src/ff.c **** }
 1401              		.loc 1 932 2 is_stmt 0 view .LVU442
 1402              	.LBE621:
 1403              	.LBE620:
2425:./Libraries/FatFs/Src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
 1404              		.loc 1 2425 2 is_stmt 1 view .LVU443
2425:./Libraries/FatFs/Src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
 1405              		.loc 1 2425 5 is_stmt 0 view .LVU444
 1406 0014 28B9     		cbnz	r0, .L131
 1407              	.LVL111:
 1408              	.L132:
2426:./Libraries/FatFs/Src/ff.c **** 		fs->wflag = 1;
 1409              		.loc 1 2426 3 is_stmt 1 view .LVU445
2426:./Libraries/FatFs/Src/ff.c **** 		fs->wflag = 1;
 1410              		.loc 1 2426 5 is_stmt 0 view .LVU446
 1411 0016 226A     		ldr	r2, [r4, #32]
2426:./Libraries/FatFs/Src/ff.c **** 		fs->wflag = 1;
 1412              		.loc 1 2426 21 view .LVU447
 1413 0018 E521     		movs	r1, #229
2427:./Libraries/FatFs/Src/ff.c **** 	}
 1414              		.loc 1 2427 13 view .LVU448
 1415 001a 0123     		movs	r3, #1
ARM GAS  /tmp/ccaQXGqa.s 			page 84


 1416 001c 0020     		movs	r0, #0
2426:./Libraries/FatFs/Src/ff.c **** 		fs->wflag = 1;
 1417              		.loc 1 2426 21 view .LVU449
 1418 001e 1170     		strb	r1, [r2]
2427:./Libraries/FatFs/Src/ff.c **** 	}
 1419              		.loc 1 2427 3 is_stmt 1 view .LVU450
2427:./Libraries/FatFs/Src/ff.c **** 	}
 1420              		.loc 1 2427 13 is_stmt 0 view .LVU451
 1421 0020 EB70     		strb	r3, [r5, #3]
 1422              	.L131:
2431:./Libraries/FatFs/Src/ff.c **** }
 1423              		.loc 1 2431 2 is_stmt 1 view .LVU452
2432:./Libraries/FatFs/Src/ff.c **** 
 1424              		.loc 1 2432 1 is_stmt 0 view .LVU453
 1425 0022 38BD     		pop	{r3, r4, r5, pc}
2432:./Libraries/FatFs/Src/ff.c **** 
 1426              		.loc 1 2432 1 view .LVU454
 1427              		.cfi_endproc
 1428              	.LFE367:
 1430              		.section	.text.check_fs,"ax",%progbits
 1431              		.align	1
 1432              		.p2align 2,,3
 1433              		.syntax unified
 1434              		.thumb
 1435              		.thumb_func
 1436              		.fpu fpv5-d16
 1438              	check_fs:
 1439              	.LVL112:
 1440              	.LFB372:
2956:./Libraries/FatFs/Src/ff.c **** 
2957:./Libraries/FatFs/Src/ff.c **** 
2958:./Libraries/FatFs/Src/ff.c **** 
2959:./Libraries/FatFs/Src/ff.c **** 
2960:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2961:./Libraries/FatFs/Src/ff.c **** /* Load a sector and check if it is an FAT boot sector                   */
2962:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2963:./Libraries/FatFs/Src/ff.c **** 
2964:./Libraries/FatFs/Src/ff.c **** static
2965:./Libraries/FatFs/Src/ff.c **** BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
2966:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,	/* File system object */
2967:./Libraries/FatFs/Src/ff.c **** 	DWORD sect	/* Sector# (lba) to load and check if it is an FAT-VBR or not */
2968:./Libraries/FatFs/Src/ff.c **** )
2969:./Libraries/FatFs/Src/ff.c **** {
 1441              		.loc 1 2969 1 is_stmt 1 view -0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 0
 1444              		@ frame_needed = 0, uses_anonymous_args = 0
2970:./Libraries/FatFs/Src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 1445              		.loc 1 2970 29 is_stmt 0 view .LVU456
 1446 0000 4FF0FF33 		mov	r3, #-1
 1447              		.loc 1 2970 12 view .LVU457
 1448 0004 0022     		movs	r2, #0
 1449              	.LBB636:
 1450              	.LBB637:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 1451              		.loc 1 920 5 view .LVU458
 1452 0006 9942     		cmp	r1, r3
ARM GAS  /tmp/ccaQXGqa.s 			page 85


 1453              	.LBE637:
 1454              	.LBE636:
2969:./Libraries/FatFs/Src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 1455              		.loc 1 2969 1 view .LVU459
 1456 0008 10B5     		push	{r4, lr}
 1457              	.LCFI24:
 1458              		.cfi_def_cfa_offset 8
 1459              		.cfi_offset 4, -8
 1460              		.cfi_offset 14, -4
2969:./Libraries/FatFs/Src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 1461              		.loc 1 2969 1 view .LVU460
 1462 000a 0446     		mov	r4, r0
 1463              		.loc 1 2970 2 is_stmt 1 view .LVU461
 1464              		.loc 1 2970 12 is_stmt 0 view .LVU462
 1465 000c C270     		strb	r2, [r0, #3]
 1466              		.loc 1 2970 17 is_stmt 1 view .LVU463
 1467              		.loc 1 2970 29 is_stmt 0 view .LVU464
 1468 000e 0363     		str	r3, [r0, #48]
2971:./Libraries/FatFs/Src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 1469              		.loc 1 2971 2 is_stmt 1 view .LVU465
 1470              	.LVL113:
 1471              	.LBB639:
 1472              	.LBI636:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 1473              		.loc 1 912 9 view .LVU466
 1474              	.LBB638:
 917:./Libraries/FatFs/Src/ff.c **** 
 1475              		.loc 1 917 2 view .LVU467
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 1476              		.loc 1 920 2 view .LVU468
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 1477              		.loc 1 920 5 is_stmt 0 view .LVU469
 1478 0010 02D0     		beq	.L141
 1479 0012 FFF7FEFF 		bl	move_window.part.0
 1480              	.LVL114:
 932:./Libraries/FatFs/Src/ff.c **** }
 1481              		.loc 1 932 2 is_stmt 1 view .LVU470
 932:./Libraries/FatFs/Src/ff.c **** }
 1482              		.loc 1 932 2 is_stmt 0 view .LVU471
 1483              	.LBE638:
 1484              	.LBE639:
 1485              		.loc 1 2971 5 view .LVU472
 1486 0016 B0BB     		cbnz	r0, .L153
 1487              	.L141:
2972:./Libraries/FatFs/Src/ff.c **** 
2973:./Libraries/FatFs/Src/ff.c **** 	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed 
 1488              		.loc 1 2973 2 is_stmt 1 view .LVU473
 1489              	.LVL115:
 1490              	.LBB640:
 1491              	.LBI640:
 613:./Libraries/FatFs/Src/ff.c **** {
 1492              		.loc 1 613 6 view .LVU474
 1493              	.LBB641:
 615:./Libraries/FatFs/Src/ff.c **** 
 1494              		.loc 1 615 2 view .LVU475
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 1495              		.loc 1 617 2 view .LVU476
ARM GAS  /tmp/ccaQXGqa.s 			page 86


 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1496              		.loc 1 618 2 view .LVU477
 619:./Libraries/FatFs/Src/ff.c **** }
 1497              		.loc 1 619 2 view .LVU478
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1498              		.loc 1 618 10 is_stmt 0 view .LVU479
 1499 0018 94F83312 		ldrb	r1, [r4, #563]	@ zero_extendqisi2
 1500              	.LBE641:
 1501              	.LBE640:
 1502              		.loc 1 2973 5 view .LVU480
 1503 001c 4AF65522 		movw	r2, #43605
 1504              	.LBB643:
 1505              	.LBB642:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1506              		.loc 1 618 20 view .LVU481
 1507 0020 94F83232 		ldrb	r3, [r4, #562]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1508              		.loc 1 618 15 view .LVU482
 1509 0024 43EA0123 		orr	r3, r3, r1, lsl #8
 1510              	.LBE642:
 1511              	.LBE643:
 1512              		.loc 1 2973 5 view .LVU483
 1513 0028 9342     		cmp	r3, r2
 1514 002a 2AD1     		bne	.L154
2974:./Libraries/FatFs/Src/ff.c **** 
2975:./Libraries/FatFs/Src/ff.c **** 	if (fs->win[BS_JmpBoot] == 0xE9 || (fs->win[BS_JmpBoot] == 0xEB && fs->win[BS_JmpBoot + 2] == 0x90
 1515              		.loc 1 2975 2 is_stmt 1 view .LVU484
 1516              		.loc 1 2975 5 is_stmt 0 view .LVU485
 1517 002c 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 1518 0030 E92B     		cmp	r3, #233
 1519 0032 07D0     		beq	.L142
 1520              		.loc 1 2975 66 discriminator 1 view .LVU486
 1521 0034 636B     		ldr	r3, [r4, #52]
 1522              		.loc 1 2975 34 discriminator 1 view .LVU487
 1523 0036 164A     		ldr	r2, .L155
 1524              		.loc 1 2975 66 discriminator 1 view .LVU488
 1525 0038 03F0FF13 		and	r3, r3, #16711935
 1526              		.loc 1 2975 34 discriminator 1 view .LVU489
 1527 003c 9342     		cmp	r3, r2
 1528 003e 01D0     		beq	.L142
2976:./Libraries/FatFs/Src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
2977:./Libraries/FatFs/Src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
2978:./Libraries/FatFs/Src/ff.c **** 	}
2979:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
2980:./Libraries/FatFs/Src/ff.c **** 	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;
2981:./Libraries/FatFs/Src/ff.c **** #endif
2982:./Libraries/FatFs/Src/ff.c **** 	return 2;
 1529              		.loc 1 2982 9 view .LVU490
 1530 0040 0220     		movs	r0, #2
2983:./Libraries/FatFs/Src/ff.c **** }
 1531              		.loc 1 2983 1 view .LVU491
 1532 0042 10BD     		pop	{r4, pc}
 1533              	.LVL116:
 1534              	.L142:
 1535              	.LBB644:
 1536              	.LBI644:
2965:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,	/* File system object */
ARM GAS  /tmp/ccaQXGqa.s 			page 87


 1537              		.loc 1 2965 6 is_stmt 1 view .LVU492
 1538              	.LBB645:
2976:./Libraries/FatFs/Src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 1539              		.loc 1 2976 3 view .LVU493
 1540              	.LBB646:
 1541              	.LBI646:
 623:./Libraries/FatFs/Src/ff.c **** {
 1542              		.loc 1 623 7 view .LVU494
 1543              	.LBB647:
 625:./Libraries/FatFs/Src/ff.c **** 
 1544              		.loc 1 625 2 view .LVU495
 627:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 1545              		.loc 1 627 2 view .LVU496
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 1546              		.loc 1 628 2 view .LVU497
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 1547              		.loc 1 629 2 view .LVU498
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 1548              		.loc 1 628 5 is_stmt 0 view .LVU499
 1549 0044 B4F86C10 		ldrh	r1, [r4, #108]	@ unaligned
 1550              	.LVL117:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1551              		.loc 1 630 2 is_stmt 1 view .LVU500
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 1552              		.loc 1 629 20 is_stmt 0 view .LVU501
 1553 0048 94F86B20 		ldrb	r2, [r4, #107]	@ zero_extendqisi2
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1554              		.loc 1 630 20 view .LVU502
 1555 004c 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 1556              		.loc 1 629 5 view .LVU503
 1557 0050 42EA0122 		orr	r2, r2, r1, lsl #8
 1558              	.LVL118:
 631:./Libraries/FatFs/Src/ff.c **** }
 1559              		.loc 1 631 2 is_stmt 1 view .LVU504
 631:./Libraries/FatFs/Src/ff.c **** }
 1560              		.loc 1 631 2 is_stmt 0 view .LVU505
 1561              	.LBE647:
 1562              	.LBE646:
2976:./Libraries/FatFs/Src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1563              		.loc 1 2976 6 view .LVU506
 1564 0054 0F49     		ldr	r1, .L155+4
 1565              	.LBB649:
 1566              	.LBB648:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1567              		.loc 1 630 5 view .LVU507
 1568 0056 43EA0223 		orr	r3, r3, r2, lsl #8
 1569              	.LBE648:
 1570              	.LBE649:
2976:./Libraries/FatFs/Src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1571              		.loc 1 2976 42 view .LVU508
 1572 005a 23F07F43 		bic	r3, r3, #-16777216
2976:./Libraries/FatFs/Src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1573              		.loc 1 2976 6 view .LVU509
 1574 005e 8B42     		cmp	r3, r1
 1575 0060 13D0     		beq	.L146
2977:./Libraries/FatFs/Src/ff.c **** 	}
ARM GAS  /tmp/ccaQXGqa.s 			page 88


 1576              		.loc 1 2977 3 is_stmt 1 view .LVU510
 1577              	.LVL119:
 1578              	.LBB650:
 1579              	.LBI650:
 623:./Libraries/FatFs/Src/ff.c **** {
 1580              		.loc 1 623 7 view .LVU511
 1581              	.LBB651:
 625:./Libraries/FatFs/Src/ff.c **** 
 1582              		.loc 1 625 2 view .LVU512
 627:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 1583              		.loc 1 627 2 view .LVU513
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 1584              		.loc 1 628 2 view .LVU514
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 1585              		.loc 1 629 2 view .LVU515
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 1586              		.loc 1 628 5 is_stmt 0 view .LVU516
 1587 0062 B4F88820 		ldrh	r2, [r4, #136]	@ unaligned
 1588              	.LVL120:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1589              		.loc 1 630 2 is_stmt 1 view .LVU517
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 1590              		.loc 1 629 20 is_stmt 0 view .LVU518
 1591 0066 94F88730 		ldrb	r3, [r4, #135]	@ zero_extendqisi2
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1592              		.loc 1 630 20 view .LVU519
 1593 006a 94F88600 		ldrb	r0, [r4, #134]	@ zero_extendqisi2
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 1594              		.loc 1 629 5 view .LVU520
 1595 006e 43EA0223 		orr	r3, r3, r2, lsl #8
 1596              	.LVL121:
 631:./Libraries/FatFs/Src/ff.c **** }
 1597              		.loc 1 631 2 is_stmt 1 view .LVU521
 631:./Libraries/FatFs/Src/ff.c **** }
 1598              		.loc 1 631 2 is_stmt 0 view .LVU522
 1599              	.LBE651:
 1600              	.LBE650:
2977:./Libraries/FatFs/Src/ff.c **** 	}
 1601              		.loc 1 2977 6 view .LVU523
 1602 0072 094A     		ldr	r2, .L155+8
 1603              	.LBB653:
 1604              	.LBB652:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1605              		.loc 1 630 5 view .LVU524
 1606 0074 40EA0320 		orr	r0, r0, r3, lsl #8
 1607              	.LBE652:
 1608              	.LBE653:
2977:./Libraries/FatFs/Src/ff.c **** 	}
 1609              		.loc 1 2977 65 view .LVU525
 1610 0078 9042     		cmp	r0, r2
 1611 007a 14BF     		ite	ne
 1612 007c 0220     		movne	r0, #2
 1613 007e 0020     		moveq	r0, #0
 1614              	.LVL122:
2977:./Libraries/FatFs/Src/ff.c **** 	}
 1615              		.loc 1 2977 65 view .LVU526
 1616              	.LBE645:
ARM GAS  /tmp/ccaQXGqa.s 			page 89


 1617              	.LBE644:
 1618              		.loc 1 2983 1 view .LVU527
 1619 0080 10BD     		pop	{r4, pc}
 1620              	.LVL123:
 1621              	.L154:
2973:./Libraries/FatFs/Src/ff.c **** 
 1622              		.loc 1 2973 51 view .LVU528
 1623 0082 0320     		movs	r0, #3
 1624              		.loc 1 2983 1 view .LVU529
 1625 0084 10BD     		pop	{r4, pc}
 1626              	.LVL124:
 1627              	.L153:
2971:./Libraries/FatFs/Src/ff.c **** 
 1628              		.loc 1 2971 45 view .LVU530
 1629 0086 0420     		movs	r0, #4
 1630              		.loc 1 2983 1 view .LVU531
 1631 0088 10BD     		pop	{r4, pc}
 1632              	.LVL125:
 1633              	.L146:
 1634              	.LBB655:
 1635              	.LBB654:
2977:./Libraries/FatFs/Src/ff.c **** 	}
 1636              		.loc 1 2977 65 view .LVU532
 1637 008a 0020     		movs	r0, #0
 1638              	.LVL126:
2977:./Libraries/FatFs/Src/ff.c **** 	}
 1639              		.loc 1 2977 65 view .LVU533
 1640              	.LBE654:
 1641              	.LBE655:
 1642              		.loc 1 2983 1 view .LVU534
 1643 008c 10BD     		pop	{r4, pc}
 1644              	.LVL127:
 1645              	.L156:
 1646              		.loc 1 2983 1 view .LVU535
 1647 008e 00BF     		.align	2
 1648              	.L155:
 1649 0090 EB009000 		.word	9437419
 1650 0094 46415400 		.word	5521734
 1651 0098 46415433 		.word	861159750
 1652              		.cfi_endproc
 1653              	.LFE372:
 1655              		.section	.text.find_volume,"ax",%progbits
 1656              		.align	1
 1657              		.p2align 2,,3
 1658              		.syntax unified
 1659              		.thumb
 1660              		.thumb_func
 1661              		.fpu fpv5-d16
 1663              	find_volume:
 1664              	.LVL128:
 1665              	.LFB373:
2984:./Libraries/FatFs/Src/ff.c **** 
2985:./Libraries/FatFs/Src/ff.c **** 
2986:./Libraries/FatFs/Src/ff.c **** 
2987:./Libraries/FatFs/Src/ff.c **** 
2988:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2989:./Libraries/FatFs/Src/ff.c **** /* Find logical drive and check if the volume is mounted                 */
ARM GAS  /tmp/ccaQXGqa.s 			page 90


2990:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
2991:./Libraries/FatFs/Src/ff.c **** 
2992:./Libraries/FatFs/Src/ff.c **** static
2993:./Libraries/FatFs/Src/ff.c **** FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
2994:./Libraries/FatFs/Src/ff.c **** 	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
2995:./Libraries/FatFs/Src/ff.c **** 	FATFS** rfs,		/* Pointer to pointer to the found file system object */
2996:./Libraries/FatFs/Src/ff.c **** 	BYTE mode			/* !=0: Check write protection for write access */
2997:./Libraries/FatFs/Src/ff.c **** )
2998:./Libraries/FatFs/Src/ff.c **** {
 1666              		.loc 1 2998 1 is_stmt 1 view -0
 1667              		.cfi_startproc
 1668              		@ args = 0, pretend = 0, frame = 16
 1669              		@ frame_needed = 0, uses_anonymous_args = 0
2999:./Libraries/FatFs/Src/ff.c **** 	BYTE fmt, *pt;
 1670              		.loc 1 2999 2 view .LVU537
3000:./Libraries/FatFs/Src/ff.c **** 	int vol;
 1671              		.loc 1 3000 2 view .LVU538
3001:./Libraries/FatFs/Src/ff.c **** 	DSTATUS stat;
 1672              		.loc 1 3001 2 view .LVU539
3002:./Libraries/FatFs/Src/ff.c **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
 1673              		.loc 1 3002 2 view .LVU540
3003:./Libraries/FatFs/Src/ff.c **** 	WORD nrsv;
 1674              		.loc 1 3003 2 view .LVU541
3004:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
 1675              		.loc 1 3004 2 view .LVU542
3005:./Libraries/FatFs/Src/ff.c **** 	UINT i;
 1676              		.loc 1 3005 2 view .LVU543
3006:./Libraries/FatFs/Src/ff.c **** 
3007:./Libraries/FatFs/Src/ff.c **** 
3008:./Libraries/FatFs/Src/ff.c **** 	/* Get logical drive number */
3009:./Libraries/FatFs/Src/ff.c **** 	*rfs = 0;
 1677              		.loc 1 3009 2 view .LVU544
 1678              		.loc 1 3009 7 is_stmt 0 view .LVU545
 1679 0000 0023     		movs	r3, #0
2998:./Libraries/FatFs/Src/ff.c **** 	BYTE fmt, *pt;
 1680              		.loc 1 2998 1 view .LVU546
 1681 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1682              	.LCFI25:
 1683              		.cfi_def_cfa_offset 24
 1684              		.cfi_offset 4, -24
 1685              		.cfi_offset 5, -20
 1686              		.cfi_offset 6, -16
 1687              		.cfi_offset 7, -12
 1688              		.cfi_offset 8, -8
 1689              		.cfi_offset 14, -4
 1690              		.loc 1 3009 7 view .LVU547
 1691 0006 0B60     		str	r3, [r1]
3010:./Libraries/FatFs/Src/ff.c **** 	vol = get_ldnumber(path);
 1692              		.loc 1 3010 2 is_stmt 1 view .LVU548
2998:./Libraries/FatFs/Src/ff.c **** 	BYTE fmt, *pt;
 1693              		.loc 1 2998 1 is_stmt 0 view .LVU549
 1694 0008 84B0     		sub	sp, sp, #16
 1695              	.LCFI26:
 1696              		.cfi_def_cfa_offset 40
2998:./Libraries/FatFs/Src/ff.c **** 	BYTE fmt, *pt;
 1697              		.loc 1 2998 1 view .LVU550
 1698 000a 0F46     		mov	r7, r1
ARM GAS  /tmp/ccaQXGqa.s 			page 91


 1699 000c 1446     		mov	r4, r2
 1700              		.loc 1 3010 8 view .LVU551
 1701 000e FFF7FEFF 		bl	get_ldnumber
 1702              	.LVL129:
3011:./Libraries/FatFs/Src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 1703              		.loc 1 3011 2 is_stmt 1 view .LVU552
 1704              		.loc 1 3011 5 is_stmt 0 view .LVU553
 1705 0012 061E     		subs	r6, r0, #0
 1706 0014 C0F2FD80 		blt	.L188
3012:./Libraries/FatFs/Src/ff.c **** 
3013:./Libraries/FatFs/Src/ff.c **** 	/* Check if the file system object is valid or not */
3014:./Libraries/FatFs/Src/ff.c **** 	fs = FatFs[vol];					/* Get pointer to the file system object */
 1707              		.loc 1 3014 2 is_stmt 1 view .LVU554
 1708              		.loc 1 3014 5 is_stmt 0 view .LVU555
 1709 0018 AB4B     		ldr	r3, .L241
 1710 001a 53F82650 		ldr	r5, [r3, r6, lsl #2]
 1711              	.LVL130:
3015:./Libraries/FatFs/Src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 1712              		.loc 1 3015 2 is_stmt 1 view .LVU556
 1713              		.loc 1 3015 5 is_stmt 0 view .LVU557
 1714 001e 002D     		cmp	r5, #0
 1715 0020 00F0F280 		beq	.L189
3016:./Libraries/FatFs/Src/ff.c **** 
3017:./Libraries/FatFs/Src/ff.c **** 	ENTER_FF(fs);						/* Lock the volume */
 1716              		.loc 1 3017 2 is_stmt 1 view .LVU558
 1717              	.LVL131:
 1718              	.LBB696:
 1719              	.LBI696:
 742:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs		/* File system object */
 1720              		.loc 1 742 5 view .LVU559
 1721              	.LBE696:
 746:./Libraries/FatFs/Src/ff.c **** }
 1722              		.loc 1 746 2 view .LVU560
 1723              	.LBB699:
 1724              	.LBB697:
 1725              	.LBI697:
 742:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs		/* File system object */
 1726              		.loc 1 742 5 view .LVU561
 1727              	.LBB698:
 746:./Libraries/FatFs/Src/ff.c **** }
 1728              		.loc 1 746 16 is_stmt 0 view .LVU562
 1729 0024 E868     		ldr	r0, [r5, #12]
 1730              	.LVL132:
 746:./Libraries/FatFs/Src/ff.c **** }
 1731              		.loc 1 746 16 view .LVU563
 1732 0026 FFF7FEFF 		bl	ff_req_grant
 1733              	.LVL133:
 746:./Libraries/FatFs/Src/ff.c **** }
 1734              		.loc 1 746 44 view .LVU564
 1735 002a 20B9     		cbnz	r0, .L234
 1736              	.LBE698:
 1737              	.LBE697:
 1738              	.LBE699:
 1739              		.loc 1 3017 2 view .LVU565
 1740 002c 0F24     		movs	r4, #15
 1741              	.LVL134:
 1742              	.L198:
ARM GAS  /tmp/ccaQXGqa.s 			page 92


3018:./Libraries/FatFs/Src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
3019:./Libraries/FatFs/Src/ff.c **** 
3020:./Libraries/FatFs/Src/ff.c **** 	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
3021:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
3022:./Libraries/FatFs/Src/ff.c **** 		stat = disk_status(fs->drv);
3023:./Libraries/FatFs/Src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
3024:./Libraries/FatFs/Src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
3025:./Libraries/FatFs/Src/ff.c **** 				return FR_WRITE_PROTECTED;
3026:./Libraries/FatFs/Src/ff.c **** 			}
3027:./Libraries/FatFs/Src/ff.c **** 			return FR_OK;				/* The file system object is valid */
3028:./Libraries/FatFs/Src/ff.c **** 		}
3029:./Libraries/FatFs/Src/ff.c **** 	}
3030:./Libraries/FatFs/Src/ff.c **** 
3031:./Libraries/FatFs/Src/ff.c **** 	/* The file system object is not valid. */
3032:./Libraries/FatFs/Src/ff.c **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
3033:./Libraries/FatFs/Src/ff.c **** 
3034:./Libraries/FatFs/Src/ff.c **** 	fs->fs_type = 0;					/* Clear the file system object */
3035:./Libraries/FatFs/Src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
3036:./Libraries/FatFs/Src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
3037:./Libraries/FatFs/Src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
3038:./Libraries/FatFs/Src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
3039:./Libraries/FatFs/Src/ff.c **** 	}
3040:./Libraries/FatFs/Src/ff.c **** 	if (!_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
3041:./Libraries/FatFs/Src/ff.c **** 		return FR_WRITE_PROTECTED;
3042:./Libraries/FatFs/Src/ff.c **** 	}
3043:./Libraries/FatFs/Src/ff.c **** #if _MAX_SS != _MIN_SS					/* Get sector size (multiple sector size cfg only) */
3044:./Libraries/FatFs/Src/ff.c **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK) return FR_DISK_ERR;
3045:./Libraries/FatFs/Src/ff.c **** 	if (SS(fs) > _MAX_SS || SS(fs) < _MIN_SS || (SS(fs) & (SS(fs) - 1))) return FR_DISK_ERR;
3046:./Libraries/FatFs/Src/ff.c **** #endif
3047:./Libraries/FatFs/Src/ff.c **** 
3048:./Libraries/FatFs/Src/ff.c **** 	/* Find an FAT partition on the drive. Supports only generic partitioning rules, FDISK and SFD. */
3049:./Libraries/FatFs/Src/ff.c **** 	bsect = 0;
3050:./Libraries/FatFs/Src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
3051:./Libraries/FatFs/Src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
3052:./Libraries/FatFs/Src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
3053:./Libraries/FatFs/Src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
3054:./Libraries/FatFs/Src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
3055:./Libraries/FatFs/Src/ff.c **** 		}
3056:./Libraries/FatFs/Src/ff.c **** 		i = LD2PT(vol);					/* Partition number: 0:auto, 1-4:forced */
3057:./Libraries/FatFs/Src/ff.c **** 		if (i) i--;
3058:./Libraries/FatFs/Src/ff.c **** 		do {							/* Find an FAT volume */
3059:./Libraries/FatFs/Src/ff.c **** 			bsect = br[i];
3060:./Libraries/FatFs/Src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
3061:./Libraries/FatFs/Src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
3062:./Libraries/FatFs/Src/ff.c **** 	}
3063:./Libraries/FatFs/Src/ff.c **** 	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
3064:./Libraries/FatFs/Src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
3065:./Libraries/FatFs/Src/ff.c **** 
3066:./Libraries/FatFs/Src/ff.c **** 	/* An FAT volume is found (bsect). Following code initializes the file system object */
3067:./Libraries/FatFs/Src/ff.c **** 
3068:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
3069:./Libraries/FatFs/Src/ff.c **** 	if (fmt == 1) {
3070:./Libraries/FatFs/Src/ff.c **** 		QWORD maxlba;
3071:./Libraries/FatFs/Src/ff.c **** 
3072:./Libraries/FatFs/Src/ff.c **** 		for (i = BPB_ZeroedEx; i < BPB_ZeroedEx + 53 && fs->win[i] == 0; i++) ;	/* Check zero filler */
3073:./Libraries/FatFs/Src/ff.c **** 		if (i < BPB_ZeroedEx + 53) return FR_NO_FILESYSTEM;
3074:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 93


3075:./Libraries/FatFs/Src/ff.c **** 		if (ld_word(fs->win + BPB_FSVerEx) != 0x100) return FR_NO_FILESYSTEM;	/* Check exFAT revision (Mu
3076:./Libraries/FatFs/Src/ff.c **** 
3077:./Libraries/FatFs/Src/ff.c **** 		if (1 << fs->win[BPB_BytsPerSecEx] != SS(fs)) {	/* (BPB_BytsPerSecEx must be equal to the physica
3078:./Libraries/FatFs/Src/ff.c **** 			return FR_NO_FILESYSTEM;
3079:./Libraries/FatFs/Src/ff.c **** 		}
3080:./Libraries/FatFs/Src/ff.c **** 
3081:./Libraries/FatFs/Src/ff.c **** 		maxlba = ld_qword(fs->win + BPB_TotSecEx) + bsect;	/* Last LBA + 1 of the volume */
3082:./Libraries/FatFs/Src/ff.c **** 		if (maxlba >= 0x100000000) return FR_NO_FILESYSTEM;	/* (It cannot be handled in 32-bit LBA) */
3083:./Libraries/FatFs/Src/ff.c **** 
3084:./Libraries/FatFs/Src/ff.c **** 		fs->fsize = ld_dword(fs->win + BPB_FatSzEx);	/* Number of sectors per FAT */
3085:./Libraries/FatFs/Src/ff.c **** 
3086:./Libraries/FatFs/Src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATsEx];			/* Number of FATs */
3087:./Libraries/FatFs/Src/ff.c **** 		if (fs->n_fats != 1) return FR_NO_FILESYSTEM;	/* (Supports only 1 FAT) */
3088:./Libraries/FatFs/Src/ff.c **** 
3089:./Libraries/FatFs/Src/ff.c **** 		fs->csize = 1 << fs->win[BPB_SecPerClusEx];		/* Cluster size */
3090:./Libraries/FatFs/Src/ff.c **** 		if (fs->csize == 0)	return FR_NO_FILESYSTEM;	/* (Must be 1..32768) */
3091:./Libraries/FatFs/Src/ff.c **** 
3092:./Libraries/FatFs/Src/ff.c **** 		nclst = ld_dword(fs->win + BPB_NumClusEx);		/* Number of clusters */
3093:./Libraries/FatFs/Src/ff.c **** 		if (nclst > MAX_EXFAT) return FR_NO_FILESYSTEM;	/* (Too many clusters) */
3094:./Libraries/FatFs/Src/ff.c **** 		fs->n_fatent = nclst + 2;
3095:./Libraries/FatFs/Src/ff.c **** 
3096:./Libraries/FatFs/Src/ff.c **** 		/* Boundaries and Limits */
3097:./Libraries/FatFs/Src/ff.c **** 		fs->volbase = bsect;
3098:./Libraries/FatFs/Src/ff.c **** 		fs->database = bsect + ld_dword(fs->win + BPB_DataOfsEx);
3099:./Libraries/FatFs/Src/ff.c **** 		fs->fatbase = bsect + ld_dword(fs->win + BPB_FatOfsEx);
3100:./Libraries/FatFs/Src/ff.c **** 		if (maxlba < (QWORD)fs->database + nclst * fs->csize) return FR_NO_FILESYSTEM;	/* (Volume size mu
3101:./Libraries/FatFs/Src/ff.c **** 		fs->dirbase = ld_dword(fs->win + BPB_RootClusEx);
3102:./Libraries/FatFs/Src/ff.c **** 
3103:./Libraries/FatFs/Src/ff.c **** 		/* Check if bitmap location is in assumption (at the first cluster) */
3104:./Libraries/FatFs/Src/ff.c **** 		if (move_window(fs, clust2sect(fs, fs->dirbase)) != FR_OK) return FR_DISK_ERR;
3105:./Libraries/FatFs/Src/ff.c **** 		for (i = 0; i < SS(fs); i += SZDIRE) {
3106:./Libraries/FatFs/Src/ff.c **** 			if (fs->win[i] == 0x81 && ld_dword(fs->win + i + 20) == 2) break;	/* 81 entry with cluster #2? *
3107:./Libraries/FatFs/Src/ff.c **** 		}
3108:./Libraries/FatFs/Src/ff.c **** 		if (i == SS(fs)) return FR_NO_FILESYSTEM;
3109:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
3110:./Libraries/FatFs/Src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3111:./Libraries/FatFs/Src/ff.c **** #endif
3112:./Libraries/FatFs/Src/ff.c **** 		fmt = FS_EXFAT;			/* FAT sub-type */
3113:./Libraries/FatFs/Src/ff.c **** 	} else
3114:./Libraries/FatFs/Src/ff.c **** #endif	/* _FS_EXFAT */
3115:./Libraries/FatFs/Src/ff.c **** 	{
3116:./Libraries/FatFs/Src/ff.c **** 		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must
3117:./Libraries/FatFs/Src/ff.c **** 
3118:./Libraries/FatFs/Src/ff.c **** 		fasize = ld_word(fs->win + BPB_FATSz16);		/* Number of sectors per FAT */
3119:./Libraries/FatFs/Src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
3120:./Libraries/FatFs/Src/ff.c **** 		fs->fsize = fasize;
3121:./Libraries/FatFs/Src/ff.c **** 
3122:./Libraries/FatFs/Src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
3123:./Libraries/FatFs/Src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
3124:./Libraries/FatFs/Src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
3125:./Libraries/FatFs/Src/ff.c **** 
3126:./Libraries/FatFs/Src/ff.c **** 		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
3127:./Libraries/FatFs/Src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
3128:./Libraries/FatFs/Src/ff.c **** 
3129:./Libraries/FatFs/Src/ff.c **** 		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
3130:./Libraries/FatFs/Src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
3131:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 94


3132:./Libraries/FatFs/Src/ff.c **** 		tsect = ld_word(fs->win + BPB_TotSec16);		/* Number of sectors on the volume */
3133:./Libraries/FatFs/Src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
3134:./Libraries/FatFs/Src/ff.c **** 
3135:./Libraries/FatFs/Src/ff.c **** 		nrsv = ld_word(fs->win + BPB_RsvdSecCnt);		/* Number of reserved sectors */
3136:./Libraries/FatFs/Src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
3137:./Libraries/FatFs/Src/ff.c **** 
3138:./Libraries/FatFs/Src/ff.c **** 		/* Determine the FAT sub type */
3139:./Libraries/FatFs/Src/ff.c **** 		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
3140:./Libraries/FatFs/Src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
3141:./Libraries/FatFs/Src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
3142:./Libraries/FatFs/Src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
3143:./Libraries/FatFs/Src/ff.c **** 		fmt = FS_FAT32;
3144:./Libraries/FatFs/Src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
3145:./Libraries/FatFs/Src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
3146:./Libraries/FatFs/Src/ff.c **** 
3147:./Libraries/FatFs/Src/ff.c **** 		/* Boundaries and Limits */
3148:./Libraries/FatFs/Src/ff.c **** 		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
3149:./Libraries/FatFs/Src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
3150:./Libraries/FatFs/Src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
3151:./Libraries/FatFs/Src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
3152:./Libraries/FatFs/Src/ff.c **** 		if (fmt == FS_FAT32) {
3153:./Libraries/FatFs/Src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
3154:./Libraries/FatFs/Src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
3155:./Libraries/FatFs/Src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
3156:./Libraries/FatFs/Src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
3157:./Libraries/FatFs/Src/ff.c **** 		} else {
3158:./Libraries/FatFs/Src/ff.c **** 			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;/* (BPB_RootEntCnt must not be 0) */
3159:./Libraries/FatFs/Src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
3160:./Libraries/FatFs/Src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
3161:./Libraries/FatFs/Src/ff.c **** 				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
3162:./Libraries/FatFs/Src/ff.c **** 		}
3163:./Libraries/FatFs/Src/ff.c **** 		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not
3164:./Libraries/FatFs/Src/ff.c **** 
3165:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
3166:./Libraries/FatFs/Src/ff.c **** 		/* Get FSINFO if available */
3167:./Libraries/FatFs/Src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3168:./Libraries/FatFs/Src/ff.c **** 		fs->fsi_flag = 0x80;
3169:./Libraries/FatFs/Src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
3170:./Libraries/FatFs/Src/ff.c **** 		if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo32 == 1 */
3171:./Libraries/FatFs/Src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
3172:./Libraries/FatFs/Src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
3173:./Libraries/FatFs/Src/ff.c **** 		{
3174:./Libraries/FatFs/Src/ff.c **** 			fs->fsi_flag = 0;
3175:./Libraries/FatFs/Src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
3176:./Libraries/FatFs/Src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
3177:./Libraries/FatFs/Src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
3178:./Libraries/FatFs/Src/ff.c **** 			{
3179:./Libraries/FatFs/Src/ff.c **** #if (_FS_NOFSINFO & 1) == 0
3180:./Libraries/FatFs/Src/ff.c **** 				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
3181:./Libraries/FatFs/Src/ff.c **** #endif
3182:./Libraries/FatFs/Src/ff.c **** #if (_FS_NOFSINFO & 2) == 0
3183:./Libraries/FatFs/Src/ff.c **** 				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
3184:./Libraries/FatFs/Src/ff.c **** #endif
3185:./Libraries/FatFs/Src/ff.c **** 			}
3186:./Libraries/FatFs/Src/ff.c **** 		}
3187:./Libraries/FatFs/Src/ff.c **** #endif	/* (_FS_NOFSINFO & 3) != 3 */
3188:./Libraries/FatFs/Src/ff.c **** #endif	/* !_FS_READONLY */
ARM GAS  /tmp/ccaQXGqa.s 			page 95


3189:./Libraries/FatFs/Src/ff.c **** 	}
3190:./Libraries/FatFs/Src/ff.c **** 
3191:./Libraries/FatFs/Src/ff.c **** 	fs->fs_type = fmt;		/* FAT sub-type */
3192:./Libraries/FatFs/Src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
3193:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN == 1
3194:./Libraries/FatFs/Src/ff.c **** 	fs->lfnbuf = LfnBuf;	/* Static LFN working buffer */
3195:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
3196:./Libraries/FatFs/Src/ff.c **** 	fs->dirbuf = DirBuf;	/* Static directory block scratchpad buuffer */
3197:./Libraries/FatFs/Src/ff.c **** #endif
3198:./Libraries/FatFs/Src/ff.c **** #endif
3199:./Libraries/FatFs/Src/ff.c **** #if _FS_RPATH != 0
3200:./Libraries/FatFs/Src/ff.c **** 	fs->cdir = 0;			/* Initialize current directory */
3201:./Libraries/FatFs/Src/ff.c **** #endif
3202:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0			/* Clear file lock semaphores */
3203:./Libraries/FatFs/Src/ff.c **** 	clear_lock(fs);
3204:./Libraries/FatFs/Src/ff.c **** #endif
3205:./Libraries/FatFs/Src/ff.c **** 	return FR_OK;
3206:./Libraries/FatFs/Src/ff.c **** }
 1743              		.loc 1 3206 1 view .LVU566
 1744 002e 2046     		mov	r0, r4
 1745 0030 04B0     		add	sp, sp, #16
 1746              	.LCFI27:
 1747              		.cfi_remember_state
 1748              		.cfi_def_cfa_offset 24
 1749              		@ sp needed
 1750 0032 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1751              	.LVL135:
 1752              	.L234:
 1753              	.LCFI28:
 1754              		.cfi_restore_state
3017:./Libraries/FatFs/Src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
 1755              		.loc 1 3017 14 is_stmt 1 view .LVU567
3018:./Libraries/FatFs/Src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
 1756              		.loc 1 3018 2 view .LVU568
3018:./Libraries/FatFs/Src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
 1757              		.loc 1 3018 7 is_stmt 0 view .LVU569
 1758 0036 3D60     		str	r5, [r7]
3020:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
 1759              		.loc 1 3020 2 is_stmt 1 view .LVU570
3020:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
 1760              		.loc 1 3020 7 is_stmt 0 view .LVU571
 1761 0038 04F0FE04 		and	r4, r4, #254
 1762              	.LVL136:
3021:./Libraries/FatFs/Src/ff.c **** 		stat = disk_status(fs->drv);
 1763              		.loc 1 3021 2 is_stmt 1 view .LVU572
3021:./Libraries/FatFs/Src/ff.c **** 		stat = disk_status(fs->drv);
 1764              		.loc 1 3021 5 is_stmt 0 view .LVU573
 1765 003c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1766 003e 002B     		cmp	r3, #0
 1767 0040 40F0AF80 		bne	.L235
 1768              	.L159:
3034:./Libraries/FatFs/Src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 1769              		.loc 1 3034 2 is_stmt 1 view .LVU574
3035:./Libraries/FatFs/Src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 1770              		.loc 1 3035 12 is_stmt 0 view .LVU575
 1771 0044 F0B2     		uxtb	r0, r6
3034:./Libraries/FatFs/Src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
ARM GAS  /tmp/ccaQXGqa.s 			page 96


 1772              		.loc 1 3034 14 view .LVU576
 1773 0046 0023     		movs	r3, #0
3035:./Libraries/FatFs/Src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 1774              		.loc 1 3035 10 view .LVU577
 1775 0048 6870     		strb	r0, [r5, #1]
3034:./Libraries/FatFs/Src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 1776              		.loc 1 3034 14 view .LVU578
 1777 004a 2B70     		strb	r3, [r5]
3035:./Libraries/FatFs/Src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 1778              		.loc 1 3035 2 is_stmt 1 view .LVU579
3036:./Libraries/FatFs/Src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 1779              		.loc 1 3036 2 view .LVU580
3036:./Libraries/FatFs/Src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 1780              		.loc 1 3036 9 is_stmt 0 view .LVU581
 1781 004c FFF7FEFF 		bl	disk_initialize
 1782              	.LVL137:
3037:./Libraries/FatFs/Src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 1783              		.loc 1 3037 2 is_stmt 1 view .LVU582
3037:./Libraries/FatFs/Src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 1784              		.loc 1 3037 5 is_stmt 0 view .LVU583
 1785 0050 C207     		lsls	r2, r0, #31
 1786 0052 00F1EA80 		bmi	.L191
3040:./Libraries/FatFs/Src/ff.c **** 		return FR_WRITE_PROTECTED;
 1787              		.loc 1 3040 2 is_stmt 1 view .LVU584
3040:./Libraries/FatFs/Src/ff.c **** 		return FR_WRITE_PROTECTED;
 1788              		.loc 1 3040 5 is_stmt 0 view .LVU585
 1789 0056 14B1     		cbz	r4, .L160
3040:./Libraries/FatFs/Src/ff.c **** 		return FR_WRITE_PROTECTED;
 1790              		.loc 1 3040 28 discriminator 1 view .LVU586
 1791 0058 4307     		lsls	r3, r0, #29
 1792 005a 00F1AF80 		bmi	.L161
 1793              	.L160:
3049:./Libraries/FatFs/Src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
 1794              		.loc 1 3049 2 is_stmt 1 view .LVU587
 1795              	.LVL138:
3050:./Libraries/FatFs/Src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 1796              		.loc 1 3050 2 view .LVU588
3050:./Libraries/FatFs/Src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 1797              		.loc 1 3050 8 is_stmt 0 view .LVU589
 1798 005e 0021     		movs	r1, #0
 1799 0060 2846     		mov	r0, r5
 1800              	.LVL139:
3050:./Libraries/FatFs/Src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 1801              		.loc 1 3050 8 view .LVU590
 1802 0062 FFF7FEFF 		bl	check_fs
 1803              	.LVL140:
3051:./Libraries/FatFs/Src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
 1804              		.loc 1 3051 2 is_stmt 1 view .LVU591
3051:./Libraries/FatFs/Src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
 1805              		.loc 1 3051 5 is_stmt 0 view .LVU592
 1806 0066 0228     		cmp	r0, #2
 1807 0068 00F0AA80 		beq	.L236
3063:./Libraries/FatFs/Src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 1808              		.loc 1 3063 2 is_stmt 1 view .LVU593
3063:./Libraries/FatFs/Src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 1809              		.loc 1 3063 5 is_stmt 0 view .LVU594
 1810 006c 0428     		cmp	r0, #4
ARM GAS  /tmp/ccaQXGqa.s 			page 97


 1811 006e 00F0DE80 		beq	.L197
3064:./Libraries/FatFs/Src/ff.c **** 
 1812              		.loc 1 3064 2 is_stmt 1 view .LVU595
3064:./Libraries/FatFs/Src/ff.c **** 
 1813              		.loc 1 3064 5 is_stmt 0 view .LVU596
 1814 0072 0128     		cmp	r0, #1
 1815 0074 00F2C380 		bhi	.L169
3049:./Libraries/FatFs/Src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
 1816              		.loc 1 3049 8 view .LVU597
 1817 0078 0026     		movs	r6, #0
 1818              	.LVL141:
 1819              	.L166:
3116:./Libraries/FatFs/Src/ff.c **** 
 1820              		.loc 1 3116 3 is_stmt 1 view .LVU598
 1821              	.LBB700:
 1822              	.LBI700:
 613:./Libraries/FatFs/Src/ff.c **** {
 1823              		.loc 1 613 6 view .LVU599
 1824              	.LBB701:
 615:./Libraries/FatFs/Src/ff.c **** 
 1825              		.loc 1 615 2 view .LVU600
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 1826              		.loc 1 617 2 view .LVU601
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1827              		.loc 1 618 2 view .LVU602
 619:./Libraries/FatFs/Src/ff.c **** }
 1828              		.loc 1 619 2 view .LVU603
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1829              		.loc 1 618 10 is_stmt 0 view .LVU604
 1830 007a 95F84020 		ldrb	r2, [r5, #64]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1831              		.loc 1 618 20 view .LVU605
 1832 007e 95F83F30 		ldrb	r3, [r5, #63]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1833              		.loc 1 618 15 view .LVU606
 1834 0082 43EA0223 		orr	r3, r3, r2, lsl #8
 1835              	.LBE701:
 1836              	.LBE700:
3116:./Libraries/FatFs/Src/ff.c **** 
 1837              		.loc 1 3116 6 view .LVU607
 1838 0086 B3F5007F 		cmp	r3, #512
 1839 008a 40F0B880 		bne	.L169
3118:./Libraries/FatFs/Src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
 1840              		.loc 1 3118 3 is_stmt 1 view .LVU608
 1841              	.LVL142:
 1842              	.LBB702:
 1843              	.LBI702:
 613:./Libraries/FatFs/Src/ff.c **** {
 1844              		.loc 1 613 6 view .LVU609
 1845              	.LBB703:
 615:./Libraries/FatFs/Src/ff.c **** 
 1846              		.loc 1 615 2 view .LVU610
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 1847              		.loc 1 617 2 view .LVU611
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1848              		.loc 1 618 2 view .LVU612
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
ARM GAS  /tmp/ccaQXGqa.s 			page 98


 1849              		.loc 1 618 10 is_stmt 0 view .LVU613
 1850 008e 95F84B20 		ldrb	r2, [r5, #75]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1851              		.loc 1 618 20 view .LVU614
 1852 0092 95F84A30 		ldrb	r3, [r5, #74]	@ zero_extendqisi2
 1853              	.LVL143:
 619:./Libraries/FatFs/Src/ff.c **** }
 1854              		.loc 1 619 2 is_stmt 1 view .LVU615
 619:./Libraries/FatFs/Src/ff.c **** }
 1855              		.loc 1 619 2 is_stmt 0 view .LVU616
 1856              	.LBE703:
 1857              	.LBE702:
3119:./Libraries/FatFs/Src/ff.c **** 		fs->fsize = fasize;
 1858              		.loc 1 3119 3 is_stmt 1 view .LVU617
3119:./Libraries/FatFs/Src/ff.c **** 		fs->fsize = fasize;
 1859              		.loc 1 3119 6 is_stmt 0 view .LVU618
 1860 0096 53EA0223 		orrs	r3, r3, r2, lsl #8
 1861              	.LVL144:
3119:./Libraries/FatFs/Src/ff.c **** 		fs->fsize = fasize;
 1862              		.loc 1 3119 6 view .LVU619
 1863 009a 00F0CA80 		beq	.L237
 1864              	.LVL145:
 1865              	.L171:
3120:./Libraries/FatFs/Src/ff.c **** 
 1866              		.loc 1 3120 3 is_stmt 1 view .LVU620
3122:./Libraries/FatFs/Src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 1867              		.loc 1 3122 23 is_stmt 0 view .LVU621
 1868 009e 95F84420 		ldrb	r2, [r5, #68]	@ zero_extendqisi2
3120:./Libraries/FatFs/Src/ff.c **** 
 1869              		.loc 1 3120 13 view .LVU622
 1870 00a2 EB61     		str	r3, [r5, #28]
3122:./Libraries/FatFs/Src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 1871              		.loc 1 3122 3 is_stmt 1 view .LVU623
3123:./Libraries/FatFs/Src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 1872              		.loc 1 3123 6 is_stmt 0 view .LVU624
 1873 00a4 511E     		subs	r1, r2, #1
3122:./Libraries/FatFs/Src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 1874              		.loc 1 3122 14 view .LVU625
 1875 00a6 AA70     		strb	r2, [r5, #2]
3123:./Libraries/FatFs/Src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 1876              		.loc 1 3123 3 is_stmt 1 view .LVU626
3123:./Libraries/FatFs/Src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 1877              		.loc 1 3123 6 is_stmt 0 view .LVU627
 1878 00a8 0129     		cmp	r1, #1
 1879 00aa 00F2A880 		bhi	.L169
3124:./Libraries/FatFs/Src/ff.c **** 
 1880              		.loc 1 3124 3 is_stmt 1 view .LVU628
 1881              	.LVL146:
3126:./Libraries/FatFs/Src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
 1882              		.loc 1 3126 3 view .LVU629
3126:./Libraries/FatFs/Src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
 1883              		.loc 1 3126 22 is_stmt 0 view .LVU630
 1884 00ae 95F84170 		ldrb	r7, [r5, #65]	@ zero_extendqisi2
 1885 00b2 B9B2     		uxth	r1, r7
3126:./Libraries/FatFs/Src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
 1886              		.loc 1 3126 13 view .LVU631
 1887 00b4 6981     		strh	r1, [r5, #10]	@ movhi
ARM GAS  /tmp/ccaQXGqa.s 			page 99


3127:./Libraries/FatFs/Src/ff.c **** 
 1888              		.loc 1 3127 3 is_stmt 1 view .LVU632
3127:./Libraries/FatFs/Src/ff.c **** 
 1889              		.loc 1 3127 6 is_stmt 0 view .LVU633
 1890 00b6 0029     		cmp	r1, #0
 1891 00b8 00F0A180 		beq	.L169
3127:./Libraries/FatFs/Src/ff.c **** 
 1892              		.loc 1 3127 49 discriminator 2 view .LVU634
 1893 00bc 791E     		subs	r1, r7, #1
3127:./Libraries/FatFs/Src/ff.c **** 
 1894              		.loc 1 3127 22 discriminator 2 view .LVU635
 1895 00be 3942     		tst	r1, r7
 1896 00c0 40F09D80 		bne	.L169
3129:./Libraries/FatFs/Src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 1897              		.loc 1 3129 3 is_stmt 1 view .LVU636
 1898              	.LVL147:
 1899              	.LBB704:
 1900              	.LBI704:
 613:./Libraries/FatFs/Src/ff.c **** {
 1901              		.loc 1 613 6 view .LVU637
 1902              	.LBB705:
 615:./Libraries/FatFs/Src/ff.c **** 
 1903              		.loc 1 615 2 view .LVU638
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 1904              		.loc 1 617 2 view .LVU639
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1905              		.loc 1 618 2 view .LVU640
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1906              		.loc 1 618 10 is_stmt 0 view .LVU641
 1907 00c4 95F84600 		ldrb	r0, [r5, #70]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1908              		.loc 1 618 20 view .LVU642
 1909 00c8 95F84510 		ldrb	r1, [r5, #69]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1910              		.loc 1 618 15 view .LVU643
 1911 00cc 41EA0021 		orr	r1, r1, r0, lsl #8
 1912              	.LBE705:
 1913              	.LBE704:
3130:./Libraries/FatFs/Src/ff.c **** 
 1914              		.loc 1 3130 6 view .LVU644
 1915 00d0 11F00F0F 		tst	r1, #15
 1916              	.LBB707:
 1917              	.LBB706:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1918              		.loc 1 618 5 view .LVU645
 1919 00d4 8C46     		mov	ip, r1
 1920              	.LVL148:
 619:./Libraries/FatFs/Src/ff.c **** }
 1921              		.loc 1 619 2 is_stmt 1 view .LVU646
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1922              		.loc 1 618 15 is_stmt 0 view .LVU647
 1923 00d6 0CB2     		sxth	r4, r1
 1924              	.LBE706:
 1925              	.LBE707:
3129:./Libraries/FatFs/Src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 1926              		.loc 1 3129 17 view .LVU648
 1927 00d8 2981     		strh	r1, [r5, #8]	@ movhi
ARM GAS  /tmp/ccaQXGqa.s 			page 100


3130:./Libraries/FatFs/Src/ff.c **** 
 1928              		.loc 1 3130 3 is_stmt 1 view .LVU649
3130:./Libraries/FatFs/Src/ff.c **** 
 1929              		.loc 1 3130 6 is_stmt 0 view .LVU650
 1930 00da 40F09080 		bne	.L169
3132:./Libraries/FatFs/Src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
 1931              		.loc 1 3132 3 is_stmt 1 view .LVU651
 1932              	.LVL149:
 1933              	.LBB708:
 1934              	.LBI708:
 613:./Libraries/FatFs/Src/ff.c **** {
 1935              		.loc 1 613 6 view .LVU652
 1936              	.LBB709:
 615:./Libraries/FatFs/Src/ff.c **** 
 1937              		.loc 1 615 2 view .LVU653
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 1938              		.loc 1 617 2 view .LVU654
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1939              		.loc 1 618 2 view .LVU655
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1940              		.loc 1 618 10 is_stmt 0 view .LVU656
 1941 00de 95F84800 		ldrb	r0, [r5, #72]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1942              		.loc 1 618 20 view .LVU657
 1943 00e2 95F84710 		ldrb	r1, [r5, #71]	@ zero_extendqisi2
 1944              	.LVL150:
 619:./Libraries/FatFs/Src/ff.c **** }
 1945              		.loc 1 619 2 is_stmt 1 view .LVU658
 619:./Libraries/FatFs/Src/ff.c **** }
 1946              		.loc 1 619 2 is_stmt 0 view .LVU659
 1947              	.LBE709:
 1948              	.LBE708:
3133:./Libraries/FatFs/Src/ff.c **** 
 1949              		.loc 1 3133 3 is_stmt 1 view .LVU660
3133:./Libraries/FatFs/Src/ff.c **** 
 1950              		.loc 1 3133 6 is_stmt 0 view .LVU661
 1951 00e6 51EA0021 		orrs	r1, r1, r0, lsl #8
 1952              	.LVL151:
3133:./Libraries/FatFs/Src/ff.c **** 
 1953              		.loc 1 3133 6 view .LVU662
 1954 00ea 09D1     		bne	.L173
3133:./Libraries/FatFs/Src/ff.c **** 
 1955              		.loc 1 3133 19 is_stmt 1 discriminator 1 view .LVU663
 1956              	.LVL152:
 1957              	.LBB710:
 1958              	.LBI710:
 623:./Libraries/FatFs/Src/ff.c **** {
 1959              		.loc 1 623 7 discriminator 1 view .LVU664
 1960              	.LBB711:
 625:./Libraries/FatFs/Src/ff.c **** 
 1961              		.loc 1 625 2 discriminator 1 view .LVU665
 627:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 1962              		.loc 1 627 2 discriminator 1 view .LVU666
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 1963              		.loc 1 628 2 discriminator 1 view .LVU667
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 1964              		.loc 1 629 2 discriminator 1 view .LVU668
ARM GAS  /tmp/ccaQXGqa.s 			page 101


 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 1965              		.loc 1 628 5 is_stmt 0 discriminator 1 view .LVU669
 1966 00ec B5F856E0 		ldrh	lr, [r5, #86]	@ unaligned
 1967              	.LVL153:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1968              		.loc 1 630 2 is_stmt 1 discriminator 1 view .LVU670
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 1969              		.loc 1 629 20 is_stmt 0 discriminator 1 view .LVU671
 1970 00f0 95F85500 		ldrb	r0, [r5, #85]	@ zero_extendqisi2
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1971              		.loc 1 630 20 discriminator 1 view .LVU672
 1972 00f4 95F85410 		ldrb	r1, [r5, #84]	@ zero_extendqisi2
 1973              	.LVL154:
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 1974              		.loc 1 629 5 discriminator 1 view .LVU673
 1975 00f8 40EA0E20 		orr	r0, r0, lr, lsl #8
 1976              	.LVL155:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1977              		.loc 1 630 5 discriminator 1 view .LVU674
 1978 00fc 41EA0021 		orr	r1, r1, r0, lsl #8
 1979              	.LVL156:
 631:./Libraries/FatFs/Src/ff.c **** }
 1980              		.loc 1 631 2 is_stmt 1 discriminator 1 view .LVU675
 1981              	.L173:
 631:./Libraries/FatFs/Src/ff.c **** }
 1982              		.loc 1 631 2 is_stmt 0 discriminator 1 view .LVU676
 1983              	.LBE711:
 1984              	.LBE710:
3135:./Libraries/FatFs/Src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
 1985              		.loc 1 3135 3 is_stmt 1 view .LVU677
 1986              	.LBB712:
 1987              	.LBI712:
 613:./Libraries/FatFs/Src/ff.c **** {
 1988              		.loc 1 613 6 view .LVU678
 1989              	.LBB713:
 615:./Libraries/FatFs/Src/ff.c **** 
 1990              		.loc 1 615 2 view .LVU679
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 1991              		.loc 1 617 2 view .LVU680
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1992              		.loc 1 618 2 view .LVU681
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1993              		.loc 1 618 10 is_stmt 0 view .LVU682
 1994 0100 95F843E0 		ldrb	lr, [r5, #67]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 1995              		.loc 1 618 20 view .LVU683
 1996 0104 95F84200 		ldrb	r0, [r5, #66]	@ zero_extendqisi2
 1997              	.LVL157:
 619:./Libraries/FatFs/Src/ff.c **** }
 1998              		.loc 1 619 2 is_stmt 1 view .LVU684
 619:./Libraries/FatFs/Src/ff.c **** }
 1999              		.loc 1 619 2 is_stmt 0 view .LVU685
 2000              	.LBE713:
 2001              	.LBE712:
3136:./Libraries/FatFs/Src/ff.c **** 
 2002              		.loc 1 3136 3 is_stmt 1 view .LVU686
3136:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 102


 2003              		.loc 1 3136 6 is_stmt 0 view .LVU687
 2004 0108 50EA0E20 		orrs	r0, r0, lr, lsl #8
 2005              	.LVL158:
3136:./Libraries/FatFs/Src/ff.c **** 
 2006              		.loc 1 3136 6 view .LVU688
 2007 010c 77D0     		beq	.L169
3124:./Libraries/FatFs/Src/ff.c **** 
 2008              		.loc 1 3124 10 view .LVU689
 2009 010e 03FB02F2 		mul	r2, r3, r2
 2010              	.LVL159:
3139:./Libraries/FatFs/Src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
 2011              		.loc 1 3139 3 is_stmt 1 view .LVU690
3139:./Libraries/FatFs/Src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
 2012              		.loc 1 3139 10 is_stmt 0 view .LVU691
 2013 0112 00EB1C1E 		add	lr, r0, ip, lsr #4
 2014 0116 9644     		add	lr, lr, r2
 2015              	.LVL160:
3140:./Libraries/FatFs/Src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 2016              		.loc 1 3140 3 is_stmt 1 view .LVU692
3140:./Libraries/FatFs/Src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 2017              		.loc 1 3140 6 is_stmt 0 view .LVU693
 2018 0118 7145     		cmp	r1, lr
 2019 011a 70D3     		bcc	.L169
3141:./Libraries/FatFs/Src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 2020              		.loc 1 3141 3 is_stmt 1 view .LVU694
3141:./Libraries/FatFs/Src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 2021              		.loc 1 3141 18 is_stmt 0 view .LVU695
 2022 011c A1EB0E01 		sub	r1, r1, lr
 2023              	.LVL161:
3142:./Libraries/FatFs/Src/ff.c **** 		fmt = FS_FAT32;
 2024              		.loc 1 3142 6 view .LVU696
 2025 0120 B942     		cmp	r1, r7
3141:./Libraries/FatFs/Src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 2026              		.loc 1 3141 9 view .LVU697
 2027 0122 B1FBF7F8 		udiv	r8, r1, r7
 2028              	.LVL162:
3142:./Libraries/FatFs/Src/ff.c **** 		fmt = FS_FAT32;
 2029              		.loc 1 3142 3 is_stmt 1 view .LVU698
3142:./Libraries/FatFs/Src/ff.c **** 		fmt = FS_FAT32;
 2030              		.loc 1 3142 6 is_stmt 0 view .LVU699
 2031 0126 6AD3     		bcc	.L169
3143:./Libraries/FatFs/Src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 2032              		.loc 1 3143 3 is_stmt 1 view .LVU700
 2033              	.LVL163:
3144:./Libraries/FatFs/Src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 2034              		.loc 1 3144 3 view .LVU701
3144:./Libraries/FatFs/Src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 2035              		.loc 1 3144 6 is_stmt 0 view .LVU702
 2036 0128 4FF6F571 		movw	r1, #65525
 2037 012c 8845     		cmp	r8, r1
 2038 012e 00F28B80 		bhi	.L174
3144:./Libraries/FatFs/Src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 2039              		.loc 1 3144 27 is_stmt 1 view .LVU703
 2040              	.LVL164:
3145:./Libraries/FatFs/Src/ff.c **** 
 2041              		.loc 1 3145 3 view .LVU704
3145:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 103


 2042              		.loc 1 3145 6 is_stmt 0 view .LVU705
 2043 0132 40F6F571 		movw	r1, #4085
3150:./Libraries/FatFs/Src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
 2044              		.loc 1 3150 23 view .LVU706
 2045 0136 3044     		add	r0, r0, r6
 2046              	.LVL165:
3151:./Libraries/FatFs/Src/ff.c **** 		if (fmt == FS_FAT32) {
 2047              		.loc 1 3151 24 view .LVU707
 2048 0138 0EEB0604 		add	r4, lr, r6
3149:./Libraries/FatFs/Src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 2049              		.loc 1 3149 15 view .LVU708
 2050 013c 2E62     		str	r6, [r5, #32]
3145:./Libraries/FatFs/Src/ff.c **** 
 2051              		.loc 1 3145 6 view .LVU709
 2052 013e 8845     		cmp	r8, r1
3148:./Libraries/FatFs/Src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 2053              		.loc 1 3148 24 view .LVU710
 2054 0140 08F10201 		add	r1, r8, #2
3150:./Libraries/FatFs/Src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
 2055              		.loc 1 3150 15 view .LVU711
 2056 0144 6862     		str	r0, [r5, #36]
3148:./Libraries/FatFs/Src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 2057              		.loc 1 3148 16 view .LVU712
 2058 0146 A961     		str	r1, [r5, #24]
3149:./Libraries/FatFs/Src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 2059              		.loc 1 3149 3 is_stmt 1 view .LVU713
3150:./Libraries/FatFs/Src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
 2060              		.loc 1 3150 3 view .LVU714
3151:./Libraries/FatFs/Src/ff.c **** 		if (fmt == FS_FAT32) {
 2061              		.loc 1 3151 3 view .LVU715
3151:./Libraries/FatFs/Src/ff.c **** 		if (fmt == FS_FAT32) {
 2062              		.loc 1 3151 16 is_stmt 0 view .LVU716
 2063 0148 EC62     		str	r4, [r5, #44]
3145:./Libraries/FatFs/Src/ff.c **** 
 2064              		.loc 1 3145 6 view .LVU717
 2065 014a 00F2B580 		bhi	.L175
3145:./Libraries/FatFs/Src/ff.c **** 
 2066              		.loc 1 3145 27 is_stmt 1 view .LVU718
 2067              	.LVL166:
3148:./Libraries/FatFs/Src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 2068              		.loc 1 3148 3 view .LVU719
3152:./Libraries/FatFs/Src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
 2069              		.loc 1 3152 3 view .LVU720
3158:./Libraries/FatFs/Src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2070              		.loc 1 3158 4 view .LVU721
3158:./Libraries/FatFs/Src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2071              		.loc 1 3158 7 is_stmt 0 view .LVU722
 2072 014e BCF1000F 		cmp	ip, #0
 2073 0152 54D0     		beq	.L169
3159:./Libraries/FatFs/Src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 2074              		.loc 1 3159 4 is_stmt 1 view .LVU723
3159:./Libraries/FatFs/Src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 2075              		.loc 1 3159 30 is_stmt 0 view .LVU724
 2076 0154 1044     		add	r0, r0, r2
3161:./Libraries/FatFs/Src/ff.c **** 		}
 2077              		.loc 1 3161 37 view .LVU725
 2078 0156 01EB4106 		add	r6, r1, r1, lsl #1
ARM GAS  /tmp/ccaQXGqa.s 			page 104


3161:./Libraries/FatFs/Src/ff.c **** 		}
 2079              		.loc 1 3161 61 view .LVU726
 2080 015a 01F00102 		and	r2, r1, #1
3161:./Libraries/FatFs/Src/ff.c **** 		}
 2081              		.loc 1 3161 22 view .LVU727
 2082 015e 0124     		movs	r4, #1
3159:./Libraries/FatFs/Src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 2083              		.loc 1 3159 16 view .LVU728
 2084 0160 A862     		str	r0, [r5, #40]
3160:./Libraries/FatFs/Src/ff.c **** 				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
 2085              		.loc 1 3160 4 is_stmt 1 view .LVU729
3161:./Libraries/FatFs/Src/ff.c **** 		}
 2086              		.loc 1 3161 22 is_stmt 0 view .LVU730
 2087 0162 02EB5602 		add	r2, r2, r6, lsr #1
 2088              	.LVL167:
 2089              	.L187:
3163:./Libraries/FatFs/Src/ff.c **** 
 2090              		.loc 1 3163 3 is_stmt 1 view .LVU731
3163:./Libraries/FatFs/Src/ff.c **** 
 2091              		.loc 1 3163 27 is_stmt 0 view .LVU732
 2092 0166 02F2FF12 		addw	r2, r2, #511
 2093              	.LVL168:
3163:./Libraries/FatFs/Src/ff.c **** 
 2094              		.loc 1 3163 6 view .LVU733
 2095 016a B3EB522F 		cmp	r3, r2, lsr #9
 2096 016e 46D3     		bcc	.L169
3167:./Libraries/FatFs/Src/ff.c **** 		fs->fsi_flag = 0x80;
 2097              		.loc 1 3167 3 is_stmt 1 view .LVU734
3167:./Libraries/FatFs/Src/ff.c **** 		fs->fsi_flag = 0x80;
 2098              		.loc 1 3167 33 is_stmt 0 view .LVU735
 2099 0170 4FF0FF33 		mov	r3, #-1
 2100              	.LVL169:
3168:./Libraries/FatFs/Src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 2101              		.loc 1 3168 16 view .LVU736
 2102 0174 8022     		movs	r2, #128
 2103              	.LVL170:
3167:./Libraries/FatFs/Src/ff.c **** 		fs->fsi_flag = 0x80;
 2104              		.loc 1 3167 17 view .LVU737
 2105 0176 C5E90433 		strd	r3, r3, [r5, #16]
3168:./Libraries/FatFs/Src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 2106              		.loc 1 3168 3 is_stmt 1 view .LVU738
3168:./Libraries/FatFs/Src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 2107              		.loc 1 3168 16 is_stmt 0 view .LVU739
 2108 017a 2A71     		strb	r2, [r5, #4]
3170:./Libraries/FatFs/Src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
 2109              		.loc 1 3170 3 is_stmt 1 view .LVU740
 2110              	.LVL171:
 2111              	.L183:
3191:./Libraries/FatFs/Src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
 2112              		.loc 1 3191 2 view .LVU741
3192:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN == 1
 2113              		.loc 1 3192 11 is_stmt 0 view .LVU742
 2114 017c 5349     		ldr	r1, .L241+4
 2115              	.LBB714:
 2116              	.LBB715:
 870:./Libraries/FatFs/Src/ff.c **** 	}
 2117              		.loc 1 870 15 view .LVU743
ARM GAS  /tmp/ccaQXGqa.s 			page 105


 2118 017e 544A     		ldr	r2, .L241+8
 2119              	.LBE715:
 2120              	.LBE714:
3192:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN == 1
 2121              		.loc 1 3192 11 view .LVU744
 2122 0180 0B88     		ldrh	r3, [r1]
 2123              	.LBB720:
 2124              	.LBB716:
 870:./Libraries/FatFs/Src/ff.c **** 	}
 2125              		.loc 1 870 6 view .LVU745
 2126 0182 1068     		ldr	r0, [r2]
 2127              	.LBE716:
 2128              	.LBE720:
3192:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN == 1
 2129              		.loc 1 3192 11 view .LVU746
 2130 0184 0133     		adds	r3, r3, #1
3191:./Libraries/FatFs/Src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
 2131              		.loc 1 3191 14 view .LVU747
 2132 0186 2C70     		strb	r4, [r5]
3192:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN == 1
 2133              		.loc 1 3192 2 is_stmt 1 view .LVU748
 2134              	.LBB721:
 2135              	.LBB717:
 870:./Libraries/FatFs/Src/ff.c **** 	}
 2136              		.loc 1 870 6 is_stmt 0 view .LVU749
 2137 0188 8542     		cmp	r5, r0
 2138              	.LBE717:
 2139              	.LBE721:
3192:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN == 1
 2140              		.loc 1 3192 11 view .LVU750
 2141 018a 9BB2     		uxth	r3, r3
3192:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN == 1
 2142              		.loc 1 3192 9 view .LVU751
 2143 018c 0B80     		strh	r3, [r1]	@ movhi
 2144 018e EB80     		strh	r3, [r5, #6]	@ movhi
3203:./Libraries/FatFs/Src/ff.c **** #endif
 2145              		.loc 1 3203 2 is_stmt 1 view .LVU752
 2146              	.LVL172:
 2147              	.LBB722:
 2148              	.LBI714:
 863:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs
 2149              		.loc 1 863 6 view .LVU753
 2150              	.LBB718:
 867:./Libraries/FatFs/Src/ff.c **** 
 2151              		.loc 1 867 2 view .LVU754
 869:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 2152              		.loc 1 869 2 view .LVU755
 869:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 2153              		.loc 1 869 14 view .LVU756
 870:./Libraries/FatFs/Src/ff.c **** 	}
 2154              		.loc 1 870 3 view .LVU757
 870:./Libraries/FatFs/Src/ff.c **** 	}
 2155              		.loc 1 870 6 is_stmt 0 view .LVU758
 2156 0190 00F08F80 		beq	.L238
 2157              	.L184:
 869:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 2158              		.loc 1 869 28 is_stmt 1 view .LVU759
ARM GAS  /tmp/ccaQXGqa.s 			page 106


 2159              	.LVL173:
 869:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 2160              		.loc 1 869 14 view .LVU760
 870:./Libraries/FatFs/Src/ff.c **** 	}
 2161              		.loc 1 870 3 view .LVU761
 870:./Libraries/FatFs/Src/ff.c **** 	}
 2162              		.loc 1 870 6 is_stmt 0 view .LVU762
 2163 0194 1369     		ldr	r3, [r2, #16]
 870:./Libraries/FatFs/Src/ff.c **** 	}
 2164              		.loc 1 870 38 view .LVU763
 2165 0196 0024     		movs	r4, #0
 870:./Libraries/FatFs/Src/ff.c **** 	}
 2166              		.loc 1 870 6 view .LVU764
 2167 0198 9D42     		cmp	r5, r3
 2168 019a 7FF448AF 		bne	.L198
 870:./Libraries/FatFs/Src/ff.c **** 	}
 2169              		.loc 1 870 26 is_stmt 1 view .LVU765
 870:./Libraries/FatFs/Src/ff.c **** 	}
 2170              		.loc 1 870 38 is_stmt 0 view .LVU766
 2171 019e 1461     		str	r4, [r2, #16]
 2172 01a0 45E7     		b	.L198
 2173              	.LVL174:
 2174              	.L235:
 870:./Libraries/FatFs/Src/ff.c **** 	}
 2175              		.loc 1 870 38 view .LVU767
 2176              	.LBE718:
 2177              	.LBE722:
3022:./Libraries/FatFs/Src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 2178              		.loc 1 3022 3 is_stmt 1 view .LVU768
3022:./Libraries/FatFs/Src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 2179              		.loc 1 3022 10 is_stmt 0 view .LVU769
 2180 01a2 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 2181 01a4 FFF7FEFF 		bl	disk_status
 2182              	.LVL175:
3023:./Libraries/FatFs/Src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
 2183              		.loc 1 3023 3 is_stmt 1 view .LVU770
3023:./Libraries/FatFs/Src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
 2184              		.loc 1 3023 6 is_stmt 0 view .LVU771
 2185 01a8 C107     		lsls	r1, r0, #31
 2186 01aa 3FF54BAF 		bmi	.L159
3024:./Libraries/FatFs/Src/ff.c **** 				return FR_WRITE_PROTECTED;
 2187              		.loc 1 3024 4 is_stmt 1 view .LVU772
3024:./Libraries/FatFs/Src/ff.c **** 				return FR_WRITE_PROTECTED;
 2188              		.loc 1 3024 7 is_stmt 0 view .LVU773
 2189 01ae 002C     		cmp	r4, #0
 2190 01b0 3FF43DAF 		beq	.L198
3024:./Libraries/FatFs/Src/ff.c **** 				return FR_WRITE_PROTECTED;
 2191              		.loc 1 3024 30 discriminator 1 view .LVU774
 2192 01b4 10F00404 		ands	r4, r0, #4
 2193              	.LVL176:
3024:./Libraries/FatFs/Src/ff.c **** 				return FR_WRITE_PROTECTED;
 2194              		.loc 1 3024 30 discriminator 1 view .LVU775
 2195 01b8 3FF439AF 		beq	.L198
 2196              	.L161:
3025:./Libraries/FatFs/Src/ff.c **** 			}
 2197              		.loc 1 3025 12 view .LVU776
 2198 01bc 0A24     		movs	r4, #10
ARM GAS  /tmp/ccaQXGqa.s 			page 107


 2199 01be 36E7     		b	.L198
 2200              	.LVL177:
 2201              	.L236:
3025:./Libraries/FatFs/Src/ff.c **** 			}
 2202              		.loc 1 3025 12 view .LVU777
 2203 01c0 6C46     		mov	r4, sp
 2204              	.LVL178:
3025:./Libraries/FatFs/Src/ff.c **** 			}
 2205              		.loc 1 3025 12 view .LVU778
 2206 01c2 05F5F973 		add	r3, r5, #498
 2207 01c6 05F23226 		addw	r6, r5, #562
 2208              	.LVL179:
3051:./Libraries/FatFs/Src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
 2209              		.loc 1 3051 5 view .LVU779
 2210 01ca 2046     		mov	r0, r4
 2211              	.LVL180:
 2212              	.L164:
3053:./Libraries/FatFs/Src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 2213              		.loc 1 3053 4 is_stmt 1 view .LVU780
3054:./Libraries/FatFs/Src/ff.c **** 		}
 2214              		.loc 1 3054 4 view .LVU781
 2215              	.LBB723:
 2216              	.LBI723:
 623:./Libraries/FatFs/Src/ff.c **** {
 2217              		.loc 1 623 7 view .LVU782
 2218              	.LBB724:
 625:./Libraries/FatFs/Src/ff.c **** 
 2219              		.loc 1 625 2 view .LVU783
 627:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 2220              		.loc 1 627 2 view .LVU784
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 2221              		.loc 1 628 2 view .LVU785
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2222              		.loc 1 629 2 view .LVU786
 2223              	.LBE724:
 2224              	.LBE723:
3054:./Libraries/FatFs/Src/ff.c **** 		}
 2225              		.loc 1 3054 54 is_stmt 0 view .LVU787
 2226 01cc 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 2227 01ce 0A46     		mov	r2, r1
 2228 01d0 31B1     		cbz	r1, .L163
 2229              	.LBB726:
 2230              	.LBB725:
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 2231              		.loc 1 628 5 discriminator 1 view .LVU788
 2232 01d2 5F89     		ldrh	r7, [r3, #10]	@ unaligned
 2233              	.LVL181:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2234              		.loc 1 630 2 is_stmt 1 discriminator 1 view .LVU789
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2235              		.loc 1 629 20 is_stmt 0 discriminator 1 view .LVU790
 2236 01d4 597A     		ldrb	r1, [r3, #9]	@ zero_extendqisi2
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2237              		.loc 1 630 20 discriminator 1 view .LVU791
 2238 01d6 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2239              		.loc 1 629 5 discriminator 1 view .LVU792
ARM GAS  /tmp/ccaQXGqa.s 			page 108


 2240 01d8 41EA0721 		orr	r1, r1, r7, lsl #8
 2241              	.LVL182:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2242              		.loc 1 630 5 discriminator 1 view .LVU793
 2243 01dc 42EA0122 		orr	r2, r2, r1, lsl #8
 2244              	.LVL183:
 631:./Libraries/FatFs/Src/ff.c **** }
 2245              		.loc 1 631 2 is_stmt 1 discriminator 1 view .LVU794
 2246              	.L163:
 631:./Libraries/FatFs/Src/ff.c **** }
 2247              		.loc 1 631 2 is_stmt 0 discriminator 1 view .LVU795
 2248 01e0 1033     		adds	r3, r3, #16
 2249              	.LVL184:
 631:./Libraries/FatFs/Src/ff.c **** }
 2250              		.loc 1 631 2 discriminator 1 view .LVU796
 2251              	.LBE725:
 2252              	.LBE726:
3054:./Libraries/FatFs/Src/ff.c **** 		}
 2253              		.loc 1 3054 10 discriminator 4 view .LVU797
 2254 01e2 40F8042B 		str	r2, [r0], #4
3052:./Libraries/FatFs/Src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2255              		.loc 1 3052 22 is_stmt 1 discriminator 4 view .LVU798
3052:./Libraries/FatFs/Src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2256              		.loc 1 3052 15 discriminator 4 view .LVU799
3052:./Libraries/FatFs/Src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2257              		.loc 1 3052 3 is_stmt 0 discriminator 4 view .LVU800
 2258 01e6 B342     		cmp	r3, r6
 2259 01e8 F0D1     		bne	.L164
 2260 01ea 04F11007 		add	r7, r4, #16
 2261              	.LVL185:
 2262              	.L167:
3058:./Libraries/FatFs/Src/ff.c **** 			bsect = br[i];
 2263              		.loc 1 3058 3 is_stmt 1 view .LVU801
3059:./Libraries/FatFs/Src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
 2264              		.loc 1 3059 4 view .LVU802
3059:./Libraries/FatFs/Src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
 2265              		.loc 1 3059 10 is_stmt 0 view .LVU803
 2266 01ee 54F8046B 		ldr	r6, [r4], #4
 2267              	.LVL186:
3060:./Libraries/FatFs/Src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 2268              		.loc 1 3060 4 is_stmt 1 view .LVU804
3060:./Libraries/FatFs/Src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 2269              		.loc 1 3060 8 is_stmt 0 view .LVU805
 2270 01f2 0320     		movs	r0, #3
 2271 01f4 96B9     		cbnz	r6, .L239
 2272              	.L165:
3061:./Libraries/FatFs/Src/ff.c **** 	}
 2273              		.loc 1 3061 40 discriminator 1 view .LVU806
 2274 01f6 A742     		cmp	r7, r4
 2275 01f8 F9D1     		bne	.L167
 2276              	.LVL187:
3063:./Libraries/FatFs/Src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 2277              		.loc 1 3063 2 is_stmt 1 view .LVU807
3063:./Libraries/FatFs/Src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 2278              		.loc 1 3063 5 is_stmt 0 view .LVU808
 2279 01fa 0428     		cmp	r0, #4
 2280 01fc 17D0     		beq	.L197
ARM GAS  /tmp/ccaQXGqa.s 			page 109


 2281              	.LVL188:
 2282              	.L169:
3064:./Libraries/FatFs/Src/ff.c **** 
 2283              		.loc 1 3064 23 view .LVU809
 2284 01fe 0D24     		movs	r4, #13
 2285              		.loc 1 3206 1 view .LVU810
 2286 0200 2046     		mov	r0, r4
 2287 0202 04B0     		add	sp, sp, #16
 2288              	.LCFI29:
 2289              		.cfi_remember_state
 2290              		.cfi_def_cfa_offset 24
 2291              		@ sp needed
 2292 0204 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2293              	.LVL189:
 2294              	.L189:
 2295              	.LCFI30:
 2296              		.cfi_restore_state
3015:./Libraries/FatFs/Src/ff.c **** 
 2297              		.loc 1 3015 18 view .LVU811
 2298 0208 0C24     		movs	r4, #12
 2299              		.loc 1 3206 1 view .LVU812
 2300 020a 2046     		mov	r0, r4
 2301              	.LVL190:
 2302              		.loc 1 3206 1 view .LVU813
 2303 020c 04B0     		add	sp, sp, #16
 2304              	.LCFI31:
 2305              		.cfi_remember_state
 2306              		.cfi_def_cfa_offset 24
 2307              		@ sp needed
 2308 020e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2309              	.LVL191:
 2310              	.L188:
 2311              	.LCFI32:
 2312              		.cfi_restore_state
3011:./Libraries/FatFs/Src/ff.c **** 
 2313              		.loc 1 3011 22 view .LVU814
 2314 0212 0B24     		movs	r4, #11
 2315              		.loc 1 3206 1 view .LVU815
 2316 0214 2046     		mov	r0, r4
 2317              	.LVL192:
 2318              		.loc 1 3206 1 view .LVU816
 2319 0216 04B0     		add	sp, sp, #16
 2320              	.LCFI33:
 2321              		.cfi_remember_state
 2322              		.cfi_def_cfa_offset 24
 2323              		@ sp needed
 2324 0218 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2325              	.LVL193:
 2326              	.L239:
 2327              	.LCFI34:
 2328              		.cfi_restore_state
3060:./Libraries/FatFs/Src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 2329              		.loc 1 3060 18 discriminator 1 view .LVU817
 2330 021c 3146     		mov	r1, r6
 2331 021e 2846     		mov	r0, r5
 2332 0220 FFF7FEFF 		bl	check_fs
 2333              	.LVL194:
ARM GAS  /tmp/ccaQXGqa.s 			page 110


3061:./Libraries/FatFs/Src/ff.c **** 	}
 2334              		.loc 1 3061 11 is_stmt 1 discriminator 1 view .LVU818
3061:./Libraries/FatFs/Src/ff.c **** 	}
 2335              		.loc 1 3061 3 is_stmt 0 discriminator 1 view .LVU819
 2336 0224 0128     		cmp	r0, #1
 2337 0226 E6D8     		bhi	.L165
 2338 0228 27E7     		b	.L166
 2339              	.LVL195:
 2340              	.L191:
3038:./Libraries/FatFs/Src/ff.c **** 	}
 2341              		.loc 1 3038 10 view .LVU820
 2342 022a 0324     		movs	r4, #3
 2343              	.LVL196:
3038:./Libraries/FatFs/Src/ff.c **** 	}
 2344              		.loc 1 3038 10 view .LVU821
 2345 022c FFE6     		b	.L198
 2346              	.LVL197:
 2347              	.L197:
3063:./Libraries/FatFs/Src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 2348              		.loc 1 3063 23 view .LVU822
 2349 022e 0124     		movs	r4, #1
 2350 0230 FDE6     		b	.L198
 2351              	.LVL198:
 2352              	.L237:
3119:./Libraries/FatFs/Src/ff.c **** 		fs->fsize = fasize;
 2353              		.loc 1 3119 20 is_stmt 1 discriminator 1 view .LVU823
 2354              	.LBB727:
 2355              	.LBI727:
 623:./Libraries/FatFs/Src/ff.c **** {
 2356              		.loc 1 623 7 discriminator 1 view .LVU824
 2357              	.LBB728:
 625:./Libraries/FatFs/Src/ff.c **** 
 2358              		.loc 1 625 2 discriminator 1 view .LVU825
 627:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 2359              		.loc 1 627 2 discriminator 1 view .LVU826
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 2360              		.loc 1 628 2 discriminator 1 view .LVU827
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2361              		.loc 1 629 2 discriminator 1 view .LVU828
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 2362              		.loc 1 628 5 is_stmt 0 discriminator 1 view .LVU829
 2363 0232 B5F85A10 		ldrh	r1, [r5, #90]	@ unaligned
 2364              	.LVL199:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2365              		.loc 1 630 2 is_stmt 1 discriminator 1 view .LVU830
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2366              		.loc 1 629 20 is_stmt 0 discriminator 1 view .LVU831
 2367 0236 95F85930 		ldrb	r3, [r5, #89]	@ zero_extendqisi2
 2368              	.LVL200:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2369              		.loc 1 630 20 discriminator 1 view .LVU832
 2370 023a 95F85820 		ldrb	r2, [r5, #88]	@ zero_extendqisi2
 2371              	.LVL201:
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2372              		.loc 1 629 5 discriminator 1 view .LVU833
 2373 023e 43EA0123 		orr	r3, r3, r1, lsl #8
 2374              	.LVL202:
ARM GAS  /tmp/ccaQXGqa.s 			page 111


 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2375              		.loc 1 630 5 discriminator 1 view .LVU834
 2376 0242 42EA0323 		orr	r3, r2, r3, lsl #8
 2377              	.LVL203:
 631:./Libraries/FatFs/Src/ff.c **** }
 2378              		.loc 1 631 2 is_stmt 1 discriminator 1 view .LVU835
 631:./Libraries/FatFs/Src/ff.c **** }
 2379              		.loc 1 631 2 is_stmt 0 discriminator 1 view .LVU836
 2380 0246 2AE7     		b	.L171
 2381              	.LVL204:
 2382              	.L174:
 631:./Libraries/FatFs/Src/ff.c **** }
 2383              		.loc 1 631 2 discriminator 1 view .LVU837
 2384              	.LBE728:
 2385              	.LBE727:
3148:./Libraries/FatFs/Src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 2386              		.loc 1 3148 3 is_stmt 1 view .LVU838
 2387              	.LBB729:
 2388              	.LBB730:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2389              		.loc 1 618 10 is_stmt 0 view .LVU839
 2390 0248 95F85FC0 		ldrb	ip, [r5, #95]	@ zero_extendqisi2
 2391              	.LBE730:
 2392              	.LBE729:
3151:./Libraries/FatFs/Src/ff.c **** 		if (fmt == FS_FAT32) {
 2393              		.loc 1 3151 24 view .LVU840
 2394 024c 0EEB0601 		add	r1, lr, r6
 2395              	.LBB734:
 2396              	.LBB731:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2397              		.loc 1 618 20 view .LVU841
 2398 0250 95F85E70 		ldrb	r7, [r5, #94]	@ zero_extendqisi2
 2399              	.LBE731:
 2400              	.LBE734:
3148:./Libraries/FatFs/Src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 2401              		.loc 1 3148 24 view .LVU842
 2402 0254 08F10202 		add	r2, r8, #2
3151:./Libraries/FatFs/Src/ff.c **** 		if (fmt == FS_FAT32) {
 2403              		.loc 1 3151 16 view .LVU843
 2404 0258 E962     		str	r1, [r5, #44]
3150:./Libraries/FatFs/Src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
 2405              		.loc 1 3150 23 view .LVU844
 2406 025a 3044     		add	r0, r0, r6
 2407              	.LVL205:
 2408              	.LBB735:
 2409              	.LBB732:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2410              		.loc 1 618 15 view .LVU845
 2411 025c 47EA0C27 		orr	r7, r7, ip, lsl #8
 2412              	.LBE732:
 2413              	.LBE735:
3148:./Libraries/FatFs/Src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 2414              		.loc 1 3148 16 view .LVU846
 2415 0260 AA61     		str	r2, [r5, #24]
3149:./Libraries/FatFs/Src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 2416              		.loc 1 3149 3 is_stmt 1 view .LVU847
3150:./Libraries/FatFs/Src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
ARM GAS  /tmp/ccaQXGqa.s 			page 112


 2417              		.loc 1 3150 15 is_stmt 0 view .LVU848
 2418 0262 6862     		str	r0, [r5, #36]
3154:./Libraries/FatFs/Src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2419              		.loc 1 3154 7 view .LVU849
 2420 0264 44EA0701 		orr	r1, r4, r7
3149:./Libraries/FatFs/Src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 2421              		.loc 1 3149 15 view .LVU850
 2422 0268 2E62     		str	r6, [r5, #32]
3150:./Libraries/FatFs/Src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
 2423              		.loc 1 3150 3 is_stmt 1 view .LVU851
3151:./Libraries/FatFs/Src/ff.c **** 		if (fmt == FS_FAT32) {
 2424              		.loc 1 3151 3 view .LVU852
3152:./Libraries/FatFs/Src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
 2425              		.loc 1 3152 3 view .LVU853
3153:./Libraries/FatFs/Src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2426              		.loc 1 3153 4 view .LVU854
 2427              	.LVL206:
 2428              	.LBB736:
 2429              	.LBI729:
 613:./Libraries/FatFs/Src/ff.c **** {
 2430              		.loc 1 613 6 view .LVU855
 2431              	.LBB733:
 615:./Libraries/FatFs/Src/ff.c **** 
 2432              		.loc 1 615 2 view .LVU856
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2433              		.loc 1 617 2 view .LVU857
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2434              		.loc 1 618 2 view .LVU858
 619:./Libraries/FatFs/Src/ff.c **** }
 2435              		.loc 1 619 2 view .LVU859
 619:./Libraries/FatFs/Src/ff.c **** }
 2436              		.loc 1 619 2 is_stmt 0 view .LVU860
 2437              	.LBE733:
 2438              	.LBE736:
3154:./Libraries/FatFs/Src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2439              		.loc 1 3154 4 is_stmt 1 view .LVU861
3154:./Libraries/FatFs/Src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2440              		.loc 1 3154 7 is_stmt 0 view .LVU862
 2441 026a 09B2     		sxth	r1, r1
 2442 026c 0029     		cmp	r1, #0
 2443 026e C6D1     		bne	.L169
3155:./Libraries/FatFs/Src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 2444              		.loc 1 3155 4 is_stmt 1 view .LVU863
 2445              	.LVL207:
 2446              	.LBB737:
 2447              	.LBI737:
 623:./Libraries/FatFs/Src/ff.c **** {
 2448              		.loc 1 623 7 view .LVU864
 2449              	.LBB738:
 625:./Libraries/FatFs/Src/ff.c **** 
 2450              		.loc 1 625 2 view .LVU865
 627:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 2451              		.loc 1 627 2 view .LVU866
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 2452              		.loc 1 628 2 view .LVU867
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2453              		.loc 1 629 2 view .LVU868
ARM GAS  /tmp/ccaQXGqa.s 			page 113


 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 2454              		.loc 1 628 5 is_stmt 0 view .LVU869
 2455 0270 B5F86240 		ldrh	r4, [r5, #98]	@ unaligned
 2456              	.LVL208:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2457              		.loc 1 630 2 is_stmt 1 view .LVU870
 2458              	.LBE738:
 2459              	.LBE737:
3156:./Libraries/FatFs/Src/ff.c **** 		} else {
 2460              		.loc 1 3156 11 is_stmt 0 view .LVU871
 2461 0274 9200     		lsls	r2, r2, #2
 2462              	.LBB742:
 2463              	.LBB739:
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2464              		.loc 1 629 20 view .LVU872
 2465 0276 95F86100 		ldrb	r0, [r5, #97]	@ zero_extendqisi2
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2466              		.loc 1 630 20 view .LVU873
 2467 027a 95F86010 		ldrb	r1, [r5, #96]	@ zero_extendqisi2
 2468              	.LBE739:
 2469              	.LBE742:
3163:./Libraries/FatFs/Src/ff.c **** 
 2470              		.loc 1 3163 27 view .LVU874
 2471 027e 02F2FF12 		addw	r2, r2, #511
 2472              	.LBB743:
 2473              	.LBB740:
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2474              		.loc 1 629 5 view .LVU875
 2475 0282 40EA0420 		orr	r0, r0, r4, lsl #8
 2476              	.LVL209:
 631:./Libraries/FatFs/Src/ff.c **** }
 2477              		.loc 1 631 2 is_stmt 1 view .LVU876
 631:./Libraries/FatFs/Src/ff.c **** }
 2478              		.loc 1 631 2 is_stmt 0 view .LVU877
 2479              	.LBE740:
 2480              	.LBE743:
3163:./Libraries/FatFs/Src/ff.c **** 
 2481              		.loc 1 3163 6 view .LVU878
 2482 0286 B3EB522F 		cmp	r3, r2, lsr #9
 2483              	.LBB744:
 2484              	.LBB741:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2485              		.loc 1 630 5 view .LVU879
 2486 028a 41EA0021 		orr	r1, r1, r0, lsl #8
 2487              	.LBE741:
 2488              	.LBE744:
3155:./Libraries/FatFs/Src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 2489              		.loc 1 3155 16 view .LVU880
 2490 028e A962     		str	r1, [r5, #40]
3156:./Libraries/FatFs/Src/ff.c **** 		} else {
 2491              		.loc 1 3156 4 is_stmt 1 view .LVU881
 2492              	.LVL210:
3163:./Libraries/FatFs/Src/ff.c **** 
 2493              		.loc 1 3163 3 view .LVU882
3163:./Libraries/FatFs/Src/ff.c **** 
 2494              		.loc 1 3163 6 is_stmt 0 view .LVU883
 2495 0290 B5D3     		bcc	.L169
ARM GAS  /tmp/ccaQXGqa.s 			page 114


3167:./Libraries/FatFs/Src/ff.c **** 		fs->fsi_flag = 0x80;
 2496              		.loc 1 3167 3 is_stmt 1 view .LVU884
 2497              	.LBB745:
 2498              	.LBB746:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2499              		.loc 1 618 10 is_stmt 0 view .LVU885
 2500 0292 95F86500 		ldrb	r0, [r5, #101]	@ zero_extendqisi2
 2501              	.LBE746:
 2502              	.LBE745:
3167:./Libraries/FatFs/Src/ff.c **** 		fs->fsi_flag = 0x80;
 2503              		.loc 1 3167 33 view .LVU886
 2504 0296 4FF0FF32 		mov	r2, #-1
 2505              	.LBB750:
 2506              	.LBB747:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2507              		.loc 1 618 20 view .LVU887
 2508 029a 95F86430 		ldrb	r3, [r5, #100]	@ zero_extendqisi2
 2509              	.LVL211:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2510              		.loc 1 618 20 view .LVU888
 2511              	.LBE747:
 2512              	.LBE750:
3168:./Libraries/FatFs/Src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 2513              		.loc 1 3168 16 view .LVU889
 2514 029e 8021     		movs	r1, #128
3167:./Libraries/FatFs/Src/ff.c **** 		fs->fsi_flag = 0x80;
 2515              		.loc 1 3167 33 view .LVU890
 2516 02a0 6A61     		str	r2, [r5, #20]
 2517              	.LBB751:
 2518              	.LBB748:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2519              		.loc 1 618 15 view .LVU891
 2520 02a2 43EA0023 		orr	r3, r3, r0, lsl #8
 2521              	.LBE748:
 2522              	.LBE751:
3167:./Libraries/FatFs/Src/ff.c **** 		fs->fsi_flag = 0x80;
 2523              		.loc 1 3167 17 view .LVU892
 2524 02a6 2A61     		str	r2, [r5, #16]
3168:./Libraries/FatFs/Src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 2525              		.loc 1 3168 3 is_stmt 1 view .LVU893
3168:./Libraries/FatFs/Src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 2526              		.loc 1 3168 16 is_stmt 0 view .LVU894
 2527 02a8 2971     		strb	r1, [r5, #4]
3170:./Libraries/FatFs/Src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
 2528              		.loc 1 3170 3 is_stmt 1 view .LVU895
 2529              	.LVL212:
 2530              	.LBB752:
 2531              	.LBI745:
 613:./Libraries/FatFs/Src/ff.c **** {
 2532              		.loc 1 613 6 view .LVU896
 2533              	.LBB749:
 615:./Libraries/FatFs/Src/ff.c **** 
 2534              		.loc 1 615 2 view .LVU897
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2535              		.loc 1 617 2 view .LVU898
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2536              		.loc 1 618 2 view .LVU899
ARM GAS  /tmp/ccaQXGqa.s 			page 115


 619:./Libraries/FatFs/Src/ff.c **** }
 2537              		.loc 1 619 2 view .LVU900
 619:./Libraries/FatFs/Src/ff.c **** }
 2538              		.loc 1 619 2 is_stmt 0 view .LVU901
 2539              	.LBE749:
 2540              	.LBE752:
3171:./Libraries/FatFs/Src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
 2541              		.loc 1 3171 4 view .LVU902
 2542 02aa 012B     		cmp	r3, #1
 2543 02ac 12D0     		beq	.L240
 2544              	.LVL213:
 2545              	.L181:
3183:./Libraries/FatFs/Src/ff.c **** #endif
 2546              		.loc 1 3183 19 view .LVU903
 2547 02ae 0324     		movs	r4, #3
 2548 02b0 64E7     		b	.L183
 2549              	.LVL214:
 2550              	.L238:
 2551              	.LBB753:
 2552              	.LBB719:
 870:./Libraries/FatFs/Src/ff.c **** 	}
 2553              		.loc 1 870 26 is_stmt 1 view .LVU904
 870:./Libraries/FatFs/Src/ff.c **** 	}
 2554              		.loc 1 870 38 is_stmt 0 view .LVU905
 2555 02b2 0023     		movs	r3, #0
 2556 02b4 1360     		str	r3, [r2]
 2557 02b6 6DE7     		b	.L184
 2558              	.LVL215:
 2559              	.L175:
 870:./Libraries/FatFs/Src/ff.c **** 	}
 2560              		.loc 1 870 38 view .LVU906
 2561              	.LBE719:
 2562              	.LBE753:
3148:./Libraries/FatFs/Src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 2563              		.loc 1 3148 3 is_stmt 1 view .LVU907
3152:./Libraries/FatFs/Src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
 2564              		.loc 1 3152 3 view .LVU908
3158:./Libraries/FatFs/Src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2565              		.loc 1 3158 4 view .LVU909
3158:./Libraries/FatFs/Src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2566              		.loc 1 3158 7 is_stmt 0 view .LVU910
 2567 02b8 BCF1000F 		cmp	ip, #0
 2568 02bc 9FD0     		beq	.L169
3159:./Libraries/FatFs/Src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 2569              		.loc 1 3159 4 is_stmt 1 view .LVU911
3159:./Libraries/FatFs/Src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 2570              		.loc 1 3159 30 is_stmt 0 view .LVU912
 2571 02be 1044     		add	r0, r0, r2
 2572 02c0 0224     		movs	r4, #2
3161:./Libraries/FatFs/Src/ff.c **** 		}
 2573              		.loc 1 3161 22 view .LVU913
 2574 02c2 4A00     		lsls	r2, r1, #1
3159:./Libraries/FatFs/Src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 2575              		.loc 1 3159 16 view .LVU914
 2576 02c4 A862     		str	r0, [r5, #40]
3160:./Libraries/FatFs/Src/ff.c **** 				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
 2577              		.loc 1 3160 4 is_stmt 1 view .LVU915
ARM GAS  /tmp/ccaQXGqa.s 			page 116


 2578 02c6 4EE7     		b	.L187
 2579              	.L242:
 2580              		.align	2
 2581              	.L241:
 2582 02c8 00000000 		.word	.LANCHOR1
 2583 02cc 00000000 		.word	.LANCHOR2
 2584 02d0 00000000 		.word	.LANCHOR0
 2585              	.LVL216:
 2586              	.L240:
3172:./Libraries/FatFs/Src/ff.c **** 		{
 2587              		.loc 1 3172 7 is_stmt 0 view .LVU916
 2588 02d4 711C     		adds	r1, r6, #1
 2589              	.LVL217:
 2590              	.LBB754:
 2591              	.LBI754:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 2592              		.loc 1 912 9 is_stmt 1 view .LVU917
 2593              	.LBB755:
 917:./Libraries/FatFs/Src/ff.c **** 
 2594              		.loc 1 917 2 view .LVU918
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 2595              		.loc 1 920 2 view .LVU919
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 2596              		.loc 1 920 5 is_stmt 0 view .LVU920
 2597 02d6 2B6B     		ldr	r3, [r5, #48]
 2598 02d8 9942     		cmp	r1, r3
 2599 02da 04D0     		beq	.L182
 2600 02dc 2846     		mov	r0, r5
 2601 02de FFF7FEFF 		bl	move_window.part.0
 2602              	.LVL218:
 932:./Libraries/FatFs/Src/ff.c **** }
 2603              		.loc 1 932 2 is_stmt 1 view .LVU921
 932:./Libraries/FatFs/Src/ff.c **** }
 2604              		.loc 1 932 2 is_stmt 0 view .LVU922
 2605              	.LBE755:
 2606              	.LBE754:
3172:./Libraries/FatFs/Src/ff.c **** 		{
 2607              		.loc 1 3172 4 view .LVU923
 2608 02e2 0028     		cmp	r0, #0
 2609 02e4 E3D1     		bne	.L181
 2610              	.L182:
3174:./Libraries/FatFs/Src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 2611              		.loc 1 3174 4 is_stmt 1 view .LVU924
 2612              	.LBB756:
 2613              	.LBB757:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2614              		.loc 1 618 10 is_stmt 0 view .LVU925
 2615 02e6 95F83312 		ldrb	r1, [r5, #563]	@ zero_extendqisi2
 2616              	.LBE757:
 2617              	.LBE756:
3175:./Libraries/FatFs/Src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 2618              		.loc 1 3175 7 view .LVU926
 2619 02ea 4AF65522 		movw	r2, #43605
 2620              	.LBB761:
 2621              	.LBB758:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2622              		.loc 1 618 20 view .LVU927
ARM GAS  /tmp/ccaQXGqa.s 			page 117


 2623 02ee 95F83232 		ldrb	r3, [r5, #562]	@ zero_extendqisi2
 2624              	.LBE758:
 2625              	.LBE761:
3174:./Libraries/FatFs/Src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 2626              		.loc 1 3174 17 view .LVU928
 2627 02f2 0020     		movs	r0, #0
 2628              	.LBB762:
 2629              	.LBB759:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2630              		.loc 1 618 15 view .LVU929
 2631 02f4 43EA0123 		orr	r3, r3, r1, lsl #8
 2632              	.LBE759:
 2633              	.LBE762:
3174:./Libraries/FatFs/Src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 2634              		.loc 1 3174 17 view .LVU930
 2635 02f8 2871     		strb	r0, [r5, #4]
3175:./Libraries/FatFs/Src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 2636              		.loc 1 3175 4 is_stmt 1 view .LVU931
 2637              	.LVL219:
 2638              	.LBB763:
 2639              	.LBI756:
 613:./Libraries/FatFs/Src/ff.c **** {
 2640              		.loc 1 613 6 view .LVU932
 2641              	.LBB760:
 615:./Libraries/FatFs/Src/ff.c **** 
 2642              		.loc 1 615 2 view .LVU933
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2643              		.loc 1 617 2 view .LVU934
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2644              		.loc 1 618 2 view .LVU935
 619:./Libraries/FatFs/Src/ff.c **** }
 2645              		.loc 1 619 2 view .LVU936
 619:./Libraries/FatFs/Src/ff.c **** }
 2646              		.loc 1 619 2 is_stmt 0 view .LVU937
 2647              	.LBE760:
 2648              	.LBE763:
3175:./Libraries/FatFs/Src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 2649              		.loc 1 3175 7 view .LVU938
 2650 02fa 9342     		cmp	r3, r2
 2651 02fc D7D1     		bne	.L181
 2652              	.LVL220:
 2653              	.LBB764:
 2654              	.LBI764:
 623:./Libraries/FatFs/Src/ff.c **** {
 2655              		.loc 1 623 7 is_stmt 1 view .LVU939
 2656              	.LBB765:
 625:./Libraries/FatFs/Src/ff.c **** 
 2657              		.loc 1 625 2 view .LVU940
 627:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 2658              		.loc 1 627 2 view .LVU941
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 2659              		.loc 1 628 2 view .LVU942
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2660              		.loc 1 629 2 view .LVU943
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 2661              		.loc 1 628 5 is_stmt 0 view .LVU944
 2662 02fe E98E     		ldrh	r1, [r5, #54]	@ unaligned
ARM GAS  /tmp/ccaQXGqa.s 			page 118


 2663              	.LVL221:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2664              		.loc 1 630 2 is_stmt 1 view .LVU945
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2665              		.loc 1 629 20 is_stmt 0 view .LVU946
 2666 0300 95F83520 		ldrb	r2, [r5, #53]	@ zero_extendqisi2
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2667              		.loc 1 630 20 view .LVU947
 2668 0304 95F83430 		ldrb	r3, [r5, #52]	@ zero_extendqisi2
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2669              		.loc 1 629 5 view .LVU948
 2670 0308 42EA0122 		orr	r2, r2, r1, lsl #8
 2671              	.LVL222:
 631:./Libraries/FatFs/Src/ff.c **** }
 2672              		.loc 1 631 2 is_stmt 1 view .LVU949
 631:./Libraries/FatFs/Src/ff.c **** }
 2673              		.loc 1 631 2 is_stmt 0 view .LVU950
 2674              	.LBE765:
 2675              	.LBE764:
3176:./Libraries/FatFs/Src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 2676              		.loc 1 3176 5 view .LVU951
 2677 030c 1449     		ldr	r1, .L243
 2678              	.LBB767:
 2679              	.LBB766:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2680              		.loc 1 630 5 view .LVU952
 2681 030e 43EA0223 		orr	r3, r3, r2, lsl #8
 2682              	.LBE766:
 2683              	.LBE767:
3176:./Libraries/FatFs/Src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 2684              		.loc 1 3176 5 view .LVU953
 2685 0312 8B42     		cmp	r3, r1
 2686 0314 CBD1     		bne	.L181
 2687              	.LVL223:
 2688              	.LBB768:
 2689              	.LBI768:
 623:./Libraries/FatFs/Src/ff.c **** {
 2690              		.loc 1 623 7 is_stmt 1 view .LVU954
 2691              	.LBB769:
 625:./Libraries/FatFs/Src/ff.c **** 
 2692              		.loc 1 625 2 view .LVU955
 627:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 2693              		.loc 1 627 2 view .LVU956
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 2694              		.loc 1 628 2 view .LVU957
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2695              		.loc 1 629 2 view .LVU958
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 2696              		.loc 1 628 5 is_stmt 0 view .LVU959
 2697 0316 B5F81A12 		ldrh	r1, [r5, #538]	@ unaligned
 2698              	.LVL224:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2699              		.loc 1 630 2 is_stmt 1 view .LVU960
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2700              		.loc 1 629 20 is_stmt 0 view .LVU961
 2701 031a 95F81922 		ldrb	r2, [r5, #537]	@ zero_extendqisi2
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
ARM GAS  /tmp/ccaQXGqa.s 			page 119


 2702              		.loc 1 630 20 view .LVU962
 2703 031e 95F81832 		ldrb	r3, [r5, #536]	@ zero_extendqisi2
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2704              		.loc 1 629 5 view .LVU963
 2705 0322 42EA0122 		orr	r2, r2, r1, lsl #8
 2706              	.LVL225:
 631:./Libraries/FatFs/Src/ff.c **** }
 2707              		.loc 1 631 2 is_stmt 1 view .LVU964
 631:./Libraries/FatFs/Src/ff.c **** }
 2708              		.loc 1 631 2 is_stmt 0 view .LVU965
 2709              	.LBE769:
 2710              	.LBE768:
3177:./Libraries/FatFs/Src/ff.c **** 			{
 2711              		.loc 1 3177 5 view .LVU966
 2712 0326 0F49     		ldr	r1, .L243+4
 2713              	.LBB771:
 2714              	.LBB770:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2715              		.loc 1 630 5 view .LVU967
 2716 0328 43EA0223 		orr	r3, r3, r2, lsl #8
 2717              	.LBE770:
 2718              	.LBE771:
3177:./Libraries/FatFs/Src/ff.c **** 			{
 2719              		.loc 1 3177 5 view .LVU968
 2720 032c 8B42     		cmp	r3, r1
 2721 032e BED1     		bne	.L181
3180:./Libraries/FatFs/Src/ff.c **** #endif
 2722              		.loc 1 3180 5 is_stmt 1 view .LVU969
 2723              	.LVL226:
 2724              	.LBB772:
 2725              	.LBI772:
 623:./Libraries/FatFs/Src/ff.c **** {
 2726              		.loc 1 623 7 view .LVU970
 2727              	.LBB773:
 625:./Libraries/FatFs/Src/ff.c **** 
 2728              		.loc 1 625 2 view .LVU971
 627:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 2729              		.loc 1 627 2 view .LVU972
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 2730              		.loc 1 628 2 view .LVU973
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2731              		.loc 1 629 2 view .LVU974
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2732              		.loc 1 629 20 is_stmt 0 view .LVU975
 2733 0330 95F81D22 		ldrb	r2, [r5, #541]	@ zero_extendqisi2
 2734              	.LBE773:
 2735              	.LBE772:
3183:./Libraries/FatFs/Src/ff.c **** #endif
 2736              		.loc 1 3183 19 view .LVU976
 2737 0334 0324     		movs	r4, #3
 2738              	.LBB777:
 2739              	.LBB778:
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2740              		.loc 1 629 20 view .LVU977
 2741 0336 95F82132 		ldrb	r3, [r5, #545]	@ zero_extendqisi2
 2742              	.LBE778:
 2743              	.LBE777:
ARM GAS  /tmp/ccaQXGqa.s 			page 120


 2744              	.LBB782:
 2745              	.LBB774:
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 2746              		.loc 1 628 5 view .LVU978
 2747 033a B5F81E02 		ldrh	r0, [r5, #542]	@ unaligned
 2748              	.LVL227:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2749              		.loc 1 630 2 is_stmt 1 view .LVU979
 2750              	.LBE774:
 2751              	.LBE782:
 2752              	.LBB783:
 2753              	.LBB779:
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 2754              		.loc 1 628 5 is_stmt 0 view .LVU980
 2755 033e B5F82212 		ldrh	r1, [r5, #546]	@ unaligned
 2756              	.LBE779:
 2757              	.LBE783:
 2758              	.LBB784:
 2759              	.LBB775:
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2760              		.loc 1 629 5 view .LVU981
 2761 0342 42EA0020 		orr	r0, r2, r0, lsl #8
 2762              	.LVL228:
 631:./Libraries/FatFs/Src/ff.c **** }
 2763              		.loc 1 631 2 is_stmt 1 view .LVU982
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2764              		.loc 1 630 20 is_stmt 0 view .LVU983
 2765 0346 95F81C22 		ldrb	r2, [r5, #540]	@ zero_extendqisi2
 2766              	.LBE775:
 2767              	.LBE784:
 2768              	.LBB785:
 2769              	.LBB780:
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 2770              		.loc 1 629 5 view .LVU984
 2771 034a 43EA0121 		orr	r1, r3, r1, lsl #8
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2772              		.loc 1 630 20 view .LVU985
 2773 034e 95F82032 		ldrb	r3, [r5, #544]	@ zero_extendqisi2
 2774              	.LBE780:
 2775              	.LBE785:
 2776              	.LBB786:
 2777              	.LBB776:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 2778              		.loc 1 630 5 view .LVU986
 2779 0352 42EA0022 		orr	r2, r2, r0, lsl #8
 2780              	.LBE776:
 2781              	.LBE786:
 2782              	.LBB787:
 2783              	.LBB781:
 2784 0356 43EA0123 		orr	r3, r3, r1, lsl #8
 2785              	.LBE781:
 2786              	.LBE787:
3183:./Libraries/FatFs/Src/ff.c **** #endif
 2787              		.loc 1 3183 19 view .LVU987
 2788 035a C5E90432 		strd	r3, r2, [r5, #16]
 2789 035e 0DE7     		b	.L183
 2790              	.L244:
ARM GAS  /tmp/ccaQXGqa.s 			page 121


 2791              		.align	2
 2792              	.L243:
 2793 0360 52526141 		.word	1096897106
 2794 0364 72724161 		.word	1631679090
 2795              		.cfi_endproc
 2796              	.LFE373:
 2798              		.section	.text.put_fat.part.0,"ax",%progbits
 2799              		.align	1
 2800              		.p2align 2,,3
 2801              		.syntax unified
 2802              		.thumb
 2803              		.thumb_func
 2804              		.fpu fpv5-d16
 2806              	put_fat.part.0:
 2807              	.LVL229:
 2808              	.LFB409:
1081:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
 2809              		.loc 1 1081 9 is_stmt 1 view -0
 2810              		.cfi_startproc
 2811              		@ args = 0, pretend = 0, frame = 0
 2812              		@ frame_needed = 0, uses_anonymous_args = 0
1092:./Libraries/FatFs/Src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
 2813              		.loc 1 1092 3 view .LVU989
1081:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
 2814              		.loc 1 1081 9 is_stmt 0 view .LVU990
 2815 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2816              	.LCFI35:
 2817              		.cfi_def_cfa_offset 32
 2818              		.cfi_offset 3, -32
 2819              		.cfi_offset 4, -28
 2820              		.cfi_offset 5, -24
 2821              		.cfi_offset 6, -20
 2822              		.cfi_offset 7, -16
 2823              		.cfi_offset 8, -12
 2824              		.cfi_offset 9, -8
 2825              		.cfi_offset 14, -4
1092:./Libraries/FatFs/Src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
 2826              		.loc 1 1092 13 view .LVU991
 2827 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
1081:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
 2828              		.loc 1 1081 9 view .LVU992
 2829 0006 0446     		mov	r4, r0
 2830 0008 0D46     		mov	r5, r1
 2831 000a 1646     		mov	r6, r2
1092:./Libraries/FatFs/Src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
 2832              		.loc 1 1092 3 view .LVU993
 2833 000c 022B     		cmp	r3, #2
 2834 000e 06D0     		beq	.L246
 2835 0010 032B     		cmp	r3, #3
 2836 0012 52D0     		beq	.L247
 2837 0014 012B     		cmp	r3, #1
 2838 0016 1BD0     		beq	.L277
 2839 0018 0220     		movs	r0, #2
 2840              	.LVL230:
 2841              	.L267:
1129:./Libraries/FatFs/Src/ff.c **** 
 2842              		.loc 1 1129 1 view .LVU994
ARM GAS  /tmp/ccaQXGqa.s 			page 122


 2843 001a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2844              	.LVL231:
 2845              	.L246:
1108:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 2846              		.loc 1 1108 4 is_stmt 1 view .LVU995
1108:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 2847              		.loc 1 1108 10 is_stmt 0 view .LVU996
 2848 001e 416A     		ldr	r1, [r0, #36]
 2849              	.LVL232:
 2850              	.LBB788:
 2851              	.LBB789:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 2852              		.loc 1 920 5 view .LVU997
 2853 0020 036B     		ldr	r3, [r0, #48]
 2854              	.LBE789:
 2855              	.LBE788:
1108:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 2856              		.loc 1 1108 10 view .LVU998
 2857 0022 01EB1521 		add	r1, r1, r5, lsr #8
 2858              	.LVL233:
 2859              	.LBB791:
 2860              	.LBI788:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 2861              		.loc 1 912 9 is_stmt 1 view .LVU999
 2862              	.LBB790:
 917:./Libraries/FatFs/Src/ff.c **** 
 2863              		.loc 1 917 2 view .LVU1000
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 2864              		.loc 1 920 2 view .LVU1001
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 2865              		.loc 1 920 5 is_stmt 0 view .LVU1002
 2866 0026 9942     		cmp	r1, r3
 2867 0028 03D0     		beq	.L259
 2868 002a FFF7FEFF 		bl	move_window.part.0
 2869              	.LVL234:
 932:./Libraries/FatFs/Src/ff.c **** }
 2870              		.loc 1 932 2 is_stmt 1 view .LVU1003
 932:./Libraries/FatFs/Src/ff.c **** }
 2871              		.loc 1 932 2 is_stmt 0 view .LVU1004
 2872              	.LBE790:
 2873              	.LBE791:
1109:./Libraries/FatFs/Src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
 2874              		.loc 1 1109 4 is_stmt 1 view .LVU1005
1109:./Libraries/FatFs/Src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
 2875              		.loc 1 1109 7 is_stmt 0 view .LVU1006
 2876 002e 0028     		cmp	r0, #0
 2877 0030 F3D1     		bne	.L267
 2878              	.LVL235:
 2879              	.L259:
1110:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 2880              		.loc 1 1110 4 is_stmt 1 view .LVU1007
1110:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 2881              		.loc 1 1110 27 is_stmt 0 view .LVU1008
 2882 0032 6D00     		lsls	r5, r5, #1
 2883              	.LVL236:
1110:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 2884              		.loc 1 1110 12 view .LVU1009
ARM GAS  /tmp/ccaQXGqa.s 			page 123


 2885 0034 04F13403 		add	r3, r4, #52
 2886              	.LBB792:
 2887              	.LBB793:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 2888              		.loc 1 656 26 view .LVU1010
 2889 0038 C6F30721 		ubfx	r1, r6, #8, #8
 2890              	.LBE793:
 2891              	.LBE792:
1111:./Libraries/FatFs/Src/ff.c **** 			break;
 2892              		.loc 1 1111 14 view .LVU1011
 2893 003c 0122     		movs	r2, #1
1110:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 2894              		.loc 1 1110 31 view .LVU1012
 2895 003e 05F4FF75 		and	r5, r5, #510
1112:./Libraries/FatFs/Src/ff.c **** 
 2896              		.loc 1 1112 4 view .LVU1013
 2897 0042 0020     		movs	r0, #0
 2898              	.LBB796:
 2899              	.LBB794:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 2900              		.loc 1 656 11 view .LVU1014
 2901 0044 5E55     		strb	r6, [r3, r5]
 2902              	.LBE794:
 2903              	.LBE796:
1110:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 2904              		.loc 1 1110 4 view .LVU1015
 2905 0046 2B44     		add	r3, r3, r5
 2906              	.LVL237:
 2907              	.LBB797:
 2908              	.LBI792:
 654:./Libraries/FatFs/Src/ff.c **** {
 2909              		.loc 1 654 6 is_stmt 1 view .LVU1016
 2910              	.LBB795:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 2911              		.loc 1 656 2 view .LVU1017
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 2912              		.loc 1 656 22 view .LVU1018
 657:./Libraries/FatFs/Src/ff.c **** }
 2913              		.loc 1 657 2 view .LVU1019
 657:./Libraries/FatFs/Src/ff.c **** }
 2914              		.loc 1 657 11 is_stmt 0 view .LVU1020
 2915 0048 5970     		strb	r1, [r3, #1]
 2916              	.LVL238:
 657:./Libraries/FatFs/Src/ff.c **** }
 2917              		.loc 1 657 11 view .LVU1021
 2918              	.LBE795:
 2919              	.LBE797:
1111:./Libraries/FatFs/Src/ff.c **** 			break;
 2920              		.loc 1 1111 4 is_stmt 1 view .LVU1022
1111:./Libraries/FatFs/Src/ff.c **** 			break;
 2921              		.loc 1 1111 14 is_stmt 0 view .LVU1023
 2922 004a E270     		strb	r2, [r4, #3]
1112:./Libraries/FatFs/Src/ff.c **** 
 2923              		.loc 1 1112 4 is_stmt 1 view .LVU1024
1129:./Libraries/FatFs/Src/ff.c **** 
 2924              		.loc 1 1129 1 is_stmt 0 view .LVU1025
 2925 004c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
ARM GAS  /tmp/ccaQXGqa.s 			page 124


 2926              	.LVL239:
 2927              	.L277:
1094:./Libraries/FatFs/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2928              		.loc 1 1094 4 is_stmt 1 view .LVU1026
1094:./Libraries/FatFs/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2929              		.loc 1 1094 21 view .LVU1027
1094:./Libraries/FatFs/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2930              		.loc 1 1094 24 is_stmt 0 view .LVU1028
 2931 0050 01EB5107 		add	r7, r1, r1, lsr #1
 2932              	.LVL240:
1095:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 2933              		.loc 1 1095 4 is_stmt 1 view .LVU1029
1095:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 2934              		.loc 1 1095 10 is_stmt 0 view .LVU1030
 2935 0054 416A     		ldr	r1, [r0, #36]
 2936              	.LVL241:
 2937              	.LBB798:
 2938              	.LBB799:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 2939              		.loc 1 920 5 view .LVU1031
 2940 0056 036B     		ldr	r3, [r0, #48]
 2941              	.LBE799:
 2942              	.LBE798:
1095:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 2943              		.loc 1 1095 10 view .LVU1032
 2944 0058 01EB5721 		add	r1, r1, r7, lsr #9
 2945              	.LVL242:
 2946              	.LBB801:
 2947              	.LBI798:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 2948              		.loc 1 912 9 is_stmt 1 view .LVU1033
 2949              	.LBB800:
 917:./Libraries/FatFs/Src/ff.c **** 
 2950              		.loc 1 917 2 view .LVU1034
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 2951              		.loc 1 920 2 view .LVU1035
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 2952              		.loc 1 920 5 is_stmt 0 view .LVU1036
 2953 005c 9942     		cmp	r1, r3
 2954 005e 03D0     		beq	.L252
 2955 0060 FFF7FEFF 		bl	move_window.part.0
 2956              	.LVL243:
 932:./Libraries/FatFs/Src/ff.c **** }
 2957              		.loc 1 932 2 is_stmt 1 view .LVU1037
 932:./Libraries/FatFs/Src/ff.c **** }
 2958              		.loc 1 932 2 is_stmt 0 view .LVU1038
 2959              	.LBE800:
 2960              	.LBE801:
1096:./Libraries/FatFs/Src/ff.c **** 			p = fs->win + bc++ % SS(fs);
 2961              		.loc 1 1096 4 is_stmt 1 view .LVU1039
1096:./Libraries/FatFs/Src/ff.c **** 			p = fs->win + bc++ % SS(fs);
 2962              		.loc 1 1096 7 is_stmt 0 view .LVU1040
 2963 0064 0028     		cmp	r0, #0
 2964 0066 D8D1     		bne	.L267
 2965              	.LVL244:
 2966              	.L252:
1097:./Libraries/FatFs/Src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
ARM GAS  /tmp/ccaQXGqa.s 			page 125


 2967              		.loc 1 1097 4 is_stmt 1 view .LVU1041
1098:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 2968              		.loc 1 1098 7 is_stmt 0 view .LVU1042
 2969 0068 EB07     		lsls	r3, r5, #31
1097:./Libraries/FatFs/Src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 2970              		.loc 1 1097 23 view .LVU1043
 2971 006a 07F10108 		add	r8, r7, #1
 2972              	.LVL245:
1097:./Libraries/FatFs/Src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 2973              		.loc 1 1097 8 view .LVU1044
 2974 006e 04F13409 		add	r9, r4, #52
1097:./Libraries/FatFs/Src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 2975              		.loc 1 1097 23 view .LVU1045
 2976 0072 C7F30807 		ubfx	r7, r7, #0, #9
 2977              	.LVL246:
1098:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 2978              		.loc 1 1098 4 is_stmt 1 view .LVU1046
1098:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 2979              		.loc 1 1098 7 is_stmt 0 view .LVU1047
 2980 0076 45D5     		bpl	.L278
1098:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 2981              		.loc 1 1098 27 view .LVU1048
 2982 0078 19F80730 		ldrb	r3, [r9, r7]	@ zero_extendqisi2
1099:./Libraries/FatFs/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2983              		.loc 1 1099 14 view .LVU1049
 2984 007c 0122     		movs	r2, #1
1098:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 2985              		.loc 1 1098 27 view .LVU1050
 2986 007e 03F00F03 		and	r3, r3, #15
1098:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 2987              		.loc 1 1098 35 view .LVU1051
 2988 0082 43EA0613 		orr	r3, r3, r6, lsl #4
1098:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 2989              		.loc 1 1098 7 view .LVU1052
 2990 0086 09F80730 		strb	r3, [r9, r7]
1099:./Libraries/FatFs/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2991              		.loc 1 1099 4 is_stmt 1 view .LVU1053
1100:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 2992              		.loc 1 1100 10 is_stmt 0 view .LVU1054
 2993 008a 616A     		ldr	r1, [r4, #36]
 2994              	.LBB802:
 2995              	.LBB803:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 2996              		.loc 1 920 5 view .LVU1055
 2997 008c 236B     		ldr	r3, [r4, #48]
 2998              	.LBE803:
 2999              	.LBE802:
1100:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 3000              		.loc 1 1100 10 view .LVU1056
 3001 008e 01EB5821 		add	r1, r1, r8, lsr #9
1099:./Libraries/FatFs/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 3002              		.loc 1 1099 14 view .LVU1057
 3003 0092 E270     		strb	r2, [r4, #3]
1100:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 3004              		.loc 1 1100 4 is_stmt 1 view .LVU1058
 3005              	.LVL247:
 3006              	.LBB807:
ARM GAS  /tmp/ccaQXGqa.s 			page 126


 3007              	.LBI802:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 3008              		.loc 1 912 9 view .LVU1059
 3009              	.LBB804:
 917:./Libraries/FatFs/Src/ff.c **** 
 3010              		.loc 1 917 2 view .LVU1060
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3011              		.loc 1 920 2 view .LVU1061
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3012              		.loc 1 920 5 is_stmt 0 view .LVU1062
 3013 0094 9942     		cmp	r1, r3
 3014 0096 04D0     		beq	.L274
 3015 0098 2046     		mov	r0, r4
 3016 009a FFF7FEFF 		bl	move_window.part.0
 3017              	.LVL248:
 932:./Libraries/FatFs/Src/ff.c **** }
 3018              		.loc 1 932 2 is_stmt 1 view .LVU1063
 932:./Libraries/FatFs/Src/ff.c **** }
 3019              		.loc 1 932 2 is_stmt 0 view .LVU1064
 3020              	.LBE804:
 3021              	.LBE807:
1101:./Libraries/FatFs/Src/ff.c **** 			p = fs->win + bc % SS(fs);
 3022              		.loc 1 1101 4 is_stmt 1 view .LVU1065
1101:./Libraries/FatFs/Src/ff.c **** 			p = fs->win + bc % SS(fs);
 3023              		.loc 1 1101 7 is_stmt 0 view .LVU1066
 3024 009e 0028     		cmp	r0, #0
 3025 00a0 BBD1     		bne	.L267
 3026              	.LVL249:
 3027              	.L274:
1102:./Libraries/FatFs/Src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 3028              		.loc 1 1102 4 is_stmt 1 view .LVU1067
1102:./Libraries/FatFs/Src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 3029              		.loc 1 1102 21 is_stmt 0 view .LVU1068
 3030 00a2 C8F30808 		ubfx	r8, r8, #0, #9
 3031              	.LVL250:
1103:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 3032              		.loc 1 1103 7 view .LVU1069
 3033 00a6 C6F30712 		ubfx	r2, r6, #4, #8
1102:./Libraries/FatFs/Src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 3034              		.loc 1 1102 6 view .LVU1070
 3035 00aa C844     		add	r8, r8, r9
 3036              	.LVL251:
1103:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 3037              		.loc 1 1103 4 is_stmt 1 view .LVU1071
 3038              	.L257:
1104:./Libraries/FatFs/Src/ff.c **** 			break;
 3039              		.loc 1 1104 14 is_stmt 0 view .LVU1072
 3040 00ac 0123     		movs	r3, #1
1103:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 3041              		.loc 1 1103 7 view .LVU1073
 3042 00ae 88F80020 		strb	r2, [r8]
1104:./Libraries/FatFs/Src/ff.c **** 			break;
 3043              		.loc 1 1104 4 is_stmt 1 view .LVU1074
1105:./Libraries/FatFs/Src/ff.c **** 
 3044              		.loc 1 1105 4 is_stmt 0 view .LVU1075
 3045 00b2 0020     		movs	r0, #0
1104:./Libraries/FatFs/Src/ff.c **** 			break;
ARM GAS  /tmp/ccaQXGqa.s 			page 127


 3046              		.loc 1 1104 14 view .LVU1076
 3047 00b4 E370     		strb	r3, [r4, #3]
1105:./Libraries/FatFs/Src/ff.c **** 
 3048              		.loc 1 1105 4 is_stmt 1 view .LVU1077
1129:./Libraries/FatFs/Src/ff.c **** 
 3049              		.loc 1 1129 1 is_stmt 0 view .LVU1078
 3050 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3051              	.LVL252:
 3052              	.L247:
1118:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 3053              		.loc 1 1118 4 is_stmt 1 view .LVU1079
1118:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 3054              		.loc 1 1118 10 is_stmt 0 view .LVU1080
 3055 00ba 416A     		ldr	r1, [r0, #36]
 3056              	.LVL253:
 3057              	.LBB808:
 3058              	.LBB809:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3059              		.loc 1 920 5 view .LVU1081
 3060 00bc 036B     		ldr	r3, [r0, #48]
 3061              	.LBE809:
 3062              	.LBE808:
1118:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 3063              		.loc 1 1118 10 view .LVU1082
 3064 00be 01EBD511 		add	r1, r1, r5, lsr #7
 3065              	.LVL254:
 3066              	.LBB811:
 3067              	.LBI808:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 3068              		.loc 1 912 9 is_stmt 1 view .LVU1083
 3069              	.LBB810:
 917:./Libraries/FatFs/Src/ff.c **** 
 3070              		.loc 1 917 2 view .LVU1084
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3071              		.loc 1 920 2 view .LVU1085
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3072              		.loc 1 920 5 is_stmt 0 view .LVU1086
 3073 00c2 9942     		cmp	r1, r3
 3074 00c4 03D0     		beq	.L261
 3075 00c6 FFF7FEFF 		bl	move_window.part.0
 3076              	.LVL255:
 932:./Libraries/FatFs/Src/ff.c **** }
 3077              		.loc 1 932 2 is_stmt 1 view .LVU1087
 932:./Libraries/FatFs/Src/ff.c **** }
 3078              		.loc 1 932 2 is_stmt 0 view .LVU1088
 3079              	.LBE810:
 3080              	.LBE811:
1119:./Libraries/FatFs/Src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3081              		.loc 1 1119 4 is_stmt 1 view .LVU1089
1119:./Libraries/FatFs/Src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3082              		.loc 1 1119 7 is_stmt 0 view .LVU1090
 3083 00ca 0028     		cmp	r0, #0
 3084 00cc A5D1     		bne	.L267
 3085              	.LVL256:
 3086              	.L261:
1120:./Libraries/FatFs/Src/ff.c **** 				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
 3087              		.loc 1 1120 4 is_stmt 1 view .LVU1091
ARM GAS  /tmp/ccaQXGqa.s 			page 128


1121:./Libraries/FatFs/Src/ff.c **** 			}
 3088              		.loc 1 1121 5 view .LVU1092
1121:./Libraries/FatFs/Src/ff.c **** 			}
 3089              		.loc 1 1121 57 is_stmt 0 view .LVU1093
 3090 00ce AD00     		lsls	r5, r5, #2
 3091              	.LVL257:
1121:./Libraries/FatFs/Src/ff.c **** 			}
 3092              		.loc 1 1121 42 view .LVU1094
 3093 00d0 04F13401 		add	r1, r4, #52
1121:./Libraries/FatFs/Src/ff.c **** 			}
 3094              		.loc 1 1121 16 view .LVU1095
 3095 00d4 26F07042 		bic	r2, r6, #-268435456
1124:./Libraries/FatFs/Src/ff.c **** 			break;
 3096              		.loc 1 1124 14 view .LVU1096
 3097 00d8 4FF0010C 		mov	ip, #1
1121:./Libraries/FatFs/Src/ff.c **** 			}
 3098              		.loc 1 1121 61 view .LVU1097
 3099 00dc 05F4FE75 		and	r5, r5, #508
1125:./Libraries/FatFs/Src/ff.c **** 		}
 3100              		.loc 1 1125 4 view .LVU1098
 3101 00e0 0020     		movs	r0, #0
1121:./Libraries/FatFs/Src/ff.c **** 			}
 3102              		.loc 1 1121 33 view .LVU1099
 3103 00e2 4F19     		adds	r7, r1, r5
 3104              	.LVL258:
 3105              	.LBB812:
 3106              	.LBI812:
 623:./Libraries/FatFs/Src/ff.c **** {
 3107              		.loc 1 623 7 is_stmt 1 view .LVU1100
 3108              	.LBB813:
 625:./Libraries/FatFs/Src/ff.c **** 
 3109              		.loc 1 625 2 view .LVU1101
 627:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 3110              		.loc 1 627 2 view .LVU1102
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 3111              		.loc 1 628 2 view .LVU1103
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 3112              		.loc 1 629 2 view .LVU1104
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 3113              		.loc 1 628 5 is_stmt 0 view .LVU1105
 3114 00e4 7B88     		ldrh	r3, [r7, #2]	@ unaligned
 3115              	.LVL259:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 3116              		.loc 1 630 2 is_stmt 1 view .LVU1106
 631:./Libraries/FatFs/Src/ff.c **** }
 3117              		.loc 1 631 2 view .LVU1107
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 3118              		.loc 1 630 5 is_stmt 0 view .LVU1108
 3119 00e6 1B04     		lsls	r3, r3, #16
 3120              	.LBE813:
 3121              	.LBE812:
1121:./Libraries/FatFs/Src/ff.c **** 			}
 3122              		.loc 1 1121 71 view .LVU1109
 3123 00e8 03F07043 		and	r3, r3, #-268435456
1121:./Libraries/FatFs/Src/ff.c **** 			}
 3124              		.loc 1 1121 9 view .LVU1110
 3125 00ec 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccaQXGqa.s 			page 129


 3126              	.LVL260:
1123:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 3127              		.loc 1 1123 4 is_stmt 1 view .LVU1111
 3128              	.LBB814:
 3129              	.LBI814:
 661:./Libraries/FatFs/Src/ff.c **** {
 3130              		.loc 1 661 6 view .LVU1112
 3131              	.LBB815:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 3132              		.loc 1 663 2 view .LVU1113
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 3133              		.loc 1 663 11 is_stmt 0 view .LVU1114
 3134 00ee 4B55     		strb	r3, [r1, r5]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 3135              		.loc 1 663 22 is_stmt 1 view .LVU1115
 3136              	.LVL261:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 3137              		.loc 1 664 2 view .LVU1116
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 3138              		.loc 1 664 26 is_stmt 0 view .LVU1117
 3139 00f0 1A0C     		lsrs	r2, r3, #16
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 3140              		.loc 1 663 26 view .LVU1118
 3141 00f2 190A     		lsrs	r1, r3, #8
 3142              	.LVL262:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 3143              		.loc 1 665 26 view .LVU1119
 3144 00f4 1B0E     		lsrs	r3, r3, #24
 3145              	.LVL263:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 3146              		.loc 1 665 11 view .LVU1120
 3147 00f6 BA70     		strb	r2, [r7, #2]
 3148              	.LVL264:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 3149              		.loc 1 664 11 view .LVU1121
 3150 00f8 7970     		strb	r1, [r7, #1]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 3151              		.loc 1 664 22 is_stmt 1 view .LVU1122
 3152              	.LVL265:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 3153              		.loc 1 665 2 view .LVU1123
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 3154              		.loc 1 665 22 view .LVU1124
 666:./Libraries/FatFs/Src/ff.c **** }
 3155              		.loc 1 666 2 view .LVU1125
 666:./Libraries/FatFs/Src/ff.c **** }
 3156              		.loc 1 666 11 is_stmt 0 view .LVU1126
 3157 00fa FB70     		strb	r3, [r7, #3]
 3158              	.LVL266:
 666:./Libraries/FatFs/Src/ff.c **** }
 3159              		.loc 1 666 11 view .LVU1127
 3160              	.LBE815:
 3161              	.LBE814:
1124:./Libraries/FatFs/Src/ff.c **** 			break;
 3162              		.loc 1 1124 4 is_stmt 1 view .LVU1128
1124:./Libraries/FatFs/Src/ff.c **** 			break;
 3163              		.loc 1 1124 14 is_stmt 0 view .LVU1129
ARM GAS  /tmp/ccaQXGqa.s 			page 130


 3164 00fc 84F803C0 		strb	ip, [r4, #3]
1125:./Libraries/FatFs/Src/ff.c **** 		}
 3165              		.loc 1 1125 4 is_stmt 1 view .LVU1130
1129:./Libraries/FatFs/Src/ff.c **** 
 3166              		.loc 1 1129 1 is_stmt 0 view .LVU1131
 3167 0100 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3168              	.LVL267:
 3169              	.L278:
1098:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 3170              		.loc 1 1098 7 view .LVU1132
 3171 0104 09F80760 		strb	r6, [r9, r7]
1099:./Libraries/FatFs/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 3172              		.loc 1 1099 4 is_stmt 1 view .LVU1133
1099:./Libraries/FatFs/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 3173              		.loc 1 1099 14 is_stmt 0 view .LVU1134
 3174 0108 0122     		movs	r2, #1
1100:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 3175              		.loc 1 1100 10 view .LVU1135
 3176 010a 616A     		ldr	r1, [r4, #36]
 3177              	.LBB816:
 3178              	.LBB805:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3179              		.loc 1 920 5 view .LVU1136
 3180 010c 236B     		ldr	r3, [r4, #48]
 3181              	.LBE805:
 3182              	.LBE816:
1100:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 3183              		.loc 1 1100 10 view .LVU1137
 3184 010e 01EB5821 		add	r1, r1, r8, lsr #9
1099:./Libraries/FatFs/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 3185              		.loc 1 1099 14 view .LVU1138
 3186 0112 E270     		strb	r2, [r4, #3]
1100:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 3187              		.loc 1 1100 4 is_stmt 1 view .LVU1139
 3188              	.LVL268:
 3189              	.LBB817:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 3190              		.loc 1 912 9 view .LVU1140
 3191              	.LBB806:
 917:./Libraries/FatFs/Src/ff.c **** 
 3192              		.loc 1 917 2 view .LVU1141
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3193              		.loc 1 920 2 view .LVU1142
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3194              		.loc 1 920 5 is_stmt 0 view .LVU1143
 3195 0114 9942     		cmp	r1, r3
 3196 0116 05D0     		beq	.L275
 3197 0118 2046     		mov	r0, r4
 3198 011a FFF7FEFF 		bl	move_window.part.0
 3199              	.LVL269:
 932:./Libraries/FatFs/Src/ff.c **** }
 3200              		.loc 1 932 2 is_stmt 1 view .LVU1144
 932:./Libraries/FatFs/Src/ff.c **** }
 3201              		.loc 1 932 2 is_stmt 0 view .LVU1145
 3202              	.LBE806:
 3203              	.LBE817:
1101:./Libraries/FatFs/Src/ff.c **** 			p = fs->win + bc % SS(fs);
ARM GAS  /tmp/ccaQXGqa.s 			page 131


 3204              		.loc 1 1101 4 is_stmt 1 view .LVU1146
1101:./Libraries/FatFs/Src/ff.c **** 			p = fs->win + bc % SS(fs);
 3205              		.loc 1 1101 7 is_stmt 0 view .LVU1147
 3206 011e 0028     		cmp	r0, #0
 3207 0120 7FF47BAF 		bne	.L267
 3208              	.LVL270:
 3209              	.L275:
1102:./Libraries/FatFs/Src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 3210              		.loc 1 1102 4 is_stmt 1 view .LVU1148
1102:./Libraries/FatFs/Src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 3211              		.loc 1 1102 21 is_stmt 0 view .LVU1149
 3212 0124 C8F30808 		ubfx	r8, r8, #0, #9
 3213              	.LVL271:
1103:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 3214              		.loc 1 1103 74 view .LVU1150
 3215 0128 C6F30322 		ubfx	r2, r6, #8, #4
1102:./Libraries/FatFs/Src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 3216              		.loc 1 1102 6 view .LVU1151
 3217 012c C844     		add	r8, r8, r9
 3218              	.LVL272:
1103:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 3219              		.loc 1 1103 4 is_stmt 1 view .LVU1152
1103:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 3220              		.loc 1 1103 46 is_stmt 0 view .LVU1153
 3221 012e 98F80010 		ldrb	r1, [r8]	@ zero_extendqisi2
 3222 0132 21F00F06 		bic	r6, r1, #15
 3223              	.LVL273:
1103:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
 3224              		.loc 1 1103 7 view .LVU1154
 3225 0136 3243     		orrs	r2, r2, r6
 3226 0138 B8E7     		b	.L257
 3227              		.cfi_endproc
 3228              	.LFE409:
 3230 013a 00BF     		.section	.text.get_fat.isra.0,"ax",%progbits
 3231              		.align	1
 3232              		.p2align 2,,3
 3233              		.syntax unified
 3234              		.thumb
 3235              		.thumb_func
 3236              		.fpu fpv5-d16
 3238              	get_fat.isra.0:
 3239              	.LVL274:
 3240              	.LFB410:
1001:./Libraries/FatFs/Src/ff.c **** 	_FDID* obj,	/* Corresponding object */
 3241              		.loc 1 1001 7 is_stmt 1 view -0
 3242              		.cfi_startproc
 3243              		@ args = 0, pretend = 0, frame = 0
 3244              		@ frame_needed = 0, uses_anonymous_args = 0
1006:./Libraries/FatFs/Src/ff.c **** 	DWORD val;
 3245              		.loc 1 1006 2 view .LVU1156
1007:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = obj->fs;
 3246              		.loc 1 1007 2 view .LVU1157
1008:./Libraries/FatFs/Src/ff.c **** 
 3247              		.loc 1 1008 2 view .LVU1158
1011:./Libraries/FatFs/Src/ff.c **** 		val = 1;	/* Internal error */
 3248              		.loc 1 1011 2 view .LVU1159
1011:./Libraries/FatFs/Src/ff.c **** 		val = 1;	/* Internal error */
ARM GAS  /tmp/ccaQXGqa.s 			page 132


 3249              		.loc 1 1011 5 is_stmt 0 view .LVU1160
 3250 0000 0129     		cmp	r1, #1
 3251 0002 0ED9     		bls	.L294
1001:./Libraries/FatFs/Src/ff.c **** 	_FDID* obj,	/* Corresponding object */
 3252              		.loc 1 1001 7 view .LVU1161
 3253 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3254              	.LCFI36:
 3255              		.cfi_def_cfa_offset 24
 3256              		.cfi_offset 3, -24
 3257              		.cfi_offset 4, -20
 3258              		.cfi_offset 5, -16
 3259              		.cfi_offset 6, -12
 3260              		.cfi_offset 7, -8
 3261              		.cfi_offset 14, -4
1011:./Libraries/FatFs/Src/ff.c **** 		val = 1;	/* Internal error */
 3262              		.loc 1 1011 15 view .LVU1162
 3263 0006 8369     		ldr	r3, [r0, #24]
 3264 0008 0C46     		mov	r4, r1
 3265 000a 0546     		mov	r5, r0
 3266 000c 9942     		cmp	r1, r3
 3267 000e 06D2     		bcs	.L296
1015:./Libraries/FatFs/Src/ff.c **** 
 3268              		.loc 1 1015 3 is_stmt 1 view .LVU1163
 3269              	.LVL275:
1017:./Libraries/FatFs/Src/ff.c **** 		case FS_FAT12 :
 3270              		.loc 1 1017 3 view .LVU1164
1017:./Libraries/FatFs/Src/ff.c **** 		case FS_FAT12 :
 3271              		.loc 1 1017 13 is_stmt 0 view .LVU1165
 3272 0010 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
1017:./Libraries/FatFs/Src/ff.c **** 		case FS_FAT12 :
 3273              		.loc 1 1017 3 view .LVU1166
 3274 0012 022B     		cmp	r3, #2
 3275 0014 46D0     		beq	.L281
 3276 0016 032B     		cmp	r3, #3
 3277 0018 2CD0     		beq	.L282
 3278 001a 012B     		cmp	r3, #1
 3279 001c 03D0     		beq	.L302
 3280              	.LVL276:
 3281              	.L296:
1017:./Libraries/FatFs/Src/ff.c **** 		case FS_FAT12 :
 3282              		.loc 1 1017 3 view .LVU1167
 3283 001e 0120     		movs	r0, #1
 3284              	.LVL277:
1069:./Libraries/FatFs/Src/ff.c **** }
 3285              		.loc 1 1069 2 is_stmt 1 view .LVU1168
1070:./Libraries/FatFs/Src/ff.c **** 
 3286              		.loc 1 1070 1 is_stmt 0 view .LVU1169
 3287 0020 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3288              	.LVL278:
 3289              	.L294:
 3290              	.LCFI37:
 3291              		.cfi_def_cfa_offset 0
 3292              		.cfi_restore 3
 3293              		.cfi_restore 4
 3294              		.cfi_restore 5
 3295              		.cfi_restore 6
 3296              		.cfi_restore 7
ARM GAS  /tmp/ccaQXGqa.s 			page 133


 3297              		.cfi_restore 14
1012:./Libraries/FatFs/Src/ff.c **** 
 3298              		.loc 1 1012 7 view .LVU1170
 3299 0022 0120     		movs	r0, #1
 3300              	.LVL279:
1070:./Libraries/FatFs/Src/ff.c **** 
 3301              		.loc 1 1070 1 view .LVU1171
 3302 0024 7047     		bx	lr
 3303              	.LVL280:
 3304              	.L302:
 3305              	.LCFI38:
 3306              		.cfi_def_cfa_offset 24
 3307              		.cfi_offset 3, -24
 3308              		.cfi_offset 4, -20
 3309              		.cfi_offset 5, -16
 3310              		.cfi_offset 6, -12
 3311              		.cfi_offset 7, -8
 3312              		.cfi_offset 14, -4
1019:./Libraries/FatFs/Src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 3313              		.loc 1 1019 4 is_stmt 1 view .LVU1172
1019:./Libraries/FatFs/Src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 3314              		.loc 1 1019 21 view .LVU1173
1019:./Libraries/FatFs/Src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 3315              		.loc 1 1019 24 is_stmt 0 view .LVU1174
 3316 0026 01EB5107 		add	r7, r1, r1, lsr #1
 3317              	.LVL281:
1020:./Libraries/FatFs/Src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
 3318              		.loc 1 1020 4 is_stmt 1 view .LVU1175
1020:./Libraries/FatFs/Src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
 3319              		.loc 1 1020 26 is_stmt 0 view .LVU1176
 3320 002a 436A     		ldr	r3, [r0, #36]
 3321              	.LBB818:
 3322              	.LBB819:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3323              		.loc 1 920 18 view .LVU1177
 3324 002c 026B     		ldr	r2, [r0, #48]
 3325              	.LBE819:
 3326              	.LBE818:
1020:./Libraries/FatFs/Src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
 3327              		.loc 1 1020 8 view .LVU1178
 3328 002e 03EB5721 		add	r1, r3, r7, lsr #9
 3329              	.LVL282:
 3330              	.LBB821:
 3331              	.LBI818:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 3332              		.loc 1 912 9 is_stmt 1 view .LVU1179
 3333              	.LBB820:
 917:./Libraries/FatFs/Src/ff.c **** 
 3334              		.loc 1 917 2 view .LVU1180
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3335              		.loc 1 920 2 view .LVU1181
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3336              		.loc 1 920 5 is_stmt 0 view .LVU1182
 3337 0032 9142     		cmp	r1, r2
 3338 0034 05D0     		beq	.L283
 3339 0036 FFF7FEFF 		bl	move_window.part.0
 3340              	.LVL283:
ARM GAS  /tmp/ccaQXGqa.s 			page 134


 932:./Libraries/FatFs/Src/ff.c **** }
 3341              		.loc 1 932 2 is_stmt 1 view .LVU1183
 932:./Libraries/FatFs/Src/ff.c **** }
 3342              		.loc 1 932 2 is_stmt 0 view .LVU1184
 3343              	.LBE820:
 3344              	.LBE821:
1020:./Libraries/FatFs/Src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
 3345              		.loc 1 1020 7 view .LVU1185
 3346 003a 0028     		cmp	r0, #0
 3347 003c 3BD1     		bne	.L288
 3348 003e 6B6A     		ldr	r3, [r5, #36]
 3349 0040 2A6B     		ldr	r2, [r5, #48]
 3350              	.L283:
1021:./Libraries/FatFs/Src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 3351              		.loc 1 1021 4 is_stmt 1 view .LVU1186
1021:./Libraries/FatFs/Src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 3352              		.loc 1 1021 22 is_stmt 0 view .LVU1187
 3353 0042 C7F30800 		ubfx	r0, r7, #0, #9
1021:./Libraries/FatFs/Src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 3354              		.loc 1 1021 19 view .LVU1188
 3355 0046 0137     		adds	r7, r7, #1
 3356              	.LVL284:
1022:./Libraries/FatFs/Src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
 3357              		.loc 1 1022 8 view .LVU1189
 3358 0048 03EB5721 		add	r1, r3, r7, lsr #9
1021:./Libraries/FatFs/Src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 3359              		.loc 1 1021 16 view .LVU1190
 3360 004c 2844     		add	r0, r0, r5
 3361              	.LBB822:
 3362              	.LBB823:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3363              		.loc 1 920 5 view .LVU1191
 3364 004e 9142     		cmp	r1, r2
 3365              	.LBE823:
 3366              	.LBE822:
1021:./Libraries/FatFs/Src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 3367              		.loc 1 1021 7 view .LVU1192
 3368 0050 90F83460 		ldrb	r6, [r0, #52]	@ zero_extendqisi2
 3369              	.LVL285:
1022:./Libraries/FatFs/Src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
 3370              		.loc 1 1022 4 is_stmt 1 view .LVU1193
 3371              	.LBB825:
 3372              	.LBI822:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 3373              		.loc 1 912 9 view .LVU1194
 3374              	.LBB824:
 917:./Libraries/FatFs/Src/ff.c **** 
 3375              		.loc 1 917 2 view .LVU1195
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3376              		.loc 1 920 2 view .LVU1196
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3377              		.loc 1 920 5 is_stmt 0 view .LVU1197
 3378 0054 03D0     		beq	.L289
 3379 0056 2846     		mov	r0, r5
 3380 0058 FFF7FEFF 		bl	move_window.part.0
 3381              	.LVL286:
 932:./Libraries/FatFs/Src/ff.c **** }
ARM GAS  /tmp/ccaQXGqa.s 			page 135


 3382              		.loc 1 932 2 is_stmt 1 view .LVU1198
 932:./Libraries/FatFs/Src/ff.c **** }
 3383              		.loc 1 932 2 is_stmt 0 view .LVU1199
 3384              	.LBE824:
 3385              	.LBE825:
1022:./Libraries/FatFs/Src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
 3386              		.loc 1 1022 7 view .LVU1200
 3387 005c 58BB     		cbnz	r0, .L288
 3388              	.L289:
1023:./Libraries/FatFs/Src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 3389              		.loc 1 1023 4 is_stmt 1 view .LVU1201
1023:./Libraries/FatFs/Src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 3390              		.loc 1 1023 21 is_stmt 0 view .LVU1202
 3391 005e C7F30807 		ubfx	r7, r7, #0, #9
 3392              	.LVL287:
1024:./Libraries/FatFs/Src/ff.c **** 			break;
 3393              		.loc 1 1024 33 view .LVU1203
 3394 0062 E307     		lsls	r3, r4, #31
1023:./Libraries/FatFs/Src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 3395              		.loc 1 1023 17 view .LVU1204
 3396 0064 3D44     		add	r5, r5, r7
 3397              	.LVL288:
1023:./Libraries/FatFs/Src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 3398              		.loc 1 1023 17 view .LVU1205
 3399 0066 95F83400 		ldrb	r0, [r5, #52]	@ zero_extendqisi2
1023:./Libraries/FatFs/Src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 3400              		.loc 1 1023 7 view .LVU1206
 3401 006a 46EA0020 		orr	r0, r6, r0, lsl #8
 3402              	.LVL289:
1024:./Libraries/FatFs/Src/ff.c **** 			break;
 3403              		.loc 1 1024 4 is_stmt 1 view .LVU1207
1024:./Libraries/FatFs/Src/ff.c **** 			break;
 3404              		.loc 1 1024 33 is_stmt 0 view .LVU1208
 3405 006e 2FD5     		bpl	.L303
 3406 0070 0009     		lsrs	r0, r0, #4
 3407              	.LVL290:
1070:./Libraries/FatFs/Src/ff.c **** 
 3408              		.loc 1 1070 1 view .LVU1209
 3409 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3410              	.LVL291:
 3411              	.L282:
1033:./Libraries/FatFs/Src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 3412              		.loc 1 1033 4 is_stmt 1 view .LVU1210
1033:./Libraries/FatFs/Src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 3413              		.loc 1 1033 8 is_stmt 0 view .LVU1211
 3414 0074 416A     		ldr	r1, [r0, #36]
 3415              	.LVL292:
 3416              	.LBB826:
 3417              	.LBB827:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3418              		.loc 1 920 5 view .LVU1212
 3419 0076 036B     		ldr	r3, [r0, #48]
 3420              	.LBE827:
 3421              	.LBE826:
1033:./Libraries/FatFs/Src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 3422              		.loc 1 1033 8 view .LVU1213
 3423 0078 01EBD411 		add	r1, r1, r4, lsr #7
ARM GAS  /tmp/ccaQXGqa.s 			page 136


 3424              	.LVL293:
 3425              	.LBB829:
 3426              	.LBI826:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 3427              		.loc 1 912 9 is_stmt 1 view .LVU1214
 3428              	.LBB828:
 917:./Libraries/FatFs/Src/ff.c **** 
 3429              		.loc 1 917 2 view .LVU1215
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3430              		.loc 1 920 2 view .LVU1216
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3431              		.loc 1 920 5 is_stmt 0 view .LVU1217
 3432 007c 9942     		cmp	r1, r3
 3433 007e 02D0     		beq	.L293
 3434 0080 FFF7FEFF 		bl	move_window.part.0
 3435              	.LVL294:
 932:./Libraries/FatFs/Src/ff.c **** }
 3436              		.loc 1 932 2 is_stmt 1 view .LVU1218
 932:./Libraries/FatFs/Src/ff.c **** }
 3437              		.loc 1 932 2 is_stmt 0 view .LVU1219
 3438              	.LBE828:
 3439              	.LBE829:
1033:./Libraries/FatFs/Src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 3440              		.loc 1 1033 7 view .LVU1220
 3441 0084 B8B9     		cbnz	r0, .L288
 3442              	.L293:
1034:./Libraries/FatFs/Src/ff.c **** 			break;
 3443              		.loc 1 1034 4 is_stmt 1 view .LVU1221
1034:./Libraries/FatFs/Src/ff.c **** 			break;
 3444              		.loc 1 1034 34 is_stmt 0 view .LVU1222
 3445 0086 A400     		lsls	r4, r4, #2
 3446              	.LVL295:
1034:./Libraries/FatFs/Src/ff.c **** 			break;
 3447              		.loc 1 1034 19 view .LVU1223
 3448 0088 3435     		adds	r5, r5, #52
 3449              	.LVL296:
1034:./Libraries/FatFs/Src/ff.c **** 			break;
 3450              		.loc 1 1034 38 view .LVU1224
 3451 008a 04F4FE74 		and	r4, r4, #508
1034:./Libraries/FatFs/Src/ff.c **** 			break;
 3452              		.loc 1 1034 10 view .LVU1225
 3453 008e 2A19     		adds	r2, r5, r4
 3454              	.LVL297:
 3455              	.LBB830:
 3456              	.LBI830:
 623:./Libraries/FatFs/Src/ff.c **** {
 3457              		.loc 1 623 7 is_stmt 1 view .LVU1226
 3458              	.LBB831:
 625:./Libraries/FatFs/Src/ff.c **** 
 3459              		.loc 1 625 2 view .LVU1227
 627:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 3460              		.loc 1 627 2 view .LVU1228
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 3461              		.loc 1 628 2 view .LVU1229
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 3462              		.loc 1 629 2 view .LVU1230
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
ARM GAS  /tmp/ccaQXGqa.s 			page 137


 3463              		.loc 1 630 20 is_stmt 0 view .LVU1231
 3464 0090 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 3465              		.loc 1 628 5 view .LVU1232
 3466 0092 5188     		ldrh	r1, [r2, #2]	@ unaligned
 3467              	.LVL298:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 3468              		.loc 1 630 2 is_stmt 1 view .LVU1233
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 3469              		.loc 1 629 20 is_stmt 0 view .LVU1234
 3470 0094 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 3471              		.loc 1 629 5 view .LVU1235
 3472 0096 43EA0123 		orr	r3, r3, r1, lsl #8
 3473              	.LVL299:
 631:./Libraries/FatFs/Src/ff.c **** }
 3474              		.loc 1 631 2 is_stmt 1 view .LVU1236
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 3475              		.loc 1 630 5 is_stmt 0 view .LVU1237
 3476 009a 40EA0320 		orr	r0, r0, r3, lsl #8
 3477              	.LBE831:
 3478              	.LBE830:
1034:./Libraries/FatFs/Src/ff.c **** 			break;
 3479              		.loc 1 1034 8 view .LVU1238
 3480 009e 20F07040 		bic	r0, r0, #-268435456
 3481              	.LVL300:
1035:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 3482              		.loc 1 1035 4 is_stmt 1 view .LVU1239
1070:./Libraries/FatFs/Src/ff.c **** 
 3483              		.loc 1 1070 1 is_stmt 0 view .LVU1240
 3484 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3485              	.LVL301:
 3486              	.L281:
1028:./Libraries/FatFs/Src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
 3487              		.loc 1 1028 4 is_stmt 1 view .LVU1241
1028:./Libraries/FatFs/Src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
 3488              		.loc 1 1028 8 is_stmt 0 view .LVU1242
 3489 00a4 416A     		ldr	r1, [r0, #36]
 3490              	.LVL302:
 3491              	.LBB832:
 3492              	.LBB833:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3493              		.loc 1 920 5 view .LVU1243
 3494 00a6 036B     		ldr	r3, [r0, #48]
 3495              	.LBE833:
 3496              	.LBE832:
1028:./Libraries/FatFs/Src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
 3497              		.loc 1 1028 8 view .LVU1244
 3498 00a8 01EB1421 		add	r1, r1, r4, lsr #8
 3499              	.LVL303:
 3500              	.LBB835:
 3501              	.LBI832:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 3502              		.loc 1 912 9 is_stmt 1 view .LVU1245
 3503              	.LBB834:
 917:./Libraries/FatFs/Src/ff.c **** 
 3504              		.loc 1 917 2 view .LVU1246
ARM GAS  /tmp/ccaQXGqa.s 			page 138


 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3505              		.loc 1 920 2 view .LVU1247
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 3506              		.loc 1 920 5 is_stmt 0 view .LVU1248
 3507 00ac 9942     		cmp	r1, r3
 3508 00ae 05D0     		beq	.L291
 3509 00b0 FFF7FEFF 		bl	move_window.part.0
 3510              	.LVL304:
 932:./Libraries/FatFs/Src/ff.c **** }
 3511              		.loc 1 932 2 is_stmt 1 view .LVU1249
 932:./Libraries/FatFs/Src/ff.c **** }
 3512              		.loc 1 932 2 is_stmt 0 view .LVU1250
 3513              	.LBE834:
 3514              	.LBE835:
1028:./Libraries/FatFs/Src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
 3515              		.loc 1 1028 7 view .LVU1251
 3516 00b4 10B1     		cbz	r0, .L291
 3517              	.L288:
1015:./Libraries/FatFs/Src/ff.c **** 
 3518              		.loc 1 1015 7 view .LVU1252
 3519 00b6 4FF0FF30 		mov	r0, #-1
1070:./Libraries/FatFs/Src/ff.c **** 
 3520              		.loc 1 1070 1 view .LVU1253
 3521 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3522              	.LVL305:
 3523              	.L291:
1029:./Libraries/FatFs/Src/ff.c **** 			break;
 3524              		.loc 1 1029 4 is_stmt 1 view .LVU1254
1029:./Libraries/FatFs/Src/ff.c **** 			break;
 3525              		.loc 1 1029 33 is_stmt 0 view .LVU1255
 3526 00bc 6400     		lsls	r4, r4, #1
 3527              	.LVL306:
1029:./Libraries/FatFs/Src/ff.c **** 			break;
 3528              		.loc 1 1029 18 view .LVU1256
 3529 00be 3435     		adds	r5, r5, #52
 3530              	.LVL307:
1029:./Libraries/FatFs/Src/ff.c **** 			break;
 3531              		.loc 1 1029 37 view .LVU1257
 3532 00c0 04F4FF74 		and	r4, r4, #510
1029:./Libraries/FatFs/Src/ff.c **** 			break;
 3533              		.loc 1 1029 10 view .LVU1258
 3534 00c4 2B19     		adds	r3, r5, r4
 3535              	.LVL308:
 3536              	.LBB836:
 3537              	.LBI836:
 613:./Libraries/FatFs/Src/ff.c **** {
 3538              		.loc 1 613 6 is_stmt 1 view .LVU1259
 3539              	.LBB837:
 615:./Libraries/FatFs/Src/ff.c **** 
 3540              		.loc 1 615 2 view .LVU1260
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 3541              		.loc 1 617 2 view .LVU1261
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 3542              		.loc 1 618 2 view .LVU1262
 619:./Libraries/FatFs/Src/ff.c **** }
 3543              		.loc 1 619 2 view .LVU1263
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
ARM GAS  /tmp/ccaQXGqa.s 			page 139


 3544              		.loc 1 618 20 is_stmt 0 view .LVU1264
 3545 00c6 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 3546              		.loc 1 618 10 view .LVU1265
 3547 00c8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3548              	.LBE837:
 3549              	.LBE836:
1029:./Libraries/FatFs/Src/ff.c **** 			break;
 3550              		.loc 1 1029 8 view .LVU1266
 3551 00ca 40EA0320 		orr	r0, r0, r3, lsl #8
 3552              	.LVL309:
1030:./Libraries/FatFs/Src/ff.c **** 
 3553              		.loc 1 1030 4 is_stmt 1 view .LVU1267
1070:./Libraries/FatFs/Src/ff.c **** 
 3554              		.loc 1 1070 1 is_stmt 0 view .LVU1268
 3555 00ce F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3556              	.LVL310:
 3557              	.L303:
1024:./Libraries/FatFs/Src/ff.c **** 			break;
 3558              		.loc 1 1024 33 view .LVU1269
 3559 00d0 C0F30B00 		ubfx	r0, r0, #0, #12
 3560              	.LVL311:
1070:./Libraries/FatFs/Src/ff.c **** 
 3561              		.loc 1 1070 1 view .LVU1270
 3562 00d4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
1070:./Libraries/FatFs/Src/ff.c **** 
 3563              		.loc 1 1070 1 view .LVU1271
 3564              		.cfi_endproc
 3565              	.LFE410:
 3567 00d6 00BF     		.section	.text.create_chain,"ax",%progbits
 3568              		.align	1
 3569              		.p2align 2,,3
 3570              		.syntax unified
 3571              		.thumb
 3572              		.thumb_func
 3573              		.fpu fpv5-d16
 3575              	create_chain:
 3576              	.LVL312:
 3577              	.LFB357:
1355:./Libraries/FatFs/Src/ff.c **** 	DWORD cs, ncl, scl;
 3578              		.loc 1 1355 1 is_stmt 1 view -0
 3579              		.cfi_startproc
 3580              		@ args = 0, pretend = 0, frame = 0
 3581              		@ frame_needed = 0, uses_anonymous_args = 0
1356:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 3582              		.loc 1 1356 2 view .LVU1273
1357:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = obj->fs;
 3583              		.loc 1 1357 2 view .LVU1274
1358:./Libraries/FatFs/Src/ff.c **** 
 3584              		.loc 1 1358 2 view .LVU1275
1355:./Libraries/FatFs/Src/ff.c **** 	DWORD cs, ncl, scl;
 3585              		.loc 1 1355 1 is_stmt 0 view .LVU1276
 3586 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3587              	.LCFI39:
 3588              		.cfi_def_cfa_offset 24
 3589              		.cfi_offset 4, -24
 3590              		.cfi_offset 5, -20
ARM GAS  /tmp/ccaQXGqa.s 			page 140


 3591              		.cfi_offset 6, -16
 3592              		.cfi_offset 7, -12
 3593              		.cfi_offset 8, -8
 3594              		.cfi_offset 14, -4
1355:./Libraries/FatFs/Src/ff.c **** 	DWORD cs, ncl, scl;
 3595              		.loc 1 1355 1 view .LVU1277
 3596 0004 0546     		mov	r5, r0
1361:./Libraries/FatFs/Src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
 3597              		.loc 1 1361 5 view .LVU1278
 3598 0006 0F46     		mov	r7, r1
1358:./Libraries/FatFs/Src/ff.c **** 
 3599              		.loc 1 1358 9 view .LVU1279
 3600 0008 0668     		ldr	r6, [r0]
 3601              	.LVL313:
1361:./Libraries/FatFs/Src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
 3602              		.loc 1 1361 2 is_stmt 1 view .LVU1280
1361:./Libraries/FatFs/Src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
 3603              		.loc 1 1361 5 is_stmt 0 view .LVU1281
 3604 000a 0029     		cmp	r1, #0
 3605 000c 51D1     		bne	.L305
1362:./Libraries/FatFs/Src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 3606              		.loc 1 1362 3 is_stmt 1 view .LVU1282
1362:./Libraries/FatFs/Src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 3607              		.loc 1 1362 7 is_stmt 0 view .LVU1283
 3608 000e D6F81080 		ldr	r8, [r6, #16]
 3609              	.LVL314:
1363:./Libraries/FatFs/Src/ff.c **** 	}
 3610              		.loc 1 1363 3 is_stmt 1 view .LVU1284
 3611 0012 B369     		ldr	r3, [r6, #24]
1363:./Libraries/FatFs/Src/ff.c **** 	}
 3612              		.loc 1 1363 6 is_stmt 0 view .LVU1285
 3613 0014 B8F1000F 		cmp	r8, #0
 3614 0018 3ED1     		bne	.L306
1363:./Libraries/FatFs/Src/ff.c **** 	}
 3615              		.loc 1 1363 44 view .LVU1286
 3616 001a 4FF00108 		mov	r8, #1
 3617              	.LVL315:
 3618              	.L307:
1400:./Libraries/FatFs/Src/ff.c **** 		for (;;) {
 3619              		.loc 1 1400 3 is_stmt 1 view .LVU1287
1400:./Libraries/FatFs/Src/ff.c **** 		for (;;) {
 3620              		.loc 1 1400 3 is_stmt 0 view .LVU1288
 3621 001e 4446     		mov	r4, r8
 3622 0020 06E0     		b	.L314
 3623              	.LVL316:
 3624              	.L330:
1409:./Libraries/FatFs/Src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
 3625              		.loc 1 1409 7 view .LVU1289
 3626 0022 0128     		cmp	r0, #1
 3627 0024 40D0     		beq	.L304
1409:./Libraries/FatFs/Src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
 3628              		.loc 1 1409 7 view .LVU1290
 3629 0026 431C     		adds	r3, r0, #1
 3630 0028 3ED0     		beq	.L304
1410:./Libraries/FatFs/Src/ff.c **** 		}
 3631              		.loc 1 1410 7 view .LVU1291
 3632 002a 4445     		cmp	r4, r8
ARM GAS  /tmp/ccaQXGqa.s 			page 141


 3633 002c 3ED0     		beq	.L313
1410:./Libraries/FatFs/Src/ff.c **** 		}
 3634              		.loc 1 1410 7 view .LVU1292
 3635 002e B369     		ldr	r3, [r6, #24]
 3636              	.LVL317:
 3637              	.L314:
1401:./Libraries/FatFs/Src/ff.c **** 			ncl++;							/* Next cluster */
 3638              		.loc 1 1401 3 is_stmt 1 view .LVU1293
1402:./Libraries/FatFs/Src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 3639              		.loc 1 1402 4 view .LVU1294
1404:./Libraries/FatFs/Src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
 3640              		.loc 1 1404 5 view .LVU1295
1405:./Libraries/FatFs/Src/ff.c **** 			}
 3641              		.loc 1 1405 5 view .LVU1296
1402:./Libraries/FatFs/Src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 3642              		.loc 1 1402 7 is_stmt 0 view .LVU1297
 3643 0030 0134     		adds	r4, r4, #1
 3644              	.LVL318:
1403:./Libraries/FatFs/Src/ff.c **** 				ncl = 2;
 3645              		.loc 1 1403 4 is_stmt 1 view .LVU1298
1403:./Libraries/FatFs/Src/ff.c **** 				ncl = 2;
 3646              		.loc 1 1403 7 is_stmt 0 view .LVU1299
 3647 0032 9C42     		cmp	r4, r3
 3648 0034 04D3     		bcc	.L311
1405:./Libraries/FatFs/Src/ff.c **** 			}
 3649              		.loc 1 1405 8 view .LVU1300
 3650 0036 B8F1010F 		cmp	r8, #1
1404:./Libraries/FatFs/Src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
 3651              		.loc 1 1404 9 view .LVU1301
 3652 003a 4FF00204 		mov	r4, #2
 3653              	.LVL319:
1405:./Libraries/FatFs/Src/ff.c **** 			}
 3654              		.loc 1 1405 8 view .LVU1302
 3655 003e 35D9     		bls	.L313
 3656              	.L311:
 3657              	.LVL320:
1407:./Libraries/FatFs/Src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
 3658              		.loc 1 1407 4 is_stmt 1 view .LVU1303
1407:./Libraries/FatFs/Src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
 3659              		.loc 1 1407 9 is_stmt 0 view .LVU1304
 3660 0040 2146     		mov	r1, r4
 3661 0042 2868     		ldr	r0, [r5]
 3662 0044 FFF7FEFF 		bl	get_fat.isra.0
 3663              	.LVL321:
1409:./Libraries/FatFs/Src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
 3664              		.loc 1 1409 4 is_stmt 1 view .LVU1305
1410:./Libraries/FatFs/Src/ff.c **** 		}
 3665              		.loc 1 1410 4 view .LVU1306
1408:./Libraries/FatFs/Src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
 3666              		.loc 1 1408 4 view .LVU1307
1408:./Libraries/FatFs/Src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
 3667              		.loc 1 1408 7 is_stmt 0 view .LVU1308
 3668 0048 0028     		cmp	r0, #0
 3669 004a EAD1     		bne	.L330
1412:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK && clst != 0) {
 3670              		.loc 1 1412 3 is_stmt 1 view .LVU1309
 3671              	.LVL322:
ARM GAS  /tmp/ccaQXGqa.s 			page 142


 3672              	.LBB838:
 3673              	.LBI838:
1081:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
 3674              		.loc 1 1081 9 view .LVU1310
 3675              	.LBB839:
1087:./Libraries/FatFs/Src/ff.c **** 	BYTE *p;
 3676              		.loc 1 1087 2 view .LVU1311
1088:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_INT_ERR;
 3677              		.loc 1 1088 2 view .LVU1312
1089:./Libraries/FatFs/Src/ff.c **** 
 3678              		.loc 1 1089 2 view .LVU1313
1091:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
 3679              		.loc 1 1091 2 view .LVU1314
1091:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
 3680              		.loc 1 1091 5 is_stmt 0 view .LVU1315
 3681 004c 012C     		cmp	r4, #1
 3682 004e 2AD9     		bls	.L315
1091:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
 3683              		.loc 1 1091 16 view .LVU1316
 3684 0050 B369     		ldr	r3, [r6, #24]
 3685 0052 9C42     		cmp	r4, r3
 3686 0054 27D2     		bcs	.L315
 3687 0056 4FF0FF32 		mov	r2, #-1
 3688 005a 2146     		mov	r1, r4
 3689 005c 3046     		mov	r0, r6
 3690              	.LVL323:
1091:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
 3691              		.loc 1 1091 16 view .LVU1317
 3692 005e FFF7FEFF 		bl	put_fat.part.0
 3693              	.LVL324:
1128:./Libraries/FatFs/Src/ff.c **** }
 3694              		.loc 1 1128 2 is_stmt 1 view .LVU1318
1128:./Libraries/FatFs/Src/ff.c **** }
 3695              		.loc 1 1128 2 is_stmt 0 view .LVU1319
 3696              	.LBE839:
 3697              	.LBE838:
1413:./Libraries/FatFs/Src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 3698              		.loc 1 1413 3 is_stmt 1 view .LVU1320
1413:./Libraries/FatFs/Src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 3699              		.loc 1 1413 6 is_stmt 0 view .LVU1321
 3700 0062 F0B9     		cbnz	r0, .L317
 3701 0064 4FB1     		cbz	r7, .L316
1414:./Libraries/FatFs/Src/ff.c **** 		}
 3702              		.loc 1 1414 4 is_stmt 1 view .LVU1322
 3703              	.LVL325:
 3704              	.LBB840:
 3705              	.LBI840:
1081:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
 3706              		.loc 1 1081 9 view .LVU1323
 3707              	.LBB841:
1087:./Libraries/FatFs/Src/ff.c **** 	BYTE *p;
 3708              		.loc 1 1087 2 view .LVU1324
1088:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_INT_ERR;
 3709              		.loc 1 1088 2 view .LVU1325
1089:./Libraries/FatFs/Src/ff.c **** 
 3710              		.loc 1 1089 2 view .LVU1326
1091:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
ARM GAS  /tmp/ccaQXGqa.s 			page 143


 3711              		.loc 1 1091 2 view .LVU1327
1091:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
 3712              		.loc 1 1091 5 is_stmt 0 view .LVU1328
 3713 0066 012F     		cmp	r7, #1
 3714 0068 1DD9     		bls	.L315
1091:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
 3715              		.loc 1 1091 16 view .LVU1329
 3716 006a B369     		ldr	r3, [r6, #24]
 3717 006c 9F42     		cmp	r7, r3
 3718 006e 1AD2     		bcs	.L315
 3719 0070 3946     		mov	r1, r7
 3720 0072 2246     		mov	r2, r4
 3721 0074 3046     		mov	r0, r6
 3722              	.LVL326:
1091:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
 3723              		.loc 1 1091 16 view .LVU1330
 3724 0076 FFF7FEFF 		bl	put_fat.part.0
 3725              	.LVL327:
1128:./Libraries/FatFs/Src/ff.c **** }
 3726              		.loc 1 1128 2 is_stmt 1 view .LVU1331
 3727              	.L316:
1128:./Libraries/FatFs/Src/ff.c **** }
 3728              		.loc 1 1128 2 is_stmt 0 view .LVU1332
 3729              	.LBE841:
 3730              	.LBE840:
1418:./Libraries/FatFs/Src/ff.c **** 		fs->last_clst = ncl;
 3731              		.loc 1 1418 2 is_stmt 1 view .LVU1333
1418:./Libraries/FatFs/Src/ff.c **** 		fs->last_clst = ncl;
 3732              		.loc 1 1418 5 is_stmt 0 view .LVU1334
 3733 007a 90B9     		cbnz	r0, .L317
1419:./Libraries/FatFs/Src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 3734              		.loc 1 1419 3 is_stmt 1 view .LVU1335
1419:./Libraries/FatFs/Src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 3735              		.loc 1 1419 17 is_stmt 0 view .LVU1336
 3736 007c 3461     		str	r4, [r6, #16]
1420:./Libraries/FatFs/Src/ff.c **** 		fs->fsi_flag |= 1;
 3737              		.loc 1 1420 3 is_stmt 1 view .LVU1337
1420:./Libraries/FatFs/Src/ff.c **** 		fs->fsi_flag |= 1;
 3738              		.loc 1 1420 9 is_stmt 0 view .LVU1338
 3739 007e D6E90523 		ldrd	r2, r3, [r6, #20]
1420:./Libraries/FatFs/Src/ff.c **** 		fs->fsi_flag |= 1;
 3740              		.loc 1 1420 37 view .LVU1339
 3741 0082 023B     		subs	r3, r3, #2
1420:./Libraries/FatFs/Src/ff.c **** 		fs->fsi_flag |= 1;
 3742              		.loc 1 1420 6 view .LVU1340
 3743 0084 9A42     		cmp	r2, r3
 3744 0086 01D8     		bhi	.L318
1420:./Libraries/FatFs/Src/ff.c **** 		fs->fsi_flag |= 1;
 3745              		.loc 1 1420 42 is_stmt 1 discriminator 1 view .LVU1341
1420:./Libraries/FatFs/Src/ff.c **** 		fs->fsi_flag |= 1;
 3746              		.loc 1 1420 55 is_stmt 0 discriminator 1 view .LVU1342
 3747 0088 013A     		subs	r2, r2, #1
 3748 008a 7261     		str	r2, [r6, #20]
 3749              	.L318:
1421:./Libraries/FatFs/Src/ff.c **** 	} else {
 3750              		.loc 1 1421 3 is_stmt 1 view .LVU1343
1421:./Libraries/FatFs/Src/ff.c **** 	} else {
ARM GAS  /tmp/ccaQXGqa.s 			page 144


 3751              		.loc 1 1421 16 is_stmt 0 view .LVU1344
 3752 008c 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 3753 008e 2046     		mov	r0, r4
 3754              	.LVL328:
1421:./Libraries/FatFs/Src/ff.c **** 	} else {
 3755              		.loc 1 1421 16 view .LVU1345
 3756 0090 43F00103 		orr	r3, r3, #1
 3757 0094 3371     		strb	r3, [r6, #4]
 3758 0096 07E0     		b	.L304
 3759              	.LVL329:
 3760              	.L306:
1363:./Libraries/FatFs/Src/ff.c **** 	}
 3761              		.loc 1 1363 44 discriminator 2 view .LVU1346
 3762 0098 4345     		cmp	r3, r8
 3763 009a 98BF     		it	ls
 3764 009c 4FF00108 		movls	r8, #1
 3765              	.LVL330:
1363:./Libraries/FatFs/Src/ff.c **** 	}
 3766              		.loc 1 1363 44 discriminator 2 view .LVU1347
 3767 00a0 BDE7     		b	.L307
 3768              	.LVL331:
 3769              	.L317:
1423:./Libraries/FatFs/Src/ff.c **** 	}
 3770              		.loc 1 1423 3 is_stmt 1 view .LVU1348
1423:./Libraries/FatFs/Src/ff.c **** 	}
 3771              		.loc 1 1423 43 is_stmt 0 view .LVU1349
 3772 00a2 0128     		cmp	r0, #1
 3773 00a4 11D0     		beq	.L310
 3774              	.LVL332:
 3775              	.L315:
1367:./Libraries/FatFs/Src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 3776              		.loc 1 1367 22 view .LVU1350
 3777 00a6 0120     		movs	r0, #1
 3778              	.L304:
1427:./Libraries/FatFs/Src/ff.c **** 
 3779              		.loc 1 1427 1 view .LVU1351
 3780 00a8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3781              	.LVL333:
 3782              	.L313:
1405:./Libraries/FatFs/Src/ff.c **** 			}
 3783              		.loc 1 1405 27 view .LVU1352
 3784 00ac 0020     		movs	r0, #0
1427:./Libraries/FatFs/Src/ff.c **** 
 3785              		.loc 1 1427 1 view .LVU1353
 3786 00ae BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3787              	.LVL334:
 3788              	.L305:
1366:./Libraries/FatFs/Src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
 3789              		.loc 1 1366 3 is_stmt 1 view .LVU1354
1366:./Libraries/FatFs/Src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
 3790              		.loc 1 1366 8 is_stmt 0 view .LVU1355
 3791 00b2 3046     		mov	r0, r6
 3792              	.LVL335:
1366:./Libraries/FatFs/Src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
 3793              		.loc 1 1366 8 view .LVU1356
 3794 00b4 FFF7FEFF 		bl	get_fat.isra.0
 3795              	.LVL336:
ARM GAS  /tmp/ccaQXGqa.s 			page 145


1367:./Libraries/FatFs/Src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 3796              		.loc 1 1367 3 is_stmt 1 view .LVU1357
1367:./Libraries/FatFs/Src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 3797              		.loc 1 1367 6 is_stmt 0 view .LVU1358
 3798 00b8 0128     		cmp	r0, #1
 3799 00ba F4D9     		bls	.L315
1368:./Libraries/FatFs/Src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 3800              		.loc 1 1368 3 is_stmt 1 view .LVU1359
1368:./Libraries/FatFs/Src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 3801              		.loc 1 1368 6 is_stmt 0 view .LVU1360
 3802 00bc 421C     		adds	r2, r0, #1
 3803 00be 04D0     		beq	.L310
1369:./Libraries/FatFs/Src/ff.c **** 		scl = clst;
 3804              		.loc 1 1369 3 is_stmt 1 view .LVU1361
1369:./Libraries/FatFs/Src/ff.c **** 		scl = clst;
 3805              		.loc 1 1369 14 is_stmt 0 view .LVU1362
 3806 00c0 B369     		ldr	r3, [r6, #24]
1369:./Libraries/FatFs/Src/ff.c **** 		scl = clst;
 3807              		.loc 1 1369 6 view .LVU1363
 3808 00c2 8342     		cmp	r3, r0
 3809 00c4 F0D8     		bhi	.L304
 3810 00c6 B846     		mov	r8, r7
 3811 00c8 A9E7     		b	.L307
 3812              	.LVL337:
 3813              	.L310:
1423:./Libraries/FatFs/Src/ff.c **** 	}
 3814              		.loc 1 1423 43 view .LVU1364
 3815 00ca 4FF0FF30 		mov	r0, #-1
 3816 00ce EBE7     		b	.L304
 3817              		.cfi_endproc
 3818              	.LFE357:
 3820              		.section	.text.remove_chain,"ax",%progbits
 3821              		.align	1
 3822              		.p2align 2,,3
 3823              		.syntax unified
 3824              		.thumb
 3825              		.thumb_func
 3826              		.fpu fpv5-d16
 3828              	remove_chain:
 3829              	.LVL338:
 3830              	.LFB356:
1276:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_OK;
 3831              		.loc 1 1276 1 is_stmt 1 view -0
 3832              		.cfi_startproc
 3833              		@ args = 0, pretend = 0, frame = 0
 3834              		@ frame_needed = 0, uses_anonymous_args = 0
1277:./Libraries/FatFs/Src/ff.c **** 	DWORD nxt;
 3835              		.loc 1 1277 2 view .LVU1366
1278:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = obj->fs;
 3836              		.loc 1 1278 2 view .LVU1367
1279:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT || _USE_TRIM
 3837              		.loc 1 1279 2 view .LVU1368
1287:./Libraries/FatFs/Src/ff.c **** 
 3838              		.loc 1 1287 5 is_stmt 0 view .LVU1369
 3839 0000 0129     		cmp	r1, #1
1276:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_OK;
 3840              		.loc 1 1276 1 view .LVU1370
ARM GAS  /tmp/ccaQXGqa.s 			page 146


 3841 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3842              	.LCFI40:
 3843              		.cfi_def_cfa_offset 24
 3844              		.cfi_offset 3, -24
 3845              		.cfi_offset 4, -20
 3846              		.cfi_offset 5, -16
 3847              		.cfi_offset 6, -12
 3848              		.cfi_offset 7, -8
 3849              		.cfi_offset 14, -4
1279:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT || _USE_TRIM
 3850              		.loc 1 1279 9 view .LVU1371
 3851 0004 0668     		ldr	r6, [r0]
 3852              	.LVL339:
1287:./Libraries/FatFs/Src/ff.c **** 
 3853              		.loc 1 1287 2 is_stmt 1 view .LVU1372
1287:./Libraries/FatFs/Src/ff.c **** 
 3854              		.loc 1 1287 5 is_stmt 0 view .LVU1373
 3855 0006 29D9     		bls	.L332
1287:./Libraries/FatFs/Src/ff.c **** 
 3856              		.loc 1 1287 28 discriminator 2 view .LVU1374
 3857 0008 B369     		ldr	r3, [r6, #24]
 3858 000a 0C46     		mov	r4, r1
1287:./Libraries/FatFs/Src/ff.c **** 
 3859              		.loc 1 1287 15 discriminator 2 view .LVU1375
 3860 000c 8B42     		cmp	r3, r1
 3861 000e 25D9     		bls	.L332
1290:./Libraries/FatFs/Src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
 3862              		.loc 1 1290 2 is_stmt 1 view .LVU1376
 3863 0010 0746     		mov	r7, r0
1290:./Libraries/FatFs/Src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
 3864              		.loc 1 1290 5 is_stmt 0 view .LVU1377
 3865 0012 FAB9     		cbnz	r2, .L353
 3866 0014 3046     		mov	r0, r6
 3867              	.LVL340:
 3868              	.L338:
1296:./Libraries/FatFs/Src/ff.c **** 		nxt = get_fat(obj, clst);			/* Get cluster status */
 3869              		.loc 1 1296 2 is_stmt 1 view .LVU1378
1297:./Libraries/FatFs/Src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
 3870              		.loc 1 1297 3 view .LVU1379
1297:./Libraries/FatFs/Src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
 3871              		.loc 1 1297 9 is_stmt 0 view .LVU1380
 3872 0016 2146     		mov	r1, r4
 3873 0018 FFF7FEFF 		bl	get_fat.isra.0
 3874              	.LVL341:
1299:./Libraries/FatFs/Src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3875              		.loc 1 1299 3 is_stmt 1 view .LVU1381
1300:./Libraries/FatFs/Src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3876              		.loc 1 1300 3 view .LVU1382
1301:./Libraries/FatFs/Src/ff.c **** 			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
 3877              		.loc 1 1301 3 view .LVU1383
1302:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) return res;
 3878              		.loc 1 1302 4 view .LVU1384
 3879              	.LBB842:
 3880              	.LBI842:
1081:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
 3881              		.loc 1 1081 9 view .LVU1385
 3882              	.LBB843:
ARM GAS  /tmp/ccaQXGqa.s 			page 147


1087:./Libraries/FatFs/Src/ff.c **** 	BYTE *p;
 3883              		.loc 1 1087 2 view .LVU1386
1088:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_INT_ERR;
 3884              		.loc 1 1088 2 view .LVU1387
1089:./Libraries/FatFs/Src/ff.c **** 
 3885              		.loc 1 1089 2 view .LVU1388
1091:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
 3886              		.loc 1 1091 2 view .LVU1389
 3887              	.LBE843:
 3888              	.LBE842:
1297:./Libraries/FatFs/Src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
 3889              		.loc 1 1297 9 is_stmt 0 view .LVU1390
 3890 001c 0546     		mov	r5, r0
 3891              	.LVL342:
1298:./Libraries/FatFs/Src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 3892              		.loc 1 1298 3 is_stmt 1 view .LVU1391
 3893              	.LBB848:
 3894              	.LBB844:
 3895 001e 2146     		mov	r1, r4
 3896 0020 0022     		movs	r2, #0
 3897 0022 3046     		mov	r0, r6
 3898              	.LVL343:
1298:./Libraries/FatFs/Src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 3899              		.loc 1 1298 3 is_stmt 0 view .LVU1392
 3900              	.LBE844:
 3901              	.LBE848:
1298:./Libraries/FatFs/Src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 3902              		.loc 1 1298 6 view .LVU1393
 3903 0024 5DB3     		cbz	r5, .L337
 3904              	.LVL344:
1299:./Libraries/FatFs/Src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3905              		.loc 1 1299 6 view .LVU1394
 3906 0026 012D     		cmp	r5, #1
 3907 0028 18D0     		beq	.L332
1300:./Libraries/FatFs/Src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3908              		.loc 1 1300 6 view .LVU1395
 3909 002a 6B1C     		adds	r3, r5, #1
 3910 002c 29D0     		beq	.L340
 3911              	.LBB849:
 3912              	.LBB845:
1091:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
 3913              		.loc 1 1091 5 view .LVU1396
 3914 002e 012C     		cmp	r4, #1
 3915 0030 14D9     		bls	.L332
1091:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
 3916              		.loc 1 1091 16 view .LVU1397
 3917 0032 B369     		ldr	r3, [r6, #24]
 3918 0034 9C42     		cmp	r4, r3
 3919              	.LBE845:
 3920              	.LBE849:
1328:./Libraries/FatFs/Src/ff.c **** 
 3921              		.loc 1 1328 2 view .LVU1398
 3922 0036 2C46     		mov	r4, r5
 3923              	.LBB850:
 3924              	.LBB846:
1091:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
 3925              		.loc 1 1091 16 view .LVU1399
ARM GAS  /tmp/ccaQXGqa.s 			page 148


 3926 0038 10D2     		bcs	.L332
 3927 003a FFF7FEFF 		bl	put_fat.part.0
 3928              	.LVL345:
1091:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
 3929              		.loc 1 1091 16 view .LVU1400
 3930              	.LBE846:
 3931              	.LBE850:
1305:./Libraries/FatFs/Src/ff.c **** 			fs->free_clst++;
 3932              		.loc 1 1305 3 is_stmt 1 view .LVU1401
1306:./Libraries/FatFs/Src/ff.c **** 			fs->fsi_flag |= 1;
 3933              		.loc 1 1306 4 view .LVU1402
1327:./Libraries/FatFs/Src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
 3934              		.loc 1 1327 3 view .LVU1403
1328:./Libraries/FatFs/Src/ff.c **** 
 3935              		.loc 1 1328 10 view .LVU1404
 3936              	.LBB851:
 3937              	.LBB847:
1128:./Libraries/FatFs/Src/ff.c **** }
 3938              		.loc 1 1128 2 view .LVU1405
1128:./Libraries/FatFs/Src/ff.c **** }
 3939              		.loc 1 1128 2 is_stmt 0 view .LVU1406
 3940              	.LBE847:
 3941              	.LBE851:
1303:./Libraries/FatFs/Src/ff.c **** 		}
 3942              		.loc 1 1303 4 is_stmt 1 view .LVU1407
1303:./Libraries/FatFs/Src/ff.c **** 		}
 3943              		.loc 1 1303 7 is_stmt 0 view .LVU1408
 3944 003e 70B9     		cbnz	r0, .L334
1305:./Libraries/FatFs/Src/ff.c **** 			fs->free_clst++;
 3945              		.loc 1 1305 9 view .LVU1409
 3946 0040 D6E90523 		ldrd	r2, r3, [r6, #20]
1305:./Libraries/FatFs/Src/ff.c **** 			fs->free_clst++;
 3947              		.loc 1 1305 36 view .LVU1410
 3948 0044 991E     		subs	r1, r3, #2
1306:./Libraries/FatFs/Src/ff.c **** 			fs->fsi_flag |= 1;
 3949              		.loc 1 1306 17 view .LVU1411
 3950 0046 501C     		adds	r0, r2, #1
 3951              	.LVL346:
1305:./Libraries/FatFs/Src/ff.c **** 			fs->free_clst++;
 3952              		.loc 1 1305 6 view .LVU1412
 3953 0048 8A42     		cmp	r2, r1
 3954 004a 09D3     		bcc	.L354
 3955              	.L336:
1328:./Libraries/FatFs/Src/ff.c **** 
 3956              		.loc 1 1328 2 view .LVU1413
 3957 004c AB42     		cmp	r3, r5
 3958 004e 16D9     		bls	.L337
 3959              	.LVL347:
 3960              	.L351:
1328:./Libraries/FatFs/Src/ff.c **** 
 3961              		.loc 1 1328 2 view .LVU1414
 3962 0050 3868     		ldr	r0, [r7]
 3963 0052 E0E7     		b	.L338
 3964              	.LVL348:
 3965              	.L353:
1291:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) return res;
 3966              		.loc 1 1291 3 is_stmt 1 view .LVU1415
ARM GAS  /tmp/ccaQXGqa.s 			page 149


 3967              	.LBB852:
 3968              	.LBI852:
1081:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
 3969              		.loc 1 1081 9 view .LVU1416
 3970              	.LBB853:
1087:./Libraries/FatFs/Src/ff.c **** 	BYTE *p;
 3971              		.loc 1 1087 2 view .LVU1417
1088:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_INT_ERR;
 3972              		.loc 1 1088 2 view .LVU1418
1089:./Libraries/FatFs/Src/ff.c **** 
 3973              		.loc 1 1089 2 view .LVU1419
1091:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
 3974              		.loc 1 1091 2 view .LVU1420
1091:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
 3975              		.loc 1 1091 16 is_stmt 0 view .LVU1421
 3976 0054 9342     		cmp	r3, r2
 3977 0056 01D9     		bls	.L332
 3978 0058 012A     		cmp	r2, #1
 3979 005a 07D8     		bhi	.L355
 3980              	.LVL349:
 3981              	.L332:
1091:./Libraries/FatFs/Src/ff.c **** 		switch (fs->fs_type) {
 3982              		.loc 1 1091 16 view .LVU1422
 3983              	.LBE853:
 3984              	.LBE852:
1287:./Libraries/FatFs/Src/ff.c **** 
 3985              		.loc 1 1287 47 view .LVU1423
 3986 005c 0220     		movs	r0, #2
 3987              	.LVL350:
 3988              	.L334:
1342:./Libraries/FatFs/Src/ff.c **** 
 3989              		.loc 1 1342 1 view .LVU1424
 3990 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3991              	.LVL351:
 3992              	.L354:
1307:./Libraries/FatFs/Src/ff.c **** 		}
 3993              		.loc 1 1307 17 view .LVU1425
 3994 0060 3279     		ldrb	r2, [r6, #4]	@ zero_extendqisi2
1306:./Libraries/FatFs/Src/ff.c **** 			fs->fsi_flag |= 1;
 3995              		.loc 1 1306 17 view .LVU1426
 3996 0062 7061     		str	r0, [r6, #20]
1307:./Libraries/FatFs/Src/ff.c **** 		}
 3997              		.loc 1 1307 4 is_stmt 1 view .LVU1427
1307:./Libraries/FatFs/Src/ff.c **** 		}
 3998              		.loc 1 1307 17 is_stmt 0 view .LVU1428
 3999 0064 42F00102 		orr	r2, r2, #1
 4000 0068 3271     		strb	r2, [r6, #4]
 4001 006a EFE7     		b	.L336
 4002              	.LVL352:
 4003              	.L355:
 4004              	.LBB855:
 4005              	.LBB854:
1307:./Libraries/FatFs/Src/ff.c **** 		}
 4006              		.loc 1 1307 17 view .LVU1429
 4007 006c 1146     		mov	r1, r2
 4008              	.LVL353:
1307:./Libraries/FatFs/Src/ff.c **** 		}
ARM GAS  /tmp/ccaQXGqa.s 			page 150


 4009              		.loc 1 1307 17 view .LVU1430
 4010 006e 3046     		mov	r0, r6
 4011              	.LVL354:
1307:./Libraries/FatFs/Src/ff.c **** 		}
 4012              		.loc 1 1307 17 view .LVU1431
 4013 0070 4FF0FF32 		mov	r2, #-1
 4014              	.LVL355:
1307:./Libraries/FatFs/Src/ff.c **** 		}
 4015              		.loc 1 1307 17 view .LVU1432
 4016 0074 FFF7FEFF 		bl	put_fat.part.0
 4017              	.LVL356:
1128:./Libraries/FatFs/Src/ff.c **** }
 4018              		.loc 1 1128 2 is_stmt 1 view .LVU1433
1128:./Libraries/FatFs/Src/ff.c **** }
 4019              		.loc 1 1128 2 is_stmt 0 view .LVU1434
 4020              	.LBE854:
 4021              	.LBE855:
1292:./Libraries/FatFs/Src/ff.c **** 	}
 4022              		.loc 1 1292 3 is_stmt 1 view .LVU1435
1292:./Libraries/FatFs/Src/ff.c **** 	}
 4023              		.loc 1 1292 6 is_stmt 0 view .LVU1436
 4024 0078 0028     		cmp	r0, #0
 4025 007a E9D0     		beq	.L351
 4026              	.LVL357:
1342:./Libraries/FatFs/Src/ff.c **** 
 4027              		.loc 1 1342 1 view .LVU1437
 4028 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4029              	.LVL358:
 4030              	.L337:
1341:./Libraries/FatFs/Src/ff.c **** }
 4031              		.loc 1 1341 9 view .LVU1438
 4032 007e 0020     		movs	r0, #0
1342:./Libraries/FatFs/Src/ff.c **** 
 4033              		.loc 1 1342 1 view .LVU1439
 4034 0080 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4035              	.LVL359:
 4036              	.L340:
1300:./Libraries/FatFs/Src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 4037              		.loc 1 1300 33 view .LVU1440
 4038 0082 0120     		movs	r0, #1
 4039              	.LVL360:
1342:./Libraries/FatFs/Src/ff.c **** 
 4040              		.loc 1 1342 1 view .LVU1441
 4041 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
1342:./Libraries/FatFs/Src/ff.c **** 
 4042              		.loc 1 1342 1 view .LVU1442
 4043              		.cfi_endproc
 4044              	.LFE356:
 4046 0086 00BF     		.section	.text.dir_next,"ax",%progbits
 4047              		.align	1
 4048              		.p2align 2,,3
 4049              		.syntax unified
 4050              		.thumb
 4051              		.thumb_func
 4052              		.fpu fpv5-d16
 4054              	dir_next:
 4055              	.LVL361:
ARM GAS  /tmp/ccaQXGqa.s 			page 151


 4056              	.LFB360:
1523:./Libraries/FatFs/Src/ff.c **** 	DWORD ofs, clst;
 4057              		.loc 1 1523 1 is_stmt 1 view -0
 4058              		.cfi_startproc
 4059              		@ args = 0, pretend = 0, frame = 8
 4060              		@ frame_needed = 0, uses_anonymous_args = 0
1524:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
 4061              		.loc 1 1524 2 view .LVU1444
1525:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 4062              		.loc 1 1525 2 view .LVU1445
1527:./Libraries/FatFs/Src/ff.c **** #endif
 4063              		.loc 1 1527 2 view .LVU1446
1530:./Libraries/FatFs/Src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
 4064              		.loc 1 1530 2 view .LVU1447
1523:./Libraries/FatFs/Src/ff.c **** 	DWORD ofs, clst;
 4065              		.loc 1 1523 1 is_stmt 0 view .LVU1448
 4066 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4067              	.LCFI41:
 4068              		.cfi_def_cfa_offset 36
 4069              		.cfi_offset 4, -36
 4070              		.cfi_offset 5, -32
 4071              		.cfi_offset 6, -28
 4072              		.cfi_offset 7, -24
 4073              		.cfi_offset 8, -20
 4074              		.cfi_offset 9, -16
 4075              		.cfi_offset 10, -12
 4076              		.cfi_offset 11, -8
 4077              		.cfi_offset 14, -4
1530:./Libraries/FatFs/Src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
 4078              		.loc 1 1530 6 view .LVU1449
 4079 0004 4569     		ldr	r5, [r0, #20]
1523:./Libraries/FatFs/Src/ff.c **** 	DWORD ofs, clst;
 4080              		.loc 1 1523 1 view .LVU1450
 4081 0006 83B0     		sub	sp, sp, #12
 4082              	.LCFI42:
 4083              		.cfi_def_cfa_offset 48
1531:./Libraries/FatFs/Src/ff.c **** 
 4084              		.loc 1 1531 9 view .LVU1451
 4085 0008 C369     		ldr	r3, [r0, #28]
1530:./Libraries/FatFs/Src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
 4086              		.loc 1 1530 6 view .LVU1452
 4087 000a 2035     		adds	r5, r5, #32
 4088              	.LVL362:
1531:./Libraries/FatFs/Src/ff.c **** 
 4089              		.loc 1 1531 2 is_stmt 1 view .LVU1453
1531:./Libraries/FatFs/Src/ff.c **** 
 4090              		.loc 1 1531 16 is_stmt 0 view .LVU1454
 4091 000c B5F5001F 		cmp	r5, #2097152
 4092 0010 3BD2     		bcs	.L377
 4093 0012 002B     		cmp	r3, #0
 4094 0014 39D0     		beq	.L377
1533:./Libraries/FatFs/Src/ff.c **** 		dp->sect++;				/* Next sector */
 4095              		.loc 1 1533 10 view .LVU1455
 4096 0016 C5F30808 		ubfx	r8, r5, #0, #9
 4097 001a 0446     		mov	r4, r0
1525:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 4098              		.loc 1 1525 9 view .LVU1456
ARM GAS  /tmp/ccaQXGqa.s 			page 152


 4099 001c 0768     		ldr	r7, [r0]
1533:./Libraries/FatFs/Src/ff.c **** 		dp->sect++;				/* Next sector */
 4100              		.loc 1 1533 2 is_stmt 1 view .LVU1457
1533:./Libraries/FatFs/Src/ff.c **** 		dp->sect++;				/* Next sector */
 4101              		.loc 1 1533 5 is_stmt 0 view .LVU1458
 4102 001e B8F1000F 		cmp	r8, #0
 4103 0022 08D0     		beq	.L358
 4104              	.LVL363:
 4105              	.L392:
1533:./Libraries/FatFs/Src/ff.c **** 		dp->sect++;				/* Next sector */
 4106              		.loc 1 1533 5 view .LVU1459
 4107 0024 07F13406 		add	r6, r7, #52
 4108              	.LVL364:
 4109              	.L359:
1574:./Libraries/FatFs/Src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 4110              		.loc 1 1574 2 is_stmt 1 view .LVU1460
1575:./Libraries/FatFs/Src/ff.c **** 
 4111              		.loc 1 1575 20 is_stmt 0 view .LVU1461
 4112 0028 4644     		add	r6, r6, r8
1577:./Libraries/FatFs/Src/ff.c **** }
 4113              		.loc 1 1577 9 view .LVU1462
 4114 002a 0020     		movs	r0, #0
1574:./Libraries/FatFs/Src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 4115              		.loc 1 1574 11 view .LVU1463
 4116 002c 6561     		str	r5, [r4, #20]
1575:./Libraries/FatFs/Src/ff.c **** 
 4117              		.loc 1 1575 2 is_stmt 1 view .LVU1464
1575:./Libraries/FatFs/Src/ff.c **** 
 4118              		.loc 1 1575 10 is_stmt 0 view .LVU1465
 4119 002e 2662     		str	r6, [r4, #32]
1577:./Libraries/FatFs/Src/ff.c **** }
 4120              		.loc 1 1577 2 is_stmt 1 view .LVU1466
 4121              	.L357:
1578:./Libraries/FatFs/Src/ff.c **** 
 4122              		.loc 1 1578 1 is_stmt 0 view .LVU1467
 4123 0030 03B0     		add	sp, sp, #12
 4124              	.LCFI43:
 4125              		.cfi_remember_state
 4126              		.cfi_def_cfa_offset 36
 4127              		@ sp needed
 4128 0032 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4129              	.LVL365:
 4130              	.L358:
 4131              	.LCFI44:
 4132              		.cfi_restore_state
1534:./Libraries/FatFs/Src/ff.c **** 
 4133              		.loc 1 1534 3 is_stmt 1 view .LVU1468
 4134 0036 0E46     		mov	r6, r1
1534:./Libraries/FatFs/Src/ff.c **** 
 4135              		.loc 1 1534 11 is_stmt 0 view .LVU1469
 4136 0038 0133     		adds	r3, r3, #1
1536:./Libraries/FatFs/Src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 4137              		.loc 1 1536 10 view .LVU1470
 4138 003a 8169     		ldr	r1, [r0, #24]
 4139              	.LVL366:
1534:./Libraries/FatFs/Src/ff.c **** 
 4140              		.loc 1 1534 11 view .LVU1471
ARM GAS  /tmp/ccaQXGqa.s 			page 153


 4141 003c C361     		str	r3, [r0, #28]
1536:./Libraries/FatFs/Src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 4142              		.loc 1 1536 3 is_stmt 1 view .LVU1472
1536:./Libraries/FatFs/Src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 4143              		.loc 1 1536 6 is_stmt 0 view .LVU1473
 4144 003e 41B3     		cbz	r1, .L393
1542:./Libraries/FatFs/Src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 4145              		.loc 1 1542 4 is_stmt 1 view .LVU1474
1542:./Libraries/FatFs/Src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 4146              		.loc 1 1542 27 is_stmt 0 view .LVU1475
 4147 0040 B7F80A90 		ldrh	r9, [r7, #10]
1542:./Libraries/FatFs/Src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 4148              		.loc 1 1542 35 view .LVU1476
 4149 0044 09F1FF39 		add	r9, r9, #-1
1542:./Libraries/FatFs/Src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 4150              		.loc 1 1542 7 view .LVU1477
 4151 0048 19EA5529 		ands	r9, r9, r5, lsr #9
 4152 004c EAD1     		bne	.L392
1543:./Libraries/FatFs/Src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 4153              		.loc 1 1543 5 is_stmt 1 view .LVU1478
1543:./Libraries/FatFs/Src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 4154              		.loc 1 1543 12 is_stmt 0 view .LVU1479
 4155 004e 3846     		mov	r0, r7
 4156              	.LVL367:
1543:./Libraries/FatFs/Src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 4157              		.loc 1 1543 12 view .LVU1480
 4158 0050 FFF7FEFF 		bl	get_fat.isra.0
 4159              	.LVL368:
1544:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 4160              		.loc 1 1544 8 view .LVU1481
 4161 0054 0128     		cmp	r0, #1
1543:./Libraries/FatFs/Src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 4162              		.loc 1 1543 12 view .LVU1482
 4163 0056 8346     		mov	fp, r0
 4164              	.LVL369:
1544:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 4165              		.loc 1 1544 5 is_stmt 1 view .LVU1483
1544:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 4166              		.loc 1 1544 8 is_stmt 0 view .LVU1484
 4167 0058 23D9     		bls	.L367
1545:./Libraries/FatFs/Src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 4168              		.loc 1 1545 5 is_stmt 1 view .LVU1485
1545:./Libraries/FatFs/Src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 4169              		.loc 1 1545 8 is_stmt 0 view .LVU1486
 4170 005a B0F1FF3F 		cmp	r0, #-1
 4171 005e 5FD0     		beq	.L368
1546:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 4172              		.loc 1 1546 5 is_stmt 1 view .LVU1487
1546:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 4173              		.loc 1 1546 19 is_stmt 0 view .LVU1488
 4174 0060 B969     		ldr	r1, [r7, #24]
1546:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 4175              		.loc 1 1546 8 view .LVU1489
 4176 0062 8142     		cmp	r1, r0
 4177 0064 1FD9     		bls	.L365
 4178 0066 831E     		subs	r3, r0, #2
 4179 0068 07F13406 		add	r6, r7, #52
ARM GAS  /tmp/ccaQXGqa.s 			page 154


 4180              	.LVL370:
1546:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 4181              		.loc 1 1546 8 view .LVU1490
 4182 006c 0193     		str	r3, [sp, #4]
 4183              	.LVL371:
 4184              	.L366:
1569:./Libraries/FatFs/Src/ff.c **** 				dp->sect = clust2sect(fs, clst);
 4185              		.loc 1 1569 5 is_stmt 1 view .LVU1491
 4186              	.LBB856:
 4187              	.LBB857:
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 4188              		.loc 1 989 27 is_stmt 0 view .LVU1492
 4189 006e 0239     		subs	r1, r1, #2
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 4190              		.loc 1 989 5 view .LVU1493
 4191 0070 019A     		ldr	r2, [sp, #4]
 4192              	.LBE857:
 4193              	.LBE856:
1569:./Libraries/FatFs/Src/ff.c **** 				dp->sect = clust2sect(fs, clst);
 4194              		.loc 1 1569 15 view .LVU1494
 4195 0072 C4F818B0 		str	fp, [r4, #24]
1570:./Libraries/FatFs/Src/ff.c **** 			}
 4196              		.loc 1 1570 5 is_stmt 1 view .LVU1495
 4197              	.LVL372:
 4198              	.LBB859:
 4199              	.LBI856:
 983:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 4200              		.loc 1 983 7 view .LVU1496
 4201              	.LBB858:
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 4202              		.loc 1 988 2 view .LVU1497
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 4203              		.loc 1 989 2 view .LVU1498
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 4204              		.loc 1 989 5 is_stmt 0 view .LVU1499
 4205 0076 9142     		cmp	r1, r2
 4206 0078 04D9     		bls	.L376
 990:./Libraries/FatFs/Src/ff.c **** }
 4207              		.loc 1 990 2 is_stmt 1 view .LVU1500
 990:./Libraries/FatFs/Src/ff.c **** }
 4208              		.loc 1 990 18 is_stmt 0 view .LVU1501
 4209 007a B7F80A90 		ldrh	r9, [r7, #10]
 990:./Libraries/FatFs/Src/ff.c **** }
 4210              		.loc 1 990 26 view .LVU1502
 4211 007e FB6A     		ldr	r3, [r7, #44]
 4212 0080 02FB0939 		mla	r9, r2, r9, r3
 4213              	.L376:
 4214              	.LVL373:
 990:./Libraries/FatFs/Src/ff.c **** }
 4215              		.loc 1 990 26 view .LVU1503
 4216              	.LBE858:
 4217              	.LBE859:
1570:./Libraries/FatFs/Src/ff.c **** 			}
 4218              		.loc 1 1570 14 view .LVU1504
 4219 0084 C4F81C90 		str	r9, [r4, #28]
 4220 0088 CEE7     		b	.L359
 4221              	.LVL374:
ARM GAS  /tmp/ccaQXGqa.s 			page 155


 4222              	.L377:
1531:./Libraries/FatFs/Src/ff.c **** 
 4223              		.loc 1 1531 105 view .LVU1505
 4224 008a 0420     		movs	r0, #4
 4225              	.LVL375:
1578:./Libraries/FatFs/Src/ff.c **** 
 4226              		.loc 1 1578 1 view .LVU1506
 4227 008c 03B0     		add	sp, sp, #12
 4228              	.LCFI45:
 4229              		.cfi_remember_state
 4230              		.cfi_def_cfa_offset 36
 4231              		@ sp needed
 4232 008e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4233              	.LVL376:
 4234              	.L393:
 4235              	.LCFI46:
 4236              		.cfi_restore_state
1537:./Libraries/FatFs/Src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
 4237              		.loc 1 1537 4 is_stmt 1 view .LVU1507
1537:./Libraries/FatFs/Src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
 4238              		.loc 1 1537 26 is_stmt 0 view .LVU1508
 4239 0092 3B89     		ldrh	r3, [r7, #8]
1537:./Libraries/FatFs/Src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
 4240              		.loc 1 1537 7 view .LVU1509
 4241 0094 B3EB551F 		cmp	r3, r5, lsr #5
 4242 0098 C4D8     		bhi	.L392
 4243              	.LVL377:
 4244              	.L361:
1538:./Libraries/FatFs/Src/ff.c **** 			}
 4245              		.loc 1 1538 5 is_stmt 1 view .LVU1510
1538:./Libraries/FatFs/Src/ff.c **** 			}
 4246              		.loc 1 1538 14 is_stmt 0 view .LVU1511
 4247 009a 0023     		movs	r3, #0
1538:./Libraries/FatFs/Src/ff.c **** 			}
 4248              		.loc 1 1538 26 view .LVU1512
 4249 009c 0420     		movs	r0, #4
1538:./Libraries/FatFs/Src/ff.c **** 			}
 4250              		.loc 1 1538 14 view .LVU1513
 4251 009e E361     		str	r3, [r4, #28]
1538:./Libraries/FatFs/Src/ff.c **** 			}
 4252              		.loc 1 1538 19 is_stmt 1 view .LVU1514
1538:./Libraries/FatFs/Src/ff.c **** 			}
 4253              		.loc 1 1538 26 is_stmt 0 view .LVU1515
 4254 00a0 C6E7     		b	.L357
 4255              	.LVL378:
 4256              	.L367:
1544:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 4257              		.loc 1 1544 27 view .LVU1516
 4258 00a2 0220     		movs	r0, #2
 4259              	.LVL379:
1544:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 4260              		.loc 1 1544 27 view .LVU1517
 4261 00a4 C4E7     		b	.L357
 4262              	.LVL380:
 4263              	.L365:
1548:./Libraries/FatFs/Src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
 4264              		.loc 1 1548 6 is_stmt 1 view .LVU1518
ARM GAS  /tmp/ccaQXGqa.s 			page 156


1548:./Libraries/FatFs/Src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
 4265              		.loc 1 1548 9 is_stmt 0 view .LVU1519
 4266 00a6 002E     		cmp	r6, #0
 4267 00a8 F7D0     		beq	.L361
1551:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 4268              		.loc 1 1551 6 is_stmt 1 view .LVU1520
1551:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 4269              		.loc 1 1551 13 is_stmt 0 view .LVU1521
 4270 00aa A169     		ldr	r1, [r4, #24]
 4271 00ac 2046     		mov	r0, r4
 4272              	.LVL381:
1551:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 4273              		.loc 1 1551 13 view .LVU1522
 4274 00ae FFF7FEFF 		bl	create_chain
 4275              	.LVL382:
1552:./Libraries/FatFs/Src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 4276              		.loc 1 1552 6 is_stmt 1 view .LVU1523
1552:./Libraries/FatFs/Src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 4277              		.loc 1 1552 9 is_stmt 0 view .LVU1524
 4278 00b2 8346     		mov	fp, r0
 4279 00b4 0028     		cmp	r0, #0
 4280 00b6 3BD0     		beq	.L378
1553:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 4281              		.loc 1 1553 6 is_stmt 1 view .LVU1525
1553:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 4282              		.loc 1 1553 9 is_stmt 0 view .LVU1526
 4283 00b8 0128     		cmp	r0, #1
 4284 00ba F2D0     		beq	.L367
1554:./Libraries/FatFs/Src/ff.c **** 					/* Clean-up the stretched table */
 4285              		.loc 1 1554 6 is_stmt 1 view .LVU1527
1554:./Libraries/FatFs/Src/ff.c **** 					/* Clean-up the stretched table */
 4286              		.loc 1 1554 9 is_stmt 0 view .LVU1528
 4287 00bc B0F1FF3F 		cmp	r0, #-1
 4288 00c0 2ED0     		beq	.L368
1556:./Libraries/FatFs/Src/ff.c **** 					if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
 4289              		.loc 1 1556 6 is_stmt 1 view .LVU1529
1557:./Libraries/FatFs/Src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 4290              		.loc 1 1557 6 view .LVU1530
 4291              	.LVL383:
 4292              	.LBB860:
 4293              	.LBI860:
 883:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs			/* File system object */
 4294              		.loc 1 883 9 view .LVU1531
 4295              	.LBB861:
 887:./Libraries/FatFs/Src/ff.c **** 	UINT nf;
 4296              		.loc 1 887 2 view .LVU1532
 888:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_OK;
 4297              		.loc 1 888 2 view .LVU1533
 889:./Libraries/FatFs/Src/ff.c **** 
 4298              		.loc 1 889 2 view .LVU1534
 892:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 4299              		.loc 1 892 2 view .LVU1535
 892:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 4300              		.loc 1 892 5 is_stmt 0 view .LVU1536
 4301 00c2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4302 00c4 002B     		cmp	r3, #0
 4303 00c6 35D1     		bne	.L369
ARM GAS  /tmp/ccaQXGqa.s 			page 157


 4304              	.LVL384:
 4305              	.L371:
 892:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 4306              		.loc 1 892 5 view .LVU1537
 4307              	.LBE861:
 4308              	.LBE860:
1558:./Libraries/FatFs/Src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
 4309              		.loc 1 1558 6 is_stmt 1 view .LVU1538
1558:./Libraries/FatFs/Src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
 4310              		.loc 1 1558 16 is_stmt 0 view .LVU1539
 4311 00c8 07F13406 		add	r6, r7, #52
 4312              	.LVL385:
 4313              	.LBB863:
 4314              	.LBI863:
 706:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 4315              		.loc 1 706 6 is_stmt 1 view .LVU1540
 4316              	.LBB864:
 707:./Libraries/FatFs/Src/ff.c **** 
 4317              		.loc 1 707 2 view .LVU1541
 707:./Libraries/FatFs/Src/ff.c **** 
 4318              		.loc 1 707 2 is_stmt 0 view .LVU1542
 4319 00cc 07F50D70 		add	r0, r7, #564
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 4320              		.loc 1 710 8 view .LVU1543
 4321 00d0 0021     		movs	r1, #0
 707:./Libraries/FatFs/Src/ff.c **** 
 4322              		.loc 1 707 8 view .LVU1544
 4323 00d2 3346     		mov	r3, r6
 4324              	.LVL386:
 4325              	.L370:
 709:./Libraries/FatFs/Src/ff.c **** 		*d++ = (BYTE)val;
 4326              		.loc 1 709 2 is_stmt 1 view .LVU1545
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 4327              		.loc 1 710 3 view .LVU1546
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 4328              		.loc 1 710 8 is_stmt 0 view .LVU1547
 4329 00d4 03F8011B 		strb	r1, [r3], #1
 4330              	.LVL387:
 711:./Libraries/FatFs/Src/ff.c **** }
 4331              		.loc 1 711 10 is_stmt 1 view .LVU1548
 711:./Libraries/FatFs/Src/ff.c **** }
 4332              		.loc 1 711 2 is_stmt 0 view .LVU1549
 4333 00d8 8342     		cmp	r3, r0
 4334 00da FBD1     		bne	.L370
 4335              	.LVL388:
 711:./Libraries/FatFs/Src/ff.c **** }
 4336              		.loc 1 711 2 view .LVU1550
 4337              	.LBE864:
 4338              	.LBE863:
1559:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 4339              		.loc 1 1559 6 is_stmt 1 view .LVU1551
 4340              	.LBB865:
 4341              	.LBI865:
 983:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 4342              		.loc 1 983 7 view .LVU1552
 4343              	.LBB866:
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
ARM GAS  /tmp/ccaQXGqa.s 			page 158


 4344              		.loc 1 988 2 view .LVU1553
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 4345              		.loc 1 988 7 is_stmt 0 view .LVU1554
 4346 00dc ABF10203 		sub	r3, fp, #2
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 4347              		.loc 1 989 27 view .LVU1555
 4348 00e0 B869     		ldr	r0, [r7, #24]
 4349 00e2 7989     		ldrh	r1, [r7, #10]
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 4350              		.loc 1 988 7 view .LVU1556
 4351 00e4 1A46     		mov	r2, r3
 4352 00e6 0193     		str	r3, [sp, #4]
 4353              	.LVL389:
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 4354              		.loc 1 989 2 is_stmt 1 view .LVU1557
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 4355              		.loc 1 989 27 is_stmt 0 view .LVU1558
 4356 00e8 831E     		subs	r3, r0, #2
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 4357              		.loc 1 989 5 view .LVU1559
 4358 00ea 9A42     		cmp	r2, r3
 4359 00ec 28D2     		bcs	.L394
 990:./Libraries/FatFs/Src/ff.c **** }
 4360              		.loc 1 990 2 is_stmt 1 view .LVU1560
 990:./Libraries/FatFs/Src/ff.c **** }
 4361              		.loc 1 990 26 is_stmt 0 view .LVU1561
 4362 00ee FB6A     		ldr	r3, [r7, #44]
 4363 00f0 019A     		ldr	r2, [sp, #4]
 990:./Libraries/FatFs/Src/ff.c **** }
 4364              		.loc 1 990 26 view .LVU1562
 4365 00f2 02FB0133 		mla	r3, r2, r1, r3
 4366              	.L373:
 4367              	.LVL390:
 990:./Libraries/FatFs/Src/ff.c **** }
 4368              		.loc 1 990 26 view .LVU1563
 4369              	.LBE866:
 4370              	.LBE865:
1559:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 4371              		.loc 1 1559 30 view .LVU1564
 4372 00f6 3B63     		str	r3, [r7, #48]
1559:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 4373              		.loc 1 1559 54 is_stmt 1 view .LVU1565
1559:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 4374              		.loc 1 1559 6 is_stmt 0 view .LVU1566
 4375 00f8 21B3     		cbz	r1, .L379
1559:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 4376              		.loc 1 1559 13 view .LVU1567
 4377 00fa 4FF0000A 		mov	r10, #0
 4378 00fe 05E0     		b	.L375
 4379              	.LVL391:
 4380              	.L396:
1559:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 4381              		.loc 1 1559 85 discriminator 2 view .LVU1568
 4382 0100 3B6B     		ldr	r3, [r7, #48]
1559:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 4383              		.loc 1 1559 60 discriminator 2 view .LVU1569
 4384 0102 7889     		ldrh	r0, [r7, #10]
ARM GAS  /tmp/ccaQXGqa.s 			page 159


1559:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 4385              		.loc 1 1559 85 discriminator 2 view .LVU1570
 4386 0104 0133     		adds	r3, r3, #1
1559:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 4387              		.loc 1 1559 6 discriminator 2 view .LVU1571
 4388 0106 5045     		cmp	r0, r10
1559:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 4389              		.loc 1 1559 85 discriminator 2 view .LVU1572
 4390 0108 3B63     		str	r3, [r7, #48]
1559:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 4391              		.loc 1 1559 54 is_stmt 1 discriminator 2 view .LVU1573
1559:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 4392              		.loc 1 1559 6 is_stmt 0 discriminator 2 view .LVU1574
 4393 010a 0BD9     		bls	.L395
 4394              	.LVL392:
 4395              	.L375:
1560:./Libraries/FatFs/Src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 4396              		.loc 1 1560 7 is_stmt 1 view .LVU1575
1560:./Libraries/FatFs/Src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 4397              		.loc 1 1560 17 is_stmt 0 view .LVU1576
 4398 010c 4FF00103 		mov	r3, #1
 4399              	.LBB868:
 4400              	.LBB869:
 4401 0110 3846     		mov	r0, r7
 4402              	.LBE869:
 4403              	.LBE868:
1559:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 4404              		.loc 1 1559 70 view .LVU1577
 4405 0112 0AF1010A 		add	r10, r10, #1
 4406              	.LVL393:
1560:./Libraries/FatFs/Src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 4407              		.loc 1 1560 17 view .LVU1578
 4408 0116 FB70     		strb	r3, [r7, #3]
1561:./Libraries/FatFs/Src/ff.c **** 					}
 4409              		.loc 1 1561 7 is_stmt 1 view .LVU1579
 4410              	.LVL394:
 4411              	.LBB872:
 4412              	.LBI868:
 883:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs			/* File system object */
 4413              		.loc 1 883 9 view .LVU1580
 4414              	.LBB870:
 887:./Libraries/FatFs/Src/ff.c **** 	UINT nf;
 4415              		.loc 1 887 2 view .LVU1581
 888:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_OK;
 4416              		.loc 1 888 2 view .LVU1582
 889:./Libraries/FatFs/Src/ff.c **** 
 4417              		.loc 1 889 2 view .LVU1583
 892:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 4418              		.loc 1 892 2 view .LVU1584
 4419 0118 FFF7FEFF 		bl	sync_window.part.0
 4420              	.LVL395:
 4421              	.LBE870:
 4422              	.LBE872:
1559:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 4423              		.loc 1 1559 69 view .LVU1585
 4424              	.LBB873:
 4425              	.LBB871:
ARM GAS  /tmp/ccaQXGqa.s 			page 160


 906:./Libraries/FatFs/Src/ff.c **** }
 4426              		.loc 1 906 2 view .LVU1586
 906:./Libraries/FatFs/Src/ff.c **** }
 4427              		.loc 1 906 2 is_stmt 0 view .LVU1587
 4428              	.LBE871:
 4429              	.LBE873:
1561:./Libraries/FatFs/Src/ff.c **** 					}
 4430              		.loc 1 1561 10 view .LVU1588
 4431 011c 0028     		cmp	r0, #0
 4432 011e EFD0     		beq	.L396
 4433              	.LVL396:
 4434              	.L368:
1545:./Libraries/FatFs/Src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 4435              		.loc 1 1545 36 view .LVU1589
 4436 0120 0120     		movs	r0, #1
 4437 0122 85E7     		b	.L357
 4438              	.LVL397:
 4439              	.L395:
1545:./Libraries/FatFs/Src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 4440              		.loc 1 1545 36 view .LVU1590
 4441 0124 B869     		ldr	r0, [r7, #24]
 4442              	.LVL398:
 4443              	.L374:
1563:./Libraries/FatFs/Src/ff.c **** #else
 4444              		.loc 1 1563 6 is_stmt 1 view .LVU1591
1563:./Libraries/FatFs/Src/ff.c **** #else
 4445              		.loc 1 1563 18 is_stmt 0 view .LVU1592
 4446 0126 A3EB0A03 		sub	r3, r3, r10
 4447 012a 0146     		mov	r1, r0
 4448 012c 3B63     		str	r3, [r7, #48]
 4449 012e 9EE7     		b	.L366
 4450              	.LVL399:
 4451              	.L378:
1552:./Libraries/FatFs/Src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 4452              		.loc 1 1552 28 view .LVU1593
 4453 0130 0720     		movs	r0, #7
 4454              	.LVL400:
1552:./Libraries/FatFs/Src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 4455              		.loc 1 1552 28 view .LVU1594
 4456 0132 7DE7     		b	.L357
 4457              	.LVL401:
 4458              	.L369:
 4459              	.LBB874:
 4460              	.LBB862:
1552:./Libraries/FatFs/Src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 4461              		.loc 1 1552 28 view .LVU1595
 4462 0134 3846     		mov	r0, r7
 4463              	.LVL402:
1552:./Libraries/FatFs/Src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 4464              		.loc 1 1552 28 view .LVU1596
 4465 0136 FFF7FEFF 		bl	sync_window.part.0
 4466              	.LVL403:
 906:./Libraries/FatFs/Src/ff.c **** }
 4467              		.loc 1 906 2 is_stmt 1 view .LVU1597
 906:./Libraries/FatFs/Src/ff.c **** }
 4468              		.loc 1 906 2 is_stmt 0 view .LVU1598
 4469              	.LBE862:
ARM GAS  /tmp/ccaQXGqa.s 			page 161


 4470              	.LBE874:
1557:./Libraries/FatFs/Src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 4471              		.loc 1 1557 9 view .LVU1599
 4472 013a 0028     		cmp	r0, #0
 4473 013c C4D0     		beq	.L371
 4474 013e EFE7     		b	.L368
 4475              	.LVL404:
 4476              	.L394:
 4477              	.LBB875:
 4478              	.LBB867:
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 4479              		.loc 1 989 39 view .LVU1600
 4480 0140 0023     		movs	r3, #0
 4481 0142 D8E7     		b	.L373
 4482              	.LVL405:
 4483              	.L379:
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 4484              		.loc 1 989 39 view .LVU1601
 4485              	.LBE867:
 4486              	.LBE875:
1559:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 4487              		.loc 1 1559 13 view .LVU1602
 4488 0144 8A46     		mov	r10, r1
 4489 0146 EEE7     		b	.L374
 4490              		.cfi_endproc
 4491              	.LFE360:
 4493              		.section	.text.unlock_fs.part.0,"ax",%progbits
 4494              		.align	1
 4495              		.p2align 2,,3
 4496              		.syntax unified
 4497              		.thumb
 4498              		.thumb_func
 4499              		.fpu fpv5-d16
 4501              	unlock_fs.part.0:
 4502              	.LVL406:
 4503              	.LFB411:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 4504              		.loc 1 751 6 is_stmt 1 view -0
 4505              		.cfi_startproc
 4506              		@ args = 0, pretend = 0, frame = 0
 4507              		@ frame_needed = 0, uses_anonymous_args = 0
 4508              		@ link register save eliminated.
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 4509              		.loc 1 756 61 is_stmt 0 view .LVU1604
 4510 0000 01F0FB01 		and	r1, r1, #251
 4511              	.LVL407:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 4512              		.loc 1 756 61 view .LVU1605
 4513 0004 0B29     		cmp	r1, #11
 4514 0006 00D1     		bne	.L399
 759:./Libraries/FatFs/Src/ff.c **** 
 4515              		.loc 1 759 1 view .LVU1606
 4516 0008 7047     		bx	lr
 4517              	.L399:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 4518              		.loc 1 757 3 is_stmt 1 view .LVU1607
 4519 000a C068     		ldr	r0, [r0, #12]
ARM GAS  /tmp/ccaQXGqa.s 			page 162


 4520              	.LVL408:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 4521              		.loc 1 757 3 is_stmt 0 view .LVU1608
 4522 000c FFF7FEBF 		b	ff_rel_grant
 4523              	.LVL409:
 4524              		.cfi_endproc
 4525              	.LFE411:
 4527              		.section	.text.dir_read.constprop.0,"ax",%progbits
 4528              		.align	1
 4529              		.p2align 2,,3
 4530              		.syntax unified
 4531              		.thumb
 4532              		.thumb_func
 4533              		.fpu fpv5-d16
 4535              	dir_read.constprop.0:
 4536              	.LVL410:
 4537              	.LFB414:
2131:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
 4538              		.loc 1 2131 9 is_stmt 1 view -0
 4539              		.cfi_startproc
 4540              		@ args = 0, pretend = 0, frame = 0
 4541              		@ frame_needed = 0, uses_anonymous_args = 0
2136:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
 4542              		.loc 1 2136 2 view .LVU1610
2137:./Libraries/FatFs/Src/ff.c **** 	BYTE a, c;
 4543              		.loc 1 2137 2 view .LVU1611
2131:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
 4544              		.loc 1 2131 9 is_stmt 0 view .LVU1612
 4545 0000 70B5     		push	{r4, r5, r6, lr}
 4546              	.LCFI47:
 4547              		.cfi_def_cfa_offset 16
 4548              		.cfi_offset 4, -16
 4549              		.cfi_offset 5, -12
 4550              		.cfi_offset 6, -8
 4551              		.cfi_offset 14, -4
2136:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
 4552              		.loc 1 2136 10 view .LVU1613
 4553 0002 0423     		movs	r3, #4
2131:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
 4554              		.loc 1 2131 9 view .LVU1614
 4555 0004 0446     		mov	r4, r0
2137:./Libraries/FatFs/Src/ff.c **** 	BYTE a, c;
 4556              		.loc 1 2137 9 view .LVU1615
 4557 0006 0568     		ldr	r5, [r0]
 4558              	.LVL411:
2138:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0
 4559              		.loc 1 2138 2 is_stmt 1 view .LVU1616
2143:./Libraries/FatFs/Src/ff.c **** 		res = move_window(fs, dp->sect);
 4560              		.loc 1 2143 2 view .LVU1617
2143:./Libraries/FatFs/Src/ff.c **** 		res = move_window(fs, dp->sect);
 4561              		.loc 1 2143 8 is_stmt 0 view .LVU1618
 4562 0008 1DE0     		b	.L401
 4563              	.LVL412:
 4564              	.L408:
 4565              	.LBB876:
 4566              	.LBB877:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
ARM GAS  /tmp/ccaQXGqa.s 			page 163


 4567              		.loc 1 920 5 view .LVU1619
 4568 000a 2B6B     		ldr	r3, [r5, #48]
 4569 000c 9342     		cmp	r3, r2
 4570 000e 03D0     		beq	.L405
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 4571              		.loc 1 920 5 view .LVU1620
 4572 0010 FFF7FEFF 		bl	move_window.part.0
 4573              	.LVL413:
 932:./Libraries/FatFs/Src/ff.c **** }
 4574              		.loc 1 932 2 is_stmt 1 view .LVU1621
 932:./Libraries/FatFs/Src/ff.c **** }
 4575              		.loc 1 932 2 is_stmt 0 view .LVU1622
 4576              	.LBE877:
 4577              	.LBE876:
2145:./Libraries/FatFs/Src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
 4578              		.loc 1 2145 3 is_stmt 1 view .LVU1623
2145:./Libraries/FatFs/Src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
 4579              		.loc 1 2145 6 is_stmt 0 view .LVU1624
 4580 0014 0346     		mov	r3, r0
 4581 0016 00BB     		cbnz	r0, .L403
 4582              	.LVL414:
 4583              	.L405:
2146:./Libraries/FatFs/Src/ff.c **** 		if (c == 0) {
 4584              		.loc 1 2146 3 is_stmt 1 view .LVU1625
2167:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 4585              		.loc 1 2167 4 view .LVU1626
2193:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) break;
 4586              		.loc 1 2193 3 view .LVU1627
2146:./Libraries/FatFs/Src/ff.c **** 		if (c == 0) {
 4587              		.loc 1 2146 9 is_stmt 0 view .LVU1628
 4588 0018 236A     		ldr	r3, [r4, #32]
2193:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) break;
 4589              		.loc 1 2193 9 view .LVU1629
 4590 001a 0021     		movs	r1, #0
 4591 001c 2046     		mov	r0, r4
2146:./Libraries/FatFs/Src/ff.c **** 		if (c == 0) {
 4592              		.loc 1 2146 5 view .LVU1630
 4593 001e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4594              	.LVL415:
2147:./Libraries/FatFs/Src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
 4595              		.loc 1 2147 3 is_stmt 1 view .LVU1631
2147:./Libraries/FatFs/Src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
 4596              		.loc 1 2147 6 is_stmt 0 view .LVU1632
 4597 0020 D2B1     		cbz	r2, .L425
 4598              	.LVL416:
2167:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 4599              		.loc 1 2167 21 view .LVU1633
 4600 0022 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
2188:./Libraries/FatFs/Src/ff.c **** 				break;
 4601              		.loc 1 2188 30 view .LVU1634
 4602 0024 E52A     		cmp	r2, #229
 4603 0026 18BF     		it	ne
 4604 0028 2E2A     		cmpne	r2, #46
2167:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 4605              		.loc 1 2167 21 view .LVU1635
 4606 002a 03F03F03 		and	r3, r3, #63
 4607              	.LVL417:
ARM GAS  /tmp/ccaQXGqa.s 			page 164


2188:./Libraries/FatFs/Src/ff.c **** 				break;
 4608              		.loc 1 2188 57 view .LVU1636
 4609 002e 23F02006 		bic	r6, r3, #32
2167:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 4610              		.loc 1 2167 17 view .LVU1637
 4611 0032 A371     		strb	r3, [r4, #6]
2188:./Libraries/FatFs/Src/ff.c **** 				break;
 4612              		.loc 1 2188 4 is_stmt 1 view .LVU1638
2188:./Libraries/FatFs/Src/ff.c **** 				break;
 4613              		.loc 1 2188 30 is_stmt 0 view .LVU1639
 4614 0034 03D0     		beq	.L406
 4615 0036 0F2B     		cmp	r3, #15
 4616 0038 01D0     		beq	.L406
2188:./Libraries/FatFs/Src/ff.c **** 				break;
 4617              		.loc 1 2188 45 view .LVU1640
 4618 003a 082E     		cmp	r6, #8
 4619 003c 09D1     		bne	.L409
 4620              	.L406:
2193:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) break;
 4621              		.loc 1 2193 9 view .LVU1641
 4622 003e FFF7FEFF 		bl	dir_next
 4623              	.LVL418:
2194:./Libraries/FatFs/Src/ff.c **** 	}
 4624              		.loc 1 2194 3 is_stmt 1 view .LVU1642
2194:./Libraries/FatFs/Src/ff.c **** 	}
 4625              		.loc 1 2194 6 is_stmt 0 view .LVU1643
 4626 0042 0346     		mov	r3, r0
 4627 0044 48B9     		cbnz	r0, .L403
 4628              	.LVL419:
 4629              	.L401:
2144:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) break;
 4630              		.loc 1 2144 3 is_stmt 1 view .LVU1644
2143:./Libraries/FatFs/Src/ff.c **** 		res = move_window(fs, dp->sect);
 4631              		.loc 1 2143 8 view .LVU1645
2143:./Libraries/FatFs/Src/ff.c **** 		res = move_window(fs, dp->sect);
 4632              		.loc 1 2143 11 is_stmt 0 view .LVU1646
 4633 0046 E269     		ldr	r2, [r4, #28]
 4634              	.LVL420:
 4635              	.LBB879:
 4636              	.LBI876:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 4637              		.loc 1 912 9 is_stmt 1 view .LVU1647
 4638              	.LBB878:
 917:./Libraries/FatFs/Src/ff.c **** 
 4639              		.loc 1 917 2 view .LVU1648
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 4640              		.loc 1 920 2 view .LVU1649
 4641 0048 2846     		mov	r0, r5
 4642 004a 1146     		mov	r1, r2
 4643              	.LBE878:
 4644              	.LBE879:
2143:./Libraries/FatFs/Src/ff.c **** 		res = move_window(fs, dp->sect);
 4645              		.loc 1 2143 8 is_stmt 0 view .LVU1650
 4646 004c 002A     		cmp	r2, #0
 4647 004e DCD1     		bne	.L408
 4648              	.LVL421:
2197:./Libraries/FatFs/Src/ff.c **** 	return res;
ARM GAS  /tmp/ccaQXGqa.s 			page 165


 4649              		.loc 1 2197 2 is_stmt 1 view .LVU1651
2197:./Libraries/FatFs/Src/ff.c **** 	return res;
 4650              		.loc 1 2197 5 is_stmt 0 view .LVU1652
 4651 0050 1BB9     		cbnz	r3, .L403
 4652              	.LVL422:
 4653              	.L409:
2148:./Libraries/FatFs/Src/ff.c **** 		}
 4654              		.loc 1 2148 8 view .LVU1653
 4655 0052 0023     		movs	r3, #0
2198:./Libraries/FatFs/Src/ff.c **** }
 4656              		.loc 1 2198 2 is_stmt 1 view .LVU1654
2199:./Libraries/FatFs/Src/ff.c **** 
 4657              		.loc 1 2199 1 is_stmt 0 view .LVU1655
 4658 0054 1846     		mov	r0, r3
 4659 0056 70BD     		pop	{r4, r5, r6, pc}
 4660              	.LVL423:
 4661              	.L425:
2148:./Libraries/FatFs/Src/ff.c **** 		}
 4662              		.loc 1 2148 8 view .LVU1656
 4663 0058 0423     		movs	r3, #4
 4664              	.LVL424:
 4665              	.L403:
2197:./Libraries/FatFs/Src/ff.c **** 	return res;
 4666              		.loc 1 2197 20 is_stmt 1 view .LVU1657
2197:./Libraries/FatFs/Src/ff.c **** 	return res;
 4667              		.loc 1 2197 29 is_stmt 0 view .LVU1658
 4668 005a 0022     		movs	r2, #0
2199:./Libraries/FatFs/Src/ff.c **** 
 4669              		.loc 1 2199 1 view .LVU1659
 4670 005c 1846     		mov	r0, r3
2197:./Libraries/FatFs/Src/ff.c **** 	return res;
 4671              		.loc 1 2197 29 view .LVU1660
 4672 005e E261     		str	r2, [r4, #28]
 4673              	.LVL425:
2198:./Libraries/FatFs/Src/ff.c **** }
 4674              		.loc 1 2198 2 is_stmt 1 view .LVU1661
2199:./Libraries/FatFs/Src/ff.c **** 
 4675              		.loc 1 2199 1 is_stmt 0 view .LVU1662
 4676 0060 70BD     		pop	{r4, r5, r6, pc}
2199:./Libraries/FatFs/Src/ff.c **** 
 4677              		.loc 1 2199 1 view .LVU1663
 4678              		.cfi_endproc
 4679              	.LFE414:
 4681 0062 00BF     		.section	.text.dir_sdi.constprop.0,"ax",%progbits
 4682              		.align	1
 4683              		.p2align 2,,3
 4684              		.syntax unified
 4685              		.thumb
 4686              		.thumb_func
 4687              		.fpu fpv5-d16
 4689              	dir_sdi.constprop.0:
 4690              	.LVL426:
 4691              	.LFB412:
1470:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
 4692              		.loc 1 1470 9 is_stmt 1 view -0
 4693              		.cfi_startproc
 4694              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccaQXGqa.s 			page 166


 4695              		@ frame_needed = 0, uses_anonymous_args = 0
1475:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
 4696              		.loc 1 1475 2 view .LVU1665
1476:./Libraries/FatFs/Src/ff.c **** 
 4697              		.loc 1 1476 2 view .LVU1666
1470:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
 4698              		.loc 1 1470 9 is_stmt 0 view .LVU1667
 4699 0000 38B5     		push	{r3, r4, r5, lr}
 4700              	.LCFI48:
 4701              		.cfi_def_cfa_offset 16
 4702              		.cfi_offset 3, -16
 4703              		.cfi_offset 4, -12
 4704              		.cfi_offset 5, -8
 4705              		.cfi_offset 14, -4
1483:./Libraries/FatFs/Src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 4706              		.loc 1 1483 7 view .LVU1668
 4707 0002 8168     		ldr	r1, [r0, #8]
1482:./Libraries/FatFs/Src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 4708              		.loc 1 1482 11 view .LVU1669
 4709 0004 0023     		movs	r3, #0
1470:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
 4710              		.loc 1 1470 9 view .LVU1670
 4711 0006 0446     		mov	r4, r0
1476:./Libraries/FatFs/Src/ff.c **** 
 4712              		.loc 1 1476 9 view .LVU1671
 4713 0008 0568     		ldr	r5, [r0]
 4714              	.LVL427:
1479:./Libraries/FatFs/Src/ff.c **** 		return FR_INT_ERR;
 4715              		.loc 1 1479 2 is_stmt 1 view .LVU1672
1482:./Libraries/FatFs/Src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 4716              		.loc 1 1482 2 view .LVU1673
1483:./Libraries/FatFs/Src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 4717              		.loc 1 1483 2 view .LVU1674
1484:./Libraries/FatFs/Src/ff.c **** 		clst = fs->dirbase;
 4718              		.loc 1 1484 2 view .LVU1675
1482:./Libraries/FatFs/Src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 4719              		.loc 1 1482 11 is_stmt 0 view .LVU1676
 4720 000a 4361     		str	r3, [r0, #20]
1484:./Libraries/FatFs/Src/ff.c **** 		clst = fs->dirbase;
 4721              		.loc 1 1484 5 view .LVU1677
 4722 000c 81B9     		cbnz	r1, .L427
1484:./Libraries/FatFs/Src/ff.c **** 		clst = fs->dirbase;
 4723              		.loc 1 1484 16 view .LVU1678
 4724 000e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4725 0010 022B     		cmp	r3, #2
 4726 0012 09D8     		bhi	.L443
 4727              	.LVL428:
 4728              	.L428:
1490:./Libraries/FatFs/Src/ff.c **** 		dp->sect = fs->dirbase;
 4729              		.loc 1 1490 3 is_stmt 1 view .LVU1679
1490:./Libraries/FatFs/Src/ff.c **** 		dp->sect = fs->dirbase;
 4730              		.loc 1 1490 6 is_stmt 0 view .LVU1680
 4731 0014 2B89     		ldrh	r3, [r5, #8]
 4732 0016 F3B1     		cbz	r3, .L433
1491:./Libraries/FatFs/Src/ff.c **** 
 4733              		.loc 1 1491 3 is_stmt 1 view .LVU1681
1491:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 167


 4734              		.loc 1 1491 16 is_stmt 0 view .LVU1682
 4735 0018 AB6A     		ldr	r3, [r5, #40]
1491:./Libraries/FatFs/Src/ff.c **** 
 4736              		.loc 1 1491 12 view .LVU1683
 4737 001a E361     		str	r3, [r4, #28]
 4738              	.LVL429:
 4739              	.L431:
1503:./Libraries/FatFs/Src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
 4740              		.loc 1 1503 2 is_stmt 1 view .LVU1684
1503:./Libraries/FatFs/Src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
 4741              		.loc 1 1503 12 is_stmt 0 view .LVU1685
 4742 001c A161     		str	r1, [r4, #24]
1504:./Libraries/FatFs/Src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 4743              		.loc 1 1504 2 is_stmt 1 view .LVU1686
1504:./Libraries/FatFs/Src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 4744              		.loc 1 1504 5 is_stmt 0 view .LVU1687
 4745 001e D3B1     		cbz	r3, .L433
1505:./Libraries/FatFs/Src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 4746              		.loc 1 1505 2 is_stmt 1 view .LVU1688
1506:./Libraries/FatFs/Src/ff.c **** 
 4747              		.loc 1 1506 2 view .LVU1689
1506:./Libraries/FatFs/Src/ff.c **** 
 4748              		.loc 1 1506 12 is_stmt 0 view .LVU1690
 4749 0020 3435     		adds	r5, r5, #52
 4750              	.LVL430:
1508:./Libraries/FatFs/Src/ff.c **** }
 4751              		.loc 1 1508 9 view .LVU1691
 4752 0022 0020     		movs	r0, #0
1506:./Libraries/FatFs/Src/ff.c **** 
 4753              		.loc 1 1506 10 view .LVU1692
 4754 0024 2562     		str	r5, [r4, #32]
1508:./Libraries/FatFs/Src/ff.c **** }
 4755              		.loc 1 1508 2 is_stmt 1 view .LVU1693
1509:./Libraries/FatFs/Src/ff.c **** 
 4756              		.loc 1 1509 1 is_stmt 0 view .LVU1694
 4757 0026 38BD     		pop	{r3, r4, r5, pc}
 4758              	.LVL431:
 4759              	.L443:
1485:./Libraries/FatFs/Src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
 4760              		.loc 1 1485 3 is_stmt 1 view .LVU1695
1485:./Libraries/FatFs/Src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
 4761              		.loc 1 1485 8 is_stmt 0 view .LVU1696
 4762 0028 AB6A     		ldr	r3, [r5, #40]
 4763              	.LVL432:
1486:./Libraries/FatFs/Src/ff.c **** 	}
 4764              		.loc 1 1486 3 is_stmt 1 view .LVU1697
1489:./Libraries/FatFs/Src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
 4765              		.loc 1 1489 2 view .LVU1698
1489:./Libraries/FatFs/Src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
 4766              		.loc 1 1489 5 is_stmt 0 view .LVU1699
 4767 002a 002B     		cmp	r3, #0
 4768 002c F2D0     		beq	.L428
 4769 002e 1946     		mov	r1, r3
 4770              	.LVL433:
 4771              	.L427:
1494:./Libraries/FatFs/Src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
 4772              		.loc 1 1494 3 is_stmt 1 view .LVU1700
ARM GAS  /tmp/ccaQXGqa.s 			page 168


1494:./Libraries/FatFs/Src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
 4773              		.loc 1 1494 9 is_stmt 0 view .LVU1701
 4774 0030 6B89     		ldrh	r3, [r5, #10]
 4775              	.LVL434:
1495:./Libraries/FatFs/Src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 4776              		.loc 1 1495 3 is_stmt 1 view .LVU1702
1495:./Libraries/FatFs/Src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 4777              		.loc 1 1495 9 view .LVU1703
 4778 0032 2BB1     		cbz	r3, .L434
1495:./Libraries/FatFs/Src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 4779              		.loc 1 1495 9 is_stmt 0 view .LVU1704
 4780 0034 11E0     		b	.L441
 4781              	.LVL435:
 4782              	.L444:
1498:./Libraries/FatFs/Src/ff.c **** 			ofs -= csz;
 4783              		.loc 1 1498 7 view .LVU1705
 4784 0036 0128     		cmp	r0, #1
 4785 0038 0DD9     		bls	.L433
1498:./Libraries/FatFs/Src/ff.c **** 			ofs -= csz;
 4786              		.loc 1 1498 17 view .LVU1706
 4787 003a AB69     		ldr	r3, [r5, #24]
 4788 003c 9842     		cmp	r0, r3
 4789 003e 0AD2     		bcs	.L433
 4790              	.LVL436:
 4791              	.L434:
1496:./Libraries/FatFs/Src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 4792              		.loc 1 1496 4 is_stmt 1 view .LVU1707
1496:./Libraries/FatFs/Src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 4793              		.loc 1 1496 11 is_stmt 0 view .LVU1708
 4794 0040 2068     		ldr	r0, [r4]
 4795 0042 FFF7FEFF 		bl	get_fat.isra.0
 4796              	.LVL437:
1498:./Libraries/FatFs/Src/ff.c **** 			ofs -= csz;
 4797              		.loc 1 1498 4 is_stmt 1 view .LVU1709
1497:./Libraries/FatFs/Src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 4798              		.loc 1 1497 7 is_stmt 0 view .LVU1710
 4799 0046 431C     		adds	r3, r0, #1
1496:./Libraries/FatFs/Src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 4800              		.loc 1 1496 11 view .LVU1711
 4801 0048 0146     		mov	r1, r0
 4802              	.LVL438:
1497:./Libraries/FatFs/Src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 4803              		.loc 1 1497 4 is_stmt 1 view .LVU1712
1497:./Libraries/FatFs/Src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 4804              		.loc 1 1497 7 is_stmt 0 view .LVU1713
 4805 004a F4D1     		bne	.L444
1497:./Libraries/FatFs/Src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 4806              		.loc 1 1497 35 view .LVU1714
 4807 004c 0120     		movs	r0, #1
 4808              	.LVL439:
1509:./Libraries/FatFs/Src/ff.c **** 
 4809              		.loc 1 1509 1 view .LVU1715
 4810 004e 38BD     		pop	{r3, r4, r5, pc}
 4811              	.LVL440:
 4812              	.L445:
1501:./Libraries/FatFs/Src/ff.c **** 	}
 4813              		.loc 1 1501 12 view .LVU1716
ARM GAS  /tmp/ccaQXGqa.s 			page 169


 4814 0050 0023     		movs	r3, #0
 4815              	.LVL441:
1501:./Libraries/FatFs/Src/ff.c **** 	}
 4816              		.loc 1 1501 12 view .LVU1717
 4817 0052 C4E90613 		strd	r1, r3, [r4, #24]
 4818              	.LVL442:
1503:./Libraries/FatFs/Src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
 4819              		.loc 1 1503 2 is_stmt 1 view .LVU1718
1504:./Libraries/FatFs/Src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 4820              		.loc 1 1504 2 view .LVU1719
 4821              	.L433:
1490:./Libraries/FatFs/Src/ff.c **** 		dp->sect = fs->dirbase;
 4822              		.loc 1 1490 45 is_stmt 0 view .LVU1720
 4823 0056 0220     		movs	r0, #2
1509:./Libraries/FatFs/Src/ff.c **** 
 4824              		.loc 1 1509 1 view .LVU1721
 4825 0058 38BD     		pop	{r3, r4, r5, pc}
 4826              	.LVL443:
 4827              	.L441:
1501:./Libraries/FatFs/Src/ff.c **** 	}
 4828              		.loc 1 1501 3 is_stmt 1 view .LVU1722
 4829              	.LBB880:
 4830              	.LBI880:
 983:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 4831              		.loc 1 983 7 view .LVU1723
 4832              	.LBB881:
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 4833              		.loc 1 988 2 view .LVU1724
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 4834              		.loc 1 989 27 is_stmt 0 view .LVU1725
 4835 005a AA69     		ldr	r2, [r5, #24]
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 4836              		.loc 1 988 7 view .LVU1726
 4837 005c 881E     		subs	r0, r1, #2
 4838              	.LVL444:
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 4839              		.loc 1 989 2 is_stmt 1 view .LVU1727
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 4840              		.loc 1 989 27 is_stmt 0 view .LVU1728
 4841 005e 023A     		subs	r2, r2, #2
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 4842              		.loc 1 989 5 view .LVU1729
 4843 0060 9042     		cmp	r0, r2
 4844 0062 F5D2     		bcs	.L445
 990:./Libraries/FatFs/Src/ff.c **** }
 4845              		.loc 1 990 2 is_stmt 1 view .LVU1730
 990:./Libraries/FatFs/Src/ff.c **** }
 4846              		.loc 1 990 26 is_stmt 0 view .LVU1731
 4847 0064 EA6A     		ldr	r2, [r5, #44]
 4848 0066 00FB0323 		mla	r3, r0, r3, r2
 4849              	.LVL445:
 990:./Libraries/FatFs/Src/ff.c **** }
 4850              		.loc 1 990 26 view .LVU1732
 4851              	.LBE881:
 4852              	.LBE880:
1501:./Libraries/FatFs/Src/ff.c **** 	}
 4853              		.loc 1 1501 12 view .LVU1733
ARM GAS  /tmp/ccaQXGqa.s 			page 170


 4854 006a E361     		str	r3, [r4, #28]
 4855 006c D6E7     		b	.L431
 4856              		.cfi_endproc
 4857              	.LFE412:
 4859 006e 00BF     		.section	.text.dir_register,"ax",%progbits
 4860              		.align	1
 4861              		.p2align 2,,3
 4862              		.syntax unified
 4863              		.thumb
 4864              		.thumb_func
 4865              		.fpu fpv5-d16
 4867              	dir_register:
 4868              	.LVL446:
 4869              	.LFB366:
2295:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 4870              		.loc 1 2295 1 is_stmt 1 view -0
 4871              		.cfi_startproc
 4872              		@ args = 0, pretend = 0, frame = 0
 4873              		@ frame_needed = 0, uses_anonymous_args = 0
2296:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
 4874              		.loc 1 2296 2 view .LVU1735
2297:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 4875              		.loc 1 2297 2 view .LVU1736
2295:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 4876              		.loc 1 2295 1 is_stmt 0 view .LVU1737
 4877 0000 70B5     		push	{r4, r5, r6, lr}
 4878              	.LCFI49:
 4879              		.cfi_def_cfa_offset 16
 4880              		.cfi_offset 4, -16
 4881              		.cfi_offset 5, -12
 4882              		.cfi_offset 6, -8
 4883              		.cfi_offset 14, -4
2295:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 4884              		.loc 1 2295 1 view .LVU1738
 4885 0002 0446     		mov	r4, r0
2297:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 4886              		.loc 1 2297 9 view .LVU1739
 4887 0004 0668     		ldr	r6, [r0]
 4888              	.LVL447:
2366:./Libraries/FatFs/Src/ff.c **** 
 4889              		.loc 1 2366 2 is_stmt 1 view .LVU1740
 4890              	.LBB892:
 4891              	.LBI892:
1589:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
 4892              		.loc 1 1589 9 view .LVU1741
 4893              	.LBB893:
1594:./Libraries/FatFs/Src/ff.c **** 	UINT n;
 4894              		.loc 1 1594 2 view .LVU1742
1595:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
 4895              		.loc 1 1595 2 view .LVU1743
1596:./Libraries/FatFs/Src/ff.c **** 
 4896              		.loc 1 1596 2 view .LVU1744
1599:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 4897              		.loc 1 1599 2 view .LVU1745
1599:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 4898              		.loc 1 1599 8 is_stmt 0 view .LVU1746
 4899 0006 FFF7FEFF 		bl	dir_sdi.constprop.0
ARM GAS  /tmp/ccaQXGqa.s 			page 171


 4900              	.LVL448:
1600:./Libraries/FatFs/Src/ff.c **** 		n = 0;
 4901              		.loc 1 1600 2 is_stmt 1 view .LVU1747
1600:./Libraries/FatFs/Src/ff.c **** 		n = 0;
 4902              		.loc 1 1600 5 is_stmt 0 view .LVU1748
 4903 000a 0546     		mov	r5, r0
 4904 000c 48B1     		cbz	r0, .L454
 4905              	.L447:
 4906              	.LVL449:
1618:./Libraries/FatFs/Src/ff.c **** 	return res;
 4907              		.loc 1 1618 2 is_stmt 1 view .LVU1749
1618:./Libraries/FatFs/Src/ff.c **** 	return res;
 4908              		.loc 1 1618 29 is_stmt 0 view .LVU1750
 4909 000e 042D     		cmp	r5, #4
 4910 0010 08BF     		it	eq
 4911 0012 0725     		moveq	r5, #7
 4912              	.LVL450:
1618:./Libraries/FatFs/Src/ff.c **** 	return res;
 4913              		.loc 1 1618 29 view .LVU1751
 4914              	.LBE893:
 4915              	.LBE892:
2384:./Libraries/FatFs/Src/ff.c **** 
 4916              		.loc 1 2384 1 view .LVU1752
 4917 0014 2846     		mov	r0, r5
 4918 0016 70BD     		pop	{r4, r5, r6, pc}
 4919              	.LVL451:
 4920              	.L467:
 4921              	.LBB898:
 4922              	.LBB896:
1614:./Libraries/FatFs/Src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
 4923              		.loc 1 1614 4 is_stmt 1 view .LVU1753
1614:./Libraries/FatFs/Src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
 4924              		.loc 1 1614 10 is_stmt 0 view .LVU1754
 4925 0018 0121     		movs	r1, #1
 4926 001a 2046     		mov	r0, r4
 4927 001c FFF7FEFF 		bl	dir_next
 4928              	.LVL452:
1615:./Libraries/FatFs/Src/ff.c **** 	}
 4929              		.loc 1 1615 11 is_stmt 1 view .LVU1755
1615:./Libraries/FatFs/Src/ff.c **** 	}
 4930              		.loc 1 1615 3 is_stmt 0 view .LVU1756
 4931 0020 38BB     		cbnz	r0, .L457
 4932              	.LVL453:
 4933              	.L454:
1602:./Libraries/FatFs/Src/ff.c **** 			res = move_window(fs, dp->sect);
 4934              		.loc 1 1602 3 is_stmt 1 view .LVU1757
1603:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 4935              		.loc 1 1603 4 view .LVU1758
1603:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 4936              		.loc 1 1603 10 is_stmt 0 view .LVU1759
 4937 0022 E169     		ldr	r1, [r4, #28]
 4938              	.LVL454:
 4939              	.LBB894:
 4940              	.LBI894:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 4941              		.loc 1 912 9 is_stmt 1 view .LVU1760
 4942              	.LBB895:
ARM GAS  /tmp/ccaQXGqa.s 			page 172


 917:./Libraries/FatFs/Src/ff.c **** 
 4943              		.loc 1 917 2 view .LVU1761
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 4944              		.loc 1 920 2 view .LVU1762
 4945 0024 3046     		mov	r0, r6
 4946              	.LVL455:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 4947              		.loc 1 920 5 is_stmt 0 view .LVU1763
 4948 0026 336B     		ldr	r3, [r6, #48]
 4949 0028 9942     		cmp	r1, r3
 4950 002a 02D0     		beq	.L451
 4951              	.LVL456:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 4952              		.loc 1 920 5 view .LVU1764
 4953 002c FFF7FEFF 		bl	move_window.part.0
 4954              	.LVL457:
 932:./Libraries/FatFs/Src/ff.c **** }
 4955              		.loc 1 932 2 is_stmt 1 view .LVU1765
 932:./Libraries/FatFs/Src/ff.c **** }
 4956              		.loc 1 932 2 is_stmt 0 view .LVU1766
 4957              	.LBE895:
 4958              	.LBE894:
1604:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 4959              		.loc 1 1604 4 is_stmt 1 view .LVU1767
1604:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 4960              		.loc 1 1604 7 is_stmt 0 view .LVU1768
 4961 0030 F8B9     		cbnz	r0, .L457
 4962              	.LVL458:
 4963              	.L451:
1608:./Libraries/FatFs/Src/ff.c **** #endif
 4964              		.loc 1 1608 4 is_stmt 1 view .LVU1769
1608:./Libraries/FatFs/Src/ff.c **** #endif
 4965              		.loc 1 1608 15 is_stmt 0 view .LVU1770
 4966 0032 236A     		ldr	r3, [r4, #32]
 4967 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1608:./Libraries/FatFs/Src/ff.c **** #endif
 4968              		.loc 1 1608 7 view .LVU1771
 4969 0036 E52A     		cmp	r2, #229
 4970 0038 01D0     		beq	.L449
 4971 003a 002A     		cmp	r2, #0
 4972 003c ECD1     		bne	.L467
 4973              	.L449:
 4974              	.LVL459:
1608:./Libraries/FatFs/Src/ff.c **** #endif
 4975              		.loc 1 1608 7 view .LVU1772
 4976              	.LBE896:
 4977              	.LBE898:
2372:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
 4978              		.loc 1 2372 3 is_stmt 1 view .LVU1773
2372:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
 4979              		.loc 1 2372 9 is_stmt 0 view .LVU1774
 4980 003e E169     		ldr	r1, [r4, #28]
 4981              	.LVL460:
 4982              	.LBB899:
 4983              	.LBI899:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 4984              		.loc 1 912 9 is_stmt 1 view .LVU1775
ARM GAS  /tmp/ccaQXGqa.s 			page 173


 4985              	.LBB900:
 917:./Libraries/FatFs/Src/ff.c **** 
 4986              		.loc 1 917 2 view .LVU1776
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 4987              		.loc 1 920 2 view .LVU1777
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 4988              		.loc 1 920 5 is_stmt 0 view .LVU1778
 4989 0040 326B     		ldr	r2, [r6, #48]
 4990 0042 9142     		cmp	r1, r2
 4991 0044 04D0     		beq	.L453
 4992 0046 3046     		mov	r0, r6
 4993 0048 FFF7FEFF 		bl	move_window.part.0
 4994              	.LVL461:
 932:./Libraries/FatFs/Src/ff.c **** }
 4995              		.loc 1 932 2 is_stmt 1 view .LVU1779
 932:./Libraries/FatFs/Src/ff.c **** }
 4996              		.loc 1 932 2 is_stmt 0 view .LVU1780
 4997              	.LBE900:
 4998              	.LBE899:
2373:./Libraries/FatFs/Src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
 4999              		.loc 1 2373 3 is_stmt 1 view .LVU1781
2373:./Libraries/FatFs/Src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
 5000              		.loc 1 2373 6 is_stmt 0 view .LVU1782
 5001 004c 98B9     		cbnz	r0, .L465
 5002 004e 236A     		ldr	r3, [r4, #32]
 5003              	.LVL462:
 5004              	.L453:
2374:./Libraries/FatFs/Src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
 5005              		.loc 1 2374 4 is_stmt 1 view .LVU1783
 5006              	.LBB901:
 5007              	.LBI901:
 706:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 5008              		.loc 1 706 6 view .LVU1784
 5009              	.LBB902:
 707:./Libraries/FatFs/Src/ff.c **** 
 5010              		.loc 1 707 2 view .LVU1785
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 5011              		.loc 1 710 8 is_stmt 0 view .LVU1786
 5012 0050 0021     		movs	r1, #0
 5013 0052 03F12002 		add	r2, r3, #32
 5014              	.LVL463:
 5015              	.L455:
 709:./Libraries/FatFs/Src/ff.c **** 		*d++ = (BYTE)val;
 5016              		.loc 1 709 2 is_stmt 1 view .LVU1787
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 5017              		.loc 1 710 3 view .LVU1788
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 5018              		.loc 1 710 8 is_stmt 0 view .LVU1789
 5019 0056 03F8011B 		strb	r1, [r3], #1
 5020              	.LVL464:
 711:./Libraries/FatFs/Src/ff.c **** }
 5021              		.loc 1 711 10 is_stmt 1 view .LVU1790
 711:./Libraries/FatFs/Src/ff.c **** }
 5022              		.loc 1 711 2 is_stmt 0 view .LVU1791
 5023 005a 9342     		cmp	r3, r2
 5024 005c FBD1     		bne	.L455
 5025              	.LVL465:
ARM GAS  /tmp/ccaQXGqa.s 			page 174


 711:./Libraries/FatFs/Src/ff.c **** }
 5026              		.loc 1 711 2 view .LVU1792
 5027              	.LBE902:
 5028              	.LBE901:
2375:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0
 5029              		.loc 1 2375 4 is_stmt 1 view .LVU1793
 5030              	.LBB903:
 5031              	.LBI903:
 693:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 5032              		.loc 1 693 6 view .LVU1794
 5033              	.LBB904:
 694:./Libraries/FatFs/Src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 5034              		.loc 1 694 2 view .LVU1795
 695:./Libraries/FatFs/Src/ff.c **** 
 5035              		.loc 1 695 2 view .LVU1796
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 5036              		.loc 1 697 2 view .LVU1797
 5037 005e 206A     		ldr	r0, [r4, #32]
 5038 0060 0B22     		movs	r2, #11
 5039 0062 04F12401 		add	r1, r4, #36
 5040              	.LVL466:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 5041              		.loc 1 697 2 is_stmt 0 view .LVU1798
 5042 0066 FFF7FEFF 		bl	mem_cpy.part.0
 5043              	.LVL467:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 5044              		.loc 1 697 2 view .LVU1799
 5045              	.LBE904:
 5046              	.LBE903:
2379:./Libraries/FatFs/Src/ff.c **** 		}
 5047              		.loc 1 2379 4 is_stmt 1 view .LVU1800
2379:./Libraries/FatFs/Src/ff.c **** 		}
 5048              		.loc 1 2379 14 is_stmt 0 view .LVU1801
 5049 006a 0123     		movs	r3, #1
2384:./Libraries/FatFs/Src/ff.c **** 
 5050              		.loc 1 2384 1 view .LVU1802
 5051 006c 2846     		mov	r0, r5
2379:./Libraries/FatFs/Src/ff.c **** 		}
 5052              		.loc 1 2379 14 view .LVU1803
 5053 006e F370     		strb	r3, [r6, #3]
2384:./Libraries/FatFs/Src/ff.c **** 
 5054              		.loc 1 2384 1 view .LVU1804
 5055 0070 70BD     		pop	{r4, r5, r6, pc}
 5056              	.LVL468:
 5057              	.L457:
 5058              	.LBB905:
 5059              	.LBB897:
2384:./Libraries/FatFs/Src/ff.c **** 
 5060              		.loc 1 2384 1 view .LVU1805
 5061 0072 0546     		mov	r5, r0
 5062 0074 CBE7     		b	.L447
 5063              	.LVL469:
 5064              	.L465:
2384:./Libraries/FatFs/Src/ff.c **** 
 5065              		.loc 1 2384 1 view .LVU1806
 5066              	.LBE897:
 5067              	.LBE905:
ARM GAS  /tmp/ccaQXGqa.s 			page 175


 5068 0076 0546     		mov	r5, r0
 5069 0078 2846     		mov	r0, r5
 5070              	.LVL470:
2384:./Libraries/FatFs/Src/ff.c **** 
 5071              		.loc 1 2384 1 view .LVU1807
 5072 007a 70BD     		pop	{r4, r5, r6, pc}
2384:./Libraries/FatFs/Src/ff.c **** 
 5073              		.loc 1 2384 1 view .LVU1808
 5074              		.cfi_endproc
 5075              	.LFE366:
 5077              		.section	.rodata.follow_path.str1.4,"aMS",%progbits,1
 5078              		.align	2
 5079              	.LC0:
 5080 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 5080      3A3B3C3D 
 5080      3E3F5B5D 
 5080      7C7F00
 5081              		.section	.text.follow_path,"ax",%progbits
 5082              		.align	1
 5083              		.p2align 2,,3
 5084              		.syntax unified
 5085              		.thumb
 5086              		.thumb_func
 5087              		.fpu fpv5-d16
 5089              	follow_path:
 5090              	.LVL471:
 5091              	.LFB370:
2817:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 5092              		.loc 1 2817 1 is_stmt 1 view -0
 5093              		.cfi_startproc
 5094              		@ args = 0, pretend = 0, frame = 0
 5095              		@ frame_needed = 0, uses_anonymous_args = 0
2817:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 5096              		.loc 1 2817 1 is_stmt 0 view .LVU1810
 5097 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5098              	.LCFI50:
 5099              		.cfi_def_cfa_offset 40
 5100              		.cfi_offset 3, -40
 5101              		.cfi_offset 4, -36
 5102              		.cfi_offset 5, -32
 5103              		.cfi_offset 6, -28
 5104              		.cfi_offset 7, -24
 5105              		.cfi_offset 8, -20
 5106              		.cfi_offset 9, -16
 5107              		.cfi_offset 10, -12
 5108              		.cfi_offset 11, -8
 5109              		.cfi_offset 14, -4
2830:./Libraries/FatFs/Src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 5110              		.loc 1 2830 10 view .LVU1811
 5111 0004 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
2817:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 5112              		.loc 1 2817 1 view .LVU1812
 5113 0006 0D46     		mov	r5, r1
 5114 0008 0446     		mov	r4, r0
2818:./Libraries/FatFs/Src/ff.c **** 	BYTE ns;
 5115              		.loc 1 2818 2 is_stmt 1 view .LVU1813
2819:./Libraries/FatFs/Src/ff.c **** 	_FDID *obj = &dp->obj;
ARM GAS  /tmp/ccaQXGqa.s 			page 176


 5116              		.loc 1 2819 2 view .LVU1814
2820:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = obj->fs;
 5117              		.loc 1 2820 2 view .LVU1815
 5118              	.LVL472:
2821:./Libraries/FatFs/Src/ff.c **** 
 5119              		.loc 1 2821 2 view .LVU1816
2821:./Libraries/FatFs/Src/ff.c **** 
 5120              		.loc 1 2821 9 is_stmt 0 view .LVU1817
 5121 000a 0768     		ldr	r7, [r0]
 5122              	.LVL473:
2830:./Libraries/FatFs/Src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 5123              		.loc 1 2830 3 is_stmt 1 view .LVU1818
2830:./Libraries/FatFs/Src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 5124              		.loc 1 2830 9 view .LVU1819
 5125 000c 5C2B     		cmp	r3, #92
 5126 000e 01D0     		beq	.L531
 5127 0010 2F2B     		cmp	r3, #47
 5128 0012 05D1     		bne	.L469
 5129              	.LVL474:
 5130              	.L531:
2830:./Libraries/FatFs/Src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 5131              		.loc 1 2830 41 discriminator 2 view .LVU1820
2830:./Libraries/FatFs/Src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 5132              		.loc 1 2830 9 discriminator 2 view .LVU1821
2830:./Libraries/FatFs/Src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 5133              		.loc 1 2830 10 is_stmt 0 discriminator 2 view .LVU1822
 5134 0014 15F8013F 		ldrb	r3, [r5, #1]!	@ zero_extendqisi2
 5135              	.LVL475:
2830:./Libraries/FatFs/Src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 5136              		.loc 1 2830 9 discriminator 2 view .LVU1823
 5137 0018 2F2B     		cmp	r3, #47
 5138 001a FBD0     		beq	.L531
 5139 001c 5C2B     		cmp	r3, #92
 5140 001e F9D0     		beq	.L531
 5141              	.LVL476:
 5142              	.L469:
2831:./Libraries/FatFs/Src/ff.c **** 	}
 5143              		.loc 1 2831 3 is_stmt 1 view .LVU1824
2831:./Libraries/FatFs/Src/ff.c **** 	}
 5144              		.loc 1 2831 15 is_stmt 0 view .LVU1825
 5145 0020 0023     		movs	r3, #0
 5146 0022 A360     		str	r3, [r4, #8]
2850:./Libraries/FatFs/Src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
 5147              		.loc 1 2850 2 is_stmt 1 view .LVU1826
2850:./Libraries/FatFs/Src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
 5148              		.loc 1 2850 5 is_stmt 0 view .LVU1827
 5149 0024 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5150 0026 1F2B     		cmp	r3, #31
 5151 0028 40F2CB80 		bls	.L472
 5152 002c 04F12408 		add	r8, r4, #36
 5153 0030 04F12F0A 		add	r10, r4, #47
 5154              	.LBB924:
 5155              	.LBB925:
 5156              	.LBB926:
 5157              	.LBB927:
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 5158              		.loc 1 710 8 view .LVU1828
ARM GAS  /tmp/ccaQXGqa.s 			page 177


 5159 0034 4FF02009 		mov	r9, #32
 5160              	.LVL477:
 5161              	.L473:
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 5162              		.loc 1 710 8 view .LVU1829
 5163              	.LBE927:
 5164              	.LBE926:
 5165              	.LBE925:
 5166              	.LBE924:
2855:./Libraries/FatFs/Src/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
 5167              		.loc 1 2855 3 is_stmt 1 view .LVU1830
2856:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 5168              		.loc 1 2856 4 view .LVU1831
 5169              	.LBB940:
 5170              	.LBI924:
2618:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
 5171              		.loc 1 2618 9 view .LVU1832
 5172              	.LBB934:
2742:./Libraries/FatFs/Src/ff.c **** 	UINT ni, si, i;
 5173              		.loc 1 2742 2 view .LVU1833
2743:./Libraries/FatFs/Src/ff.c **** 	const char *p;
 5174              		.loc 1 2743 2 view .LVU1834
2744:./Libraries/FatFs/Src/ff.c **** 
 5175              		.loc 1 2744 2 view .LVU1835
2747:./Libraries/FatFs/Src/ff.c **** 	mem_set(sfn, ' ', 11);
 5176              		.loc 1 2747 2 view .LVU1836
2747:./Libraries/FatFs/Src/ff.c **** 	mem_set(sfn, ' ', 11);
 5177              		.loc 1 2747 13 view .LVU1837
2748:./Libraries/FatFs/Src/ff.c **** 	si = i = 0; ni = 8;
 5178              		.loc 1 2748 2 view .LVU1838
 5179              	.LBB929:
 5180              	.LBI926:
 706:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 5181              		.loc 1 706 6 view .LVU1839
 5182              	.LBB928:
 707:./Libraries/FatFs/Src/ff.c **** 
 5183              		.loc 1 707 2 view .LVU1840
 707:./Libraries/FatFs/Src/ff.c **** 
 5184              		.loc 1 707 8 is_stmt 0 view .LVU1841
 5185 0038 4346     		mov	r3, r8
 5186              	.LVL478:
 5187              	.L474:
 709:./Libraries/FatFs/Src/ff.c **** 		*d++ = (BYTE)val;
 5188              		.loc 1 709 2 is_stmt 1 view .LVU1842
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 5189              		.loc 1 710 3 view .LVU1843
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 5190              		.loc 1 710 8 is_stmt 0 view .LVU1844
 5191 003a 03F8019B 		strb	r9, [r3], #1
 5192              	.LVL479:
 711:./Libraries/FatFs/Src/ff.c **** }
 5193              		.loc 1 711 10 is_stmt 1 view .LVU1845
 711:./Libraries/FatFs/Src/ff.c **** }
 5194              		.loc 1 711 2 is_stmt 0 view .LVU1846
 5195 003e 5345     		cmp	r3, r10
 5196 0040 FBD1     		bne	.L474
 5197              	.LVL480:
ARM GAS  /tmp/ccaQXGqa.s 			page 178


 711:./Libraries/FatFs/Src/ff.c **** }
 5198              		.loc 1 711 2 view .LVU1847
 5199              	.LBE928:
 5200              	.LBE929:
2763:./Libraries/FatFs/Src/ff.c **** 		c = (BYTE)p[si++];
 5201              		.loc 1 2763 2 is_stmt 1 view .LVU1848
2764:./Libraries/FatFs/Src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 5202              		.loc 1 2764 3 view .LVU1849
2764:./Libraries/FatFs/Src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 5203              		.loc 1 2764 5 is_stmt 0 view .LVU1850
 5204 0042 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5205              	.LVL481:
2765:./Libraries/FatFs/Src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
 5206              		.loc 1 2765 3 is_stmt 1 view .LVU1851
2765:./Libraries/FatFs/Src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
 5207              		.loc 1 2765 6 is_stmt 0 view .LVU1852
 5208 0044 202B     		cmp	r3, #32
 5209 0046 40F28780 		bls	.L475
 5210 004a AE46     		mov	lr, r5
2749:./Libraries/FatFs/Src/ff.c **** #if _FS_RPATH != 0
 5211              		.loc 1 2749 9 view .LVU1853
 5212 004c 0026     		movs	r6, #0
2749:./Libraries/FatFs/Src/ff.c **** #if _FS_RPATH != 0
 5213              		.loc 1 2749 17 view .LVU1854
 5214 004e 4FF0080C 		mov	ip, #8
2764:./Libraries/FatFs/Src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 5215              		.loc 1 2764 17 view .LVU1855
 5216 0052 0122     		movs	r2, #1
 5217              	.LVL482:
 5218              	.L476:
2766:./Libraries/FatFs/Src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 5219              		.loc 1 2766 3 is_stmt 1 view .LVU1856
2766:./Libraries/FatFs/Src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 5220              		.loc 1 2766 6 is_stmt 0 view .LVU1857
 5221 0054 2F2B     		cmp	r3, #47
 5222 0056 00F08C80 		beq	.L516
2766:./Libraries/FatFs/Src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 5223              		.loc 1 2766 6 view .LVU1858
 5224 005a 5C2B     		cmp	r3, #92
 5225 005c 00F08980 		beq	.L516
2770:./Libraries/FatFs/Src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
 5226              		.loc 1 2770 3 is_stmt 1 view .LVU1859
2770:./Libraries/FatFs/Src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
 5227              		.loc 1 2770 6 is_stmt 0 view .LVU1860
 5228 0060 2E2B     		cmp	r3, #46
 5229 0062 01D0     		beq	.L518
 5230 0064 B445     		cmp	ip, r6
 5231 0066 6AD8     		bhi	.L483
 5232              	.L518:
2771:./Libraries/FatFs/Src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 5233              		.loc 1 2771 4 is_stmt 1 view .LVU1861
2771:./Libraries/FatFs/Src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 5234              		.loc 1 2771 7 is_stmt 0 view .LVU1862
 5235 0068 BCF10B0F 		cmp	ip, #11
 5236 006c 74D0     		beq	.L475
 5237 006e 2E2B     		cmp	r3, #46
 5238 0070 72D1     		bne	.L475
ARM GAS  /tmp/ccaQXGqa.s 			page 179


2772:./Libraries/FatFs/Src/ff.c **** 			continue;
 5239              		.loc 1 2772 6 view .LVU1863
 5240 0072 0826     		movs	r6, #8
 5241              	.LVL483:
2772:./Libraries/FatFs/Src/ff.c **** 			continue;
 5242              		.loc 1 2772 14 view .LVU1864
 5243 0074 4FF00B0C 		mov	ip, #11
 5244              	.LVL484:
 5245              	.L485:
2763:./Libraries/FatFs/Src/ff.c **** 		c = (BYTE)p[si++];
 5246              		.loc 1 2763 2 is_stmt 1 view .LVU1865
2764:./Libraries/FatFs/Src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 5247              		.loc 1 2764 3 view .LVU1866
2764:./Libraries/FatFs/Src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 5248              		.loc 1 2764 5 is_stmt 0 view .LVU1867
 5249 0078 1EF8013F 		ldrb	r3, [lr, #1]!	@ zero_extendqisi2
 5250              	.LVL485:
2764:./Libraries/FatFs/Src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 5251              		.loc 1 2764 17 view .LVU1868
 5252 007c 0132     		adds	r2, r2, #1
 5253              	.LVL486:
2765:./Libraries/FatFs/Src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
 5254              		.loc 1 2765 3 is_stmt 1 view .LVU1869
2765:./Libraries/FatFs/Src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
 5255              		.loc 1 2765 6 is_stmt 0 view .LVU1870
 5256 007e 202B     		cmp	r3, #32
 5257 0080 E8D8     		bhi	.L476
2795:./Libraries/FatFs/Src/ff.c **** 	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
 5258              		.loc 1 2795 2 is_stmt 1 view .LVU1871
 5259              	.LVL487:
2798:./Libraries/FatFs/Src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 5260              		.loc 1 2798 5 is_stmt 0 view .LVU1872
 5261 0082 94F82410 		ldrb	r1, [r4, #36]	@ zero_extendqisi2
2795:./Libraries/FatFs/Src/ff.c **** 	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
 5262              		.loc 1 2795 12 view .LVU1873
 5263 0086 1544     		add	r5, r5, r2
 5264              	.LVL488:
2796:./Libraries/FatFs/Src/ff.c **** 
 5265              		.loc 1 2796 2 is_stmt 1 view .LVU1874
2798:./Libraries/FatFs/Src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 5266              		.loc 1 2798 2 view .LVU1875
2798:./Libraries/FatFs/Src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 5267              		.loc 1 2798 5 is_stmt 0 view .LVU1876
 5268 0088 E529     		cmp	r1, #229
 5269 008a 00F0A280 		beq	.L510
2799:./Libraries/FatFs/Src/ff.c **** 
 5270              		.loc 1 2799 14 view .LVU1877
 5271 008e 0423     		movs	r3, #4
 5272              	.LVL489:
 5273              	.L490:
2799:./Libraries/FatFs/Src/ff.c **** 
 5274              		.loc 1 2799 14 view .LVU1878
 5275              	.LBE934:
 5276              	.LBE940:
 5277              	.LBB941:
 5278              	.LBB942:
2221:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK) return res;
ARM GAS  /tmp/ccaQXGqa.s 			page 180


 5279              		.loc 1 2221 8 view .LVU1879
 5280 0090 2046     		mov	r0, r4
 5281              	.LBE942:
 5282              	.LBE941:
 5283              	.LBB950:
 5284              	.LBB935:
2799:./Libraries/FatFs/Src/ff.c **** 
 5285              		.loc 1 2799 14 view .LVU1880
 5286 0092 84F82F30 		strb	r3, [r4, #47]
2801:./Libraries/FatFs/Src/ff.c **** #endif /* _USE_LFN != 0 */
 5287              		.loc 1 2801 2 is_stmt 1 view .LVU1881
 5288              	.LVL490:
2801:./Libraries/FatFs/Src/ff.c **** #endif /* _USE_LFN != 0 */
 5289              		.loc 1 2801 2 is_stmt 0 view .LVU1882
 5290              	.LBE935:
 5291              	.LBE950:
2857:./Libraries/FatFs/Src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
 5292              		.loc 1 2857 4 is_stmt 1 view .LVU1883
2858:./Libraries/FatFs/Src/ff.c **** 			ns = dp->fn[NSFLAG];
 5293              		.loc 1 2858 4 view .LVU1884
 5294              	.LBB951:
 5295              	.LBI941:
2210:./Libraries/FatFs/Src/ff.c **** 	DIR* dp			/* Pointer to the directory object with the file name */
 5296              		.loc 1 2210 9 view .LVU1885
 5297              	.LBB947:
2214:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
 5298              		.loc 1 2214 2 view .LVU1886
2215:./Libraries/FatFs/Src/ff.c **** 	BYTE c;
 5299              		.loc 1 2215 2 view .LVU1887
2215:./Libraries/FatFs/Src/ff.c **** 	BYTE c;
 5300              		.loc 1 2215 9 is_stmt 0 view .LVU1888
 5301 0096 2668     		ldr	r6, [r4]
 5302              	.LVL491:
2216:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0
 5303              		.loc 1 2216 2 is_stmt 1 view .LVU1889
2221:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK) return res;
 5304              		.loc 1 2221 2 view .LVU1890
2221:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK) return res;
 5305              		.loc 1 2221 8 is_stmt 0 view .LVU1891
 5306 0098 FFF7FEFF 		bl	dir_sdi.constprop.0
 5307              	.LVL492:
2222:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 5308              		.loc 1 2222 2 is_stmt 1 view .LVU1892
2222:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 5309              		.loc 1 2222 5 is_stmt 0 view .LVU1893
 5310 009c 38B1     		cbz	r0, .L501
 5311 009e 87E0     		b	.L491
 5312              	.LVL493:
 5313              	.L497:
2277:./Libraries/FatFs/Src/ff.c **** 	} while (res == FR_OK);
 5314              		.loc 1 2277 3 is_stmt 1 view .LVU1894
2277:./Libraries/FatFs/Src/ff.c **** 	} while (res == FR_OK);
 5315              		.loc 1 2277 9 is_stmt 0 view .LVU1895
 5316 00a0 0021     		movs	r1, #0
 5317 00a2 2046     		mov	r0, r4
 5318 00a4 FFF7FEFF 		bl	dir_next
 5319              	.LVL494:
ARM GAS  /tmp/ccaQXGqa.s 			page 181


2278:./Libraries/FatFs/Src/ff.c **** 
 5320              		.loc 1 2278 10 is_stmt 1 view .LVU1896
2278:./Libraries/FatFs/Src/ff.c **** 
 5321              		.loc 1 2278 2 is_stmt 0 view .LVU1897
 5322 00a8 0028     		cmp	r0, #0
 5323 00aa 40F08180 		bne	.L491
 5324              	.L501:
2247:./Libraries/FatFs/Src/ff.c **** 		res = move_window(fs, dp->sect);
 5325              		.loc 1 2247 2 is_stmt 1 view .LVU1898
2248:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) break;
 5326              		.loc 1 2248 3 view .LVU1899
2248:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) break;
 5327              		.loc 1 2248 9 is_stmt 0 view .LVU1900
 5328 00ae E169     		ldr	r1, [r4, #28]
 5329              	.LVL495:
 5330              	.LBB943:
 5331              	.LBI943:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 5332              		.loc 1 912 9 is_stmt 1 view .LVU1901
 5333              	.LBB944:
 917:./Libraries/FatFs/Src/ff.c **** 
 5334              		.loc 1 917 2 view .LVU1902
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 5335              		.loc 1 920 2 view .LVU1903
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 5336              		.loc 1 920 5 is_stmt 0 view .LVU1904
 5337 00b0 336B     		ldr	r3, [r6, #48]
 5338 00b2 9942     		cmp	r1, r3
 5339 00b4 04D0     		beq	.L495
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 5340              		.loc 1 920 5 view .LVU1905
 5341 00b6 3046     		mov	r0, r6
 5342              	.LVL496:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 5343              		.loc 1 920 5 view .LVU1906
 5344 00b8 FFF7FEFF 		bl	move_window.part.0
 5345              	.LVL497:
 932:./Libraries/FatFs/Src/ff.c **** }
 5346              		.loc 1 932 2 is_stmt 1 view .LVU1907
 932:./Libraries/FatFs/Src/ff.c **** }
 5347              		.loc 1 932 2 is_stmt 0 view .LVU1908
 5348              	.LBE944:
 5349              	.LBE943:
2249:./Libraries/FatFs/Src/ff.c **** 		c = dp->dir[DIR_Name];
 5350              		.loc 1 2249 3 is_stmt 1 view .LVU1909
2249:./Libraries/FatFs/Src/ff.c **** 		c = dp->dir[DIR_Name];
 5351              		.loc 1 2249 6 is_stmt 0 view .LVU1910
 5352 00bc 0028     		cmp	r0, #0
 5353 00be 77D1     		bne	.L491
 5354              	.L495:
 5355              	.LVL498:
2250:./Libraries/FatFs/Src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 5356              		.loc 1 2250 3 is_stmt 1 view .LVU1911
2250:./Libraries/FatFs/Src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 5357              		.loc 1 2250 9 is_stmt 0 view .LVU1912
 5358 00c0 236A     		ldr	r3, [r4, #32]
 5359              	.LVL499:
ARM GAS  /tmp/ccaQXGqa.s 			page 182


2251:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 5360              		.loc 1 2251 3 is_stmt 1 view .LVU1913
2251:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 5361              		.loc 1 2251 6 is_stmt 0 view .LVU1914
 5362 00c2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5363 00c4 002A     		cmp	r2, #0
 5364 00c6 75D0     		beq	.L505
2274:./Libraries/FatFs/Src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
 5365              		.loc 1 2274 3 is_stmt 1 view .LVU1915
2274:./Libraries/FatFs/Src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
 5366              		.loc 1 2274 25 is_stmt 0 view .LVU1916
 5367 00c8 93F80BE0 		ldrb	lr, [r3, #11]	@ zero_extendqisi2
2274:./Libraries/FatFs/Src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
 5368              		.loc 1 2274 36 view .LVU1917
 5369 00cc 0EF03F02 		and	r2, lr, #63
2274:./Libraries/FatFs/Src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
 5370              		.loc 1 2274 16 view .LVU1918
 5371 00d0 A271     		strb	r2, [r4, #6]
 5372              	.LVL500:
2275:./Libraries/FatFs/Src/ff.c **** #endif
 5373              		.loc 1 2275 3 is_stmt 1 view .LVU1919
 5374 00d2 D87A     		ldrb	r0, [r3, #11]	@ zero_extendqisi2
2275:./Libraries/FatFs/Src/ff.c **** #endif
 5375              		.loc 1 2275 6 is_stmt 0 view .LVU1920
 5376 00d4 10F00800 		ands	r0, r0, #8
 5377 00d8 E2D1     		bne	.L497
 5378              	.LVL501:
 5379              	.LBB945:
 5380              	.LBB946:
 720:./Libraries/FatFs/Src/ff.c **** 		r = *d++ - *s++;
 5381              		.loc 1 720 2 is_stmt 1 view .LVU1921
 721:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt && r == 0);
 5382              		.loc 1 721 3 view .LVU1922
 721:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt && r == 0);
 5383              		.loc 1 721 7 is_stmt 0 view .LVU1923
 5384 00da 1946     		mov	r1, r3
 721:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt && r == 0);
 5385              		.loc 1 721 14 view .LVU1924
 5386 00dc 94F824B0 		ldrb	fp, [r4, #36]	@ zero_extendqisi2
 721:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt && r == 0);
 5387              		.loc 1 721 9 view .LVU1925
 5388 00e0 0133     		adds	r3, r3, #1
 5389              	.LVL502:
 721:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt && r == 0);
 5390              		.loc 1 721 16 view .LVU1926
 5391 00e2 04F1250C 		add	ip, r4, #37
 5392              	.LVL503:
 721:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt && r == 0);
 5393              		.loc 1 721 7 view .LVU1927
 5394 00e6 11F80B2B 		ldrb	r2, [r1], #11	@ zero_extendqisi2
 721:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt && r == 0);
 5395              		.loc 1 721 5 view .LVU1928
 5396 00ea A2EB0B02 		sub	r2, r2, fp
 5397              	.LVL504:
 722:./Libraries/FatFs/Src/ff.c **** 
 5398              		.loc 1 722 10 is_stmt 1 view .LVU1929
 5399              	.L511:
ARM GAS  /tmp/ccaQXGqa.s 			page 183


 720:./Libraries/FatFs/Src/ff.c **** 		r = *d++ - *s++;
 5400              		.loc 1 720 2 view .LVU1930
 721:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt && r == 0);
 5401              		.loc 1 721 3 view .LVU1931
 722:./Libraries/FatFs/Src/ff.c **** 
 5402              		.loc 1 722 17 is_stmt 0 view .LVU1932
 5403 00ee 002A     		cmp	r2, #0
 5404 00f0 D6D1     		bne	.L497
 721:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt && r == 0);
 5405              		.loc 1 721 7 view .LVU1933
 5406 00f2 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 5407              	.LVL505:
 721:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt && r == 0);
 5408              		.loc 1 721 14 view .LVU1934
 5409 00f6 1CF801BB 		ldrb	fp, [ip], #1	@ zero_extendqisi2
 5410              	.LVL506:
 722:./Libraries/FatFs/Src/ff.c **** 
 5411              		.loc 1 722 2 view .LVU1935
 5412 00fa 8B42     		cmp	r3, r1
 721:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt && r == 0);
 5413              		.loc 1 721 5 view .LVU1936
 5414 00fc A2EB0B02 		sub	r2, r2, fp
 5415              	.LVL507:
 722:./Libraries/FatFs/Src/ff.c **** 
 5416              		.loc 1 722 10 is_stmt 1 view .LVU1937
 722:./Libraries/FatFs/Src/ff.c **** 
 5417              		.loc 1 722 2 is_stmt 0 view .LVU1938
 5418 0100 F5D1     		bne	.L511
 724:./Libraries/FatFs/Src/ff.c **** }
 5419              		.loc 1 724 2 is_stmt 1 view .LVU1939
 5420              	.LVL508:
 724:./Libraries/FatFs/Src/ff.c **** }
 5421              		.loc 1 724 2 is_stmt 0 view .LVU1940
 5422              	.LBE946:
 5423              	.LBE945:
2275:./Libraries/FatFs/Src/ff.c **** #endif
 5424              		.loc 1 2275 37 view .LVU1941
 5425 0102 002A     		cmp	r2, #0
 5426 0104 CCD1     		bne	.L497
 5427              	.LVL509:
2275:./Libraries/FatFs/Src/ff.c **** #endif
 5428              		.loc 1 2275 37 view .LVU1942
 5429              	.LBE947:
 5430              	.LBE951:
2859:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 5431              		.loc 1 2859 4 is_stmt 1 view .LVU1943
2860:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 5432              		.loc 1 2860 4 view .LVU1944
2872:./Libraries/FatFs/Src/ff.c **** 			/* Get into the sub-directory */
 5433              		.loc 1 2872 4 view .LVU1945
2872:./Libraries/FatFs/Src/ff.c **** 			/* Get into the sub-directory */
 5434              		.loc 1 2872 7 is_stmt 0 view .LVU1946
 5435 0106 94F82F30 		ldrb	r3, [r4, #47]	@ zero_extendqisi2
 5436 010a 5B07     		lsls	r3, r3, #29
 5437 010c 25D4     		bmi	.L519
2874:./Libraries/FatFs/Src/ff.c **** 				res = FR_NO_PATH; break;
 5438              		.loc 1 2874 4 is_stmt 1 view .LVU1947
ARM GAS  /tmp/ccaQXGqa.s 			page 184


2874:./Libraries/FatFs/Src/ff.c **** 				res = FR_NO_PATH; break;
 5439              		.loc 1 2874 7 is_stmt 0 view .LVU1948
 5440 010e 1EF0100F 		tst	lr, #16
 5441 0112 53D0     		beq	.L503
2888:./Libraries/FatFs/Src/ff.c **** 			}
 5442              		.loc 1 2888 5 is_stmt 1 view .LVU1949
2888:./Libraries/FatFs/Src/ff.c **** 			}
 5443              		.loc 1 2888 51 is_stmt 0 view .LVU1950
 5444 0114 6269     		ldr	r2, [r4, #20]
2888:./Libraries/FatFs/Src/ff.c **** 			}
 5445              		.loc 1 2888 32 view .LVU1951
 5446 0116 07F13403 		add	r3, r7, #52
 5447              	.LBB952:
 5448              	.LBB953:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 5449              		.loc 1 1640 5 view .LVU1952
 5450 011a 3978     		ldrb	r1, [r7]	@ zero_extendqisi2
 5451              	.LBE953:
 5452              	.LBE952:
2888:./Libraries/FatFs/Src/ff.c **** 			}
 5453              		.loc 1 2888 51 view .LVU1953
 5454 011c C2F30802 		ubfx	r2, r2, #0, #9
 5455              	.LBB960:
 5456              	.LBB958:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 5457              		.loc 1 1640 5 view .LVU1954
 5458 0120 0329     		cmp	r1, #3
 5459              	.LBE958:
 5460              	.LBE960:
2888:./Libraries/FatFs/Src/ff.c **** 			}
 5461              		.loc 1 2888 19 view .LVU1955
 5462 0122 1344     		add	r3, r3, r2
 5463              	.LVL510:
 5464              	.LBB961:
 5465              	.LBI952:
1632:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
 5466              		.loc 1 1632 7 is_stmt 1 view .LVU1956
 5467              	.LBB959:
1637:./Libraries/FatFs/Src/ff.c **** 
 5468              		.loc 1 1637 2 view .LVU1957
1639:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 5469              		.loc 1 1639 2 view .LVU1958
 5470              	.LBB954:
 5471              	.LBI954:
 613:./Libraries/FatFs/Src/ff.c **** {
 5472              		.loc 1 613 6 view .LVU1959
 5473              	.LBB955:
 615:./Libraries/FatFs/Src/ff.c **** 
 5474              		.loc 1 615 2 view .LVU1960
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 5475              		.loc 1 617 2 view .LVU1961
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 5476              		.loc 1 618 2 view .LVU1962
 619:./Libraries/FatFs/Src/ff.c **** }
 5477              		.loc 1 619 2 view .LVU1963
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 5478              		.loc 1 618 10 is_stmt 0 view .LVU1964
ARM GAS  /tmp/ccaQXGqa.s 			page 185


 5479 0124 D87E     		ldrb	r0, [r3, #27]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 5480              		.loc 1 618 20 view .LVU1965
 5481 0126 9A7E     		ldrb	r2, [r3, #26]	@ zero_extendqisi2
 5482              	.LBE955:
 5483              	.LBE954:
1639:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 5484              		.loc 1 1639 5 view .LVU1966
 5485 0128 42EA0022 		orr	r2, r2, r0, lsl #8
 5486              	.LVL511:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 5487              		.loc 1 1640 2 is_stmt 1 view .LVU1967
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 5488              		.loc 1 1640 5 is_stmt 0 view .LVU1968
 5489 012c 05D1     		bne	.L504
1641:./Libraries/FatFs/Src/ff.c **** 	}
 5490              		.loc 1 1641 3 is_stmt 1 view .LVU1969
 5491              	.LVL512:
 5492              	.LBB956:
 5493              	.LBI956:
 613:./Libraries/FatFs/Src/ff.c **** {
 5494              		.loc 1 613 6 view .LVU1970
 5495              	.LBB957:
 615:./Libraries/FatFs/Src/ff.c **** 
 5496              		.loc 1 615 2 view .LVU1971
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 5497              		.loc 1 617 2 view .LVU1972
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 5498              		.loc 1 618 2 view .LVU1973
 619:./Libraries/FatFs/Src/ff.c **** }
 5499              		.loc 1 619 2 view .LVU1974
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 5500              		.loc 1 618 10 is_stmt 0 view .LVU1975
 5501 012e 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 5502              		.loc 1 618 20 view .LVU1976
 5503 0130 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 5504              	.LVL513:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 5505              		.loc 1 618 20 view .LVU1977
 5506              	.LBE957:
 5507              	.LBE956:
1641:./Libraries/FatFs/Src/ff.c **** 	}
 5508              		.loc 1 1641 9 view .LVU1978
 5509 0132 43EA0123 		orr	r3, r3, r1, lsl #8
1641:./Libraries/FatFs/Src/ff.c **** 	}
 5510              		.loc 1 1641 6 view .LVU1979
 5511 0136 42EA0342 		orr	r2, r2, r3, lsl #16
 5512              	.LVL514:
 5513              	.L504:
1644:./Libraries/FatFs/Src/ff.c **** }
 5514              		.loc 1 1644 2 is_stmt 1 view .LVU1980
1644:./Libraries/FatFs/Src/ff.c **** }
 5515              		.loc 1 1644 2 is_stmt 0 view .LVU1981
 5516              	.LBE959:
 5517              	.LBE961:
2888:./Libraries/FatFs/Src/ff.c **** 			}
ARM GAS  /tmp/ccaQXGqa.s 			page 186


 5518              		.loc 1 2888 17 view .LVU1982
 5519 013a A260     		str	r2, [r4, #8]
2855:./Libraries/FatFs/Src/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
 5520              		.loc 1 2855 9 is_stmt 1 view .LVU1983
2856:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) break;
 5521              		.loc 1 2856 8 is_stmt 0 view .LVU1984
 5522 013c 7CE7     		b	.L473
 5523              	.LVL515:
 5524              	.L483:
 5525              	.LBB962:
 5526              	.LBB936:
2775:./Libraries/FatFs/Src/ff.c **** #ifdef _EXCVT
 5527              		.loc 1 2775 3 is_stmt 1 view .LVU1985
2775:./Libraries/FatFs/Src/ff.c **** #ifdef _EXCVT
 5528              		.loc 1 2775 6 is_stmt 0 view .LVU1986
 5529 013e 1906     		lsls	r1, r3, #24
 5530 0140 02D5     		bpl	.L486
2777:./Libraries/FatFs/Src/ff.c **** #else
 5531              		.loc 1 2777 4 is_stmt 1 view .LVU1987
2777:./Libraries/FatFs/Src/ff.c **** #else
 5532              		.loc 1 2777 16 is_stmt 0 view .LVU1988
 5533 0142 803B     		subs	r3, r3, #128
 5534              	.LVL516:
2777:./Libraries/FatFs/Src/ff.c **** #else
 5535              		.loc 1 2777 6 view .LVU1989
 5536 0144 2949     		ldr	r1, .L543
 5537 0146 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 5538              	.LVL517:
 5539              	.L486:
2784:./Libraries/FatFs/Src/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
 5540              		.loc 1 2784 3 is_stmt 1 view .LVU1990
2790:./Libraries/FatFs/Src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 5541              		.loc 1 2790 4 view .LVU1991
 5542              	.LBB930:
 5543              	.LBI930:
 729:./Libraries/FatFs/Src/ff.c **** 	while (*str && *str != chr) str++;
 5544              		.loc 1 729 5 view .LVU1992
 5545              	.LBB931:
 730:./Libraries/FatFs/Src/ff.c **** 	return *str;
 5546              		.loc 1 730 2 view .LVU1993
 730:./Libraries/FatFs/Src/ff.c **** 	return *str;
 5547              		.loc 1 730 8 view .LVU1994
 730:./Libraries/FatFs/Src/ff.c **** 	return *str;
 5548              		.loc 1 730 9 is_stmt 0 view .LVU1995
 5549 0148 2221     		movs	r1, #34
 5550 014a 2948     		ldr	r0, .L543+4
 5551 014c 02E0     		b	.L487
 5552              	.LVL518:
 5553              	.L489:
 730:./Libraries/FatFs/Src/ff.c **** 	return *str;
 5554              		.loc 1 730 9 view .LVU1996
 5555 014e 10F8011F 		ldrb	r1, [r0, #1]!	@ zero_extendqisi2
 5556              	.LVL519:
 730:./Libraries/FatFs/Src/ff.c **** 	return *str;
 5557              		.loc 1 730 8 view .LVU1997
 5558 0152 21B1     		cbz	r1, .L488
 5559              	.LVL520:
ARM GAS  /tmp/ccaQXGqa.s 			page 187


 5560              	.L487:
 730:./Libraries/FatFs/Src/ff.c **** 	return *str;
 5561              		.loc 1 730 30 is_stmt 1 view .LVU1998
 730:./Libraries/FatFs/Src/ff.c **** 	return *str;
 5562              		.loc 1 730 8 view .LVU1999
 730:./Libraries/FatFs/Src/ff.c **** 	return *str;
 5563              		.loc 1 730 14 is_stmt 0 view .LVU2000
 5564 0154 8B42     		cmp	r3, r1
 5565 0156 FAD1     		bne	.L489
 5566              	.LVL521:
 5567              	.L475:
 730:./Libraries/FatFs/Src/ff.c **** 	return *str;
 5568              		.loc 1 730 14 view .LVU2001
 5569              	.LBE931:
 5570              	.LBE930:
2796:./Libraries/FatFs/Src/ff.c **** 
 5571              		.loc 1 2796 21 view .LVU2002
 5572 0158 0620     		movs	r0, #6
 5573              	.LVL522:
 5574              	.L519:
2796:./Libraries/FatFs/Src/ff.c **** 
 5575              		.loc 1 2796 21 view .LVU2003
 5576              	.LBE936:
 5577              	.LBE962:
2894:./Libraries/FatFs/Src/ff.c **** 
 5578              		.loc 1 2894 1 view .LVU2004
 5579 015a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5580              	.LVL523:
 5581              	.L488:
 5582              	.LBB963:
 5583              	.LBB937:
 5584              	.LBB933:
 5585              	.LBB932:
 731:./Libraries/FatFs/Src/ff.c **** }
 5586              		.loc 1 731 2 is_stmt 1 view .LVU2005
 731:./Libraries/FatFs/Src/ff.c **** }
 5587              		.loc 1 731 2 is_stmt 0 view .LVU2006
 5588              	.LBE932:
 5589              	.LBE933:
2791:./Libraries/FatFs/Src/ff.c **** 			sfn[i++] = c;
 5590              		.loc 1 2791 4 is_stmt 1 view .LVU2007
2791:./Libraries/FatFs/Src/ff.c **** 			sfn[i++] = c;
 5591              		.loc 1 2791 7 is_stmt 0 view .LVU2008
 5592 015e A3F16101 		sub	r1, r3, #97
 5593 0162 1929     		cmp	r1, #25
 5594 0164 01D8     		bhi	.L508
2791:./Libraries/FatFs/Src/ff.c **** 			sfn[i++] = c;
 5595              		.loc 1 2791 20 is_stmt 1 view .LVU2009
2791:./Libraries/FatFs/Src/ff.c **** 			sfn[i++] = c;
 5596              		.loc 1 2791 22 is_stmt 0 view .LVU2010
 5597 0166 203B     		subs	r3, r3, #32
 5598              	.LVL524:
2791:./Libraries/FatFs/Src/ff.c **** 			sfn[i++] = c;
 5599              		.loc 1 2791 22 view .LVU2011
 5600 0168 DBB2     		uxtb	r3, r3
 5601              	.LVL525:
 5602              	.L508:
ARM GAS  /tmp/ccaQXGqa.s 			page 188


2792:./Libraries/FatFs/Src/ff.c **** 		}
 5603              		.loc 1 2792 4 is_stmt 1 view .LVU2012
2792:./Libraries/FatFs/Src/ff.c **** 		}
 5604              		.loc 1 2792 13 is_stmt 0 view .LVU2013
 5605 016a 08F80630 		strb	r3, [r8, r6]
2792:./Libraries/FatFs/Src/ff.c **** 		}
 5606              		.loc 1 2792 9 view .LVU2014
 5607 016e 0136     		adds	r6, r6, #1
 5608              	.LVL526:
2792:./Libraries/FatFs/Src/ff.c **** 		}
 5609              		.loc 1 2792 9 view .LVU2015
 5610 0170 82E7     		b	.L485
 5611              	.L516:
2767:./Libraries/FatFs/Src/ff.c **** 			break;
 5612              		.loc 1 2767 10 is_stmt 1 view .LVU2016
2767:./Libraries/FatFs/Src/ff.c **** 			break;
 5613              		.loc 1 2767 12 is_stmt 0 view .LVU2017
 5614 0172 A95C     		ldrb	r1, [r5, r2]	@ zero_extendqisi2
 5615 0174 A818     		adds	r0, r5, r2
2767:./Libraries/FatFs/Src/ff.c **** 			break;
 5616              		.loc 1 2767 10 view .LVU2018
 5617 0176 5C29     		cmp	r1, #92
 5618 0178 01D0     		beq	.L517
 5619 017a 2F29     		cmp	r1, #47
 5620 017c 32D1     		bne	.L512
 5621              	.L517:
2767:./Libraries/FatFs/Src/ff.c **** 			break;
 5622              		.loc 1 2767 10 view .LVU2019
 5623 017e 0132     		adds	r2, r2, #1
 5624              	.LVL527:
2767:./Libraries/FatFs/Src/ff.c **** 			break;
 5625              		.loc 1 2767 10 view .LVU2020
 5626 0180 2A44     		add	r2, r2, r5
 5627              	.LVL528:
 5628              	.L532:
2767:./Libraries/FatFs/Src/ff.c **** 			break;
 5629              		.loc 1 2767 42 is_stmt 1 view .LVU2021
2767:./Libraries/FatFs/Src/ff.c **** 			break;
 5630              		.loc 1 2767 10 view .LVU2022
2767:./Libraries/FatFs/Src/ff.c **** 			break;
 5631              		.loc 1 2767 12 is_stmt 0 view .LVU2023
 5632 0182 1546     		mov	r5, r2
 5633 0184 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 5634              	.LVL529:
2767:./Libraries/FatFs/Src/ff.c **** 			break;
 5635              		.loc 1 2767 10 view .LVU2024
 5636 0188 2F29     		cmp	r1, #47
 5637 018a FAD0     		beq	.L532
 5638 018c 5C29     		cmp	r1, #92
 5639 018e F8D0     		beq	.L532
 5640              	.LVL530:
 5641              	.L480:
2795:./Libraries/FatFs/Src/ff.c **** 	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
 5642              		.loc 1 2795 2 is_stmt 1 view .LVU2025
2796:./Libraries/FatFs/Src/ff.c **** 
 5643              		.loc 1 2796 2 view .LVU2026
2796:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 189


 5644              		.loc 1 2796 5 is_stmt 0 view .LVU2027
 5645 0190 002E     		cmp	r6, #0
 5646 0192 E1D0     		beq	.L475
 5647              	.LVL531:
2798:./Libraries/FatFs/Src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 5648              		.loc 1 2798 2 is_stmt 1 view .LVU2028
2798:./Libraries/FatFs/Src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 5649              		.loc 1 2798 5 is_stmt 0 view .LVU2029
 5650 0194 94F82420 		ldrb	r2, [r4, #36]	@ zero_extendqisi2
 5651 0198 E52A     		cmp	r2, #229
 5652 019a 1AD0     		beq	.L510
2799:./Libraries/FatFs/Src/ff.c **** 
 5653              		.loc 1 2799 14 view .LVU2030
 5654 019c 0023     		movs	r3, #0
 5655              	.LVL532:
2799:./Libraries/FatFs/Src/ff.c **** 
 5656              		.loc 1 2799 14 view .LVU2031
 5657              	.LBE937:
 5658              	.LBE963:
 5659              	.LBB964:
 5660              	.LBB948:
2221:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK) return res;
 5661              		.loc 1 2221 8 view .LVU2032
 5662 019e 2046     		mov	r0, r4
2215:./Libraries/FatFs/Src/ff.c **** 	BYTE c;
 5663              		.loc 1 2215 9 view .LVU2033
 5664 01a0 2668     		ldr	r6, [r4]
 5665              	.LVL533:
2215:./Libraries/FatFs/Src/ff.c **** 	BYTE c;
 5666              		.loc 1 2215 9 view .LVU2034
 5667              	.LBE948:
 5668              	.LBE964:
 5669              	.LBB965:
 5670              	.LBB938:
2799:./Libraries/FatFs/Src/ff.c **** 
 5671              		.loc 1 2799 14 view .LVU2035
 5672 01a2 84F82F30 		strb	r3, [r4, #47]
2801:./Libraries/FatFs/Src/ff.c **** #endif /* _USE_LFN != 0 */
 5673              		.loc 1 2801 2 is_stmt 1 view .LVU2036
 5674              	.LVL534:
2801:./Libraries/FatFs/Src/ff.c **** #endif /* _USE_LFN != 0 */
 5675              		.loc 1 2801 2 is_stmt 0 view .LVU2037
 5676              	.LBE938:
 5677              	.LBE965:
2857:./Libraries/FatFs/Src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
 5678              		.loc 1 2857 4 is_stmt 1 view .LVU2038
2858:./Libraries/FatFs/Src/ff.c **** 			ns = dp->fn[NSFLAG];
 5679              		.loc 1 2858 4 view .LVU2039
 5680              	.LBB966:
2210:./Libraries/FatFs/Src/ff.c **** 	DIR* dp			/* Pointer to the directory object with the file name */
 5681              		.loc 1 2210 9 view .LVU2040
 5682              	.LBB949:
2214:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = dp->obj.fs;
 5683              		.loc 1 2214 2 view .LVU2041
2215:./Libraries/FatFs/Src/ff.c **** 	BYTE c;
 5684              		.loc 1 2215 2 view .LVU2042
2216:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0
ARM GAS  /tmp/ccaQXGqa.s 			page 190


 5685              		.loc 1 2216 2 view .LVU2043
2221:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK) return res;
 5686              		.loc 1 2221 2 view .LVU2044
2221:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK) return res;
 5687              		.loc 1 2221 8 is_stmt 0 view .LVU2045
 5688 01a6 FFF7FEFF 		bl	dir_sdi.constprop.0
 5689              	.LVL535:
2222:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 5690              		.loc 1 2222 2 is_stmt 1 view .LVU2046
2222:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 5691              		.loc 1 2222 5 is_stmt 0 view .LVU2047
 5692 01aa 0028     		cmp	r0, #0
 5693 01ac 3FF47FAF 		beq	.L501
 5694              	.L491:
 5695              	.LVL536:
2222:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 5696              		.loc 1 2222 5 view .LVU2048
 5697              	.LBE949:
 5698              	.LBE966:
2859:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 5699              		.loc 1 2859 4 is_stmt 1 view .LVU2049
2860:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 5700              		.loc 1 2860 4 view .LVU2050
2861:./Libraries/FatFs/Src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
 5701              		.loc 1 2861 5 view .LVU2051
2861:./Libraries/FatFs/Src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
 5702              		.loc 1 2861 8 is_stmt 0 view .LVU2052
 5703 01b0 0428     		cmp	r0, #4
 5704 01b2 D2D1     		bne	.L519
 5705              	.LVL537:
 5706              	.L505:
2859:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 5707              		.loc 1 2859 7 view .LVU2053
 5708 01b4 94F82F30 		ldrb	r3, [r4, #47]	@ zero_extendqisi2
 5709              	.LVL538:
2862:./Libraries/FatFs/Src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
 5710              		.loc 1 2862 6 is_stmt 1 view .LVU2054
2867:./Libraries/FatFs/Src/ff.c **** 					}
 5711              		.loc 1 2867 7 view .LVU2055
2867:./Libraries/FatFs/Src/ff.c **** 					}
 5712              		.loc 1 2867 10 is_stmt 0 view .LVU2056
 5713 01b8 5A07     		lsls	r2, r3, #29
 5714 01ba 15D4     		bmi	.L515
 5715              	.LVL539:
 5716              	.L503:
2867:./Libraries/FatFs/Src/ff.c **** 					}
 5717              		.loc 1 2867 32 view .LVU2057
 5718 01bc 0520     		movs	r0, #5
2894:./Libraries/FatFs/Src/ff.c **** 
 5719              		.loc 1 2894 1 view .LVU2058
 5720 01be BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5721              	.LVL540:
 5722              	.L472:
2851:./Libraries/FatFs/Src/ff.c **** 		res = dir_sdi(dp, 0);
 5723              		.loc 1 2851 3 is_stmt 1 view .LVU2059
2851:./Libraries/FatFs/Src/ff.c **** 		res = dir_sdi(dp, 0);
 5724              		.loc 1 2851 18 is_stmt 0 view .LVU2060
ARM GAS  /tmp/ccaQXGqa.s 			page 191


 5725 01c2 8023     		movs	r3, #128
2852:./Libraries/FatFs/Src/ff.c **** 
 5726              		.loc 1 2852 9 view .LVU2061
 5727 01c4 2046     		mov	r0, r4
 5728              	.LVL541:
2851:./Libraries/FatFs/Src/ff.c **** 		res = dir_sdi(dp, 0);
 5729              		.loc 1 2851 18 view .LVU2062
 5730 01c6 84F82F30 		strb	r3, [r4, #47]
2852:./Libraries/FatFs/Src/ff.c **** 
 5731              		.loc 1 2852 3 is_stmt 1 view .LVU2063
2894:./Libraries/FatFs/Src/ff.c **** 
 5732              		.loc 1 2894 1 is_stmt 0 view .LVU2064
 5733 01ca BDE8F84F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5734              	.LCFI51:
 5735              		.cfi_remember_state
 5736              		.cfi_restore 14
 5737              		.cfi_restore 11
 5738              		.cfi_restore 10
 5739              		.cfi_restore 9
 5740              		.cfi_restore 8
 5741              		.cfi_restore 7
 5742              		.cfi_restore 6
 5743              		.cfi_restore 5
 5744              		.cfi_restore 4
 5745              		.cfi_restore 3
 5746              		.cfi_def_cfa_offset 0
 5747              	.LVL542:
2852:./Libraries/FatFs/Src/ff.c **** 
 5748              		.loc 1 2852 9 view .LVU2065
 5749 01ce FFF7FEBF 		b	dir_sdi.constprop.0
 5750              	.LVL543:
 5751              	.L510:
 5752              	.LCFI52:
 5753              		.cfi_restore_state
 5754              	.LBB967:
 5755              	.LBB939:
2798:./Libraries/FatFs/Src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 5756              		.loc 1 2798 22 is_stmt 1 view .LVU2066
2799:./Libraries/FatFs/Src/ff.c **** 
 5757              		.loc 1 2799 14 is_stmt 0 view .LVU2067
 5758 01d2 212B     		cmp	r3, #33
2798:./Libraries/FatFs/Src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 5759              		.loc 1 2798 29 view .LVU2068
 5760 01d4 4FF00502 		mov	r2, #5
2799:./Libraries/FatFs/Src/ff.c **** 
 5761              		.loc 1 2799 14 view .LVU2069
 5762 01d8 34BF     		ite	cc
 5763 01da 0423     		movcc	r3, #4
 5764              	.LVL544:
2799:./Libraries/FatFs/Src/ff.c **** 
 5765              		.loc 1 2799 14 view .LVU2070
 5766 01dc 0023     		movcs	r3, #0
2798:./Libraries/FatFs/Src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 5767              		.loc 1 2798 29 view .LVU2071
 5768 01de 84F82420 		strb	r2, [r4, #36]
2799:./Libraries/FatFs/Src/ff.c **** 
 5769              		.loc 1 2799 2 is_stmt 1 view .LVU2072
ARM GAS  /tmp/ccaQXGqa.s 			page 192


 5770 01e2 55E7     		b	.L490
 5771              	.LVL545:
 5772              	.L512:
2767:./Libraries/FatFs/Src/ff.c **** 			break;
 5773              		.loc 1 2767 10 is_stmt 0 view .LVU2073
 5774 01e4 0546     		mov	r5, r0
 5775 01e6 D3E7     		b	.L480
 5776              	.LVL546:
 5777              	.L515:
2767:./Libraries/FatFs/Src/ff.c **** 			break;
 5778              		.loc 1 2767 10 view .LVU2074
 5779              	.LBE939:
 5780              	.LBE967:
2858:./Libraries/FatFs/Src/ff.c **** 			ns = dp->fn[NSFLAG];
 5781              		.loc 1 2858 10 view .LVU2075
 5782 01e8 0420     		movs	r0, #4
 5783 01ea B6E7     		b	.L519
 5784              	.L544:
 5785              		.align	2
 5786              	.L543:
 5787 01ec 00000000 		.word	.LANCHOR3
 5788 01f0 00000000 		.word	.LC0
 5789              		.cfi_endproc
 5790              	.LFE370:
 5792              		.section	.text.validate,"ax",%progbits
 5793              		.align	1
 5794              		.p2align 2,,3
 5795              		.syntax unified
 5796              		.thumb
 5797              		.thumb_func
 5798              		.fpu fpv5-d16
 5800              	validate:
 5801              	.LVL547:
 5802              	.LFB374:
3207:./Libraries/FatFs/Src/ff.c **** 
3208:./Libraries/FatFs/Src/ff.c **** 
3209:./Libraries/FatFs/Src/ff.c **** 
3210:./Libraries/FatFs/Src/ff.c **** 
3211:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3212:./Libraries/FatFs/Src/ff.c **** /* Check if the file/directory object is valid or not                    */
3213:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3214:./Libraries/FatFs/Src/ff.c **** 
3215:./Libraries/FatFs/Src/ff.c **** static
3216:./Libraries/FatFs/Src/ff.c **** FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
3217:./Libraries/FatFs/Src/ff.c **** 	_FDID* obj,		/* Pointer to the _OBJ, the 1st member in the FIL/DIR object, to check validity */
3218:./Libraries/FatFs/Src/ff.c **** 	FATFS** fs		/* Pointer to pointer to the owner file system object to return */
3219:./Libraries/FatFs/Src/ff.c **** )
3220:./Libraries/FatFs/Src/ff.c **** {
 5803              		.loc 1 3220 1 is_stmt 1 view -0
 5804              		.cfi_startproc
 5805              		@ args = 0, pretend = 0, frame = 0
 5806              		@ frame_needed = 0, uses_anonymous_args = 0
3221:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_INVALID_OBJECT;
 5807              		.loc 1 3221 2 view .LVU2077
3222:./Libraries/FatFs/Src/ff.c **** 
3223:./Libraries/FatFs/Src/ff.c **** 
3224:./Libraries/FatFs/Src/ff.c **** 	if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {	/* Test if the object is valid
ARM GAS  /tmp/ccaQXGqa.s 			page 193


 5808              		.loc 1 3224 2 view .LVU2078
3220:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_INVALID_OBJECT;
 5809              		.loc 1 3220 1 is_stmt 0 view .LVU2079
 5810 0000 38B5     		push	{r3, r4, r5, lr}
 5811              	.LCFI53:
 5812              		.cfi_def_cfa_offset 16
 5813              		.cfi_offset 3, -16
 5814              		.cfi_offset 4, -12
 5815              		.cfi_offset 5, -8
 5816              		.cfi_offset 14, -4
3220:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_INVALID_OBJECT;
 5817              		.loc 1 3220 1 view .LVU2080
 5818 0002 0D46     		mov	r5, r1
 5819              		.loc 1 3224 5 view .LVU2081
 5820 0004 40B1     		cbz	r0, .L561
 5821              		.loc 1 3224 16 discriminator 1 view .LVU2082
 5822 0006 0368     		ldr	r3, [r0]
 5823 0008 0446     		mov	r4, r0
 5824              		.loc 1 3224 10 discriminator 1 view .LVU2083
 5825 000a 2BB1     		cbz	r3, .L561
 5826              		.loc 1 3224 21 discriminator 2 view .LVU2084
 5827 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5828 000e 1AB1     		cbz	r2, .L561
 5829              		.loc 1 3224 41 discriminator 3 view .LVU2085
 5830 0010 8188     		ldrh	r1, [r0, #4]
 5831              	.LVL548:
 5832              		.loc 1 3224 41 discriminator 3 view .LVU2086
 5833 0012 DA88     		ldrh	r2, [r3, #6]
 5834 0014 9142     		cmp	r1, r2
 5835 0016 03D0     		beq	.L562
 5836              	.LVL549:
 5837              	.L561:
3221:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_INVALID_OBJECT;
 5838              		.loc 1 3221 10 view .LVU2087
 5839 0018 0920     		movs	r0, #9
3225:./Libraries/FatFs/Src/ff.c **** #if _FS_REENTRANT
3226:./Libraries/FatFs/Src/ff.c **** 		if (lock_fs(obj->fs)) {	/* Obtain the filesystem object */
3227:./Libraries/FatFs/Src/ff.c **** 			if (!(disk_status(obj->fs->drv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialize
3228:./Libraries/FatFs/Src/ff.c **** 				res = FR_OK;
3229:./Libraries/FatFs/Src/ff.c **** 			} else {
3230:./Libraries/FatFs/Src/ff.c **** 				unlock_fs(obj->fs, FR_OK);
3231:./Libraries/FatFs/Src/ff.c **** 			}
3232:./Libraries/FatFs/Src/ff.c **** 		} else {
3233:./Libraries/FatFs/Src/ff.c **** 			res = FR_TIMEOUT;
3234:./Libraries/FatFs/Src/ff.c **** 		}
3235:./Libraries/FatFs/Src/ff.c **** #else
3236:./Libraries/FatFs/Src/ff.c **** 		if (!(disk_status(obj->fs->drv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialized
3237:./Libraries/FatFs/Src/ff.c **** 			res = FR_OK;
3238:./Libraries/FatFs/Src/ff.c **** 		}
3239:./Libraries/FatFs/Src/ff.c **** #endif
3240:./Libraries/FatFs/Src/ff.c **** 	}
3241:./Libraries/FatFs/Src/ff.c **** 	*fs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
 5840              		.loc 1 3241 33 view .LVU2088
 5841 001a 0023     		movs	r3, #0
 5842              	.L547:
 5843              	.LVL550:
 5844              		.loc 1 3241 6 discriminator 4 view .LVU2089
ARM GAS  /tmp/ccaQXGqa.s 			page 194


 5845 001c 2B60     		str	r3, [r5]
3242:./Libraries/FatFs/Src/ff.c **** 	return res;
 5846              		.loc 1 3242 2 is_stmt 1 discriminator 4 view .LVU2090
3243:./Libraries/FatFs/Src/ff.c **** }
 5847              		.loc 1 3243 1 is_stmt 0 discriminator 4 view .LVU2091
 5848 001e 38BD     		pop	{r3, r4, r5, pc}
 5849              	.LVL551:
 5850              	.L562:
3226:./Libraries/FatFs/Src/ff.c **** 			if (!(disk_status(obj->fs->drv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialize
 5851              		.loc 1 3226 3 is_stmt 1 view .LVU2092
 5852              	.LBB976:
 5853              	.LBI976:
 742:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs		/* File system object */
 5854              		.loc 1 742 5 view .LVU2093
 5855              	.LBE976:
 746:./Libraries/FatFs/Src/ff.c **** }
 5856              		.loc 1 746 2 view .LVU2094
 5857              	.LBB979:
 5858              	.LBB977:
 5859              	.LBI977:
 742:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs		/* File system object */
 5860              		.loc 1 742 5 view .LVU2095
 5861              	.LBB978:
 746:./Libraries/FatFs/Src/ff.c **** }
 5862              		.loc 1 746 16 is_stmt 0 view .LVU2096
 5863 0020 D868     		ldr	r0, [r3, #12]
 5864              	.LVL552:
 746:./Libraries/FatFs/Src/ff.c **** }
 5865              		.loc 1 746 16 view .LVU2097
 5866 0022 FFF7FEFF 		bl	ff_req_grant
 5867              	.LVL553:
 746:./Libraries/FatFs/Src/ff.c **** }
 5868              		.loc 1 746 44 view .LVU2098
 5869 0026 68B1     		cbz	r0, .L550
 746:./Libraries/FatFs/Src/ff.c **** }
 5870              		.loc 1 746 44 view .LVU2099
 5871              	.LBE978:
 5872              	.LBE977:
 5873              	.LBE979:
3227:./Libraries/FatFs/Src/ff.c **** 				res = FR_OK;
 5874              		.loc 1 3227 4 is_stmt 1 view .LVU2100
3227:./Libraries/FatFs/Src/ff.c **** 				res = FR_OK;
 5875              		.loc 1 3227 10 is_stmt 0 view .LVU2101
 5876 0028 2368     		ldr	r3, [r4]
 5877 002a 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 5878 002c FFF7FEFF 		bl	disk_status
 5879              	.LVL554:
3227:./Libraries/FatFs/Src/ff.c **** 				res = FR_OK;
 5880              		.loc 1 3227 7 view .LVU2102
 5881 0030 10F00100 		ands	r0, r0, #1
3241:./Libraries/FatFs/Src/ff.c **** 	return res;
 5882              		.loc 1 3241 33 view .LVU2103
 5883 0034 2368     		ldr	r3, [r4]
3227:./Libraries/FatFs/Src/ff.c **** 				res = FR_OK;
 5884              		.loc 1 3227 7 view .LVU2104
 5885 0036 F1D0     		beq	.L547
3230:./Libraries/FatFs/Src/ff.c **** 			}
ARM GAS  /tmp/ccaQXGqa.s 			page 195


 5886              		.loc 1 3230 5 is_stmt 1 view .LVU2105
 5887              	.LVL555:
 5888              	.LBB980:
 5889              	.LBI980:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 5890              		.loc 1 751 6 view .LVU2106
 5891              	.LBB981:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 5892              		.loc 1 756 2 view .LVU2107
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 5893              		.loc 1 756 5 is_stmt 0 view .LVU2108
 5894 0038 002B     		cmp	r3, #0
 5895 003a EDD0     		beq	.L561
 5896              	.LVL556:
 5897              	.LBB982:
 5898              	.LBI982:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 5899              		.loc 1 751 6 is_stmt 1 view .LVU2109
 5900              	.LBB983:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 5901              		.loc 1 757 3 view .LVU2110
 5902 003c D868     		ldr	r0, [r3, #12]
 5903 003e FFF7FEFF 		bl	ff_rel_grant
 5904              	.LVL557:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 5905              		.loc 1 757 3 is_stmt 0 view .LVU2111
 5906 0042 E9E7     		b	.L561
 5907              	.LVL558:
 5908              	.L550:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 5909              		.loc 1 757 3 view .LVU2112
 5910              	.LBE983:
 5911              	.LBE982:
 5912              	.LBE981:
 5913              	.LBE980:
3241:./Libraries/FatFs/Src/ff.c **** 	return res;
 5914              		.loc 1 3241 33 view .LVU2113
 5915 0044 0346     		mov	r3, r0
3233:./Libraries/FatFs/Src/ff.c **** 		}
 5916              		.loc 1 3233 8 view .LVU2114
 5917 0046 0F20     		movs	r0, #15
 5918 0048 E8E7     		b	.L547
 5919              		.cfi_endproc
 5920              	.LFE374:
 5922 004a 00BF     		.section	.text.f_mount,"ax",%progbits
 5923              		.align	1
 5924              		.p2align 2,,3
 5925              		.global	f_mount
 5926              		.syntax unified
 5927              		.thumb
 5928              		.thumb_func
 5929              		.fpu fpv5-d16
 5931              	f_mount:
 5932              	.LVL559:
 5933              	.LFB375:
3244:./Libraries/FatFs/Src/ff.c **** 
3245:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 196


3246:./Libraries/FatFs/Src/ff.c **** 
3247:./Libraries/FatFs/Src/ff.c **** 
3248:./Libraries/FatFs/Src/ff.c **** /*---------------------------------------------------------------------------
3249:./Libraries/FatFs/Src/ff.c **** 
3250:./Libraries/FatFs/Src/ff.c ****    Public Functions (FatFs API)
3251:./Libraries/FatFs/Src/ff.c **** 
3252:./Libraries/FatFs/Src/ff.c **** ----------------------------------------------------------------------------*/
3253:./Libraries/FatFs/Src/ff.c **** 
3254:./Libraries/FatFs/Src/ff.c **** 
3255:./Libraries/FatFs/Src/ff.c **** 
3256:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3257:./Libraries/FatFs/Src/ff.c **** /* Mount/Unmount a Logical Drive                                         */
3258:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3259:./Libraries/FatFs/Src/ff.c **** 
3260:./Libraries/FatFs/Src/ff.c **** FRESULT f_mount (
3261:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
3262:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
3263:./Libraries/FatFs/Src/ff.c **** 	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
3264:./Libraries/FatFs/Src/ff.c **** )
3265:./Libraries/FatFs/Src/ff.c **** {
 5934              		.loc 1 3265 1 is_stmt 1 view -0
 5935              		.cfi_startproc
 5936              		@ args = 0, pretend = 0, frame = 16
 5937              		@ frame_needed = 0, uses_anonymous_args = 0
3266:./Libraries/FatFs/Src/ff.c **** 	FATFS *cfs;
 5938              		.loc 1 3266 2 view .LVU2116
3267:./Libraries/FatFs/Src/ff.c **** 	int vol;
 5939              		.loc 1 3267 2 view .LVU2117
3268:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 5940              		.loc 1 3268 2 view .LVU2118
3269:./Libraries/FatFs/Src/ff.c **** 	const TCHAR *rp = path;
 5941              		.loc 1 3269 2 view .LVU2119
3265:./Libraries/FatFs/Src/ff.c **** 	FATFS *cfs;
 5942              		.loc 1 3265 1 is_stmt 0 view .LVU2120
 5943 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5944              	.LCFI54:
 5945              		.cfi_def_cfa_offset 20
 5946              		.cfi_offset 4, -20
 5947              		.cfi_offset 5, -16
 5948              		.cfi_offset 6, -12
 5949              		.cfi_offset 7, -8
 5950              		.cfi_offset 14, -4
 5951 0002 85B0     		sub	sp, sp, #20
 5952              	.LCFI55:
 5953              		.cfi_def_cfa_offset 40
3265:./Libraries/FatFs/Src/ff.c **** 	FATFS *cfs;
 5954              		.loc 1 3265 1 view .LVU2121
 5955 0004 1646     		mov	r6, r2
 5956 0006 0190     		str	r0, [sp, #4]
3270:./Libraries/FatFs/Src/ff.c **** 
3271:./Libraries/FatFs/Src/ff.c **** 
3272:./Libraries/FatFs/Src/ff.c **** 	/* Get logical drive number */
3273:./Libraries/FatFs/Src/ff.c **** 	vol = get_ldnumber(&rp);
 5957              		.loc 1 3273 8 view .LVU2122
 5958 0008 03A8     		add	r0, sp, #12
 5959              	.LVL560:
3265:./Libraries/FatFs/Src/ff.c **** 	FATFS *cfs;
ARM GAS  /tmp/ccaQXGqa.s 			page 197


 5960              		.loc 1 3265 1 view .LVU2123
 5961 000a 0091     		str	r1, [sp]
3269:./Libraries/FatFs/Src/ff.c **** 
 5962              		.loc 1 3269 15 view .LVU2124
 5963 000c 0391     		str	r1, [sp, #12]
 5964              		.loc 1 3273 2 is_stmt 1 view .LVU2125
 5965              		.loc 1 3273 8 is_stmt 0 view .LVU2126
 5966 000e FFF7FEFF 		bl	get_ldnumber
 5967              	.LVL561:
3274:./Libraries/FatFs/Src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 5968              		.loc 1 3274 2 is_stmt 1 view .LVU2127
 5969              		.loc 1 3274 5 is_stmt 0 view .LVU2128
 5970 0012 051E     		subs	r5, r0, #0
 5971 0014 49DB     		blt	.L571
3275:./Libraries/FatFs/Src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 5972              		.loc 1 3275 2 is_stmt 1 view .LVU2129
 5973              		.loc 1 3275 6 is_stmt 0 view .LVU2130
 5974 0016 284F     		ldr	r7, .L589
 5975 0018 57F82540 		ldr	r4, [r7, r5, lsl #2]
 5976              	.LVL562:
3276:./Libraries/FatFs/Src/ff.c **** 
3277:./Libraries/FatFs/Src/ff.c **** 	if (cfs) {
 5977              		.loc 1 3277 2 is_stmt 1 view .LVU2131
 5978              		.loc 1 3277 5 is_stmt 0 view .LVU2132
 5979 001c 64B1     		cbz	r4, .L565
 5980              	.LVL563:
 5981              	.LBB984:
 5982              	.LBB985:
 869:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 5983              		.loc 1 869 14 is_stmt 1 view .LVU2133
 870:./Libraries/FatFs/Src/ff.c **** 	}
 5984              		.loc 1 870 3 view .LVU2134
 870:./Libraries/FatFs/Src/ff.c **** 	}
 5985              		.loc 1 870 15 is_stmt 0 view .LVU2135
 5986 001e 274B     		ldr	r3, .L589+4
 870:./Libraries/FatFs/Src/ff.c **** 	}
 5987              		.loc 1 870 6 view .LVU2136
 5988 0020 1A68     		ldr	r2, [r3]
 5989 0022 9442     		cmp	r4, r2
 5990 0024 3BD0     		beq	.L587
 869:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 5991              		.loc 1 869 28 is_stmt 1 view .LVU2137
 5992              	.LVL564:
 869:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 5993              		.loc 1 869 14 view .LVU2138
 870:./Libraries/FatFs/Src/ff.c **** 	}
 5994              		.loc 1 870 3 view .LVU2139
 870:./Libraries/FatFs/Src/ff.c **** 	}
 5995              		.loc 1 870 6 is_stmt 0 view .LVU2140
 5996 0026 1A69     		ldr	r2, [r3, #16]
 5997 0028 9442     		cmp	r4, r2
 5998 002a 30D0     		beq	.L588
 5999              	.L567:
 869:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 6000              		.loc 1 869 28 is_stmt 1 view .LVU2141
 6001              	.LVL565:
 869:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
ARM GAS  /tmp/ccaQXGqa.s 			page 198


 6002              		.loc 1 869 14 view .LVU2142
 869:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 6003              		.loc 1 869 14 is_stmt 0 view .LVU2143
 6004              	.LBE985:
 6005              	.LBE984:
3278:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
3279:./Libraries/FatFs/Src/ff.c **** 		clear_lock(cfs);
3280:./Libraries/FatFs/Src/ff.c **** #endif
3281:./Libraries/FatFs/Src/ff.c **** #if _FS_REENTRANT						/* Discard sync object of the current volume */
3282:./Libraries/FatFs/Src/ff.c **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
 6006              		.loc 1 3282 3 is_stmt 1 view .LVU2144
 6007              		.loc 1 3282 8 is_stmt 0 view .LVU2145
 6008 002c E068     		ldr	r0, [r4, #12]
 6009              	.LVL566:
 6010              		.loc 1 3282 8 view .LVU2146
 6011 002e FFF7FEFF 		bl	ff_del_syncobj
 6012              	.LVL567:
 6013              		.loc 1 3282 6 view .LVU2147
 6014 0032 40B3     		cbz	r0, .L570
 6015              	.L568:
3283:./Libraries/FatFs/Src/ff.c **** #endif
3284:./Libraries/FatFs/Src/ff.c **** 		cfs->fs_type = 0;				/* Clear old fs object */
 6016              		.loc 1 3284 3 is_stmt 1 view .LVU2148
 6017              		.loc 1 3284 16 is_stmt 0 view .LVU2149
 6018 0034 0023     		movs	r3, #0
 6019 0036 2370     		strb	r3, [r4]
 6020              	.L565:
3285:./Libraries/FatFs/Src/ff.c **** 	}
3286:./Libraries/FatFs/Src/ff.c **** 
3287:./Libraries/FatFs/Src/ff.c **** 	if (fs) {
 6021              		.loc 1 3287 2 is_stmt 1 view .LVU2150
 6022              		.loc 1 3287 6 is_stmt 0 view .LVU2151
 6023 0038 0199     		ldr	r1, [sp, #4]
 6024              		.loc 1 3287 5 view .LVU2152
 6025 003a F1B1     		cbz	r1, .L569
3288:./Libraries/FatFs/Src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 6026              		.loc 1 3288 3 is_stmt 1 view .LVU2153
 6027              		.loc 1 3288 15 is_stmt 0 view .LVU2154
 6028 003c 0023     		movs	r3, #0
3289:./Libraries/FatFs/Src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
3290:./Libraries/FatFs/Src/ff.c **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
 6029              		.loc 1 3290 8 view .LVU2155
 6030 003e E8B2     		uxtb	r0, r5
3288:./Libraries/FatFs/Src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 6031              		.loc 1 3288 15 view .LVU2156
 6032 0040 01F80C3B 		strb	r3, [r1], #12
 6033              		.loc 1 3290 3 is_stmt 1 view .LVU2157
 6034              		.loc 1 3290 8 is_stmt 0 view .LVU2158
 6035 0044 FFF7FEFF 		bl	ff_cre_syncobj
 6036              	.LVL568:
 6037              		.loc 1 3290 6 view .LVU2159
 6038 0048 E8B1     		cbz	r0, .L570
3291:./Libraries/FatFs/Src/ff.c **** #endif
3292:./Libraries/FatFs/Src/ff.c **** 	}
3293:./Libraries/FatFs/Src/ff.c **** 	FatFs[vol] = fs;					/* Register new fs object */
 6039              		.loc 1 3293 2 is_stmt 1 view .LVU2160
 6040              		.loc 1 3293 13 is_stmt 0 view .LVU2161
ARM GAS  /tmp/ccaQXGqa.s 			page 199


 6041 004a 019B     		ldr	r3, [sp, #4]
 6042 004c 47F82530 		str	r3, [r7, r5, lsl #2]
3294:./Libraries/FatFs/Src/ff.c **** 
3295:./Libraries/FatFs/Src/ff.c **** 	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
 6043              		.loc 1 3295 2 is_stmt 1 view .LVU2162
 6044              		.loc 1 3295 5 is_stmt 0 view .LVU2163
 6045 0050 7BB3     		cbz	r3, .L572
 6046 0052 721E     		subs	r2, r6, #1
 6047 0054 18BF     		it	ne
 6048 0056 0122     		movne	r2, #1
 6049 0058 5ABB     		cbnz	r2, .L572
3296:./Libraries/FatFs/Src/ff.c **** 
3297:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
 6050              		.loc 1 3297 2 is_stmt 1 view .LVU2164
 6051              		.loc 1 3297 8 is_stmt 0 view .LVU2165
 6052 005a 01A9     		add	r1, sp, #4
 6053 005c 6846     		mov	r0, sp
 6054 005e FFF7FEFF 		bl	find_volume
 6055              	.LVL569:
3298:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
 6056              		.loc 1 3298 2 view .LVU2166
 6057 0062 019B     		ldr	r3, [sp, #4]
3297:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
 6058              		.loc 1 3297 8 view .LVU2167
 6059 0064 0446     		mov	r4, r0
 6060              	.LVL570:
 6061              		.loc 1 3298 2 is_stmt 1 view .LVU2168
 6062              	.LBB989:
 6063              	.LBI989:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 6064              		.loc 1 751 6 view .LVU2169
 6065              	.LBB990:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 6066              		.loc 1 756 2 view .LVU2170
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 6067              		.loc 1 756 5 is_stmt 0 view .LVU2171
 6068 0066 5BB1     		cbz	r3, .L573
 6069 0068 0C28     		cmp	r0, #12
 6070 006a 09D0     		beq	.L573
 6071 006c 1846     		mov	r0, r3
 6072              	.LVL571:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 6073              		.loc 1 756 5 view .LVU2172
 6074 006e 2146     		mov	r1, r4
 6075 0070 FFF7FEFF 		bl	unlock_fs.part.0
 6076              	.LVL572:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 6077              		.loc 1 756 5 view .LVU2173
 6078              	.LBE990:
 6079              	.LBE989:
3299:./Libraries/FatFs/Src/ff.c **** }
 6080              		.loc 1 3299 1 view .LVU2174
 6081 0074 2046     		mov	r0, r4
 6082 0076 05B0     		add	sp, sp, #20
 6083              	.LCFI56:
 6084              		.cfi_remember_state
 6085              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/ccaQXGqa.s 			page 200


 6086              		@ sp needed
 6087 0078 F0BD     		pop	{r4, r5, r6, r7, pc}
 6088              	.LVL573:
 6089              	.L569:
 6090              	.LCFI57:
 6091              		.cfi_restore_state
3293:./Libraries/FatFs/Src/ff.c **** 
 6092              		.loc 1 3293 2 is_stmt 1 view .LVU2175
3295:./Libraries/FatFs/Src/ff.c **** 
 6093              		.loc 1 3295 30 is_stmt 0 view .LVU2176
 6094 007a 0C46     		mov	r4, r1
 6095              	.LVL574:
3293:./Libraries/FatFs/Src/ff.c **** 
 6096              		.loc 1 3293 13 view .LVU2177
 6097 007c 47F82510 		str	r1, [r7, r5, lsl #2]
3295:./Libraries/FatFs/Src/ff.c **** 
 6098              		.loc 1 3295 2 is_stmt 1 view .LVU2178
3298:./Libraries/FatFs/Src/ff.c **** }
 6099              		.loc 1 3298 19 view .LVU2179
 6100              	.L573:
 6101              		.loc 1 3299 1 is_stmt 0 view .LVU2180
 6102 0080 2046     		mov	r0, r4
 6103 0082 05B0     		add	sp, sp, #20
 6104              	.LCFI58:
 6105              		.cfi_remember_state
 6106              		.cfi_def_cfa_offset 20
 6107              		@ sp needed
 6108 0084 F0BD     		pop	{r4, r5, r6, r7, pc}
 6109              	.LVL575:
 6110              	.L570:
 6111              	.LCFI59:
 6112              		.cfi_restore_state
3282:./Libraries/FatFs/Src/ff.c **** #endif
 6113              		.loc 1 3282 42 view .LVU2181
 6114 0086 0224     		movs	r4, #2
 6115              	.LVL576:
 6116              		.loc 1 3299 1 view .LVU2182
 6117 0088 2046     		mov	r0, r4
 6118 008a 05B0     		add	sp, sp, #20
 6119              	.LCFI60:
 6120              		.cfi_remember_state
 6121              		.cfi_def_cfa_offset 20
 6122              		@ sp needed
 6123 008c F0BD     		pop	{r4, r5, r6, r7, pc}
 6124              	.LVL577:
 6125              	.L588:
 6126              	.LCFI61:
 6127              		.cfi_restore_state
 6128              	.LBB991:
 6129              	.LBB986:
 870:./Libraries/FatFs/Src/ff.c **** 	}
 6130              		.loc 1 870 26 is_stmt 1 view .LVU2183
 870:./Libraries/FatFs/Src/ff.c **** 	}
 6131              		.loc 1 870 38 is_stmt 0 view .LVU2184
 6132 008e 0022     		movs	r2, #0
 6133              	.LBE986:
 6134              	.LBE991:
ARM GAS  /tmp/ccaQXGqa.s 			page 201


3282:./Libraries/FatFs/Src/ff.c **** #endif
 6135              		.loc 1 3282 8 view .LVU2185
 6136 0090 E068     		ldr	r0, [r4, #12]
 6137              	.LVL578:
 6138              	.LBB992:
 6139              	.LBB987:
 870:./Libraries/FatFs/Src/ff.c **** 	}
 6140              		.loc 1 870 38 view .LVU2186
 6141 0092 1A61     		str	r2, [r3, #16]
 869:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 6142              		.loc 1 869 28 is_stmt 1 view .LVU2187
 6143              	.LVL579:
 869:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 6144              		.loc 1 869 14 view .LVU2188
 869:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 6145              		.loc 1 869 14 is_stmt 0 view .LVU2189
 6146              	.LBE987:
 6147              	.LBE992:
3282:./Libraries/FatFs/Src/ff.c **** #endif
 6148              		.loc 1 3282 3 is_stmt 1 view .LVU2190
3282:./Libraries/FatFs/Src/ff.c **** #endif
 6149              		.loc 1 3282 8 is_stmt 0 view .LVU2191
 6150 0094 FFF7FEFF 		bl	ff_del_syncobj
 6151              	.LVL580:
3282:./Libraries/FatFs/Src/ff.c **** #endif
 6152              		.loc 1 3282 6 view .LVU2192
 6153 0098 0028     		cmp	r0, #0
 6154 009a CBD1     		bne	.L568
 6155 009c F3E7     		b	.L570
 6156              	.LVL581:
 6157              	.L587:
 6158              	.LBB993:
 6159              	.LBB988:
 870:./Libraries/FatFs/Src/ff.c **** 	}
 6160              		.loc 1 870 26 is_stmt 1 view .LVU2193
 870:./Libraries/FatFs/Src/ff.c **** 	}
 6161              		.loc 1 870 38 is_stmt 0 view .LVU2194
 6162 009e 0022     		movs	r2, #0
 6163 00a0 1A60     		str	r2, [r3]
 869:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 6164              		.loc 1 869 28 is_stmt 1 view .LVU2195
 6165              	.LVL582:
 869:./Libraries/FatFs/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 6166              		.loc 1 869 14 view .LVU2196
 870:./Libraries/FatFs/Src/ff.c **** 	}
 6167              		.loc 1 870 3 view .LVU2197
 870:./Libraries/FatFs/Src/ff.c **** 	}
 6168              		.loc 1 870 6 is_stmt 0 view .LVU2198
 6169 00a2 1A69     		ldr	r2, [r3, #16]
 6170 00a4 9442     		cmp	r4, r2
 6171 00a6 C1D1     		bne	.L567
 6172 00a8 F1E7     		b	.L588
 6173              	.LVL583:
 6174              	.L571:
 870:./Libraries/FatFs/Src/ff.c **** 	}
 6175              		.loc 1 870 6 view .LVU2199
 6176              	.LBE988:
ARM GAS  /tmp/ccaQXGqa.s 			page 202


 6177              	.LBE993:
3274:./Libraries/FatFs/Src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 6178              		.loc 1 3274 22 view .LVU2200
 6179 00aa 0B24     		movs	r4, #11
 6180              		.loc 1 3299 1 view .LVU2201
 6181 00ac 2046     		mov	r0, r4
 6182              	.LVL584:
 6183              		.loc 1 3299 1 view .LVU2202
 6184 00ae 05B0     		add	sp, sp, #20
 6185              	.LCFI62:
 6186              		.cfi_remember_state
 6187              		.cfi_def_cfa_offset 20
 6188              		@ sp needed
 6189 00b0 F0BD     		pop	{r4, r5, r6, r7, pc}
 6190              	.LVL585:
 6191              	.L572:
 6192              	.LCFI63:
 6193              		.cfi_restore_state
3295:./Libraries/FatFs/Src/ff.c **** 
 6194              		.loc 1 3295 30 view .LVU2203
 6195 00b2 0024     		movs	r4, #0
 6196              	.LVL586:
3295:./Libraries/FatFs/Src/ff.c **** 
 6197              		.loc 1 3295 30 view .LVU2204
 6198 00b4 E4E7     		b	.L573
 6199              	.L590:
 6200 00b6 00BF     		.align	2
 6201              	.L589:
 6202 00b8 00000000 		.word	.LANCHOR1
 6203 00bc 00000000 		.word	.LANCHOR0
 6204              		.cfi_endproc
 6205              	.LFE375:
 6207              		.section	.text.f_open,"ax",%progbits
 6208              		.align	1
 6209              		.p2align 2,,3
 6210              		.global	f_open
 6211              		.syntax unified
 6212              		.thumb
 6213              		.thumb_func
 6214              		.fpu fpv5-d16
 6216              	f_open:
 6217              	.LVL587:
 6218              	.LFB376:
3300:./Libraries/FatFs/Src/ff.c **** 
3301:./Libraries/FatFs/Src/ff.c **** 
3302:./Libraries/FatFs/Src/ff.c **** 
3303:./Libraries/FatFs/Src/ff.c **** 
3304:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3305:./Libraries/FatFs/Src/ff.c **** /* Open or Create a File                                                 */
3306:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3307:./Libraries/FatFs/Src/ff.c **** 
3308:./Libraries/FatFs/Src/ff.c **** FRESULT f_open (
3309:./Libraries/FatFs/Src/ff.c **** 	FIL* fp,			/* Pointer to the blank file object */
3310:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path,	/* Pointer to the file name */
3311:./Libraries/FatFs/Src/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
3312:./Libraries/FatFs/Src/ff.c **** )
3313:./Libraries/FatFs/Src/ff.c **** {
ARM GAS  /tmp/ccaQXGqa.s 			page 203


 6219              		.loc 1 3313 1 is_stmt 1 view -0
 6220              		.cfi_startproc
 6221              		@ args = 0, pretend = 0, frame = 64
 6222              		@ frame_needed = 0, uses_anonymous_args = 0
3314:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 6223              		.loc 1 3314 2 view .LVU2206
3315:./Libraries/FatFs/Src/ff.c **** 	DIR dj;
 6224              		.loc 1 3315 2 view .LVU2207
3316:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
 6225              		.loc 1 3316 2 view .LVU2208
3317:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
3318:./Libraries/FatFs/Src/ff.c **** 	DWORD dw, cl, bcs, clst, sc;
 6226              		.loc 1 3318 2 view .LVU2209
3319:./Libraries/FatFs/Src/ff.c **** 	FSIZE_t ofs;
 6227              		.loc 1 3319 2 view .LVU2210
3320:./Libraries/FatFs/Src/ff.c **** #endif
3321:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
3322:./Libraries/FatFs/Src/ff.c **** 
3323:./Libraries/FatFs/Src/ff.c **** 
3324:./Libraries/FatFs/Src/ff.c **** 	if (!fp) return FR_INVALID_OBJECT;
 6228              		.loc 1 3324 2 view .LVU2211
3313:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 6229              		.loc 1 3313 1 is_stmt 0 view .LVU2212
 6230 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 6231              	.LCFI64:
 6232              		.cfi_def_cfa_offset 28
 6233              		.cfi_offset 4, -28
 6234              		.cfi_offset 5, -24
 6235              		.cfi_offset 6, -20
 6236              		.cfi_offset 7, -16
 6237              		.cfi_offset 8, -12
 6238              		.cfi_offset 9, -8
 6239              		.cfi_offset 14, -4
 6240 0004 91B0     		sub	sp, sp, #68
 6241              	.LCFI65:
 6242              		.cfi_def_cfa_offset 96
3313:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 6243              		.loc 1 3313 1 view .LVU2213
 6244 0006 0191     		str	r1, [sp, #4]
 6245              		.loc 1 3324 5 view .LVU2214
 6246 0008 0028     		cmp	r0, #0
 6247 000a 4DD0     		beq	.L634
3325:./Libraries/FatFs/Src/ff.c **** 
3326:./Libraries/FatFs/Src/ff.c **** 	/* Get logical drive */
3327:./Libraries/FatFs/Src/ff.c **** 	mode &= _FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN_A
 6248              		.loc 1 3327 2 is_stmt 1 view .LVU2215
 6249              		.loc 1 3327 7 is_stmt 0 view .LVU2216
 6250 000c 02F03F07 		and	r7, r2, #63
 6251              	.LVL588:
3328:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&path, &fs, mode);
 6252              		.loc 1 3328 2 is_stmt 1 view .LVU2217
 6253 0010 1646     		mov	r6, r2
 6254 0012 0446     		mov	r4, r0
 6255              		.loc 1 3328 8 is_stmt 0 view .LVU2218
 6256 0014 03A9     		add	r1, sp, #12
 6257              	.LVL589:
 6258              		.loc 1 3328 8 view .LVU2219
ARM GAS  /tmp/ccaQXGqa.s 			page 204


 6259 0016 01A8     		add	r0, sp, #4
 6260              	.LVL590:
 6261              		.loc 1 3328 8 view .LVU2220
 6262 0018 3A46     		mov	r2, r7
 6263 001a FFF7FEFF 		bl	find_volume
 6264              	.LVL591:
3329:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 6265              		.loc 1 3329 2 is_stmt 1 view .LVU2221
 6266              		.loc 1 3329 5 is_stmt 0 view .LVU2222
 6267 001e 0546     		mov	r5, r0
 6268 0020 80B1     		cbz	r0, .L593
 6269 0022 B0F10C03 		subs	r3, r0, #12
 6270 0026 039E     		ldr	r6, [sp, #12]
 6271 0028 18BF     		it	ne
 6272 002a 0123     		movne	r3, #1
 6273              	.LVL592:
 6274              	.L594:
3330:./Libraries/FatFs/Src/ff.c **** 		dj.obj.fs = fs;
3331:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
3332:./Libraries/FatFs/Src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3333:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
3334:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
3335:./Libraries/FatFs/Src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3336:./Libraries/FatFs/Src/ff.c **** 				res = FR_INVALID_NAME;
3337:./Libraries/FatFs/Src/ff.c **** 			}
3338:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
3339:./Libraries/FatFs/Src/ff.c **** 			else {
3340:./Libraries/FatFs/Src/ff.c **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3341:./Libraries/FatFs/Src/ff.c **** 			}
3342:./Libraries/FatFs/Src/ff.c **** #endif
3343:./Libraries/FatFs/Src/ff.c **** 		}
3344:./Libraries/FatFs/Src/ff.c **** 		/* Create or Open a file */
3345:./Libraries/FatFs/Src/ff.c **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
3346:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
3347:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
3348:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
3349:./Libraries/FatFs/Src/ff.c **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
3350:./Libraries/FatFs/Src/ff.c **** #else
3351:./Libraries/FatFs/Src/ff.c **** 					res = dir_register(&dj);
3352:./Libraries/FatFs/Src/ff.c **** #endif
3353:./Libraries/FatFs/Src/ff.c **** 				}
3354:./Libraries/FatFs/Src/ff.c **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
3355:./Libraries/FatFs/Src/ff.c **** 			}
3356:./Libraries/FatFs/Src/ff.c **** 			else {								/* Any object is already existing */
3357:./Libraries/FatFs/Src/ff.c **** 				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
3358:./Libraries/FatFs/Src/ff.c **** 					res = FR_DENIED;
3359:./Libraries/FatFs/Src/ff.c **** 				} else {
3360:./Libraries/FatFs/Src/ff.c **** 					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
3361:./Libraries/FatFs/Src/ff.c **** 				}
3362:./Libraries/FatFs/Src/ff.c **** 			}
3363:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
3364:./Libraries/FatFs/Src/ff.c **** 				dw = GET_FATTIME();
3365:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
3366:./Libraries/FatFs/Src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3367:./Libraries/FatFs/Src/ff.c **** 					/* Get current allocation info */
3368:./Libraries/FatFs/Src/ff.c **** 					fp->obj.fs = fs;
3369:./Libraries/FatFs/Src/ff.c **** 					fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);
ARM GAS  /tmp/ccaQXGqa.s 			page 205


3370:./Libraries/FatFs/Src/ff.c **** 					fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3371:./Libraries/FatFs/Src/ff.c **** 					fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3372:./Libraries/FatFs/Src/ff.c **** 					fp->obj.n_frag = 0;
3373:./Libraries/FatFs/Src/ff.c **** 					/* Initialize directory entry block */
3374:./Libraries/FatFs/Src/ff.c **** 					st_dword(fs->dirbuf + XDIR_CrtTime, dw);	/* Set created time */
3375:./Libraries/FatFs/Src/ff.c **** 					fs->dirbuf[XDIR_CrtTime10] = 0;
3376:./Libraries/FatFs/Src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, dw);	/* Set modified time */
3377:./Libraries/FatFs/Src/ff.c **** 					fs->dirbuf[XDIR_ModTime10] = 0;
3378:./Libraries/FatFs/Src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_ARC;				/* Reset attribute */
3379:./Libraries/FatFs/Src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, 0);		/* Reset file allocation info */
3380:./Libraries/FatFs/Src/ff.c **** 					st_qword(fs->dirbuf + XDIR_FileSize, 0);
3381:./Libraries/FatFs/Src/ff.c **** 					st_qword(fs->dirbuf + XDIR_ValidFileSize, 0);
3382:./Libraries/FatFs/Src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 1;
3383:./Libraries/FatFs/Src/ff.c **** 					res = store_xdir(&dj);
3384:./Libraries/FatFs/Src/ff.c **** 					if (res == FR_OK && fp->obj.sclust) {		/* Remove the cluster chain if exist */
3385:./Libraries/FatFs/Src/ff.c **** 						res = remove_chain(&fp->obj, fp->obj.sclust, 0);
3386:./Libraries/FatFs/Src/ff.c **** 						fs->last_clst = fp->obj.sclust - 1;		/* Reuse the cluster hole */
3387:./Libraries/FatFs/Src/ff.c **** 					}
3388:./Libraries/FatFs/Src/ff.c **** 				} else
3389:./Libraries/FatFs/Src/ff.c **** #endif
3390:./Libraries/FatFs/Src/ff.c **** 				{
3391:./Libraries/FatFs/Src/ff.c **** 					/* Clean directory info */
3392:./Libraries/FatFs/Src/ff.c **** 					st_dword(dj.dir + DIR_CrtTime, dw);	/* Set created time */
3393:./Libraries/FatFs/Src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
3394:./Libraries/FatFs/Src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
3395:./Libraries/FatFs/Src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
3396:./Libraries/FatFs/Src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
3397:./Libraries/FatFs/Src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
3398:./Libraries/FatFs/Src/ff.c **** 					fs->wflag = 1;
3399:./Libraries/FatFs/Src/ff.c **** 
3400:./Libraries/FatFs/Src/ff.c **** 					if (cl) {							/* Remove the cluster chain if exist */
3401:./Libraries/FatFs/Src/ff.c **** 						dw = fs->winsect;
3402:./Libraries/FatFs/Src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
3403:./Libraries/FatFs/Src/ff.c **** 						if (res == FR_OK) {
3404:./Libraries/FatFs/Src/ff.c **** 							res = move_window(fs, dw);
3405:./Libraries/FatFs/Src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
3406:./Libraries/FatFs/Src/ff.c **** 						}
3407:./Libraries/FatFs/Src/ff.c **** 					}
3408:./Libraries/FatFs/Src/ff.c **** 				}
3409:./Libraries/FatFs/Src/ff.c **** 			}
3410:./Libraries/FatFs/Src/ff.c **** 		}
3411:./Libraries/FatFs/Src/ff.c **** 		else {	/* Open an existing file */
3412:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {					/* Following succeeded */
3413:./Libraries/FatFs/Src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3414:./Libraries/FatFs/Src/ff.c **** 					res = FR_NO_FILE;
3415:./Libraries/FatFs/Src/ff.c **** 				} else {
3416:./Libraries/FatFs/Src/ff.c **** 					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* R/O violation */
3417:./Libraries/FatFs/Src/ff.c **** 						res = FR_DENIED;
3418:./Libraries/FatFs/Src/ff.c **** 					}
3419:./Libraries/FatFs/Src/ff.c **** 				}
3420:./Libraries/FatFs/Src/ff.c **** 			}
3421:./Libraries/FatFs/Src/ff.c **** 		}
3422:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
3423:./Libraries/FatFs/Src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
3424:./Libraries/FatFs/Src/ff.c **** 				mode |= FA_MODIFIED;
3425:./Libraries/FatFs/Src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
3426:./Libraries/FatFs/Src/ff.c **** 			fp->dir_ptr = dj.dir;
ARM GAS  /tmp/ccaQXGqa.s 			page 206


3427:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
3428:./Libraries/FatFs/Src/ff.c **** 			fp->obj.lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3429:./Libraries/FatFs/Src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
3430:./Libraries/FatFs/Src/ff.c **** #endif
3431:./Libraries/FatFs/Src/ff.c **** 		}
3432:./Libraries/FatFs/Src/ff.c **** #else		/* R/O configuration */
3433:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
3434:./Libraries/FatFs/Src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3435:./Libraries/FatFs/Src/ff.c **** 				res = FR_INVALID_NAME;
3436:./Libraries/FatFs/Src/ff.c **** 			} else {
3437:./Libraries/FatFs/Src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3438:./Libraries/FatFs/Src/ff.c **** 					res = FR_NO_FILE;
3439:./Libraries/FatFs/Src/ff.c **** 				}
3440:./Libraries/FatFs/Src/ff.c **** 			}
3441:./Libraries/FatFs/Src/ff.c **** 		}
3442:./Libraries/FatFs/Src/ff.c **** #endif
3443:./Libraries/FatFs/Src/ff.c **** 
3444:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
3445:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
3446:./Libraries/FatFs/Src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3447:./Libraries/FatFs/Src/ff.c **** 				fp->obj.c_scl = dj.obj.sclust;							/* Get containing directory info */
3448:./Libraries/FatFs/Src/ff.c **** 				fp->obj.c_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3449:./Libraries/FatFs/Src/ff.c **** 				fp->obj.c_ofs = dj.blk_ofs;
3450:./Libraries/FatFs/Src/ff.c **** 				fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
3451:./Libraries/FatFs/Src/ff.c **** 				fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3452:./Libraries/FatFs/Src/ff.c **** 				fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3453:./Libraries/FatFs/Src/ff.c **** 			} else
3454:./Libraries/FatFs/Src/ff.c **** #endif
3455:./Libraries/FatFs/Src/ff.c **** 			{
3456:./Libraries/FatFs/Src/ff.c **** 				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
3457:./Libraries/FatFs/Src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
3458:./Libraries/FatFs/Src/ff.c **** 			}
3459:./Libraries/FatFs/Src/ff.c **** #if _USE_FASTSEEK
3460:./Libraries/FatFs/Src/ff.c **** 			fp->cltbl = 0;			/* Disable fast seek mode */
3461:./Libraries/FatFs/Src/ff.c **** #endif
3462:./Libraries/FatFs/Src/ff.c **** 			fp->obj.fs = fs;	 	/* Validate the file object */
3463:./Libraries/FatFs/Src/ff.c **** 			fp->obj.id = fs->id;
3464:./Libraries/FatFs/Src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
3465:./Libraries/FatFs/Src/ff.c **** 			fp->err = 0;			/* Clear error flag */
3466:./Libraries/FatFs/Src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
3467:./Libraries/FatFs/Src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
3468:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
3469:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
3470:./Libraries/FatFs/Src/ff.c **** 			mem_set(fp->buf, 0, _MAX_SS);	/* Clear sector buffer */
3471:./Libraries/FatFs/Src/ff.c **** #endif
3472:./Libraries/FatFs/Src/ff.c **** 			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is sp
3473:./Libraries/FatFs/Src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
3474:./Libraries/FatFs/Src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
3475:./Libraries/FatFs/Src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
3476:./Libraries/FatFs/Src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
3477:./Libraries/FatFs/Src/ff.c **** 					clst = get_fat(&fp->obj, clst);
3478:./Libraries/FatFs/Src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
3479:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
3480:./Libraries/FatFs/Src/ff.c **** 				}
3481:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;
3482:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
3483:./Libraries/FatFs/Src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
ARM GAS  /tmp/ccaQXGqa.s 			page 207


3484:./Libraries/FatFs/Src/ff.c **** 						res = FR_INT_ERR;
3485:./Libraries/FatFs/Src/ff.c **** 					} else {
3486:./Libraries/FatFs/Src/ff.c **** 						fp->sect = sc + (DWORD)(ofs / SS(fs));
3487:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
3488:./Libraries/FatFs/Src/ff.c **** 						if (disk_read(fs->drv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
3489:./Libraries/FatFs/Src/ff.c **** #endif
3490:./Libraries/FatFs/Src/ff.c **** 					}
3491:./Libraries/FatFs/Src/ff.c **** 				}
3492:./Libraries/FatFs/Src/ff.c **** 			}
3493:./Libraries/FatFs/Src/ff.c **** #endif
3494:./Libraries/FatFs/Src/ff.c **** 		}
3495:./Libraries/FatFs/Src/ff.c **** 
3496:./Libraries/FatFs/Src/ff.c **** 		FREE_NAMBUF();
3497:./Libraries/FatFs/Src/ff.c **** 	}
3498:./Libraries/FatFs/Src/ff.c **** 
3499:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
 6275              		.loc 1 3499 20 is_stmt 1 discriminator 1 view .LVU2223
 6276              		.loc 1 3499 31 is_stmt 0 discriminator 1 view .LVU2224
 6277 002c 0022     		movs	r2, #0
 6278 002e 2260     		str	r2, [r4]
 6279              	.L626:
3500:./Libraries/FatFs/Src/ff.c **** 
3501:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
 6280              		.loc 1 3501 2 is_stmt 1 view .LVU2225
 6281              	.LVL593:
 6282              	.LBB994:
 6283              	.LBI994:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 6284              		.loc 1 751 6 view .LVU2226
 6285              	.LBB995:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 6286              		.loc 1 756 2 view .LVU2227
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 6287              		.loc 1 756 5 is_stmt 0 view .LVU2228
 6288 0030 26B1     		cbz	r6, .L638
 6289 0032 1BB1     		cbz	r3, .L638
 6290              	.LVL594:
 6291              	.L617:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 6292              		.loc 1 756 5 view .LVU2229
 6293 0034 3046     		mov	r0, r6
 6294 0036 2946     		mov	r1, r5
 6295 0038 FFF7FEFF 		bl	unlock_fs.part.0
 6296              	.LVL595:
 6297              	.L638:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 6298              		.loc 1 756 5 view .LVU2230
 6299              	.LBE995:
 6300              	.LBE994:
3502:./Libraries/FatFs/Src/ff.c **** }
 6301              		.loc 1 3502 1 view .LVU2231
 6302 003c 2846     		mov	r0, r5
 6303 003e 11B0     		add	sp, sp, #68
 6304              	.LCFI66:
 6305              		.cfi_remember_state
 6306              		.cfi_def_cfa_offset 28
 6307              		@ sp needed
ARM GAS  /tmp/ccaQXGqa.s 			page 208


 6308 0040 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 6309              	.LVL596:
 6310              	.L593:
 6311              	.LCFI67:
 6312              		.cfi_restore_state
3330:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
 6313              		.loc 1 3330 3 is_stmt 1 view .LVU2232
3330:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
 6314              		.loc 1 3330 13 is_stmt 0 view .LVU2233
 6315 0044 039B     		ldr	r3, [sp, #12]
3332:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
 6316              		.loc 1 3332 9 view .LVU2234
 6317 0046 04A8     		add	r0, sp, #16
 6318              	.LVL597:
3332:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
 6319              		.loc 1 3332 9 view .LVU2235
 6320 0048 0199     		ldr	r1, [sp, #4]
3330:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
 6321              		.loc 1 3330 13 view .LVU2236
 6322 004a 0493     		str	r3, [sp, #16]
3331:./Libraries/FatFs/Src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 6323              		.loc 1 3331 18 is_stmt 1 view .LVU2237
3332:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
 6324              		.loc 1 3332 3 view .LVU2238
3332:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
 6325              		.loc 1 3332 9 is_stmt 0 view .LVU2239
 6326 004c FFF7FEFF 		bl	follow_path
 6327              	.LVL598:
 6328 0050 0246     		mov	r2, r0
 6329              	.LVL599:
3334:./Libraries/FatFs/Src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
 6330              		.loc 1 3334 3 is_stmt 1 view .LVU2240
3334:./Libraries/FatFs/Src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
 6331              		.loc 1 3334 6 is_stmt 0 view .LVU2241
 6332 0052 F0B9     		cbnz	r0, .L595
3335:./Libraries/FatFs/Src/ff.c **** 				res = FR_INVALID_NAME;
 6333              		.loc 1 3335 4 is_stmt 1 view .LVU2242
3335:./Libraries/FatFs/Src/ff.c **** 				res = FR_INVALID_NAME;
 6334              		.loc 1 3335 7 is_stmt 0 view .LVU2243
 6335 0054 9DF93F30 		ldrsb	r3, [sp, #63]
 6336 0058 002B     		cmp	r3, #0
 6337 005a 48DB     		blt	.L670
3340:./Libraries/FatFs/Src/ff.c **** 			}
 6338              		.loc 1 3340 5 is_stmt 1 view .LVU2244
3340:./Libraries/FatFs/Src/ff.c **** 			}
 6339              		.loc 1 3340 11 is_stmt 0 view .LVU2245
 6340 005c 17F0FE0F 		tst	r7, #254
 6341 0060 04A8     		add	r0, sp, #16
 6342              	.LVL600:
3340:./Libraries/FatFs/Src/ff.c **** 			}
 6343              		.loc 1 3340 11 view .LVU2246
 6344 0062 14BF     		ite	ne
 6345 0064 0121     		movne	r1, #1
 6346 0066 0021     		moveq	r1, #0
 6347 0068 FFF7FEFF 		bl	chk_lock
 6348              	.LVL601:
3345:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
ARM GAS  /tmp/ccaQXGqa.s 			page 209


 6349              		.loc 1 3345 6 view .LVU2247
 6350 006c 16F01C0F 		tst	r6, #28
3340:./Libraries/FatFs/Src/ff.c **** 			}
 6351              		.loc 1 3340 11 view .LVU2248
 6352 0070 0246     		mov	r2, r0
 6353              	.LVL602:
3345:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 6354              		.loc 1 3345 3 is_stmt 1 view .LVU2249
3345:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 6355              		.loc 1 3345 6 is_stmt 0 view .LVU2250
 6356 0072 1ED0     		beq	.L597
3346:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
 6357              		.loc 1 3346 4 is_stmt 1 view .LVU2251
3346:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
 6358              		.loc 1 3346 7 is_stmt 0 view .LVU2252
 6359 0074 0028     		cmp	r0, #0
 6360 0076 40F09980 		bne	.L632
3357:./Libraries/FatFs/Src/ff.c **** 					res = FR_DENIED;
 6361              		.loc 1 3357 5 is_stmt 1 view .LVU2253
3357:./Libraries/FatFs/Src/ff.c **** 					res = FR_DENIED;
 6362              		.loc 1 3357 8 is_stmt 0 view .LVU2254
 6363 007a 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 6364 007e 13F0110F 		tst	r3, #17
 6365 0082 38D1     		bne	.L613
3360:./Libraries/FatFs/Src/ff.c **** 				}
 6366              		.loc 1 3360 6 is_stmt 1 view .LVU2255
3360:./Libraries/FatFs/Src/ff.c **** 				}
 6367              		.loc 1 3360 9 is_stmt 0 view .LVU2256
 6368 0084 7307     		lsls	r3, r6, #29
 6369 0086 40F10281 		bpl	.L603
 6370 008a 039E     		ldr	r6, [sp, #12]
 6371 008c 0123     		movs	r3, #1
3360:./Libraries/FatFs/Src/ff.c **** 				}
 6372              		.loc 1 3360 36 view .LVU2257
 6373 008e 0825     		movs	r5, #8
 6374 0090 CCE7     		b	.L594
 6375              	.L595:
3345:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 6376              		.loc 1 3345 3 is_stmt 1 view .LVU2258
3345:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 6377              		.loc 1 3345 6 is_stmt 0 view .LVU2259
 6378 0092 16F01C0F 		tst	r6, #28
 6379 0096 40F08980 		bne	.L632
 6380              	.L668:
3345:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 6381              		.loc 1 3345 6 view .LVU2260
 6382 009a 039E     		ldr	r6, [sp, #12]
 6383              	.L667:
3345:./Libraries/FatFs/Src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 6384              		.loc 1 3345 6 view .LVU2261
 6385 009c B0F10C03 		subs	r3, r0, #12
3412:./Libraries/FatFs/Src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
 6386              		.loc 1 3412 7 view .LVU2262
 6387 00a0 0546     		mov	r5, r0
 6388 00a2 18BF     		it	ne
 6389 00a4 0123     		movne	r3, #1
 6390 00a6 C1E7     		b	.L594
ARM GAS  /tmp/ccaQXGqa.s 			page 210


 6391              	.LVL603:
 6392              	.L634:
3324:./Libraries/FatFs/Src/ff.c **** 
 6393              		.loc 1 3324 18 view .LVU2263
 6394 00a8 0925     		movs	r5, #9
3501:./Libraries/FatFs/Src/ff.c **** }
 6395              		.loc 1 3501 19 is_stmt 1 view .LVU2264
 6396              		.loc 1 3502 1 is_stmt 0 view .LVU2265
 6397 00aa 2846     		mov	r0, r5
 6398              	.LVL604:
 6399              		.loc 1 3502 1 view .LVU2266
 6400 00ac 11B0     		add	sp, sp, #68
 6401              	.LCFI68:
 6402              		.cfi_remember_state
 6403              		.cfi_def_cfa_offset 28
 6404              		@ sp needed
 6405 00ae BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 6406              	.LVL605:
 6407              	.L597:
 6408              	.LCFI69:
 6409              		.cfi_restore_state
3412:./Libraries/FatFs/Src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
 6410              		.loc 1 3412 4 is_stmt 1 view .LVU2267
3412:./Libraries/FatFs/Src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
 6411              		.loc 1 3412 7 is_stmt 0 view .LVU2268
 6412 00b2 0028     		cmp	r0, #0
 6413 00b4 F1D1     		bne	.L668
3413:./Libraries/FatFs/Src/ff.c **** 					res = FR_NO_FILE;
 6414              		.loc 1 3413 5 is_stmt 1 view .LVU2269
3413:./Libraries/FatFs/Src/ff.c **** 					res = FR_NO_FILE;
 6415              		.loc 1 3413 15 is_stmt 0 view .LVU2270
 6416 00b6 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
3413:./Libraries/FatFs/Src/ff.c **** 					res = FR_NO_FILE;
 6417              		.loc 1 3413 8 view .LVU2271
 6418 00ba DA06     		lsls	r2, r3, #27
 6419 00bc 1FD4     		bmi	.L671
3416:./Libraries/FatFs/Src/ff.c **** 						res = FR_DENIED;
 6420              		.loc 1 3416 6 is_stmt 1 view .LVU2272
3416:./Libraries/FatFs/Src/ff.c **** 						res = FR_DENIED;
 6421              		.loc 1 3416 9 is_stmt 0 view .LVU2273
 6422 00be B007     		lsls	r0, r6, #30
 6423              	.LVL606:
3416:./Libraries/FatFs/Src/ff.c **** 						res = FR_DENIED;
 6424              		.loc 1 3416 9 view .LVU2274
 6425 00c0 01D5     		bpl	.L666
3416:./Libraries/FatFs/Src/ff.c **** 						res = FR_DENIED;
 6426              		.loc 1 3416 28 discriminator 1 view .LVU2275
 6427 00c2 DA07     		lsls	r2, r3, #31
 6428 00c4 17D4     		bmi	.L613
 6429              	.L666:
 6430 00c6 039E     		ldr	r6, [sp, #12]
 6431              	.L609:
 6432              	.LVL607:
3423:./Libraries/FatFs/Src/ff.c **** 				mode |= FA_MODIFIED;
 6433              		.loc 1 3423 4 is_stmt 1 view .LVU2276
3423:./Libraries/FatFs/Src/ff.c **** 				mode |= FA_MODIFIED;
 6434              		.loc 1 3423 7 is_stmt 0 view .LVU2277
ARM GAS  /tmp/ccaQXGqa.s 			page 211


 6435 00c8 3B07     		lsls	r3, r7, #28
 6436 00ca 40F1DA80 		bpl	.L672
3424:./Libraries/FatFs/Src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 6437              		.loc 1 3424 5 is_stmt 1 view .LVU2278
3424:./Libraries/FatFs/Src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 6438              		.loc 1 3424 10 is_stmt 0 view .LVU2279
 6439 00ce 47F04007 		orr	r7, r7, #64
 6440              	.LVL608:
3424:./Libraries/FatFs/Src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 6441              		.loc 1 3424 10 view .LVU2280
 6442 00d2 0121     		movs	r1, #1
 6443              	.LVL609:
 6444              	.L615:
3425:./Libraries/FatFs/Src/ff.c **** 			fp->dir_ptr = dj.dir;
 6445              		.loc 1 3425 4 is_stmt 1 view .LVU2281
3425:./Libraries/FatFs/Src/ff.c **** 			fp->dir_ptr = dj.dir;
 6446              		.loc 1 3425 17 is_stmt 0 view .LVU2282
 6447 00d4 326B     		ldr	r2, [r6, #48]
3428:./Libraries/FatFs/Src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
 6448              		.loc 1 3428 21 view .LVU2283
 6449 00d6 04A8     		add	r0, sp, #16
3426:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 6450              		.loc 1 3426 16 view .LVU2284
 6451 00d8 0C9B     		ldr	r3, [sp, #48]
 6452 00da C4E90923 		strd	r2, r3, [r4, #36]
3428:./Libraries/FatFs/Src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
 6453              		.loc 1 3428 4 is_stmt 1 view .LVU2285
3428:./Libraries/FatFs/Src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
 6454              		.loc 1 3428 21 is_stmt 0 view .LVU2286
 6455 00de FFF7FEFF 		bl	inc_lock
 6456              	.LVL610:
3428:./Libraries/FatFs/Src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
 6457              		.loc 1 3428 19 view .LVU2287
 6458 00e2 2061     		str	r0, [r4, #16]
3429:./Libraries/FatFs/Src/ff.c **** #endif
 6459              		.loc 1 3429 4 is_stmt 1 view .LVU2288
3429:./Libraries/FatFs/Src/ff.c **** #endif
 6460              		.loc 1 3429 7 is_stmt 0 view .LVU2289
 6461 00e4 78B9     		cbnz	r0, .L630
 6462 00e6 039E     		ldr	r6, [sp, #12]
 6463 00e8 0123     		movs	r3, #1
3429:./Libraries/FatFs/Src/ff.c **** #endif
 6464              		.loc 1 3429 29 view .LVU2290
 6465 00ea 0225     		movs	r5, #2
 6466 00ec 9EE7     		b	.L594
 6467              	.LVL611:
 6468              	.L670:
3429:./Libraries/FatFs/Src/ff.c **** #endif
 6469              		.loc 1 3429 29 view .LVU2291
 6470 00ee 039E     		ldr	r6, [sp, #12]
3335:./Libraries/FatFs/Src/ff.c **** 				res = FR_INVALID_NAME;
 6471              		.loc 1 3335 7 view .LVU2292
 6472 00f0 0123     		movs	r3, #1
3336:./Libraries/FatFs/Src/ff.c **** 			}
 6473              		.loc 1 3336 9 view .LVU2293
 6474 00f2 0625     		movs	r5, #6
 6475 00f4 9AE7     		b	.L594
ARM GAS  /tmp/ccaQXGqa.s 			page 212


 6476              	.LVL612:
 6477              	.L613:
3336:./Libraries/FatFs/Src/ff.c **** 			}
 6478              		.loc 1 3336 9 view .LVU2294
 6479 00f6 039E     		ldr	r6, [sp, #12]
3412:./Libraries/FatFs/Src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
 6480              		.loc 1 3412 7 view .LVU2295
 6481 00f8 0123     		movs	r3, #1
3358:./Libraries/FatFs/Src/ff.c **** 				} else {
 6482              		.loc 1 3358 10 view .LVU2296
 6483 00fa 0725     		movs	r5, #7
 6484 00fc 96E7     		b	.L594
 6485              	.LVL613:
 6486              	.L671:
3358:./Libraries/FatFs/Src/ff.c **** 				} else {
 6487              		.loc 1 3358 10 view .LVU2297
 6488 00fe 039E     		ldr	r6, [sp, #12]
3413:./Libraries/FatFs/Src/ff.c **** 					res = FR_NO_FILE;
 6489              		.loc 1 3413 8 view .LVU2298
 6490 0100 0123     		movs	r3, #1
3414:./Libraries/FatFs/Src/ff.c **** 				} else {
 6491              		.loc 1 3414 10 view .LVU2299
 6492 0102 0425     		movs	r5, #4
 6493 0104 92E7     		b	.L594
 6494              	.LVL614:
 6495              	.L630:
3444:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 6496              		.loc 1 3444 3 is_stmt 1 view .LVU2300
3456:./Libraries/FatFs/Src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 6497              		.loc 1 3456 5 view .LVU2301
3456:./Libraries/FatFs/Src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 6498              		.loc 1 3456 22 is_stmt 0 view .LVU2302
 6499 0106 039E     		ldr	r6, [sp, #12]
3456:./Libraries/FatFs/Src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 6500              		.loc 1 3456 37 view .LVU2303
 6501 0108 0C9B     		ldr	r3, [sp, #48]
 6502              	.LVL615:
 6503              	.LBB996:
 6504              	.LBI996:
1632:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
 6505              		.loc 1 1632 7 is_stmt 1 view .LVU2304
 6506              	.LBB997:
1637:./Libraries/FatFs/Src/ff.c **** 
 6507              		.loc 1 1637 2 view .LVU2305
1639:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 6508              		.loc 1 1639 2 view .LVU2306
 6509              	.LBB998:
 6510              	.LBI998:
 613:./Libraries/FatFs/Src/ff.c **** {
 6511              		.loc 1 613 6 view .LVU2307
 6512              	.LBB999:
 615:./Libraries/FatFs/Src/ff.c **** 
 6513              		.loc 1 615 2 view .LVU2308
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 6514              		.loc 1 617 2 view .LVU2309
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 6515              		.loc 1 618 2 view .LVU2310
ARM GAS  /tmp/ccaQXGqa.s 			page 213


 619:./Libraries/FatFs/Src/ff.c **** }
 6516              		.loc 1 619 2 view .LVU2311
 619:./Libraries/FatFs/Src/ff.c **** }
 6517              		.loc 1 619 2 is_stmt 0 view .LVU2312
 6518              	.LBE999:
 6519              	.LBE998:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 6520              		.loc 1 1640 5 view .LVU2313
 6521 010a 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 6522              	.LBB1001:
 6523              	.LBB1000:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 6524              		.loc 1 618 10 view .LVU2314
 6525 010c D87E     		ldrb	r0, [r3, #27]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 6526              		.loc 1 618 20 view .LVU2315
 6527 010e 9A7E     		ldrb	r2, [r3, #26]	@ zero_extendqisi2
 6528              	.LBE1000:
 6529              	.LBE1001:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 6530              		.loc 1 1640 5 view .LVU2316
 6531 0110 0329     		cmp	r1, #3
1639:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 6532              		.loc 1 1639 5 view .LVU2317
 6533 0112 42EA0022 		orr	r2, r2, r0, lsl #8
 6534              	.LVL616:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 6535              		.loc 1 1640 2 is_stmt 1 view .LVU2318
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 6536              		.loc 1 1640 5 is_stmt 0 view .LVU2319
 6537 0116 05D1     		bne	.L629
1641:./Libraries/FatFs/Src/ff.c **** 	}
 6538              		.loc 1 1641 3 is_stmt 1 view .LVU2320
 6539              	.LVL617:
 6540              	.LBB1002:
 6541              	.LBI1002:
 613:./Libraries/FatFs/Src/ff.c **** {
 6542              		.loc 1 613 6 view .LVU2321
 6543              	.LBB1003:
 615:./Libraries/FatFs/Src/ff.c **** 
 6544              		.loc 1 615 2 view .LVU2322
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 6545              		.loc 1 617 2 view .LVU2323
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 6546              		.loc 1 618 2 view .LVU2324
 619:./Libraries/FatFs/Src/ff.c **** }
 6547              		.loc 1 619 2 view .LVU2325
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 6548              		.loc 1 618 10 is_stmt 0 view .LVU2326
 6549 0118 587D     		ldrb	r0, [r3, #21]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 6550              		.loc 1 618 20 view .LVU2327
 6551 011a 197D     		ldrb	r1, [r3, #20]	@ zero_extendqisi2
 6552              	.LBE1003:
 6553              	.LBE1002:
1641:./Libraries/FatFs/Src/ff.c **** 	}
 6554              		.loc 1 1641 9 view .LVU2328
ARM GAS  /tmp/ccaQXGqa.s 			page 214


 6555 011c 41EA0021 		orr	r1, r1, r0, lsl #8
1641:./Libraries/FatFs/Src/ff.c **** 	}
 6556              		.loc 1 1641 6 view .LVU2329
 6557 0120 42EA0142 		orr	r2, r2, r1, lsl #16
 6558              	.LVL618:
 6559              	.L629:
1644:./Libraries/FatFs/Src/ff.c **** }
 6560              		.loc 1 1644 2 is_stmt 1 view .LVU2330
1644:./Libraries/FatFs/Src/ff.c **** }
 6561              		.loc 1 1644 2 is_stmt 0 view .LVU2331
 6562              	.LBE997:
 6563              	.LBE996:
3456:./Libraries/FatFs/Src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 6564              		.loc 1 3456 20 view .LVU2332
 6565 0124 A260     		str	r2, [r4, #8]
3457:./Libraries/FatFs/Src/ff.c **** 			}
 6566              		.loc 1 3457 5 is_stmt 1 view .LVU2333
 6567              	.LVL619:
 6568              	.LBB1004:
 6569              	.LBI1004:
 623:./Libraries/FatFs/Src/ff.c **** {
 6570              		.loc 1 623 7 view .LVU2334
 6571              	.LBB1005:
 625:./Libraries/FatFs/Src/ff.c **** 
 6572              		.loc 1 625 2 view .LVU2335
 627:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 6573              		.loc 1 627 2 view .LVU2336
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 6574              		.loc 1 628 2 view .LVU2337
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 6575              		.loc 1 629 2 view .LVU2338
 6576              	.LBE1005:
 6577              	.LBE1004:
3460:./Libraries/FatFs/Src/ff.c **** #endif
 6578              		.loc 1 3460 14 is_stmt 0 view .LVU2339
 6579 0126 0020     		movs	r0, #0
 6580              	.LBB1009:
 6581              	.LBB1006:
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 6582              		.loc 1 628 5 view .LVU2340
 6583 0128 B3F81EC0 		ldrh	ip, [r3, #30]	@ unaligned
 6584              	.LVL620:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 6585              		.loc 1 630 2 is_stmt 1 view .LVU2341
 6586              	.LBE1006:
 6587              	.LBE1009:
3470:./Libraries/FatFs/Src/ff.c **** #endif
 6588              		.loc 1 3470 14 is_stmt 0 view .LVU2342
 6589 012c 04F13008 		add	r8, r4, #48
 6590              	.LBB1010:
 6591              	.LBB1007:
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 6592              		.loc 1 629 20 view .LVU2343
 6593 0130 597F     		ldrb	r1, [r3, #29]	@ zero_extendqisi2
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 6594              		.loc 1 630 20 view .LVU2344
 6595 0132 1A7F     		ldrb	r2, [r3, #28]	@ zero_extendqisi2
ARM GAS  /tmp/ccaQXGqa.s 			page 215


 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 6596              		.loc 1 629 5 view .LVU2345
 6597 0134 41EA0C23 		orr	r3, r1, ip, lsl #8
 6598              	.LVL621:
 631:./Libraries/FatFs/Src/ff.c **** }
 6599              		.loc 1 631 2 is_stmt 1 view .LVU2346
 631:./Libraries/FatFs/Src/ff.c **** }
 6600              		.loc 1 631 2 is_stmt 0 view .LVU2347
 6601              	.LBE1007:
 6602              	.LBE1010:
3463:./Libraries/FatFs/Src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
 6603              		.loc 1 3463 15 view .LVU2348
 6604 0138 B6F806C0 		ldrh	ip, [r6, #6]
 6605              	.LBB1011:
 6606              	.LBB1012:
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 6607              		.loc 1 710 8 view .LVU2349
 6608 013c 0146     		mov	r1, r0
 6609              	.LBE1012:
 6610              	.LBE1011:
3462:./Libraries/FatFs/Src/ff.c **** 			fp->obj.id = fs->id;
 6611              		.loc 1 3462 15 view .LVU2350
 6612 013e 2660     		str	r6, [r4]
 6613              	.LBB1015:
 6614              	.LBB1008:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 6615              		.loc 1 630 5 view .LVU2351
 6616 0140 42EA0322 		orr	r2, r2, r3, lsl #8
 6617              	.LBE1008:
 6618              	.LBE1015:
 6619              	.LBB1016:
 6620              	.LBB1013:
 707:./Libraries/FatFs/Src/ff.c **** 
 6621              		.loc 1 707 8 view .LVU2352
 6622 0144 4346     		mov	r3, r8
 6623              	.LBE1013:
 6624              	.LBE1016:
3460:./Libraries/FatFs/Src/ff.c **** #endif
 6625              		.loc 1 3460 14 view .LVU2353
 6626 0146 E062     		str	r0, [r4, #44]
3457:./Libraries/FatFs/Src/ff.c **** 			}
 6627              		.loc 1 3457 21 view .LVU2354
 6628 0148 E260     		str	r2, [r4, #12]
3460:./Libraries/FatFs/Src/ff.c **** #endif
 6629              		.loc 1 3460 4 is_stmt 1 view .LVU2355
3462:./Libraries/FatFs/Src/ff.c **** 			fp->obj.id = fs->id;
 6630              		.loc 1 3462 4 view .LVU2356
3463:./Libraries/FatFs/Src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
 6631              		.loc 1 3463 4 view .LVU2357
 6632 014a 04F50C72 		add	r2, r4, #560
3465:./Libraries/FatFs/Src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
 6633              		.loc 1 3465 12 is_stmt 0 view .LVU2358
 6634 014e 6075     		strb	r0, [r4, #21]
3463:./Libraries/FatFs/Src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
 6635              		.loc 1 3463 15 view .LVU2359
 6636 0150 A4F804C0 		strh	ip, [r4, #4]	@ movhi
3464:./Libraries/FatFs/Src/ff.c **** 			fp->err = 0;			/* Clear error flag */
ARM GAS  /tmp/ccaQXGqa.s 			page 216


 6637              		.loc 1 3464 4 is_stmt 1 view .LVU2360
3466:./Libraries/FatFs/Src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
 6638              		.loc 1 3466 13 is_stmt 0 view .LVU2361
 6639 0154 2062     		str	r0, [r4, #32]
3467:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 6640              		.loc 1 3467 13 view .LVU2362
 6641 0156 A061     		str	r0, [r4, #24]
3464:./Libraries/FatFs/Src/ff.c **** 			fp->err = 0;			/* Clear error flag */
 6642              		.loc 1 3464 13 view .LVU2363
 6643 0158 2775     		strb	r7, [r4, #20]
3465:./Libraries/FatFs/Src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
 6644              		.loc 1 3465 4 is_stmt 1 view .LVU2364
3466:./Libraries/FatFs/Src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
 6645              		.loc 1 3466 4 view .LVU2365
3467:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 6646              		.loc 1 3467 4 view .LVU2366
3470:./Libraries/FatFs/Src/ff.c **** #endif
 6647              		.loc 1 3470 4 view .LVU2367
 6648              	.LVL622:
 6649              	.LBB1017:
 6650              	.LBI1011:
 706:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 6651              		.loc 1 706 6 view .LVU2368
 6652              	.L616:
 6653              	.LBB1014:
 709:./Libraries/FatFs/Src/ff.c **** 		*d++ = (BYTE)val;
 6654              		.loc 1 709 2 view .LVU2369
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 6655              		.loc 1 710 3 view .LVU2370
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 6656              		.loc 1 710 8 is_stmt 0 view .LVU2371
 6657 015a 03F8011B 		strb	r1, [r3], #1
 6658              	.LVL623:
 711:./Libraries/FatFs/Src/ff.c **** }
 6659              		.loc 1 711 10 is_stmt 1 view .LVU2372
 711:./Libraries/FatFs/Src/ff.c **** }
 6660              		.loc 1 711 2 is_stmt 0 view .LVU2373
 6661 015e 9342     		cmp	r3, r2
 6662 0160 FBD1     		bne	.L616
 6663              	.LVL624:
 711:./Libraries/FatFs/Src/ff.c **** }
 6664              		.loc 1 711 2 view .LVU2374
 6665              	.LBE1014:
 6666              	.LBE1017:
3472:./Libraries/FatFs/Src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 6667              		.loc 1 3472 4 is_stmt 1 view .LVU2375
3472:./Libraries/FatFs/Src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 6668              		.loc 1 3472 7 is_stmt 0 view .LVU2376
 6669 0162 17F02007 		ands	r7, r7, #32
 6670              	.LVL625:
3472:./Libraries/FatFs/Src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 6671              		.loc 1 3472 7 view .LVU2377
 6672 0166 1FD0     		beq	.L635
3472:./Libraries/FatFs/Src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 6673              		.loc 1 3472 38 discriminator 1 view .LVU2378
 6674 0168 E768     		ldr	r7, [r4, #12]
3472:./Libraries/FatFs/Src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
ARM GAS  /tmp/ccaQXGqa.s 			page 217


 6675              		.loc 1 3472 28 discriminator 1 view .LVU2379
 6676 016a 002F     		cmp	r7, #0
 6677 016c 3FF462AF 		beq	.L617
3473:./Libraries/FatFs/Src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
 6678              		.loc 1 3473 5 is_stmt 1 view .LVU2380
3474:./Libraries/FatFs/Src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
 6679              		.loc 1 3474 11 is_stmt 0 view .LVU2381
 6680 0170 7389     		ldrh	r3, [r6, #10]
3475:./Libraries/FatFs/Src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 6681              		.loc 1 3475 10 view .LVU2382
 6682 0172 A168     		ldr	r1, [r4, #8]
3476:./Libraries/FatFs/Src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6683              		.loc 1 3476 5 view .LVU2383
 6684 0174 B7EB432F 		cmp	r7, r3, lsl #9
3473:./Libraries/FatFs/Src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
 6685              		.loc 1 3473 14 view .LVU2384
 6686 0178 A761     		str	r7, [r4, #24]
3474:./Libraries/FatFs/Src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
 6687              		.loc 1 3474 5 is_stmt 1 view .LVU2385
3474:./Libraries/FatFs/Src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
 6688              		.loc 1 3474 9 is_stmt 0 view .LVU2386
 6689 017a 4FEA4329 		lsl	r9, r3, #9
 6690              	.LVL626:
3475:./Libraries/FatFs/Src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 6691              		.loc 1 3475 5 is_stmt 1 view .LVU2387
3476:./Libraries/FatFs/Src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6692              		.loc 1 3476 5 view .LVU2388
3476:./Libraries/FatFs/Src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6693              		.loc 1 3476 33 view .LVU2389
3476:./Libraries/FatFs/Src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6694              		.loc 1 3476 5 is_stmt 0 view .LVU2390
 6695 017e 06D8     		bhi	.L620
 6696 0180 90E0     		b	.L618
 6697              	.LVL627:
 6698              	.L673:
3476:./Libraries/FatFs/Src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6699              		.loc 1 3476 5 view .LVU2391
 6700 0182 481C     		adds	r0, r1, #1
 6701              	.LVL628:
3476:./Libraries/FatFs/Src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6702              		.loc 1 3476 5 view .LVU2392
 6703 0184 00F0B680 		beq	.L622
3476:./Libraries/FatFs/Src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6704              		.loc 1 3476 5 view .LVU2393
 6705 0188 B945     		cmp	r9, r7
 6706 018a 80F0B380 		bcs	.L622
 6707              	.LVL629:
 6708              	.L620:
3477:./Libraries/FatFs/Src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
 6709              		.loc 1 3477 6 is_stmt 1 view .LVU2394
3477:./Libraries/FatFs/Src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
 6710              		.loc 1 3477 13 is_stmt 0 view .LVU2395
 6711 018e 2068     		ldr	r0, [r4]
3476:./Libraries/FatFs/Src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6712              		.loc 1 3476 64 view .LVU2396
 6713 0190 A7EB0907 		sub	r7, r7, r9
3477:./Libraries/FatFs/Src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
ARM GAS  /tmp/ccaQXGqa.s 			page 218


 6714              		.loc 1 3477 13 view .LVU2397
 6715 0194 FFF7FEFF 		bl	get_fat.isra.0
 6716              	.LVL630:
3479:./Libraries/FatFs/Src/ff.c **** 				}
 6717              		.loc 1 3479 6 is_stmt 1 view .LVU2398
3478:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 6718              		.loc 1 3478 9 is_stmt 0 view .LVU2399
 6719 0198 0128     		cmp	r0, #1
3477:./Libraries/FatFs/Src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
 6720              		.loc 1 3477 13 view .LVU2400
 6721 019a 0146     		mov	r1, r0
 6722              	.LVL631:
3478:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 6723              		.loc 1 3478 6 is_stmt 1 view .LVU2401
3476:./Libraries/FatFs/Src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6724              		.loc 1 3476 60 view .LVU2402
3476:./Libraries/FatFs/Src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6725              		.loc 1 3476 33 view .LVU2403
3478:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 6726              		.loc 1 3478 9 is_stmt 0 view .LVU2404
 6727 019c F1D8     		bhi	.L673
 6728              	.LVL632:
3476:./Libraries/FatFs/Src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6729              		.loc 1 3476 60 is_stmt 1 view .LVU2405
3476:./Libraries/FatFs/Src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 6730              		.loc 1 3476 33 view .LVU2406
3481:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 6731              		.loc 1 3481 5 view .LVU2407
3478:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 6732              		.loc 1 3478 25 is_stmt 0 view .LVU2408
 6733 019e 0225     		movs	r5, #2
3481:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 6734              		.loc 1 3481 15 view .LVU2409
 6735 01a0 E061     		str	r0, [r4, #28]
3482:./Libraries/FatFs/Src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 6736              		.loc 1 3482 5 is_stmt 1 view .LVU2410
 6737              	.LVL633:
 6738              	.L633:
3482:./Libraries/FatFs/Src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 6739              		.loc 1 3482 5 is_stmt 0 view .LVU2411
 6740 01a2 039E     		ldr	r6, [sp, #12]
 6741              	.LVL634:
3336:./Libraries/FatFs/Src/ff.c **** 			}
 6742              		.loc 1 3336 9 view .LVU2412
 6743 01a4 0123     		movs	r3, #1
 6744 01a6 41E7     		b	.L594
 6745              	.LVL635:
 6746              	.L635:
3336:./Libraries/FatFs/Src/ff.c **** 			}
 6747              		.loc 1 3336 9 view .LVU2413
 6748 01a8 3D46     		mov	r5, r7
 6749 01aa 43E7     		b	.L617
 6750              	.LVL636:
 6751              	.L632:
3347:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 6752              		.loc 1 3347 5 is_stmt 1 view .LVU2414
3347:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
ARM GAS  /tmp/ccaQXGqa.s 			page 219


 6753              		.loc 1 3347 8 is_stmt 0 view .LVU2415
 6754 01ac 042A     		cmp	r2, #4
 6755 01ae 72D1     		bne	.L674
 6756              	.LVL637:
 6757              	.LBB1018:
 6758              	.LBB1019:
 802:./Libraries/FatFs/Src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 6759              		.loc 1 802 14 is_stmt 1 view .LVU2416
 802:./Libraries/FatFs/Src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 6760              		.loc 1 802 38 is_stmt 0 view .LVU2417
 6761 01b0 574B     		ldr	r3, .L677
 802:./Libraries/FatFs/Src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 6762              		.loc 1 802 27 view .LVU2418
 6763 01b2 1A68     		ldr	r2, [r3]
 6764 01b4 2AB1     		cbz	r2, .L600
 802:./Libraries/FatFs/Src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 6765              		.loc 1 802 48 is_stmt 1 view .LVU2419
 802:./Libraries/FatFs/Src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 6766              		.loc 1 802 43 view .LVU2420
 6767              	.LVL638:
 802:./Libraries/FatFs/Src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 6768              		.loc 1 802 14 view .LVU2421
 802:./Libraries/FatFs/Src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 6769              		.loc 1 802 27 is_stmt 0 view .LVU2422
 6770 01b6 1B69     		ldr	r3, [r3, #16]
 6771 01b8 1BB1     		cbz	r3, .L600
 6772 01ba 039E     		ldr	r6, [sp, #12]
 6773 01bc 0123     		movs	r3, #1
 6774              	.LBE1019:
 6775              	.LBE1018:
3349:./Libraries/FatFs/Src/ff.c **** #else
 6776              		.loc 1 3349 43 view .LVU2423
 6777 01be 1225     		movs	r5, #18
 6778 01c0 34E7     		b	.L594
 6779              	.LVL639:
 6780              	.L600:
3349:./Libraries/FatFs/Src/ff.c **** #else
 6781              		.loc 1 3349 25 discriminator 1 view .LVU2424
 6782 01c2 04A8     		add	r0, sp, #16
 6783              	.LVL640:
3354:./Libraries/FatFs/Src/ff.c **** 			}
 6784              		.loc 1 3354 10 discriminator 1 view .LVU2425
 6785 01c4 47F00807 		orr	r7, r7, #8
 6786              	.LVL641:
3349:./Libraries/FatFs/Src/ff.c **** #else
 6787              		.loc 1 3349 25 discriminator 1 view .LVU2426
 6788 01c8 FFF7FEFF 		bl	dir_register
 6789              	.LVL642:
3354:./Libraries/FatFs/Src/ff.c **** 			}
 6790              		.loc 1 3354 5 is_stmt 1 discriminator 1 view .LVU2427
3363:./Libraries/FatFs/Src/ff.c **** 				dw = GET_FATTIME();
 6791              		.loc 1 3363 4 discriminator 1 view .LVU2428
3363:./Libraries/FatFs/Src/ff.c **** 				dw = GET_FATTIME();
 6792              		.loc 1 3363 7 is_stmt 0 discriminator 1 view .LVU2429
 6793 01cc 0028     		cmp	r0, #0
 6794 01ce 7FF464AF 		bne	.L668
 6795              	.LVL643:
ARM GAS  /tmp/ccaQXGqa.s 			page 220


 6796              	.L601:
3364:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 6797              		.loc 1 3364 5 is_stmt 1 view .LVU2430
3364:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 6798              		.loc 1 3364 10 is_stmt 0 view .LVU2431
 6799 01d2 FFF7FEFF 		bl	get_fattime
 6800              	.LVL644:
3392:./Libraries/FatFs/Src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
 6801              		.loc 1 3392 17 view .LVU2432
 6802 01d6 0C9B     		ldr	r3, [sp, #48]
 6803              	.LBB1020:
 6804              	.LBB1021:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 6805              		.loc 1 664 11 view .LVU2433
 6806 01d8 C0F30721 		ubfx	r1, r0, #8, #8
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 6807              		.loc 1 665 11 view .LVU2434
 6808 01dc C0F30742 		ubfx	r2, r0, #16, #8
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 6809              		.loc 1 663 11 view .LVU2435
 6810 01e0 5FFA80FC 		uxtb	ip, r0
 6811              	.LBE1021:
 6812              	.LBE1020:
3394:./Libraries/FatFs/Src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
 6813              		.loc 1 3394 23 view .LVU2436
 6814 01e4 4FF0200E 		mov	lr, #32
 6815              	.LVL645:
3392:./Libraries/FatFs/Src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
 6816              		.loc 1 3392 6 is_stmt 1 view .LVU2437
 6817              	.LBB1023:
 6818              	.LBI1020:
 661:./Libraries/FatFs/Src/ff.c **** {
 6819              		.loc 1 661 6 view .LVU2438
 6820              	.LBB1022:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 6821              		.loc 1 663 2 view .LVU2439
 666:./Libraries/FatFs/Src/ff.c **** }
 6822              		.loc 1 666 11 is_stmt 0 view .LVU2440
 6823 01e8 000E     		lsrs	r0, r0, #24
 6824              	.LVL646:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 6825              		.loc 1 664 9 view .LVU2441
 6826 01ea D973     		strb	r1, [r3, #15]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 6827              		.loc 1 663 9 view .LVU2442
 6828 01ec 83F80EC0 		strb	ip, [r3, #14]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 6829              		.loc 1 663 22 is_stmt 1 view .LVU2443
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 6830              		.loc 1 664 2 view .LVU2444
 6831              	.LVL647:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 6832              		.loc 1 664 22 view .LVU2445
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 6833              		.loc 1 665 2 view .LVU2446
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 6834              		.loc 1 665 9 is_stmt 0 view .LVU2447
ARM GAS  /tmp/ccaQXGqa.s 			page 221


 6835 01f0 1A74     		strb	r2, [r3, #16]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 6836              		.loc 1 665 22 is_stmt 1 view .LVU2448
 666:./Libraries/FatFs/Src/ff.c **** }
 6837              		.loc 1 666 2 view .LVU2449
 6838              	.LVL648:
 666:./Libraries/FatFs/Src/ff.c **** }
 6839              		.loc 1 666 9 is_stmt 0 view .LVU2450
 6840 01f2 5874     		strb	r0, [r3, #17]
 6841              	.LVL649:
 666:./Libraries/FatFs/Src/ff.c **** }
 6842              		.loc 1 666 9 view .LVU2451
 6843              	.LBE1022:
 6844              	.LBE1023:
3393:./Libraries/FatFs/Src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
 6845              		.loc 1 3393 6 is_stmt 1 view .LVU2452
3393:./Libraries/FatFs/Src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
 6846              		.loc 1 3393 17 is_stmt 0 view .LVU2453
 6847 01f4 0C9B     		ldr	r3, [sp, #48]
 6848              	.LVL650:
 6849              	.LBB1024:
 6850              	.LBI1024:
 661:./Libraries/FatFs/Src/ff.c **** {
 6851              		.loc 1 661 6 is_stmt 1 view .LVU2454
 6852              	.LBB1025:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 6853              		.loc 1 663 2 view .LVU2455
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 6854              		.loc 1 663 2 is_stmt 0 view .LVU2456
 6855              	.LBE1025:
 6856              	.LBE1024:
3395:./Libraries/FatFs/Src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
 6857              		.loc 1 3395 11 view .LVU2457
 6858 01f6 039E     		ldr	r6, [sp, #12]
 6859              	.LBB1027:
 6860              	.LBB1026:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 6861              		.loc 1 663 9 view .LVU2458
 6862 01f8 83F816C0 		strb	ip, [r3, #22]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 6863              		.loc 1 663 22 is_stmt 1 view .LVU2459
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 6864              		.loc 1 664 2 view .LVU2460
 6865              	.LVL651:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 6866              		.loc 1 664 9 is_stmt 0 view .LVU2461
 6867 01fc D975     		strb	r1, [r3, #23]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 6868              		.loc 1 664 22 is_stmt 1 view .LVU2462
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 6869              		.loc 1 665 2 view .LVU2463
 6870              	.LVL652:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 6871              		.loc 1 665 9 is_stmt 0 view .LVU2464
 6872 01fe 1A76     		strb	r2, [r3, #24]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 6873              		.loc 1 665 22 is_stmt 1 view .LVU2465
ARM GAS  /tmp/ccaQXGqa.s 			page 222


 666:./Libraries/FatFs/Src/ff.c **** }
 6874              		.loc 1 666 2 view .LVU2466
 6875              	.LVL653:
 666:./Libraries/FatFs/Src/ff.c **** }
 6876              		.loc 1 666 9 is_stmt 0 view .LVU2467
 6877 0200 5876     		strb	r0, [r3, #25]
 6878              	.LVL654:
 666:./Libraries/FatFs/Src/ff.c **** }
 6879              		.loc 1 666 9 view .LVU2468
 6880              	.LBE1026:
 6881              	.LBE1027:
3394:./Libraries/FatFs/Src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
 6882              		.loc 1 3394 6 is_stmt 1 view .LVU2469
3394:./Libraries/FatFs/Src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
 6883              		.loc 1 3394 8 is_stmt 0 view .LVU2470
 6884 0202 0C9B     		ldr	r3, [sp, #48]
3394:./Libraries/FatFs/Src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
 6885              		.loc 1 3394 23 view .LVU2471
 6886 0204 83F80BE0 		strb	lr, [r3, #11]
3395:./Libraries/FatFs/Src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
 6887              		.loc 1 3395 6 is_stmt 1 view .LVU2472
3395:./Libraries/FatFs/Src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
 6888              		.loc 1 3395 26 is_stmt 0 view .LVU2473
 6889 0208 0C9A     		ldr	r2, [sp, #48]
 6890              	.LVL655:
 6891              	.LBB1028:
 6892              	.LBI1028:
1632:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
 6893              		.loc 1 1632 7 is_stmt 1 view .LVU2474
 6894              	.LBB1029:
1637:./Libraries/FatFs/Src/ff.c **** 
 6895              		.loc 1 1637 2 view .LVU2475
1639:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 6896              		.loc 1 1639 2 view .LVU2476
 6897              	.LBB1030:
 6898              	.LBI1030:
 613:./Libraries/FatFs/Src/ff.c **** {
 6899              		.loc 1 613 6 view .LVU2477
 6900              	.LBB1031:
 615:./Libraries/FatFs/Src/ff.c **** 
 6901              		.loc 1 615 2 view .LVU2478
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 6902              		.loc 1 617 2 view .LVU2479
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 6903              		.loc 1 618 2 view .LVU2480
 619:./Libraries/FatFs/Src/ff.c **** }
 6904              		.loc 1 619 2 view .LVU2481
 619:./Libraries/FatFs/Src/ff.c **** }
 6905              		.loc 1 619 2 is_stmt 0 view .LVU2482
 6906              	.LBE1031:
 6907              	.LBE1030:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 6908              		.loc 1 1640 5 view .LVU2483
 6909 020a 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 6910              	.LBB1033:
 6911              	.LBB1032:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
ARM GAS  /tmp/ccaQXGqa.s 			page 223


 6912              		.loc 1 618 10 view .LVU2484
 6913 020c 92F81B80 		ldrb	r8, [r2, #27]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 6914              		.loc 1 618 20 view .LVU2485
 6915 0210 937E     		ldrb	r3, [r2, #26]	@ zero_extendqisi2
 6916              	.LBE1032:
 6917              	.LBE1033:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 6918              		.loc 1 1640 5 view .LVU2486
 6919 0212 0329     		cmp	r1, #3
1639:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 6920              		.loc 1 1639 5 view .LVU2487
 6921 0214 43EA0828 		orr	r8, r3, r8, lsl #8
 6922              	.LVL656:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 6923              		.loc 1 1640 2 is_stmt 1 view .LVU2488
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 6924              		.loc 1 1640 5 is_stmt 0 view .LVU2489
 6925 0218 05D1     		bne	.L605
1641:./Libraries/FatFs/Src/ff.c **** 	}
 6926              		.loc 1 1641 3 is_stmt 1 view .LVU2490
 6927              	.LVL657:
 6928              	.LBB1034:
 6929              	.LBI1034:
 613:./Libraries/FatFs/Src/ff.c **** {
 6930              		.loc 1 613 6 view .LVU2491
 6931              	.LBB1035:
 615:./Libraries/FatFs/Src/ff.c **** 
 6932              		.loc 1 615 2 view .LVU2492
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 6933              		.loc 1 617 2 view .LVU2493
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 6934              		.loc 1 618 2 view .LVU2494
 619:./Libraries/FatFs/Src/ff.c **** }
 6935              		.loc 1 619 2 view .LVU2495
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 6936              		.loc 1 618 10 is_stmt 0 view .LVU2496
 6937 021a 517D     		ldrb	r1, [r2, #21]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 6938              		.loc 1 618 20 view .LVU2497
 6939 021c 137D     		ldrb	r3, [r2, #20]	@ zero_extendqisi2
 6940              	.LBE1035:
 6941              	.LBE1034:
1641:./Libraries/FatFs/Src/ff.c **** 	}
 6942              		.loc 1 1641 9 view .LVU2498
 6943 021e 43EA0123 		orr	r3, r3, r1, lsl #8
1641:./Libraries/FatFs/Src/ff.c **** 	}
 6944              		.loc 1 1641 6 view .LVU2499
 6945 0222 48EA0348 		orr	r8, r8, r3, lsl #16
 6946              	.LVL658:
 6947              	.L605:
1644:./Libraries/FatFs/Src/ff.c **** }
 6948              		.loc 1 1644 2 is_stmt 1 view .LVU2500
1644:./Libraries/FatFs/Src/ff.c **** }
 6949              		.loc 1 1644 2 is_stmt 0 view .LVU2501
 6950              	.LBE1029:
 6951              	.LBE1028:
ARM GAS  /tmp/ccaQXGqa.s 			page 224


3396:./Libraries/FatFs/Src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
 6952              		.loc 1 3396 6 is_stmt 1 view .LVU2502
 6953              	.LBB1036:
 6954              	.LBI1036:
1650:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
 6955              		.loc 1 1650 6 view .LVU2503
 6956              	.LBB1037:
1656:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 6957              		.loc 1 1656 2 view .LVU2504
 6958              	.LBB1038:
 6959              	.LBI1038:
 654:./Libraries/FatFs/Src/ff.c **** {
 6960              		.loc 1 654 6 view .LVU2505
 6961              	.LBB1039:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 6962              		.loc 1 656 2 view .LVU2506
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 6963              		.loc 1 656 9 is_stmt 0 view .LVU2507
 6964 0226 0023     		movs	r3, #0
 6965 0228 9376     		strb	r3, [r2, #26]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 6966              		.loc 1 656 22 is_stmt 1 view .LVU2508
 657:./Libraries/FatFs/Src/ff.c **** }
 6967              		.loc 1 657 2 view .LVU2509
 6968              	.LVL659:
 657:./Libraries/FatFs/Src/ff.c **** }
 6969              		.loc 1 657 9 is_stmt 0 view .LVU2510
 6970 022a D376     		strb	r3, [r2, #27]
 6971              	.LVL660:
 657:./Libraries/FatFs/Src/ff.c **** }
 6972              		.loc 1 657 9 view .LVU2511
 6973              	.LBE1039:
 6974              	.LBE1038:
1657:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 6975              		.loc 1 1657 2 is_stmt 1 view .LVU2512
1657:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 6976              		.loc 1 1657 5 is_stmt 0 view .LVU2513
 6977 022c 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 6978 022e 0329     		cmp	r1, #3
 6979 0230 01D1     		bne	.L606
1658:./Libraries/FatFs/Src/ff.c **** 	}
 6980              		.loc 1 1658 3 is_stmt 1 view .LVU2514
 6981              	.LVL661:
 6982              	.LBB1040:
 6983              	.LBI1040:
 654:./Libraries/FatFs/Src/ff.c **** {
 6984              		.loc 1 654 6 view .LVU2515
 6985              	.LBB1041:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 6986              		.loc 1 656 2 view .LVU2516
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 6987              		.loc 1 656 9 is_stmt 0 view .LVU2517
 6988 0232 1375     		strb	r3, [r2, #20]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 6989              		.loc 1 656 22 is_stmt 1 view .LVU2518
 657:./Libraries/FatFs/Src/ff.c **** }
 6990              		.loc 1 657 2 view .LVU2519
ARM GAS  /tmp/ccaQXGqa.s 			page 225


 6991              	.LVL662:
 657:./Libraries/FatFs/Src/ff.c **** }
 6992              		.loc 1 657 9 is_stmt 0 view .LVU2520
 6993 0234 5375     		strb	r3, [r2, #21]
 6994              	.LVL663:
 6995              	.L606:
 657:./Libraries/FatFs/Src/ff.c **** }
 6996              		.loc 1 657 9 view .LVU2521
 6997              	.LBE1041:
 6998              	.LBE1040:
 6999              	.LBE1037:
 7000              	.LBE1036:
3397:./Libraries/FatFs/Src/ff.c **** 					fs->wflag = 1;
 7001              		.loc 1 3397 6 is_stmt 1 view .LVU2522
3397:./Libraries/FatFs/Src/ff.c **** 					fs->wflag = 1;
 7002              		.loc 1 3397 17 is_stmt 0 view .LVU2523
 7003 0236 0C9B     		ldr	r3, [sp, #48]
 7004              	.LVL664:
 7005              	.LBB1042:
 7006              	.LBI1042:
 661:./Libraries/FatFs/Src/ff.c **** {
 7007              		.loc 1 661 6 is_stmt 1 view .LVU2524
 7008              	.LBB1043:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 7009              		.loc 1 663 2 view .LVU2525
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 7010              		.loc 1 663 9 is_stmt 0 view .LVU2526
 7011 0238 0022     		movs	r2, #0
 7012              	.LBE1043:
 7013              	.LBE1042:
3398:./Libraries/FatFs/Src/ff.c **** 
 7014              		.loc 1 3398 16 view .LVU2527
 7015 023a 0121     		movs	r1, #1
 7016              	.LBB1045:
 7017              	.LBB1044:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 7018              		.loc 1 663 9 view .LVU2528
 7019 023c 1A77     		strb	r2, [r3, #28]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 7020              		.loc 1 663 22 is_stmt 1 view .LVU2529
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 7021              		.loc 1 664 2 view .LVU2530
 7022              	.LVL665:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 7023              		.loc 1 664 9 is_stmt 0 view .LVU2531
 7024 023e 5A77     		strb	r2, [r3, #29]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 7025              		.loc 1 664 22 is_stmt 1 view .LVU2532
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 7026              		.loc 1 665 2 view .LVU2533
 7027              	.LVL666:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 7028              		.loc 1 665 9 is_stmt 0 view .LVU2534
 7029 0240 9A77     		strb	r2, [r3, #30]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 7030              		.loc 1 665 22 is_stmt 1 view .LVU2535
 666:./Libraries/FatFs/Src/ff.c **** }
ARM GAS  /tmp/ccaQXGqa.s 			page 226


 7031              		.loc 1 666 2 view .LVU2536
 7032              	.LVL667:
 666:./Libraries/FatFs/Src/ff.c **** }
 7033              		.loc 1 666 9 is_stmt 0 view .LVU2537
 7034 0242 DA77     		strb	r2, [r3, #31]
 7035              	.LVL668:
 666:./Libraries/FatFs/Src/ff.c **** }
 7036              		.loc 1 666 9 view .LVU2538
 7037              	.LBE1044:
 7038              	.LBE1045:
3398:./Libraries/FatFs/Src/ff.c **** 
 7039              		.loc 1 3398 6 is_stmt 1 view .LVU2539
3398:./Libraries/FatFs/Src/ff.c **** 
 7040              		.loc 1 3398 16 is_stmt 0 view .LVU2540
 7041 0244 F170     		strb	r1, [r6, #3]
3400:./Libraries/FatFs/Src/ff.c **** 						dw = fs->winsect;
 7042              		.loc 1 3400 6 is_stmt 1 view .LVU2541
3400:./Libraries/FatFs/Src/ff.c **** 						dw = fs->winsect;
 7043              		.loc 1 3400 9 is_stmt 0 view .LVU2542
 7044 0246 B8F1000F 		cmp	r8, #0
 7045 024a 3FF43DAF 		beq	.L609
3401:./Libraries/FatFs/Src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
 7046              		.loc 1 3401 7 is_stmt 1 view .LVU2543
3401:./Libraries/FatFs/Src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
 7047              		.loc 1 3401 10 is_stmt 0 view .LVU2544
 7048 024e 336B     		ldr	r3, [r6, #48]
3402:./Libraries/FatFs/Src/ff.c **** 						if (res == FR_OK) {
 7049              		.loc 1 3402 13 view .LVU2545
 7050 0250 4146     		mov	r1, r8
 7051 0252 04A8     		add	r0, sp, #16
3401:./Libraries/FatFs/Src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
 7052              		.loc 1 3401 10 view .LVU2546
 7053 0254 0093     		str	r3, [sp]
 7054              	.LVL669:
3402:./Libraries/FatFs/Src/ff.c **** 						if (res == FR_OK) {
 7055              		.loc 1 3402 7 is_stmt 1 view .LVU2547
3402:./Libraries/FatFs/Src/ff.c **** 						if (res == FR_OK) {
 7056              		.loc 1 3402 13 is_stmt 0 view .LVU2548
 7057 0256 FFF7FEFF 		bl	remove_chain
 7058              	.LVL670:
3403:./Libraries/FatFs/Src/ff.c **** 							res = move_window(fs, dw);
 7059              		.loc 1 3403 7 is_stmt 1 view .LVU2549
3403:./Libraries/FatFs/Src/ff.c **** 							res = move_window(fs, dw);
 7060              		.loc 1 3403 10 is_stmt 0 view .LVU2550
 7061 025a 009B     		ldr	r3, [sp]
3404:./Libraries/FatFs/Src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
 7062              		.loc 1 3404 14 view .LVU2551
 7063 025c 039E     		ldr	r6, [sp, #12]
 7064              	.LVL671:
3403:./Libraries/FatFs/Src/ff.c **** 							res = move_window(fs, dw);
 7065              		.loc 1 3403 10 view .LVU2552
 7066 025e 0028     		cmp	r0, #0
 7067 0260 7FF41CAF 		bne	.L667
3404:./Libraries/FatFs/Src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
 7068              		.loc 1 3404 8 is_stmt 1 view .LVU2553
 7069              	.LVL672:
 7070              	.LBB1046:
ARM GAS  /tmp/ccaQXGqa.s 			page 227


 7071              	.LBI1046:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 7072              		.loc 1 912 9 view .LVU2554
 7073              	.LBB1047:
 917:./Libraries/FatFs/Src/ff.c **** 
 7074              		.loc 1 917 2 view .LVU2555
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 7075              		.loc 1 920 2 view .LVU2556
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 7076              		.loc 1 920 5 is_stmt 0 view .LVU2557
 7077 0264 326B     		ldr	r2, [r6, #48]
 7078 0266 9342     		cmp	r3, r2
 7079 0268 3CD0     		beq	.L675
 7080 026a 1946     		mov	r1, r3
 7081 026c 3046     		mov	r0, r6
 7082              	.LVL673:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 7083              		.loc 1 920 5 view .LVU2558
 7084 026e FFF7FEFF 		bl	move_window.part.0
 7085              	.LVL674:
 932:./Libraries/FatFs/Src/ff.c **** }
 7086              		.loc 1 932 2 is_stmt 1 view .LVU2559
 932:./Libraries/FatFs/Src/ff.c **** }
 7087              		.loc 1 932 2 is_stmt 0 view .LVU2560
 7088              	.LBE1047:
 7089              	.LBE1046:
3405:./Libraries/FatFs/Src/ff.c **** 						}
 7090              		.loc 1 3405 8 is_stmt 1 view .LVU2561
3405:./Libraries/FatFs/Src/ff.c **** 						}
 7091              		.loc 1 3405 27 is_stmt 0 view .LVU2562
 7092 0272 08F1FF33 		add	r3, r8, #-1
3405:./Libraries/FatFs/Src/ff.c **** 						}
 7093              		.loc 1 3405 10 view .LVU2563
 7094 0276 039E     		ldr	r6, [sp, #12]
3405:./Libraries/FatFs/Src/ff.c **** 						}
 7095              		.loc 1 3405 22 view .LVU2564
 7096 0278 3361     		str	r3, [r6, #16]
3422:./Libraries/FatFs/Src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 7097              		.loc 1 3422 3 is_stmt 1 view .LVU2565
3422:./Libraries/FatFs/Src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 7098              		.loc 1 3422 6 is_stmt 0 view .LVU2566
 7099 027a 0028     		cmp	r0, #0
 7100 027c 3FF424AF 		beq	.L609
3422:./Libraries/FatFs/Src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 7101              		.loc 1 3422 6 view .LVU2567
 7102 0280 0CE7     		b	.L667
 7103              	.LVL675:
 7104              	.L672:
3422:./Libraries/FatFs/Src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 7105              		.loc 1 3422 6 view .LVU2568
 7106 0282 17F0FE0F 		tst	r7, #254
 7107 0286 14BF     		ite	ne
 7108 0288 0121     		movne	r1, #1
 7109 028a 0021     		moveq	r1, #0
 7110 028c 22E7     		b	.L615
 7111              	.LVL676:
 7112              	.L603:
ARM GAS  /tmp/ccaQXGqa.s 			page 228


3363:./Libraries/FatFs/Src/ff.c **** 				dw = GET_FATTIME();
 7113              		.loc 1 3363 4 is_stmt 1 view .LVU2569
3363:./Libraries/FatFs/Src/ff.c **** 				dw = GET_FATTIME();
 7114              		.loc 1 3363 21 is_stmt 0 view .LVU2570
 7115 028e 3007     		lsls	r0, r6, #28
 7116 0290 9FD4     		bmi	.L601
 7117 0292 039E     		ldr	r6, [sp, #12]
 7118 0294 1EE7     		b	.L615
 7119              	.LVL677:
 7120              	.L674:
3363:./Libraries/FatFs/Src/ff.c **** 				dw = GET_FATTIME();
 7121              		.loc 1 3363 21 view .LVU2571
 7122 0296 B2F10C03 		subs	r3, r2, #12
 7123 029a 039E     		ldr	r6, [sp, #12]
3347:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 7124              		.loc 1 3347 8 view .LVU2572
 7125 029c 1546     		mov	r5, r2
 7126 029e 18BF     		it	ne
 7127 02a0 0123     		movne	r3, #1
 7128 02a2 C3E6     		b	.L594
 7129              	.LVL678:
 7130              	.L618:
3481:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 7131              		.loc 1 3481 5 is_stmt 1 view .LVU2573
3482:./Libraries/FatFs/Src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 7132              		.loc 1 3482 29 is_stmt 0 view .LVU2574
 7133 02a4 C7F30803 		ubfx	r3, r7, #0, #9
3481:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 7134              		.loc 1 3481 15 view .LVU2575
 7135 02a8 E161     		str	r1, [r4, #28]
3482:./Libraries/FatFs/Src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 7136              		.loc 1 3482 5 is_stmt 1 view .LVU2576
3482:./Libraries/FatFs/Src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 7137              		.loc 1 3482 22 is_stmt 0 view .LVU2577
 7138 02aa 002B     		cmp	r3, #0
 7139 02ac 3FF4C2AE 		beq	.L617
 7140              	.LVL679:
 7141              	.L623:
3483:./Libraries/FatFs/Src/ff.c **** 						res = FR_INT_ERR;
 7142              		.loc 1 3483 6 is_stmt 1 view .LVU2578
 7143              	.LBB1049:
 7144              	.LBI1049:
 983:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 7145              		.loc 1 983 7 view .LVU2579
 7146              	.LBB1050:
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 7147              		.loc 1 988 2 view .LVU2580
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 7148              		.loc 1 989 27 is_stmt 0 view .LVU2581
 7149 02b0 B369     		ldr	r3, [r6, #24]
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 7150              		.loc 1 988 7 view .LVU2582
 7151 02b2 881E     		subs	r0, r1, #2
 7152              	.LVL680:
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 7153              		.loc 1 989 2 is_stmt 1 view .LVU2583
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
ARM GAS  /tmp/ccaQXGqa.s 			page 229


 7154              		.loc 1 989 27 is_stmt 0 view .LVU2584
 7155 02b4 023B     		subs	r3, r3, #2
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 7156              		.loc 1 989 5 view .LVU2585
 7157 02b6 9842     		cmp	r0, r3
 7158 02b8 04D2     		bcs	.L637
 990:./Libraries/FatFs/Src/ff.c **** }
 7159              		.loc 1 990 2 is_stmt 1 view .LVU2586
 990:./Libraries/FatFs/Src/ff.c **** }
 7160              		.loc 1 990 18 is_stmt 0 view .LVU2587
 7161 02ba 7389     		ldrh	r3, [r6, #10]
 990:./Libraries/FatFs/Src/ff.c **** }
 7162              		.loc 1 990 26 view .LVU2588
 7163 02bc F26A     		ldr	r2, [r6, #44]
 7164 02be 00FB0322 		mla	r2, r0, r3, r2
 7165              	.LVL681:
 990:./Libraries/FatFs/Src/ff.c **** }
 7166              		.loc 1 990 26 view .LVU2589
 7167              	.LBE1050:
 7168              	.LBE1049:
3483:./Libraries/FatFs/Src/ff.c **** 						res = FR_INT_ERR;
 7169              		.loc 1 3483 9 view .LVU2590
 7170 02c2 12B9     		cbnz	r2, .L676
 7171              	.LVL682:
 7172              	.L637:
3483:./Libraries/FatFs/Src/ff.c **** 						res = FR_INT_ERR;
 7173              		.loc 1 3483 9 view .LVU2591
 7174 02c4 0123     		movs	r3, #1
 7175 02c6 0225     		movs	r5, #2
 7176 02c8 B0E6     		b	.L594
 7177              	.LVL683:
 7178              	.L676:
3486:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 7179              		.loc 1 3486 7 is_stmt 1 view .LVU2592
3486:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 7180              		.loc 1 3486 21 is_stmt 0 view .LVU2593
 7181 02ca 02EB5722 		add	r2, r2, r7, lsr #9
 7182              	.LVL684:
3488:./Libraries/FatFs/Src/ff.c **** #endif
 7183              		.loc 1 3488 11 view .LVU2594
 7184 02ce 4146     		mov	r1, r8
 7185              	.LVL685:
3488:./Libraries/FatFs/Src/ff.c **** #endif
 7186              		.loc 1 3488 11 view .LVU2595
 7187 02d0 0123     		movs	r3, #1
 7188              	.LVL686:
3486:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 7189              		.loc 1 3486 16 view .LVU2596
 7190 02d2 2262     		str	r2, [r4, #32]
3488:./Libraries/FatFs/Src/ff.c **** #endif
 7191              		.loc 1 3488 7 is_stmt 1 view .LVU2597
3488:./Libraries/FatFs/Src/ff.c **** #endif
 7192              		.loc 1 3488 11 is_stmt 0 view .LVU2598
 7193 02d4 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 7194              	.LVL687:
3488:./Libraries/FatFs/Src/ff.c **** #endif
 7195              		.loc 1 3488 11 view .LVU2599
ARM GAS  /tmp/ccaQXGqa.s 			page 230


 7196 02d6 FFF7FEFF 		bl	disk_read
 7197              	.LVL688:
3488:./Libraries/FatFs/Src/ff.c **** #endif
 7198              		.loc 1 3488 10 view .LVU2600
 7199 02da 0546     		mov	r5, r0
 7200 02dc 30B9     		cbnz	r0, .L627
 7201 02de 039E     		ldr	r6, [sp, #12]
 7202              	.L669:
3488:./Libraries/FatFs/Src/ff.c **** #endif
 7203              		.loc 1 3488 10 view .LVU2601
 7204 02e0 0123     		movs	r3, #1
 7205 02e2 A5E6     		b	.L626
 7206              	.LVL689:
 7207              	.L675:
 7208              	.LBB1051:
 7209              	.LBB1048:
 932:./Libraries/FatFs/Src/ff.c **** }
 7210              		.loc 1 932 2 is_stmt 1 view .LVU2602
 932:./Libraries/FatFs/Src/ff.c **** }
 7211              		.loc 1 932 2 is_stmt 0 view .LVU2603
 7212              	.LBE1048:
 7213              	.LBE1051:
3405:./Libraries/FatFs/Src/ff.c **** 						}
 7214              		.loc 1 3405 8 is_stmt 1 view .LVU2604
3405:./Libraries/FatFs/Src/ff.c **** 						}
 7215              		.loc 1 3405 27 is_stmt 0 view .LVU2605
 7216 02e4 08F1FF33 		add	r3, r8, #-1
3405:./Libraries/FatFs/Src/ff.c **** 						}
 7217              		.loc 1 3405 22 view .LVU2606
 7218 02e8 3361     		str	r3, [r6, #16]
3422:./Libraries/FatFs/Src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 7219              		.loc 1 3422 3 is_stmt 1 view .LVU2607
 7220 02ea EDE6     		b	.L609
 7221              	.LVL690:
 7222              	.L627:
3488:./Libraries/FatFs/Src/ff.c **** #endif
 7223              		.loc 1 3488 10 is_stmt 0 view .LVU2608
 7224 02ec 0123     		movs	r3, #1
 7225 02ee 039E     		ldr	r6, [sp, #12]
3488:./Libraries/FatFs/Src/ff.c **** #endif
 7226              		.loc 1 3488 67 view .LVU2609
 7227 02f0 1D46     		mov	r5, r3
 7228 02f2 9BE6     		b	.L594
 7229              	.LVL691:
 7230              	.L622:
3479:./Libraries/FatFs/Src/ff.c **** 				}
 7231              		.loc 1 3479 9 view .LVU2610
 7232 02f4 4A1C     		adds	r2, r1, #1
3481:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 7233              		.loc 1 3481 15 view .LVU2611
 7234 02f6 E161     		str	r1, [r4, #28]
3479:./Libraries/FatFs/Src/ff.c **** 				}
 7235              		.loc 1 3479 34 view .LVU2612
 7236 02f8 0CBF     		ite	eq
 7237 02fa 0123     		moveq	r3, #1
 7238 02fc 0023     		movne	r3, #0
 7239              	.LVL692:
ARM GAS  /tmp/ccaQXGqa.s 			page 231


3481:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 7240              		.loc 1 3481 5 is_stmt 1 view .LVU2613
3482:./Libraries/FatFs/Src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 7241              		.loc 1 3482 5 view .LVU2614
3482:./Libraries/FatFs/Src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 7242              		.loc 1 3482 8 is_stmt 0 view .LVU2615
 7243 02fe 01D1     		bne	.L624
 7244              	.LVL693:
3479:./Libraries/FatFs/Src/ff.c **** 				}
 7245              		.loc 1 3479 34 view .LVU2616
 7246 0300 1D46     		mov	r5, r3
 7247 0302 4EE7     		b	.L633
 7248              	.L624:
3482:./Libraries/FatFs/Src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 7249              		.loc 1 3482 29 discriminator 1 view .LVU2617
 7250 0304 C7F30803 		ubfx	r3, r7, #0, #9
 7251              	.LVL694:
3482:./Libraries/FatFs/Src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 7252              		.loc 1 3482 29 discriminator 1 view .LVU2618
 7253 0308 039E     		ldr	r6, [sp, #12]
 7254              	.LVL695:
3482:./Libraries/FatFs/Src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 7255              		.loc 1 3482 22 discriminator 1 view .LVU2619
 7256 030a 002B     		cmp	r3, #0
 7257 030c E8D0     		beq	.L669
3482:./Libraries/FatFs/Src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 7258              		.loc 1 3482 22 discriminator 1 view .LVU2620
 7259 030e CFE7     		b	.L623
 7260              	.L678:
 7261              		.align	2
 7262              	.L677:
 7263 0310 00000000 		.word	.LANCHOR0
 7264              		.cfi_endproc
 7265              	.LFE376:
 7267              		.section	.text.f_read,"ax",%progbits
 7268              		.align	1
 7269              		.p2align 2,,3
 7270              		.global	f_read
 7271              		.syntax unified
 7272              		.thumb
 7273              		.thumb_func
 7274              		.fpu fpv5-d16
 7276              	f_read:
 7277              	.LVL696:
 7278              	.LFB377:
3503:./Libraries/FatFs/Src/ff.c **** 
3504:./Libraries/FatFs/Src/ff.c **** 
3505:./Libraries/FatFs/Src/ff.c **** 
3506:./Libraries/FatFs/Src/ff.c **** 
3507:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3508:./Libraries/FatFs/Src/ff.c **** /* Read File                                                             */
3509:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3510:./Libraries/FatFs/Src/ff.c **** 
3511:./Libraries/FatFs/Src/ff.c **** FRESULT f_read (
3512:./Libraries/FatFs/Src/ff.c **** 	FIL* fp, 	/* Pointer to the file object */
3513:./Libraries/FatFs/Src/ff.c **** 	void* buff,	/* Pointer to data buffer */
3514:./Libraries/FatFs/Src/ff.c **** 	UINT btr,	/* Number of bytes to read */
ARM GAS  /tmp/ccaQXGqa.s 			page 232


3515:./Libraries/FatFs/Src/ff.c **** 	UINT* br	/* Pointer to number of bytes read */
3516:./Libraries/FatFs/Src/ff.c **** )
3517:./Libraries/FatFs/Src/ff.c **** {
 7279              		.loc 1 3517 1 is_stmt 1 view -0
 7280              		.cfi_startproc
 7281              		@ args = 0, pretend = 0, frame = 16
 7282              		@ frame_needed = 0, uses_anonymous_args = 0
3518:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 7283              		.loc 1 3518 2 view .LVU2622
3519:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
 7284              		.loc 1 3519 2 view .LVU2623
3520:./Libraries/FatFs/Src/ff.c **** 	DWORD clst, sect;
 7285              		.loc 1 3520 2 view .LVU2624
3521:./Libraries/FatFs/Src/ff.c **** 	FSIZE_t remain;
 7286              		.loc 1 3521 2 view .LVU2625
3522:./Libraries/FatFs/Src/ff.c **** 	UINT rcnt, cc, csect;
 7287              		.loc 1 3522 2 view .LVU2626
3523:./Libraries/FatFs/Src/ff.c **** 	BYTE *rbuff = (BYTE*)buff;
 7288              		.loc 1 3523 2 view .LVU2627
3517:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 7289              		.loc 1 3517 1 is_stmt 0 view .LVU2628
 7290 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7291              	.LCFI70:
 7292              		.cfi_def_cfa_offset 36
 7293              		.cfi_offset 4, -36
 7294              		.cfi_offset 5, -32
 7295              		.cfi_offset 6, -28
 7296              		.cfi_offset 7, -24
 7297              		.cfi_offset 8, -20
 7298              		.cfi_offset 9, -16
 7299              		.cfi_offset 10, -12
 7300              		.cfi_offset 11, -8
 7301              		.cfi_offset 14, -4
3524:./Libraries/FatFs/Src/ff.c **** 
3525:./Libraries/FatFs/Src/ff.c **** 
3526:./Libraries/FatFs/Src/ff.c **** 	*br = 0;	/* Clear read byte counter */
 7302              		.loc 1 3526 6 view .LVU2629
 7303 0004 0024     		movs	r4, #0
3517:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 7304              		.loc 1 3517 1 view .LVU2630
 7305 0006 85B0     		sub	sp, sp, #20
 7306              	.LCFI71:
 7307              		.cfi_def_cfa_offset 56
3517:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 7308              		.loc 1 3517 1 view .LVU2631
 7309 0008 8946     		mov	r9, r1
 7310 000a 1F46     		mov	r7, r3
3527:./Libraries/FatFs/Src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
 7311              		.loc 1 3527 8 view .LVU2632
 7312 000c 03A9     		add	r1, sp, #12
 7313              	.LVL697:
3526:./Libraries/FatFs/Src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
 7314              		.loc 1 3526 2 is_stmt 1 view .LVU2633
3526:./Libraries/FatFs/Src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
 7315              		.loc 1 3526 6 is_stmt 0 view .LVU2634
 7316 000e 1C60     		str	r4, [r3]
 7317              		.loc 1 3527 2 is_stmt 1 view .LVU2635
ARM GAS  /tmp/ccaQXGqa.s 			page 233


3517:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 7318              		.loc 1 3517 1 is_stmt 0 view .LVU2636
 7319 0010 9046     		mov	r8, r2
 7320 0012 0546     		mov	r5, r0
 7321              		.loc 1 3527 8 view .LVU2637
 7322 0014 FFF7FEFF 		bl	validate
 7323              	.LVL698:
3528:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 7324              		.loc 1 3528 2 is_stmt 1 view .LVU2638
 7325              		.loc 1 3528 5 is_stmt 0 view .LVU2639
 7326 0018 0028     		cmp	r0, #0
 7327 001a 62D1     		bne	.L744
 7328              		.loc 1 3528 27 discriminator 2 view .LVU2640
 7329 001c 6E7D     		ldrb	r6, [r5, #21]	@ zero_extendqisi2
 7330              	.LVL699:
 7331              		.loc 1 3528 19 discriminator 2 view .LVU2641
 7332 001e 002E     		cmp	r6, #0
 7333 0020 60D1     		bne	.L680
 7334              		.loc 1 3528 74 is_stmt 1 discriminator 4 view .LVU2642
3529:./Libraries/FatFs/Src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 7335              		.loc 1 3529 2 discriminator 4 view .LVU2643
 7336 0022 95F814A0 		ldrb	r10, [r5, #20]	@ zero_extendqisi2
 7337              		.loc 1 3529 5 is_stmt 0 discriminator 4 view .LVU2644
 7338 0026 1AF0010A 		ands	r10, r10, #1
 7339 002a 00F0AF80 		beq	.L751
 7340              		.loc 1 3529 52 is_stmt 1 discriminator 2 view .LVU2645
3530:./Libraries/FatFs/Src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 7341              		.loc 1 3530 2 discriminator 2 view .LVU2646
 7342              		.loc 1 3530 31 is_stmt 0 discriminator 2 view .LVU2647
 7343 002e A869     		ldr	r0, [r5, #24]
 7344              	.LVL700:
3531:./Libraries/FatFs/Src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 7345              		.loc 1 3531 2 is_stmt 1 discriminator 2 view .LVU2648
3530:./Libraries/FatFs/Src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 7346              		.loc 1 3530 9 is_stmt 0 discriminator 2 view .LVU2649
 7347 0030 EA68     		ldr	r2, [r5, #12]
 7348 0032 121A     		subs	r2, r2, r0
 7349              	.LVL701:
3530:./Libraries/FatFs/Src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 7350              		.loc 1 3530 9 discriminator 2 view .LVU2650
 7351 0034 9045     		cmp	r8, r2
 7352 0036 28BF     		it	cs
 7353 0038 9046     		movcs	r8, r2
 7354              	.LVL702:
3532:./Libraries/FatFs/Src/ff.c **** 
3533:./Libraries/FatFs/Src/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
 7355              		.loc 1 3533 11 is_stmt 1 discriminator 2 view .LVU2651
 7356              		.loc 1 3533 2 is_stmt 0 discriminator 2 view .LVU2652
 7357 003a B8F1000F 		cmp	r8, #0
 7358 003e 47D0     		beq	.L711
3534:./Libraries/FatFs/Src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
3535:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
3536:./Libraries/FatFs/Src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
3537:./Libraries/FatFs/Src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
3538:./Libraries/FatFs/Src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
3539:./Libraries/FatFs/Src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
3540:./Libraries/FatFs/Src/ff.c **** 				} else {						/* Middle or end of the file */
ARM GAS  /tmp/ccaQXGqa.s 			page 234


3541:./Libraries/FatFs/Src/ff.c **** #if _USE_FASTSEEK
3542:./Libraries/FatFs/Src/ff.c **** 					if (fp->cltbl) {
3543:./Libraries/FatFs/Src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3544:./Libraries/FatFs/Src/ff.c **** 					} else
3545:./Libraries/FatFs/Src/ff.c **** #endif
3546:./Libraries/FatFs/Src/ff.c **** 					{
3547:./Libraries/FatFs/Src/ff.c **** 						clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
3548:./Libraries/FatFs/Src/ff.c **** 					}
3549:./Libraries/FatFs/Src/ff.c **** 				}
3550:./Libraries/FatFs/Src/ff.c **** 				if (clst < 2) ABORT(fs, FR_INT_ERR);
3551:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3552:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
3553:./Libraries/FatFs/Src/ff.c **** 			}
3554:./Libraries/FatFs/Src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3555:./Libraries/FatFs/Src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3556:./Libraries/FatFs/Src/ff.c **** 			sect += csect;
3557:./Libraries/FatFs/Src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
3558:./Libraries/FatFs/Src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
3559:./Libraries/FatFs/Src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3560:./Libraries/FatFs/Src/ff.c **** 					cc = fs->csize - csect;
3561:./Libraries/FatFs/Src/ff.c **** 				}
3562:./Libraries/FatFs/Src/ff.c **** 				if (disk_read(fs->drv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3563:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
3564:./Libraries/FatFs/Src/ff.c **** #if _FS_TINY
3565:./Libraries/FatFs/Src/ff.c **** 				if (fs->wflag && fs->winsect - sect < cc) {
3566:./Libraries/FatFs/Src/ff.c **** 					mem_cpy(rbuff + ((fs->winsect - sect) * SS(fs)), fs->win, SS(fs));
3567:./Libraries/FatFs/Src/ff.c **** 				}
3568:./Libraries/FatFs/Src/ff.c **** #else
3569:./Libraries/FatFs/Src/ff.c **** 				if ((fp->flag & FA_DIRTY) && fp->sect - sect < cc) {
3570:./Libraries/FatFs/Src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
3571:./Libraries/FatFs/Src/ff.c **** 				}
3572:./Libraries/FatFs/Src/ff.c **** #endif
3573:./Libraries/FatFs/Src/ff.c **** #endif
3574:./Libraries/FatFs/Src/ff.c **** 				rcnt = SS(fs) * cc;				/* Number of bytes transferred */
3575:./Libraries/FatFs/Src/ff.c **** 				continue;
3576:./Libraries/FatFs/Src/ff.c **** 			}
3577:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
3578:./Libraries/FatFs/Src/ff.c **** 			if (fp->sect != sect) {			/* Load data sector if not in cache */
3579:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
3580:./Libraries/FatFs/Src/ff.c **** 				if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
3581:./Libraries/FatFs/Src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 7359              		.loc 1 3581 32 view .LVU2653
 7360 0040 05F1300B 		add	fp, r5, #48
 7361 0044 0096     		str	r6, [sp]
 7362              	.LVL703:
 7363              	.L684:
3535:./Libraries/FatFs/Src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
 7364              		.loc 1 3535 3 is_stmt 1 view .LVU2654
3535:./Libraries/FatFs/Src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
 7365              		.loc 1 3535 16 is_stmt 0 view .LVU2655
 7366 0046 C0F30801 		ubfx	r1, r0, #0, #9
3535:./Libraries/FatFs/Src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
 7367              		.loc 1 3535 6 view .LVU2656
 7368 004a 59BB     		cbnz	r1, .L687
3536:./Libraries/FatFs/Src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
 7369              		.loc 1 3536 4 is_stmt 1 view .LVU2657
3536:./Libraries/FatFs/Src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
ARM GAS  /tmp/ccaQXGqa.s 			page 235


 7370              		.loc 1 3536 42 is_stmt 0 view .LVU2658
 7371 004c 0399     		ldr	r1, [sp, #12]
3536:./Libraries/FatFs/Src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
 7372              		.loc 1 3536 28 view .LVU2659
 7373 004e 430A     		lsrs	r3, r0, #9
3536:./Libraries/FatFs/Src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
 7374              		.loc 1 3536 42 view .LVU2660
 7375 0050 4A89     		ldrh	r2, [r1, #10]
3536:./Libraries/FatFs/Src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
 7376              		.loc 1 3536 50 view .LVU2661
 7377 0052 013A     		subs	r2, r2, #1
 7378              	.LVL704:
3537:./Libraries/FatFs/Src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 7379              		.loc 1 3537 4 is_stmt 1 view .LVU2662
3537:./Libraries/FatFs/Src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 7380              		.loc 1 3537 7 is_stmt 0 view .LVU2663
 7381 0054 12EA5022 		ands	r2, r2, r0, lsr #9
 7382              	.LVL705:
3537:./Libraries/FatFs/Src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 7383              		.loc 1 3537 7 view .LVU2664
 7384 0058 50D0     		beq	.L688
 7385 005a E869     		ldr	r0, [r5, #28]
 7386              	.LVL706:
 7387              	.L689:
3554:./Libraries/FatFs/Src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 7388              		.loc 1 3554 4 is_stmt 1 view .LVU2665
 7389              	.LBB1094:
 7390              	.LBI1094:
 983:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 7391              		.loc 1 983 7 view .LVU2666
 7392              	.LBB1095:
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 7393              		.loc 1 988 2 view .LVU2667
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 7394              		.loc 1 989 27 is_stmt 0 view .LVU2668
 7395 005c 8B69     		ldr	r3, [r1, #24]
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 7396              		.loc 1 988 7 view .LVU2669
 7397 005e 0238     		subs	r0, r0, #2
 7398              	.LVL707:
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 7399              		.loc 1 989 2 is_stmt 1 view .LVU2670
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 7400              		.loc 1 989 27 is_stmt 0 view .LVU2671
 7401 0060 023B     		subs	r3, r3, #2
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 7402              		.loc 1 989 5 view .LVU2672
 7403 0062 9842     		cmp	r0, r3
 7404 0064 64D2     		bcs	.L699
 990:./Libraries/FatFs/Src/ff.c **** }
 7405              		.loc 1 990 2 is_stmt 1 view .LVU2673
 990:./Libraries/FatFs/Src/ff.c **** }
 7406              		.loc 1 990 18 is_stmt 0 view .LVU2674
 7407 0066 B1F80AC0 		ldrh	ip, [r1, #10]
 990:./Libraries/FatFs/Src/ff.c **** }
 7408              		.loc 1 990 26 view .LVU2675
 7409 006a CC6A     		ldr	r4, [r1, #44]
ARM GAS  /tmp/ccaQXGqa.s 			page 236


 7410 006c 0CFB0044 		mla	r4, ip, r0, r4
 7411              	.LVL708:
 990:./Libraries/FatFs/Src/ff.c **** }
 7412              		.loc 1 990 26 view .LVU2676
 7413              	.LBE1095:
 7414              	.LBE1094:
3555:./Libraries/FatFs/Src/ff.c **** 			sect += csect;
 7415              		.loc 1 3555 4 is_stmt 1 view .LVU2677
3555:./Libraries/FatFs/Src/ff.c **** 			sect += csect;
 7416              		.loc 1 3555 7 is_stmt 0 view .LVU2678
 7417 0070 002C     		cmp	r4, #0
 7418 0072 5DD0     		beq	.L699
3555:./Libraries/FatFs/Src/ff.c **** 			sect += csect;
 7419              		.loc 1 3555 15 is_stmt 1 discriminator 2 view .LVU2679
3555:./Libraries/FatFs/Src/ff.c **** 			sect += csect;
 7420              		.loc 1 3555 36 discriminator 2 view .LVU2680
3556:./Libraries/FatFs/Src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
 7421              		.loc 1 3556 4 discriminator 2 view .LVU2681
3558:./Libraries/FatFs/Src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 7422              		.loc 1 3558 7 is_stmt 0 discriminator 2 view .LVU2682
 7423 0074 B8F5007F 		cmp	r8, #512
3556:./Libraries/FatFs/Src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
 7424              		.loc 1 3556 9 discriminator 2 view .LVU2683
 7425 0078 1444     		add	r4, r4, r2
 7426              	.LVL709:
3557:./Libraries/FatFs/Src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
 7427              		.loc 1 3557 4 is_stmt 1 discriminator 2 view .LVU2684
3558:./Libraries/FatFs/Src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 7428              		.loc 1 3558 4 discriminator 2 view .LVU2685
3558:./Libraries/FatFs/Src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 7429              		.loc 1 3558 7 is_stmt 0 discriminator 2 view .LVU2686
 7430 007a 62D2     		bcs	.L752
3578:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 7431              		.loc 1 3578 4 is_stmt 1 view .LVU2687
3578:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 7432              		.loc 1 3578 10 is_stmt 0 view .LVU2688
 7433 007c 2A6A     		ldr	r2, [r5, #32]
3578:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 7434              		.loc 1 3578 7 view .LVU2689
 7435 007e A242     		cmp	r2, r4
 7436 0080 0CD0     		beq	.L707
3580:./Libraries/FatFs/Src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 7437              		.loc 1 3580 5 is_stmt 1 view .LVU2690
3580:./Libraries/FatFs/Src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 7438              		.loc 1 3580 8 is_stmt 0 view .LVU2691
 7439 0082 95F91430 		ldrsb	r3, [r5, #20]
 7440 0086 002B     		cmp	r3, #0
 7441 0088 C0F29180 		blt	.L753
 7442              	.L709:
3582:./Libraries/FatFs/Src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3583:./Libraries/FatFs/Src/ff.c **** 				}
3584:./Libraries/FatFs/Src/ff.c **** #endif
3585:./Libraries/FatFs/Src/ff.c **** 				if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK)	ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
 7443              		.loc 1 3585 5 is_stmt 1 view .LVU2692
 7444              		.loc 1 3585 9 is_stmt 0 view .LVU2693
 7445 008c 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 7446 008e 0123     		movs	r3, #1
ARM GAS  /tmp/ccaQXGqa.s 			page 237


 7447 0090 2246     		mov	r2, r4
 7448 0092 5946     		mov	r1, fp
 7449 0094 FFF7FEFF 		bl	disk_read
 7450              	.LVL710:
 7451              		.loc 1 3585 8 view .LVU2694
 7452 0098 0028     		cmp	r0, #0
 7453 009a 6ED1     		bne	.L749
 7454              	.L707:
 7455              		.loc 1 3585 57 is_stmt 1 view .LVU2695
 7456              		.loc 1 3585 79 view .LVU2696
3586:./Libraries/FatFs/Src/ff.c **** 			}
3587:./Libraries/FatFs/Src/ff.c **** #endif
3588:./Libraries/FatFs/Src/ff.c **** 			fp->sect = sect;
 7457              		.loc 1 3588 4 view .LVU2697
 7458 009c A969     		ldr	r1, [r5, #24]
 7459              		.loc 1 3588 13 is_stmt 0 view .LVU2698
 7460 009e 2C62     		str	r4, [r5, #32]
 7461 00a0 C1F30801 		ubfx	r1, r1, #0, #9
 7462              	.LVL711:
 7463              	.L687:
3589:./Libraries/FatFs/Src/ff.c **** 		}
3590:./Libraries/FatFs/Src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
 7464              		.loc 1 3590 3 is_stmt 1 view .LVU2699
 7465              		.loc 1 3590 8 is_stmt 0 view .LVU2700
 7466 00a4 C1F50073 		rsb	r3, r1, #512
 7467              	.LVL712:
3591:./Libraries/FatFs/Src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
 7468              		.loc 1 3591 3 is_stmt 1 view .LVU2701
 7469              	.LBB1096:
 7470              	.LBB1097:
 7471 00a8 4846     		mov	r0, r9
 7472 00aa 5944     		add	r1, r1, fp
 7473 00ac 4345     		cmp	r3, r8
 7474 00ae 28BF     		it	cs
 7475 00b0 4346     		movcs	r3, r8
 7476              	.LVL713:
 7477              		.loc 1 3591 3 is_stmt 0 view .LVU2702
 7478 00b2 1A46     		mov	r2, r3
 7479 00b4 1C46     		mov	r4, r3
 7480              	.LVL714:
 7481              		.loc 1 3591 3 view .LVU2703
 7482              	.LBE1097:
 7483              	.LBE1096:
3592:./Libraries/FatFs/Src/ff.c **** #if _FS_TINY
3593:./Libraries/FatFs/Src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3594:./Libraries/FatFs/Src/ff.c **** 		mem_cpy(rbuff, fs->win + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3595:./Libraries/FatFs/Src/ff.c **** #else
3596:./Libraries/FatFs/Src/ff.c **** 		mem_cpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
 7484              		.loc 1 3596 3 is_stmt 1 view .LVU2704
 7485              	.LBB1099:
 7486              	.LBI1096:
 693:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 7487              		.loc 1 693 6 view .LVU2705
 7488              	.LBB1098:
 694:./Libraries/FatFs/Src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 7489              		.loc 1 694 2 view .LVU2706
 695:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 238


 7490              		.loc 1 695 2 view .LVU2707
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 7491              		.loc 1 697 2 view .LVU2708
 7492 00b6 FFF7FEFF 		bl	mem_cpy.part.0
 7493              	.LVL715:
 7494              	.L706:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 7495              		.loc 1 697 2 is_stmt 0 view .LVU2709
 7496              	.LBE1098:
 7497              	.LBE1099:
3534:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 7498              		.loc 1 3534 3 is_stmt 1 view .LVU2710
3534:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 7499              		.loc 1 3534 27 is_stmt 0 view .LVU2711
 7500 00ba A869     		ldr	r0, [r5, #24]
3533:./Libraries/FatFs/Src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 7501              		.loc 1 3533 2 view .LVU2712
 7502 00bc B8EB0408 		subs	r8, r8, r4
 7503              	.LVL716:
3534:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 7504              		.loc 1 3534 40 view .LVU2713
 7505 00c0 3B68     		ldr	r3, [r7]
3534:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 7506              		.loc 1 3534 9 view .LVU2714
 7507 00c2 A144     		add	r9, r9, r4
 7508              	.LVL717:
3533:./Libraries/FatFs/Src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 7509              		.loc 1 3533 11 is_stmt 1 view .LVU2715
3534:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 7510              		.loc 1 3534 27 is_stmt 0 view .LVU2716
 7511 00c4 2044     		add	r0, r0, r4
3534:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 7512              		.loc 1 3534 40 view .LVU2717
 7513 00c6 2344     		add	r3, r3, r4
3534:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 7514              		.loc 1 3534 27 view .LVU2718
 7515 00c8 A861     		str	r0, [r5, #24]
3534:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 7516              		.loc 1 3534 40 view .LVU2719
 7517 00ca 3B60     		str	r3, [r7]
3533:./Libraries/FatFs/Src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 7518              		.loc 1 3533 2 view .LVU2720
 7519 00cc BBD1     		bne	.L684
3533:./Libraries/FatFs/Src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 7520              		.loc 1 3533 2 view .LVU2721
 7521 00ce 009E     		ldr	r6, [sp]
 7522              	.LVL718:
 7523              	.L711:
3597:./Libraries/FatFs/Src/ff.c **** #endif
3598:./Libraries/FatFs/Src/ff.c **** 	}
3599:./Libraries/FatFs/Src/ff.c **** 
3600:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, FR_OK);
 7524              		.loc 1 3600 2 is_stmt 1 view .LVU2722
 7525 00d0 039B     		ldr	r3, [sp, #12]
 7526              	.LVL719:
 7527              	.LBB1100:
 7528              	.LBI1100:
ARM GAS  /tmp/ccaQXGqa.s 			page 239


 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 7529              		.loc 1 751 6 view .LVU2723
 7530              	.LBB1101:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 7531              		.loc 1 756 2 view .LVU2724
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 7532              		.loc 1 756 5 is_stmt 0 view .LVU2725
 7533 00d2 13B1     		cbz	r3, .L715
 7534              	.LVL720:
 7535              	.LBB1102:
 7536              	.LBI1102:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 7537              		.loc 1 751 6 is_stmt 1 view .LVU2726
 7538              	.LBB1103:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 7539              		.loc 1 757 3 view .LVU2727
 7540 00d4 D868     		ldr	r0, [r3, #12]
 7541 00d6 FFF7FEFF 		bl	ff_rel_grant
 7542              	.LVL721:
 7543              	.L715:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 7544              		.loc 1 757 3 is_stmt 0 view .LVU2728
 7545              	.LBE1103:
 7546              	.LBE1102:
 7547              	.LBE1101:
 7548              	.LBE1100:
3601:./Libraries/FatFs/Src/ff.c **** }
 7549              		.loc 1 3601 1 view .LVU2729
 7550 00da 3046     		mov	r0, r6
 7551 00dc 05B0     		add	sp, sp, #20
 7552              	.LCFI72:
 7553              		.cfi_remember_state
 7554              		.cfi_def_cfa_offset 36
 7555              		@ sp needed
 7556 00de BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7557              	.LVL722:
 7558              	.L744:
 7559              	.LCFI73:
 7560              		.cfi_restore_state
 7561              		.loc 1 3601 1 view .LVU2730
 7562 00e2 0646     		mov	r6, r0
 7563              	.LVL723:
 7564              	.L680:
3528:./Libraries/FatFs/Src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 7565              		.loc 1 3528 57 is_stmt 1 discriminator 3 view .LVU2731
 7566              	.LBB1104:
 7567              	.LBB1105:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 7568              		.loc 1 756 5 is_stmt 0 discriminator 3 view .LVU2732
 7569 00e4 0C2E     		cmp	r6, #12
 7570              	.LBE1105:
 7571              	.LBE1104:
3528:./Libraries/FatFs/Src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 7572              		.loc 1 3528 57 discriminator 3 view .LVU2733
 7573 00e6 0398     		ldr	r0, [sp, #12]
 7574              	.LVL724:
 7575              	.LBB1107:
ARM GAS  /tmp/ccaQXGqa.s 			page 240


 7576              	.LBI1104:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 7577              		.loc 1 751 6 is_stmt 1 discriminator 3 view .LVU2734
 7578              	.LBB1106:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 7579              		.loc 1 756 2 discriminator 3 view .LVU2735
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 7580              		.loc 1 756 5 is_stmt 0 discriminator 3 view .LVU2736
 7581 00e8 F7D0     		beq	.L715
 7582 00ea 0028     		cmp	r0, #0
 7583 00ec F5D0     		beq	.L715
 7584 00ee 3146     		mov	r1, r6
 7585 00f0 FFF7FEFF 		bl	unlock_fs.part.0
 7586              	.LVL725:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 7587              		.loc 1 756 5 discriminator 3 view .LVU2737
 7588              	.LBE1106:
 7589              	.LBE1107:
 7590              		.loc 1 3601 1 view .LVU2738
 7591 00f4 3046     		mov	r0, r6
 7592 00f6 05B0     		add	sp, sp, #20
 7593              	.LCFI74:
 7594              		.cfi_remember_state
 7595              		.cfi_def_cfa_offset 36
 7596              		@ sp needed
 7597 00f8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7598              	.LVL726:
 7599              	.L688:
 7600              	.LCFI75:
 7601              		.cfi_restore_state
3538:./Libraries/FatFs/Src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
 7602              		.loc 1 3538 5 is_stmt 1 view .LVU2739
3538:./Libraries/FatFs/Src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
 7603              		.loc 1 3538 8 is_stmt 0 view .LVU2740
 7604 00fc 0028     		cmp	r0, #0
 7605 00fe 35D0     		beq	.L754
3542:./Libraries/FatFs/Src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 7606              		.loc 1 3542 6 is_stmt 1 view .LVU2741
3542:./Libraries/FatFs/Src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 7607              		.loc 1 3542 12 is_stmt 0 view .LVU2742
 7608 0100 EC6A     		ldr	r4, [r5, #44]
3542:./Libraries/FatFs/Src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 7609              		.loc 1 3542 9 view .LVU2743
 7610 0102 002C     		cmp	r4, #0
 7611 0104 49D0     		beq	.L692
3543:./Libraries/FatFs/Src/ff.c **** 					} else
 7612              		.loc 1 3543 7 is_stmt 1 view .LVU2744
 7613              	.LVL727:
 7614              	.LBB1108:
 7615              	.LBI1108:
1440:./Libraries/FatFs/Src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
 7616              		.loc 1 1440 7 view .LVU2745
 7617              	.LBB1109:
1445:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = fp->obj.fs;
 7618              		.loc 1 1445 2 view .LVU2746
1446:./Libraries/FatFs/Src/ff.c **** 
 7619              		.loc 1 1446 2 view .LVU2747
ARM GAS  /tmp/ccaQXGqa.s 			page 241


1449:./Libraries/FatFs/Src/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 7620              		.loc 1 1449 2 view .LVU2748
1450:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
 7621              		.loc 1 1450 32 is_stmt 0 view .LVU2749
 7622 0106 2868     		ldr	r0, [r5]
1449:./Libraries/FatFs/Src/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 7623              		.loc 1 1449 6 view .LVU2750
 7624 0108 04F1040C 		add	ip, r4, #4
 7625              	.LVL728:
1450:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
 7626              		.loc 1 1450 2 is_stmt 1 view .LVU2751
1452:./Libraries/FatFs/Src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 7627              		.loc 1 1452 7 is_stmt 0 view .LVU2752
 7628 010c 6468     		ldr	r4, [r4, #4]
1450:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
 7629              		.loc 1 1450 32 view .LVU2753
 7630 010e 4089     		ldrh	r0, [r0, #10]
1450:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
 7631              		.loc 1 1450 5 view .LVU2754
 7632 0110 B3FBF0F3 		udiv	r3, r3, r0
 7633              	.LVL729:
1451:./Libraries/FatFs/Src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 7634              		.loc 1 1451 2 is_stmt 1 view .LVU2755
1452:./Libraries/FatFs/Src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 7635              		.loc 1 1452 3 view .LVU2756
1453:./Libraries/FatFs/Src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 7636              		.loc 1 1453 3 view .LVU2757
1453:./Libraries/FatFs/Src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 7637              		.loc 1 1453 6 is_stmt 0 view .LVU2758
 7638 0114 002C     		cmp	r4, #0
 7639 0116 6ED0     		beq	.L693
 7640 0118 6046     		mov	r0, ip
 7641 011a 04E0     		b	.L695
 7642              	.LVL730:
 7643              	.L755:
1455:./Libraries/FatFs/Src/ff.c **** 	}
 7644              		.loc 1 1455 6 view .LVU2759
 7645 011c 1B1B     		subs	r3, r3, r4
 7646              	.LVL731:
1455:./Libraries/FatFs/Src/ff.c **** 	}
 7647              		.loc 1 1455 14 is_stmt 1 view .LVU2760
1451:./Libraries/FatFs/Src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 7648              		.loc 1 1451 8 view .LVU2761
1451:./Libraries/FatFs/Src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 7649              		.loc 1 1451 2 view .LVU2762
1452:./Libraries/FatFs/Src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 7650              		.loc 1 1452 3 view .LVU2763
1452:./Libraries/FatFs/Src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 7651              		.loc 1 1452 7 is_stmt 0 view .LVU2764
 7652 011e 50F8084F 		ldr	r4, [r0, #8]!
 7653              	.LVL732:
1453:./Libraries/FatFs/Src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 7654              		.loc 1 1453 3 is_stmt 1 view .LVU2765
1453:./Libraries/FatFs/Src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 7655              		.loc 1 1453 6 is_stmt 0 view .LVU2766
 7656 0122 002C     		cmp	r4, #0
 7657 0124 67D0     		beq	.L693
ARM GAS  /tmp/ccaQXGqa.s 			page 242


 7658              	.LVL733:
 7659              	.L695:
1454:./Libraries/FatFs/Src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 7660              		.loc 1 1454 3 is_stmt 1 view .LVU2767
1455:./Libraries/FatFs/Src/ff.c **** 	}
 7661              		.loc 1 1455 3 view .LVU2768
1454:./Libraries/FatFs/Src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 7662              		.loc 1 1454 6 is_stmt 0 view .LVU2769
 7663 0126 9C42     		cmp	r4, r3
 7664 0128 F8D9     		bls	.L755
1457:./Libraries/FatFs/Src/ff.c **** }
 7665              		.loc 1 1457 2 is_stmt 1 view .LVU2770
1457:./Libraries/FatFs/Src/ff.c **** }
 7666              		.loc 1 1457 12 is_stmt 0 view .LVU2771
 7667 012a 4068     		ldr	r0, [r0, #4]
 7668              	.LVL734:
1457:./Libraries/FatFs/Src/ff.c **** }
 7669              		.loc 1 1457 12 view .LVU2772
 7670 012c 1844     		add	r0, r0, r3
 7671 012e 1EE0     		b	.L691
 7672              	.LVL735:
 7673              	.L699:
1457:./Libraries/FatFs/Src/ff.c **** }
 7674              		.loc 1 1457 12 view .LVU2773
 7675              	.LBE1109:
 7676              	.LBE1108:
3555:./Libraries/FatFs/Src/ff.c **** 			sect += csect;
 7677              		.loc 1 3555 15 is_stmt 1 discriminator 1 view .LVU2774
 7678 0130 0226     		movs	r6, #2
 7679 0132 6E75     		strb	r6, [r5, #21]
3555:./Libraries/FatFs/Src/ff.c **** 			sect += csect;
 7680              		.loc 1 3555 15 discriminator 1 view .LVU2775
 7681              	.LVL736:
 7682              	.LBB1110:
 7683              	.LBI1110:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 7684              		.loc 1 751 6 discriminator 1 view .LVU2776
 7685              	.LBE1110:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 7686              		.loc 1 756 2 discriminator 1 view .LVU2777
 7687              	.LBB1113:
 7688              	.LBB1111:
 7689              	.LBI1111:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 7690              		.loc 1 751 6 discriminator 1 view .LVU2778
 7691              	.LBB1112:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 7692              		.loc 1 757 3 discriminator 1 view .LVU2779
 7693 0134 C868     		ldr	r0, [r1, #12]
 7694 0136 FFF7FEFF 		bl	ff_rel_grant
 7695              	.LVL737:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 7696              		.loc 1 757 3 is_stmt 0 discriminator 1 view .LVU2780
 7697              	.LBE1112:
 7698              	.LBE1111:
 7699              	.LBE1113:
 7700              		.loc 1 3601 1 discriminator 1 view .LVU2781
ARM GAS  /tmp/ccaQXGqa.s 			page 243


 7701 013a 3046     		mov	r0, r6
 7702 013c 05B0     		add	sp, sp, #20
 7703              	.LCFI76:
 7704              		.cfi_remember_state
 7705              		.cfi_def_cfa_offset 36
 7706              	.LVL738:
 7707              		.loc 1 3601 1 discriminator 1 view .LVU2782
 7708              		@ sp needed
 7709 013e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7710              	.LVL739:
 7711              	.L752:
 7712              	.LCFI77:
 7713              		.cfi_restore_state
3559:./Libraries/FatFs/Src/ff.c **** 					cc = fs->csize - csect;
 7714              		.loc 1 3559 15 view .LVU2783
 7715 0142 02EB5820 		add	r0, r2, r8, lsr #9
3557:./Libraries/FatFs/Src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
 7716              		.loc 1 3557 7 view .LVU2784
 7717 0146 4FEA5826 		lsr	r6, r8, #9
3559:./Libraries/FatFs/Src/ff.c **** 					cc = fs->csize - csect;
 7718              		.loc 1 3559 5 is_stmt 1 view .LVU2785
3559:./Libraries/FatFs/Src/ff.c **** 					cc = fs->csize - csect;
 7719              		.loc 1 3559 8 is_stmt 0 view .LVU2786
 7720 014a 6045     		cmp	r0, ip
3560:./Libraries/FatFs/Src/ff.c **** 				}
 7721              		.loc 1 3560 6 is_stmt 1 view .LVU2787
3562:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 7722              		.loc 1 3562 9 is_stmt 0 view .LVU2788
 7723 014c 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 7724 014e 4946     		mov	r1, r9
3560:./Libraries/FatFs/Src/ff.c **** 				}
 7725              		.loc 1 3560 9 view .LVU2789
 7726 0150 88BF     		it	hi
 7727 0152 ACEB0206 		subhi	r6, ip, r2
 7728              	.LVL740:
3562:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 7729              		.loc 1 3562 5 is_stmt 1 view .LVU2790
3562:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 7730              		.loc 1 3562 9 is_stmt 0 view .LVU2791
 7731 0156 2246     		mov	r2, r4
 7732 0158 3346     		mov	r3, r6
 7733 015a FFF7FEFF 		bl	disk_read
 7734              	.LVL741:
3562:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 7735              		.loc 1 3562 8 view .LVU2792
 7736 015e 60B9     		cbnz	r0, .L749
3562:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 7737              		.loc 1 3562 56 is_stmt 1 discriminator 2 view .LVU2793
3562:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 7738              		.loc 1 3562 78 discriminator 2 view .LVU2794
3569:./Libraries/FatFs/Src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 7739              		.loc 1 3569 5 discriminator 2 view .LVU2795
3569:./Libraries/FatFs/Src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 7740              		.loc 1 3569 8 is_stmt 0 discriminator 2 view .LVU2796
 7741 0160 95F91420 		ldrsb	r2, [r5, #20]
 7742 0164 002A     		cmp	r2, #0
 7743 0166 31DB     		blt	.L756
ARM GAS  /tmp/ccaQXGqa.s 			page 244


 7744              	.L705:
3574:./Libraries/FatFs/Src/ff.c **** 				continue;
 7745              		.loc 1 3574 5 is_stmt 1 view .LVU2797
3574:./Libraries/FatFs/Src/ff.c **** 				continue;
 7746              		.loc 1 3574 10 is_stmt 0 view .LVU2798
 7747 0168 7402     		lsls	r4, r6, #9
 7748              	.LVL742:
3575:./Libraries/FatFs/Src/ff.c **** 			}
 7749              		.loc 1 3575 5 is_stmt 1 view .LVU2799
 7750 016a A6E7     		b	.L706
 7751              	.LVL743:
 7752              	.L754:
3539:./Libraries/FatFs/Src/ff.c **** 				} else {						/* Middle or end of the file */
 7753              		.loc 1 3539 6 view .LVU2800
3539:./Libraries/FatFs/Src/ff.c **** 				} else {						/* Middle or end of the file */
 7754              		.loc 1 3539 11 is_stmt 0 view .LVU2801
 7755 016c A868     		ldr	r0, [r5, #8]
 7756              	.LVL744:
 7757              	.L691:
3550:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 7758              		.loc 1 3550 5 is_stmt 1 view .LVU2802
3550:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 7759              		.loc 1 3550 8 is_stmt 0 view .LVU2803
 7760 016e 0128     		cmp	r0, #1
 7761 0170 48D9     		bls	.L757
3550:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 7762              		.loc 1 3550 19 is_stmt 1 discriminator 2 view .LVU2804
3550:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 7763              		.loc 1 3550 40 discriminator 2 view .LVU2805
3551:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 7764              		.loc 1 3551 5 discriminator 2 view .LVU2806
3551:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 7765              		.loc 1 3551 8 is_stmt 0 discriminator 2 view .LVU2807
 7766 0172 431C     		adds	r3, r0, #1
 7767 0174 36D0     		beq	.L758
3551:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 7768              		.loc 1 3551 29 is_stmt 1 discriminator 2 view .LVU2808
3551:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 7769              		.loc 1 3551 51 discriminator 2 view .LVU2809
3552:./Libraries/FatFs/Src/ff.c **** 			}
 7770              		.loc 1 3552 5 discriminator 2 view .LVU2810
3552:./Libraries/FatFs/Src/ff.c **** 			}
 7771              		.loc 1 3552 15 is_stmt 0 discriminator 2 view .LVU2811
 7772 0176 E861     		str	r0, [r5, #28]
 7773 0178 70E7     		b	.L689
 7774              	.LVL745:
 7775              	.L749:
3585:./Libraries/FatFs/Src/ff.c **** 			}
 7776              		.loc 1 3585 57 is_stmt 1 discriminator 1 view .LVU2812
 7777 017a 0122     		movs	r2, #1
 7778 017c 039B     		ldr	r3, [sp, #12]
 7779 017e 6A75     		strb	r2, [r5, #21]
3585:./Libraries/FatFs/Src/ff.c **** 			}
 7780              		.loc 1 3585 57 discriminator 1 view .LVU2813
 7781              	.LVL746:
 7782              	.LBB1114:
 7783              	.LBI1114:
ARM GAS  /tmp/ccaQXGqa.s 			page 245


 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 7784              		.loc 1 751 6 discriminator 1 view .LVU2814
 7785              	.LBB1115:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 7786              		.loc 1 756 2 discriminator 1 view .LVU2815
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 7787              		.loc 1 756 5 is_stmt 0 discriminator 1 view .LVU2816
 7788 0180 9BB1     		cbz	r3, .L704
 7789              	.LVL747:
 7790              	.LBB1116:
 7791              	.LBI1116:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 7792              		.loc 1 751 6 is_stmt 1 view .LVU2817
 7793              	.LBB1117:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 7794              		.loc 1 757 3 view .LVU2818
 7795 0182 D868     		ldr	r0, [r3, #12]
 7796              	.LBE1117:
 7797              	.LBE1116:
 7798              	.LBE1115:
 7799              	.LBE1114:
3585:./Libraries/FatFs/Src/ff.c **** 			}
 7800              		.loc 1 3585 57 is_stmt 0 view .LVU2819
 7801 0184 5646     		mov	r6, r10
 7802              	.LBB1121:
 7803              	.LBB1120:
 7804              	.LBB1119:
 7805              	.LBB1118:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 7806              		.loc 1 757 3 view .LVU2820
 7807 0186 FFF7FEFF 		bl	ff_rel_grant
 7808              	.LVL748:
 759:./Libraries/FatFs/Src/ff.c **** 
 7809              		.loc 1 759 1 view .LVU2821
 7810 018a A6E7     		b	.L715
 7811              	.LVL749:
 7812              	.L751:
 759:./Libraries/FatFs/Src/ff.c **** 
 7813              		.loc 1 759 1 view .LVU2822
 7814              	.LBE1118:
 7815              	.LBE1119:
 7816              	.LBE1120:
 7817              	.LBE1121:
3529:./Libraries/FatFs/Src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 7818              		.loc 1 3529 29 is_stmt 1 discriminator 1 view .LVU2823
 7819 018c 039B     		ldr	r3, [sp, #12]
 7820              	.LVL750:
 7821              	.LBB1122:
 7822              	.LBI1122:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 7823              		.loc 1 751 6 discriminator 1 view .LVU2824
 7824              	.LBB1123:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 7825              		.loc 1 756 2 discriminator 1 view .LVU2825
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 7826              		.loc 1 756 5 is_stmt 0 discriminator 1 view .LVU2826
 7827 018e DBB1     		cbz	r3, .L713
ARM GAS  /tmp/ccaQXGqa.s 			page 246


 7828              	.LVL751:
 7829              	.LBB1124:
 7830              	.LBI1124:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 7831              		.loc 1 751 6 is_stmt 1 view .LVU2827
 7832              	.LBB1125:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 7833              		.loc 1 757 3 view .LVU2828
 7834 0190 D868     		ldr	r0, [r3, #12]
 7835              	.LBE1125:
 7836              	.LBE1124:
 7837              	.LBE1123:
 7838              	.LBE1122:
3529:./Libraries/FatFs/Src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 7839              		.loc 1 3529 29 is_stmt 0 view .LVU2829
 7840 0192 0726     		movs	r6, #7
 7841              	.LVL752:
 7842              	.LBB1129:
 7843              	.LBB1128:
 7844              	.LBB1127:
 7845              	.LBB1126:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 7846              		.loc 1 757 3 view .LVU2830
 7847 0194 FFF7FEFF 		bl	ff_rel_grant
 7848              	.LVL753:
 759:./Libraries/FatFs/Src/ff.c **** 
 7849              		.loc 1 759 1 view .LVU2831
 7850 0198 9FE7     		b	.L715
 7851              	.LVL754:
 7852              	.L692:
 759:./Libraries/FatFs/Src/ff.c **** 
 7853              		.loc 1 759 1 view .LVU2832
 7854              	.LBE1126:
 7855              	.LBE1127:
 7856              	.LBE1128:
 7857              	.LBE1129:
3547:./Libraries/FatFs/Src/ff.c **** 					}
 7858              		.loc 1 3547 7 is_stmt 1 view .LVU2833
3547:./Libraries/FatFs/Src/ff.c **** 					}
 7859              		.loc 1 3547 14 is_stmt 0 view .LVU2834
 7860 019a E969     		ldr	r1, [r5, #28]
 7861 019c 2868     		ldr	r0, [r5]
 7862 019e 0192     		str	r2, [sp, #4]
 7863 01a0 FFF7FEFF 		bl	get_fat.isra.0
 7864              	.LVL755:
3547:./Libraries/FatFs/Src/ff.c **** 					}
 7865              		.loc 1 3547 14 view .LVU2835
 7866 01a4 0399     		ldr	r1, [sp, #12]
 7867 01a6 019A     		ldr	r2, [sp, #4]
 7868              	.LVL756:
3547:./Libraries/FatFs/Src/ff.c **** 					}
 7869              		.loc 1 3547 14 view .LVU2836
 7870 01a8 E1E7     		b	.L691
 7871              	.LVL757:
 7872              	.L704:
3551:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 7873              		.loc 1 3551 29 view .LVU2837
ARM GAS  /tmp/ccaQXGqa.s 			page 247


 7874 01aa 5646     		mov	r6, r10
 7875 01ac 95E7     		b	.L715
 7876              	.LVL758:
 7877              	.L753:
3581:./Libraries/FatFs/Src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 7878              		.loc 1 3581 6 is_stmt 1 view .LVU2838
3581:./Libraries/FatFs/Src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 7879              		.loc 1 3581 10 is_stmt 0 view .LVU2839
 7880 01ae 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 7881 01b0 0123     		movs	r3, #1
 7882 01b2 5946     		mov	r1, fp
 7883 01b4 FFF7FEFF 		bl	disk_write
 7884              	.LVL759:
3581:./Libraries/FatFs/Src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 7885              		.loc 1 3581 9 view .LVU2840
 7886 01b8 0028     		cmp	r0, #0
 7887 01ba DED1     		bne	.L749
3581:./Libraries/FatFs/Src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 7888              		.loc 1 3581 63 is_stmt 1 discriminator 2 view .LVU2841
3581:./Libraries/FatFs/Src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 7889              		.loc 1 3581 85 discriminator 2 view .LVU2842
3582:./Libraries/FatFs/Src/ff.c **** 				}
 7890              		.loc 1 3582 6 discriminator 2 view .LVU2843
3582:./Libraries/FatFs/Src/ff.c **** 				}
 7891              		.loc 1 3582 15 is_stmt 0 discriminator 2 view .LVU2844
 7892 01bc 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 7893 01be 0399     		ldr	r1, [sp, #12]
 7894 01c0 03F07F03 		and	r3, r3, #127
 7895 01c4 2B75     		strb	r3, [r5, #20]
 7896 01c6 61E7     		b	.L709
 7897              	.LVL760:
 7898              	.L713:
3529:./Libraries/FatFs/Src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 7899              		.loc 1 3529 29 view .LVU2845
 7900 01c8 0726     		movs	r6, #7
 7901              	.LVL761:
3529:./Libraries/FatFs/Src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 7902              		.loc 1 3529 29 view .LVU2846
 7903 01ca 86E7     		b	.L715
 7904              	.LVL762:
 7905              	.L756:
3569:./Libraries/FatFs/Src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 7906              		.loc 1 3569 43 discriminator 1 view .LVU2847
 7907 01cc 286A     		ldr	r0, [r5, #32]
 7908 01ce 001B     		subs	r0, r0, r4
3569:./Libraries/FatFs/Src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 7909              		.loc 1 3569 31 discriminator 1 view .LVU2848
 7910 01d0 B042     		cmp	r0, r6
 7911 01d2 C9D2     		bcs	.L705
3570:./Libraries/FatFs/Src/ff.c **** 				}
 7912              		.loc 1 3570 6 is_stmt 1 view .LVU2849
 7913              	.LVL763:
 7914              	.LBB1130:
 7915              	.LBI1130:
 693:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 7916              		.loc 1 693 6 view .LVU2850
 7917              	.LBB1131:
ARM GAS  /tmp/ccaQXGqa.s 			page 248


 694:./Libraries/FatFs/Src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 7918              		.loc 1 694 2 view .LVU2851
 695:./Libraries/FatFs/Src/ff.c **** 
 7919              		.loc 1 695 2 view .LVU2852
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 7920              		.loc 1 697 2 view .LVU2853
 7921 01d4 09EB4020 		add	r0, r9, r0, lsl #9
 7922              	.LVL764:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 7923              		.loc 1 697 2 is_stmt 0 view .LVU2854
 7924 01d8 4FF40072 		mov	r2, #512
 7925 01dc 5946     		mov	r1, fp
 7926 01de FFF7FEFF 		bl	mem_cpy.part.0
 7927              	.LVL765:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 7928              		.loc 1 697 2 view .LVU2855
 7929 01e2 C1E7     		b	.L705
 7930              	.LVL766:
 7931              	.L758:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 7932              		.loc 1 697 2 view .LVU2856
 7933              	.LBE1131:
 7934              	.LBE1130:
3551:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 7935              		.loc 1 3551 29 is_stmt 1 discriminator 1 view .LVU2857
 7936 01e4 0123     		movs	r3, #1
 7937 01e6 6B75     		strb	r3, [r5, #21]
3551:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 7938              		.loc 1 3551 29 discriminator 1 view .LVU2858
 7939              	.LVL767:
 7940              	.LBB1132:
 7941              	.LBI1132:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 7942              		.loc 1 751 6 discriminator 1 view .LVU2859
 7943              	.LBB1133:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 7944              		.loc 1 756 2 discriminator 1 view .LVU2860
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 7945              		.loc 1 756 5 is_stmt 0 discriminator 1 view .LVU2861
 7946 01e8 0029     		cmp	r1, #0
 7947 01ea DED0     		beq	.L704
 7948              	.LVL768:
 7949              	.LBB1134:
 7950              	.LBI1134:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 7951              		.loc 1 751 6 is_stmt 1 view .LVU2862
 7952              	.LBB1135:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 7953              		.loc 1 757 3 view .LVU2863
 7954 01ec C868     		ldr	r0, [r1, #12]
 7955              	.LVL769:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 7956              		.loc 1 757 3 is_stmt 0 view .LVU2864
 7957              	.LBE1135:
 7958              	.LBE1134:
 7959              	.LBE1133:
 7960              	.LBE1132:
ARM GAS  /tmp/ccaQXGqa.s 			page 249


3551:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 7961              		.loc 1 3551 29 view .LVU2865
 7962 01ee 5646     		mov	r6, r10
 7963              	.LBB1139:
 7964              	.LBB1138:
 7965              	.LBB1137:
 7966              	.LBB1136:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 7967              		.loc 1 757 3 view .LVU2866
 7968 01f0 FFF7FEFF 		bl	ff_rel_grant
 7969              	.LVL770:
 759:./Libraries/FatFs/Src/ff.c **** 
 7970              		.loc 1 759 1 view .LVU2867
 7971 01f4 71E7     		b	.L715
 7972              	.LVL771:
 7973              	.L693:
 759:./Libraries/FatFs/Src/ff.c **** 
 7974              		.loc 1 759 1 view .LVU2868
 7975              	.LBE1136:
 7976              	.LBE1137:
 7977              	.LBE1138:
 7978              	.LBE1139:
3550:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 7979              		.loc 1 3550 19 is_stmt 1 view .LVU2869
 7980 01f6 0223     		movs	r3, #2
 7981 01f8 6B75     		strb	r3, [r5, #21]
3550:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 7982              		.loc 1 3550 19 view .LVU2870
 7983              	.LVL772:
 7984              	.LBB1140:
 7985              	.LBI1140:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 7986              		.loc 1 751 6 view .LVU2871
 7987              	.LBB1141:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 7988              		.loc 1 756 2 view .LVU2872
 7989              	.L712:
 7990              	.LBB1142:
 7991              	.LBI1142:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 7992              		.loc 1 751 6 view .LVU2873
 7993              	.LBB1143:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 7994              		.loc 1 757 3 view .LVU2874
 7995 01fa C868     		ldr	r0, [r1, #12]
 7996              	.LBE1143:
 7997              	.LBE1142:
 7998              	.LBE1141:
 7999              	.LBE1140:
3550:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 8000              		.loc 1 3550 19 is_stmt 0 view .LVU2875
 8001 01fc 0226     		movs	r6, #2
 8002              	.LBB1148:
 8003              	.LBB1146:
 8004              	.LBB1145:
 8005              	.LBB1144:
 757:./Libraries/FatFs/Src/ff.c **** 	}
ARM GAS  /tmp/ccaQXGqa.s 			page 250


 8006              		.loc 1 757 3 view .LVU2876
 8007 01fe FFF7FEFF 		bl	ff_rel_grant
 8008              	.LVL773:
 759:./Libraries/FatFs/Src/ff.c **** 
 8009              		.loc 1 759 1 view .LVU2877
 8010 0202 6AE7     		b	.L715
 8011              	.LVL774:
 8012              	.L757:
 759:./Libraries/FatFs/Src/ff.c **** 
 8013              		.loc 1 759 1 view .LVU2878
 8014              	.LBE1144:
 8015              	.LBE1145:
 8016              	.LBE1146:
 8017              	.LBE1148:
3550:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 8018              		.loc 1 3550 19 is_stmt 1 view .LVU2879
 8019 0204 0226     		movs	r6, #2
 8020 0206 6E75     		strb	r6, [r5, #21]
3550:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 8021              		.loc 1 3550 19 view .LVU2880
 8022              	.LVL775:
 8023              	.LBB1149:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 8024              		.loc 1 751 6 view .LVU2881
 8025              	.LBB1147:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8026              		.loc 1 756 2 view .LVU2882
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8027              		.loc 1 756 5 is_stmt 0 view .LVU2883
 8028 0208 0029     		cmp	r1, #0
 8029 020a 3FF466AF 		beq	.L715
 8030 020e F4E7     		b	.L712
 8031              	.LBE1147:
 8032              	.LBE1149:
 8033              		.cfi_endproc
 8034              	.LFE377:
 8036              		.section	.text.f_write,"ax",%progbits
 8037              		.align	1
 8038              		.p2align 2,,3
 8039              		.global	f_write
 8040              		.syntax unified
 8041              		.thumb
 8042              		.thumb_func
 8043              		.fpu fpv5-d16
 8045              	f_write:
 8046              	.LVL776:
 8047              	.LFB378:
3602:./Libraries/FatFs/Src/ff.c **** 
3603:./Libraries/FatFs/Src/ff.c **** 
3604:./Libraries/FatFs/Src/ff.c **** 
3605:./Libraries/FatFs/Src/ff.c **** 
3606:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
3607:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3608:./Libraries/FatFs/Src/ff.c **** /* Write File                                                            */
3609:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3610:./Libraries/FatFs/Src/ff.c **** 
3611:./Libraries/FatFs/Src/ff.c **** FRESULT f_write (
ARM GAS  /tmp/ccaQXGqa.s 			page 251


3612:./Libraries/FatFs/Src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
3613:./Libraries/FatFs/Src/ff.c **** 	const void* buff,	/* Pointer to the data to be written */
3614:./Libraries/FatFs/Src/ff.c **** 	UINT btw,			/* Number of bytes to write */
3615:./Libraries/FatFs/Src/ff.c **** 	UINT* bw			/* Pointer to number of bytes written */
3616:./Libraries/FatFs/Src/ff.c **** )
3617:./Libraries/FatFs/Src/ff.c **** {
 8048              		.loc 1 3617 1 is_stmt 1 view -0
 8049              		.cfi_startproc
 8050              		@ args = 0, pretend = 0, frame = 16
 8051              		@ frame_needed = 0, uses_anonymous_args = 0
3618:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 8052              		.loc 1 3618 2 view .LVU2885
3619:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
 8053              		.loc 1 3619 2 view .LVU2886
3620:./Libraries/FatFs/Src/ff.c **** 	DWORD clst, sect;
 8054              		.loc 1 3620 2 view .LVU2887
3621:./Libraries/FatFs/Src/ff.c **** 	UINT wcnt, cc, csect;
 8055              		.loc 1 3621 2 view .LVU2888
3622:./Libraries/FatFs/Src/ff.c **** 	const BYTE *wbuff = (const BYTE*)buff;
 8056              		.loc 1 3622 2 view .LVU2889
3617:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 8057              		.loc 1 3617 1 is_stmt 0 view .LVU2890
 8058 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8059              	.LCFI78:
 8060              		.cfi_def_cfa_offset 36
 8061              		.cfi_offset 4, -36
 8062              		.cfi_offset 5, -32
 8063              		.cfi_offset 6, -28
 8064              		.cfi_offset 7, -24
 8065              		.cfi_offset 8, -20
 8066              		.cfi_offset 9, -16
 8067              		.cfi_offset 10, -12
 8068              		.cfi_offset 11, -8
 8069              		.cfi_offset 14, -4
3623:./Libraries/FatFs/Src/ff.c **** 
3624:./Libraries/FatFs/Src/ff.c **** 
3625:./Libraries/FatFs/Src/ff.c **** 	*bw = 0;	/* Clear write byte counter */
 8070              		.loc 1 3625 6 view .LVU2891
 8071 0004 0024     		movs	r4, #0
3617:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 8072              		.loc 1 3617 1 view .LVU2892
 8073 0006 85B0     		sub	sp, sp, #20
 8074              	.LCFI79:
 8075              		.cfi_def_cfa_offset 56
3617:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 8076              		.loc 1 3617 1 view .LVU2893
 8077 0008 8946     		mov	r9, r1
 8078 000a 9846     		mov	r8, r3
 8079              		.loc 1 3625 6 view .LVU2894
 8080 000c 1C60     		str	r4, [r3]
3626:./Libraries/FatFs/Src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
 8081              		.loc 1 3626 8 view .LVU2895
 8082 000e 03A9     		add	r1, sp, #12
 8083              	.LVL777:
3625:./Libraries/FatFs/Src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
 8084              		.loc 1 3625 2 is_stmt 1 view .LVU2896
 8085              		.loc 1 3626 2 view .LVU2897
ARM GAS  /tmp/ccaQXGqa.s 			page 252


3617:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 8086              		.loc 1 3617 1 is_stmt 0 view .LVU2898
 8087 0010 1746     		mov	r7, r2
 8088 0012 0446     		mov	r4, r0
 8089              		.loc 1 3626 8 view .LVU2899
 8090 0014 FFF7FEFF 		bl	validate
 8091              	.LVL778:
3627:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 8092              		.loc 1 3627 2 is_stmt 1 view .LVU2900
 8093              		.loc 1 3627 5 is_stmt 0 view .LVU2901
 8094 0018 0028     		cmp	r0, #0
 8095 001a 5AD1     		bne	.L820
 8096              		.loc 1 3627 27 discriminator 2 view .LVU2902
 8097 001c 657D     		ldrb	r5, [r4, #21]	@ zero_extendqisi2
 8098              	.LVL779:
 8099              		.loc 1 3627 19 discriminator 2 view .LVU2903
 8100 001e 002D     		cmp	r5, #0
 8101 0020 58D1     		bne	.L760
 8102              		.loc 1 3627 74 is_stmt 1 discriminator 4 view .LVU2904
3628:./Libraries/FatFs/Src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 8103              		.loc 1 3628 2 discriminator 4 view .LVU2905
 8104              		.loc 1 3628 10 is_stmt 0 discriminator 4 view .LVU2906
 8105 0022 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 8106              		.loc 1 3628 5 discriminator 4 view .LVU2907
 8107 0024 9A07     		lsls	r2, r3, #30
 8108 0026 40F1D480 		bpl	.L826
 8109              		.loc 1 3628 53 is_stmt 1 discriminator 2 view .LVU2908
3629:./Libraries/FatFs/Src/ff.c **** 
3630:./Libraries/FatFs/Src/ff.c **** 	/* Check fptr wrap-around (file size cannot reach 4GiB on FATxx) */
3631:./Libraries/FatFs/Src/ff.c **** 	if ((!_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
 8110              		.loc 1 3631 2 discriminator 2 view .LVU2909
 8111              		.loc 1 3631 59 is_stmt 0 discriminator 2 view .LVU2910
 8112 002a A669     		ldr	r6, [r4, #24]
 8113              		.loc 1 3631 5 discriminator 2 view .LVU2911
 8114 002c FE42     		cmn	r6, r7
3632:./Libraries/FatFs/Src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 8115              		.loc 1 3632 3 is_stmt 1 discriminator 2 view .LVU2912
 8116              		.loc 1 3632 7 is_stmt 0 discriminator 2 view .LVU2913
 8117 002e 28BF     		it	cs
 8118 0030 F743     		mvncs	r7, r6
 8119              	.LVL780:
3633:./Libraries/FatFs/Src/ff.c **** 	}
3634:./Libraries/FatFs/Src/ff.c **** 
3635:./Libraries/FatFs/Src/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
 8120              		.loc 1 3635 11 is_stmt 1 discriminator 2 view .LVU2914
 8121              		.loc 1 3635 2 is_stmt 0 discriminator 2 view .LVU2915
 8122 0032 002F     		cmp	r7, #0
 8123 0034 00F00481 		beq	.L765
 8124 0038 04F1300B 		add	fp, r4, #48
 8125              	.LVL781:
 8126              	.L795:
3636:./Libraries/FatFs/Src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
3637:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 8127              		.loc 1 3637 3 is_stmt 1 view .LVU2916
 8128              		.loc 1 3637 16 is_stmt 0 view .LVU2917
 8129 003c C6F30800 		ubfx	r0, r6, #0, #9
 8130              		.loc 1 3637 6 view .LVU2918
ARM GAS  /tmp/ccaQXGqa.s 			page 253


 8131 0040 0028     		cmp	r0, #0
 8132 0042 5DD1     		bne	.L767
3638:./Libraries/FatFs/Src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
 8133              		.loc 1 3638 4 is_stmt 1 view .LVU2919
 8134              		.loc 1 3638 43 is_stmt 0 view .LVU2920
 8135 0044 0399     		ldr	r1, [sp, #12]
 8136              		.loc 1 3638 28 view .LVU2921
 8137 0046 730A     		lsrs	r3, r6, #9
 8138              		.loc 1 3638 43 view .LVU2922
 8139 0048 B1F80AA0 		ldrh	r10, [r1, #10]
 8140              		.loc 1 3638 51 view .LVU2923
 8141 004c 0AF1FF3A 		add	r10, r10, #-1
 8142              	.LVL782:
3639:./Libraries/FatFs/Src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
 8143              		.loc 1 3639 4 is_stmt 1 view .LVU2924
 8144              		.loc 1 3639 7 is_stmt 0 view .LVU2925
 8145 0050 1AEA562A 		ands	r10, r10, r6, lsr #9
 8146              	.LVL783:
 8147              		.loc 1 3639 7 view .LVU2926
 8148 0054 10D1     		bne	.L768
3640:./Libraries/FatFs/Src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 8149              		.loc 1 3640 5 is_stmt 1 view .LVU2927
 8150              		.loc 1 3640 8 is_stmt 0 view .LVU2928
 8151 0056 002E     		cmp	r6, #0
 8152 0058 40F08780 		bne	.L769
3641:./Libraries/FatFs/Src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
 8153              		.loc 1 3641 6 is_stmt 1 view .LVU2929
 8154              		.loc 1 3641 11 is_stmt 0 view .LVU2930
 8155 005c A068     		ldr	r0, [r4, #8]
 8156              	.LVL784:
3642:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
 8157              		.loc 1 3642 6 is_stmt 1 view .LVU2931
 8158              		.loc 1 3642 9 is_stmt 0 view .LVU2932
 8159 005e 0028     		cmp	r0, #0
 8160 0060 00F0C980 		beq	.L827
 8161              	.L770:
3643:./Libraries/FatFs/Src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
3644:./Libraries/FatFs/Src/ff.c **** 					}
3645:./Libraries/FatFs/Src/ff.c **** 				} else {					/* On the middle or end of the file */
3646:./Libraries/FatFs/Src/ff.c **** #if _USE_FASTSEEK
3647:./Libraries/FatFs/Src/ff.c **** 					if (fp->cltbl) {
3648:./Libraries/FatFs/Src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3649:./Libraries/FatFs/Src/ff.c **** 					} else
3650:./Libraries/FatFs/Src/ff.c **** #endif
3651:./Libraries/FatFs/Src/ff.c **** 					{
3652:./Libraries/FatFs/Src/ff.c **** 						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
3653:./Libraries/FatFs/Src/ff.c **** 					}
3654:./Libraries/FatFs/Src/ff.c **** 				}
3655:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
3656:./Libraries/FatFs/Src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 8162              		.loc 1 3656 5 is_stmt 1 view .LVU2933
 8163              		.loc 1 3656 8 is_stmt 0 view .LVU2934
 8164 0064 0128     		cmp	r0, #1
 8165 0066 00F0ED80 		beq	.L828
 8166              		.loc 1 3656 20 is_stmt 1 discriminator 2 view .LVU2935
 8167              		.loc 1 3656 41 discriminator 2 view .LVU2936
3657:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
ARM GAS  /tmp/ccaQXGqa.s 			page 254


 8168              		.loc 1 3657 5 discriminator 2 view .LVU2937
 8169              		.loc 1 3657 8 is_stmt 0 discriminator 2 view .LVU2938
 8170 006a 431C     		adds	r3, r0, #1
 8171 006c 00F0AB80 		beq	.L829
 8172              		.loc 1 3657 29 is_stmt 1 discriminator 2 view .LVU2939
 8173              		.loc 1 3657 51 discriminator 2 view .LVU2940
3658:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 8174              		.loc 1 3658 5 discriminator 2 view .LVU2941
3659:./Libraries/FatFs/Src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
 8175              		.loc 1 3659 8 is_stmt 0 discriminator 2 view .LVU2942
 8176 0070 A368     		ldr	r3, [r4, #8]
3658:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 8177              		.loc 1 3658 15 discriminator 2 view .LVU2943
 8178 0072 E061     		str	r0, [r4, #28]
 8179              		.loc 1 3659 5 is_stmt 1 discriminator 2 view .LVU2944
 8180              		.loc 1 3659 8 is_stmt 0 discriminator 2 view .LVU2945
 8181 0074 03B9     		cbnz	r3, .L768
 8182              		.loc 1 3659 30 is_stmt 1 discriminator 1 view .LVU2946
 8183              		.loc 1 3659 45 is_stmt 0 discriminator 1 view .LVU2947
 8184 0076 A060     		str	r0, [r4, #8]
 8185              	.LVL785:
 8186              	.L768:
3660:./Libraries/FatFs/Src/ff.c **** 			}
3661:./Libraries/FatFs/Src/ff.c **** #if _FS_TINY
3662:./Libraries/FatFs/Src/ff.c **** 			if (fs->winsect == fp->sect && sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Write-back s
3663:./Libraries/FatFs/Src/ff.c **** #else
3664:./Libraries/FatFs/Src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
 8187              		.loc 1 3664 4 is_stmt 1 view .LVU2948
 8188              		.loc 1 3664 7 is_stmt 0 view .LVU2949
 8189 0078 94F91430 		ldrsb	r3, [r4, #20]
 8190 007c 002B     		cmp	r3, #0
 8191 007e C0F28D80 		blt	.L830
 8192              	.L781:
3665:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3666:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3667:./Libraries/FatFs/Src/ff.c **** 			}
3668:./Libraries/FatFs/Src/ff.c **** #endif
3669:./Libraries/FatFs/Src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
 8193              		.loc 1 3669 4 is_stmt 1 view .LVU2950
 8194              	.LVL786:
 8195              	.LBB1192:
 8196              	.LBI1192:
 983:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 8197              		.loc 1 983 7 view .LVU2951
 8198              	.LBB1193:
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 8199              		.loc 1 988 2 view .LVU2952
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 8200              		.loc 1 988 7 is_stmt 0 view .LVU2953
 8201 0082 E269     		ldr	r2, [r4, #28]
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 8202              		.loc 1 989 27 view .LVU2954
 8203 0084 8B69     		ldr	r3, [r1, #24]
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 8204              		.loc 1 988 7 view .LVU2955
 8205 0086 023A     		subs	r2, r2, #2
 8206              	.LVL787:
ARM GAS  /tmp/ccaQXGqa.s 			page 255


 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 8207              		.loc 1 989 2 is_stmt 1 view .LVU2956
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 8208              		.loc 1 989 27 is_stmt 0 view .LVU2957
 8209 0088 023B     		subs	r3, r3, #2
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 8210              		.loc 1 989 5 view .LVU2958
 8211 008a 9A42     		cmp	r2, r3
 8212 008c 64D2     		bcs	.L784
 990:./Libraries/FatFs/Src/ff.c **** }
 8213              		.loc 1 990 2 is_stmt 1 view .LVU2959
 990:./Libraries/FatFs/Src/ff.c **** }
 8214              		.loc 1 990 18 is_stmt 0 view .LVU2960
 8215 008e 4B89     		ldrh	r3, [r1, #10]
 990:./Libraries/FatFs/Src/ff.c **** }
 8216              		.loc 1 990 26 view .LVU2961
 8217 0090 C86A     		ldr	r0, [r1, #44]
 8218 0092 03FB0202 		mla	r2, r3, r2, r0
 8219              	.LVL788:
 990:./Libraries/FatFs/Src/ff.c **** }
 8220              		.loc 1 990 26 view .LVU2962
 8221              	.LBE1193:
 8222              	.LBE1192:
3670:./Libraries/FatFs/Src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 8223              		.loc 1 3670 4 is_stmt 1 view .LVU2963
 8224              		.loc 1 3670 7 is_stmt 0 view .LVU2964
 8225 0096 002A     		cmp	r2, #0
 8226 0098 5ED0     		beq	.L784
 8227              		.loc 1 3670 15 is_stmt 1 discriminator 2 view .LVU2965
 8228              		.loc 1 3670 36 discriminator 2 view .LVU2966
3671:./Libraries/FatFs/Src/ff.c **** 			sect += csect;
 8229              		.loc 1 3671 4 discriminator 2 view .LVU2967
3672:./Libraries/FatFs/Src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
3673:./Libraries/FatFs/Src/ff.c **** 			if (cc) {						/* Write maximum contiguous sectors directly */
 8230              		.loc 1 3673 7 is_stmt 0 discriminator 2 view .LVU2968
 8231 009a B7F5007F 		cmp	r7, #512
3671:./Libraries/FatFs/Src/ff.c **** 			sect += csect;
 8232              		.loc 1 3671 9 discriminator 2 view .LVU2969
 8233 009e 5244     		add	r2, r2, r10
 8234              	.LVL789:
3672:./Libraries/FatFs/Src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
 8235              		.loc 1 3672 4 is_stmt 1 discriminator 2 view .LVU2970
 8236              		.loc 1 3673 4 discriminator 2 view .LVU2971
 8237              		.loc 1 3673 7 is_stmt 0 discriminator 2 view .LVU2972
 8238 00a0 23D3     		bcc	.L786
3674:./Libraries/FatFs/Src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 8239              		.loc 1 3674 15 view .LVU2973
 8240 00a2 0AEB5720 		add	r0, r10, r7, lsr #9
3675:./Libraries/FatFs/Src/ff.c **** 					cc = fs->csize - csect;
3676:./Libraries/FatFs/Src/ff.c **** 				}
3677:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(fs->drv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
 8241              		.loc 1 3677 9 view .LVU2974
 8242 00a6 0192     		str	r2, [sp, #4]
3672:./Libraries/FatFs/Src/ff.c **** 			if (cc) {						/* Write maximum contiguous sectors directly */
 8243              		.loc 1 3672 7 view .LVU2975
 8244 00a8 7E0A     		lsrs	r6, r7, #9
 8245              	.LVL790:
ARM GAS  /tmp/ccaQXGqa.s 			page 256


3674:./Libraries/FatFs/Src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 8246              		.loc 1 3674 5 is_stmt 1 view .LVU2976
3674:./Libraries/FatFs/Src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 8247              		.loc 1 3674 8 is_stmt 0 view .LVU2977
 8248 00aa 9842     		cmp	r0, r3
3675:./Libraries/FatFs/Src/ff.c **** 					cc = fs->csize - csect;
 8249              		.loc 1 3675 6 is_stmt 1 view .LVU2978
 8250              		.loc 1 3677 9 is_stmt 0 view .LVU2979
 8251 00ac 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 8252 00ae 4946     		mov	r1, r9
3675:./Libraries/FatFs/Src/ff.c **** 					cc = fs->csize - csect;
 8253              		.loc 1 3675 9 view .LVU2980
 8254 00b0 88BF     		it	hi
 8255 00b2 A3EB0A06 		subhi	r6, r3, r10
 8256              	.LVL791:
 8257              		.loc 1 3677 5 is_stmt 1 view .LVU2981
 8258              		.loc 1 3677 9 is_stmt 0 view .LVU2982
 8259 00b6 3346     		mov	r3, r6
 8260 00b8 FFF7FEFF 		bl	disk_write
 8261              	.LVL792:
 8262              		.loc 1 3677 8 view .LVU2983
 8263 00bc 019A     		ldr	r2, [sp, #4]
 8264 00be 0028     		cmp	r0, #0
 8265 00c0 79D1     		bne	.L794
 8266              		.loc 1 3677 57 is_stmt 1 discriminator 2 view .LVU2984
 8267              		.loc 1 3677 79 discriminator 2 view .LVU2985
3678:./Libraries/FatFs/Src/ff.c **** #if _FS_MINIMIZE <= 2
3679:./Libraries/FatFs/Src/ff.c **** #if _FS_TINY
3680:./Libraries/FatFs/Src/ff.c **** 				if (fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct writ
3681:./Libraries/FatFs/Src/ff.c **** 					mem_cpy(fs->win, wbuff + ((fs->winsect - sect) * SS(fs)), SS(fs));
3682:./Libraries/FatFs/Src/ff.c **** 					fs->wflag = 0;
3683:./Libraries/FatFs/Src/ff.c **** 				}
3684:./Libraries/FatFs/Src/ff.c **** #else
3685:./Libraries/FatFs/Src/ff.c **** 				if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write *
 8268              		.loc 1 3685 5 discriminator 2 view .LVU2986
 8269              		.loc 1 3685 18 is_stmt 0 discriminator 2 view .LVU2987
 8270 00c2 216A     		ldr	r1, [r4, #32]
 8271 00c4 891A     		subs	r1, r1, r2
 8272              		.loc 1 3685 8 discriminator 2 view .LVU2988
 8273 00c6 B142     		cmp	r1, r6
 8274 00c8 C0F0AE80 		bcc	.L831
 8275              	.L789:
3686:./Libraries/FatFs/Src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
3687:./Libraries/FatFs/Src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3688:./Libraries/FatFs/Src/ff.c **** 				}
3689:./Libraries/FatFs/Src/ff.c **** #endif
3690:./Libraries/FatFs/Src/ff.c **** #endif
3691:./Libraries/FatFs/Src/ff.c **** 				wcnt = SS(fs) * cc;		/* Number of bytes transferred */
 8276              		.loc 1 3691 5 is_stmt 1 view .LVU2989
 8277              		.loc 1 3691 10 is_stmt 0 view .LVU2990
 8278 00cc 4FEA462A 		lsl	r10, r6, #9
 8279              	.LVL793:
3692:./Libraries/FatFs/Src/ff.c **** 				continue;
 8280              		.loc 1 3692 5 is_stmt 1 view .LVU2991
 8281 00d0 25E0     		b	.L790
 8282              	.LVL794:
 8283              	.L820:
ARM GAS  /tmp/ccaQXGqa.s 			page 257


 8284              		.loc 1 3692 5 is_stmt 0 view .LVU2992
 8285 00d2 0546     		mov	r5, r0
 8286              	.LVL795:
 8287              	.L760:
3627:./Libraries/FatFs/Src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 8288              		.loc 1 3627 57 is_stmt 1 discriminator 3 view .LVU2993
 8289              	.LBB1194:
 8290              	.LBB1195:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8291              		.loc 1 756 5 is_stmt 0 discriminator 3 view .LVU2994
 8292 00d4 0C2D     		cmp	r5, #12
 8293              	.LBE1195:
 8294              	.LBE1194:
3627:./Libraries/FatFs/Src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 8295              		.loc 1 3627 57 discriminator 3 view .LVU2995
 8296 00d6 0398     		ldr	r0, [sp, #12]
 8297              	.LVL796:
 8298              	.LBB1197:
 8299              	.LBI1194:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 8300              		.loc 1 751 6 is_stmt 1 discriminator 3 view .LVU2996
 8301              	.LBB1196:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8302              		.loc 1 756 2 discriminator 3 view .LVU2997
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8303              		.loc 1 756 5 is_stmt 0 discriminator 3 view .LVU2998
 8304 00d8 03D0     		beq	.L799
 8305 00da 10B1     		cbz	r0, .L799
 8306 00dc 2946     		mov	r1, r5
 8307 00de FFF7FEFF 		bl	unlock_fs.part.0
 8308              	.LVL797:
 8309              	.L799:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8310              		.loc 1 756 5 discriminator 3 view .LVU2999
 8311              	.LBE1196:
 8312              	.LBE1197:
3693:./Libraries/FatFs/Src/ff.c **** 			}
3694:./Libraries/FatFs/Src/ff.c **** #if _FS_TINY
3695:./Libraries/FatFs/Src/ff.c **** 			if (fp->fptr >= fp->obj.objsize) {	/* Avoid silly cache filling on the growing edge */
3696:./Libraries/FatFs/Src/ff.c **** 				if (sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);
3697:./Libraries/FatFs/Src/ff.c **** 				fs->winsect = sect;
3698:./Libraries/FatFs/Src/ff.c **** 			}
3699:./Libraries/FatFs/Src/ff.c **** #else
3700:./Libraries/FatFs/Src/ff.c **** 			if (fp->sect != sect && 		/* Fill sector cache with file data */
3701:./Libraries/FatFs/Src/ff.c **** 				fp->fptr < fp->obj.objsize &&
3702:./Libraries/FatFs/Src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
3703:./Libraries/FatFs/Src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
3704:./Libraries/FatFs/Src/ff.c **** 			}
3705:./Libraries/FatFs/Src/ff.c **** #endif
3706:./Libraries/FatFs/Src/ff.c **** 			fp->sect = sect;
3707:./Libraries/FatFs/Src/ff.c **** 		}
3708:./Libraries/FatFs/Src/ff.c **** 		wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3709:./Libraries/FatFs/Src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
3710:./Libraries/FatFs/Src/ff.c **** #if _FS_TINY
3711:./Libraries/FatFs/Src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3712:./Libraries/FatFs/Src/ff.c **** 		mem_cpy(fs->win + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3713:./Libraries/FatFs/Src/ff.c **** 		fs->wflag = 1;
ARM GAS  /tmp/ccaQXGqa.s 			page 258


3714:./Libraries/FatFs/Src/ff.c **** #else
3715:./Libraries/FatFs/Src/ff.c **** 		mem_cpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3716:./Libraries/FatFs/Src/ff.c **** 		fp->flag |= FA_DIRTY;
3717:./Libraries/FatFs/Src/ff.c **** #endif
3718:./Libraries/FatFs/Src/ff.c **** 	}
3719:./Libraries/FatFs/Src/ff.c **** 
3720:./Libraries/FatFs/Src/ff.c **** 	fp->flag |= FA_MODIFIED;				/* Set file change flag */
3721:./Libraries/FatFs/Src/ff.c **** 
3722:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3723:./Libraries/FatFs/Src/ff.c **** }
 8313              		.loc 1 3723 1 view .LVU3000
 8314 00e2 2846     		mov	r0, r5
 8315 00e4 05B0     		add	sp, sp, #20
 8316              	.LCFI80:
 8317              		.cfi_remember_state
 8318              		.cfi_def_cfa_offset 36
 8319              		@ sp needed
 8320 00e6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8321              	.LVL798:
 8322              	.L786:
 8323              	.LCFI81:
 8324              		.cfi_restore_state
3700:./Libraries/FatFs/Src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 8325              		.loc 1 3700 4 is_stmt 1 view .LVU3001
3700:./Libraries/FatFs/Src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 8326              		.loc 1 3700 7 is_stmt 0 view .LVU3002
 8327 00ea 236A     		ldr	r3, [r4, #32]
3701:./Libraries/FatFs/Src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 8328              		.loc 1 3701 7 view .LVU3003
 8329 00ec A069     		ldr	r0, [r4, #24]
3700:./Libraries/FatFs/Src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 8330              		.loc 1 3700 7 view .LVU3004
 8331 00ee 9342     		cmp	r3, r2
 8332 00f0 03D0     		beq	.L793
3700:./Libraries/FatFs/Src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 8333              		.loc 1 3700 25 discriminator 1 view .LVU3005
 8334 00f2 E368     		ldr	r3, [r4, #12]
 8335 00f4 9842     		cmp	r0, r3
 8336 00f6 C0F08C80 		bcc	.L832
 8337              	.LVL799:
 8338              	.L793:
3703:./Libraries/FatFs/Src/ff.c **** 			}
 8339              		.loc 1 3703 6 is_stmt 1 view .LVU3006
3703:./Libraries/FatFs/Src/ff.c **** 			}
 8340              		.loc 1 3703 28 view .LVU3007
3706:./Libraries/FatFs/Src/ff.c **** 		}
 8341              		.loc 1 3706 4 view .LVU3008
 8342 00fa C0F30800 		ubfx	r0, r0, #0, #9
3706:./Libraries/FatFs/Src/ff.c **** 		}
 8343              		.loc 1 3706 13 is_stmt 0 view .LVU3009
 8344 00fe 2262     		str	r2, [r4, #32]
 8345              	.LVL800:
 8346              	.L767:
3708:./Libraries/FatFs/Src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
 8347              		.loc 1 3708 3 is_stmt 1 view .LVU3010
3708:./Libraries/FatFs/Src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
 8348              		.loc 1 3708 8 is_stmt 0 view .LVU3011
ARM GAS  /tmp/ccaQXGqa.s 			page 259


 8349 0100 C0F50076 		rsb	r6, r0, #512
 8350              	.LVL801:
3709:./Libraries/FatFs/Src/ff.c **** #if _FS_TINY
 8351              		.loc 1 3709 3 is_stmt 1 view .LVU3012
 8352              	.LBB1198:
 8353              	.LBB1199:
 8354 0104 4946     		mov	r1, r9
 8355 0106 5844     		add	r0, r0, fp
 8356 0108 BE42     		cmp	r6, r7
 8357 010a 28BF     		it	cs
 8358 010c 3E46     		movcs	r6, r7
 8359              	.LVL802:
3709:./Libraries/FatFs/Src/ff.c **** #if _FS_TINY
 8360              		.loc 1 3709 3 is_stmt 0 view .LVU3013
 8361 010e 3246     		mov	r2, r6
 8362 0110 B246     		mov	r10, r6
 8363              	.LVL803:
3709:./Libraries/FatFs/Src/ff.c **** #if _FS_TINY
 8364              		.loc 1 3709 3 view .LVU3014
 8365              	.LBE1199:
 8366              	.LBE1198:
3715:./Libraries/FatFs/Src/ff.c **** 		fp->flag |= FA_DIRTY;
 8367              		.loc 1 3715 3 is_stmt 1 view .LVU3015
 8368              	.LBB1201:
 8369              	.LBI1198:
 693:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 8370              		.loc 1 693 6 view .LVU3016
 8371              	.LBB1200:
 694:./Libraries/FatFs/Src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 8372              		.loc 1 694 2 view .LVU3017
 695:./Libraries/FatFs/Src/ff.c **** 
 8373              		.loc 1 695 2 view .LVU3018
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 8374              		.loc 1 697 2 view .LVU3019
 8375 0112 FFF7FEFF 		bl	mem_cpy.part.0
 8376              	.LVL804:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 8377              		.loc 1 697 2 is_stmt 0 view .LVU3020
 8378              	.LBE1200:
 8379              	.LBE1201:
3716:./Libraries/FatFs/Src/ff.c **** #endif
 8380              		.loc 1 3716 3 is_stmt 1 view .LVU3021
3716:./Libraries/FatFs/Src/ff.c **** #endif
 8381              		.loc 1 3716 12 is_stmt 0 view .LVU3022
 8382 0116 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 8383 0118 63F07F03 		orn	r3, r3, #127
 8384 011c 2375     		strb	r3, [r4, #20]
 8385              	.LVL805:
 8386              	.L790:
3636:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 8387              		.loc 1 3636 3 is_stmt 1 view .LVU3023
3636:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 8388              		.loc 1 3636 27 is_stmt 0 view .LVU3024
 8389 011e A669     		ldr	r6, [r4, #24]
3636:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 8390              		.loc 1 3636 9 view .LVU3025
 8391 0120 D144     		add	r9, r9, r10
ARM GAS  /tmp/ccaQXGqa.s 			page 260


 8392              	.LVL806:
3635:./Libraries/FatFs/Src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
 8393              		.loc 1 3635 11 is_stmt 1 view .LVU3026
3636:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 8394              		.loc 1 3636 94 is_stmt 0 view .LVU3027
 8395 0122 E268     		ldr	r2, [r4, #12]
3636:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 8396              		.loc 1 3636 27 view .LVU3028
 8397 0124 5644     		add	r6, r6, r10
3636:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 8398              		.loc 1 3636 117 view .LVU3029
 8399 0126 D8F80030 		ldr	r3, [r8]
3636:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 8400              		.loc 1 3636 94 view .LVU3030
 8401 012a B242     		cmp	r2, r6
3636:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 8402              		.loc 1 3636 117 view .LVU3031
 8403 012c 5344     		add	r3, r3, r10
3636:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 8404              		.loc 1 3636 27 view .LVU3032
 8405 012e A661     		str	r6, [r4, #24]
3636:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 8406              		.loc 1 3636 94 view .LVU3033
 8407 0130 38BF     		it	cc
 8408 0132 3246     		movcc	r2, r6
3635:./Libraries/FatFs/Src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
 8409              		.loc 1 3635 2 view .LVU3034
 8410 0134 B7EB0A07 		subs	r7, r7, r10
 8411              	.LVL807:
3636:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 8412              		.loc 1 3636 52 view .LVU3035
 8413 0138 E260     		str	r2, [r4, #12]
3636:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 8414              		.loc 1 3636 117 view .LVU3036
 8415 013a C8F80030 		str	r3, [r8]
3635:./Libraries/FatFs/Src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
 8416              		.loc 1 3635 2 view .LVU3037
 8417 013e 7FF47DAF 		bne	.L795
3635:./Libraries/FatFs/Src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
 8418              		.loc 1 3635 2 view .LVU3038
 8419 0142 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 8420 0144 0399     		ldr	r1, [sp, #12]
 8421              	.LVL808:
 8422              	.L777:
3720:./Libraries/FatFs/Src/ff.c **** 
 8423              		.loc 1 3720 2 is_stmt 1 view .LVU3039
3720:./Libraries/FatFs/Src/ff.c **** 
 8424              		.loc 1 3720 11 is_stmt 0 view .LVU3040
 8425 0146 43F04003 		orr	r3, r3, #64
 8426 014a 2375     		strb	r3, [r4, #20]
3722:./Libraries/FatFs/Src/ff.c **** }
 8427              		.loc 1 3722 2 is_stmt 1 view .LVU3041
 8428              	.LVL809:
 8429              	.LBB1202:
 8430              	.LBI1202:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 8431              		.loc 1 751 6 view .LVU3042
ARM GAS  /tmp/ccaQXGqa.s 			page 261


 8432              	.LBB1203:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8433              		.loc 1 756 2 view .LVU3043
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8434              		.loc 1 756 5 is_stmt 0 view .LVU3044
 8435 014c 0029     		cmp	r1, #0
 8436 014e C8D0     		beq	.L799
 8437              	.LVL810:
 8438              	.L796:
 8439              	.LBB1204:
 8440              	.LBI1204:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 8441              		.loc 1 751 6 is_stmt 1 view .LVU3045
 8442              	.LBB1205:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 8443              		.loc 1 757 3 view .LVU3046
 8444 0150 C868     		ldr	r0, [r1, #12]
 8445 0152 FFF7FEFF 		bl	ff_rel_grant
 8446              	.LVL811:
 759:./Libraries/FatFs/Src/ff.c **** 
 8447              		.loc 1 759 1 is_stmt 0 view .LVU3047
 8448 0156 C4E7     		b	.L799
 8449              	.LVL812:
 8450              	.L784:
 759:./Libraries/FatFs/Src/ff.c **** 
 8451              		.loc 1 759 1 view .LVU3048
 8452              	.LBE1205:
 8453              	.LBE1204:
 8454              	.LBE1203:
 8455              	.LBE1202:
3670:./Libraries/FatFs/Src/ff.c **** 			sect += csect;
 8456              		.loc 1 3670 15 is_stmt 1 discriminator 1 view .LVU3049
 8457 0158 0225     		movs	r5, #2
 8458              	.LVL813:
3670:./Libraries/FatFs/Src/ff.c **** 			sect += csect;
 8459              		.loc 1 3670 15 is_stmt 0 discriminator 1 view .LVU3050
 8460 015a 6575     		strb	r5, [r4, #21]
3670:./Libraries/FatFs/Src/ff.c **** 			sect += csect;
 8461              		.loc 1 3670 15 is_stmt 1 discriminator 1 view .LVU3051
 8462              	.LVL814:
 8463              	.LBB1207:
 8464              	.LBI1207:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 8465              		.loc 1 751 6 discriminator 1 view .LVU3052
 8466              	.LBE1207:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8467              		.loc 1 756 2 discriminator 1 view .LVU3053
 8468              	.LBB1210:
 8469              	.LBB1208:
 8470              	.LBI1208:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 8471              		.loc 1 751 6 discriminator 1 view .LVU3054
 8472              	.LBB1209:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 8473              		.loc 1 757 3 discriminator 1 view .LVU3055
 8474 015c C868     		ldr	r0, [r1, #12]
 8475 015e FFF7FEFF 		bl	ff_rel_grant
ARM GAS  /tmp/ccaQXGqa.s 			page 262


 8476              	.LVL815:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 8477              		.loc 1 757 3 is_stmt 0 discriminator 1 view .LVU3056
 8478              	.LBE1209:
 8479              	.LBE1208:
 8480              	.LBE1210:
 8481              		.loc 1 3723 1 discriminator 1 view .LVU3057
 8482 0162 2846     		mov	r0, r5
 8483 0164 05B0     		add	sp, sp, #20
 8484              	.LCFI82:
 8485              		.cfi_remember_state
 8486              		.cfi_def_cfa_offset 36
 8487              		@ sp needed
 8488 0166 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8489              	.LVL816:
 8490              	.L769:
 8491              	.LCFI83:
 8492              		.cfi_restore_state
3647:./Libraries/FatFs/Src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 8493              		.loc 1 3647 6 is_stmt 1 view .LVU3058
3647:./Libraries/FatFs/Src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 8494              		.loc 1 3647 12 is_stmt 0 view .LVU3059
 8495 016a E26A     		ldr	r2, [r4, #44]
3647:./Libraries/FatFs/Src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 8496              		.loc 1 3647 9 view .LVU3060
 8497 016c 002A     		cmp	r2, #0
 8498 016e 37D0     		beq	.L772
3648:./Libraries/FatFs/Src/ff.c **** 					} else
 8499              		.loc 1 3648 7 is_stmt 1 view .LVU3061
 8500              	.LVL817:
 8501              	.LBB1211:
 8502              	.LBI1211:
1440:./Libraries/FatFs/Src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
 8503              		.loc 1 1440 7 view .LVU3062
 8504              	.LBB1212:
1445:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = fp->obj.fs;
 8505              		.loc 1 1445 2 view .LVU3063
1446:./Libraries/FatFs/Src/ff.c **** 
 8506              		.loc 1 1446 2 view .LVU3064
1449:./Libraries/FatFs/Src/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 8507              		.loc 1 1449 2 view .LVU3065
1450:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
 8508              		.loc 1 1450 32 is_stmt 0 view .LVU3066
 8509 0170 2668     		ldr	r6, [r4]
1449:./Libraries/FatFs/Src/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 8510              		.loc 1 1449 6 view .LVU3067
 8511 0172 101D     		adds	r0, r2, #4
 8512              	.LVL818:
1450:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
 8513              		.loc 1 1450 2 is_stmt 1 view .LVU3068
1452:./Libraries/FatFs/Src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 8514              		.loc 1 1452 7 is_stmt 0 view .LVU3069
 8515 0174 5268     		ldr	r2, [r2, #4]
1450:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
 8516              		.loc 1 1450 32 view .LVU3070
 8517 0176 7689     		ldrh	r6, [r6, #10]
1450:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
ARM GAS  /tmp/ccaQXGqa.s 			page 263


 8518              		.loc 1 1450 5 view .LVU3071
 8519 0178 B3FBF6F3 		udiv	r3, r3, r6
 8520              	.LVL819:
1451:./Libraries/FatFs/Src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 8521              		.loc 1 1451 2 is_stmt 1 view .LVU3072
1452:./Libraries/FatFs/Src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 8522              		.loc 1 1452 3 view .LVU3073
1453:./Libraries/FatFs/Src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 8523              		.loc 1 1453 3 view .LVU3074
1453:./Libraries/FatFs/Src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 8524              		.loc 1 1453 6 is_stmt 0 view .LVU3075
 8525 017c 2AB9     		cbnz	r2, .L776
 8526 017e 43E0     		b	.L822
 8527              	.L833:
1455:./Libraries/FatFs/Src/ff.c **** 	}
 8528              		.loc 1 1455 6 view .LVU3076
 8529 0180 9B1A     		subs	r3, r3, r2
 8530              	.LVL820:
1455:./Libraries/FatFs/Src/ff.c **** 	}
 8531              		.loc 1 1455 14 is_stmt 1 view .LVU3077
1451:./Libraries/FatFs/Src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 8532              		.loc 1 1451 8 view .LVU3078
1451:./Libraries/FatFs/Src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 8533              		.loc 1 1451 2 view .LVU3079
1452:./Libraries/FatFs/Src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 8534              		.loc 1 1452 3 view .LVU3080
1452:./Libraries/FatFs/Src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 8535              		.loc 1 1452 7 is_stmt 0 view .LVU3081
 8536 0182 50F8082F 		ldr	r2, [r0, #8]!
 8537              	.LVL821:
1453:./Libraries/FatFs/Src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 8538              		.loc 1 1453 3 is_stmt 1 view .LVU3082
1453:./Libraries/FatFs/Src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 8539              		.loc 1 1453 6 is_stmt 0 view .LVU3083
 8540 0186 002A     		cmp	r2, #0
 8541 0188 3ED0     		beq	.L822
 8542              	.LVL822:
 8543              	.L776:
1454:./Libraries/FatFs/Src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 8544              		.loc 1 1454 3 is_stmt 1 view .LVU3084
1455:./Libraries/FatFs/Src/ff.c **** 	}
 8545              		.loc 1 1455 3 view .LVU3085
1454:./Libraries/FatFs/Src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 8546              		.loc 1 1454 6 is_stmt 0 view .LVU3086
 8547 018a 9342     		cmp	r3, r2
 8548 018c F8D2     		bcs	.L833
1457:./Libraries/FatFs/Src/ff.c **** }
 8549              		.loc 1 1457 2 is_stmt 1 view .LVU3087
 8550              	.LVL823:
1457:./Libraries/FatFs/Src/ff.c **** }
 8551              		.loc 1 1457 12 is_stmt 0 view .LVU3088
 8552 018e 4068     		ldr	r0, [r0, #4]
 8553 0190 1844     		add	r0, r0, r3
 8554              	.LVL824:
1457:./Libraries/FatFs/Src/ff.c **** }
 8555              		.loc 1 1457 12 view .LVU3089
 8556              	.LBE1212:
ARM GAS  /tmp/ccaQXGqa.s 			page 264


 8557              	.LBE1211:
3655:./Libraries/FatFs/Src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 8558              		.loc 1 3655 5 is_stmt 1 view .LVU3090
3655:./Libraries/FatFs/Src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 8559              		.loc 1 3655 8 is_stmt 0 view .LVU3091
 8560 0192 0028     		cmp	r0, #0
 8561 0194 7FF466AF 		bne	.L770
 8562              	.LVL825:
 8563              	.L834:
3655:./Libraries/FatFs/Src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 8564              		.loc 1 3655 8 view .LVU3092
 8565 0198 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 8566 019a D4E7     		b	.L777
 8567              	.LVL826:
 8568              	.L830:
3665:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 8569              		.loc 1 3665 5 is_stmt 1 view .LVU3093
3665:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 8570              		.loc 1 3665 9 is_stmt 0 view .LVU3094
 8571 019c 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 8572 019e 0123     		movs	r3, #1
 8573 01a0 226A     		ldr	r2, [r4, #32]
 8574 01a2 5946     		mov	r1, fp
 8575 01a4 FFF7FEFF 		bl	disk_write
 8576              	.LVL827:
3665:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 8577              		.loc 1 3665 8 view .LVU3095
 8578 01a8 28B9     		cbnz	r0, .L794
3665:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 8579              		.loc 1 3665 62 is_stmt 1 discriminator 2 view .LVU3096
3665:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 8580              		.loc 1 3665 84 discriminator 2 view .LVU3097
3666:./Libraries/FatFs/Src/ff.c **** 			}
 8581              		.loc 1 3666 5 discriminator 2 view .LVU3098
3666:./Libraries/FatFs/Src/ff.c **** 			}
 8582              		.loc 1 3666 14 is_stmt 0 discriminator 2 view .LVU3099
 8583 01aa 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 8584 01ac 0399     		ldr	r1, [sp, #12]
 8585 01ae 03F07F03 		and	r3, r3, #127
 8586 01b2 2375     		strb	r3, [r4, #20]
 8587 01b4 65E7     		b	.L781
 8588              	.L794:
3703:./Libraries/FatFs/Src/ff.c **** 			}
 8589              		.loc 1 3703 6 is_stmt 1 view .LVU3100
 8590 01b6 0125     		movs	r5, #1
 8591              	.LVL828:
3703:./Libraries/FatFs/Src/ff.c **** 			}
 8592              		.loc 1 3703 6 is_stmt 0 view .LVU3101
 8593 01b8 039B     		ldr	r3, [sp, #12]
 8594 01ba 6575     		strb	r5, [r4, #21]
3703:./Libraries/FatFs/Src/ff.c **** 			}
 8595              		.loc 1 3703 6 is_stmt 1 view .LVU3102
 8596              	.LVL829:
 8597              	.LBB1213:
 8598              	.LBI1213:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 8599              		.loc 1 751 6 view .LVU3103
ARM GAS  /tmp/ccaQXGqa.s 			page 265


 8600              	.LBB1214:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8601              		.loc 1 756 2 view .LVU3104
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8602              		.loc 1 756 5 is_stmt 0 view .LVU3105
 8603 01bc 3BB1     		cbz	r3, .L783
 8604              	.LVL830:
 8605              	.LBB1215:
 8606              	.LBI1215:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 8607              		.loc 1 751 6 is_stmt 1 view .LVU3106
 8608              	.LBB1216:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 8609              		.loc 1 757 3 view .LVU3107
 8610 01be D868     		ldr	r0, [r3, #12]
 8611 01c0 FFF7FEFF 		bl	ff_rel_grant
 8612              	.LVL831:
 759:./Libraries/FatFs/Src/ff.c **** 
 8613              		.loc 1 759 1 is_stmt 0 view .LVU3108
 8614 01c4 8DE7     		b	.L799
 8615              	.LVL832:
 8616              	.L829:
 759:./Libraries/FatFs/Src/ff.c **** 
 8617              		.loc 1 759 1 view .LVU3109
 8618              	.LBE1216:
 8619              	.LBE1215:
 8620              	.LBE1214:
 8621              	.LBE1213:
3657:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 8622              		.loc 1 3657 29 is_stmt 1 discriminator 1 view .LVU3110
 8623 01c6 0125     		movs	r5, #1
 8624              	.LVL833:
3657:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 8625              		.loc 1 3657 29 is_stmt 0 discriminator 1 view .LVU3111
 8626 01c8 6575     		strb	r5, [r4, #21]
3657:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 8627              		.loc 1 3657 29 is_stmt 1 discriminator 1 view .LVU3112
 8628              	.LVL834:
 8629              	.LBB1217:
 8630              	.LBI1217:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 8631              		.loc 1 751 6 discriminator 1 view .LVU3113
 8632              	.LBB1218:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8633              		.loc 1 756 2 discriminator 1 view .LVU3114
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8634              		.loc 1 756 5 is_stmt 0 discriminator 1 view .LVU3115
 8635 01ca 0029     		cmp	r1, #0
 8636 01cc C0D1     		bne	.L796
 8637              	.LVL835:
 8638              	.L783:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8639              		.loc 1 756 5 discriminator 1 view .LVU3116
 8640              	.LBE1218:
 8641              	.LBE1217:
3657:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 8642              		.loc 1 3657 29 view .LVU3117
ARM GAS  /tmp/ccaQXGqa.s 			page 266


 8643 01ce 0125     		movs	r5, #1
 8644 01d0 87E7     		b	.L799
 8645              	.LVL836:
 8646              	.L826:
3628:./Libraries/FatFs/Src/ff.c **** 
 8647              		.loc 1 3628 30 is_stmt 1 discriminator 1 view .LVU3118
 8648 01d2 039B     		ldr	r3, [sp, #12]
 8649              	.LVL837:
 8650              	.LBB1219:
 8651              	.LBI1219:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 8652              		.loc 1 751 6 discriminator 1 view .LVU3119
 8653              	.LBB1220:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8654              		.loc 1 756 2 discriminator 1 view .LVU3120
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8655              		.loc 1 756 5 is_stmt 0 discriminator 1 view .LVU3121
 8656 01d4 6BB1     		cbz	r3, .L797
 8657              	.LVL838:
 8658              	.LBB1221:
 8659              	.LBI1221:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 8660              		.loc 1 751 6 is_stmt 1 view .LVU3122
 8661              	.LBB1222:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 8662              		.loc 1 757 3 view .LVU3123
 8663 01d6 D868     		ldr	r0, [r3, #12]
 8664              	.LBE1222:
 8665              	.LBE1221:
 8666              	.LBE1220:
 8667              	.LBE1219:
3628:./Libraries/FatFs/Src/ff.c **** 
 8668              		.loc 1 3628 30 is_stmt 0 view .LVU3124
 8669 01d8 0725     		movs	r5, #7
 8670              	.LVL839:
 8671              	.LBB1226:
 8672              	.LBB1225:
 8673              	.LBB1224:
 8674              	.LBB1223:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 8675              		.loc 1 757 3 view .LVU3125
 8676 01da FFF7FEFF 		bl	ff_rel_grant
 8677              	.LVL840:
 759:./Libraries/FatFs/Src/ff.c **** 
 8678              		.loc 1 759 1 view .LVU3126
 8679 01de 80E7     		b	.L799
 8680              	.LVL841:
 8681              	.L772:
 759:./Libraries/FatFs/Src/ff.c **** 
 8682              		.loc 1 759 1 view .LVU3127
 8683              	.LBE1223:
 8684              	.LBE1224:
 8685              	.LBE1225:
 8686              	.LBE1226:
3652:./Libraries/FatFs/Src/ff.c **** 					}
 8687              		.loc 1 3652 7 is_stmt 1 view .LVU3128
3652:./Libraries/FatFs/Src/ff.c **** 					}
ARM GAS  /tmp/ccaQXGqa.s 			page 267


 8688              		.loc 1 3652 14 is_stmt 0 view .LVU3129
 8689 01e0 E169     		ldr	r1, [r4, #28]
 8690 01e2 2046     		mov	r0, r4
 8691 01e4 FFF7FEFF 		bl	create_chain
 8692              	.LVL842:
 8693 01e8 0399     		ldr	r1, [sp, #12]
 8694              	.LVL843:
3655:./Libraries/FatFs/Src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 8695              		.loc 1 3655 5 is_stmt 1 view .LVU3130
3655:./Libraries/FatFs/Src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 8696              		.loc 1 3655 8 is_stmt 0 view .LVU3131
 8697 01ea 0028     		cmp	r0, #0
 8698 01ec 7FF43AAF 		bne	.L770
 8699 01f0 D2E7     		b	.L834
 8700              	.LVL844:
 8701              	.L797:
3628:./Libraries/FatFs/Src/ff.c **** 
 8702              		.loc 1 3628 30 view .LVU3132
 8703 01f2 0725     		movs	r5, #7
 8704              	.LVL845:
3628:./Libraries/FatFs/Src/ff.c **** 
 8705              		.loc 1 3628 30 view .LVU3133
 8706 01f4 75E7     		b	.L799
 8707              	.LVL846:
 8708              	.L827:
3643:./Libraries/FatFs/Src/ff.c **** 					}
 8709              		.loc 1 3643 7 is_stmt 1 view .LVU3134
3643:./Libraries/FatFs/Src/ff.c **** 					}
 8710              		.loc 1 3643 14 is_stmt 0 view .LVU3135
 8711 01f6 5146     		mov	r1, r10
 8712 01f8 2046     		mov	r0, r4
 8713              	.LVL847:
3643:./Libraries/FatFs/Src/ff.c **** 					}
 8714              		.loc 1 3643 14 view .LVU3136
 8715 01fa FFF7FEFF 		bl	create_chain
 8716              	.LVL848:
3643:./Libraries/FatFs/Src/ff.c **** 					}
 8717              		.loc 1 3643 14 view .LVU3137
 8718 01fe 0399     		ldr	r1, [sp, #12]
 8719              	.LVL849:
3655:./Libraries/FatFs/Src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 8720              		.loc 1 3655 5 is_stmt 1 view .LVU3138
3655:./Libraries/FatFs/Src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 8721              		.loc 1 3655 8 is_stmt 0 view .LVU3139
 8722 0200 0028     		cmp	r0, #0
 8723 0202 7FF42FAF 		bne	.L770
 8724 0206 C7E7     		b	.L834
 8725              	.LVL850:
 8726              	.L822:
3655:./Libraries/FatFs/Src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 8727              		.loc 1 3655 8 view .LVU3140
 8728 0208 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 8729              	.LVL851:
3720:./Libraries/FatFs/Src/ff.c **** 
 8730              		.loc 1 3720 2 is_stmt 1 view .LVU3141
3720:./Libraries/FatFs/Src/ff.c **** 
 8731              		.loc 1 3720 11 is_stmt 0 view .LVU3142
ARM GAS  /tmp/ccaQXGqa.s 			page 268


 8732 020a 43F04003 		orr	r3, r3, #64
 8733 020e 2375     		strb	r3, [r4, #20]
3722:./Libraries/FatFs/Src/ff.c **** }
 8734              		.loc 1 3722 2 is_stmt 1 view .LVU3143
 8735              	.LVL852:
 8736              	.LBB1227:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 8737              		.loc 1 751 6 view .LVU3144
 8738              	.LBB1206:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8739              		.loc 1 756 2 view .LVU3145
 8740 0210 9EE7     		b	.L796
 8741              	.LVL853:
 8742              	.L832:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8743              		.loc 1 756 2 is_stmt 0 view .LVU3146
 8744              	.LBE1206:
 8745              	.LBE1227:
3702:./Libraries/FatFs/Src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
 8746              		.loc 1 3702 5 view .LVU3147
 8747 0212 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 8748 0214 0123     		movs	r3, #1
 8749 0216 5946     		mov	r1, fp
 8750 0218 0192     		str	r2, [sp, #4]
 8751 021a FFF7FEFF 		bl	disk_read
 8752              	.LVL854:
3701:./Libraries/FatFs/Src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 8753              		.loc 1 3701 32 view .LVU3148
 8754 021e 0028     		cmp	r0, #0
 8755 0220 C9D1     		bne	.L794
3701:./Libraries/FatFs/Src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 8756              		.loc 1 3701 32 view .LVU3149
 8757 0222 A069     		ldr	r0, [r4, #24]
 8758 0224 019A     		ldr	r2, [sp, #4]
 8759 0226 68E7     		b	.L793
 8760              	.LVL855:
 8761              	.L831:
3686:./Libraries/FatFs/Src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 8762              		.loc 1 3686 6 is_stmt 1 view .LVU3150
 8763              	.LBB1228:
 8764              	.LBI1228:
 693:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 8765              		.loc 1 693 6 view .LVU3151
 8766              	.LBB1229:
 694:./Libraries/FatFs/Src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 8767              		.loc 1 694 2 view .LVU3152
 695:./Libraries/FatFs/Src/ff.c **** 
 8768              		.loc 1 695 2 view .LVU3153
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 8769              		.loc 1 697 2 view .LVU3154
 8770 0228 09EB4121 		add	r1, r9, r1, lsl #9
 8771              	.LVL856:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 8772              		.loc 1 697 2 is_stmt 0 view .LVU3155
 8773 022c 4FF40072 		mov	r2, #512
 8774 0230 5846     		mov	r0, fp
 8775 0232 FFF7FEFF 		bl	mem_cpy.part.0
ARM GAS  /tmp/ccaQXGqa.s 			page 269


 8776              	.LVL857:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 8777              		.loc 1 697 2 view .LVU3156
 8778              	.LBE1229:
 8779              	.LBE1228:
3687:./Libraries/FatFs/Src/ff.c **** 				}
 8780              		.loc 1 3687 6 is_stmt 1 view .LVU3157
3687:./Libraries/FatFs/Src/ff.c **** 				}
 8781              		.loc 1 3687 15 is_stmt 0 view .LVU3158
 8782 0236 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 8783 0238 03F07F03 		and	r3, r3, #127
 8784 023c 2375     		strb	r3, [r4, #20]
 8785 023e 45E7     		b	.L789
 8786              	.LVL858:
 8787              	.L765:
3687:./Libraries/FatFs/Src/ff.c **** 				}
 8788              		.loc 1 3687 15 view .LVU3159
 8789 0240 0399     		ldr	r1, [sp, #12]
 8790 0242 80E7     		b	.L777
 8791              	.LVL859:
 8792              	.L828:
3656:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 8793              		.loc 1 3656 20 is_stmt 1 discriminator 1 view .LVU3160
 8794 0244 0225     		movs	r5, #2
 8795              	.LVL860:
3656:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 8796              		.loc 1 3656 20 is_stmt 0 discriminator 1 view .LVU3161
 8797 0246 6575     		strb	r5, [r4, #21]
3656:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 8798              		.loc 1 3656 20 is_stmt 1 discriminator 1 view .LVU3162
 8799              	.LVL861:
 8800              	.LBB1230:
 8801              	.LBI1230:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 8802              		.loc 1 751 6 discriminator 1 view .LVU3163
 8803              	.LBB1231:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8804              		.loc 1 756 2 discriminator 1 view .LVU3164
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 8805              		.loc 1 756 5 is_stmt 0 discriminator 1 view .LVU3165
 8806 0248 0029     		cmp	r1, #0
 8807 024a 3FF44AAF 		beq	.L799
 8808 024e 7FE7     		b	.L796
 8809              	.LBE1231:
 8810              	.LBE1230:
 8811              		.cfi_endproc
 8812              	.LFE378:
 8814              		.section	.text.putc_bfd,"ax",%progbits
 8815              		.align	1
 8816              		.p2align 2,,3
 8817              		.syntax unified
 8818              		.thumb
 8819              		.thumb_func
 8820              		.fpu fpv5-d16
 8822              	putc_bfd:
 8823              	.LVL862:
 8824              	.LFB393:
ARM GAS  /tmp/ccaQXGqa.s 			page 270


3724:./Libraries/FatFs/Src/ff.c **** 
3725:./Libraries/FatFs/Src/ff.c **** 
3726:./Libraries/FatFs/Src/ff.c **** 
3727:./Libraries/FatFs/Src/ff.c **** 
3728:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3729:./Libraries/FatFs/Src/ff.c **** /* Synchronize the File                                                  */
3730:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3731:./Libraries/FatFs/Src/ff.c **** 
3732:./Libraries/FatFs/Src/ff.c **** FRESULT f_sync (
3733:./Libraries/FatFs/Src/ff.c **** 	FIL* fp		/* Pointer to the file object */
3734:./Libraries/FatFs/Src/ff.c **** )
3735:./Libraries/FatFs/Src/ff.c **** {
3736:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
3737:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
3738:./Libraries/FatFs/Src/ff.c **** 	DWORD tm;
3739:./Libraries/FatFs/Src/ff.c **** 	BYTE *dir;
3740:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
3741:./Libraries/FatFs/Src/ff.c **** 	DIR dj;
3742:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
3743:./Libraries/FatFs/Src/ff.c **** #endif
3744:./Libraries/FatFs/Src/ff.c **** 
3745:./Libraries/FatFs/Src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
3746:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
3747:./Libraries/FatFs/Src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
3748:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
3749:./Libraries/FatFs/Src/ff.c **** 			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
3750:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
3751:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3752:./Libraries/FatFs/Src/ff.c **** 			}
3753:./Libraries/FatFs/Src/ff.c **** #endif
3754:./Libraries/FatFs/Src/ff.c **** 			/* Update the directory entry */
3755:./Libraries/FatFs/Src/ff.c **** 			tm = GET_FATTIME();				/* Modified time */
3756:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
3757:./Libraries/FatFs/Src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3758:./Libraries/FatFs/Src/ff.c **** 				res = fill_first_frag(&fp->obj);	/* Fill first fragment on the FAT if needed */
3759:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK) {
3760:./Libraries/FatFs/Src/ff.c **** 					res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if nee
3761:./Libraries/FatFs/Src/ff.c **** 				}
3762:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK) {
3763:./Libraries/FatFs/Src/ff.c **** 					INIT_NAMBUF(fs);
3764:./Libraries/FatFs/Src/ff.c **** 					res = load_obj_dir(&dj, &fp->obj);	/* Load directory entry block */
3765:./Libraries/FatFs/Src/ff.c **** 					if (res == FR_OK) {
3766:./Libraries/FatFs/Src/ff.c **** 						fs->dirbuf[XDIR_Attr] |= AM_ARC;				/* Set archive bit */
3767:./Libraries/FatFs/Src/ff.c **** 						fs->dirbuf[XDIR_GenFlags] = fp->obj.stat | 1;	/* Update file allocation info */
3768:./Libraries/FatFs/Src/ff.c **** 						st_dword(fs->dirbuf + XDIR_FstClus, fp->obj.sclust);
3769:./Libraries/FatFs/Src/ff.c **** 						st_qword(fs->dirbuf + XDIR_FileSize, fp->obj.objsize);
3770:./Libraries/FatFs/Src/ff.c **** 						st_qword(fs->dirbuf + XDIR_ValidFileSize, fp->obj.objsize);
3771:./Libraries/FatFs/Src/ff.c **** 						st_dword(fs->dirbuf + XDIR_ModTime, tm);		/* Update modified time */
3772:./Libraries/FatFs/Src/ff.c **** 						fs->dirbuf[XDIR_ModTime10] = 0;
3773:./Libraries/FatFs/Src/ff.c **** 						st_dword(fs->dirbuf + XDIR_AccTime, 0);
3774:./Libraries/FatFs/Src/ff.c **** 						res = store_xdir(&dj);	/* Restore it to the directory */
3775:./Libraries/FatFs/Src/ff.c **** 						if (res == FR_OK) {
3776:./Libraries/FatFs/Src/ff.c **** 							res = sync_fs(fs);
3777:./Libraries/FatFs/Src/ff.c **** 							fp->flag &= (BYTE)~FA_MODIFIED;
3778:./Libraries/FatFs/Src/ff.c **** 						}
3779:./Libraries/FatFs/Src/ff.c **** 					}
3780:./Libraries/FatFs/Src/ff.c **** 					FREE_NAMBUF();
ARM GAS  /tmp/ccaQXGqa.s 			page 271


3781:./Libraries/FatFs/Src/ff.c **** 				}
3782:./Libraries/FatFs/Src/ff.c **** 			} else
3783:./Libraries/FatFs/Src/ff.c **** #endif
3784:./Libraries/FatFs/Src/ff.c **** 			{
3785:./Libraries/FatFs/Src/ff.c **** 				res = move_window(fs, fp->dir_sect);
3786:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK) {
3787:./Libraries/FatFs/Src/ff.c **** 					dir = fp->dir_ptr;
3788:./Libraries/FatFs/Src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
3789:./Libraries/FatFs/Src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
3790:./Libraries/FatFs/Src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
3791:./Libraries/FatFs/Src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
3792:./Libraries/FatFs/Src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
3793:./Libraries/FatFs/Src/ff.c **** 					fs->wflag = 1;
3794:./Libraries/FatFs/Src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
3795:./Libraries/FatFs/Src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
3796:./Libraries/FatFs/Src/ff.c **** 				}
3797:./Libraries/FatFs/Src/ff.c **** 			}
3798:./Libraries/FatFs/Src/ff.c **** 		}
3799:./Libraries/FatFs/Src/ff.c **** 	}
3800:./Libraries/FatFs/Src/ff.c **** 
3801:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
3802:./Libraries/FatFs/Src/ff.c **** }
3803:./Libraries/FatFs/Src/ff.c **** 
3804:./Libraries/FatFs/Src/ff.c **** #endif /* !_FS_READONLY */
3805:./Libraries/FatFs/Src/ff.c **** 
3806:./Libraries/FatFs/Src/ff.c **** 
3807:./Libraries/FatFs/Src/ff.c **** 
3808:./Libraries/FatFs/Src/ff.c **** 
3809:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3810:./Libraries/FatFs/Src/ff.c **** /* Close File                                                            */
3811:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3812:./Libraries/FatFs/Src/ff.c **** 
3813:./Libraries/FatFs/Src/ff.c **** FRESULT f_close (
3814:./Libraries/FatFs/Src/ff.c **** 	FIL* fp		/* Pointer to the file object to be closed */
3815:./Libraries/FatFs/Src/ff.c **** )
3816:./Libraries/FatFs/Src/ff.c **** {
3817:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
3818:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
3819:./Libraries/FatFs/Src/ff.c **** 
3820:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
3821:./Libraries/FatFs/Src/ff.c **** 	res = f_sync(fp);					/* Flush cached data */
3822:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK)
3823:./Libraries/FatFs/Src/ff.c **** #endif
3824:./Libraries/FatFs/Src/ff.c **** 	{
3825:./Libraries/FatFs/Src/ff.c **** 		res = validate(&fp->obj, &fs);	/* Lock volume */
3826:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
3827:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
3828:./Libraries/FatFs/Src/ff.c **** 			res = dec_lock(fp->obj.lockid);	/* Decrement file open counter */
3829:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK)
3830:./Libraries/FatFs/Src/ff.c **** #endif
3831:./Libraries/FatFs/Src/ff.c **** 			{
3832:./Libraries/FatFs/Src/ff.c **** 				fp->obj.fs = 0;			/* Invalidate file object */
3833:./Libraries/FatFs/Src/ff.c **** 			}
3834:./Libraries/FatFs/Src/ff.c **** #if _FS_REENTRANT
3835:./Libraries/FatFs/Src/ff.c **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
3836:./Libraries/FatFs/Src/ff.c **** #endif
3837:./Libraries/FatFs/Src/ff.c **** 		}
ARM GAS  /tmp/ccaQXGqa.s 			page 272


3838:./Libraries/FatFs/Src/ff.c **** 	}
3839:./Libraries/FatFs/Src/ff.c **** 	return res;
3840:./Libraries/FatFs/Src/ff.c **** }
3841:./Libraries/FatFs/Src/ff.c **** 
3842:./Libraries/FatFs/Src/ff.c **** 
3843:./Libraries/FatFs/Src/ff.c **** 
3844:./Libraries/FatFs/Src/ff.c **** 
3845:./Libraries/FatFs/Src/ff.c **** #if _FS_RPATH >= 1
3846:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3847:./Libraries/FatFs/Src/ff.c **** /* Change Current Directory or Current Drive, Get Current Directory      */
3848:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3849:./Libraries/FatFs/Src/ff.c **** 
3850:./Libraries/FatFs/Src/ff.c **** #if _VOLUMES >= 2
3851:./Libraries/FatFs/Src/ff.c **** FRESULT f_chdrive (
3852:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path		/* Drive number */
3853:./Libraries/FatFs/Src/ff.c **** )
3854:./Libraries/FatFs/Src/ff.c **** {
3855:./Libraries/FatFs/Src/ff.c **** 	int vol;
3856:./Libraries/FatFs/Src/ff.c **** 
3857:./Libraries/FatFs/Src/ff.c **** 
3858:./Libraries/FatFs/Src/ff.c **** 	/* Get logical drive number */
3859:./Libraries/FatFs/Src/ff.c **** 	vol = get_ldnumber(&path);
3860:./Libraries/FatFs/Src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3861:./Libraries/FatFs/Src/ff.c **** 
3862:./Libraries/FatFs/Src/ff.c **** 	CurrVol = (BYTE)vol;	/* Set it as current volume */
3863:./Libraries/FatFs/Src/ff.c **** 
3864:./Libraries/FatFs/Src/ff.c **** 	return FR_OK;
3865:./Libraries/FatFs/Src/ff.c **** }
3866:./Libraries/FatFs/Src/ff.c **** #endif
3867:./Libraries/FatFs/Src/ff.c **** 
3868:./Libraries/FatFs/Src/ff.c **** 
3869:./Libraries/FatFs/Src/ff.c **** FRESULT f_chdir (
3870:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
3871:./Libraries/FatFs/Src/ff.c **** )
3872:./Libraries/FatFs/Src/ff.c **** {
3873:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
3874:./Libraries/FatFs/Src/ff.c **** 	DIR dj;
3875:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
3876:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
3877:./Libraries/FatFs/Src/ff.c **** 
3878:./Libraries/FatFs/Src/ff.c **** 	/* Get logical drive */
3879:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&path, &fs, 0);
3880:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
3881:./Libraries/FatFs/Src/ff.c **** 		dj.obj.fs = fs;
3882:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
3883:./Libraries/FatFs/Src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
3884:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
3885:./Libraries/FatFs/Src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
3886:./Libraries/FatFs/Src/ff.c **** 				fs->cdir = dj.obj.sclust;	/* It is the start directory itself */
3887:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
3888:./Libraries/FatFs/Src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3889:./Libraries/FatFs/Src/ff.c **** 					fs->cdc_scl = dj.obj.c_scl;
3890:./Libraries/FatFs/Src/ff.c **** 					fs->cdc_size = dj.obj.c_size;
3891:./Libraries/FatFs/Src/ff.c **** 					fs->cdc_ofs = dj.obj.c_ofs;
3892:./Libraries/FatFs/Src/ff.c **** 				}
3893:./Libraries/FatFs/Src/ff.c **** #endif
3894:./Libraries/FatFs/Src/ff.c **** 			} else {
ARM GAS  /tmp/ccaQXGqa.s 			page 273


3895:./Libraries/FatFs/Src/ff.c **** 				if (dj.obj.attr & AM_DIR) {	/* It is a sub-directory */
3896:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
3897:./Libraries/FatFs/Src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
3898:./Libraries/FatFs/Src/ff.c **** 						fs->cdir = ld_dword(fs->dirbuf + XDIR_FstClus);		/* Sub-directory cluster */
3899:./Libraries/FatFs/Src/ff.c **** 						fs->cdc_scl = dj.obj.sclust;						/* Save containing directory information */
3900:./Libraries/FatFs/Src/ff.c **** 						fs->cdc_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3901:./Libraries/FatFs/Src/ff.c **** 						fs->cdc_ofs = dj.blk_ofs;
3902:./Libraries/FatFs/Src/ff.c **** 					} else
3903:./Libraries/FatFs/Src/ff.c **** #endif
3904:./Libraries/FatFs/Src/ff.c **** 					{
3905:./Libraries/FatFs/Src/ff.c **** 						fs->cdir = ld_clust(fs, dj.dir);					/* Sub-directory cluster */
3906:./Libraries/FatFs/Src/ff.c **** 					}
3907:./Libraries/FatFs/Src/ff.c **** 				} else {
3908:./Libraries/FatFs/Src/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
3909:./Libraries/FatFs/Src/ff.c **** 				}
3910:./Libraries/FatFs/Src/ff.c **** 			}
3911:./Libraries/FatFs/Src/ff.c **** 		}
3912:./Libraries/FatFs/Src/ff.c **** 		FREE_NAMBUF();
3913:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3914:./Libraries/FatFs/Src/ff.c **** 	}
3915:./Libraries/FatFs/Src/ff.c **** 
3916:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
3917:./Libraries/FatFs/Src/ff.c **** }
3918:./Libraries/FatFs/Src/ff.c **** 
3919:./Libraries/FatFs/Src/ff.c **** 
3920:./Libraries/FatFs/Src/ff.c **** #if _FS_RPATH >= 2
3921:./Libraries/FatFs/Src/ff.c **** FRESULT f_getcwd (
3922:./Libraries/FatFs/Src/ff.c **** 	TCHAR* buff,	/* Pointer to the directory path */
3923:./Libraries/FatFs/Src/ff.c **** 	UINT len		/* Size of path */
3924:./Libraries/FatFs/Src/ff.c **** )
3925:./Libraries/FatFs/Src/ff.c **** {
3926:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
3927:./Libraries/FatFs/Src/ff.c **** 	DIR dj;
3928:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
3929:./Libraries/FatFs/Src/ff.c **** 	UINT i, n;
3930:./Libraries/FatFs/Src/ff.c **** 	DWORD ccl;
3931:./Libraries/FatFs/Src/ff.c **** 	TCHAR *tp;
3932:./Libraries/FatFs/Src/ff.c **** 	FILINFO fno;
3933:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
3934:./Libraries/FatFs/Src/ff.c **** 
3935:./Libraries/FatFs/Src/ff.c **** 
3936:./Libraries/FatFs/Src/ff.c **** 	*buff = 0;
3937:./Libraries/FatFs/Src/ff.c **** 	/* Get logical drive */
3938:./Libraries/FatFs/Src/ff.c **** 	res = find_volume((const TCHAR**)&buff, &fs, 0);	/* Get current volume */
3939:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
3940:./Libraries/FatFs/Src/ff.c **** 		dj.obj.fs = fs;
3941:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
3942:./Libraries/FatFs/Src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
3943:./Libraries/FatFs/Src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {	/* (Cannot do getcwd on exFAT and returns root path)
3944:./Libraries/FatFs/Src/ff.c **** 			dj.obj.sclust = fs->cdir;				/* Start to follow upper directory from current directory */
3945:./Libraries/FatFs/Src/ff.c **** 			while ((ccl = dj.obj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
3946:./Libraries/FatFs/Src/ff.c **** 				res = dir_sdi(&dj, 1 * SZDIRE);	/* Get parent directory */
3947:./Libraries/FatFs/Src/ff.c **** 				if (res != FR_OK) break;
3948:./Libraries/FatFs/Src/ff.c **** 				res = move_window(fs, dj.sect);
3949:./Libraries/FatFs/Src/ff.c **** 				if (res != FR_OK) break;
3950:./Libraries/FatFs/Src/ff.c **** 				dj.obj.sclust = ld_clust(fs, dj.dir);	/* Goto parent directory */
3951:./Libraries/FatFs/Src/ff.c **** 				res = dir_sdi(&dj, 0);
ARM GAS  /tmp/ccaQXGqa.s 			page 274


3952:./Libraries/FatFs/Src/ff.c **** 				if (res != FR_OK) break;
3953:./Libraries/FatFs/Src/ff.c **** 				do {							/* Find the entry links to the child directory */
3954:./Libraries/FatFs/Src/ff.c **** 					res = dir_read(&dj, 0);
3955:./Libraries/FatFs/Src/ff.c **** 					if (res != FR_OK) break;
3956:./Libraries/FatFs/Src/ff.c **** 					if (ccl == ld_clust(fs, dj.dir)) break;	/* Found the entry */
3957:./Libraries/FatFs/Src/ff.c **** 					res = dir_next(&dj, 0);
3958:./Libraries/FatFs/Src/ff.c **** 				} while (res == FR_OK);
3959:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
3960:./Libraries/FatFs/Src/ff.c **** 				if (res != FR_OK) break;
3961:./Libraries/FatFs/Src/ff.c **** 				get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
3962:./Libraries/FatFs/Src/ff.c **** 				for (n = 0; fno.fname[n]; n++) ;
3963:./Libraries/FatFs/Src/ff.c **** 				if (i < n + 3) {
3964:./Libraries/FatFs/Src/ff.c **** 					res = FR_NOT_ENOUGH_CORE; break;
3965:./Libraries/FatFs/Src/ff.c **** 				}
3966:./Libraries/FatFs/Src/ff.c **** 				while (n) buff[--i] = fno.fname[--n];
3967:./Libraries/FatFs/Src/ff.c **** 				buff[--i] = '/';
3968:./Libraries/FatFs/Src/ff.c **** 			}
3969:./Libraries/FatFs/Src/ff.c **** 		}
3970:./Libraries/FatFs/Src/ff.c **** 		tp = buff;
3971:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
3972:./Libraries/FatFs/Src/ff.c **** #if _VOLUMES >= 2
3973:./Libraries/FatFs/Src/ff.c **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
3974:./Libraries/FatFs/Src/ff.c **** 			*tp++ = ':';
3975:./Libraries/FatFs/Src/ff.c **** #endif
3976:./Libraries/FatFs/Src/ff.c **** 			if (i == len) {					/* Root-directory */
3977:./Libraries/FatFs/Src/ff.c **** 				*tp++ = '/';
3978:./Libraries/FatFs/Src/ff.c **** 			} else {						/* Sub-directroy */
3979:./Libraries/FatFs/Src/ff.c **** 				do		/* Add stacked path str */
3980:./Libraries/FatFs/Src/ff.c **** 					*tp++ = buff[i++];
3981:./Libraries/FatFs/Src/ff.c **** 				while (i < len);
3982:./Libraries/FatFs/Src/ff.c **** 			}
3983:./Libraries/FatFs/Src/ff.c **** 		}
3984:./Libraries/FatFs/Src/ff.c **** 		*tp = 0;
3985:./Libraries/FatFs/Src/ff.c **** 		FREE_NAMBUF();
3986:./Libraries/FatFs/Src/ff.c **** 	}
3987:./Libraries/FatFs/Src/ff.c **** 
3988:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
3989:./Libraries/FatFs/Src/ff.c **** }
3990:./Libraries/FatFs/Src/ff.c **** 
3991:./Libraries/FatFs/Src/ff.c **** #endif /* _FS_RPATH >= 2 */
3992:./Libraries/FatFs/Src/ff.c **** #endif /* _FS_RPATH >= 1 */
3993:./Libraries/FatFs/Src/ff.c **** 
3994:./Libraries/FatFs/Src/ff.c **** 
3995:./Libraries/FatFs/Src/ff.c **** 
3996:./Libraries/FatFs/Src/ff.c **** #if _FS_MINIMIZE <= 2
3997:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
3998:./Libraries/FatFs/Src/ff.c **** /* Seek File R/W Pointer                                                 */
3999:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4000:./Libraries/FatFs/Src/ff.c **** 
4001:./Libraries/FatFs/Src/ff.c **** FRESULT f_lseek (
4002:./Libraries/FatFs/Src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
4003:./Libraries/FatFs/Src/ff.c **** 	FSIZE_t ofs		/* File pointer from top of file */
4004:./Libraries/FatFs/Src/ff.c **** )
4005:./Libraries/FatFs/Src/ff.c **** {
4006:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
4007:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
4008:./Libraries/FatFs/Src/ff.c **** 	DWORD clst, bcs, nsect;
ARM GAS  /tmp/ccaQXGqa.s 			page 275


4009:./Libraries/FatFs/Src/ff.c **** 	FSIZE_t ifptr;
4010:./Libraries/FatFs/Src/ff.c **** #if _USE_FASTSEEK
4011:./Libraries/FatFs/Src/ff.c **** 	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
4012:./Libraries/FatFs/Src/ff.c **** #endif
4013:./Libraries/FatFs/Src/ff.c **** 
4014:./Libraries/FatFs/Src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
4015:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
4016:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
4017:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK && fs->fs_type == FS_EXFAT) {
4018:./Libraries/FatFs/Src/ff.c **** 		res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if needed
4019:./Libraries/FatFs/Src/ff.c **** 	}
4020:./Libraries/FatFs/Src/ff.c **** #endif
4021:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
4022:./Libraries/FatFs/Src/ff.c **** 
4023:./Libraries/FatFs/Src/ff.c **** #if _USE_FASTSEEK
4024:./Libraries/FatFs/Src/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
4025:./Libraries/FatFs/Src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
4026:./Libraries/FatFs/Src/ff.c **** 			tbl = fp->cltbl;
4027:./Libraries/FatFs/Src/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
4028:./Libraries/FatFs/Src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
4029:./Libraries/FatFs/Src/ff.c **** 			if (cl) {
4030:./Libraries/FatFs/Src/ff.c **** 				do {
4031:./Libraries/FatFs/Src/ff.c **** 					/* Get a fragment */
4032:./Libraries/FatFs/Src/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
4033:./Libraries/FatFs/Src/ff.c **** 					do {
4034:./Libraries/FatFs/Src/ff.c **** 						pcl = cl; ncl++;
4035:./Libraries/FatFs/Src/ff.c **** 						cl = get_fat(&fp->obj, cl);
4036:./Libraries/FatFs/Src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
4037:./Libraries/FatFs/Src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4038:./Libraries/FatFs/Src/ff.c **** 					} while (cl == pcl + 1);
4039:./Libraries/FatFs/Src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
4040:./Libraries/FatFs/Src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
4041:./Libraries/FatFs/Src/ff.c **** 					}
4042:./Libraries/FatFs/Src/ff.c **** 				} while (cl < fs->n_fatent);	/* Repeat until end of chain */
4043:./Libraries/FatFs/Src/ff.c **** 			}
4044:./Libraries/FatFs/Src/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
4045:./Libraries/FatFs/Src/ff.c **** 			if (ulen <= tlen) {
4046:./Libraries/FatFs/Src/ff.c **** 				*tbl = 0;		/* Terminate table */
4047:./Libraries/FatFs/Src/ff.c **** 			} else {
4048:./Libraries/FatFs/Src/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
4049:./Libraries/FatFs/Src/ff.c **** 			}
4050:./Libraries/FatFs/Src/ff.c **** 		} else {						/* Fast seek */
4051:./Libraries/FatFs/Src/ff.c **** 			if (ofs > fp->obj.objsize) ofs = fp->obj.objsize;	/* Clip offset at the file size */
4052:./Libraries/FatFs/Src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
4053:./Libraries/FatFs/Src/ff.c **** 			if (ofs) {
4054:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
4055:./Libraries/FatFs/Src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
4056:./Libraries/FatFs/Src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
4057:./Libraries/FatFs/Src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
4058:./Libraries/FatFs/Src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
4059:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
4060:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
4061:./Libraries/FatFs/Src/ff.c **** 					if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
4062:./Libraries/FatFs/Src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4063:./Libraries/FatFs/Src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
4064:./Libraries/FatFs/Src/ff.c **** 					}
4065:./Libraries/FatFs/Src/ff.c **** #endif
ARM GAS  /tmp/ccaQXGqa.s 			page 276


4066:./Libraries/FatFs/Src/ff.c **** 					if (disk_read(fs->drv, fp->buf, dsc, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Load current sec
4067:./Libraries/FatFs/Src/ff.c **** #endif
4068:./Libraries/FatFs/Src/ff.c **** 					fp->sect = dsc;
4069:./Libraries/FatFs/Src/ff.c **** 				}
4070:./Libraries/FatFs/Src/ff.c **** 			}
4071:./Libraries/FatFs/Src/ff.c **** 		}
4072:./Libraries/FatFs/Src/ff.c **** 	} else
4073:./Libraries/FatFs/Src/ff.c **** #endif
4074:./Libraries/FatFs/Src/ff.c **** 
4075:./Libraries/FatFs/Src/ff.c **** 	/* Normal Seek */
4076:./Libraries/FatFs/Src/ff.c **** 	{
4077:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
4078:./Libraries/FatFs/Src/ff.c **** 		if (fs->fs_type != FS_EXFAT && ofs >= 0x100000000) ofs = 0xFFFFFFFF;	/* Clip at 4GiB-1 if at FATx
4079:./Libraries/FatFs/Src/ff.c **** #endif
4080:./Libraries/FatFs/Src/ff.c **** 		if (ofs > fp->obj.objsize && (_FS_READONLY || !(fp->flag & FA_WRITE))) {	/* In read-only mode, cl
4081:./Libraries/FatFs/Src/ff.c **** 			ofs = fp->obj.objsize;
4082:./Libraries/FatFs/Src/ff.c **** 		}
4083:./Libraries/FatFs/Src/ff.c **** 		ifptr = fp->fptr;
4084:./Libraries/FatFs/Src/ff.c **** 		fp->fptr = nsect = 0;
4085:./Libraries/FatFs/Src/ff.c **** 		if (ofs) {
4086:./Libraries/FatFs/Src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
4087:./Libraries/FatFs/Src/ff.c **** 			if (ifptr > 0 &&
4088:./Libraries/FatFs/Src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
4089:./Libraries/FatFs/Src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
4090:./Libraries/FatFs/Src/ff.c **** 				ofs -= fp->fptr;
4091:./Libraries/FatFs/Src/ff.c **** 				clst = fp->clust;
4092:./Libraries/FatFs/Src/ff.c **** 			} else {									/* When seek to back cluster, */
4093:./Libraries/FatFs/Src/ff.c **** 				clst = fp->obj.sclust;					/* start from the first cluster */
4094:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
4095:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
4096:./Libraries/FatFs/Src/ff.c **** 					clst = create_chain(&fp->obj, 0);
4097:./Libraries/FatFs/Src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
4098:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4099:./Libraries/FatFs/Src/ff.c **** 					fp->obj.sclust = clst;
4100:./Libraries/FatFs/Src/ff.c **** 				}
4101:./Libraries/FatFs/Src/ff.c **** #endif
4102:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;
4103:./Libraries/FatFs/Src/ff.c **** 			}
4104:./Libraries/FatFs/Src/ff.c **** 			if (clst != 0) {
4105:./Libraries/FatFs/Src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
4106:./Libraries/FatFs/Src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
4107:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
4108:./Libraries/FatFs/Src/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
4109:./Libraries/FatFs/Src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
4110:./Libraries/FatFs/Src/ff.c **** 							fp->obj.objsize = fp->fptr;
4111:./Libraries/FatFs/Src/ff.c **** 							fp->flag |= FA_MODIFIED;
4112:./Libraries/FatFs/Src/ff.c **** 						}
4113:./Libraries/FatFs/Src/ff.c **** 						clst = create_chain(&fp->obj, clst);	/* Follow chain with forceed stretch */
4114:./Libraries/FatFs/Src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
4115:./Libraries/FatFs/Src/ff.c **** 							ofs = 0; break;
4116:./Libraries/FatFs/Src/ff.c **** 						}
4117:./Libraries/FatFs/Src/ff.c **** 					} else
4118:./Libraries/FatFs/Src/ff.c **** #endif
4119:./Libraries/FatFs/Src/ff.c **** 					{
4120:./Libraries/FatFs/Src/ff.c **** 						clst = get_fat(&fp->obj, clst);	/* Follow cluster chain if not in write mode */
4121:./Libraries/FatFs/Src/ff.c **** 					}
4122:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
ARM GAS  /tmp/ccaQXGqa.s 			page 277


4123:./Libraries/FatFs/Src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
4124:./Libraries/FatFs/Src/ff.c **** 					fp->clust = clst;
4125:./Libraries/FatFs/Src/ff.c **** 				}
4126:./Libraries/FatFs/Src/ff.c **** 				fp->fptr += ofs;
4127:./Libraries/FatFs/Src/ff.c **** 				if (ofs % SS(fs)) {
4128:./Libraries/FatFs/Src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
4129:./Libraries/FatFs/Src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
4130:./Libraries/FatFs/Src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
4131:./Libraries/FatFs/Src/ff.c **** 				}
4132:./Libraries/FatFs/Src/ff.c **** 			}
4133:./Libraries/FatFs/Src/ff.c **** 		}
4134:./Libraries/FatFs/Src/ff.c **** 		if (!_FS_READONLY && fp->fptr > fp->obj.objsize) {		/* Set file change flag if the file size is e
4135:./Libraries/FatFs/Src/ff.c **** 			fp->obj.objsize = fp->fptr;
4136:./Libraries/FatFs/Src/ff.c **** 			fp->flag |= FA_MODIFIED;
4137:./Libraries/FatFs/Src/ff.c **** 		}
4138:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) && nsect != fp->sect) {	/* Fill sector cache if needed */
4139:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
4140:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
4141:./Libraries/FatFs/Src/ff.c **** 			if (fp->flag & FA_DIRTY) {			/* Write-back dirty sector cache */
4142:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4143:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4144:./Libraries/FatFs/Src/ff.c **** 			}
4145:./Libraries/FatFs/Src/ff.c **** #endif
4146:./Libraries/FatFs/Src/ff.c **** 			if (disk_read(fs->drv, fp->buf, nsect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
4147:./Libraries/FatFs/Src/ff.c **** #endif
4148:./Libraries/FatFs/Src/ff.c **** 			fp->sect = nsect;
4149:./Libraries/FatFs/Src/ff.c **** 		}
4150:./Libraries/FatFs/Src/ff.c **** 	}
4151:./Libraries/FatFs/Src/ff.c **** 
4152:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
4153:./Libraries/FatFs/Src/ff.c **** }
4154:./Libraries/FatFs/Src/ff.c **** 
4155:./Libraries/FatFs/Src/ff.c **** 
4156:./Libraries/FatFs/Src/ff.c **** 
4157:./Libraries/FatFs/Src/ff.c **** #if _FS_MINIMIZE <= 1
4158:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4159:./Libraries/FatFs/Src/ff.c **** /* Create a Directory Object                                             */
4160:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4161:./Libraries/FatFs/Src/ff.c **** 
4162:./Libraries/FatFs/Src/ff.c **** FRESULT f_opendir (
4163:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,			/* Pointer to directory object to create */
4164:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
4165:./Libraries/FatFs/Src/ff.c **** )
4166:./Libraries/FatFs/Src/ff.c **** {
4167:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
4168:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
4169:./Libraries/FatFs/Src/ff.c **** 	_FDID *obj;
4170:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
4171:./Libraries/FatFs/Src/ff.c **** 
4172:./Libraries/FatFs/Src/ff.c **** 
4173:./Libraries/FatFs/Src/ff.c **** 	if (!dp) return FR_INVALID_OBJECT;
4174:./Libraries/FatFs/Src/ff.c **** 
4175:./Libraries/FatFs/Src/ff.c **** 	/* Get logical drive */
4176:./Libraries/FatFs/Src/ff.c **** 	obj = &dp->obj;
4177:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&path, &fs, 0);
4178:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
4179:./Libraries/FatFs/Src/ff.c **** 		obj->fs = fs;
ARM GAS  /tmp/ccaQXGqa.s 			page 278


4180:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
4181:./Libraries/FatFs/Src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
4182:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
4183:./Libraries/FatFs/Src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
4184:./Libraries/FatFs/Src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
4185:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
4186:./Libraries/FatFs/Src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
4187:./Libraries/FatFs/Src/ff.c **** 						obj->c_scl = obj->sclust;							/* Get containing directory inforamation */
4188:./Libraries/FatFs/Src/ff.c **** 						obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
4189:./Libraries/FatFs/Src/ff.c **** 						obj->c_ofs = dp->blk_ofs;
4190:./Libraries/FatFs/Src/ff.c **** 						obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
4191:./Libraries/FatFs/Src/ff.c **** 						obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4192:./Libraries/FatFs/Src/ff.c **** 						obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
4193:./Libraries/FatFs/Src/ff.c **** 					} else
4194:./Libraries/FatFs/Src/ff.c **** #endif
4195:./Libraries/FatFs/Src/ff.c **** 					{
4196:./Libraries/FatFs/Src/ff.c **** 						obj->sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
4197:./Libraries/FatFs/Src/ff.c **** 					}
4198:./Libraries/FatFs/Src/ff.c **** 				} else {						/* This object is a file */
4199:./Libraries/FatFs/Src/ff.c **** 					res = FR_NO_PATH;
4200:./Libraries/FatFs/Src/ff.c **** 				}
4201:./Libraries/FatFs/Src/ff.c **** 			}
4202:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {
4203:./Libraries/FatFs/Src/ff.c **** 				obj->id = fs->id;
4204:./Libraries/FatFs/Src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
4205:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
4206:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK) {
4207:./Libraries/FatFs/Src/ff.c **** 					if (obj->sclust) {
4208:./Libraries/FatFs/Src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
4209:./Libraries/FatFs/Src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
4210:./Libraries/FatFs/Src/ff.c **** 					} else {
4211:./Libraries/FatFs/Src/ff.c **** 						obj->lockid = 0;	/* Root directory need not to be locked */
4212:./Libraries/FatFs/Src/ff.c **** 					}
4213:./Libraries/FatFs/Src/ff.c **** 				}
4214:./Libraries/FatFs/Src/ff.c **** #endif
4215:./Libraries/FatFs/Src/ff.c **** 			}
4216:./Libraries/FatFs/Src/ff.c **** 		}
4217:./Libraries/FatFs/Src/ff.c **** 		FREE_NAMBUF();
4218:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
4219:./Libraries/FatFs/Src/ff.c **** 	}
4220:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK) obj->fs = 0;		/* Invalidate the directory object if function faild */
4221:./Libraries/FatFs/Src/ff.c **** 
4222:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
4223:./Libraries/FatFs/Src/ff.c **** }
4224:./Libraries/FatFs/Src/ff.c **** 
4225:./Libraries/FatFs/Src/ff.c **** 
4226:./Libraries/FatFs/Src/ff.c **** 
4227:./Libraries/FatFs/Src/ff.c **** 
4228:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4229:./Libraries/FatFs/Src/ff.c **** /* Close Directory                                                       */
4230:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4231:./Libraries/FatFs/Src/ff.c **** 
4232:./Libraries/FatFs/Src/ff.c **** FRESULT f_closedir (
4233:./Libraries/FatFs/Src/ff.c **** 	DIR *dp		/* Pointer to the directory object to be closed */
4234:./Libraries/FatFs/Src/ff.c **** )
4235:./Libraries/FatFs/Src/ff.c **** {
4236:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
ARM GAS  /tmp/ccaQXGqa.s 			page 279


4237:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
4238:./Libraries/FatFs/Src/ff.c **** 
4239:./Libraries/FatFs/Src/ff.c **** 
4240:./Libraries/FatFs/Src/ff.c **** 	res = validate(&dp->obj, &fs);			/* Check validity of the file object */
4241:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
4242:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
4243:./Libraries/FatFs/Src/ff.c **** 		if (dp->obj.lockid) {				/* Decrement sub-directory open counter */
4244:./Libraries/FatFs/Src/ff.c **** 			res = dec_lock(dp->obj.lockid);
4245:./Libraries/FatFs/Src/ff.c **** 		}
4246:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK)
4247:./Libraries/FatFs/Src/ff.c **** #endif
4248:./Libraries/FatFs/Src/ff.c **** 		{
4249:./Libraries/FatFs/Src/ff.c **** 			dp->obj.fs = 0;			/* Invalidate directory object */
4250:./Libraries/FatFs/Src/ff.c **** 		}
4251:./Libraries/FatFs/Src/ff.c **** #if _FS_REENTRANT
4252:./Libraries/FatFs/Src/ff.c **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
4253:./Libraries/FatFs/Src/ff.c **** #endif
4254:./Libraries/FatFs/Src/ff.c **** 	}
4255:./Libraries/FatFs/Src/ff.c **** 	return res;
4256:./Libraries/FatFs/Src/ff.c **** }
4257:./Libraries/FatFs/Src/ff.c **** 
4258:./Libraries/FatFs/Src/ff.c **** 
4259:./Libraries/FatFs/Src/ff.c **** 
4260:./Libraries/FatFs/Src/ff.c **** 
4261:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4262:./Libraries/FatFs/Src/ff.c **** /* Read Directory Entries in Sequence                                    */
4263:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4264:./Libraries/FatFs/Src/ff.c **** 
4265:./Libraries/FatFs/Src/ff.c **** FRESULT f_readdir (
4266:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,			/* Pointer to the open directory object */
4267:./Libraries/FatFs/Src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4268:./Libraries/FatFs/Src/ff.c **** )
4269:./Libraries/FatFs/Src/ff.c **** {
4270:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
4271:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
4272:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
4273:./Libraries/FatFs/Src/ff.c **** 
4274:./Libraries/FatFs/Src/ff.c **** 
4275:./Libraries/FatFs/Src/ff.c **** 	res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
4276:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
4277:./Libraries/FatFs/Src/ff.c **** 		if (!fno) {
4278:./Libraries/FatFs/Src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
4279:./Libraries/FatFs/Src/ff.c **** 		} else {
4280:./Libraries/FatFs/Src/ff.c **** 			INIT_NAMBUF(fs);
4281:./Libraries/FatFs/Src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
4282:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
4283:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
4284:./Libraries/FatFs/Src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
4285:./Libraries/FatFs/Src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
4286:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
4287:./Libraries/FatFs/Src/ff.c **** 			}
4288:./Libraries/FatFs/Src/ff.c **** 			FREE_NAMBUF();
4289:./Libraries/FatFs/Src/ff.c **** 		}
4290:./Libraries/FatFs/Src/ff.c **** 	}
4291:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
4292:./Libraries/FatFs/Src/ff.c **** }
4293:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 280


4294:./Libraries/FatFs/Src/ff.c **** 
4295:./Libraries/FatFs/Src/ff.c **** 
4296:./Libraries/FatFs/Src/ff.c **** #if _USE_FIND
4297:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4298:./Libraries/FatFs/Src/ff.c **** /* Find Next File                                                        */
4299:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4300:./Libraries/FatFs/Src/ff.c **** 
4301:./Libraries/FatFs/Src/ff.c **** FRESULT f_findnext (
4302:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,		/* Pointer to the open directory object */
4303:./Libraries/FatFs/Src/ff.c **** 	FILINFO* fno	/* Pointer to the file information structure */
4304:./Libraries/FatFs/Src/ff.c **** )
4305:./Libraries/FatFs/Src/ff.c **** {
4306:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
4307:./Libraries/FatFs/Src/ff.c **** 
4308:./Libraries/FatFs/Src/ff.c **** 
4309:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
4310:./Libraries/FatFs/Src/ff.c **** 		res = f_readdir(dp, fno);		/* Get a directory item */
4311:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
4312:./Libraries/FatFs/Src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
4313:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0 && _USE_FIND == 2
4314:./Libraries/FatFs/Src/ff.c **** 		if (pattern_matching(dp->pat, fno->altname, 0, 0)) break;	/* Test for alternative name if exist *
4315:./Libraries/FatFs/Src/ff.c **** #endif
4316:./Libraries/FatFs/Src/ff.c **** 	}
4317:./Libraries/FatFs/Src/ff.c **** 	return res;
4318:./Libraries/FatFs/Src/ff.c **** }
4319:./Libraries/FatFs/Src/ff.c **** 
4320:./Libraries/FatFs/Src/ff.c **** 
4321:./Libraries/FatFs/Src/ff.c **** 
4322:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4323:./Libraries/FatFs/Src/ff.c **** /* Find First File                                                       */
4324:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4325:./Libraries/FatFs/Src/ff.c **** 
4326:./Libraries/FatFs/Src/ff.c **** FRESULT f_findfirst (
4327:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,				/* Pointer to the blank directory object */
4328:./Libraries/FatFs/Src/ff.c **** 	FILINFO* fno,			/* Pointer to the file information structure */
4329:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path,		/* Pointer to the directory to open */
4330:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
4331:./Libraries/FatFs/Src/ff.c **** )
4332:./Libraries/FatFs/Src/ff.c **** {
4333:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
4334:./Libraries/FatFs/Src/ff.c **** 
4335:./Libraries/FatFs/Src/ff.c **** 
4336:./Libraries/FatFs/Src/ff.c **** 	dp->pat = pattern;		/* Save pointer to pattern string */
4337:./Libraries/FatFs/Src/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
4338:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
4339:./Libraries/FatFs/Src/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
4340:./Libraries/FatFs/Src/ff.c **** 	}
4341:./Libraries/FatFs/Src/ff.c **** 	return res;
4342:./Libraries/FatFs/Src/ff.c **** }
4343:./Libraries/FatFs/Src/ff.c **** 
4344:./Libraries/FatFs/Src/ff.c **** #endif	/* _USE_FIND */
4345:./Libraries/FatFs/Src/ff.c **** 
4346:./Libraries/FatFs/Src/ff.c **** 
4347:./Libraries/FatFs/Src/ff.c **** 
4348:./Libraries/FatFs/Src/ff.c **** #if _FS_MINIMIZE == 0
4349:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4350:./Libraries/FatFs/Src/ff.c **** /* Get File Status                                                       */
ARM GAS  /tmp/ccaQXGqa.s 			page 281


4351:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4352:./Libraries/FatFs/Src/ff.c **** 
4353:./Libraries/FatFs/Src/ff.c **** FRESULT f_stat (
4354:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4355:./Libraries/FatFs/Src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4356:./Libraries/FatFs/Src/ff.c **** )
4357:./Libraries/FatFs/Src/ff.c **** {
4358:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
4359:./Libraries/FatFs/Src/ff.c **** 	DIR dj;
4360:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
4361:./Libraries/FatFs/Src/ff.c **** 
4362:./Libraries/FatFs/Src/ff.c **** 
4363:./Libraries/FatFs/Src/ff.c **** 	/* Get logical drive */
4364:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&path, &dj.obj.fs, 0);
4365:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
4366:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
4367:./Libraries/FatFs/Src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4368:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
4369:./Libraries/FatFs/Src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
4370:./Libraries/FatFs/Src/ff.c **** 				res = FR_INVALID_NAME;
4371:./Libraries/FatFs/Src/ff.c **** 			} else {							/* Found an object */
4372:./Libraries/FatFs/Src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
4373:./Libraries/FatFs/Src/ff.c **** 			}
4374:./Libraries/FatFs/Src/ff.c **** 		}
4375:./Libraries/FatFs/Src/ff.c **** 		FREE_NAMBUF();
4376:./Libraries/FatFs/Src/ff.c **** 	}
4377:./Libraries/FatFs/Src/ff.c **** 
4378:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(dj.obj.fs, res);
4379:./Libraries/FatFs/Src/ff.c **** }
4380:./Libraries/FatFs/Src/ff.c **** 
4381:./Libraries/FatFs/Src/ff.c **** 
4382:./Libraries/FatFs/Src/ff.c **** 
4383:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
4384:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4385:./Libraries/FatFs/Src/ff.c **** /* Get Number of Free Clusters                                           */
4386:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4387:./Libraries/FatFs/Src/ff.c **** 
4388:./Libraries/FatFs/Src/ff.c **** FRESULT f_getfree (
4389:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4390:./Libraries/FatFs/Src/ff.c **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
4391:./Libraries/FatFs/Src/ff.c **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
4392:./Libraries/FatFs/Src/ff.c **** )
4393:./Libraries/FatFs/Src/ff.c **** {
4394:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
4395:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
4396:./Libraries/FatFs/Src/ff.c **** 	DWORD nfree, clst, sect, stat;
4397:./Libraries/FatFs/Src/ff.c **** 	UINT i;
4398:./Libraries/FatFs/Src/ff.c **** 	BYTE *p;
4399:./Libraries/FatFs/Src/ff.c **** 	_FDID obj;
4400:./Libraries/FatFs/Src/ff.c **** 
4401:./Libraries/FatFs/Src/ff.c **** 
4402:./Libraries/FatFs/Src/ff.c **** 	/* Get logical drive */
4403:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&path, &fs, 0);
4404:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
4405:./Libraries/FatFs/Src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
4406:./Libraries/FatFs/Src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
4407:./Libraries/FatFs/Src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) {
ARM GAS  /tmp/ccaQXGqa.s 			page 282


4408:./Libraries/FatFs/Src/ff.c **** 			*nclst = fs->free_clst;
4409:./Libraries/FatFs/Src/ff.c **** 		} else {
4410:./Libraries/FatFs/Src/ff.c **** 			/* Get number of free clusters */
4411:./Libraries/FatFs/Src/ff.c **** 			nfree = 0;
4412:./Libraries/FatFs/Src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
4413:./Libraries/FatFs/Src/ff.c **** 				clst = 2; obj.fs = fs;
4414:./Libraries/FatFs/Src/ff.c **** 				do {
4415:./Libraries/FatFs/Src/ff.c **** 					stat = get_fat(&obj, clst);
4416:./Libraries/FatFs/Src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
4417:./Libraries/FatFs/Src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
4418:./Libraries/FatFs/Src/ff.c **** 					if (stat == 0) nfree++;
4419:./Libraries/FatFs/Src/ff.c **** 				} while (++clst < fs->n_fatent);
4420:./Libraries/FatFs/Src/ff.c **** 			} else {
4421:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
4422:./Libraries/FatFs/Src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* exFAT: Scan bitmap table */
4423:./Libraries/FatFs/Src/ff.c **** 					BYTE bm;
4424:./Libraries/FatFs/Src/ff.c **** 					UINT b;
4425:./Libraries/FatFs/Src/ff.c **** 
4426:./Libraries/FatFs/Src/ff.c **** 					clst = fs->n_fatent - 2;
4427:./Libraries/FatFs/Src/ff.c **** 					sect = fs->database;
4428:./Libraries/FatFs/Src/ff.c **** 					i = 0;
4429:./Libraries/FatFs/Src/ff.c **** 					do {
4430:./Libraries/FatFs/Src/ff.c **** 						if (i == 0 && (res = move_window(fs, sect++)) != FR_OK) break;
4431:./Libraries/FatFs/Src/ff.c **** 						for (b = 8, bm = fs->win[i]; b && clst; b--, clst--) {
4432:./Libraries/FatFs/Src/ff.c **** 							if (!(bm & 1)) nfree++;
4433:./Libraries/FatFs/Src/ff.c **** 							bm >>= 1;
4434:./Libraries/FatFs/Src/ff.c **** 						}
4435:./Libraries/FatFs/Src/ff.c **** 						i = (i + 1) % SS(fs);
4436:./Libraries/FatFs/Src/ff.c **** 					} while (clst);
4437:./Libraries/FatFs/Src/ff.c **** 				} else
4438:./Libraries/FatFs/Src/ff.c **** #endif
4439:./Libraries/FatFs/Src/ff.c **** 				{	/* FAT16/32: Sector alighed FAT entries */
4440:./Libraries/FatFs/Src/ff.c **** 					clst = fs->n_fatent; sect = fs->fatbase;
4441:./Libraries/FatFs/Src/ff.c **** 					i = 0; p = 0;
4442:./Libraries/FatFs/Src/ff.c **** 					do {
4443:./Libraries/FatFs/Src/ff.c **** 						if (i == 0) {
4444:./Libraries/FatFs/Src/ff.c **** 							res = move_window(fs, sect++);
4445:./Libraries/FatFs/Src/ff.c **** 							if (res != FR_OK) break;
4446:./Libraries/FatFs/Src/ff.c **** 							p = fs->win;
4447:./Libraries/FatFs/Src/ff.c **** 							i = SS(fs);
4448:./Libraries/FatFs/Src/ff.c **** 						}
4449:./Libraries/FatFs/Src/ff.c **** 						if (fs->fs_type == FS_FAT16) {
4450:./Libraries/FatFs/Src/ff.c **** 							if (ld_word(p) == 0) nfree++;
4451:./Libraries/FatFs/Src/ff.c **** 							p += 2; i -= 2;
4452:./Libraries/FatFs/Src/ff.c **** 						} else {
4453:./Libraries/FatFs/Src/ff.c **** 							if ((ld_dword(p) & 0x0FFFFFFF) == 0) nfree++;
4454:./Libraries/FatFs/Src/ff.c **** 							p += 4; i -= 4;
4455:./Libraries/FatFs/Src/ff.c **** 						}
4456:./Libraries/FatFs/Src/ff.c **** 					} while (--clst);
4457:./Libraries/FatFs/Src/ff.c **** 				}
4458:./Libraries/FatFs/Src/ff.c **** 			}
4459:./Libraries/FatFs/Src/ff.c **** 			*nclst = nfree;			/* Return the free clusters */
4460:./Libraries/FatFs/Src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
4461:./Libraries/FatFs/Src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
4462:./Libraries/FatFs/Src/ff.c **** 		}
4463:./Libraries/FatFs/Src/ff.c **** 	}
4464:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 283


4465:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
4466:./Libraries/FatFs/Src/ff.c **** }
4467:./Libraries/FatFs/Src/ff.c **** 
4468:./Libraries/FatFs/Src/ff.c **** 
4469:./Libraries/FatFs/Src/ff.c **** 
4470:./Libraries/FatFs/Src/ff.c **** 
4471:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4472:./Libraries/FatFs/Src/ff.c **** /* Truncate File                                                         */
4473:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4474:./Libraries/FatFs/Src/ff.c **** 
4475:./Libraries/FatFs/Src/ff.c **** FRESULT f_truncate (
4476:./Libraries/FatFs/Src/ff.c **** 	FIL* fp		/* Pointer to the file object */
4477:./Libraries/FatFs/Src/ff.c **** )
4478:./Libraries/FatFs/Src/ff.c **** {
4479:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
4480:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
4481:./Libraries/FatFs/Src/ff.c **** 	DWORD ncl;
4482:./Libraries/FatFs/Src/ff.c **** 
4483:./Libraries/FatFs/Src/ff.c **** 
4484:./Libraries/FatFs/Src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
4485:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
4486:./Libraries/FatFs/Src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
4487:./Libraries/FatFs/Src/ff.c **** 
4488:./Libraries/FatFs/Src/ff.c **** 	if (fp->fptr < fp->obj.objsize) {	/* Process when fptr is not on the eof */
4489:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
4490:./Libraries/FatFs/Src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
4491:./Libraries/FatFs/Src/ff.c **** 			fp->obj.sclust = 0;
4492:./Libraries/FatFs/Src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
4493:./Libraries/FatFs/Src/ff.c **** 			ncl = get_fat(&fp->obj, fp->clust);
4494:./Libraries/FatFs/Src/ff.c **** 			res = FR_OK;
4495:./Libraries/FatFs/Src/ff.c **** 			if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
4496:./Libraries/FatFs/Src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
4497:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
4498:./Libraries/FatFs/Src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
4499:./Libraries/FatFs/Src/ff.c **** 			}
4500:./Libraries/FatFs/Src/ff.c **** 		}
4501:./Libraries/FatFs/Src/ff.c **** 		fp->obj.objsize = fp->fptr;	/* Set file size to current R/W point */
4502:./Libraries/FatFs/Src/ff.c **** 		fp->flag |= FA_MODIFIED;
4503:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
4504:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK && (fp->flag & FA_DIRTY)) {
4505:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
4506:./Libraries/FatFs/Src/ff.c **** 				res = FR_DISK_ERR;
4507:./Libraries/FatFs/Src/ff.c **** 			} else {
4508:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4509:./Libraries/FatFs/Src/ff.c **** 			}
4510:./Libraries/FatFs/Src/ff.c **** 		}
4511:./Libraries/FatFs/Src/ff.c **** #endif
4512:./Libraries/FatFs/Src/ff.c **** 		if (res != FR_OK) ABORT(fs, res);
4513:./Libraries/FatFs/Src/ff.c **** 	}
4514:./Libraries/FatFs/Src/ff.c **** 
4515:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
4516:./Libraries/FatFs/Src/ff.c **** }
4517:./Libraries/FatFs/Src/ff.c **** 
4518:./Libraries/FatFs/Src/ff.c **** 
4519:./Libraries/FatFs/Src/ff.c **** 
4520:./Libraries/FatFs/Src/ff.c **** 
4521:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/ccaQXGqa.s 			page 284


4522:./Libraries/FatFs/Src/ff.c **** /* Delete a File/Directory                                               */
4523:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4524:./Libraries/FatFs/Src/ff.c **** 
4525:./Libraries/FatFs/Src/ff.c **** FRESULT f_unlink (
4526:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path		/* Pointer to the file or directory path */
4527:./Libraries/FatFs/Src/ff.c **** )
4528:./Libraries/FatFs/Src/ff.c **** {
4529:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
4530:./Libraries/FatFs/Src/ff.c **** 	DIR dj, sdj;
4531:./Libraries/FatFs/Src/ff.c **** 	DWORD dclst = 0;
4532:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
4533:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
4534:./Libraries/FatFs/Src/ff.c **** 	_FDID obj;
4535:./Libraries/FatFs/Src/ff.c **** #endif
4536:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
4537:./Libraries/FatFs/Src/ff.c **** 
4538:./Libraries/FatFs/Src/ff.c **** 
4539:./Libraries/FatFs/Src/ff.c **** 	/* Get logical drive */
4540:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4541:./Libraries/FatFs/Src/ff.c **** 	dj.obj.fs = fs;
4542:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
4543:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
4544:./Libraries/FatFs/Src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
4545:./Libraries/FatFs/Src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
4546:./Libraries/FatFs/Src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
4547:./Libraries/FatFs/Src/ff.c **** 		}
4548:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
4549:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Check if it is an open object */
4550:./Libraries/FatFs/Src/ff.c **** #endif
4551:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
4552:./Libraries/FatFs/Src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
4553:./Libraries/FatFs/Src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
4554:./Libraries/FatFs/Src/ff.c **** 			} else {
4555:./Libraries/FatFs/Src/ff.c **** 				if (dj.obj.attr & AM_RDO) {
4556:./Libraries/FatFs/Src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
4557:./Libraries/FatFs/Src/ff.c **** 				}
4558:./Libraries/FatFs/Src/ff.c **** 			}
4559:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {
4560:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
4561:./Libraries/FatFs/Src/ff.c **** 				obj.fs = fs;
4562:./Libraries/FatFs/Src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4563:./Libraries/FatFs/Src/ff.c **** 					obj.sclust = dclst = ld_dword(fs->dirbuf + XDIR_FstClus);
4564:./Libraries/FatFs/Src/ff.c **** 					obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4565:./Libraries/FatFs/Src/ff.c **** 					obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
4566:./Libraries/FatFs/Src/ff.c **** 				} else
4567:./Libraries/FatFs/Src/ff.c **** #endif
4568:./Libraries/FatFs/Src/ff.c **** 				{
4569:./Libraries/FatFs/Src/ff.c **** 					dclst = ld_clust(fs, dj.dir);
4570:./Libraries/FatFs/Src/ff.c **** 				}
4571:./Libraries/FatFs/Src/ff.c **** 				if (dj.obj.attr & AM_DIR) {			/* Is it a sub-directory? */
4572:./Libraries/FatFs/Src/ff.c **** #if _FS_RPATH != 0
4573:./Libraries/FatFs/Src/ff.c **** 					if (dclst == fs->cdir) {		 		/* Is it the current directory? */
4574:./Libraries/FatFs/Src/ff.c **** 						res = FR_DENIED;
4575:./Libraries/FatFs/Src/ff.c **** 					} else
4576:./Libraries/FatFs/Src/ff.c **** #endif
4577:./Libraries/FatFs/Src/ff.c **** 					{
4578:./Libraries/FatFs/Src/ff.c **** 						sdj.obj.fs = fs;						/* Open the sub-directory */
ARM GAS  /tmp/ccaQXGqa.s 			page 285


4579:./Libraries/FatFs/Src/ff.c **** 						sdj.obj.sclust = dclst;
4580:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
4581:./Libraries/FatFs/Src/ff.c **** 						if (fs->fs_type == FS_EXFAT) {
4582:./Libraries/FatFs/Src/ff.c **** 							sdj.obj.objsize = obj.objsize;
4583:./Libraries/FatFs/Src/ff.c **** 							sdj.obj.stat = obj.stat;
4584:./Libraries/FatFs/Src/ff.c **** 						}
4585:./Libraries/FatFs/Src/ff.c **** #endif
4586:./Libraries/FatFs/Src/ff.c **** 						res = dir_sdi(&sdj, 0);
4587:./Libraries/FatFs/Src/ff.c **** 						if (res == FR_OK) {
4588:./Libraries/FatFs/Src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
4589:./Libraries/FatFs/Src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
4590:./Libraries/FatFs/Src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
4591:./Libraries/FatFs/Src/ff.c **** 						}
4592:./Libraries/FatFs/Src/ff.c **** 					}
4593:./Libraries/FatFs/Src/ff.c **** 				}
4594:./Libraries/FatFs/Src/ff.c **** 			}
4595:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {
4596:./Libraries/FatFs/Src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
4597:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
4598:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
4599:./Libraries/FatFs/Src/ff.c **** 					res = remove_chain(&obj, dclst, 0);
4600:./Libraries/FatFs/Src/ff.c **** #else
4601:./Libraries/FatFs/Src/ff.c **** 					res = remove_chain(&dj.obj, dclst, 0);
4602:./Libraries/FatFs/Src/ff.c **** #endif
4603:./Libraries/FatFs/Src/ff.c **** 				}
4604:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK) res = sync_fs(fs);
4605:./Libraries/FatFs/Src/ff.c **** 			}
4606:./Libraries/FatFs/Src/ff.c **** 		}
4607:./Libraries/FatFs/Src/ff.c **** 		FREE_NAMBUF();
4608:./Libraries/FatFs/Src/ff.c **** 	}
4609:./Libraries/FatFs/Src/ff.c **** 
4610:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
4611:./Libraries/FatFs/Src/ff.c **** }
4612:./Libraries/FatFs/Src/ff.c **** 
4613:./Libraries/FatFs/Src/ff.c **** 
4614:./Libraries/FatFs/Src/ff.c **** 
4615:./Libraries/FatFs/Src/ff.c **** 
4616:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4617:./Libraries/FatFs/Src/ff.c **** /* Create a Directory                                                    */
4618:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4619:./Libraries/FatFs/Src/ff.c **** 
4620:./Libraries/FatFs/Src/ff.c **** FRESULT f_mkdir (
4621:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path		/* Pointer to the directory path */
4622:./Libraries/FatFs/Src/ff.c **** )
4623:./Libraries/FatFs/Src/ff.c **** {
4624:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
4625:./Libraries/FatFs/Src/ff.c **** 	DIR dj;
4626:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
4627:./Libraries/FatFs/Src/ff.c **** 	BYTE *dir;
4628:./Libraries/FatFs/Src/ff.c **** 	UINT n;
4629:./Libraries/FatFs/Src/ff.c **** 	DWORD dsc, dcl, pcl, tm;
4630:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
4631:./Libraries/FatFs/Src/ff.c **** 
4632:./Libraries/FatFs/Src/ff.c **** 
4633:./Libraries/FatFs/Src/ff.c **** 	/* Get logical drive */
4634:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4635:./Libraries/FatFs/Src/ff.c **** 	dj.obj.fs = fs;
ARM GAS  /tmp/ccaQXGqa.s 			page 286


4636:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
4637:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
4638:./Libraries/FatFs/Src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
4639:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
4640:./Libraries/FatFs/Src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
4641:./Libraries/FatFs/Src/ff.c **** 			res = FR_INVALID_NAME;
4642:./Libraries/FatFs/Src/ff.c **** 		}
4643:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
4644:./Libraries/FatFs/Src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
4645:./Libraries/FatFs/Src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
4646:./Libraries/FatFs/Src/ff.c **** 			res = FR_OK;
4647:./Libraries/FatFs/Src/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
4648:./Libraries/FatFs/Src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
4649:./Libraries/FatFs/Src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
4650:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
4651:./Libraries/FatFs/Src/ff.c **** 			tm = GET_FATTIME();
4652:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
4653:./Libraries/FatFs/Src/ff.c **** 				dsc = clust2sect(fs, dcl);
4654:./Libraries/FatFs/Src/ff.c **** 				dir = fs->win;
4655:./Libraries/FatFs/Src/ff.c **** 				mem_set(dir, 0, SS(fs));
4656:./Libraries/FatFs/Src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
4657:./Libraries/FatFs/Src/ff.c **** 					mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
4658:./Libraries/FatFs/Src/ff.c **** 					dir[DIR_Name] = '.';
4659:./Libraries/FatFs/Src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
4660:./Libraries/FatFs/Src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
4661:./Libraries/FatFs/Src/ff.c **** 					st_clust(fs, dir, dcl);
4662:./Libraries/FatFs/Src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
4663:./Libraries/FatFs/Src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
4664:./Libraries/FatFs/Src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
4665:./Libraries/FatFs/Src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
4666:./Libraries/FatFs/Src/ff.c **** 				}
4667:./Libraries/FatFs/Src/ff.c **** 				for (n = fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
4668:./Libraries/FatFs/Src/ff.c **** 					fs->winsect = dsc++;
4669:./Libraries/FatFs/Src/ff.c **** 					fs->wflag = 1;
4670:./Libraries/FatFs/Src/ff.c **** 					res = sync_window(fs);
4671:./Libraries/FatFs/Src/ff.c **** 					if (res != FR_OK) break;
4672:./Libraries/FatFs/Src/ff.c **** 					mem_set(dir, 0, SS(fs));
4673:./Libraries/FatFs/Src/ff.c **** 				}
4674:./Libraries/FatFs/Src/ff.c **** 			}
4675:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {
4676:./Libraries/FatFs/Src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
4677:./Libraries/FatFs/Src/ff.c **** 			}
4678:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {
4679:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
4680:./Libraries/FatFs/Src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* Initialize directory entry block */
4681:./Libraries/FatFs/Src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, tm);	/* Created time */
4682:./Libraries/FatFs/Src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, dcl);	/* Table start cluster */
4683:./Libraries/FatFs/Src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FileSize, (DWORD)dj.obj.objsize);	/* File size needs to be valid */
4684:./Libraries/FatFs/Src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ValidFileSize, (DWORD)dj.obj.objsize);
4685:./Libraries/FatFs/Src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 3;				/* Initialize the object flag (contiguous) */
4686:./Libraries/FatFs/Src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_DIR;				/* Attribute */
4687:./Libraries/FatFs/Src/ff.c **** 					res = store_xdir(&dj);
4688:./Libraries/FatFs/Src/ff.c **** 				} else
4689:./Libraries/FatFs/Src/ff.c **** #endif
4690:./Libraries/FatFs/Src/ff.c **** 				{
4691:./Libraries/FatFs/Src/ff.c **** 					dir = dj.dir;
4692:./Libraries/FatFs/Src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
ARM GAS  /tmp/ccaQXGqa.s 			page 287


4693:./Libraries/FatFs/Src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
4694:./Libraries/FatFs/Src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
4695:./Libraries/FatFs/Src/ff.c **** 					fs->wflag = 1;
4696:./Libraries/FatFs/Src/ff.c **** 				}
4697:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK) {
4698:./Libraries/FatFs/Src/ff.c **** 					res = sync_fs(fs);
4699:./Libraries/FatFs/Src/ff.c **** 				}
4700:./Libraries/FatFs/Src/ff.c **** 			} else {
4701:./Libraries/FatFs/Src/ff.c **** 				remove_chain(&dj.obj, dcl, 0);		/* Could not register, remove cluster chain */
4702:./Libraries/FatFs/Src/ff.c **** 			}
4703:./Libraries/FatFs/Src/ff.c **** 		}
4704:./Libraries/FatFs/Src/ff.c **** 		FREE_NAMBUF();
4705:./Libraries/FatFs/Src/ff.c **** 	}
4706:./Libraries/FatFs/Src/ff.c **** 
4707:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
4708:./Libraries/FatFs/Src/ff.c **** }
4709:./Libraries/FatFs/Src/ff.c **** 
4710:./Libraries/FatFs/Src/ff.c **** 
4711:./Libraries/FatFs/Src/ff.c **** 
4712:./Libraries/FatFs/Src/ff.c **** 
4713:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4714:./Libraries/FatFs/Src/ff.c **** /* Rename a File/Directory                                               */
4715:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4716:./Libraries/FatFs/Src/ff.c **** 
4717:./Libraries/FatFs/Src/ff.c **** FRESULT f_rename (
4718:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path_old,	/* Pointer to the object name to be renamed */
4719:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path_new	/* Pointer to the new name */
4720:./Libraries/FatFs/Src/ff.c **** )
4721:./Libraries/FatFs/Src/ff.c **** {
4722:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
4723:./Libraries/FatFs/Src/ff.c **** 	DIR djo, djn;
4724:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
4725:./Libraries/FatFs/Src/ff.c **** 	BYTE buf[_FS_EXFAT ? SZDIRE * 2 : 24], *dir;
4726:./Libraries/FatFs/Src/ff.c **** 	DWORD dw;
4727:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
4728:./Libraries/FatFs/Src/ff.c **** 
4729:./Libraries/FatFs/Src/ff.c **** 
4730:./Libraries/FatFs/Src/ff.c **** 	get_ldnumber(&path_new);						/* Snip drive number of new name off */
4731:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
4732:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
4733:./Libraries/FatFs/Src/ff.c **** 		djo.obj.fs = fs;
4734:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
4735:./Libraries/FatFs/Src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
4736:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
4737:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
4738:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
4739:./Libraries/FatFs/Src/ff.c **** 			res = chk_lock(&djo, 2);
4740:./Libraries/FatFs/Src/ff.c **** 		}
4741:./Libraries/FatFs/Src/ff.c **** #endif
4742:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {						/* Object to be renamed is found */
4743:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
4744:./Libraries/FatFs/Src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {	/* At exFAT */
4745:./Libraries/FatFs/Src/ff.c **** 				BYTE nf, nn;
4746:./Libraries/FatFs/Src/ff.c **** 				WORD nh;
4747:./Libraries/FatFs/Src/ff.c **** 
4748:./Libraries/FatFs/Src/ff.c **** 				mem_cpy(buf, fs->dirbuf, SZDIRE * 2);	/* Save 85+C0 entry of old object */
4749:./Libraries/FatFs/Src/ff.c **** 				mem_cpy(&djn, &djo, sizeof djo);
ARM GAS  /tmp/ccaQXGqa.s 			page 288


4750:./Libraries/FatFs/Src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4751:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4752:./Libraries/FatFs/Src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4753:./Libraries/FatFs/Src/ff.c **** 				}
4754:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4755:./Libraries/FatFs/Src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4756:./Libraries/FatFs/Src/ff.c **** 					if (res == FR_OK) {
4757:./Libraries/FatFs/Src/ff.c **** 						nf = fs->dirbuf[XDIR_NumSec]; nn = fs->dirbuf[XDIR_NumName];
4758:./Libraries/FatFs/Src/ff.c **** 						nh = ld_word(fs->dirbuf + XDIR_NameHash);
4759:./Libraries/FatFs/Src/ff.c **** 						mem_cpy(fs->dirbuf, buf, SZDIRE * 2);
4760:./Libraries/FatFs/Src/ff.c **** 						fs->dirbuf[XDIR_NumSec] = nf; fs->dirbuf[XDIR_NumName] = nn;
4761:./Libraries/FatFs/Src/ff.c **** 						st_word(fs->dirbuf + XDIR_NameHash, nh);
4762:./Libraries/FatFs/Src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4763:./Libraries/FatFs/Src/ff.c **** 						res = store_xdir(&djn);
4764:./Libraries/FatFs/Src/ff.c **** 					}
4765:./Libraries/FatFs/Src/ff.c **** 				}
4766:./Libraries/FatFs/Src/ff.c **** 			} else
4767:./Libraries/FatFs/Src/ff.c **** #endif
4768:./Libraries/FatFs/Src/ff.c **** 			{	/* At FAT12/FAT16/FAT32 */
4769:./Libraries/FatFs/Src/ff.c **** 				mem_cpy(buf, djo.dir + DIR_Attr, 21);	/* Save information about the object except name */
4770:./Libraries/FatFs/Src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
4771:./Libraries/FatFs/Src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4772:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4773:./Libraries/FatFs/Src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4774:./Libraries/FatFs/Src/ff.c **** 				}
4775:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4776:./Libraries/FatFs/Src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4777:./Libraries/FatFs/Src/ff.c **** 					if (res == FR_OK) {
4778:./Libraries/FatFs/Src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
4779:./Libraries/FatFs/Src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
4780:./Libraries/FatFs/Src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
4781:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
4782:./Libraries/FatFs/Src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
4783:./Libraries/FatFs/Src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
4784:./Libraries/FatFs/Src/ff.c **** 							if (!dw) {
4785:./Libraries/FatFs/Src/ff.c **** 								res = FR_INT_ERR;
4786:./Libraries/FatFs/Src/ff.c **** 							} else {
4787:./Libraries/FatFs/Src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4788:./Libraries/FatFs/Src/ff.c **** 								res = move_window(fs, dw);
4789:./Libraries/FatFs/Src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
4790:./Libraries/FatFs/Src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
4791:./Libraries/FatFs/Src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
4792:./Libraries/FatFs/Src/ff.c **** 									fs->wflag = 1;
4793:./Libraries/FatFs/Src/ff.c **** 								}
4794:./Libraries/FatFs/Src/ff.c **** 							}
4795:./Libraries/FatFs/Src/ff.c **** 						}
4796:./Libraries/FatFs/Src/ff.c **** 					}
4797:./Libraries/FatFs/Src/ff.c **** 				}
4798:./Libraries/FatFs/Src/ff.c **** 			}
4799:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {
4800:./Libraries/FatFs/Src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
4801:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK) {
4802:./Libraries/FatFs/Src/ff.c **** 					res = sync_fs(fs);
4803:./Libraries/FatFs/Src/ff.c **** 				}
4804:./Libraries/FatFs/Src/ff.c **** 			}
4805:./Libraries/FatFs/Src/ff.c **** /* End of the critical section */
4806:./Libraries/FatFs/Src/ff.c **** 		}
ARM GAS  /tmp/ccaQXGqa.s 			page 289


4807:./Libraries/FatFs/Src/ff.c **** 		FREE_NAMBUF();
4808:./Libraries/FatFs/Src/ff.c **** 	}
4809:./Libraries/FatFs/Src/ff.c **** 
4810:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
4811:./Libraries/FatFs/Src/ff.c **** }
4812:./Libraries/FatFs/Src/ff.c **** 
4813:./Libraries/FatFs/Src/ff.c **** #endif /* !_FS_READONLY */
4814:./Libraries/FatFs/Src/ff.c **** #endif /* _FS_MINIMIZE == 0 */
4815:./Libraries/FatFs/Src/ff.c **** #endif /* _FS_MINIMIZE <= 1 */
4816:./Libraries/FatFs/Src/ff.c **** #endif /* _FS_MINIMIZE <= 2 */
4817:./Libraries/FatFs/Src/ff.c **** 
4818:./Libraries/FatFs/Src/ff.c **** 
4819:./Libraries/FatFs/Src/ff.c **** 
4820:./Libraries/FatFs/Src/ff.c **** #if _USE_CHMOD && !_FS_READONLY
4821:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4822:./Libraries/FatFs/Src/ff.c **** /* Change Attribute                                                      */
4823:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4824:./Libraries/FatFs/Src/ff.c **** 
4825:./Libraries/FatFs/Src/ff.c **** FRESULT f_chmod (
4826:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4827:./Libraries/FatFs/Src/ff.c **** 	BYTE attr,			/* Attribute bits */
4828:./Libraries/FatFs/Src/ff.c **** 	BYTE mask			/* Attribute mask to change */
4829:./Libraries/FatFs/Src/ff.c **** )
4830:./Libraries/FatFs/Src/ff.c **** {
4831:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
4832:./Libraries/FatFs/Src/ff.c **** 	DIR dj;
4833:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
4834:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
4835:./Libraries/FatFs/Src/ff.c **** 
4836:./Libraries/FatFs/Src/ff.c **** 
4837:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4838:./Libraries/FatFs/Src/ff.c **** 	dj.obj.fs = fs;
4839:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
4840:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
4841:./Libraries/FatFs/Src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4842:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4843:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
4844:./Libraries/FatFs/Src/ff.c **** 			mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
4845:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
4846:./Libraries/FatFs/Src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4847:./Libraries/FatFs/Src/ff.c **** 				fs->dirbuf[XDIR_Attr] = (attr & mask) | (fs->dirbuf[XDIR_Attr] & (BYTE)~mask);	/* Apply attribu
4848:./Libraries/FatFs/Src/ff.c **** 				res = store_xdir(&dj);
4849:./Libraries/FatFs/Src/ff.c **** 			} else
4850:./Libraries/FatFs/Src/ff.c **** #endif
4851:./Libraries/FatFs/Src/ff.c **** 			{
4852:./Libraries/FatFs/Src/ff.c **** 				dj.dir[DIR_Attr] = (attr & mask) | (dj.dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change 
4853:./Libraries/FatFs/Src/ff.c **** 				fs->wflag = 1;
4854:./Libraries/FatFs/Src/ff.c **** 			}
4855:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {
4856:./Libraries/FatFs/Src/ff.c **** 				res = sync_fs(fs);
4857:./Libraries/FatFs/Src/ff.c **** 			}
4858:./Libraries/FatFs/Src/ff.c **** 		}
4859:./Libraries/FatFs/Src/ff.c **** 		FREE_NAMBUF();
4860:./Libraries/FatFs/Src/ff.c **** 	}
4861:./Libraries/FatFs/Src/ff.c **** 
4862:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
4863:./Libraries/FatFs/Src/ff.c **** }
ARM GAS  /tmp/ccaQXGqa.s 			page 290


4864:./Libraries/FatFs/Src/ff.c **** 
4865:./Libraries/FatFs/Src/ff.c **** 
4866:./Libraries/FatFs/Src/ff.c **** 
4867:./Libraries/FatFs/Src/ff.c **** 
4868:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4869:./Libraries/FatFs/Src/ff.c **** /* Change Timestamp                                                      */
4870:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4871:./Libraries/FatFs/Src/ff.c **** 
4872:./Libraries/FatFs/Src/ff.c **** FRESULT f_utime (
4873:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path,	/* Pointer to the file/directory name */
4874:./Libraries/FatFs/Src/ff.c **** 	const FILINFO* fno	/* Pointer to the time stamp to be set */
4875:./Libraries/FatFs/Src/ff.c **** )
4876:./Libraries/FatFs/Src/ff.c **** {
4877:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
4878:./Libraries/FatFs/Src/ff.c **** 	DIR dj;
4879:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
4880:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
4881:./Libraries/FatFs/Src/ff.c **** 
4882:./Libraries/FatFs/Src/ff.c **** 
4883:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4884:./Libraries/FatFs/Src/ff.c **** 	dj.obj.fs = fs;
4885:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
4886:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
4887:./Libraries/FatFs/Src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4888:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4889:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
4890:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
4891:./Libraries/FatFs/Src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4892:./Libraries/FatFs/Src/ff.c **** 				st_dword(fs->dirbuf + XDIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4893:./Libraries/FatFs/Src/ff.c **** 				res = store_xdir(&dj);
4894:./Libraries/FatFs/Src/ff.c **** 			} else
4895:./Libraries/FatFs/Src/ff.c **** #endif
4896:./Libraries/FatFs/Src/ff.c **** 			{
4897:./Libraries/FatFs/Src/ff.c **** 				st_dword(dj.dir + DIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4898:./Libraries/FatFs/Src/ff.c **** 				fs->wflag = 1;
4899:./Libraries/FatFs/Src/ff.c **** 			}
4900:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {
4901:./Libraries/FatFs/Src/ff.c **** 				res = sync_fs(fs);
4902:./Libraries/FatFs/Src/ff.c **** 			}
4903:./Libraries/FatFs/Src/ff.c **** 		}
4904:./Libraries/FatFs/Src/ff.c **** 		FREE_NAMBUF();
4905:./Libraries/FatFs/Src/ff.c **** 	}
4906:./Libraries/FatFs/Src/ff.c **** 
4907:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
4908:./Libraries/FatFs/Src/ff.c **** }
4909:./Libraries/FatFs/Src/ff.c **** 
4910:./Libraries/FatFs/Src/ff.c **** #endif	/* _USE_CHMOD && !_FS_READONLY */
4911:./Libraries/FatFs/Src/ff.c **** 
4912:./Libraries/FatFs/Src/ff.c **** 
4913:./Libraries/FatFs/Src/ff.c **** 
4914:./Libraries/FatFs/Src/ff.c **** #if _USE_LABEL
4915:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4916:./Libraries/FatFs/Src/ff.c **** /* Get Volume Label                                                      */
4917:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
4918:./Libraries/FatFs/Src/ff.c **** 
4919:./Libraries/FatFs/Src/ff.c **** FRESULT f_getlabel (
4920:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
ARM GAS  /tmp/ccaQXGqa.s 			page 291


4921:./Libraries/FatFs/Src/ff.c **** 	TCHAR* label,		/* Pointer to a buffer to return the volume label */
4922:./Libraries/FatFs/Src/ff.c **** 	DWORD* vsn			/* Pointer to a variable to return the volume serial number */
4923:./Libraries/FatFs/Src/ff.c **** )
4924:./Libraries/FatFs/Src/ff.c **** {
4925:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
4926:./Libraries/FatFs/Src/ff.c **** 	DIR dj;
4927:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
4928:./Libraries/FatFs/Src/ff.c **** 	UINT si, di;
4929:./Libraries/FatFs/Src/ff.c **** #if _LFN_UNICODE || _FS_EXFAT
4930:./Libraries/FatFs/Src/ff.c **** 	WCHAR w;
4931:./Libraries/FatFs/Src/ff.c **** #endif
4932:./Libraries/FatFs/Src/ff.c **** 
4933:./Libraries/FatFs/Src/ff.c **** 	/* Get logical drive */
4934:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&path, &fs, 0);
4935:./Libraries/FatFs/Src/ff.c **** 
4936:./Libraries/FatFs/Src/ff.c **** 	/* Get volume label */
4937:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK && label) {
4938:./Libraries/FatFs/Src/ff.c **** 		dj.obj.fs = fs; dj.obj.sclust = 0;	/* Open root directory */
4939:./Libraries/FatFs/Src/ff.c **** 		res = dir_sdi(&dj, 0);
4940:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
4941:./Libraries/FatFs/Src/ff.c **** 		 	res = dir_read(&dj, 1);			/* Find a volume label entry */
4942:./Libraries/FatFs/Src/ff.c **** 		 	if (res == FR_OK) {
4943:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
4944:./Libraries/FatFs/Src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4945:./Libraries/FatFs/Src/ff.c **** 					for (si = di = 0; si < dj.dir[XDIR_NumLabel]; si++) {	/* Extract volume label from 83 entry */
4946:./Libraries/FatFs/Src/ff.c **** 						w = ld_word(dj.dir + XDIR_Label + si * 2);
4947:./Libraries/FatFs/Src/ff.c **** #if _LFN_UNICODE
4948:./Libraries/FatFs/Src/ff.c **** 						label[di++] = w;
4949:./Libraries/FatFs/Src/ff.c **** #else
4950:./Libraries/FatFs/Src/ff.c **** 						w = ff_convert(w, 0);	/* Unicode -> OEM */
4951:./Libraries/FatFs/Src/ff.c **** 						if (w == 0) w = '?';	/* Replace wrong character */
4952:./Libraries/FatFs/Src/ff.c **** 						if (_DF1S && w >= 0x100) label[di++] = (char)(w >> 8);
4953:./Libraries/FatFs/Src/ff.c **** 						label[di++] = (char)w;
4954:./Libraries/FatFs/Src/ff.c **** #endif
4955:./Libraries/FatFs/Src/ff.c **** 					}
4956:./Libraries/FatFs/Src/ff.c **** 					label[di] = 0;
4957:./Libraries/FatFs/Src/ff.c **** 				} else
4958:./Libraries/FatFs/Src/ff.c **** #endif
4959:./Libraries/FatFs/Src/ff.c **** 				{
4960:./Libraries/FatFs/Src/ff.c **** 					si = di = 0;		/* Extract volume label from AM_VOL entry with code comversion */
4961:./Libraries/FatFs/Src/ff.c **** 					do {
4962:./Libraries/FatFs/Src/ff.c **** #if _LFN_UNICODE
4963:./Libraries/FatFs/Src/ff.c **** 						w = (si < 11) ? dj.dir[si++] : ' ';
4964:./Libraries/FatFs/Src/ff.c **** 						if (IsDBCS1(w) && si < 11 && IsDBCS2(dj.dir[si])) {
4965:./Libraries/FatFs/Src/ff.c **** 							w = w << 8 | dj.dir[si++];
4966:./Libraries/FatFs/Src/ff.c **** 						}
4967:./Libraries/FatFs/Src/ff.c **** 						label[di++] = ff_convert(w, 1);	/* OEM -> Unicode */
4968:./Libraries/FatFs/Src/ff.c **** #else
4969:./Libraries/FatFs/Src/ff.c **** 						label[di++] = dj.dir[si++];
4970:./Libraries/FatFs/Src/ff.c **** #endif
4971:./Libraries/FatFs/Src/ff.c **** 					} while (di < 11);
4972:./Libraries/FatFs/Src/ff.c **** 					do {				/* Truncate trailing spaces */
4973:./Libraries/FatFs/Src/ff.c **** 						label[di] = 0;
4974:./Libraries/FatFs/Src/ff.c **** 						if (di == 0) break;
4975:./Libraries/FatFs/Src/ff.c **** 					} while (label[--di] == ' ');
4976:./Libraries/FatFs/Src/ff.c **** 				}
4977:./Libraries/FatFs/Src/ff.c **** 			}
ARM GAS  /tmp/ccaQXGqa.s 			page 292


4978:./Libraries/FatFs/Src/ff.c **** 		}
4979:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_NO_FILE) {	/* No label entry and return nul string */
4980:./Libraries/FatFs/Src/ff.c **** 			label[0] = 0;
4981:./Libraries/FatFs/Src/ff.c **** 			res = FR_OK;
4982:./Libraries/FatFs/Src/ff.c **** 		}
4983:./Libraries/FatFs/Src/ff.c **** 	}
4984:./Libraries/FatFs/Src/ff.c **** 
4985:./Libraries/FatFs/Src/ff.c **** 	/* Get volume serial number */
4986:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK && vsn) {
4987:./Libraries/FatFs/Src/ff.c **** 		res = move_window(fs, fs->volbase);
4988:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
4989:./Libraries/FatFs/Src/ff.c **** 			switch (fs->fs_type) {
4990:./Libraries/FatFs/Src/ff.c **** 			case FS_EXFAT:
4991:./Libraries/FatFs/Src/ff.c **** 				di = BPB_VolIDEx; break;
4992:./Libraries/FatFs/Src/ff.c **** 
4993:./Libraries/FatFs/Src/ff.c **** 			case FS_FAT32:
4994:./Libraries/FatFs/Src/ff.c **** 				di = BS_VolID32; break;
4995:./Libraries/FatFs/Src/ff.c **** 
4996:./Libraries/FatFs/Src/ff.c **** 			default:
4997:./Libraries/FatFs/Src/ff.c **** 				di = BS_VolID;
4998:./Libraries/FatFs/Src/ff.c **** 			}
4999:./Libraries/FatFs/Src/ff.c **** 			*vsn = ld_dword(fs->win + di);
5000:./Libraries/FatFs/Src/ff.c **** 		}
5001:./Libraries/FatFs/Src/ff.c **** 	}
5002:./Libraries/FatFs/Src/ff.c **** 
5003:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
5004:./Libraries/FatFs/Src/ff.c **** }
5005:./Libraries/FatFs/Src/ff.c **** 
5006:./Libraries/FatFs/Src/ff.c **** 
5007:./Libraries/FatFs/Src/ff.c **** 
5008:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
5009:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
5010:./Libraries/FatFs/Src/ff.c **** /* Set Volume Label                                                      */
5011:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
5012:./Libraries/FatFs/Src/ff.c **** 
5013:./Libraries/FatFs/Src/ff.c **** FRESULT f_setlabel (
5014:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* label	/* Pointer to the volume label to set */
5015:./Libraries/FatFs/Src/ff.c **** )
5016:./Libraries/FatFs/Src/ff.c **** {
5017:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
5018:./Libraries/FatFs/Src/ff.c **** 	DIR dj;
5019:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
5020:./Libraries/FatFs/Src/ff.c **** 	BYTE dirvn[22];
5021:./Libraries/FatFs/Src/ff.c **** 	UINT i, j, slen;
5022:./Libraries/FatFs/Src/ff.c **** 	WCHAR w;
5023:./Libraries/FatFs/Src/ff.c **** 	static const char badchr[] = "\"*+,.:;<=>\?[]|\x7F";
5024:./Libraries/FatFs/Src/ff.c **** 
5025:./Libraries/FatFs/Src/ff.c **** 
5026:./Libraries/FatFs/Src/ff.c **** 	/* Get logical drive */
5027:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&label, &fs, FA_WRITE);
5028:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
5029:./Libraries/FatFs/Src/ff.c **** 	dj.obj.fs = fs;
5030:./Libraries/FatFs/Src/ff.c **** 
5031:./Libraries/FatFs/Src/ff.c **** 	/* Get length of given volume label */
5032:./Libraries/FatFs/Src/ff.c **** 	for (slen = 0; (UINT)label[slen] >= ' '; slen++) ;	/* Get name length */
5033:./Libraries/FatFs/Src/ff.c **** 
5034:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
ARM GAS  /tmp/ccaQXGqa.s 			page 293


5035:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
5036:./Libraries/FatFs/Src/ff.c **** 		for (i = j = 0; i < slen; ) {	/* Create volume label in directory form */
5037:./Libraries/FatFs/Src/ff.c **** 			w = label[i++];
5038:./Libraries/FatFs/Src/ff.c **** #if !_LFN_UNICODE
5039:./Libraries/FatFs/Src/ff.c **** 			if (IsDBCS1(w)) {
5040:./Libraries/FatFs/Src/ff.c **** 				w = (i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5041:./Libraries/FatFs/Src/ff.c **** 			}
5042:./Libraries/FatFs/Src/ff.c **** 			w = ff_convert(w, 1);
5043:./Libraries/FatFs/Src/ff.c **** #endif
5044:./Libraries/FatFs/Src/ff.c **** 			if (w == 0 || chk_chr(badchr, w) || j == 22) {	/* Check validity check validity of the volume la
5045:./Libraries/FatFs/Src/ff.c **** 				LEAVE_FF(fs, FR_INVALID_NAME);
5046:./Libraries/FatFs/Src/ff.c **** 			}
5047:./Libraries/FatFs/Src/ff.c **** 			st_word(dirvn + j, w); j += 2;
5048:./Libraries/FatFs/Src/ff.c **** 		}
5049:./Libraries/FatFs/Src/ff.c **** 		slen = j;
5050:./Libraries/FatFs/Src/ff.c **** 	} else
5051:./Libraries/FatFs/Src/ff.c **** #endif
5052:./Libraries/FatFs/Src/ff.c **** 	{	/* On the FAT12/16/32 volume */
5053:./Libraries/FatFs/Src/ff.c **** 		for ( ; slen && label[slen - 1] == ' '; slen--) ;	/* Remove trailing spaces */
5054:./Libraries/FatFs/Src/ff.c **** 		if (slen) {		/* Is there a volume label to be set? */
5055:./Libraries/FatFs/Src/ff.c **** 			dirvn[0] = 0; i = j = 0;	/* Create volume label in directory form */
5056:./Libraries/FatFs/Src/ff.c **** 			do {
5057:./Libraries/FatFs/Src/ff.c **** #if _LFN_UNICODE
5058:./Libraries/FatFs/Src/ff.c **** 				w = ff_convert(ff_wtoupper(label[i++]), 0);
5059:./Libraries/FatFs/Src/ff.c **** #else
5060:./Libraries/FatFs/Src/ff.c **** 				w = (BYTE)label[i++];
5061:./Libraries/FatFs/Src/ff.c **** 				if (IsDBCS1(w)) {
5062:./Libraries/FatFs/Src/ff.c **** 					w = (j < 10 && i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5063:./Libraries/FatFs/Src/ff.c **** 				}
5064:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0
5065:./Libraries/FatFs/Src/ff.c **** 				w = ff_convert(ff_wtoupper(ff_convert(w, 1)), 0);
5066:./Libraries/FatFs/Src/ff.c **** #else
5067:./Libraries/FatFs/Src/ff.c **** 				if (IsLower(w)) w -= 0x20;			/* To upper ASCII characters */
5068:./Libraries/FatFs/Src/ff.c **** #ifdef _EXCVT
5069:./Libraries/FatFs/Src/ff.c **** 				if (w >= 0x80) w = ExCvt[w - 0x80];	/* To upper extended characters (SBCS cfg) */
5070:./Libraries/FatFs/Src/ff.c **** #else
5071:./Libraries/FatFs/Src/ff.c **** 				if (!_DF1S && w >= 0x80) w = 0;		/* Reject extended characters (ASCII cfg) */
5072:./Libraries/FatFs/Src/ff.c **** #endif
5073:./Libraries/FatFs/Src/ff.c **** #endif
5074:./Libraries/FatFs/Src/ff.c **** #endif
5075:./Libraries/FatFs/Src/ff.c **** 				if (w == 0 || chk_chr(badchr, w) || j >= (UINT)((w >= 0x100) ? 10 : 11)) {	/* Reject invalid ch
5076:./Libraries/FatFs/Src/ff.c **** 					LEAVE_FF(fs, FR_INVALID_NAME);
5077:./Libraries/FatFs/Src/ff.c **** 				}
5078:./Libraries/FatFs/Src/ff.c **** 				if (w >= 0x100) dirvn[j++] = (BYTE)(w >> 8);
5079:./Libraries/FatFs/Src/ff.c **** 				dirvn[j++] = (BYTE)w;
5080:./Libraries/FatFs/Src/ff.c **** 			} while (i < slen);
5081:./Libraries/FatFs/Src/ff.c **** 			while (j < 11) dirvn[j++] = ' ';	/* Fill remaining name field */
5082:./Libraries/FatFs/Src/ff.c **** 			if (dirvn[0] == DDEM) LEAVE_FF(fs, FR_INVALID_NAME);	/* Reject illegal name (heading DDEM) */
5083:./Libraries/FatFs/Src/ff.c **** 		}
5084:./Libraries/FatFs/Src/ff.c **** 	}
5085:./Libraries/FatFs/Src/ff.c **** 
5086:./Libraries/FatFs/Src/ff.c **** 	/* Set volume label */
5087:./Libraries/FatFs/Src/ff.c **** 	dj.obj.sclust = 0;		/* Open root directory */
5088:./Libraries/FatFs/Src/ff.c **** 	res = dir_sdi(&dj, 0);
5089:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
5090:./Libraries/FatFs/Src/ff.c **** 		res = dir_read(&dj, 1);	/* Get volume label entry */
5091:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
ARM GAS  /tmp/ccaQXGqa.s 			page 294


5092:./Libraries/FatFs/Src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5093:./Libraries/FatFs/Src/ff.c **** 				dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);	/* Change the volume label */
5094:./Libraries/FatFs/Src/ff.c **** 				mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5095:./Libraries/FatFs/Src/ff.c **** 			} else {
5096:./Libraries/FatFs/Src/ff.c **** 				if (slen) {
5097:./Libraries/FatFs/Src/ff.c **** 					mem_cpy(dj.dir, dirvn, 11);	/* Change the volume label */
5098:./Libraries/FatFs/Src/ff.c **** 				} else {
5099:./Libraries/FatFs/Src/ff.c **** 					dj.dir[DIR_Name] = DDEM;	/* Remove the volume label */
5100:./Libraries/FatFs/Src/ff.c **** 				}
5101:./Libraries/FatFs/Src/ff.c **** 			}
5102:./Libraries/FatFs/Src/ff.c **** 			fs->wflag = 1;
5103:./Libraries/FatFs/Src/ff.c **** 			res = sync_fs(fs);
5104:./Libraries/FatFs/Src/ff.c **** 		} else {			/* No volume label entry is found or error */
5105:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_NO_FILE) {
5106:./Libraries/FatFs/Src/ff.c **** 				res = FR_OK;
5107:./Libraries/FatFs/Src/ff.c **** 				if (slen) {	/* Create a volume label entry */
5108:./Libraries/FatFs/Src/ff.c **** 					res = dir_alloc(&dj, 1);	/* Allocate an entry */
5109:./Libraries/FatFs/Src/ff.c **** 					if (res == FR_OK) {
5110:./Libraries/FatFs/Src/ff.c **** 						mem_set(dj.dir, 0, SZDIRE);	/* Clear the entry */
5111:./Libraries/FatFs/Src/ff.c **** 						if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5112:./Libraries/FatFs/Src/ff.c **** 							dj.dir[XDIR_Type] = 0x83;		/* Create 83 entry */
5113:./Libraries/FatFs/Src/ff.c **** 							dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);
5114:./Libraries/FatFs/Src/ff.c **** 							mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5115:./Libraries/FatFs/Src/ff.c **** 						} else {
5116:./Libraries/FatFs/Src/ff.c **** 							dj.dir[DIR_Attr] = AM_VOL;		/* Create volume label entry */
5117:./Libraries/FatFs/Src/ff.c **** 							mem_cpy(dj.dir, dirvn, 11);
5118:./Libraries/FatFs/Src/ff.c **** 						}
5119:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
5120:./Libraries/FatFs/Src/ff.c **** 						res = sync_fs(fs);
5121:./Libraries/FatFs/Src/ff.c **** 					}
5122:./Libraries/FatFs/Src/ff.c **** 				}
5123:./Libraries/FatFs/Src/ff.c **** 			}
5124:./Libraries/FatFs/Src/ff.c **** 		}
5125:./Libraries/FatFs/Src/ff.c **** 	}
5126:./Libraries/FatFs/Src/ff.c **** 
5127:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
5128:./Libraries/FatFs/Src/ff.c **** }
5129:./Libraries/FatFs/Src/ff.c **** 
5130:./Libraries/FatFs/Src/ff.c **** #endif /* !_FS_READONLY */
5131:./Libraries/FatFs/Src/ff.c **** #endif /* _USE_LABEL */
5132:./Libraries/FatFs/Src/ff.c **** 
5133:./Libraries/FatFs/Src/ff.c **** 
5134:./Libraries/FatFs/Src/ff.c **** 
5135:./Libraries/FatFs/Src/ff.c **** #if _USE_EXPAND && !_FS_READONLY
5136:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
5137:./Libraries/FatFs/Src/ff.c **** /* Allocate a Contiguous Blocks to the File                              */
5138:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
5139:./Libraries/FatFs/Src/ff.c **** 
5140:./Libraries/FatFs/Src/ff.c **** FRESULT f_expand (
5141:./Libraries/FatFs/Src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
5142:./Libraries/FatFs/Src/ff.c **** 	FSIZE_t fsz,	/* File size to be expanded to */
5143:./Libraries/FatFs/Src/ff.c **** 	BYTE opt		/* Operation mode 0:Find and prepare or 1:Find and allocate */
5144:./Libraries/FatFs/Src/ff.c **** )
5145:./Libraries/FatFs/Src/ff.c **** {
5146:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
5147:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
5148:./Libraries/FatFs/Src/ff.c **** 	DWORD n, clst, stcl, scl, ncl, tcl, lclst;
ARM GAS  /tmp/ccaQXGqa.s 			page 295


5149:./Libraries/FatFs/Src/ff.c **** 
5150:./Libraries/FatFs/Src/ff.c **** 
5151:./Libraries/FatFs/Src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5152:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5153:./Libraries/FatFs/Src/ff.c **** 	if (fsz == 0 || fp->obj.objsize != 0 || !(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);
5154:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
5155:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type != FS_EXFAT && fsz >= 0x100000000) LEAVE_FF(fs, FR_DENIED);	/* Check if in size li
5156:./Libraries/FatFs/Src/ff.c **** #endif
5157:./Libraries/FatFs/Src/ff.c **** 	n = (DWORD)fs->csize * SS(fs);	/* Cluster size */
5158:./Libraries/FatFs/Src/ff.c **** 	tcl = (DWORD)(fsz / n) + ((fsz & (n - 1)) ? 1 : 0);	/* Number of clusters required */
5159:./Libraries/FatFs/Src/ff.c **** 	stcl = fs->last_clst; lclst = 0;
5160:./Libraries/FatFs/Src/ff.c **** 	if (stcl < 2 || stcl >= fs->n_fatent) stcl = 2;
5161:./Libraries/FatFs/Src/ff.c **** 
5162:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
5163:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
5164:./Libraries/FatFs/Src/ff.c **** 		scl = find_bitmap(fs, stcl, tcl);			/* Find a contiguous cluster block */
5165:./Libraries/FatFs/Src/ff.c **** 		if (scl == 0) res = FR_DENIED;				/* No contiguous cluster block was found */
5166:./Libraries/FatFs/Src/ff.c **** 		if (scl == 0xFFFFFFFF) res = FR_DISK_ERR;
5167:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5168:./Libraries/FatFs/Src/ff.c **** 			if (opt) {		/* Allocate it now */
5169:./Libraries/FatFs/Src/ff.c **** 				res = change_bitmap(fs, scl, tcl, 1);	/* Mark the cluster block 'in use' */
5170:./Libraries/FatFs/Src/ff.c **** 				lclst = scl + tcl - 1;
5171:./Libraries/FatFs/Src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5172:./Libraries/FatFs/Src/ff.c **** 				lclst = scl - 1;
5173:./Libraries/FatFs/Src/ff.c **** 			}
5174:./Libraries/FatFs/Src/ff.c **** 		}
5175:./Libraries/FatFs/Src/ff.c **** 	} else
5176:./Libraries/FatFs/Src/ff.c **** #endif
5177:./Libraries/FatFs/Src/ff.c **** 	{
5178:./Libraries/FatFs/Src/ff.c **** 		scl = clst = stcl; ncl = 0;
5179:./Libraries/FatFs/Src/ff.c **** 		for (;;) {	/* Find a contiguous cluster block */
5180:./Libraries/FatFs/Src/ff.c **** 			n = get_fat(&fp->obj, clst);
5181:./Libraries/FatFs/Src/ff.c **** 			if (++clst >= fs->n_fatent) clst = 2;
5182:./Libraries/FatFs/Src/ff.c **** 			if (n == 1) { res = FR_INT_ERR; break; }
5183:./Libraries/FatFs/Src/ff.c **** 			if (n == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
5184:./Libraries/FatFs/Src/ff.c **** 			if (n == 0) {	/* Is it a free cluster? */
5185:./Libraries/FatFs/Src/ff.c **** 				if (++ncl == tcl) break;	/* Break if a contiguous cluster block is found */
5186:./Libraries/FatFs/Src/ff.c **** 			} else {
5187:./Libraries/FatFs/Src/ff.c **** 				scl = clst; ncl = 0;		/* Not a free cluster */
5188:./Libraries/FatFs/Src/ff.c **** 			}
5189:./Libraries/FatFs/Src/ff.c **** 			if (clst == stcl) { res = FR_DENIED; break; }	/* No contiguous cluster? */
5190:./Libraries/FatFs/Src/ff.c **** 		}
5191:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5192:./Libraries/FatFs/Src/ff.c **** 			if (opt) {		/* Allocate it now */
5193:./Libraries/FatFs/Src/ff.c **** 				for (clst = scl, n = tcl; n; clst++, n--) {	/* Create a cluster chain on the FAT */
5194:./Libraries/FatFs/Src/ff.c **** 					res = put_fat(fs, clst, (n == 1) ? 0xFFFFFFFF : clst + 1);
5195:./Libraries/FatFs/Src/ff.c **** 					if (res != FR_OK) break;
5196:./Libraries/FatFs/Src/ff.c **** 					lclst = clst;
5197:./Libraries/FatFs/Src/ff.c **** 				}
5198:./Libraries/FatFs/Src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5199:./Libraries/FatFs/Src/ff.c **** 				lclst = scl - 1;
5200:./Libraries/FatFs/Src/ff.c **** 			}
5201:./Libraries/FatFs/Src/ff.c **** 		}
5202:./Libraries/FatFs/Src/ff.c **** 	}
5203:./Libraries/FatFs/Src/ff.c **** 
5204:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
5205:./Libraries/FatFs/Src/ff.c **** 		fs->last_clst = lclst;		/* Set suggested start cluster to start next */
ARM GAS  /tmp/ccaQXGqa.s 			page 296


5206:./Libraries/FatFs/Src/ff.c **** 		if (opt) {	/* Is it allocated now? */
5207:./Libraries/FatFs/Src/ff.c **** 			fp->obj.sclust = scl;		/* Update object allocation information */
5208:./Libraries/FatFs/Src/ff.c **** 			fp->obj.objsize = fsz;
5209:./Libraries/FatFs/Src/ff.c **** 			if (_FS_EXFAT) fp->obj.stat = 2;	/* Set status 'contiguous chain' */
5210:./Libraries/FatFs/Src/ff.c **** 			fp->flag |= FA_MODIFIED;
5211:./Libraries/FatFs/Src/ff.c **** 			if (fs->free_clst <= fs->n_fatent - 2) {	/* Update FSINFO */
5212:./Libraries/FatFs/Src/ff.c **** 				fs->free_clst -= tcl;
5213:./Libraries/FatFs/Src/ff.c **** 				fs->fsi_flag |= 1;
5214:./Libraries/FatFs/Src/ff.c **** 			}
5215:./Libraries/FatFs/Src/ff.c **** 		}
5216:./Libraries/FatFs/Src/ff.c **** 	}
5217:./Libraries/FatFs/Src/ff.c **** 
5218:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, res);
5219:./Libraries/FatFs/Src/ff.c **** }
5220:./Libraries/FatFs/Src/ff.c **** 
5221:./Libraries/FatFs/Src/ff.c **** #endif /* _USE_EXPAND && !_FS_READONLY */
5222:./Libraries/FatFs/Src/ff.c **** 
5223:./Libraries/FatFs/Src/ff.c **** 
5224:./Libraries/FatFs/Src/ff.c **** 
5225:./Libraries/FatFs/Src/ff.c **** #if _USE_FORWARD
5226:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
5227:./Libraries/FatFs/Src/ff.c **** /* Forward data to the stream directly                                   */
5228:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
5229:./Libraries/FatFs/Src/ff.c **** 
5230:./Libraries/FatFs/Src/ff.c **** FRESULT f_forward (
5231:./Libraries/FatFs/Src/ff.c **** 	FIL* fp, 						/* Pointer to the file object */
5232:./Libraries/FatFs/Src/ff.c **** 	UINT (*func)(const BYTE*,UINT),	/* Pointer to the streaming function */
5233:./Libraries/FatFs/Src/ff.c **** 	UINT btf,						/* Number of bytes to forward */
5234:./Libraries/FatFs/Src/ff.c **** 	UINT* bf						/* Pointer to number of bytes forwarded */
5235:./Libraries/FatFs/Src/ff.c **** )
5236:./Libraries/FatFs/Src/ff.c **** {
5237:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
5238:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
5239:./Libraries/FatFs/Src/ff.c **** 	DWORD clst, sect;
5240:./Libraries/FatFs/Src/ff.c **** 	FSIZE_t remain;
5241:./Libraries/FatFs/Src/ff.c **** 	UINT rcnt, csect;
5242:./Libraries/FatFs/Src/ff.c **** 	BYTE *dbuf;
5243:./Libraries/FatFs/Src/ff.c **** 
5244:./Libraries/FatFs/Src/ff.c **** 
5245:./Libraries/FatFs/Src/ff.c **** 	*bf = 0;	/* Clear transfer byte counter */
5246:./Libraries/FatFs/Src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5247:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5248:./Libraries/FatFs/Src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
5249:./Libraries/FatFs/Src/ff.c **** 
5250:./Libraries/FatFs/Src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
5251:./Libraries/FatFs/Src/ff.c **** 	if (btf > remain) btf = (UINT)remain;			/* Truncate btf by remaining bytes */
5252:./Libraries/FatFs/Src/ff.c **** 
5253:./Libraries/FatFs/Src/ff.c **** 	for ( ;  btf && (*func)(0, 0);					/* Repeat until all data transferred or stream goes busy */
5254:./Libraries/FatFs/Src/ff.c **** 		fp->fptr += rcnt, *bf += rcnt, btf -= rcnt) {
5255:./Libraries/FatFs/Src/ff.c **** 		csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
5256:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {				/* On the sector boundary? */
5257:./Libraries/FatFs/Src/ff.c **** 			if (csect == 0) {						/* On the cluster boundary? */
5258:./Libraries/FatFs/Src/ff.c **** 				clst = (fp->fptr == 0) ?			/* On the top of the file? */
5259:./Libraries/FatFs/Src/ff.c **** 					fp->obj.sclust : get_fat(&fp->obj, fp->clust);
5260:./Libraries/FatFs/Src/ff.c **** 				if (clst <= 1) ABORT(fs, FR_INT_ERR);
5261:./Libraries/FatFs/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
5262:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clst;					/* Update current cluster */
ARM GAS  /tmp/ccaQXGqa.s 			page 297


5263:./Libraries/FatFs/Src/ff.c **** 			}
5264:./Libraries/FatFs/Src/ff.c **** 		}
5265:./Libraries/FatFs/Src/ff.c **** 		sect = clust2sect(fs, fp->clust);			/* Get current data sector */
5266:./Libraries/FatFs/Src/ff.c **** 		if (!sect) ABORT(fs, FR_INT_ERR);
5267:./Libraries/FatFs/Src/ff.c **** 		sect += csect;
5268:./Libraries/FatFs/Src/ff.c **** #if _FS_TINY
5269:./Libraries/FatFs/Src/ff.c **** 		if (move_window(fs, sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window to the file dat
5270:./Libraries/FatFs/Src/ff.c **** 		dbuf = fs->win;
5271:./Libraries/FatFs/Src/ff.c **** #else
5272:./Libraries/FatFs/Src/ff.c **** 		if (fp->sect != sect) {		/* Fill sector cache with file data */
5273:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
5274:./Libraries/FatFs/Src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
5275:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5276:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
5277:./Libraries/FatFs/Src/ff.c **** 			}
5278:./Libraries/FatFs/Src/ff.c **** #endif
5279:./Libraries/FatFs/Src/ff.c **** 			if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5280:./Libraries/FatFs/Src/ff.c **** 		}
5281:./Libraries/FatFs/Src/ff.c **** 		dbuf = fp->buf;
5282:./Libraries/FatFs/Src/ff.c **** #endif
5283:./Libraries/FatFs/Src/ff.c **** 		fp->sect = sect;
5284:./Libraries/FatFs/Src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
5285:./Libraries/FatFs/Src/ff.c **** 		if (rcnt > btf) rcnt = btf;					/* Clip it by btr if needed */
5286:./Libraries/FatFs/Src/ff.c **** 		rcnt = (*func)(dbuf + ((UINT)fp->fptr % SS(fs)), rcnt);	/* Forward the file data */
5287:./Libraries/FatFs/Src/ff.c **** 		if (!rcnt) ABORT(fs, FR_INT_ERR);
5288:./Libraries/FatFs/Src/ff.c **** 	}
5289:./Libraries/FatFs/Src/ff.c **** 
5290:./Libraries/FatFs/Src/ff.c **** 	LEAVE_FF(fs, FR_OK);
5291:./Libraries/FatFs/Src/ff.c **** }
5292:./Libraries/FatFs/Src/ff.c **** #endif /* _USE_FORWARD */
5293:./Libraries/FatFs/Src/ff.c **** 
5294:./Libraries/FatFs/Src/ff.c **** 
5295:./Libraries/FatFs/Src/ff.c **** 
5296:./Libraries/FatFs/Src/ff.c **** #if _USE_MKFS && !_FS_READONLY
5297:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
5298:./Libraries/FatFs/Src/ff.c **** /* Create an FAT/exFAT volume                                            */
5299:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
5300:./Libraries/FatFs/Src/ff.c **** 
5301:./Libraries/FatFs/Src/ff.c **** FRESULT f_mkfs (
5302:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* path,	/* Logical drive number */
5303:./Libraries/FatFs/Src/ff.c **** 	BYTE opt,			/* Format option */
5304:./Libraries/FatFs/Src/ff.c **** 	DWORD au,			/* Size of allocation unit (cluster) [byte] */
5305:./Libraries/FatFs/Src/ff.c **** 	void* work,			/* Pointer to working buffer */
5306:./Libraries/FatFs/Src/ff.c **** 	UINT len			/* Size of working buffer */
5307:./Libraries/FatFs/Src/ff.c **** )
5308:./Libraries/FatFs/Src/ff.c **** {
5309:./Libraries/FatFs/Src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
5310:./Libraries/FatFs/Src/ff.c **** 	const UINT n_rootdir = 512;	/* Number of root directory entries for FAT12/16 volume */
5311:./Libraries/FatFs/Src/ff.c **** 	static const WORD cst[] = {1, 4, 16, 64, 256, 512, 0};	/* Cluster size boundary for FAT12/16 volum
5312:./Libraries/FatFs/Src/ff.c **** 	static const WORD cst32[] = {1, 2, 4, 8, 16, 32, 0};	/* Cluster size boundary for FAT32 volume (12
5313:./Libraries/FatFs/Src/ff.c **** 	BYTE fmt, sys, *buf, *pte, pdrv, part;
5314:./Libraries/FatFs/Src/ff.c **** 	WORD ss;
5315:./Libraries/FatFs/Src/ff.c **** 	DWORD szb_buf, sz_buf, sz_blk, n_clst, pau, sect, nsect, n;
5316:./Libraries/FatFs/Src/ff.c **** 	DWORD b_vol, b_fat, b_data;				/* Base LBA for volume, fat, data */
5317:./Libraries/FatFs/Src/ff.c **** 	DWORD sz_vol, sz_rsv, sz_fat, sz_dir;	/* Size for volume, fat, dir, data */
5318:./Libraries/FatFs/Src/ff.c **** 	UINT i;
5319:./Libraries/FatFs/Src/ff.c **** 	int vol;
ARM GAS  /tmp/ccaQXGqa.s 			page 298


5320:./Libraries/FatFs/Src/ff.c **** 	DSTATUS stat;
5321:./Libraries/FatFs/Src/ff.c **** #if _USE_TRIM || _FS_EXFAT
5322:./Libraries/FatFs/Src/ff.c **** 	DWORD tbl[3];
5323:./Libraries/FatFs/Src/ff.c **** #endif
5324:./Libraries/FatFs/Src/ff.c **** 
5325:./Libraries/FatFs/Src/ff.c **** 
5326:./Libraries/FatFs/Src/ff.c **** 	/* Check mounted drive and clear work area */
5327:./Libraries/FatFs/Src/ff.c **** 	vol = get_ldnumber(&path);					/* Get target logical drive */
5328:./Libraries/FatFs/Src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
5329:./Libraries/FatFs/Src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
5330:./Libraries/FatFs/Src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
5331:./Libraries/FatFs/Src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
5332:./Libraries/FatFs/Src/ff.c **** 
5333:./Libraries/FatFs/Src/ff.c **** 	/* Check physical drive status */
5334:./Libraries/FatFs/Src/ff.c **** 	stat = disk_initialize(pdrv);
5335:./Libraries/FatFs/Src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5336:./Libraries/FatFs/Src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5337:./Libraries/FatFs/Src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
5338:./Libraries/FatFs/Src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
5339:./Libraries/FatFs/Src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_SIZE, &ss) != RES_OK) return FR_DISK_ERR;
5340:./Libraries/FatFs/Src/ff.c **** 	if (ss > _MAX_SS || ss < _MIN_SS || (ss & (ss - 1))) return FR_DISK_ERR;
5341:./Libraries/FatFs/Src/ff.c **** #else
5342:./Libraries/FatFs/Src/ff.c **** 	ss = _MAX_SS;
5343:./Libraries/FatFs/Src/ff.c **** #endif
5344:./Libraries/FatFs/Src/ff.c **** 	if ((au != 0 && au < ss) || au > 0x1000000 || (au & (au - 1))) return FR_INVALID_PARAMETER;	/* Che
5345:./Libraries/FatFs/Src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
5346:./Libraries/FatFs/Src/ff.c **** 
5347:./Libraries/FatFs/Src/ff.c **** 	/* Get working buffer */
5348:./Libraries/FatFs/Src/ff.c **** 	buf = (BYTE*)work;		/* Working buffer */
5349:./Libraries/FatFs/Src/ff.c **** 	sz_buf = len / ss;		/* Size of working buffer (sector) */
5350:./Libraries/FatFs/Src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
5351:./Libraries/FatFs/Src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
5352:./Libraries/FatFs/Src/ff.c **** 
5353:./Libraries/FatFs/Src/ff.c **** 	/* Determine where the volume to be located (b_vol, sz_vol) */
5354:./Libraries/FatFs/Src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {
5355:./Libraries/FatFs/Src/ff.c **** 		/* Get partition information from partition table in the MBR */
5356:./Libraries/FatFs/Src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Load MBR */
5357:./Libraries/FatFs/Src/ff.c **** 		if (ld_word(buf + BS_55AA) != 0xAA55) return FR_MKFS_ABORTED;	/* Check if MBR is valid */
5358:./Libraries/FatFs/Src/ff.c **** 		pte = buf + (MBR_Table + (part - 1) * SZ_PTE);
5359:./Libraries/FatFs/Src/ff.c **** 		if (!pte[PTE_System]) return FR_MKFS_ABORTED;	/* No partition? */
5360:./Libraries/FatFs/Src/ff.c **** 		b_vol = ld_dword(pte + PTE_StLba);		/* Get volume start sector */
5361:./Libraries/FatFs/Src/ff.c **** 		sz_vol = ld_dword(pte + PTE_SizLba);	/* Get volume size */
5362:./Libraries/FatFs/Src/ff.c **** 	} else {
5363:./Libraries/FatFs/Src/ff.c **** 		/* Create a single-partition in this function */
5364:./Libraries/FatFs/Src/ff.c **** 		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_vol) != RES_OK) return FR_DISK_ERR;
5365:./Libraries/FatFs/Src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
5366:./Libraries/FatFs/Src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
5367:./Libraries/FatFs/Src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
5368:./Libraries/FatFs/Src/ff.c **** 	}
5369:./Libraries/FatFs/Src/ff.c **** 	if (sz_vol < 128) return FR_MKFS_ABORTED;	/* Check if volume size is >=128s */
5370:./Libraries/FatFs/Src/ff.c **** 
5371:./Libraries/FatFs/Src/ff.c **** 	/* Pre-determine the FAT type */
5372:./Libraries/FatFs/Src/ff.c **** 	do {
5373:./Libraries/FatFs/Src/ff.c **** 		if (_FS_EXFAT && (opt & FM_EXFAT)) {	/* exFAT possible? */
5374:./Libraries/FatFs/Src/ff.c **** 			if ((opt & FM_ANY) == FM_EXFAT || sz_vol >= 0x4000000 || au > 128) {	/* exFAT only, vol >= 64Ms 
5375:./Libraries/FatFs/Src/ff.c **** 				fmt = FS_EXFAT; break;
5376:./Libraries/FatFs/Src/ff.c **** 			}
ARM GAS  /tmp/ccaQXGqa.s 			page 299


5377:./Libraries/FatFs/Src/ff.c **** 		}
5378:./Libraries/FatFs/Src/ff.c **** 		if (au > 128) return FR_INVALID_PARAMETER;	/* Too large au for FAT/FAT32 */
5379:./Libraries/FatFs/Src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
5380:./Libraries/FatFs/Src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
5381:./Libraries/FatFs/Src/ff.c **** 				fmt = FS_FAT32; break;
5382:./Libraries/FatFs/Src/ff.c **** 			}
5383:./Libraries/FatFs/Src/ff.c **** 		}
5384:./Libraries/FatFs/Src/ff.c **** 		if (!(opt & FM_FAT)) return FR_INVALID_PARAMETER;	/* no-FAT? */
5385:./Libraries/FatFs/Src/ff.c **** 		fmt = FS_FAT16;
5386:./Libraries/FatFs/Src/ff.c **** 	} while (0);
5387:./Libraries/FatFs/Src/ff.c **** 
5388:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
5389:./Libraries/FatFs/Src/ff.c **** 	if (fmt == FS_EXFAT) {	/* Create an exFAT volume */
5390:./Libraries/FatFs/Src/ff.c **** 		DWORD szb_bit, szb_case, sum, nb, cl;
5391:./Libraries/FatFs/Src/ff.c **** 		WCHAR ch, si;
5392:./Libraries/FatFs/Src/ff.c **** 		UINT j, st;
5393:./Libraries/FatFs/Src/ff.c **** 		BYTE b;
5394:./Libraries/FatFs/Src/ff.c **** 
5395:./Libraries/FatFs/Src/ff.c **** 		if (sz_vol < 0x1000) return FR_MKFS_ABORTED;	/* Too small volume? */
5396:./Libraries/FatFs/Src/ff.c **** #if _USE_TRIM
5397:./Libraries/FatFs/Src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area may be erased *
5398:./Libraries/FatFs/Src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5399:./Libraries/FatFs/Src/ff.c **** #endif
5400:./Libraries/FatFs/Src/ff.c **** 		/* Determine FAT location, data location and number of clusters */
5401:./Libraries/FatFs/Src/ff.c **** 		if (!au) {	/* au auto-selection */
5402:./Libraries/FatFs/Src/ff.c **** 			au = 8;
5403:./Libraries/FatFs/Src/ff.c **** 			if (sz_vol >= 0x80000) au = 64;		/* >= 512Ks */
5404:./Libraries/FatFs/Src/ff.c **** 			if (sz_vol >= 0x4000000) au = 256;	/* >= 64Ms */
5405:./Libraries/FatFs/Src/ff.c **** 		}
5406:./Libraries/FatFs/Src/ff.c **** 		b_fat = b_vol + 32;										/* FAT start at offset 32 */
5407:./Libraries/FatFs/Src/ff.c **** 		sz_fat = ((sz_vol / au + 2) * 4 + ss - 1) / ss;			/* Number of FAT sectors */
5408:./Libraries/FatFs/Src/ff.c **** 		b_data = (b_fat + sz_fat + sz_blk - 1) & ~(sz_blk - 1);	/* Align data area to the erase block bou
5409:./Libraries/FatFs/Src/ff.c **** 		if (b_data >= sz_vol / 2) return FR_MKFS_ABORTED;		/* Too small volume? */
5410:./Libraries/FatFs/Src/ff.c **** 		n_clst = (sz_vol - (b_data - b_vol)) / au;				/* Number of clusters */
5411:./Libraries/FatFs/Src/ff.c **** 		if (n_clst <16) return FR_MKFS_ABORTED;					/* Too few clusters? */
5412:./Libraries/FatFs/Src/ff.c **** 		if (n_clst > MAX_EXFAT) return FR_MKFS_ABORTED;			/* Too many clusters? */
5413:./Libraries/FatFs/Src/ff.c **** 
5414:./Libraries/FatFs/Src/ff.c **** 		szb_bit = (n_clst + 7) / 8;						/* Size of allocation bitmap */
5415:./Libraries/FatFs/Src/ff.c **** 		tbl[0] = (szb_bit + au * ss - 1) / (au * ss);	/* Number of allocation bitmap clusters */
5416:./Libraries/FatFs/Src/ff.c **** 
5417:./Libraries/FatFs/Src/ff.c **** 		/* Create a compressed up-case table */
5418:./Libraries/FatFs/Src/ff.c **** 		sect = b_data + au * tbl[0];	/* Table start sector */
5419:./Libraries/FatFs/Src/ff.c **** 		sum = 0;						/* Table checksum to be stored in the 82 entry */
5420:./Libraries/FatFs/Src/ff.c **** 		st = si = i = j = szb_case = 0;
5421:./Libraries/FatFs/Src/ff.c **** 		do {
5422:./Libraries/FatFs/Src/ff.c **** 			switch (st) {
5423:./Libraries/FatFs/Src/ff.c **** 			case 0:
5424:./Libraries/FatFs/Src/ff.c **** 				ch = ff_wtoupper(si);	/* Get an up-case char */
5425:./Libraries/FatFs/Src/ff.c **** 				if (ch != si) {
5426:./Libraries/FatFs/Src/ff.c **** 					si++; break;		/* Store the up-case char if exist */
5427:./Libraries/FatFs/Src/ff.c **** 				}
5428:./Libraries/FatFs/Src/ff.c **** 				for (j = 1; (WCHAR)(si + j) && (WCHAR)(si + j) == ff_wtoupper((WCHAR)(si + j)); j++) ;	/* Get r
5429:./Libraries/FatFs/Src/ff.c **** 				if (j >= 128) {
5430:./Libraries/FatFs/Src/ff.c **** 					ch = 0xFFFF; st = 2; break;	/* Compress the no-case block if run is >= 128 */
5431:./Libraries/FatFs/Src/ff.c **** 				}
5432:./Libraries/FatFs/Src/ff.c **** 				st = 1;			/* Do not compress short run */
5433:./Libraries/FatFs/Src/ff.c **** 				/* go to next case */
ARM GAS  /tmp/ccaQXGqa.s 			page 300


5434:./Libraries/FatFs/Src/ff.c **** 			case 1:
5435:./Libraries/FatFs/Src/ff.c **** 				ch = si++;		/* Fill the short run */
5436:./Libraries/FatFs/Src/ff.c **** 				if (--j == 0) st = 0;
5437:./Libraries/FatFs/Src/ff.c **** 				break;
5438:./Libraries/FatFs/Src/ff.c **** 
5439:./Libraries/FatFs/Src/ff.c **** 			default:
5440:./Libraries/FatFs/Src/ff.c **** 				ch = (WCHAR)j; si += j;	/* Number of chars to skip */
5441:./Libraries/FatFs/Src/ff.c **** 				st = 0;
5442:./Libraries/FatFs/Src/ff.c **** 			}
5443:./Libraries/FatFs/Src/ff.c **** 			sum = xsum32(buf[i + 0] = (BYTE)ch, sum);		/* Put it into the write buffer */
5444:./Libraries/FatFs/Src/ff.c **** 			sum = xsum32(buf[i + 1] = (BYTE)(ch >> 8), sum);
5445:./Libraries/FatFs/Src/ff.c **** 			i += 2; szb_case += 2;
5446:./Libraries/FatFs/Src/ff.c **** 			if (!si || i == szb_buf) {		/* Write buffered data when buffer full or end of process */
5447:./Libraries/FatFs/Src/ff.c **** 				n = (i + ss - 1) / ss;
5448:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5449:./Libraries/FatFs/Src/ff.c **** 				sect += n; i = 0;
5450:./Libraries/FatFs/Src/ff.c **** 			}
5451:./Libraries/FatFs/Src/ff.c **** 		} while (si);
5452:./Libraries/FatFs/Src/ff.c **** 		tbl[1] = (szb_case + au * ss - 1) / (au * ss);	/* Number of up-case table clusters */
5453:./Libraries/FatFs/Src/ff.c **** 		tbl[2] = 1;										/* Number of root dir clusters */
5454:./Libraries/FatFs/Src/ff.c **** 
5455:./Libraries/FatFs/Src/ff.c **** 		/* Initialize the allocation bitmap */
5456:./Libraries/FatFs/Src/ff.c **** 		sect = b_data; nsect = (szb_bit + ss - 1) / ss;	/* Start of bitmap and number of sectors */
5457:./Libraries/FatFs/Src/ff.c **** 		nb = tbl[0] + tbl[1] + tbl[2];					/* Number of clusters in-use by system */
5458:./Libraries/FatFs/Src/ff.c **** 		do {
5459:./Libraries/FatFs/Src/ff.c **** 			mem_set(buf, 0, szb_buf);
5460:./Libraries/FatFs/Src/ff.c **** 			for (i = 0; nb >= 8 && i < szb_buf; buf[i++] = 0xFF, nb -= 8) ;
5461:./Libraries/FatFs/Src/ff.c **** 			for (b = 1; nb && i < szb_buf; buf[i] |= b, b <<= 1, nb--) ;
5462:./Libraries/FatFs/Src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;		/* Write the buffered data */
5463:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5464:./Libraries/FatFs/Src/ff.c **** 			sect += n; nsect -= n;
5465:./Libraries/FatFs/Src/ff.c **** 		} while (nsect);
5466:./Libraries/FatFs/Src/ff.c **** 
5467:./Libraries/FatFs/Src/ff.c **** 		/* Initialize the FAT */
5468:./Libraries/FatFs/Src/ff.c **** 		sect = b_fat; nsect = sz_fat;	/* Start of FAT and number of FAT sectors */
5469:./Libraries/FatFs/Src/ff.c **** 		j = nb = cl = 0;
5470:./Libraries/FatFs/Src/ff.c **** 		do {
5471:./Libraries/FatFs/Src/ff.c **** 			mem_set(buf, 0, szb_buf); i = 0;	/* Clear work area and reset write index */
5472:./Libraries/FatFs/Src/ff.c **** 			if (cl == 0) {	/* Set entry 0 and 1 */
5473:./Libraries/FatFs/Src/ff.c **** 				st_dword(buf + i, 0xFFFFFFF8); i += 4; cl++;
5474:./Libraries/FatFs/Src/ff.c **** 				st_dword(buf + i, 0xFFFFFFFF); i += 4; cl++;
5475:./Libraries/FatFs/Src/ff.c **** 			}
5476:./Libraries/FatFs/Src/ff.c **** 			do {			/* Create chains of bitmap, up-case and root dir */
5477:./Libraries/FatFs/Src/ff.c **** 				while (nb && i < szb_buf) {			/* Create a chain */
5478:./Libraries/FatFs/Src/ff.c **** 					st_dword(buf + i, (nb > 1) ? cl + 1 : 0xFFFFFFFF);
5479:./Libraries/FatFs/Src/ff.c **** 					i += 4; cl++; nb--;
5480:./Libraries/FatFs/Src/ff.c **** 				}
5481:./Libraries/FatFs/Src/ff.c **** 				if (!nb && j < 3) nb = tbl[j++];	/* Next chain */
5482:./Libraries/FatFs/Src/ff.c **** 			} while (nb && i < szb_buf);
5483:./Libraries/FatFs/Src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;	/* Write the buffered data */
5484:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5485:./Libraries/FatFs/Src/ff.c **** 			sect += n; nsect -= n;
5486:./Libraries/FatFs/Src/ff.c **** 		} while (nsect);
5487:./Libraries/FatFs/Src/ff.c **** 
5488:./Libraries/FatFs/Src/ff.c **** 		/* Initialize the root directory */
5489:./Libraries/FatFs/Src/ff.c **** 		mem_set(buf, 0, szb_buf);
5490:./Libraries/FatFs/Src/ff.c **** 		buf[SZDIRE * 0 + 0] = 0x83;		/* 83 entry (volume label) */
ARM GAS  /tmp/ccaQXGqa.s 			page 301


5491:./Libraries/FatFs/Src/ff.c **** 		buf[SZDIRE * 1 + 0] = 0x81;		/* 81 entry (allocation bitmap) */
5492:./Libraries/FatFs/Src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 20, 2);
5493:./Libraries/FatFs/Src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 24, szb_bit);
5494:./Libraries/FatFs/Src/ff.c **** 		buf[SZDIRE * 2 + 0] = 0x82;		/* 82 entry (up-case table) */
5495:./Libraries/FatFs/Src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 4, sum);
5496:./Libraries/FatFs/Src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 20, 2 + tbl[0]);
5497:./Libraries/FatFs/Src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 24, szb_case);
5498:./Libraries/FatFs/Src/ff.c **** 		sect = b_data + au * (tbl[0] + tbl[1]);	nsect = au;	/* Start of the root directory and number of 
5499:./Libraries/FatFs/Src/ff.c **** 		do {	/* Fill root directory sectors */
5500:./Libraries/FatFs/Src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5501:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5502:./Libraries/FatFs/Src/ff.c **** 			mem_set(buf, 0, ss);
5503:./Libraries/FatFs/Src/ff.c **** 			sect += n; nsect -= n;
5504:./Libraries/FatFs/Src/ff.c **** 		} while (nsect);
5505:./Libraries/FatFs/Src/ff.c **** 
5506:./Libraries/FatFs/Src/ff.c **** 		/* Create two set of the exFAT VBR blocks */
5507:./Libraries/FatFs/Src/ff.c **** 		sect = b_vol;
5508:./Libraries/FatFs/Src/ff.c **** 		for (n = 0; n < 2; n++) {
5509:./Libraries/FatFs/Src/ff.c **** 			/* Main record (+0) */
5510:./Libraries/FatFs/Src/ff.c **** 			mem_set(buf, 0, ss);
5511:./Libraries/FatFs/Src/ff.c **** 			mem_cpy(buf + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11);	/* Boot jump code (x86), OEM name */
5512:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BPB_VolOfsEx, b_vol);					/* Volume offset in the physical drive [sector] */
5513:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BPB_TotSecEx, sz_vol);					/* Volume size [sector] */
5514:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BPB_FatOfsEx, b_fat - b_vol);			/* FAT offset [sector] */
5515:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BPB_FatSzEx, sz_fat);					/* FAT size [sector] */
5516:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BPB_DataOfsEx, b_data - b_vol);			/* Data offset [sector] */
5517:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BPB_NumClusEx, n_clst);					/* Number of clusters */
5518:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BPB_RootClusEx, 2 + tbl[0] + tbl[1]);	/* Root dir cluster # */
5519:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BPB_VolIDEx, GET_FATTIME());				/* VSN */
5520:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BPB_FSVerEx, 0x100);						/* File system version (1.00) */
5521:./Libraries/FatFs/Src/ff.c **** 			for (buf[BPB_BytsPerSecEx] = 0, i = ss; i >>= 1; buf[BPB_BytsPerSecEx]++) ;	/* Log2 of sector si
5522:./Libraries/FatFs/Src/ff.c **** 			for (buf[BPB_SecPerClusEx] = 0, i = au; i >>= 1; buf[BPB_SecPerClusEx]++) ;	/* Log2 of cluster s
5523:./Libraries/FatFs/Src/ff.c **** 			buf[BPB_NumFATsEx] = 1;					/* Number of FATs */
5524:./Libraries/FatFs/Src/ff.c **** 			buf[BPB_DrvNumEx] = 0x80;				/* Drive number (for int13) */
5525:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BS_BootCodeEx, 0xFEEB);	/* Boot code (x86) */
5526:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);			/* Signature (placed here regardless of sector size) */
5527:./Libraries/FatFs/Src/ff.c **** 			for (i = sum = 0; i < ss; i++) {		/* VBR checksum */
5528:./Libraries/FatFs/Src/ff.c **** 				if (i != BPB_VolFlagEx && i != BPB_VolFlagEx + 1 && i != BPB_PercInUseEx) sum = xsum32(buf[i], 
5529:./Libraries/FatFs/Src/ff.c **** 			}
5530:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5531:./Libraries/FatFs/Src/ff.c **** 			/* Extended bootstrap record (+1..+8) */
5532:./Libraries/FatFs/Src/ff.c **** 			mem_set(buf, 0, ss);
5533:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + ss - 2, 0xAA55);	/* Signature (placed at end of sector) */
5534:./Libraries/FatFs/Src/ff.c **** 			for (j = 1; j < 9; j++) {
5535:./Libraries/FatFs/Src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5536:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5537:./Libraries/FatFs/Src/ff.c **** 			}
5538:./Libraries/FatFs/Src/ff.c **** 			/* OEM/Reserved record (+9..+10) */
5539:./Libraries/FatFs/Src/ff.c **** 			mem_set(buf, 0, ss);
5540:./Libraries/FatFs/Src/ff.c **** 			for ( ; j < 11; j++) {
5541:./Libraries/FatFs/Src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5542:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5543:./Libraries/FatFs/Src/ff.c **** 			}
5544:./Libraries/FatFs/Src/ff.c **** 			/* Sum record (+11) */
5545:./Libraries/FatFs/Src/ff.c **** 			for (i = 0; i < ss; i += 4) st_dword(buf + i, sum);		/* Fill with checksum value */
5546:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5547:./Libraries/FatFs/Src/ff.c **** 		}
ARM GAS  /tmp/ccaQXGqa.s 			page 302


5548:./Libraries/FatFs/Src/ff.c **** 
5549:./Libraries/FatFs/Src/ff.c **** 	} else
5550:./Libraries/FatFs/Src/ff.c **** #endif	/* _FS_EXFAT */
5551:./Libraries/FatFs/Src/ff.c **** 	{	/* Create an FAT12/16/32 volume */
5552:./Libraries/FatFs/Src/ff.c **** 		do {
5553:./Libraries/FatFs/Src/ff.c **** 			pau = au;
5554:./Libraries/FatFs/Src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
5555:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {	/* FAT32 volume */
5556:./Libraries/FatFs/Src/ff.c **** 				if (!pau) {	/* au auto-selection */
5557:./Libraries/FatFs/Src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
5558:./Libraries/FatFs/Src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5559:./Libraries/FatFs/Src/ff.c **** 				}
5560:./Libraries/FatFs/Src/ff.c **** 				n_clst = sz_vol / pau;	/* Number of clusters */
5561:./Libraries/FatFs/Src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
5562:./Libraries/FatFs/Src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
5563:./Libraries/FatFs/Src/ff.c **** 				sz_dir = 0;		/* No static directory */
5564:./Libraries/FatFs/Src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
5565:./Libraries/FatFs/Src/ff.c **** 			} else {				/* FAT12/16 volume */
5566:./Libraries/FatFs/Src/ff.c **** 				if (!pau) {	/* au auto-selection */
5567:./Libraries/FatFs/Src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
5568:./Libraries/FatFs/Src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5569:./Libraries/FatFs/Src/ff.c **** 				}
5570:./Libraries/FatFs/Src/ff.c **** 				n_clst = sz_vol / pau;
5571:./Libraries/FatFs/Src/ff.c **** 				if (n_clst > MAX_FAT12) {
5572:./Libraries/FatFs/Src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
5573:./Libraries/FatFs/Src/ff.c **** 				} else {
5574:./Libraries/FatFs/Src/ff.c **** 					fmt = FS_FAT12;
5575:./Libraries/FatFs/Src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
5576:./Libraries/FatFs/Src/ff.c **** 				}
5577:./Libraries/FatFs/Src/ff.c **** 				sz_fat = (n + ss - 1) / ss;		/* FAT size [sector] */
5578:./Libraries/FatFs/Src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
5579:./Libraries/FatFs/Src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
5580:./Libraries/FatFs/Src/ff.c **** 			}
5581:./Libraries/FatFs/Src/ff.c **** 			b_fat = b_vol + sz_rsv;						/* FAT base */
5582:./Libraries/FatFs/Src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
5583:./Libraries/FatFs/Src/ff.c **** 
5584:./Libraries/FatFs/Src/ff.c **** 			/* Align data base to erase block boundary (for flash memory media) */
5585:./Libraries/FatFs/Src/ff.c **** 			n = ((b_data + sz_blk - 1) & ~(sz_blk - 1)) - b_data;	/* Next nearest erase block from current d
5586:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
5587:./Libraries/FatFs/Src/ff.c **** 				sz_rsv += n; b_fat += n;
5588:./Libraries/FatFs/Src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
5589:./Libraries/FatFs/Src/ff.c **** 				sz_fat += n / n_fats;
5590:./Libraries/FatFs/Src/ff.c **** 			}
5591:./Libraries/FatFs/Src/ff.c **** 
5592:./Libraries/FatFs/Src/ff.c **** 			/* Determine number of clusters and final check of validity of the FAT sub-type */
5593:./Libraries/FatFs/Src/ff.c **** 			if (sz_vol < b_data + pau * 16 - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
5594:./Libraries/FatFs/Src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
5595:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {
5596:./Libraries/FatFs/Src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
5597:./Libraries/FatFs/Src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
5598:./Libraries/FatFs/Src/ff.c **** 					return FR_MKFS_ABORTED;
5599:./Libraries/FatFs/Src/ff.c **** 				}
5600:./Libraries/FatFs/Src/ff.c **** 			}
5601:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT16) {
5602:./Libraries/FatFs/Src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
5603:./Libraries/FatFs/Src/ff.c **** 					if (!au && (pau * 2) <= 64) {
5604:./Libraries/FatFs/Src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
ARM GAS  /tmp/ccaQXGqa.s 			page 303


5605:./Libraries/FatFs/Src/ff.c **** 					}
5606:./Libraries/FatFs/Src/ff.c **** 					if ((opt & FM_FAT32)) {
5607:./Libraries/FatFs/Src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
5608:./Libraries/FatFs/Src/ff.c **** 					}
5609:./Libraries/FatFs/Src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5610:./Libraries/FatFs/Src/ff.c **** 					return FR_MKFS_ABORTED;
5611:./Libraries/FatFs/Src/ff.c **** 				}
5612:./Libraries/FatFs/Src/ff.c **** 				if  (n_clst <= MAX_FAT12) {	/* Too few clusters for FAT16 */
5613:./Libraries/FatFs/Src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5614:./Libraries/FatFs/Src/ff.c **** 					return FR_MKFS_ABORTED;
5615:./Libraries/FatFs/Src/ff.c **** 				}
5616:./Libraries/FatFs/Src/ff.c **** 			}
5617:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT12 && n_clst > MAX_FAT12) return FR_MKFS_ABORTED;	/* Too many clusters for FAT1
5618:./Libraries/FatFs/Src/ff.c **** 
5619:./Libraries/FatFs/Src/ff.c **** 			/* Ok, it is the valid cluster configuration */
5620:./Libraries/FatFs/Src/ff.c **** 			break;
5621:./Libraries/FatFs/Src/ff.c **** 		} while (1);
5622:./Libraries/FatFs/Src/ff.c **** 
5623:./Libraries/FatFs/Src/ff.c **** #if _USE_TRIM
5624:./Libraries/FatFs/Src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area can be erased *
5625:./Libraries/FatFs/Src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5626:./Libraries/FatFs/Src/ff.c **** #endif
5627:./Libraries/FatFs/Src/ff.c **** 		/* Create FAT VBR */
5628:./Libraries/FatFs/Src/ff.c **** 		mem_set(buf, 0, ss);
5629:./Libraries/FatFs/Src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
5630:./Libraries/FatFs/Src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
5631:./Libraries/FatFs/Src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
5632:./Libraries/FatFs/Src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
5633:./Libraries/FatFs/Src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
5634:./Libraries/FatFs/Src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
5635:./Libraries/FatFs/Src/ff.c **** 		if (sz_vol < 0x10000) {
5636:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
5637:./Libraries/FatFs/Src/ff.c **** 		} else {
5638:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BPB_TotSec32, sz_vol);		/* Volume size in 32-bit LBA */
5639:./Libraries/FatFs/Src/ff.c **** 		}
5640:./Libraries/FatFs/Src/ff.c **** 		buf[BPB_Media] = 0xF8;							/* Media descriptor byte */
5641:./Libraries/FatFs/Src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
5642:./Libraries/FatFs/Src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
5643:./Libraries/FatFs/Src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
5644:./Libraries/FatFs/Src/ff.c **** 		if (fmt == FS_FAT32) {
5645:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
5646:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
5647:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
5648:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
5649:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
5650:./Libraries/FatFs/Src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
5651:./Libraries/FatFs/Src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
5652:./Libraries/FatFs/Src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
5653:./Libraries/FatFs/Src/ff.c **** 		} else {
5654:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BS_VolID, GET_FATTIME());	/* VSN */
5655:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
5656:./Libraries/FatFs/Src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
5657:./Libraries/FatFs/Src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
5658:./Libraries/FatFs/Src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
5659:./Libraries/FatFs/Src/ff.c **** 		}
5660:./Libraries/FatFs/Src/ff.c **** 		st_word(buf + BS_55AA, 0xAA55);					/* Signature (offset is fixed here regardless of sector size)
5661:./Libraries/FatFs/Src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
ARM GAS  /tmp/ccaQXGqa.s 			page 304


5662:./Libraries/FatFs/Src/ff.c **** 
5663:./Libraries/FatFs/Src/ff.c **** 		/* Create FSINFO record if needed */
5664:./Libraries/FatFs/Src/ff.c **** 		if (fmt == FS_FAT32) {
5665:./Libraries/FatFs/Src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
5666:./Libraries/FatFs/Src/ff.c **** 			mem_set(buf, 0, ss);
5667:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
5668:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
5669:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
5670:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
5671:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
5672:./Libraries/FatFs/Src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
5673:./Libraries/FatFs/Src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
5674:./Libraries/FatFs/Src/ff.c **** 		}
5675:./Libraries/FatFs/Src/ff.c **** 
5676:./Libraries/FatFs/Src/ff.c **** 		/* Initialize FAT area */
5677:./Libraries/FatFs/Src/ff.c **** 		mem_set(buf, 0, (UINT)szb_buf);
5678:./Libraries/FatFs/Src/ff.c **** 		sect = b_fat;		/* FAT start sector */
5679:./Libraries/FatFs/Src/ff.c **** 		for (i = 0; i < n_fats; i++) {			/* Initialize FATs each */
5680:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {
5681:./Libraries/FatFs/Src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
5682:./Libraries/FatFs/Src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
5683:./Libraries/FatFs/Src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
5684:./Libraries/FatFs/Src/ff.c **** 			} else {
5685:./Libraries/FatFs/Src/ff.c **** 				st_dword(buf + 0, (fmt == FS_FAT12) ? 0xFFFFF8 : 0xFFFFFFF8);	/* Entry 0 and 1 */
5686:./Libraries/FatFs/Src/ff.c **** 			}
5687:./Libraries/FatFs/Src/ff.c **** 			nsect = sz_fat;		/* Number of FAT sectors */
5688:./Libraries/FatFs/Src/ff.c **** 			do {	/* Fill FAT sectors */
5689:./Libraries/FatFs/Src/ff.c **** 				n = (nsect > sz_buf) ? sz_buf : nsect;
5690:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5691:./Libraries/FatFs/Src/ff.c **** 				mem_set(buf, 0, ss);
5692:./Libraries/FatFs/Src/ff.c **** 				sect += n; nsect -= n;
5693:./Libraries/FatFs/Src/ff.c **** 			} while (nsect);
5694:./Libraries/FatFs/Src/ff.c **** 		}
5695:./Libraries/FatFs/Src/ff.c **** 
5696:./Libraries/FatFs/Src/ff.c **** 		/* Initialize root directory (fill with zero) */
5697:./Libraries/FatFs/Src/ff.c **** 		nsect = (fmt == FS_FAT32) ? pau : sz_dir;	/* Number of root directory sectors */
5698:./Libraries/FatFs/Src/ff.c **** 		do {
5699:./Libraries/FatFs/Src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5700:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5701:./Libraries/FatFs/Src/ff.c **** 			sect += n; nsect -= n;
5702:./Libraries/FatFs/Src/ff.c **** 		} while (nsect);
5703:./Libraries/FatFs/Src/ff.c **** 	}
5704:./Libraries/FatFs/Src/ff.c **** 
5705:./Libraries/FatFs/Src/ff.c **** 	/* Determine system ID in the partition table */
5706:./Libraries/FatFs/Src/ff.c **** 	if (_FS_EXFAT && fmt == FS_EXFAT) {
5707:./Libraries/FatFs/Src/ff.c **** 		sys = 0x07;			/* HPFS/NTFS/exFAT */
5708:./Libraries/FatFs/Src/ff.c **** 	} else {
5709:./Libraries/FatFs/Src/ff.c **** 		if (fmt == FS_FAT32) {
5710:./Libraries/FatFs/Src/ff.c **** 			sys = 0x0C;		/* FAT32X */
5711:./Libraries/FatFs/Src/ff.c **** 		} else {
5712:./Libraries/FatFs/Src/ff.c **** 			if (sz_vol >= 0x10000) {
5713:./Libraries/FatFs/Src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
5714:./Libraries/FatFs/Src/ff.c **** 			} else {
5715:./Libraries/FatFs/Src/ff.c **** 				sys = (fmt == FS_FAT16) ? 0x04 : 0x01;	/* FAT16 (<64KS) : FAT12 (<64KS) */
5716:./Libraries/FatFs/Src/ff.c **** 			}
5717:./Libraries/FatFs/Src/ff.c **** 		}
5718:./Libraries/FatFs/Src/ff.c **** 	}
ARM GAS  /tmp/ccaQXGqa.s 			page 305


5719:./Libraries/FatFs/Src/ff.c **** 
5720:./Libraries/FatFs/Src/ff.c **** 	/* Update partition information */
5721:./Libraries/FatFs/Src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {	/* Created in the existing partition */
5722:./Libraries/FatFs/Src/ff.c **** 		/* Update system ID in the partition table */
5723:./Libraries/FatFs/Src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Read the MBR */
5724:./Libraries/FatFs/Src/ff.c **** 		buf[MBR_Table + (part - 1) * SZ_PTE + PTE_System] = sys;		/* Set system ID */
5725:./Libraries/FatFs/Src/ff.c **** 		if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it back to the MBR */
5726:./Libraries/FatFs/Src/ff.c **** 	} else {								/* Created as a new single partition */
5727:./Libraries/FatFs/Src/ff.c **** 		if (!(opt & FM_SFD)) {	/* Create partition table if in FDISK format */
5728:./Libraries/FatFs/Src/ff.c **** 			mem_set(buf, 0, ss);
5729:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
5730:./Libraries/FatFs/Src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
5731:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_Boot] = 0;					/* Boot indicator */
5732:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
5733:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
5734:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
5735:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
5736:./Libraries/FatFs/Src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
5737:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
5738:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
5739:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
5740:./Libraries/FatFs/Src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
5741:./Libraries/FatFs/Src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
5742:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
5743:./Libraries/FatFs/Src/ff.c **** 		}
5744:./Libraries/FatFs/Src/ff.c **** 	}
5745:./Libraries/FatFs/Src/ff.c **** 
5746:./Libraries/FatFs/Src/ff.c **** 	if (disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) return FR_DISK_ERR;
5747:./Libraries/FatFs/Src/ff.c **** 
5748:./Libraries/FatFs/Src/ff.c **** 	return FR_OK;
5749:./Libraries/FatFs/Src/ff.c **** }
5750:./Libraries/FatFs/Src/ff.c **** 
5751:./Libraries/FatFs/Src/ff.c **** 
5752:./Libraries/FatFs/Src/ff.c **** 
5753:./Libraries/FatFs/Src/ff.c **** #if _MULTI_PARTITION
5754:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
5755:./Libraries/FatFs/Src/ff.c **** /* Create partition table on the physical drive                          */
5756:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
5757:./Libraries/FatFs/Src/ff.c **** 
5758:./Libraries/FatFs/Src/ff.c **** FRESULT f_fdisk (
5759:./Libraries/FatFs/Src/ff.c **** 	BYTE pdrv,			/* Physical drive number */
5760:./Libraries/FatFs/Src/ff.c **** 	const DWORD* szt,	/* Pointer to the size table for each partitions */
5761:./Libraries/FatFs/Src/ff.c **** 	void* work			/* Pointer to the working buffer */
5762:./Libraries/FatFs/Src/ff.c **** )
5763:./Libraries/FatFs/Src/ff.c **** {
5764:./Libraries/FatFs/Src/ff.c **** 	UINT i, n, sz_cyl, tot_cyl, b_cyl, e_cyl, p_cyl;
5765:./Libraries/FatFs/Src/ff.c **** 	BYTE s_hd, e_hd, *p, *buf = (BYTE*)work;
5766:./Libraries/FatFs/Src/ff.c **** 	DSTATUS stat;
5767:./Libraries/FatFs/Src/ff.c **** 	DWORD sz_disk, sz_part, s_part;
5768:./Libraries/FatFs/Src/ff.c **** 
5769:./Libraries/FatFs/Src/ff.c **** 
5770:./Libraries/FatFs/Src/ff.c **** 	stat = disk_initialize(pdrv);
5771:./Libraries/FatFs/Src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5772:./Libraries/FatFs/Src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5773:./Libraries/FatFs/Src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_disk)) return FR_DISK_ERR;
5774:./Libraries/FatFs/Src/ff.c **** 
5775:./Libraries/FatFs/Src/ff.c **** 	/* Determine the CHS without any consideration of the drive geometry */
ARM GAS  /tmp/ccaQXGqa.s 			page 306


5776:./Libraries/FatFs/Src/ff.c **** 	for (n = 16; n < 256 && sz_disk / n / 63 > 1024; n *= 2) ;
5777:./Libraries/FatFs/Src/ff.c **** 	if (n == 256) n--;
5778:./Libraries/FatFs/Src/ff.c **** 	e_hd = n - 1;
5779:./Libraries/FatFs/Src/ff.c **** 	sz_cyl = 63 * n;
5780:./Libraries/FatFs/Src/ff.c **** 	tot_cyl = sz_disk / sz_cyl;
5781:./Libraries/FatFs/Src/ff.c **** 
5782:./Libraries/FatFs/Src/ff.c **** 	/* Create partition table */
5783:./Libraries/FatFs/Src/ff.c **** 	mem_set(buf, 0, _MAX_SS);
5784:./Libraries/FatFs/Src/ff.c **** 	p = buf + MBR_Table; b_cyl = 0;
5785:./Libraries/FatFs/Src/ff.c **** 	for (i = 0; i < 4; i++, p += SZ_PTE) {
5786:./Libraries/FatFs/Src/ff.c **** 		p_cyl = (szt[i] <= 100U) ? (DWORD)tot_cyl * szt[i] / 100 : szt[i] / sz_cyl;	/* Number of cylinder
5787:./Libraries/FatFs/Src/ff.c **** 		if (!p_cyl) continue;
5788:./Libraries/FatFs/Src/ff.c **** 		s_part = (DWORD)sz_cyl * b_cyl;
5789:./Libraries/FatFs/Src/ff.c **** 		sz_part = (DWORD)sz_cyl * p_cyl;
5790:./Libraries/FatFs/Src/ff.c **** 		if (i == 0) {	/* Exclude first track of cylinder 0 */
5791:./Libraries/FatFs/Src/ff.c **** 			s_hd = 1;
5792:./Libraries/FatFs/Src/ff.c **** 			s_part += 63; sz_part -= 63;
5793:./Libraries/FatFs/Src/ff.c **** 		} else {
5794:./Libraries/FatFs/Src/ff.c **** 			s_hd = 0;
5795:./Libraries/FatFs/Src/ff.c **** 		}
5796:./Libraries/FatFs/Src/ff.c **** 		e_cyl = b_cyl + p_cyl - 1;	/* End cylinder */
5797:./Libraries/FatFs/Src/ff.c **** 		if (e_cyl >= tot_cyl) return FR_INVALID_PARAMETER;
5798:./Libraries/FatFs/Src/ff.c **** 
5799:./Libraries/FatFs/Src/ff.c **** 		/* Set partition table */
5800:./Libraries/FatFs/Src/ff.c **** 		p[1] = s_hd;						/* Start head */
5801:./Libraries/FatFs/Src/ff.c **** 		p[2] = (BYTE)((b_cyl >> 2) + 1);	/* Start sector */
5802:./Libraries/FatFs/Src/ff.c **** 		p[3] = (BYTE)b_cyl;					/* Start cylinder */
5803:./Libraries/FatFs/Src/ff.c **** 		p[4] = 0x07;						/* System type (temporary setting) */
5804:./Libraries/FatFs/Src/ff.c **** 		p[5] = e_hd;						/* End head */
5805:./Libraries/FatFs/Src/ff.c **** 		p[6] = (BYTE)((e_cyl >> 2) + 63);	/* End sector */
5806:./Libraries/FatFs/Src/ff.c **** 		p[7] = (BYTE)e_cyl;					/* End cylinder */
5807:./Libraries/FatFs/Src/ff.c **** 		st_dword(p + 8, s_part);			/* Start sector in LBA */
5808:./Libraries/FatFs/Src/ff.c **** 		st_dword(p + 12, sz_part);			/* Number of sectors */
5809:./Libraries/FatFs/Src/ff.c **** 
5810:./Libraries/FatFs/Src/ff.c **** 		/* Next partition */
5811:./Libraries/FatFs/Src/ff.c **** 		b_cyl += p_cyl;
5812:./Libraries/FatFs/Src/ff.c **** 	}
5813:./Libraries/FatFs/Src/ff.c **** 	st_word(p, 0xAA55);
5814:./Libraries/FatFs/Src/ff.c **** 
5815:./Libraries/FatFs/Src/ff.c **** 	/* Write it to the MBR */
5816:./Libraries/FatFs/Src/ff.c **** 	return (disk_write(pdrv, buf, 0, 1) != RES_OK || disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) ? FR_DI
5817:./Libraries/FatFs/Src/ff.c **** }
5818:./Libraries/FatFs/Src/ff.c **** 
5819:./Libraries/FatFs/Src/ff.c **** #endif /* _MULTI_PARTITION */
5820:./Libraries/FatFs/Src/ff.c **** #endif /* _USE_MKFS && !_FS_READONLY */
5821:./Libraries/FatFs/Src/ff.c **** 
5822:./Libraries/FatFs/Src/ff.c **** 
5823:./Libraries/FatFs/Src/ff.c **** 
5824:./Libraries/FatFs/Src/ff.c **** 
5825:./Libraries/FatFs/Src/ff.c **** #if _USE_STRFUNC
5826:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
5827:./Libraries/FatFs/Src/ff.c **** /* Get a string from the file                                            */
5828:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
5829:./Libraries/FatFs/Src/ff.c **** 
5830:./Libraries/FatFs/Src/ff.c **** TCHAR* f_gets (
5831:./Libraries/FatFs/Src/ff.c **** 	TCHAR* buff,	/* Pointer to the string buffer to read */
5832:./Libraries/FatFs/Src/ff.c **** 	int len,		/* Size of string buffer (characters) */
ARM GAS  /tmp/ccaQXGqa.s 			page 307


5833:./Libraries/FatFs/Src/ff.c **** 	FIL* fp			/* Pointer to the file object */
5834:./Libraries/FatFs/Src/ff.c **** )
5835:./Libraries/FatFs/Src/ff.c **** {
5836:./Libraries/FatFs/Src/ff.c **** 	int n = 0;
5837:./Libraries/FatFs/Src/ff.c **** 	TCHAR c, *p = buff;
5838:./Libraries/FatFs/Src/ff.c **** 	BYTE s[2];
5839:./Libraries/FatFs/Src/ff.c **** 	UINT rc;
5840:./Libraries/FatFs/Src/ff.c **** 
5841:./Libraries/FatFs/Src/ff.c **** 
5842:./Libraries/FatFs/Src/ff.c **** 	while (n < len - 1) {	/* Read characters until buffer gets filled */
5843:./Libraries/FatFs/Src/ff.c **** #if _LFN_UNICODE
5844:./Libraries/FatFs/Src/ff.c **** #if _STRF_ENCODE == 3		/* Read a character in UTF-8 */
5845:./Libraries/FatFs/Src/ff.c **** 		f_read(fp, s, 1, &rc);
5846:./Libraries/FatFs/Src/ff.c **** 		if (rc != 1) break;
5847:./Libraries/FatFs/Src/ff.c **** 		c = s[0];
5848:./Libraries/FatFs/Src/ff.c **** 		if (c >= 0x80) {
5849:./Libraries/FatFs/Src/ff.c **** 			if (c < 0xC0) continue;	/* Skip stray trailer */
5850:./Libraries/FatFs/Src/ff.c **** 			if (c < 0xE0) {			/* Two-byte sequence (0x80-0x7FF) */
5851:./Libraries/FatFs/Src/ff.c **** 				f_read(fp, s, 1, &rc);
5852:./Libraries/FatFs/Src/ff.c **** 				if (rc != 1) break;
5853:./Libraries/FatFs/Src/ff.c **** 				c = (c & 0x1F) << 6 | (s[0] & 0x3F);
5854:./Libraries/FatFs/Src/ff.c **** 				if (c < 0x80) c = '?';	/* Reject invalid code range */
5855:./Libraries/FatFs/Src/ff.c **** 			} else {
5856:./Libraries/FatFs/Src/ff.c **** 				if (c < 0xF0) {		/* Three-byte sequence (0x800-0xFFFF) */
5857:./Libraries/FatFs/Src/ff.c **** 					f_read(fp, s, 2, &rc);
5858:./Libraries/FatFs/Src/ff.c **** 					if (rc != 2) break;
5859:./Libraries/FatFs/Src/ff.c **** 					c = c << 12 | (s[0] & 0x3F) << 6 | (s[1] & 0x3F);
5860:./Libraries/FatFs/Src/ff.c **** 					if (c < 0x800) c = '?';	/* Reject invalid code range */
5861:./Libraries/FatFs/Src/ff.c **** 				} else {			/* Reject four-byte sequence */
5862:./Libraries/FatFs/Src/ff.c **** 					c = '?';
5863:./Libraries/FatFs/Src/ff.c **** 				}
5864:./Libraries/FatFs/Src/ff.c **** 			}
5865:./Libraries/FatFs/Src/ff.c **** 		}
5866:./Libraries/FatFs/Src/ff.c **** #elif _STRF_ENCODE == 2		/* Read a character in UTF-16BE */
5867:./Libraries/FatFs/Src/ff.c **** 		f_read(fp, s, 2, &rc);
5868:./Libraries/FatFs/Src/ff.c **** 		if (rc != 2) break;
5869:./Libraries/FatFs/Src/ff.c **** 		c = s[1] + (s[0] << 8);
5870:./Libraries/FatFs/Src/ff.c **** #elif _STRF_ENCODE == 1		/* Read a character in UTF-16LE */
5871:./Libraries/FatFs/Src/ff.c **** 		f_read(fp, s, 2, &rc);
5872:./Libraries/FatFs/Src/ff.c **** 		if (rc != 2) break;
5873:./Libraries/FatFs/Src/ff.c **** 		c = s[0] + (s[1] << 8);
5874:./Libraries/FatFs/Src/ff.c **** #else						/* Read a character in ANSI/OEM */
5875:./Libraries/FatFs/Src/ff.c **** 		f_read(fp, s, 1, &rc);
5876:./Libraries/FatFs/Src/ff.c **** 		if (rc != 1) break;
5877:./Libraries/FatFs/Src/ff.c **** 		c = s[0];
5878:./Libraries/FatFs/Src/ff.c **** 		if (IsDBCS1(c)) {
5879:./Libraries/FatFs/Src/ff.c **** 			f_read(fp, s, 1, &rc);
5880:./Libraries/FatFs/Src/ff.c **** 			if (rc != 1) break;
5881:./Libraries/FatFs/Src/ff.c **** 			c = (c << 8) + s[0];
5882:./Libraries/FatFs/Src/ff.c **** 		}
5883:./Libraries/FatFs/Src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
5884:./Libraries/FatFs/Src/ff.c **** 		if (!c) c = '?';
5885:./Libraries/FatFs/Src/ff.c **** #endif
5886:./Libraries/FatFs/Src/ff.c **** #else						/* Read a character without conversion */
5887:./Libraries/FatFs/Src/ff.c **** 		f_read(fp, s, 1, &rc);
5888:./Libraries/FatFs/Src/ff.c **** 		if (rc != 1) break;
5889:./Libraries/FatFs/Src/ff.c **** 		c = s[0];
ARM GAS  /tmp/ccaQXGqa.s 			page 308


5890:./Libraries/FatFs/Src/ff.c **** #endif
5891:./Libraries/FatFs/Src/ff.c **** 		if (_USE_STRFUNC == 2 && c == '\r') continue;	/* Strip '\r' */
5892:./Libraries/FatFs/Src/ff.c **** 		*p++ = c;
5893:./Libraries/FatFs/Src/ff.c **** 		n++;
5894:./Libraries/FatFs/Src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
5895:./Libraries/FatFs/Src/ff.c **** 	}
5896:./Libraries/FatFs/Src/ff.c **** 	*p = 0;
5897:./Libraries/FatFs/Src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
5898:./Libraries/FatFs/Src/ff.c **** }
5899:./Libraries/FatFs/Src/ff.c **** 
5900:./Libraries/FatFs/Src/ff.c **** 
5901:./Libraries/FatFs/Src/ff.c **** 
5902:./Libraries/FatFs/Src/ff.c **** 
5903:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
5904:./Libraries/FatFs/Src/ff.c **** #include <stdarg.h>
5905:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
5906:./Libraries/FatFs/Src/ff.c **** /* Put a character to the file                                           */
5907:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
5908:./Libraries/FatFs/Src/ff.c **** 
5909:./Libraries/FatFs/Src/ff.c **** typedef struct {
5910:./Libraries/FatFs/Src/ff.c **** 	FIL *fp;		/* Ptr to the writing file */
5911:./Libraries/FatFs/Src/ff.c **** 	int idx, nchr;	/* Write index of buf[] (-1:error), number of chars written */
5912:./Libraries/FatFs/Src/ff.c **** 	BYTE buf[64];	/* Write buffer */
5913:./Libraries/FatFs/Src/ff.c **** } putbuff;
5914:./Libraries/FatFs/Src/ff.c **** 
5915:./Libraries/FatFs/Src/ff.c **** 
5916:./Libraries/FatFs/Src/ff.c **** static
5917:./Libraries/FatFs/Src/ff.c **** void putc_bfd (		/* Buffered write with code conversion */
5918:./Libraries/FatFs/Src/ff.c **** 	putbuff* pb,
5919:./Libraries/FatFs/Src/ff.c **** 	TCHAR c
5920:./Libraries/FatFs/Src/ff.c **** )
5921:./Libraries/FatFs/Src/ff.c **** {
 8825              		.loc 1 5921 1 is_stmt 1 view -0
 8826              		.cfi_startproc
 8827              		@ args = 0, pretend = 0, frame = 8
 8828              		@ frame_needed = 0, uses_anonymous_args = 0
5922:./Libraries/FatFs/Src/ff.c **** 	UINT bw;
 8829              		.loc 1 5922 2 view .LVU3167
5923:./Libraries/FatFs/Src/ff.c **** 	int i;
 8830              		.loc 1 5923 2 view .LVU3168
5924:./Libraries/FatFs/Src/ff.c **** 
5925:./Libraries/FatFs/Src/ff.c **** 
5926:./Libraries/FatFs/Src/ff.c **** 	if (_USE_STRFUNC == 2 && c == '\n') {	 /* LF -> CRLF conversion */
 8831              		.loc 1 5926 2 view .LVU3169
 8832              		.loc 1 5926 5 is_stmt 0 view .LVU3170
 8833 0000 0A29     		cmp	r1, #10
5921:./Libraries/FatFs/Src/ff.c **** 	UINT bw;
 8834              		.loc 1 5921 1 view .LVU3171
 8835 0002 70B5     		push	{r4, r5, r6, lr}
 8836              	.LCFI84:
 8837              		.cfi_def_cfa_offset 16
 8838              		.cfi_offset 4, -16
 8839              		.cfi_offset 5, -12
 8840              		.cfi_offset 6, -8
 8841              		.cfi_offset 14, -4
 8842 0004 0E46     		mov	r6, r1
 8843 0006 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccaQXGqa.s 			page 309


 8844              	.LCFI85:
 8845              		.cfi_def_cfa_offset 24
5921:./Libraries/FatFs/Src/ff.c **** 	UINT bw;
 8846              		.loc 1 5921 1 view .LVU3172
 8847 0008 0446     		mov	r4, r0
 8848              		.loc 1 5926 5 view .LVU3173
 8849 000a 1AD0     		beq	.L841
 8850              	.LVL863:
 8851              	.L836:
5927:./Libraries/FatFs/Src/ff.c **** 		putc_bfd(pb, '\r');
5928:./Libraries/FatFs/Src/ff.c **** 	}
5929:./Libraries/FatFs/Src/ff.c **** 
5930:./Libraries/FatFs/Src/ff.c **** 	i = pb->idx;		/* Write index of pb->buf[] */
 8852              		.loc 1 5930 2 is_stmt 1 view .LVU3174
 8853              		.loc 1 5930 4 is_stmt 0 view .LVU3175
 8854 000c 6568     		ldr	r5, [r4, #4]
 8855              	.LVL864:
5931:./Libraries/FatFs/Src/ff.c **** 	if (i < 0) return;
 8856              		.loc 1 5931 2 is_stmt 1 view .LVU3176
 8857              		.loc 1 5931 5 is_stmt 0 view .LVU3177
 8858 000e 002D     		cmp	r5, #0
 8859 0010 08DB     		blt	.L835
5932:./Libraries/FatFs/Src/ff.c **** 
5933:./Libraries/FatFs/Src/ff.c **** #if _LFN_UNICODE
5934:./Libraries/FatFs/Src/ff.c **** #if _STRF_ENCODE == 3			/* Write a character in UTF-8 */
5935:./Libraries/FatFs/Src/ff.c **** 	if (c < 0x80) {				/* 7-bit */
5936:./Libraries/FatFs/Src/ff.c **** 		pb->buf[i++] = (BYTE)c;
5937:./Libraries/FatFs/Src/ff.c **** 	} else {
5938:./Libraries/FatFs/Src/ff.c **** 		if (c < 0x800) {		/* 11-bit */
5939:./Libraries/FatFs/Src/ff.c **** 			pb->buf[i++] = (BYTE)(0xC0 | c >> 6);
5940:./Libraries/FatFs/Src/ff.c **** 		} else {				/* 16-bit */
5941:./Libraries/FatFs/Src/ff.c **** 			pb->buf[i++] = (BYTE)(0xE0 | c >> 12);
5942:./Libraries/FatFs/Src/ff.c **** 			pb->buf[i++] = (BYTE)(0x80 | (c >> 6 & 0x3F));
5943:./Libraries/FatFs/Src/ff.c **** 		}
5944:./Libraries/FatFs/Src/ff.c **** 		pb->buf[i++] = (BYTE)(0x80 | (c & 0x3F));
5945:./Libraries/FatFs/Src/ff.c **** 	}
5946:./Libraries/FatFs/Src/ff.c **** #elif _STRF_ENCODE == 2			/* Write a character in UTF-16BE */
5947:./Libraries/FatFs/Src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5948:./Libraries/FatFs/Src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5949:./Libraries/FatFs/Src/ff.c **** #elif _STRF_ENCODE == 1			/* Write a character in UTF-16LE */
5950:./Libraries/FatFs/Src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5951:./Libraries/FatFs/Src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5952:./Libraries/FatFs/Src/ff.c **** #else							/* Write a character in ANSI/OEM */
5953:./Libraries/FatFs/Src/ff.c **** 	c = ff_convert(c, 0);	/* Unicode -> OEM */
5954:./Libraries/FatFs/Src/ff.c **** 	if (!c) c = '?';
5955:./Libraries/FatFs/Src/ff.c **** 	if (c >= 0x100)
5956:./Libraries/FatFs/Src/ff.c **** 		pb->buf[i++] = (BYTE)(c >> 8);
5957:./Libraries/FatFs/Src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5958:./Libraries/FatFs/Src/ff.c **** #endif
5959:./Libraries/FatFs/Src/ff.c **** #else							/* Write a character without conversion */
5960:./Libraries/FatFs/Src/ff.c **** 	pb->buf[i++] = (BYTE)c;
 8860              		.loc 1 5960 2 is_stmt 1 view .LVU3178
 8861              		.loc 1 5960 15 is_stmt 0 view .LVU3179
 8862 0012 6319     		adds	r3, r4, r5
 8863              		.loc 1 5960 11 view .LVU3180
 8864 0014 0135     		adds	r5, r5, #1
 8865              	.LVL865:
ARM GAS  /tmp/ccaQXGqa.s 			page 310


5961:./Libraries/FatFs/Src/ff.c **** #endif
5962:./Libraries/FatFs/Src/ff.c **** 
5963:./Libraries/FatFs/Src/ff.c **** 	if (i >= (int)(sizeof pb->buf) - 3) {	/* Write buffered characters to the file */
 8866              		.loc 1 5963 5 view .LVU3181
 8867 0016 3C2D     		cmp	r5, #60
5960:./Libraries/FatFs/Src/ff.c **** #endif
 8868              		.loc 1 5960 15 view .LVU3182
 8869 0018 1E73     		strb	r6, [r3, #12]
 8870              		.loc 1 5963 2 is_stmt 1 view .LVU3183
 8871              		.loc 1 5963 5 is_stmt 0 view .LVU3184
 8872 001a 05DC     		bgt	.L842
 8873              	.LVL866:
 8874              	.L839:
5964:./Libraries/FatFs/Src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
5965:./Libraries/FatFs/Src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
5966:./Libraries/FatFs/Src/ff.c **** 	}
5967:./Libraries/FatFs/Src/ff.c **** 	pb->idx = i;
 8875              		.loc 1 5967 2 is_stmt 1 view .LVU3185
5968:./Libraries/FatFs/Src/ff.c **** 	pb->nchr++;
 8876              		.loc 1 5968 10 is_stmt 0 view .LVU3186
 8877 001c A368     		ldr	r3, [r4, #8]
5967:./Libraries/FatFs/Src/ff.c **** 	pb->nchr++;
 8878              		.loc 1 5967 10 view .LVU3187
 8879 001e 6560     		str	r5, [r4, #4]
 8880              		.loc 1 5968 2 is_stmt 1 view .LVU3188
 8881              		.loc 1 5968 10 is_stmt 0 view .LVU3189
 8882 0020 0133     		adds	r3, r3, #1
 8883 0022 A360     		str	r3, [r4, #8]
 8884              	.L835:
5969:./Libraries/FatFs/Src/ff.c **** }
 8885              		.loc 1 5969 1 view .LVU3190
 8886 0024 02B0     		add	sp, sp, #8
 8887              	.LCFI86:
 8888              		.cfi_remember_state
 8889              		.cfi_def_cfa_offset 16
 8890              		@ sp needed
 8891 0026 70BD     		pop	{r4, r5, r6, pc}
 8892              	.LVL867:
 8893              	.L842:
 8894              	.LCFI87:
 8895              		.cfi_restore_state
5964:./Libraries/FatFs/Src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
 8896              		.loc 1 5964 3 is_stmt 1 view .LVU3191
5964:./Libraries/FatFs/Src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
 8897              		.loc 1 5964 21 is_stmt 0 view .LVU3192
 8898 0028 2146     		mov	r1, r4
5964:./Libraries/FatFs/Src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
 8899              		.loc 1 5964 3 view .LVU3193
 8900 002a 01AB     		add	r3, sp, #4
 8901 002c 2A46     		mov	r2, r5
 8902 002e 51F80C0B 		ldr	r0, [r1], #12
 8903 0032 FFF7FEFF 		bl	f_write
 8904              	.LVL868:
5965:./Libraries/FatFs/Src/ff.c **** 	}
 8905              		.loc 1 5965 3 is_stmt 1 view .LVU3194
5965:./Libraries/FatFs/Src/ff.c **** 	}
 8906              		.loc 1 5965 27 is_stmt 0 view .LVU3195
ARM GAS  /tmp/ccaQXGqa.s 			page 311


 8907 0036 019B     		ldr	r3, [sp, #4]
 8908 0038 5D1B     		subs	r5, r3, r5
 8909              	.LVL869:
5965:./Libraries/FatFs/Src/ff.c **** 	}
 8910              		.loc 1 5965 27 view .LVU3196
 8911 003a 18BF     		it	ne
 8912 003c 4FF0FF35 		movne	r5, #-1
 8913 0040 ECE7     		b	.L839
 8914              	.LVL870:
 8915              	.L841:
5927:./Libraries/FatFs/Src/ff.c **** 	}
 8916              		.loc 1 5927 3 is_stmt 1 view .LVU3197
 8917 0042 0D21     		movs	r1, #13
 8918              	.LVL871:
5927:./Libraries/FatFs/Src/ff.c **** 	}
 8919              		.loc 1 5927 3 is_stmt 0 view .LVU3198
 8920 0044 FFF7DCFF 		bl	putc_bfd
 8921              	.LVL872:
5927:./Libraries/FatFs/Src/ff.c **** 	}
 8922              		.loc 1 5927 3 view .LVU3199
 8923 0048 E0E7     		b	.L836
 8924              		.cfi_endproc
 8925              	.LFE393:
 8927 004a 00BF     		.section	.text.putc_flush,"ax",%progbits
 8928              		.align	1
 8929              		.p2align 2,,3
 8930              		.syntax unified
 8931              		.thumb
 8932              		.thumb_func
 8933              		.fpu fpv5-d16
 8935              	putc_flush:
 8936              	.LVL873:
 8937              	.LFB394:
5970:./Libraries/FatFs/Src/ff.c **** 
5971:./Libraries/FatFs/Src/ff.c **** 
5972:./Libraries/FatFs/Src/ff.c **** static
5973:./Libraries/FatFs/Src/ff.c **** int putc_flush (		/* Flush left characters in the buffer */
5974:./Libraries/FatFs/Src/ff.c **** 	putbuff* pb
5975:./Libraries/FatFs/Src/ff.c **** )
5976:./Libraries/FatFs/Src/ff.c **** {
 8938              		.loc 1 5976 1 is_stmt 1 view -0
 8939              		.cfi_startproc
 8940              		@ args = 0, pretend = 0, frame = 8
 8941              		@ frame_needed = 0, uses_anonymous_args = 0
5977:./Libraries/FatFs/Src/ff.c **** 	UINT nw;
 8942              		.loc 1 5977 2 view .LVU3201
5978:./Libraries/FatFs/Src/ff.c **** 
5979:./Libraries/FatFs/Src/ff.c **** 	if (   pb->idx >= 0	/* Flush buffered characters to the file */
 8943              		.loc 1 5979 2 view .LVU3202
 8944              		.loc 1 5979 11 is_stmt 0 view .LVU3203
 8945 0000 4268     		ldr	r2, [r0, #4]
 8946              		.loc 1 5979 5 view .LVU3204
 8947 0002 002A     		cmp	r2, #0
 8948 0004 14DB     		blt	.L850
5980:./Libraries/FatFs/Src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
 8949              		.loc 1 5980 24 view .LVU3205
 8950 0006 0146     		mov	r1, r0
ARM GAS  /tmp/ccaQXGqa.s 			page 312


5976:./Libraries/FatFs/Src/ff.c **** 	UINT nw;
 8951              		.loc 1 5976 1 view .LVU3206
 8952 0008 10B5     		push	{r4, lr}
 8953              	.LCFI88:
 8954              		.cfi_def_cfa_offset 8
 8955              		.cfi_offset 4, -8
 8956              		.cfi_offset 14, -4
 8957 000a 82B0     		sub	sp, sp, #8
 8958              	.LCFI89:
 8959              		.cfi_def_cfa_offset 16
 8960 000c 0446     		mov	r4, r0
 8961              		.loc 1 5980 6 view .LVU3207
 8962 000e 51F80C0B 		ldr	r0, [r1], #12
 8963              	.LVL874:
 8964              		.loc 1 5980 6 view .LVU3208
 8965 0012 01AB     		add	r3, sp, #4
 8966 0014 FFF7FEFF 		bl	f_write
 8967              	.LVL875:
 8968              		.loc 1 5980 3 view .LVU3209
 8969 0018 30B9     		cbnz	r0, .L846
5981:./Libraries/FatFs/Src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
 8970              		.loc 1 5981 3 view .LVU3210
 8971 001a 6268     		ldr	r2, [r4, #4]
 8972 001c 019B     		ldr	r3, [sp, #4]
 8973 001e 9A42     		cmp	r2, r3
 8974 0020 02D1     		bne	.L846
 8975              		.loc 1 5981 27 is_stmt 1 discriminator 1 view .LVU3211
 8976              		.loc 1 5981 36 is_stmt 0 discriminator 1 view .LVU3212
 8977 0022 A068     		ldr	r0, [r4, #8]
5982:./Libraries/FatFs/Src/ff.c **** 	return EOF;
5983:./Libraries/FatFs/Src/ff.c **** }
 8978              		.loc 1 5983 1 discriminator 1 view .LVU3213
 8979 0024 02B0     		add	sp, sp, #8
 8980              	.LCFI90:
 8981              		.cfi_remember_state
 8982              		.cfi_def_cfa_offset 8
 8983              		@ sp needed
 8984 0026 10BD     		pop	{r4, pc}
 8985              	.LVL876:
 8986              	.L846:
 8987              	.LCFI91:
 8988              		.cfi_restore_state
5982:./Libraries/FatFs/Src/ff.c **** 	return EOF;
 8989              		.loc 1 5982 9 view .LVU3214
 8990 0028 4FF0FF30 		mov	r0, #-1
 8991              		.loc 1 5983 1 view .LVU3215
 8992 002c 02B0     		add	sp, sp, #8
 8993              	.LCFI92:
 8994              		.cfi_def_cfa_offset 8
 8995              		@ sp needed
 8996 002e 10BD     		pop	{r4, pc}
 8997              	.LVL877:
 8998              	.L850:
 8999              	.LCFI93:
 9000              		.cfi_def_cfa_offset 0
 9001              		.cfi_restore 4
 9002              		.cfi_restore 14
ARM GAS  /tmp/ccaQXGqa.s 			page 313


5982:./Libraries/FatFs/Src/ff.c **** 	return EOF;
 9003              		.loc 1 5982 9 view .LVU3216
 9004 0030 4FF0FF30 		mov	r0, #-1
 9005              	.LVL878:
 9006              		.loc 1 5983 1 view .LVU3217
 9007 0034 7047     		bx	lr
 9008              		.cfi_endproc
 9009              	.LFE394:
 9011 0036 00BF     		.section	.text.f_sync,"ax",%progbits
 9012              		.align	1
 9013              		.p2align 2,,3
 9014              		.global	f_sync
 9015              		.syntax unified
 9016              		.thumb
 9017              		.thumb_func
 9018              		.fpu fpv5-d16
 9020              	f_sync:
 9021              	.LVL879:
 9022              	.LFB379:
3735:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 9023              		.loc 1 3735 1 is_stmt 1 view -0
 9024              		.cfi_startproc
 9025              		@ args = 0, pretend = 0, frame = 8
 9026              		@ frame_needed = 0, uses_anonymous_args = 0
3736:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
 9027              		.loc 1 3736 2 view .LVU3219
3737:./Libraries/FatFs/Src/ff.c **** 	DWORD tm;
 9028              		.loc 1 3737 2 view .LVU3220
3738:./Libraries/FatFs/Src/ff.c **** 	BYTE *dir;
 9029              		.loc 1 3738 2 view .LVU3221
3739:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 9030              		.loc 1 3739 2 view .LVU3222
3745:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 9031              		.loc 1 3745 2 view .LVU3223
3735:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 9032              		.loc 1 3735 1 is_stmt 0 view .LVU3224
 9033 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9034              	.LCFI94:
 9035              		.cfi_def_cfa_offset 20
 9036              		.cfi_offset 4, -20
 9037              		.cfi_offset 5, -16
 9038              		.cfi_offset 6, -12
 9039              		.cfi_offset 7, -8
 9040              		.cfi_offset 14, -4
 9041 0002 83B0     		sub	sp, sp, #12
 9042              	.LCFI95:
 9043              		.cfi_def_cfa_offset 32
3735:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 9044              		.loc 1 3735 1 view .LVU3225
 9045 0004 0546     		mov	r5, r0
3745:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 9046              		.loc 1 3745 8 view .LVU3226
 9047 0006 01A9     		add	r1, sp, #4
 9048 0008 FFF7FEFF 		bl	validate
 9049              	.LVL880:
3746:./Libraries/FatFs/Src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
 9050              		.loc 1 3746 2 is_stmt 1 view .LVU3227
ARM GAS  /tmp/ccaQXGqa.s 			page 314


3746:./Libraries/FatFs/Src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
 9051              		.loc 1 3746 5 is_stmt 0 view .LVU3228
 9052 000c 68B1     		cbz	r0, .L852
 9053 000e B0F10C03 		subs	r3, r0, #12
 9054 0012 0446     		mov	r4, r0
 9055 0014 18BF     		it	ne
 9056 0016 0123     		movne	r3, #1
 9057              	.L853:
 9058              	.LVL881:
3801:./Libraries/FatFs/Src/ff.c **** }
 9059              		.loc 1 3801 2 is_stmt 1 view .LVU3229
 9060 0018 0198     		ldr	r0, [sp, #4]
 9061              	.LVL882:
 9062              	.LBB1252:
 9063              	.LBI1252:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 9064              		.loc 1 751 6 view .LVU3230
 9065              	.LBB1253:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 9066              		.loc 1 756 2 view .LVU3231
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 9067              		.loc 1 756 5 is_stmt 0 view .LVU3232
 9068 001a 18B1     		cbz	r0, .L856
 9069 001c 13B1     		cbz	r3, .L856
 9070 001e 2146     		mov	r1, r4
 9071 0020 FFF7FEFF 		bl	unlock_fs.part.0
 9072              	.LVL883:
 9073              	.L856:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 9074              		.loc 1 756 5 view .LVU3233
 9075              	.LBE1253:
 9076              	.LBE1252:
3801:./Libraries/FatFs/Src/ff.c **** }
 9077              		.loc 1 3801 19 is_stmt 1 discriminator 1 view .LVU3234
3802:./Libraries/FatFs/Src/ff.c **** 
 9078              		.loc 1 3802 1 is_stmt 0 discriminator 1 view .LVU3235
 9079 0024 2046     		mov	r0, r4
 9080 0026 03B0     		add	sp, sp, #12
 9081              	.LCFI96:
 9082              		.cfi_remember_state
 9083              		.cfi_def_cfa_offset 20
 9084              		@ sp needed
 9085 0028 F0BD     		pop	{r4, r5, r6, r7, pc}
 9086              	.LVL884:
 9087              	.L852:
 9088              	.LCFI97:
 9089              		.cfi_restore_state
3747:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 9090              		.loc 1 3747 3 is_stmt 1 view .LVU3236
3747:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 9091              		.loc 1 3747 9 is_stmt 0 view .LVU3237
 9092 002a 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
3747:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 9093              		.loc 1 3747 6 view .LVU3238
 9094 002c 13F04004 		ands	r4, r3, #64
 9095 0030 13D0     		beq	.L860
3749:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
ARM GAS  /tmp/ccaQXGqa.s 			page 315


 9096              		.loc 1 3749 4 is_stmt 1 view .LVU3239
3749:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
 9097              		.loc 1 3749 7 is_stmt 0 view .LVU3240
 9098 0032 1B06     		lsls	r3, r3, #24
 9099 0034 13D4     		bmi	.L869
 9100              	.LVL885:
 9101              	.L854:
3755:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 9102              		.loc 1 3755 4 is_stmt 1 view .LVU3241
3755:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 9103              		.loc 1 3755 9 is_stmt 0 view .LVU3242
 9104 0036 FFF7FEFF 		bl	get_fattime
 9105              	.LVL886:
3785:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK) {
 9106              		.loc 1 3785 11 view .LVU3243
 9107 003a 019C     		ldr	r4, [sp, #4]
 9108 003c 696A     		ldr	r1, [r5, #36]
3755:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 9109              		.loc 1 3755 9 view .LVU3244
 9110 003e 0646     		mov	r6, r0
 9111              	.LVL887:
3785:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK) {
 9112              		.loc 1 3785 5 is_stmt 1 view .LVU3245
 9113              	.LBB1254:
 9114              	.LBI1254:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 9115              		.loc 1 912 9 view .LVU3246
 9116              	.LBB1255:
 917:./Libraries/FatFs/Src/ff.c **** 
 9117              		.loc 1 917 2 view .LVU3247
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 9118              		.loc 1 920 2 view .LVU3248
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 9119              		.loc 1 920 5 is_stmt 0 view .LVU3249
 9120 0040 236B     		ldr	r3, [r4, #48]
 9121 0042 9942     		cmp	r1, r3
 9122 0044 1BD0     		beq	.L857
 9123 0046 2046     		mov	r0, r4
 9124              	.LVL888:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 9125              		.loc 1 920 5 view .LVU3250
 9126 0048 FFF7FEFF 		bl	move_window.part.0
 9127              	.LVL889:
 932:./Libraries/FatFs/Src/ff.c **** }
 9128              		.loc 1 932 2 is_stmt 1 view .LVU3251
 932:./Libraries/FatFs/Src/ff.c **** }
 9129              		.loc 1 932 2 is_stmt 0 view .LVU3252
 9130              	.LBE1255:
 9131              	.LBE1254:
3786:./Libraries/FatFs/Src/ff.c **** 					dir = fp->dir_ptr;
 9132              		.loc 1 3786 5 is_stmt 1 view .LVU3253
3786:./Libraries/FatFs/Src/ff.c **** 					dir = fp->dir_ptr;
 9133              		.loc 1 3786 8 is_stmt 0 view .LVU3254
 9134 004c 0446     		mov	r4, r0
 9135 004e A8B1     		cbz	r0, .L858
 9136 0050 B0F10C03 		subs	r3, r0, #12
 9137 0054 18BF     		it	ne
ARM GAS  /tmp/ccaQXGqa.s 			page 316


 9138 0056 0123     		movne	r3, #1
 9139 0058 DEE7     		b	.L853
 9140              	.LVL890:
 9141              	.L860:
3786:./Libraries/FatFs/Src/ff.c **** 					dir = fp->dir_ptr;
 9142              		.loc 1 3786 8 view .LVU3255
 9143 005a 0123     		movs	r3, #1
 9144 005c DCE7     		b	.L853
 9145              	.L869:
3750:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 9146              		.loc 1 3750 5 is_stmt 1 view .LVU3256
3750:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 9147              		.loc 1 3750 9 is_stmt 0 view .LVU3257
 9148 005e 0198     		ldr	r0, [sp, #4]
 9149              	.LVL891:
3750:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 9150              		.loc 1 3750 9 view .LVU3258
 9151 0060 0123     		movs	r3, #1
 9152 0062 2A6A     		ldr	r2, [r5, #32]
 9153 0064 05F13001 		add	r1, r5, #48
 9154 0068 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 9155 006a FFF7FEFF 		bl	disk_write
 9156              	.LVL892:
3750:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 9157              		.loc 1 3750 8 view .LVU3259
 9158 006e 0028     		cmp	r0, #0
 9159 0070 38D1     		bne	.L870
3750:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 9160              		.loc 1 3750 87 is_stmt 1 discriminator 2 view .LVU3260
3751:./Libraries/FatFs/Src/ff.c **** 			}
 9161              		.loc 1 3751 5 discriminator 2 view .LVU3261
3751:./Libraries/FatFs/Src/ff.c **** 			}
 9162              		.loc 1 3751 14 is_stmt 0 discriminator 2 view .LVU3262
 9163 0072 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 9164 0074 03F07F03 		and	r3, r3, #127
 9165 0078 2B75     		strb	r3, [r5, #20]
 9166 007a DCE7     		b	.L854
 9167              	.LVL893:
 9168              	.L858:
3751:./Libraries/FatFs/Src/ff.c **** 			}
 9169              		.loc 1 3751 14 discriminator 2 view .LVU3263
 9170 007c 019C     		ldr	r4, [sp, #4]
 9171              	.LVL894:
 9172              	.L857:
3787:./Libraries/FatFs/Src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
 9173              		.loc 1 3787 6 is_stmt 1 view .LVU3264
3787:./Libraries/FatFs/Src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
 9174              		.loc 1 3787 10 is_stmt 0 view .LVU3265
 9175 007e AB6A     		ldr	r3, [r5, #40]
 9176              	.LVL895:
3788:./Libraries/FatFs/Src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
 9177              		.loc 1 3788 6 is_stmt 1 view .LVU3266
3788:./Libraries/FatFs/Src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
 9178              		.loc 1 3788 20 is_stmt 0 view .LVU3267
 9179 0080 DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 9180 0082 42F02002 		orr	r2, r2, #32
 9181 0086 DA72     		strb	r2, [r3, #11]
ARM GAS  /tmp/ccaQXGqa.s 			page 317


3789:./Libraries/FatFs/Src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
 9182              		.loc 1 3789 6 is_stmt 1 view .LVU3268
 9183 0088 AA68     		ldr	r2, [r5, #8]
 9184 008a 2968     		ldr	r1, [r5]
 9185              	.LVL896:
 9186              	.LBB1256:
 9187              	.LBI1256:
1650:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
 9188              		.loc 1 1650 6 view .LVU3269
 9189              	.LBB1257:
1656:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 9190              		.loc 1 1656 2 view .LVU3270
 9191              	.LBB1258:
 9192              	.LBI1258:
 654:./Libraries/FatFs/Src/ff.c **** {
 9193              		.loc 1 654 6 view .LVU3271
 9194              	.LBB1259:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9195              		.loc 1 656 2 view .LVU3272
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9196              		.loc 1 656 26 is_stmt 0 view .LVU3273
 9197 008c C2F30720 		ubfx	r0, r2, #8, #8
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9198              		.loc 1 656 11 view .LVU3274
 9199 0090 9A76     		strb	r2, [r3, #26]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9200              		.loc 1 656 22 is_stmt 1 view .LVU3275
 9201              	.LVL897:
 657:./Libraries/FatFs/Src/ff.c **** }
 9202              		.loc 1 657 2 view .LVU3276
 657:./Libraries/FatFs/Src/ff.c **** }
 9203              		.loc 1 657 11 is_stmt 0 view .LVU3277
 9204 0092 D876     		strb	r0, [r3, #27]
 9205              	.LVL898:
 657:./Libraries/FatFs/Src/ff.c **** }
 9206              		.loc 1 657 11 view .LVU3278
 9207              	.LBE1259:
 9208              	.LBE1258:
1657:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 9209              		.loc 1 1657 2 is_stmt 1 view .LVU3279
1657:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 9210              		.loc 1 1657 5 is_stmt 0 view .LVU3280
 9211 0094 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 9212              	.LVL899:
1657:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 9213              		.loc 1 1657 5 view .LVU3281
 9214 0096 0329     		cmp	r1, #3
 9215 0098 03D1     		bne	.L859
1658:./Libraries/FatFs/Src/ff.c **** 	}
 9216              		.loc 1 1658 3 is_stmt 1 view .LVU3282
1658:./Libraries/FatFs/Src/ff.c **** 	}
 9217              		.loc 1 1658 42 is_stmt 0 view .LVU3283
 9218 009a 120C     		lsrs	r2, r2, #16
 9219              	.LVL900:
 9220              	.LBB1260:
 9221              	.LBI1260:
 654:./Libraries/FatFs/Src/ff.c **** {
ARM GAS  /tmp/ccaQXGqa.s 			page 318


 9222              		.loc 1 654 6 is_stmt 1 view .LVU3284
 9223              	.LBB1261:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9224              		.loc 1 656 2 view .LVU3285
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9225              		.loc 1 656 26 is_stmt 0 view .LVU3286
 9226 009c 110A     		lsrs	r1, r2, #8
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9227              		.loc 1 656 11 view .LVU3287
 9228 009e 1A75     		strb	r2, [r3, #20]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9229              		.loc 1 656 22 is_stmt 1 view .LVU3288
 9230              	.LVL901:
 657:./Libraries/FatFs/Src/ff.c **** }
 9231              		.loc 1 657 2 view .LVU3289
 657:./Libraries/FatFs/Src/ff.c **** }
 9232              		.loc 1 657 11 is_stmt 0 view .LVU3290
 9233 00a0 5975     		strb	r1, [r3, #21]
 9234              	.LVL902:
 9235              	.L859:
 657:./Libraries/FatFs/Src/ff.c **** }
 9236              		.loc 1 657 11 view .LVU3291
 9237              	.LBE1261:
 9238              	.LBE1260:
 9239              	.LBE1257:
 9240              	.LBE1256:
3790:./Libraries/FatFs/Src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
 9241              		.loc 1 3790 6 is_stmt 1 view .LVU3292
3790:./Libraries/FatFs/Src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
 9242              		.loc 1 3790 49 is_stmt 0 view .LVU3293
 9243 00a2 EA68     		ldr	r2, [r5, #12]
 9244              	.LVL903:
 9245              	.LBB1262:
 9246              	.LBI1262:
 661:./Libraries/FatFs/Src/ff.c **** {
 9247              		.loc 1 661 6 is_stmt 1 view .LVU3294
 9248              	.LBB1263:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9249              		.loc 1 663 2 view .LVU3295
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9250              		.loc 1 663 2 is_stmt 0 view .LVU3296
 9251              	.LBE1263:
 9252              	.LBE1262:
 9253              	.LBB1269:
 9254              	.LBB1270:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9255              		.loc 1 663 26 view .LVU3297
 9256 00a4 370A     		lsrs	r7, r6, #8
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9257              		.loc 1 664 26 view .LVU3298
 9258 00a6 310C     		lsrs	r1, r6, #16
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9259              		.loc 1 663 11 view .LVU3299
 9260 00a8 9E75     		strb	r6, [r3, #22]
 9261              	.LBE1270:
 9262              	.LBE1269:
 9263              	.LBB1274:
ARM GAS  /tmp/ccaQXGqa.s 			page 319


 9264              	.LBB1264:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9265              		.loc 1 663 26 view .LVU3300
 9266 00aa 100A     		lsrs	r0, r2, #8
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9267              		.loc 1 663 11 view .LVU3301
 9268 00ac 1A77     		strb	r2, [r3, #28]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9269              		.loc 1 663 22 is_stmt 1 view .LVU3302
 9270              	.LVL904:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9271              		.loc 1 664 2 view .LVU3303
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9272              		.loc 1 664 2 is_stmt 0 view .LVU3304
 9273              	.LBE1264:
 9274              	.LBE1274:
 9275              	.LBB1275:
 9276              	.LBB1271:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9277              		.loc 1 664 11 view .LVU3305
 9278 00ae DF75     		strb	r7, [r3, #23]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9279              		.loc 1 665 26 view .LVU3306
 9280 00b0 360E     		lsrs	r6, r6, #24
 9281              	.LVL905:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9282              		.loc 1 665 26 view .LVU3307
 9283              	.LBE1271:
 9284              	.LBE1275:
 9285              	.LBB1276:
 9286              	.LBB1265:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9287              		.loc 1 664 11 view .LVU3308
 9288 00b2 5877     		strb	r0, [r3, #29]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9289              		.loc 1 664 22 is_stmt 1 view .LVU3309
 9290              	.LVL906:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9291              		.loc 1 665 2 view .LVU3310
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9292              		.loc 1 665 2 is_stmt 0 view .LVU3311
 9293              	.LBE1265:
 9294              	.LBE1276:
3793:./Libraries/FatFs/Src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
 9295              		.loc 1 3793 16 view .LVU3312
 9296 00b4 0127     		movs	r7, #1
 9297              	.LBB1277:
 9298              	.LBB1272:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9299              		.loc 1 665 11 view .LVU3313
 9300 00b6 1976     		strb	r1, [r3, #24]
 9301              	.LBE1272:
 9302              	.LBE1277:
 9303              	.LBB1278:
 9304              	.LBB1266:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9305              		.loc 1 664 26 view .LVU3314
ARM GAS  /tmp/ccaQXGqa.s 			page 320


 9306 00b8 100C     		lsrs	r0, r2, #16
 9307              	.LVL907:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9308              		.loc 1 664 26 view .LVU3315
 9309              	.LBE1266:
 9310              	.LBE1278:
 9311              	.LBB1279:
 9312              	.LBB1280:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9313              		.loc 1 656 9 view .LVU3316
 9314 00ba 0021     		movs	r1, #0
 9315              	.LBE1280:
 9316              	.LBE1279:
 9317              	.LBB1282:
 9318              	.LBB1267:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9319              		.loc 1 665 26 view .LVU3317
 9320 00bc 120E     		lsrs	r2, r2, #24
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9321              		.loc 1 665 11 view .LVU3318
 9322 00be 9877     		strb	r0, [r3, #30]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9323              		.loc 1 665 22 is_stmt 1 view .LVU3319
 9324              	.LVL908:
 666:./Libraries/FatFs/Src/ff.c **** }
 9325              		.loc 1 666 2 view .LVU3320
 666:./Libraries/FatFs/Src/ff.c **** }
 9326              		.loc 1 666 2 is_stmt 0 view .LVU3321
 9327              	.LBE1267:
 9328              	.LBE1282:
3794:./Libraries/FatFs/Src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
 9329              		.loc 1 3794 12 view .LVU3322
 9330 00c0 2046     		mov	r0, r4
 9331              	.LBB1283:
 9332              	.LBB1268:
 666:./Libraries/FatFs/Src/ff.c **** }
 9333              		.loc 1 666 11 view .LVU3323
 9334 00c2 DA77     		strb	r2, [r3, #31]
 9335              	.LVL909:
 666:./Libraries/FatFs/Src/ff.c **** }
 9336              		.loc 1 666 11 view .LVU3324
 9337              	.LBE1268:
 9338              	.LBE1283:
3791:./Libraries/FatFs/Src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
 9339              		.loc 1 3791 6 is_stmt 1 view .LVU3325
 9340              	.LBB1284:
 9341              	.LBI1269:
 661:./Libraries/FatFs/Src/ff.c **** {
 9342              		.loc 1 661 6 view .LVU3326
 9343              	.LBB1273:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9344              		.loc 1 663 2 view .LVU3327
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9345              		.loc 1 663 22 view .LVU3328
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 9346              		.loc 1 664 2 view .LVU3329
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
ARM GAS  /tmp/ccaQXGqa.s 			page 321


 9347              		.loc 1 664 22 view .LVU3330
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9348              		.loc 1 665 2 view .LVU3331
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9349              		.loc 1 665 22 view .LVU3332
 666:./Libraries/FatFs/Src/ff.c **** }
 9350              		.loc 1 666 2 view .LVU3333
 666:./Libraries/FatFs/Src/ff.c **** }
 9351              		.loc 1 666 11 is_stmt 0 view .LVU3334
 9352 00c4 5E76     		strb	r6, [r3, #25]
 9353              	.LVL910:
 666:./Libraries/FatFs/Src/ff.c **** }
 9354              		.loc 1 666 11 view .LVU3335
 9355              	.LBE1273:
 9356              	.LBE1284:
3792:./Libraries/FatFs/Src/ff.c **** 					fs->wflag = 1;
 9357              		.loc 1 3792 6 is_stmt 1 view .LVU3336
 9358              	.LBB1285:
 9359              	.LBI1279:
 654:./Libraries/FatFs/Src/ff.c **** {
 9360              		.loc 1 654 6 view .LVU3337
 9361              	.LBB1281:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9362              		.loc 1 656 2 view .LVU3338
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9363              		.loc 1 656 9 is_stmt 0 view .LVU3339
 9364 00c6 9974     		strb	r1, [r3, #18]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 9365              		.loc 1 656 22 is_stmt 1 view .LVU3340
 657:./Libraries/FatFs/Src/ff.c **** }
 9366              		.loc 1 657 2 view .LVU3341
 9367              	.LVL911:
 657:./Libraries/FatFs/Src/ff.c **** }
 9368              		.loc 1 657 9 is_stmt 0 view .LVU3342
 9369 00c8 D974     		strb	r1, [r3, #19]
 9370              	.LVL912:
 657:./Libraries/FatFs/Src/ff.c **** }
 9371              		.loc 1 657 9 view .LVU3343
 9372              	.LBE1281:
 9373              	.LBE1285:
3793:./Libraries/FatFs/Src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
 9374              		.loc 1 3793 6 is_stmt 1 view .LVU3344
3793:./Libraries/FatFs/Src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
 9375              		.loc 1 3793 16 is_stmt 0 view .LVU3345
 9376 00ca E770     		strb	r7, [r4, #3]
3794:./Libraries/FatFs/Src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
 9377              		.loc 1 3794 6 is_stmt 1 view .LVU3346
3794:./Libraries/FatFs/Src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
 9378              		.loc 1 3794 12 is_stmt 0 view .LVU3347
 9379 00cc FFF7FEFF 		bl	sync_fs
 9380              	.LVL913:
3795:./Libraries/FatFs/Src/ff.c **** 				}
 9381              		.loc 1 3795 15 view .LVU3348
 9382 00d0 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
3794:./Libraries/FatFs/Src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
 9383              		.loc 1 3794 12 view .LVU3349
 9384 00d2 0446     		mov	r4, r0
ARM GAS  /tmp/ccaQXGqa.s 			page 322


 9385              	.LVL914:
3795:./Libraries/FatFs/Src/ff.c **** 				}
 9386              		.loc 1 3795 6 is_stmt 1 view .LVU3350
3795:./Libraries/FatFs/Src/ff.c **** 				}
 9387              		.loc 1 3795 15 is_stmt 0 view .LVU3351
 9388 00d4 23F04002 		bic	r2, r3, #64
 9389 00d8 B0F10C03 		subs	r3, r0, #12
 9390 00dc 2A75     		strb	r2, [r5, #20]
 9391 00de 18BF     		it	ne
 9392 00e0 0123     		movne	r3, #1
 9393 00e2 99E7     		b	.L853
 9394              	.LVL915:
 9395              	.L870:
3750:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 9396              		.loc 1 3750 62 is_stmt 1 discriminator 1 view .LVU3352
 9397 00e4 019B     		ldr	r3, [sp, #4]
 9398              	.LVL916:
 9399              	.LBB1286:
 9400              	.LBI1286:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 9401              		.loc 1 751 6 discriminator 1 view .LVU3353
 9402              	.LBB1287:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 9403              		.loc 1 756 2 discriminator 1 view .LVU3354
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 9404              		.loc 1 756 5 is_stmt 0 discriminator 1 view .LVU3355
 9405 00e6 23B1     		cbz	r3, .L861
 9406              	.LVL917:
 9407              	.LBB1288:
 9408              	.LBI1288:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 9409              		.loc 1 751 6 is_stmt 1 view .LVU3356
 9410              	.LBB1289:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 9411              		.loc 1 757 3 view .LVU3357
 9412 00e8 D868     		ldr	r0, [r3, #12]
 9413              	.LBE1289:
 9414              	.LBE1288:
 9415              	.LBE1287:
 9416              	.LBE1286:
3750:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 9417              		.loc 1 3750 62 is_stmt 0 view .LVU3358
 9418 00ea 0124     		movs	r4, #1
 9419              	.LBB1293:
 9420              	.LBB1292:
 9421              	.LBB1291:
 9422              	.LBB1290:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 9423              		.loc 1 757 3 view .LVU3359
 9424 00ec FFF7FEFF 		bl	ff_rel_grant
 9425              	.LVL918:
 759:./Libraries/FatFs/Src/ff.c **** 
 9426              		.loc 1 759 1 view .LVU3360
 9427 00f0 98E7     		b	.L856
 9428              	.LVL919:
 9429              	.L861:
 759:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 323


 9430              		.loc 1 759 1 view .LVU3361
 9431              	.LBE1290:
 9432              	.LBE1291:
 9433              	.LBE1292:
 9434              	.LBE1293:
3750:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 9435              		.loc 1 3750 62 view .LVU3362
 9436 00f2 0124     		movs	r4, #1
 9437 00f4 96E7     		b	.L856
 9438              		.cfi_endproc
 9439              	.LFE379:
 9441 00f6 00BF     		.section	.text.f_close,"ax",%progbits
 9442              		.align	1
 9443              		.p2align 2,,3
 9444              		.global	f_close
 9445              		.syntax unified
 9446              		.thumb
 9447              		.thumb_func
 9448              		.fpu fpv5-d16
 9450              	f_close:
 9451              	.LVL920:
 9452              	.LFB380:
3816:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 9453              		.loc 1 3816 1 is_stmt 1 view -0
 9454              		.cfi_startproc
 9455              		@ args = 0, pretend = 0, frame = 8
 9456              		@ frame_needed = 0, uses_anonymous_args = 0
3817:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
 9457              		.loc 1 3817 2 view .LVU3364
3818:./Libraries/FatFs/Src/ff.c **** 
 9458              		.loc 1 3818 2 view .LVU3365
3821:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK)
 9459              		.loc 1 3821 2 view .LVU3366
3816:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 9460              		.loc 1 3816 1 is_stmt 0 view .LVU3367
 9461 0000 30B5     		push	{r4, r5, lr}
 9462              	.LCFI98:
 9463              		.cfi_def_cfa_offset 12
 9464              		.cfi_offset 4, -12
 9465              		.cfi_offset 5, -8
 9466              		.cfi_offset 14, -4
 9467 0002 83B0     		sub	sp, sp, #12
 9468              	.LCFI99:
 9469              		.cfi_def_cfa_offset 24
3816:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 9470              		.loc 1 3816 1 view .LVU3368
 9471 0004 0546     		mov	r5, r0
3821:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK)
 9472              		.loc 1 3821 8 view .LVU3369
 9473 0006 FFF7FEFF 		bl	f_sync
 9474              	.LVL921:
3822:./Libraries/FatFs/Src/ff.c **** #endif
 9475              		.loc 1 3822 2 is_stmt 1 view .LVU3370
3822:./Libraries/FatFs/Src/ff.c **** #endif
 9476              		.loc 1 3822 5 is_stmt 0 view .LVU3371
 9477 000a 0446     		mov	r4, r0
 9478 000c 10B1     		cbz	r0, .L887
ARM GAS  /tmp/ccaQXGqa.s 			page 324


 9479              	.LVL922:
 9480              	.L872:
3839:./Libraries/FatFs/Src/ff.c **** }
 9481              		.loc 1 3839 2 is_stmt 1 view .LVU3372
3840:./Libraries/FatFs/Src/ff.c **** 
 9482              		.loc 1 3840 1 is_stmt 0 view .LVU3373
 9483 000e 2046     		mov	r0, r4
 9484 0010 03B0     		add	sp, sp, #12
 9485              	.LCFI100:
 9486              		.cfi_remember_state
 9487              		.cfi_def_cfa_offset 12
 9488              		@ sp needed
 9489 0012 30BD     		pop	{r4, r5, pc}
 9490              	.LVL923:
 9491              	.L887:
 9492              	.LCFI101:
 9493              		.cfi_restore_state
3825:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
 9494              		.loc 1 3825 3 is_stmt 1 view .LVU3374
3825:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
 9495              		.loc 1 3825 9 is_stmt 0 view .LVU3375
 9496 0014 01A9     		add	r1, sp, #4
 9497 0016 2846     		mov	r0, r5
 9498              	.LVL924:
3825:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {
 9499              		.loc 1 3825 9 view .LVU3376
 9500 0018 FFF7FEFF 		bl	validate
 9501              	.LVL925:
3826:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 9502              		.loc 1 3826 3 is_stmt 1 view .LVU3377
3826:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 9503              		.loc 1 3826 6 is_stmt 0 view .LVU3378
 9504 001c 0446     		mov	r4, r0
 9505 001e 0028     		cmp	r0, #0
 9506 0020 F5D1     		bne	.L872
3828:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK)
 9507              		.loc 1 3828 4 is_stmt 1 view .LVU3379
 9508              	.LVL926:
 9509              	.LBB1300:
 9510              	.LBI1300:
 840:./Libraries/FatFs/Src/ff.c **** 	UINT i			/* Semaphore index (1..) */
 9511              		.loc 1 840 9 view .LVU3380
 9512              	.LBB1301:
 844:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 9513              		.loc 1 844 2 view .LVU3381
 845:./Libraries/FatFs/Src/ff.c **** 
 9514              		.loc 1 845 2 view .LVU3382
 848:./Libraries/FatFs/Src/ff.c **** 		n = Files[i].ctr;
 9515              		.loc 1 848 2 view .LVU3383
 848:./Libraries/FatFs/Src/ff.c **** 		n = Files[i].ctr;
 9516              		.loc 1 848 5 is_stmt 0 view .LVU3384
 9517 0022 2B69     		ldr	r3, [r5, #16]
 9518 0024 013B     		subs	r3, r3, #1
 9519              	.LVL927:
 848:./Libraries/FatFs/Src/ff.c **** 		n = Files[i].ctr;
 9520              		.loc 1 848 5 view .LVU3385
 9521 0026 012B     		cmp	r3, #1
ARM GAS  /tmp/ccaQXGqa.s 			page 325


 9522 0028 13D8     		bhi	.L879
 849:./Libraries/FatFs/Src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 9523              		.loc 1 849 3 is_stmt 1 view .LVU3386
 849:./Libraries/FatFs/Src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 9524              		.loc 1 849 5 is_stmt 0 view .LVU3387
 9525 002a 0F49     		ldr	r1, .L890
 9526 002c 1801     		lsls	r0, r3, #4
 9527              	.LVL928:
 849:./Libraries/FatFs/Src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 9528              		.loc 1 849 5 view .LVU3388
 9529 002e 01EB0313 		add	r3, r1, r3, lsl #4
 9530              	.LVL929:
 849:./Libraries/FatFs/Src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 9531              		.loc 1 849 5 view .LVU3389
 9532 0032 9A89     		ldrh	r2, [r3, #12]
 9533              	.LVL930:
 850:./Libraries/FatFs/Src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 9534              		.loc 1 850 3 is_stmt 1 view .LVU3390
 850:./Libraries/FatFs/Src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 9535              		.loc 1 850 6 is_stmt 0 view .LVU3391
 9536 0034 B2F5807F 		cmp	r2, #256
 9537 0038 13D0     		beq	.L888
 851:./Libraries/FatFs/Src/ff.c **** 		Files[i].ctr = n;
 9538              		.loc 1 851 3 is_stmt 1 view .LVU3392
 851:./Libraries/FatFs/Src/ff.c **** 		Files[i].ctr = n;
 9539              		.loc 1 851 6 is_stmt 0 view .LVU3393
 9540 003a 62B9     		cbnz	r2, .L889
 9541              	.LVL931:
 9542              	.L875:
 853:./Libraries/FatFs/Src/ff.c **** 		res = FR_OK;
 9543              		.loc 1 853 15 is_stmt 1 view .LVU3394
 853:./Libraries/FatFs/Src/ff.c **** 		res = FR_OK;
 9544              		.loc 1 853 27 is_stmt 0 view .LVU3395
 9545 003c 0023     		movs	r3, #0
 9546 003e 0B50     		str	r3, [r1, r0]
 9547              	.LVL932:
 858:./Libraries/FatFs/Src/ff.c **** }
 9548              		.loc 1 858 2 is_stmt 1 view .LVU3396
 858:./Libraries/FatFs/Src/ff.c **** }
 9549              		.loc 1 858 2 is_stmt 0 view .LVU3397
 9550              	.LBE1301:
 9551              	.LBE1300:
3829:./Libraries/FatFs/Src/ff.c **** #endif
 9552              		.loc 1 3829 4 is_stmt 1 view .LVU3398
 9553              	.L878:
3832:./Libraries/FatFs/Src/ff.c **** 			}
 9554              		.loc 1 3832 5 view .LVU3399
3832:./Libraries/FatFs/Src/ff.c **** 			}
 9555              		.loc 1 3832 16 is_stmt 0 view .LVU3400
 9556 0040 0023     		movs	r3, #0
 9557 0042 2B60     		str	r3, [r5]
 9558              	.L873:
3835:./Libraries/FatFs/Src/ff.c **** #endif
 9559              		.loc 1 3835 4 is_stmt 1 view .LVU3401
 9560 0044 019B     		ldr	r3, [sp, #4]
 9561              	.LVL933:
 9562              	.LBB1303:
ARM GAS  /tmp/ccaQXGqa.s 			page 326


 9563              	.LBI1303:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 9564              		.loc 1 751 6 view .LVU3402
 9565              	.LBB1304:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 9566              		.loc 1 756 2 view .LVU3403
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 9567              		.loc 1 756 5 is_stmt 0 view .LVU3404
 9568 0046 002B     		cmp	r3, #0
 9569 0048 E1D0     		beq	.L872
 9570              	.LVL934:
 9571              	.LBB1305:
 9572              	.LBI1305:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 9573              		.loc 1 751 6 is_stmt 1 view .LVU3405
 9574              	.LBB1306:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 9575              		.loc 1 757 3 view .LVU3406
 9576 004a D868     		ldr	r0, [r3, #12]
 9577 004c FFF7FEFF 		bl	ff_rel_grant
 9578              	.LVL935:
 759:./Libraries/FatFs/Src/ff.c **** 
 9579              		.loc 1 759 1 is_stmt 0 view .LVU3407
 9580 0050 DDE7     		b	.L872
 9581              	.LVL936:
 9582              	.L879:
 759:./Libraries/FatFs/Src/ff.c **** 
 9583              		.loc 1 759 1 view .LVU3408
 9584              	.LBE1306:
 9585              	.LBE1305:
 9586              	.LBE1304:
 9587              	.LBE1303:
 9588              	.LBB1307:
 9589              	.LBB1302:
 856:./Libraries/FatFs/Src/ff.c **** 	}
 9590              		.loc 1 856 7 view .LVU3409
 9591 0052 0224     		movs	r4, #2
 9592 0054 F6E7     		b	.L873
 9593              	.LVL937:
 9594              	.L889:
 851:./Libraries/FatFs/Src/ff.c **** 		Files[i].ctr = n;
 9595              		.loc 1 851 14 is_stmt 1 view .LVU3410
 851:./Libraries/FatFs/Src/ff.c **** 		Files[i].ctr = n;
 9596              		.loc 1 851 15 is_stmt 0 view .LVU3411
 9597 0056 013A     		subs	r2, r2, #1
 9598              	.LVL938:
 851:./Libraries/FatFs/Src/ff.c **** 		Files[i].ctr = n;
 9599              		.loc 1 851 15 view .LVU3412
 9600 0058 92B2     		uxth	r2, r2
 9601              	.LVL939:
 852:./Libraries/FatFs/Src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 9602              		.loc 1 852 3 is_stmt 1 view .LVU3413
 852:./Libraries/FatFs/Src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 9603              		.loc 1 852 16 is_stmt 0 view .LVU3414
 9604 005a 9A81     		strh	r2, [r3, #12]	@ movhi
 853:./Libraries/FatFs/Src/ff.c **** 		res = FR_OK;
 9605              		.loc 1 853 3 is_stmt 1 view .LVU3415
ARM GAS  /tmp/ccaQXGqa.s 			page 327


 853:./Libraries/FatFs/Src/ff.c **** 		res = FR_OK;
 9606              		.loc 1 853 6 is_stmt 0 view .LVU3416
 9607 005c 002A     		cmp	r2, #0
 9608 005e EFD1     		bne	.L878
 9609 0060 ECE7     		b	.L875
 9610              	.L888:
 9611              	.LVL940:
 852:./Libraries/FatFs/Src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 9612              		.loc 1 852 3 is_stmt 1 view .LVU3417
 852:./Libraries/FatFs/Src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 9613              		.loc 1 852 16 is_stmt 0 view .LVU3418
 9614 0062 9C81     		strh	r4, [r3, #12]	@ movhi
 853:./Libraries/FatFs/Src/ff.c **** 		res = FR_OK;
 9615              		.loc 1 853 3 is_stmt 1 view .LVU3419
 9616 0064 EAE7     		b	.L875
 9617              	.L891:
 9618 0066 00BF     		.align	2
 9619              	.L890:
 9620 0068 00000000 		.word	.LANCHOR0
 9621              	.LBE1302:
 9622              	.LBE1307:
 9623              		.cfi_endproc
 9624              	.LFE380:
 9626              		.section	.text.f_lseek,"ax",%progbits
 9627              		.align	1
 9628              		.p2align 2,,3
 9629              		.global	f_lseek
 9630              		.syntax unified
 9631              		.thumb
 9632              		.thumb_func
 9633              		.fpu fpv5-d16
 9635              	f_lseek:
 9636              	.LVL941:
 9637              	.LFB381:
4005:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 9638              		.loc 1 4005 1 view -0
 9639              		.cfi_startproc
 9640              		@ args = 0, pretend = 0, frame = 16
 9641              		@ frame_needed = 0, uses_anonymous_args = 0
4006:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
 9642              		.loc 1 4006 2 view .LVU3421
4007:./Libraries/FatFs/Src/ff.c **** 	DWORD clst, bcs, nsect;
 9643              		.loc 1 4007 2 view .LVU3422
4008:./Libraries/FatFs/Src/ff.c **** 	FSIZE_t ifptr;
 9644              		.loc 1 4008 2 view .LVU3423
4009:./Libraries/FatFs/Src/ff.c **** #if _USE_FASTSEEK
 9645              		.loc 1 4009 2 view .LVU3424
4011:./Libraries/FatFs/Src/ff.c **** #endif
 9646              		.loc 1 4011 2 view .LVU3425
4014:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
 9647              		.loc 1 4014 2 view .LVU3426
4005:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 9648              		.loc 1 4005 1 is_stmt 0 view .LVU3427
 9649 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9650              	.LCFI102:
 9651              		.cfi_def_cfa_offset 36
 9652              		.cfi_offset 4, -36
ARM GAS  /tmp/ccaQXGqa.s 			page 328


 9653              		.cfi_offset 5, -32
 9654              		.cfi_offset 6, -28
 9655              		.cfi_offset 7, -24
 9656              		.cfi_offset 8, -20
 9657              		.cfi_offset 9, -16
 9658              		.cfi_offset 10, -12
 9659              		.cfi_offset 11, -8
 9660              		.cfi_offset 14, -4
 9661 0004 85B0     		sub	sp, sp, #20
 9662              	.LCFI103:
 9663              		.cfi_def_cfa_offset 56
4005:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 9664              		.loc 1 4005 1 view .LVU3428
 9665 0006 0D46     		mov	r5, r1
 9666 0008 0446     		mov	r4, r0
4014:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
 9667              		.loc 1 4014 8 view .LVU3429
 9668 000a 03A9     		add	r1, sp, #12
 9669              	.LVL942:
4014:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
 9670              		.loc 1 4014 8 view .LVU3430
 9671 000c FFF7FEFF 		bl	validate
 9672              	.LVL943:
4015:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 9673              		.loc 1 4015 2 is_stmt 1 view .LVU3431
4015:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 9674              		.loc 1 4015 5 is_stmt 0 view .LVU3432
 9675 0010 58B1     		cbz	r0, .L1007
 9676 0012 0646     		mov	r6, r0
 9677              	.LVL944:
 9678              	.L893:
4021:./Libraries/FatFs/Src/ff.c **** 
 9679              		.loc 1 4021 20 is_stmt 1 discriminator 1 view .LVU3433
 9680 0014 0398     		ldr	r0, [sp, #12]
 9681              	.LVL945:
 9682              	.LBB1366:
 9683              	.LBI1366:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 9684              		.loc 1 751 6 discriminator 1 view .LVU3434
 9685              	.LBB1367:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 9686              		.loc 1 756 2 discriminator 1 view .LVU3435
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 9687              		.loc 1 756 5 is_stmt 0 discriminator 1 view .LVU3436
 9688 0016 20B1     		cbz	r0, .L954
 9689 0018 0C2E     		cmp	r6, #12
 9690 001a 02D0     		beq	.L954
 9691              	.LVL946:
 9692              	.L914:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 9693              		.loc 1 756 5 discriminator 1 view .LVU3437
 9694              	.LBE1367:
 9695              	.LBE1366:
 9696              	.LBB1368:
 9697              	.LBB1369:
 9698 001c 3146     		mov	r1, r6
 9699 001e FFF7FEFF 		bl	unlock_fs.part.0
ARM GAS  /tmp/ccaQXGqa.s 			page 329


 9700              	.LVL947:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 9701              		.loc 1 756 5 discriminator 1 view .LVU3438
 9702              	.LBE1369:
 9703              	.LBE1368:
4152:./Libraries/FatFs/Src/ff.c **** }
 9704              		.loc 1 4152 19 is_stmt 1 view .LVU3439
 9705              	.L954:
4153:./Libraries/FatFs/Src/ff.c **** 
 9706              		.loc 1 4153 1 is_stmt 0 view .LVU3440
 9707 0022 3046     		mov	r0, r6
 9708 0024 05B0     		add	sp, sp, #20
 9709              	.LCFI104:
 9710              		.cfi_remember_state
 9711              		.cfi_def_cfa_offset 36
 9712              		@ sp needed
 9713 0026 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9714              	.LVL948:
 9715              	.L1007:
 9716              	.LCFI105:
 9717              		.cfi_restore_state
4015:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 9718              		.loc 1 4015 20 is_stmt 1 discriminator 1 view .LVU3441
4015:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 9719              		.loc 1 4015 24 is_stmt 0 discriminator 1 view .LVU3442
 9720 002a 667D     		ldrb	r6, [r4, #21]	@ zero_extendqisi2
 9721              	.LVL949:
4021:./Libraries/FatFs/Src/ff.c **** 
 9722              		.loc 1 4021 2 is_stmt 1 discriminator 1 view .LVU3443
4021:./Libraries/FatFs/Src/ff.c **** 
 9723              		.loc 1 4021 5 is_stmt 0 discriminator 1 view .LVU3444
 9724 002c 002E     		cmp	r6, #0
 9725 002e F1D1     		bne	.L893
4021:./Libraries/FatFs/Src/ff.c **** 
 9726              		.loc 1 4021 37 is_stmt 1 discriminator 2 view .LVU3445
4024:./Libraries/FatFs/Src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
 9727              		.loc 1 4024 2 discriminator 2 view .LVU3446
4024:./Libraries/FatFs/Src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
 9728              		.loc 1 4024 8 is_stmt 0 discriminator 2 view .LVU3447
 9729 0030 E26A     		ldr	r2, [r4, #44]
4024:./Libraries/FatFs/Src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
 9730              		.loc 1 4024 5 discriminator 2 view .LVU3448
 9731 0032 002A     		cmp	r2, #0
 9732 0034 4ED0     		beq	.L896
4025:./Libraries/FatFs/Src/ff.c **** 			tbl = fp->cltbl;
 9733              		.loc 1 4025 3 is_stmt 1 view .LVU3449
4025:./Libraries/FatFs/Src/ff.c **** 			tbl = fp->cltbl;
 9734              		.loc 1 4025 6 is_stmt 0 view .LVU3450
 9735 0036 6F1C     		adds	r7, r5, #1
 9736 0038 00F09D80 		beq	.L1008
4051:./Libraries/FatFs/Src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
 9737              		.loc 1 4051 4 is_stmt 1 view .LVU3451
 9738 003c E368     		ldr	r3, [r4, #12]
 9739 003e 9D42     		cmp	r5, r3
 9740 0040 28BF     		it	cs
 9741 0042 1D46     		movcs	r5, r3
 9742              	.LVL950:
ARM GAS  /tmp/ccaQXGqa.s 			page 330


4052:./Libraries/FatFs/Src/ff.c **** 			if (ofs) {
 9743              		.loc 1 4052 4 view .LVU3452
4052:./Libraries/FatFs/Src/ff.c **** 			if (ofs) {
 9744              		.loc 1 4052 13 is_stmt 0 view .LVU3453
 9745 0044 A561     		str	r5, [r4, #24]
4053:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
 9746              		.loc 1 4053 4 is_stmt 1 view .LVU3454
4053:./Libraries/FatFs/Src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
 9747              		.loc 1 4053 7 is_stmt 0 view .LVU3455
 9748 0046 002D     		cmp	r5, #0
 9749 0048 3DD0     		beq	.L1002
4054:./Libraries/FatFs/Src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
 9750              		.loc 1 4054 5 is_stmt 1 view .LVU3456
 9751              	.LVL951:
 9752              	.LBB1374:
 9753              	.LBI1374:
1440:./Libraries/FatFs/Src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
 9754              		.loc 1 1440 7 view .LVU3457
 9755              	.LBB1375:
1445:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs = fp->obj.fs;
 9756              		.loc 1 1445 2 view .LVU3458
1446:./Libraries/FatFs/Src/ff.c **** 
 9757              		.loc 1 1446 2 view .LVU3459
1449:./Libraries/FatFs/Src/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 9758              		.loc 1 1449 2 view .LVU3460
 9759              	.LBE1375:
 9760              	.LBE1374:
4054:./Libraries/FatFs/Src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
 9761              		.loc 1 4054 17 is_stmt 0 view .LVU3461
 9762 004a 6F1E     		subs	r7, r5, #1
 9763              	.LVL952:
 9764              	.LBB1378:
 9765              	.LBB1376:
1450:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
 9766              		.loc 1 1450 32 view .LVU3462
 9767 004c 2168     		ldr	r1, [r4]
1452:./Libraries/FatFs/Src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 9768              		.loc 1 1452 7 view .LVU3463
 9769 004e 5368     		ldr	r3, [r2, #4]
1449:./Libraries/FatFs/Src/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 9770              		.loc 1 1449 6 view .LVU3464
 9771 0050 0432     		adds	r2, r2, #4
 9772              	.LVL953:
1450:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
 9773              		.loc 1 1450 2 is_stmt 1 view .LVU3465
1450:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
 9774              		.loc 1 1450 19 is_stmt 0 view .LVU3466
 9775 0052 7F0A     		lsrs	r7, r7, #9
 9776              	.LVL954:
1450:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
 9777              		.loc 1 1450 32 view .LVU3467
 9778 0054 4989     		ldrh	r1, [r1, #10]
1450:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
 9779              		.loc 1 1450 5 view .LVU3468
 9780 0056 B7FBF1F1 		udiv	r1, r7, r1
 9781              	.LVL955:
1451:./Libraries/FatFs/Src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
ARM GAS  /tmp/ccaQXGqa.s 			page 331


 9782              		.loc 1 1451 2 is_stmt 1 view .LVU3469
1452:./Libraries/FatFs/Src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 9783              		.loc 1 1452 3 view .LVU3470
1453:./Libraries/FatFs/Src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 9784              		.loc 1 1453 3 view .LVU3471
1453:./Libraries/FatFs/Src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 9785              		.loc 1 1453 6 is_stmt 0 view .LVU3472
 9786 005a 33B9     		cbnz	r3, .L911
 9787 005c D0E0     		b	.L951
 9788              	.LVL956:
 9789              	.L1009:
1455:./Libraries/FatFs/Src/ff.c **** 	}
 9790              		.loc 1 1455 6 view .LVU3473
 9791 005e C91A     		subs	r1, r1, r3
 9792              	.LVL957:
1455:./Libraries/FatFs/Src/ff.c **** 	}
 9793              		.loc 1 1455 14 is_stmt 1 view .LVU3474
1451:./Libraries/FatFs/Src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 9794              		.loc 1 1451 8 view .LVU3475
1451:./Libraries/FatFs/Src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 9795              		.loc 1 1451 2 view .LVU3476
1452:./Libraries/FatFs/Src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 9796              		.loc 1 1452 3 view .LVU3477
1452:./Libraries/FatFs/Src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 9797              		.loc 1 1452 7 is_stmt 0 view .LVU3478
 9798 0060 52F8083F 		ldr	r3, [r2, #8]!
 9799              	.LVL958:
1453:./Libraries/FatFs/Src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 9800              		.loc 1 1453 3 is_stmt 1 view .LVU3479
1453:./Libraries/FatFs/Src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 9801              		.loc 1 1453 6 is_stmt 0 view .LVU3480
 9802 0064 002B     		cmp	r3, #0
 9803 0066 00F0CB80 		beq	.L951
 9804              	.LVL959:
 9805              	.L911:
1454:./Libraries/FatFs/Src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 9806              		.loc 1 1454 3 is_stmt 1 view .LVU3481
1455:./Libraries/FatFs/Src/ff.c **** 	}
 9807              		.loc 1 1455 3 view .LVU3482
1454:./Libraries/FatFs/Src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 9808              		.loc 1 1454 6 is_stmt 0 view .LVU3483
 9809 006a 8B42     		cmp	r3, r1
 9810 006c F7D9     		bls	.L1009
1457:./Libraries/FatFs/Src/ff.c **** }
 9811              		.loc 1 1457 2 is_stmt 1 view .LVU3484
1457:./Libraries/FatFs/Src/ff.c **** }
 9812              		.loc 1 1457 12 is_stmt 0 view .LVU3485
 9813 006e 5368     		ldr	r3, [r2, #4]
 9814              	.LVL960:
1457:./Libraries/FatFs/Src/ff.c **** }
 9815              		.loc 1 1457 12 view .LVU3486
 9816 0070 0B44     		add	r3, r3, r1
 9817              	.LVL961:
1457:./Libraries/FatFs/Src/ff.c **** }
 9818              		.loc 1 1457 12 view .LVU3487
 9819 0072 9A1E     		subs	r2, r3, #2
 9820              	.LVL962:
ARM GAS  /tmp/ccaQXGqa.s 			page 332


 9821              	.L909:
1457:./Libraries/FatFs/Src/ff.c **** }
 9822              		.loc 1 1457 12 view .LVU3488
 9823              	.LBE1376:
 9824              	.LBE1378:
4055:./Libraries/FatFs/Src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
 9825              		.loc 1 4055 11 view .LVU3489
 9826 0074 0398     		ldr	r0, [sp, #12]
4054:./Libraries/FatFs/Src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
 9827              		.loc 1 4054 15 view .LVU3490
 9828 0076 E361     		str	r3, [r4, #28]
4055:./Libraries/FatFs/Src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
 9829              		.loc 1 4055 5 is_stmt 1 view .LVU3491
 9830              	.LVL963:
 9831              	.LBB1379:
 9832              	.LBI1379:
 983:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 9833              		.loc 1 983 7 view .LVU3492
 9834              	.LBB1380:
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 9835              		.loc 1 988 2 view .LVU3493
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 9836              		.loc 1 989 2 view .LVU3494
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 9837              		.loc 1 989 27 is_stmt 0 view .LVU3495
 9838 0078 8369     		ldr	r3, [r0, #24]
 9839 007a 023B     		subs	r3, r3, #2
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 9840              		.loc 1 989 5 view .LVU3496
 9841 007c 9342     		cmp	r3, r2
 9842 007e 40F2C280 		bls	.L940
 990:./Libraries/FatFs/Src/ff.c **** }
 9843              		.loc 1 990 2 is_stmt 1 view .LVU3497
 990:./Libraries/FatFs/Src/ff.c **** }
 9844              		.loc 1 990 18 is_stmt 0 view .LVU3498
 9845 0082 4189     		ldrh	r1, [r0, #10]
 990:./Libraries/FatFs/Src/ff.c **** }
 9846              		.loc 1 990 26 view .LVU3499
 9847 0084 C36A     		ldr	r3, [r0, #44]
 9848 0086 02FB0133 		mla	r3, r2, r1, r3
 9849              	.LVL964:
 990:./Libraries/FatFs/Src/ff.c **** }
 9850              		.loc 1 990 26 view .LVU3500
 9851              	.LBE1380:
 9852              	.LBE1379:
4056:./Libraries/FatFs/Src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 9853              		.loc 1 4056 5 is_stmt 1 view .LVU3501
4056:./Libraries/FatFs/Src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 9854              		.loc 1 4056 8 is_stmt 0 view .LVU3502
 9855 008a 002B     		cmp	r3, #0
 9856 008c 00F0BB80 		beq	.L940
4056:./Libraries/FatFs/Src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 9857              		.loc 1 4056 15 is_stmt 1 discriminator 2 view .LVU3503
4056:./Libraries/FatFs/Src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 9858              		.loc 1 4056 36 discriminator 2 view .LVU3504
4057:./Libraries/FatFs/Src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
 9859              		.loc 1 4057 5 discriminator 2 view .LVU3505
ARM GAS  /tmp/ccaQXGqa.s 			page 333


 9860              	.LVL965:
4058:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 9861              		.loc 1 4058 5 discriminator 2 view .LVU3506
4058:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 9862              		.loc 1 4058 18 is_stmt 0 discriminator 2 view .LVU3507
 9863 0090 C5F30805 		ubfx	r5, r5, #0, #9
 9864              	.LVL966:
4058:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 9865              		.loc 1 4058 8 discriminator 2 view .LVU3508
 9866 0094 002D     		cmp	r5, #0
 9867 0096 C1D0     		beq	.L914
4057:./Libraries/FatFs/Src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
 9868              		.loc 1 4057 53 discriminator 1 view .LVU3509
 9869 0098 0139     		subs	r1, r1, #1
 9870              	.LVL967:
4058:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 9871              		.loc 1 4058 39 discriminator 1 view .LVU3510
 9872 009a 226A     		ldr	r2, [r4, #32]
4057:./Libraries/FatFs/Src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
 9873              		.loc 1 4057 40 discriminator 1 view .LVU3511
 9874 009c 0F40     		ands	r7, r7, r1
 9875              	.LVL968:
4057:./Libraries/FatFs/Src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
 9876              		.loc 1 4057 9 discriminator 1 view .LVU3512
 9877 009e 1F44     		add	r7, r7, r3
4058:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 9878              		.loc 1 4058 27 discriminator 1 view .LVU3513
 9879 00a0 BA42     		cmp	r2, r7
 9880 00a2 BBD0     		beq	.L914
4061:./Libraries/FatFs/Src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 9881              		.loc 1 4061 6 is_stmt 1 view .LVU3514
4061:./Libraries/FatFs/Src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 9882              		.loc 1 4061 9 is_stmt 0 view .LVU3515
 9883 00a4 94F91430 		ldrsb	r3, [r4, #20]
 9884              	.LVL969:
4062:./Libraries/FatFs/Src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 9885              		.loc 1 4062 33 view .LVU3516
 9886 00a8 04F13001 		add	r1, r4, #48
4061:./Libraries/FatFs/Src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 9887              		.loc 1 4061 9 view .LVU3517
 9888 00ac 002B     		cmp	r3, #0
 9889 00ae C0F2F880 		blt	.L915
 9890              	.LVL970:
 9891              	.L916:
4066:./Libraries/FatFs/Src/ff.c **** #endif
 9892              		.loc 1 4066 6 is_stmt 1 view .LVU3518
4066:./Libraries/FatFs/Src/ff.c **** #endif
 9893              		.loc 1 4066 10 is_stmt 0 view .LVU3519
 9894 00b2 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 9895 00b4 0123     		movs	r3, #1
 9896 00b6 3A46     		mov	r2, r7
 9897 00b8 FFF7FEFF 		bl	disk_read
 9898              	.LVL971:
4066:./Libraries/FatFs/Src/ff.c **** #endif
 9899              		.loc 1 4066 9 view .LVU3520
 9900 00bc 0646     		mov	r6, r0
 9901              	.LVL972:
ARM GAS  /tmp/ccaQXGqa.s 			page 334


4066:./Libraries/FatFs/Src/ff.c **** #endif
 9902              		.loc 1 4066 9 view .LVU3521
 9903 00be 0028     		cmp	r0, #0
 9904 00c0 40F09680 		bne	.L1005
4066:./Libraries/FatFs/Src/ff.c **** #endif
 9905              		.loc 1 4066 57 is_stmt 1 discriminator 2 view .LVU3522
4066:./Libraries/FatFs/Src/ff.c **** #endif
 9906              		.loc 1 4066 79 discriminator 2 view .LVU3523
4068:./Libraries/FatFs/Src/ff.c **** 				}
 9907              		.loc 1 4068 6 discriminator 2 view .LVU3524
4068:./Libraries/FatFs/Src/ff.c **** 				}
 9908              		.loc 1 4068 15 is_stmt 0 discriminator 2 view .LVU3525
 9909 00c4 2762     		str	r7, [r4, #32]
 9910              	.LVL973:
 9911              	.L1002:
4068:./Libraries/FatFs/Src/ff.c **** 				}
 9912              		.loc 1 4068 15 discriminator 2 view .LVU3526
 9913 00c6 0398     		ldr	r0, [sp, #12]
 9914              	.L907:
 9915              	.LVL974:
4152:./Libraries/FatFs/Src/ff.c **** }
 9916              		.loc 1 4152 2 is_stmt 1 view .LVU3527
 9917              	.LBB1381:
 9918              	.LBI1368:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 9919              		.loc 1 751 6 view .LVU3528
 9920              	.LBB1370:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 9921              		.loc 1 756 2 view .LVU3529
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 9922              		.loc 1 756 5 is_stmt 0 view .LVU3530
 9923 00c8 0028     		cmp	r0, #0
 9924 00ca A7D1     		bne	.L914
 9925              	.L1006:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 9926              		.loc 1 756 5 view .LVU3531
 9927              	.LBE1370:
 9928              	.LBE1381:
4153:./Libraries/FatFs/Src/ff.c **** 
 9929              		.loc 1 4153 1 view .LVU3532
 9930 00cc 3046     		mov	r0, r6
 9931 00ce 05B0     		add	sp, sp, #20
 9932              	.LCFI106:
 9933              		.cfi_remember_state
 9934              		.cfi_def_cfa_offset 36
 9935              		@ sp needed
 9936 00d0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9937              	.LVL975:
 9938              	.L896:
 9939              	.LCFI107:
 9940              		.cfi_restore_state
4080:./Libraries/FatFs/Src/ff.c **** 			ofs = fp->obj.objsize;
 9941              		.loc 1 4080 3 is_stmt 1 view .LVU3533
4080:./Libraries/FatFs/Src/ff.c **** 			ofs = fp->obj.objsize;
 9942              		.loc 1 4080 20 is_stmt 0 view .LVU3534
 9943 00d4 E368     		ldr	r3, [r4, #12]
4080:./Libraries/FatFs/Src/ff.c **** 			ofs = fp->obj.objsize;
ARM GAS  /tmp/ccaQXGqa.s 			page 335


 9944              		.loc 1 4080 6 view .LVU3535
 9945 00d6 AB42     		cmp	r3, r5
 9946 00d8 04D2     		bcs	.L920
4080:./Libraries/FatFs/Src/ff.c **** 			ofs = fp->obj.objsize;
 9947              		.loc 1 4080 29 discriminator 1 view .LVU3536
 9948 00da 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 9949 00dc 12F0020F 		tst	r2, #2
 9950 00e0 08BF     		it	eq
 9951 00e2 1D46     		moveq	r5, r3
 9952              	.LVL976:
 9953              	.L920:
4083:./Libraries/FatFs/Src/ff.c **** 		fp->fptr = nsect = 0;
 9954              		.loc 1 4083 3 is_stmt 1 view .LVU3537
4084:./Libraries/FatFs/Src/ff.c **** 		if (ofs) {
 9955              		.loc 1 4084 12 is_stmt 0 view .LVU3538
 9956 00e4 0022     		movs	r2, #0
4083:./Libraries/FatFs/Src/ff.c **** 		fp->fptr = nsect = 0;
 9957              		.loc 1 4083 9 view .LVU3539
 9958 00e6 A369     		ldr	r3, [r4, #24]
 9959              	.LVL977:
4084:./Libraries/FatFs/Src/ff.c **** 		if (ofs) {
 9960              		.loc 1 4084 3 is_stmt 1 view .LVU3540
4084:./Libraries/FatFs/Src/ff.c **** 		if (ofs) {
 9961              		.loc 1 4084 12 is_stmt 0 view .LVU3541
 9962 00e8 A261     		str	r2, [r4, #24]
4085:./Libraries/FatFs/Src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
 9963              		.loc 1 4085 3 is_stmt 1 view .LVU3542
4085:./Libraries/FatFs/Src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
 9964              		.loc 1 4085 6 is_stmt 0 view .LVU3543
 9965 00ea 002D     		cmp	r5, #0
 9966 00ec EBD0     		beq	.L1002
4086:./Libraries/FatFs/Src/ff.c **** 			if (ifptr > 0 &&
 9967              		.loc 1 4086 4 is_stmt 1 view .LVU3544
4086:./Libraries/FatFs/Src/ff.c **** 			if (ifptr > 0 &&
 9968              		.loc 1 4086 19 is_stmt 0 view .LVU3545
 9969 00ee 039A     		ldr	r2, [sp, #12]
4086:./Libraries/FatFs/Src/ff.c **** 			if (ifptr > 0 &&
 9970              		.loc 1 4086 10 view .LVU3546
 9971 00f0 B2F80A80 		ldrh	r8, [r2, #10]
4086:./Libraries/FatFs/Src/ff.c **** 			if (ifptr > 0 &&
 9972              		.loc 1 4086 8 view .LVU3547
 9973 00f4 4FEA4828 		lsl	r8, r8, #9
 9974              	.LVL978:
4087:./Libraries/FatFs/Src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 9975              		.loc 1 4087 4 is_stmt 1 view .LVU3548
4087:./Libraries/FatFs/Src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 9976              		.loc 1 4087 7 is_stmt 0 view .LVU3549
 9977 00f8 002B     		cmp	r3, #0
 9978 00fa 36D0     		beq	.L922
4088:./Libraries/FatFs/Src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
 9979              		.loc 1 4088 31 discriminator 1 view .LVU3550
 9980 00fc 013B     		subs	r3, r3, #1
 9981              	.LVL979:
4088:./Libraries/FatFs/Src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
 9982              		.loc 1 4088 10 discriminator 1 view .LVU3551
 9983 00fe 6A1E     		subs	r2, r5, #1
4088:./Libraries/FatFs/Src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
ARM GAS  /tmp/ccaQXGqa.s 			page 336


 9984              		.loc 1 4088 36 discriminator 1 view .LVU3552
 9985 0100 B3FBF8F1 		udiv	r1, r3, r8
4088:./Libraries/FatFs/Src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
 9986              		.loc 1 4088 15 discriminator 1 view .LVU3553
 9987 0104 B2FBF8F2 		udiv	r2, r2, r8
4087:./Libraries/FatFs/Src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 9988              		.loc 1 4087 18 discriminator 1 view .LVU3554
 9989 0108 8A42     		cmp	r2, r1
 9990 010a 2ED3     		bcc	.L922
4089:./Libraries/FatFs/Src/ff.c **** 				ofs -= fp->fptr;
 9991              		.loc 1 4089 5 is_stmt 1 view .LVU3555
4089:./Libraries/FatFs/Src/ff.c **** 				ofs -= fp->fptr;
 9992              		.loc 1 4089 30 is_stmt 0 view .LVU3556
 9993 010c C8F10002 		rsb	r2, r8, #0
4091:./Libraries/FatFs/Src/ff.c **** 			} else {									/* When seek to back cluster, */
 9994              		.loc 1 4091 10 view .LVU3557
 9995 0110 E769     		ldr	r7, [r4, #28]
4089:./Libraries/FatFs/Src/ff.c **** 				ofs -= fp->fptr;
 9996              		.loc 1 4089 28 view .LVU3558
 9997 0112 1340     		ands	r3, r3, r2
 9998              	.LVL980:
4090:./Libraries/FatFs/Src/ff.c **** 				clst = fp->clust;
 9999              		.loc 1 4090 9 view .LVU3559
 10000 0114 ED1A     		subs	r5, r5, r3
 10001              	.LVL981:
4089:./Libraries/FatFs/Src/ff.c **** 				ofs -= fp->fptr;
 10002              		.loc 1 4089 14 view .LVU3560
 10003 0116 A361     		str	r3, [r4, #24]
4090:./Libraries/FatFs/Src/ff.c **** 				clst = fp->clust;
 10004              		.loc 1 4090 5 is_stmt 1 view .LVU3561
 10005              	.LVL982:
4091:./Libraries/FatFs/Src/ff.c **** 			} else {									/* When seek to back cluster, */
 10006              		.loc 1 4091 5 view .LVU3562
 10007              	.L923:
4104:./Libraries/FatFs/Src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 10008              		.loc 1 4104 4 view .LVU3563
4104:./Libraries/FatFs/Src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 10009              		.loc 1 4104 7 is_stmt 0 view .LVU3564
 10010 0118 002F     		cmp	r7, #0
 10011 011a 00F08E80 		beq	.L1001
4105:./Libraries/FatFs/Src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
 10012              		.loc 1 4105 11 is_stmt 1 view .LVU3565
 10013 011e 4545     		cmp	r5, r8
 10014 0120 15D8     		bhi	.L939
 10015 0122 CCE0     		b	.L930
 10016              	.LVL983:
 10017              	.L1012:
4113:./Libraries/FatFs/Src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
 10018              		.loc 1 4113 14 is_stmt 0 view .LVU3566
 10019 0124 FFF7FEFF 		bl	create_chain
 10020              	.LVL984:
4114:./Libraries/FatFs/Src/ff.c **** 							ofs = 0; break;
 10021              		.loc 1 4114 7 is_stmt 1 view .LVU3567
4114:./Libraries/FatFs/Src/ff.c **** 							ofs = 0; break;
 10022              		.loc 1 4114 10 is_stmt 0 view .LVU3568
 10023 0128 0746     		mov	r7, r0
 10024 012a 0028     		cmp	r0, #0
ARM GAS  /tmp/ccaQXGqa.s 			page 337


 10025 012c 00F08480 		beq	.L1010
 10026              	.L932:
4122:./Libraries/FatFs/Src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 10027              		.loc 1 4122 6 is_stmt 1 view .LVU3569
4122:./Libraries/FatFs/Src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 10028              		.loc 1 4122 30 view .LVU3570
4122:./Libraries/FatFs/Src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 10029              		.loc 1 4122 52 view .LVU3571
4123:./Libraries/FatFs/Src/ff.c **** 					fp->clust = clst;
 10030              		.loc 1 4123 6 view .LVU3572
4123:./Libraries/FatFs/Src/ff.c **** 					fp->clust = clst;
 10031              		.loc 1 4123 45 view .LVU3573
4123:./Libraries/FatFs/Src/ff.c **** 					fp->clust = clst;
 10032              		.loc 1 4123 66 view .LVU3574
4124:./Libraries/FatFs/Src/ff.c **** 				}
 10033              		.loc 1 4124 6 view .LVU3575
4122:./Libraries/FatFs/Src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 10034              		.loc 1 4122 9 is_stmt 0 view .LVU3576
 10035 0130 7B1C     		adds	r3, r7, #1
 10036 0132 5DD0     		beq	.L1005
4123:./Libraries/FatFs/Src/ff.c **** 					fp->clust = clst;
 10037              		.loc 1 4123 9 discriminator 2 view .LVU3577
 10038 0134 012F     		cmp	r7, #1
 10039 0136 40F2D680 		bls	.L934
4123:./Libraries/FatFs/Src/ff.c **** 					fp->clust = clst;
 10040              		.loc 1 4123 33 discriminator 2 view .LVU3578
 10041 013a 0398     		ldr	r0, [sp, #12]
 10042              	.LVL985:
4123:./Libraries/FatFs/Src/ff.c **** 					fp->clust = clst;
 10043              		.loc 1 4123 20 discriminator 2 view .LVU3579
 10044 013c 8369     		ldr	r3, [r0, #24]
 10045 013e BB42     		cmp	r3, r7
 10046 0140 40F2DC80 		bls	.L1011
4105:./Libraries/FatFs/Src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
 10047              		.loc 1 4105 11 discriminator 4 view .LVU3580
 10048 0144 A845     		cmp	r8, r5
 10049 0146 A369     		ldr	r3, [r4, #24]
4124:./Libraries/FatFs/Src/ff.c **** 				}
 10050              		.loc 1 4124 16 discriminator 4 view .LVU3581
 10051 0148 E761     		str	r7, [r4, #28]
4105:./Libraries/FatFs/Src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
 10052              		.loc 1 4105 11 is_stmt 1 discriminator 4 view .LVU3582
 10053 014a 80F0B980 		bcs	.L938
 10054              	.L939:
4106:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 10055              		.loc 1 4106 6 view .LVU3583
4109:./Libraries/FatFs/Src/ff.c **** 							fp->obj.objsize = fp->fptr;
 10056              		.loc 1 4109 7 view .LVU3584
4113:./Libraries/FatFs/Src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
 10057              		.loc 1 4113 7 view .LVU3585
4120:./Libraries/FatFs/Src/ff.c **** 					}
 10058              		.loc 1 4120 7 view .LVU3586
4108:./Libraries/FatFs/Src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
 10059              		.loc 1 4108 9 is_stmt 0 view .LVU3587
 10060 014e 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
4106:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 10061              		.loc 1 4106 27 view .LVU3588
ARM GAS  /tmp/ccaQXGqa.s 			page 338


 10062 0150 4344     		add	r3, r3, r8
4120:./Libraries/FatFs/Src/ff.c **** 					}
 10063              		.loc 1 4120 14 view .LVU3589
 10064 0152 3946     		mov	r1, r7
4113:./Libraries/FatFs/Src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
 10065              		.loc 1 4113 14 view .LVU3590
 10066 0154 2046     		mov	r0, r4
4108:./Libraries/FatFs/Src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
 10067              		.loc 1 4108 9 view .LVU3591
 10068 0156 9207     		lsls	r2, r2, #30
4106:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 10069              		.loc 1 4106 10 view .LVU3592
 10070 0158 A5EB0805 		sub	r5, r5, r8
 10071              	.LVL986:
4106:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 10072              		.loc 1 4106 18 is_stmt 1 view .LVU3593
4108:./Libraries/FatFs/Src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
 10073              		.loc 1 4108 6 view .LVU3594
4106:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 10074              		.loc 1 4106 27 is_stmt 0 view .LVU3595
 10075 015c A361     		str	r3, [r4, #24]
4108:./Libraries/FatFs/Src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
 10076              		.loc 1 4108 9 view .LVU3596
 10077 015e E1D4     		bmi	.L1012
 10078              	.LVL987:
4120:./Libraries/FatFs/Src/ff.c **** 					}
 10079              		.loc 1 4120 14 view .LVU3597
 10080 0160 2068     		ldr	r0, [r4]
 10081              	.LVL988:
4120:./Libraries/FatFs/Src/ff.c **** 					}
 10082              		.loc 1 4120 14 view .LVU3598
 10083 0162 FFF7FEFF 		bl	get_fat.isra.0
 10084              	.LVL989:
4120:./Libraries/FatFs/Src/ff.c **** 					}
 10085              		.loc 1 4120 14 view .LVU3599
 10086 0166 0746     		mov	r7, r0
 10087              	.LVL990:
4120:./Libraries/FatFs/Src/ff.c **** 					}
 10088              		.loc 1 4120 14 view .LVU3600
 10089 0168 E2E7     		b	.L932
 10090              	.LVL991:
 10091              	.L922:
4093:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 10092              		.loc 1 4093 5 is_stmt 1 view .LVU3601
4093:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 10093              		.loc 1 4093 10 is_stmt 0 view .LVU3602
 10094 016a A768     		ldr	r7, [r4, #8]
 10095              	.LVL992:
4095:./Libraries/FatFs/Src/ff.c **** 					clst = create_chain(&fp->obj, 0);
 10096              		.loc 1 4095 5 is_stmt 1 view .LVU3603
4095:./Libraries/FatFs/Src/ff.c **** 					clst = create_chain(&fp->obj, 0);
 10097              		.loc 1 4095 8 is_stmt 0 view .LVU3604
 10098 016c 002F     		cmp	r7, #0
 10099 016e 57D0     		beq	.L1013
 10100 0170 0023     		movs	r3, #0
 10101              	.L924:
4102:./Libraries/FatFs/Src/ff.c **** 			}
ARM GAS  /tmp/ccaQXGqa.s 			page 339


 10102              		.loc 1 4102 5 is_stmt 1 view .LVU3605
4102:./Libraries/FatFs/Src/ff.c **** 			}
 10103              		.loc 1 4102 15 is_stmt 0 view .LVU3606
 10104 0172 E761     		str	r7, [r4, #28]
 10105 0174 D0E7     		b	.L923
 10106              	.LVL993:
 10107              	.L1008:
4026:./Libraries/FatFs/Src/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
 10108              		.loc 1 4026 4 is_stmt 1 view .LVU3607
4027:./Libraries/FatFs/Src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 10109              		.loc 1 4027 4 view .LVU3608
4027:./Libraries/FatFs/Src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 10110              		.loc 1 4027 15 is_stmt 0 view .LVU3609
 10111 0176 1746     		mov	r7, r2
 10112              	.LVL994:
4028:./Libraries/FatFs/Src/ff.c **** 			if (cl) {
 10113              		.loc 1 4028 7 view .LVU3610
 10114 0178 D4F80880 		ldr	r8, [r4, #8]
4027:./Libraries/FatFs/Src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 10115              		.loc 1 4027 24 view .LVU3611
 10116 017c 4FF00209 		mov	r9, #2
4027:./Libraries/FatFs/Src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 10117              		.loc 1 4027 9 view .LVU3612
 10118 0180 57F804AB 		ldr	r10, [r7], #4
 10119              	.LVL995:
4027:./Libraries/FatFs/Src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 10120              		.loc 1 4027 19 is_stmt 1 view .LVU3613
4028:./Libraries/FatFs/Src/ff.c **** 			if (cl) {
 10121              		.loc 1 4028 4 view .LVU3614
4029:./Libraries/FatFs/Src/ff.c **** 				do {
 10122              		.loc 1 4029 4 view .LVU3615
4029:./Libraries/FatFs/Src/ff.c **** 				do {
 10123              		.loc 1 4029 7 is_stmt 0 view .LVU3616
 10124 0184 B8F1000F 		cmp	r8, #0
 10125 0188 19D1     		bne	.L905
 10126 018a 0398     		ldr	r0, [sp, #12]
 10127              	.LVL996:
 10128              	.L898:
4044:./Libraries/FatFs/Src/ff.c **** 			if (ulen <= tlen) {
 10129              		.loc 1 4044 4 is_stmt 1 view .LVU3617
4045:./Libraries/FatFs/Src/ff.c **** 				*tbl = 0;		/* Terminate table */
 10130              		.loc 1 4045 7 is_stmt 0 view .LVU3618
 10131 018c D145     		cmp	r9, r10
4044:./Libraries/FatFs/Src/ff.c **** 			if (ulen <= tlen) {
 10132              		.loc 1 4044 15 view .LVU3619
 10133 018e C2F80090 		str	r9, [r2]
4045:./Libraries/FatFs/Src/ff.c **** 				*tbl = 0;		/* Terminate table */
 10134              		.loc 1 4045 4 is_stmt 1 view .LVU3620
4045:./Libraries/FatFs/Src/ff.c **** 				*tbl = 0;		/* Terminate table */
 10135              		.loc 1 4045 7 is_stmt 0 view .LVU3621
 10136 0192 40D8     		bhi	.L1014
4046:./Libraries/FatFs/Src/ff.c **** 			} else {
 10137              		.loc 1 4046 5 is_stmt 1 view .LVU3622
4046:./Libraries/FatFs/Src/ff.c **** 			} else {
 10138              		.loc 1 4046 10 is_stmt 0 view .LVU3623
 10139 0194 0023     		movs	r3, #0
 10140 0196 3B60     		str	r3, [r7]
ARM GAS  /tmp/ccaQXGqa.s 			page 340


4152:./Libraries/FatFs/Src/ff.c **** }
 10141              		.loc 1 4152 2 is_stmt 1 view .LVU3624
 10142              	.LVL997:
 10143              	.LBB1382:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 10144              		.loc 1 751 6 view .LVU3625
 10145              	.LBB1371:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10146              		.loc 1 756 2 view .LVU3626
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10147              		.loc 1 756 5 is_stmt 0 view .LVU3627
 10148 0198 0028     		cmp	r0, #0
 10149 019a 97D0     		beq	.L1006
 10150 019c 3EE7     		b	.L914
 10151              	.LVL998:
 10152              	.L1016:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10153              		.loc 1 756 5 view .LVU3628
 10154              	.LBE1371:
 10155              	.LBE1382:
4032:./Libraries/FatFs/Src/ff.c **** 					do {
 10156              		.loc 1 4032 30 view .LVU3629
 10157 019e 09F10209 		add	r9, r9, #2
 10158              	.LVL999:
4039:./Libraries/FatFs/Src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
 10159              		.loc 1 4039 6 is_stmt 1 view .LVU3630
4039:./Libraries/FatFs/Src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
 10160              		.loc 1 4039 9 is_stmt 0 view .LVU3631
 10161 01a2 CA45     		cmp	r10, r9
 10162 01a4 05D3     		bcc	.L904
4040:./Libraries/FatFs/Src/ff.c **** 					}
 10163              		.loc 1 4040 7 is_stmt 1 view .LVU3632
 10164              	.LVL1000:
4040:./Libraries/FatFs/Src/ff.c **** 					}
 10165              		.loc 1 4040 14 is_stmt 0 view .LVU3633
 10166 01a6 3B46     		mov	r3, r7
 10167 01a8 43F808BB 		str	fp, [r3], #8
4040:./Libraries/FatFs/Src/ff.c **** 					}
 10168              		.loc 1 4040 21 is_stmt 1 view .LVU3634
 10169              	.LVL1001:
4040:./Libraries/FatFs/Src/ff.c **** 					}
 10170              		.loc 1 4040 28 is_stmt 0 view .LVU3635
 10171 01ac C7F80480 		str	r8, [r7, #4]
4040:./Libraries/FatFs/Src/ff.c **** 					}
 10172              		.loc 1 4040 25 view .LVU3636
 10173 01b0 1F46     		mov	r7, r3
 10174              	.LVL1002:
 10175              	.L904:
4042:./Libraries/FatFs/Src/ff.c **** 			}
 10176              		.loc 1 4042 13 is_stmt 1 view .LVU3637
4042:./Libraries/FatFs/Src/ff.c **** 			}
 10177              		.loc 1 4042 21 is_stmt 0 view .LVU3638
 10178 01b2 0398     		ldr	r0, [sp, #12]
4042:./Libraries/FatFs/Src/ff.c **** 			}
 10179              		.loc 1 4042 5 view .LVU3639
 10180 01b4 8369     		ldr	r3, [r0, #24]
 10181 01b6 8B42     		cmp	r3, r1
ARM GAS  /tmp/ccaQXGqa.s 			page 341


 10182 01b8 40F2A580 		bls	.L1015
4042:./Libraries/FatFs/Src/ff.c **** 			}
 10183              		.loc 1 4042 5 view .LVU3640
 10184 01bc 8846     		mov	r8, r1
 10185              	.LVL1003:
 10186              	.L905:
4030:./Libraries/FatFs/Src/ff.c **** 					/* Get a fragment */
 10187              		.loc 1 4030 5 is_stmt 1 view .LVU3641
4032:./Libraries/FatFs/Src/ff.c **** 					do {
 10188              		.loc 1 4032 6 view .LVU3642
4032:./Libraries/FatFs/Src/ff.c **** 					do {
 10189              		.loc 1 4032 16 view .LVU3643
4032:./Libraries/FatFs/Src/ff.c **** 					do {
 10190              		.loc 1 4032 25 view .LVU3644
4032:./Libraries/FatFs/Src/ff.c **** 					do {
 10191              		.loc 1 4032 25 is_stmt 0 view .LVU3645
 10192 01be 4146     		mov	r1, r8
4032:./Libraries/FatFs/Src/ff.c **** 					do {
 10193              		.loc 1 4032 20 view .LVU3646
 10194 01c0 4FF0000B 		mov	fp, #0
 10195 01c4 03E0     		b	.L903
 10196              	.LVL1004:
 10197              	.L899:
4037:./Libraries/FatFs/Src/ff.c **** 					} while (cl == pcl + 1);
 10198              		.loc 1 4037 10 discriminator 2 view .LVU3647
 10199 01c6 481C     		adds	r0, r1, #1
 10200              	.LVL1005:
4037:./Libraries/FatFs/Src/ff.c **** 					} while (cl == pcl + 1);
 10201              		.loc 1 4037 10 discriminator 2 view .LVU3648
 10202 01c8 12D0     		beq	.L1005
4038:./Libraries/FatFs/Src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 10203              		.loc 1 4038 6 discriminator 2 view .LVU3649
 10204 01ca 8D42     		cmp	r5, r1
 10205 01cc E7D1     		bne	.L1016
 10206              	.LVL1006:
 10207              	.L903:
4033:./Libraries/FatFs/Src/ff.c **** 						pcl = cl; ncl++;
 10208              		.loc 1 4033 6 is_stmt 1 view .LVU3650
4034:./Libraries/FatFs/Src/ff.c **** 						cl = get_fat(&fp->obj, cl);
 10209              		.loc 1 4034 7 view .LVU3651
4034:./Libraries/FatFs/Src/ff.c **** 						cl = get_fat(&fp->obj, cl);
 10210              		.loc 1 4034 17 view .LVU3652
4035:./Libraries/FatFs/Src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 10211              		.loc 1 4035 12 is_stmt 0 view .LVU3653
 10212 01ce 2068     		ldr	r0, [r4]
 10213 01d0 0D46     		mov	r5, r1
 10214 01d2 FFF7FEFF 		bl	get_fat.isra.0
 10215              	.LVL1007:
4036:./Libraries/FatFs/Src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 10216              		.loc 1 4036 20 is_stmt 1 view .LVU3654
4036:./Libraries/FatFs/Src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 10217              		.loc 1 4036 41 view .LVU3655
4037:./Libraries/FatFs/Src/ff.c **** 					} while (cl == pcl + 1);
 10218              		.loc 1 4037 7 view .LVU3656
4037:./Libraries/FatFs/Src/ff.c **** 					} while (cl == pcl + 1);
 10219              		.loc 1 4037 29 view .LVU3657
4037:./Libraries/FatFs/Src/ff.c **** 					} while (cl == pcl + 1);
ARM GAS  /tmp/ccaQXGqa.s 			page 342


 10220              		.loc 1 4037 51 view .LVU3658
4038:./Libraries/FatFs/Src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 10221              		.loc 1 4038 14 view .LVU3659
4036:./Libraries/FatFs/Src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 10222              		.loc 1 4036 10 is_stmt 0 view .LVU3660
 10223 01d6 0128     		cmp	r0, #1
4034:./Libraries/FatFs/Src/ff.c **** 						cl = get_fat(&fp->obj, cl);
 10224              		.loc 1 4034 20 view .LVU3661
 10225 01d8 0BF1010B 		add	fp, fp, #1
 10226              	.LVL1008:
4035:./Libraries/FatFs/Src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 10227              		.loc 1 4035 7 is_stmt 1 view .LVU3662
4038:./Libraries/FatFs/Src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 10228              		.loc 1 4038 25 is_stmt 0 view .LVU3663
 10229 01dc 05F10105 		add	r5, r5, #1
 10230              	.LVL1009:
4035:./Libraries/FatFs/Src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 10231              		.loc 1 4035 12 view .LVU3664
 10232 01e0 0146     		mov	r1, r0
 10233              	.LVL1010:
4036:./Libraries/FatFs/Src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 10234              		.loc 1 4036 7 is_stmt 1 view .LVU3665
4036:./Libraries/FatFs/Src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 10235              		.loc 1 4036 10 is_stmt 0 view .LVU3666
 10236 01e2 F0D8     		bhi	.L899
 10237              	.LVL1011:
 10238              	.L1004:
4036:./Libraries/FatFs/Src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 10239              		.loc 1 4036 20 is_stmt 1 discriminator 1 view .LVU3667
 10240 01e4 0226     		movs	r6, #2
 10241              	.LVL1012:
4036:./Libraries/FatFs/Src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 10242              		.loc 1 4036 20 is_stmt 0 discriminator 1 view .LVU3668
 10243 01e6 039B     		ldr	r3, [sp, #12]
 10244 01e8 6675     		strb	r6, [r4, #21]
4036:./Libraries/FatFs/Src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 10245              		.loc 1 4036 20 is_stmt 1 discriminator 1 view .LVU3669
 10246              	.LVL1013:
 10247              	.LBB1383:
 10248              	.LBI1383:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 10249              		.loc 1 751 6 discriminator 1 view .LVU3670
 10250              	.LBB1384:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10251              		.loc 1 756 2 discriminator 1 view .LVU3671
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10252              		.loc 1 756 5 is_stmt 0 discriminator 1 view .LVU3672
 10253 01ea 2BB9     		cbnz	r3, .L1003
 10254              	.LVL1014:
 10255              	.L926:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10256              		.loc 1 756 5 discriminator 1 view .LVU3673
 10257              	.LBE1384:
 10258              	.LBE1383:
4036:./Libraries/FatFs/Src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 10259              		.loc 1 4036 20 view .LVU3674
 10260 01ec 0226     		movs	r6, #2
ARM GAS  /tmp/ccaQXGqa.s 			page 343


 10261 01ee 18E7     		b	.L954
 10262              	.L1005:
4037:./Libraries/FatFs/Src/ff.c **** 					} while (cl == pcl + 1);
 10263              		.loc 1 4037 29 is_stmt 1 discriminator 1 view .LVU3675
 10264 01f0 0126     		movs	r6, #1
 10265 01f2 039B     		ldr	r3, [sp, #12]
 10266 01f4 6675     		strb	r6, [r4, #21]
4037:./Libraries/FatFs/Src/ff.c **** 					} while (cl == pcl + 1);
 10267              		.loc 1 4037 29 discriminator 1 view .LVU3676
 10268              	.LVL1015:
 10269              	.LBB1385:
 10270              	.LBI1385:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 10271              		.loc 1 751 6 discriminator 1 view .LVU3677
 10272              	.LBB1386:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10273              		.loc 1 756 2 discriminator 1 view .LVU3678
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10274              		.loc 1 756 5 is_stmt 0 discriminator 1 view .LVU3679
 10275 01f6 63B1     		cbz	r3, .L1017
 10276              	.LVL1016:
 10277              	.L1003:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10278              		.loc 1 756 5 discriminator 1 view .LVU3680
 10279              	.LBE1386:
 10280              	.LBE1385:
 10281              	.LBB1387:
 10282              	.LBB1388:
 10283              	.LBB1389:
 10284              	.LBI1389:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 10285              		.loc 1 751 6 is_stmt 1 view .LVU3681
 10286              	.LBB1390:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 10287              		.loc 1 757 3 view .LVU3682
 10288 01f8 D868     		ldr	r0, [r3, #12]
 10289 01fa FFF7FEFF 		bl	ff_rel_grant
 10290              	.LVL1017:
 759:./Libraries/FatFs/Src/ff.c **** 
 10291              		.loc 1 759 1 is_stmt 0 view .LVU3683
 10292 01fe 10E7     		b	.L954
 10293              	.LVL1018:
 10294              	.L951:
 759:./Libraries/FatFs/Src/ff.c **** 
 10295              		.loc 1 759 1 view .LVU3684
 10296              	.LBE1390:
 10297              	.LBE1389:
 10298              	.LBE1388:
 10299              	.LBE1387:
 10300              	.LBB1391:
 10301              	.LBB1377:
 10302 0200 6FF00102 		mvn	r2, #1
 10303 0204 36E7     		b	.L909
 10304              	.LVL1019:
 10305              	.L940:
 759:./Libraries/FatFs/Src/ff.c **** 
 10306              		.loc 1 759 1 view .LVU3685
ARM GAS  /tmp/ccaQXGqa.s 			page 344


 10307              	.LBE1377:
 10308              	.LBE1391:
4129:./Libraries/FatFs/Src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 10309              		.loc 1 4129 18 is_stmt 1 discriminator 1 view .LVU3686
 10310 0206 0226     		movs	r6, #2
 10311              	.LVL1020:
4129:./Libraries/FatFs/Src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 10312              		.loc 1 4129 18 is_stmt 0 discriminator 1 view .LVU3687
 10313 0208 6675     		strb	r6, [r4, #21]
4129:./Libraries/FatFs/Src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 10314              		.loc 1 4129 18 is_stmt 1 discriminator 1 view .LVU3688
 10315              	.LVL1021:
 10316              	.LBB1392:
 10317              	.LBI1392:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 10318              		.loc 1 751 6 discriminator 1 view .LVU3689
 10319              	.LBE1392:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10320              		.loc 1 756 2 discriminator 1 view .LVU3690
 10321              	.LBB1395:
 10322              	.LBB1393:
 10323              	.LBI1393:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 10324              		.loc 1 751 6 discriminator 1 view .LVU3691
 10325              	.LBB1394:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 10326              		.loc 1 757 3 discriminator 1 view .LVU3692
 10327 020a C068     		ldr	r0, [r0, #12]
 10328 020c FFF7FEFF 		bl	ff_rel_grant
 10329              	.LVL1022:
 759:./Libraries/FatFs/Src/ff.c **** 
 10330              		.loc 1 759 1 is_stmt 0 discriminator 1 view .LVU3693
 10331 0210 07E7     		b	.L954
 10332              	.LVL1023:
 10333              	.L1017:
 759:./Libraries/FatFs/Src/ff.c **** 
 10334              		.loc 1 759 1 discriminator 1 view .LVU3694
 10335              	.LBE1394:
 10336              	.LBE1393:
 10337              	.LBE1395:
4037:./Libraries/FatFs/Src/ff.c **** 					} while (cl == pcl + 1);
 10338              		.loc 1 4037 29 view .LVU3695
 10339 0212 0126     		movs	r6, #1
 10340 0214 05E7     		b	.L954
 10341              	.LVL1024:
 10342              	.L1014:
4048:./Libraries/FatFs/Src/ff.c **** 			}
 10343              		.loc 1 4048 9 view .LVU3696
 10344 0216 1126     		movs	r6, #17
 10345              	.LVL1025:
4152:./Libraries/FatFs/Src/ff.c **** }
 10346              		.loc 1 4152 2 is_stmt 1 view .LVU3697
 10347              	.LBB1396:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 10348              		.loc 1 751 6 view .LVU3698
 10349              	.LBB1372:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
ARM GAS  /tmp/ccaQXGqa.s 			page 345


 10350              		.loc 1 756 2 view .LVU3699
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10351              		.loc 1 756 5 is_stmt 0 view .LVU3700
 10352 0218 0028     		cmp	r0, #0
 10353 021a 3FF457AF 		beq	.L1006
 10354 021e FDE6     		b	.L914
 10355              	.LVL1026:
 10356              	.L1013:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10357              		.loc 1 756 5 view .LVU3701
 10358              	.LBE1372:
 10359              	.LBE1396:
4096:./Libraries/FatFs/Src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
 10360              		.loc 1 4096 6 is_stmt 1 view .LVU3702
4096:./Libraries/FatFs/Src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
 10361              		.loc 1 4096 13 is_stmt 0 view .LVU3703
 10362 0220 3946     		mov	r1, r7
 10363 0222 2046     		mov	r0, r4
 10364 0224 FFF7FEFF 		bl	create_chain
 10365              	.LVL1027:
4097:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 10366              		.loc 1 4097 9 view .LVU3704
 10367 0228 0128     		cmp	r0, #1
4096:./Libraries/FatFs/Src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
 10368              		.loc 1 4096 13 view .LVU3705
 10369 022a 0746     		mov	r7, r0
 10370              	.LVL1028:
4097:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 10371              		.loc 1 4097 6 is_stmt 1 view .LVU3706
4097:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 10372              		.loc 1 4097 9 is_stmt 0 view .LVU3707
 10373 022c DAD0     		beq	.L1004
4097:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 10374              		.loc 1 4097 21 is_stmt 1 discriminator 2 view .LVU3708
4097:./Libraries/FatFs/Src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 10375              		.loc 1 4097 42 discriminator 2 view .LVU3709
4098:./Libraries/FatFs/Src/ff.c **** 					fp->obj.sclust = clst;
 10376              		.loc 1 4098 6 discriminator 2 view .LVU3710
4098:./Libraries/FatFs/Src/ff.c **** 					fp->obj.sclust = clst;
 10377              		.loc 1 4098 9 is_stmt 0 discriminator 2 view .LVU3711
 10378 022e 411C     		adds	r1, r0, #1
 10379 0230 DED0     		beq	.L1005
4098:./Libraries/FatFs/Src/ff.c **** 					fp->obj.sclust = clst;
 10380              		.loc 1 4098 30 is_stmt 1 discriminator 2 view .LVU3712
4098:./Libraries/FatFs/Src/ff.c **** 					fp->obj.sclust = clst;
 10381              		.loc 1 4098 52 discriminator 2 view .LVU3713
4099:./Libraries/FatFs/Src/ff.c **** 				}
 10382              		.loc 1 4099 6 discriminator 2 view .LVU3714
 10383 0232 A369     		ldr	r3, [r4, #24]
4099:./Libraries/FatFs/Src/ff.c **** 				}
 10384              		.loc 1 4099 21 is_stmt 0 discriminator 2 view .LVU3715
 10385 0234 A060     		str	r0, [r4, #8]
 10386 0236 9CE7     		b	.L924
 10387              	.L1010:
4099:./Libraries/FatFs/Src/ff.c **** 				}
 10388              		.loc 1 4099 21 discriminator 2 view .LVU3716
 10389 0238 A369     		ldr	r3, [r4, #24]
ARM GAS  /tmp/ccaQXGqa.s 			page 346


 10390              	.LVL1029:
 10391              	.L1001:
4099:./Libraries/FatFs/Src/ff.c **** 				}
 10392              		.loc 1 4099 21 discriminator 2 view .LVU3717
 10393 023a 0398     		ldr	r0, [sp, #12]
 10394              	.LVL1030:
 10395              	.L929:
4134:./Libraries/FatFs/Src/ff.c **** 			fp->obj.objsize = fp->fptr;
 10396              		.loc 1 4134 3 is_stmt 1 view .LVU3718
4134:./Libraries/FatFs/Src/ff.c **** 			fp->obj.objsize = fp->fptr;
 10397              		.loc 1 4134 6 is_stmt 0 view .LVU3719
 10398 023c E268     		ldr	r2, [r4, #12]
 10399 023e 9A42     		cmp	r2, r3
 10400 0240 04D2     		bcs	.L942
4135:./Libraries/FatFs/Src/ff.c **** 			fp->flag |= FA_MODIFIED;
 10401              		.loc 1 4135 4 is_stmt 1 view .LVU3720
4136:./Libraries/FatFs/Src/ff.c **** 		}
 10402              		.loc 1 4136 13 is_stmt 0 view .LVU3721
 10403 0242 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
4135:./Libraries/FatFs/Src/ff.c **** 			fp->flag |= FA_MODIFIED;
 10404              		.loc 1 4135 20 view .LVU3722
 10405 0244 E360     		str	r3, [r4, #12]
4136:./Libraries/FatFs/Src/ff.c **** 		}
 10406              		.loc 1 4136 4 is_stmt 1 view .LVU3723
4136:./Libraries/FatFs/Src/ff.c **** 		}
 10407              		.loc 1 4136 13 is_stmt 0 view .LVU3724
 10408 0246 42F04002 		orr	r2, r2, #64
 10409 024a 2275     		strb	r2, [r4, #20]
 10410              	.L942:
4138:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 10411              		.loc 1 4138 3 is_stmt 1 view .LVU3725
4138:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 10412              		.loc 1 4138 16 is_stmt 0 view .LVU3726
 10413 024c C3F30803 		ubfx	r3, r3, #0, #9
4138:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 10414              		.loc 1 4138 6 view .LVU3727
 10415 0250 002B     		cmp	r3, #0
 10416 0252 3FF439AF 		beq	.L907
4138:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 10417              		.loc 1 4138 39 discriminator 1 view .LVU3728
 10418 0256 226A     		ldr	r2, [r4, #32]
4138:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 10419              		.loc 1 4138 25 discriminator 1 view .LVU3729
 10420 0258 BA42     		cmp	r2, r7
 10421 025a 3FF435AF 		beq	.L907
4141:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 10422              		.loc 1 4141 4 is_stmt 1 view .LVU3730
4141:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 10423              		.loc 1 4141 7 is_stmt 0 view .LVU3731
 10424 025e 94F91430 		ldrsb	r3, [r4, #20]
4142:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 10425              		.loc 1 4142 31 view .LVU3732
 10426 0262 04F13001 		add	r1, r4, #48
4141:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 10427              		.loc 1 4141 7 view .LVU3733
 10428 0266 002B     		cmp	r3, #0
 10429 0268 0DDB     		blt	.L943
ARM GAS  /tmp/ccaQXGqa.s 			page 347


 10430              	.L944:
4146:./Libraries/FatFs/Src/ff.c **** #endif
 10431              		.loc 1 4146 4 is_stmt 1 view .LVU3734
4146:./Libraries/FatFs/Src/ff.c **** #endif
 10432              		.loc 1 4146 8 is_stmt 0 view .LVU3735
 10433 026a 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 10434 026c 0123     		movs	r3, #1
 10435 026e 3A46     		mov	r2, r7
 10436 0270 FFF7FEFF 		bl	disk_read
 10437              	.LVL1031:
4146:./Libraries/FatFs/Src/ff.c **** #endif
 10438              		.loc 1 4146 7 view .LVU3736
 10439 0274 0646     		mov	r6, r0
 10440              	.LVL1032:
4146:./Libraries/FatFs/Src/ff.c **** #endif
 10441              		.loc 1 4146 7 view .LVU3737
 10442 0276 0028     		cmp	r0, #0
 10443 0278 BAD1     		bne	.L1005
4146:./Libraries/FatFs/Src/ff.c **** #endif
 10444              		.loc 1 4146 57 is_stmt 1 discriminator 2 view .LVU3738
4146:./Libraries/FatFs/Src/ff.c **** #endif
 10445              		.loc 1 4146 79 discriminator 2 view .LVU3739
4148:./Libraries/FatFs/Src/ff.c **** 		}
 10446              		.loc 1 4148 4 discriminator 2 view .LVU3740
 10447 027a 0398     		ldr	r0, [sp, #12]
4148:./Libraries/FatFs/Src/ff.c **** 		}
 10448              		.loc 1 4148 13 is_stmt 0 discriminator 2 view .LVU3741
 10449 027c 2762     		str	r7, [r4, #32]
 10450              	.LVL1033:
4152:./Libraries/FatFs/Src/ff.c **** }
 10451              		.loc 1 4152 2 is_stmt 1 discriminator 2 view .LVU3742
 10452              	.LBB1397:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 10453              		.loc 1 751 6 discriminator 2 view .LVU3743
 10454              	.LBB1373:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10455              		.loc 1 756 2 discriminator 2 view .LVU3744
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10456              		.loc 1 756 5 is_stmt 0 discriminator 2 view .LVU3745
 10457 027e 0028     		cmp	r0, #0
 10458 0280 3FF424AF 		beq	.L1006
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10459              		.loc 1 756 5 discriminator 2 view .LVU3746
 10460 0284 CAE6     		b	.L914
 10461              	.LVL1034:
 10462              	.L943:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10463              		.loc 1 756 5 discriminator 2 view .LVU3747
 10464              	.LBE1373:
 10465              	.LBE1397:
4142:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 10466              		.loc 1 4142 5 is_stmt 1 view .LVU3748
4142:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 10467              		.loc 1 4142 9 is_stmt 0 view .LVU3749
 10468 0286 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 10469 0288 0123     		movs	r3, #1
 10470 028a 0191     		str	r1, [sp, #4]
ARM GAS  /tmp/ccaQXGqa.s 			page 348


 10471 028c FFF7FEFF 		bl	disk_write
 10472              	.LVL1035:
4142:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 10473              		.loc 1 4142 8 view .LVU3750
 10474 0290 0199     		ldr	r1, [sp, #4]
 10475 0292 0028     		cmp	r0, #0
 10476 0294 ACD1     		bne	.L1005
4142:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 10477              		.loc 1 4142 62 is_stmt 1 discriminator 2 view .LVU3751
4142:./Libraries/FatFs/Src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 10478              		.loc 1 4142 84 discriminator 2 view .LVU3752
4143:./Libraries/FatFs/Src/ff.c **** 			}
 10479              		.loc 1 4143 5 discriminator 2 view .LVU3753
4143:./Libraries/FatFs/Src/ff.c **** 			}
 10480              		.loc 1 4143 14 is_stmt 0 discriminator 2 view .LVU3754
 10481 0296 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 10482 0298 0398     		ldr	r0, [sp, #12]
 10483 029a 03F07F03 		and	r3, r3, #127
 10484 029e 2375     		strb	r3, [r4, #20]
 10485 02a0 E3E7     		b	.L944
 10486              	.LVL1036:
 10487              	.L915:
4062:./Libraries/FatFs/Src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 10488              		.loc 1 4062 7 is_stmt 1 view .LVU3755
4062:./Libraries/FatFs/Src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 10489              		.loc 1 4062 11 is_stmt 0 view .LVU3756
 10490 02a2 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
4062:./Libraries/FatFs/Src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 10491              		.loc 1 4062 11 view .LVU3757
 10492 02a4 0123     		movs	r3, #1
 10493 02a6 0191     		str	r1, [sp, #4]
 10494 02a8 FFF7FEFF 		bl	disk_write
 10495              	.LVL1037:
4062:./Libraries/FatFs/Src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 10496              		.loc 1 4062 10 view .LVU3758
 10497 02ac 0199     		ldr	r1, [sp, #4]
 10498 02ae 0028     		cmp	r0, #0
 10499 02b0 9ED1     		bne	.L1005
4062:./Libraries/FatFs/Src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 10500              		.loc 1 4062 64 is_stmt 1 discriminator 2 view .LVU3759
4062:./Libraries/FatFs/Src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 10501              		.loc 1 4062 86 discriminator 2 view .LVU3760
4063:./Libraries/FatFs/Src/ff.c **** 					}
 10502              		.loc 1 4063 7 discriminator 2 view .LVU3761
4063:./Libraries/FatFs/Src/ff.c **** 					}
 10503              		.loc 1 4063 16 is_stmt 0 discriminator 2 view .LVU3762
 10504 02b2 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 10505 02b4 0398     		ldr	r0, [sp, #12]
 10506 02b6 03F07F03 		and	r3, r3, #127
 10507 02ba 2375     		strb	r3, [r4, #20]
 10508 02bc F9E6     		b	.L916
 10509              	.LVL1038:
 10510              	.L930:
4063:./Libraries/FatFs/Src/ff.c **** 					}
 10511              		.loc 1 4063 16 discriminator 2 view .LVU3763
 10512 02be 0398     		ldr	r0, [sp, #12]
 10513              	.L938:
ARM GAS  /tmp/ccaQXGqa.s 			page 349


4126:./Libraries/FatFs/Src/ff.c **** 				if (ofs % SS(fs)) {
 10514              		.loc 1 4126 5 is_stmt 1 view .LVU3764
4126:./Libraries/FatFs/Src/ff.c **** 				if (ofs % SS(fs)) {
 10515              		.loc 1 4126 14 is_stmt 0 view .LVU3765
 10516 02c0 2B44     		add	r3, r3, r5
4127:./Libraries/FatFs/Src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
 10517              		.loc 1 4127 13 view .LVU3766
 10518 02c2 C5F30802 		ubfx	r2, r5, #0, #9
4126:./Libraries/FatFs/Src/ff.c **** 				if (ofs % SS(fs)) {
 10519              		.loc 1 4126 14 view .LVU3767
 10520 02c6 A361     		str	r3, [r4, #24]
4127:./Libraries/FatFs/Src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
 10521              		.loc 1 4127 5 is_stmt 1 view .LVU3768
4127:./Libraries/FatFs/Src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
 10522              		.loc 1 4127 8 is_stmt 0 view .LVU3769
 10523 02c8 DAB1     		cbz	r2, .L953
4128:./Libraries/FatFs/Src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
 10524              		.loc 1 4128 6 is_stmt 1 view .LVU3770
 10525              	.LVL1039:
 10526              	.LBB1398:
 10527              	.LBI1398:
 983:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 10528              		.loc 1 983 7 view .LVU3771
 10529              	.LBB1399:
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 10530              		.loc 1 988 2 view .LVU3772
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 10531              		.loc 1 989 27 is_stmt 0 view .LVU3773
 10532 02ca 8269     		ldr	r2, [r0, #24]
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 10533              		.loc 1 988 7 view .LVU3774
 10534 02cc B91E     		subs	r1, r7, #2
 10535              	.LVL1040:
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 10536              		.loc 1 989 2 is_stmt 1 view .LVU3775
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 10537              		.loc 1 989 27 is_stmt 0 view .LVU3776
 10538 02ce 023A     		subs	r2, r2, #2
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 10539              		.loc 1 989 5 view .LVU3777
 10540 02d0 9142     		cmp	r1, r2
 10541 02d2 98D2     		bcs	.L940
 990:./Libraries/FatFs/Src/ff.c **** }
 10542              		.loc 1 990 2 is_stmt 1 view .LVU3778
 990:./Libraries/FatFs/Src/ff.c **** }
 10543              		.loc 1 990 18 is_stmt 0 view .LVU3779
 10544 02d4 4789     		ldrh	r7, [r0, #10]
 10545              	.LVL1041:
 990:./Libraries/FatFs/Src/ff.c **** }
 10546              		.loc 1 990 26 view .LVU3780
 10547 02d6 C26A     		ldr	r2, [r0, #44]
 10548 02d8 01FB0727 		mla	r7, r1, r7, r2
 10549              	.LVL1042:
 990:./Libraries/FatFs/Src/ff.c **** }
 10550              		.loc 1 990 26 view .LVU3781
 10551              	.LBE1399:
 10552              	.LBE1398:
ARM GAS  /tmp/ccaQXGqa.s 			page 350


4129:./Libraries/FatFs/Src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 10553              		.loc 1 4129 6 is_stmt 1 view .LVU3782
4129:./Libraries/FatFs/Src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 10554              		.loc 1 4129 9 is_stmt 0 view .LVU3783
 10555 02dc 002F     		cmp	r7, #0
 10556 02de 92D0     		beq	.L940
4129:./Libraries/FatFs/Src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 10557              		.loc 1 4129 18 is_stmt 1 discriminator 2 view .LVU3784
4129:./Libraries/FatFs/Src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 10558              		.loc 1 4129 39 discriminator 2 view .LVU3785
4130:./Libraries/FatFs/Src/ff.c **** 				}
 10559              		.loc 1 4130 6 discriminator 2 view .LVU3786
4130:./Libraries/FatFs/Src/ff.c **** 				}
 10560              		.loc 1 4130 12 is_stmt 0 discriminator 2 view .LVU3787
 10561 02e0 07EB5527 		add	r7, r7, r5, lsr #9
 10562              	.LVL1043:
4130:./Libraries/FatFs/Src/ff.c **** 				}
 10563              		.loc 1 4130 12 discriminator 2 view .LVU3788
 10564 02e4 AAE7     		b	.L929
 10565              	.LVL1044:
 10566              	.L934:
4123:./Libraries/FatFs/Src/ff.c **** 					fp->clust = clst;
 10567              		.loc 1 4123 45 is_stmt 1 discriminator 3 view .LVU3789
 10568 02e6 0223     		movs	r3, #2
 10569 02e8 0398     		ldr	r0, [sp, #12]
 10570              	.LVL1045:
4123:./Libraries/FatFs/Src/ff.c **** 					fp->clust = clst;
 10571              		.loc 1 4123 45 is_stmt 0 discriminator 3 view .LVU3790
 10572 02ea 6375     		strb	r3, [r4, #21]
4123:./Libraries/FatFs/Src/ff.c **** 					fp->clust = clst;
 10573              		.loc 1 4123 45 is_stmt 1 discriminator 3 view .LVU3791
 10574              	.LVL1046:
 10575              	.LBB1400:
 10576              	.LBI1400:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 10577              		.loc 1 751 6 discriminator 3 view .LVU3792
 10578              	.LBB1401:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10579              		.loc 1 756 2 discriminator 3 view .LVU3793
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10580              		.loc 1 756 5 is_stmt 0 discriminator 3 view .LVU3794
 10581 02ec 0028     		cmp	r0, #0
 10582 02ee 3FF47DAF 		beq	.L926
 10583              	.L947:
 10584              	.LVL1047:
 10585              	.LBB1402:
 10586              	.LBI1402:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 10587              		.loc 1 751 6 is_stmt 1 view .LVU3795
 10588              	.LBB1403:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 10589              		.loc 1 757 3 view .LVU3796
 10590 02f2 C068     		ldr	r0, [r0, #12]
 10591              	.LVL1048:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 10592              		.loc 1 757 3 is_stmt 0 view .LVU3797
 10593              	.LBE1403:
ARM GAS  /tmp/ccaQXGqa.s 			page 351


 10594              	.LBE1402:
 10595              	.LBE1401:
 10596              	.LBE1400:
4123:./Libraries/FatFs/Src/ff.c **** 					fp->clust = clst;
 10597              		.loc 1 4123 45 view .LVU3798
 10598 02f4 0226     		movs	r6, #2
 10599              	.LVL1049:
 10600              	.LBB1408:
 10601              	.LBB1406:
 10602              	.LBB1405:
 10603              	.LBB1404:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 10604              		.loc 1 757 3 view .LVU3799
 10605 02f6 FFF7FEFF 		bl	ff_rel_grant
 10606              	.LVL1050:
 759:./Libraries/FatFs/Src/ff.c **** 
 10607              		.loc 1 759 1 view .LVU3800
 10608 02fa 92E6     		b	.L954
 10609              	.LVL1051:
 10610              	.L1011:
 759:./Libraries/FatFs/Src/ff.c **** 
 10611              		.loc 1 759 1 view .LVU3801
 10612              	.LBE1404:
 10613              	.LBE1405:
 10614              	.LBE1406:
 10615              	.LBE1408:
4123:./Libraries/FatFs/Src/ff.c **** 					fp->clust = clst;
 10616              		.loc 1 4123 45 is_stmt 1 view .LVU3802
 10617 02fc 0223     		movs	r3, #2
 10618 02fe 6375     		strb	r3, [r4, #21]
4123:./Libraries/FatFs/Src/ff.c **** 					fp->clust = clst;
 10619              		.loc 1 4123 45 view .LVU3803
 10620              	.LVL1052:
 10621              	.LBB1409:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 10622              		.loc 1 751 6 view .LVU3804
 10623              	.LBB1407:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10624              		.loc 1 756 2 view .LVU3805
 10625 0300 F7E7     		b	.L947
 10626              	.LVL1053:
 10627              	.L953:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10628              		.loc 1 756 2 is_stmt 0 view .LVU3806
 10629              	.LBE1407:
 10630              	.LBE1409:
4084:./Libraries/FatFs/Src/ff.c **** 		if (ofs) {
 10631              		.loc 1 4084 20 view .LVU3807
 10632 0302 1746     		mov	r7, r2
 10633              	.LVL1054:
4084:./Libraries/FatFs/Src/ff.c **** 		if (ofs) {
 10634              		.loc 1 4084 20 view .LVU3808
 10635 0304 9AE7     		b	.L929
 10636              	.LVL1055:
 10637              	.L1015:
4084:./Libraries/FatFs/Src/ff.c **** 		if (ofs) {
 10638              		.loc 1 4084 20 view .LVU3809
ARM GAS  /tmp/ccaQXGqa.s 			page 352


 10639 0306 E26A     		ldr	r2, [r4, #44]
 10640 0308 40E7     		b	.L898
 10641              		.cfi_endproc
 10642              	.LFE381:
 10644 030a 00BF     		.section	.text.f_opendir,"ax",%progbits
 10645              		.align	1
 10646              		.p2align 2,,3
 10647              		.global	f_opendir
 10648              		.syntax unified
 10649              		.thumb
 10650              		.thumb_func
 10651              		.fpu fpv5-d16
 10653              	f_opendir:
 10654              	.LVL1056:
 10655              	.LFB382:
4166:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 10656              		.loc 1 4166 1 is_stmt 1 view -0
 10657              		.cfi_startproc
 10658              		@ args = 0, pretend = 0, frame = 16
 10659              		@ frame_needed = 0, uses_anonymous_args = 0
4167:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
 10660              		.loc 1 4167 2 view .LVU3811
4168:./Libraries/FatFs/Src/ff.c **** 	_FDID *obj;
 10661              		.loc 1 4168 2 view .LVU3812
4169:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
 10662              		.loc 1 4169 2 view .LVU3813
4173:./Libraries/FatFs/Src/ff.c **** 
 10663              		.loc 1 4173 2 view .LVU3814
4166:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 10664              		.loc 1 4166 1 is_stmt 0 view .LVU3815
 10665 0000 30B5     		push	{r4, r5, lr}
 10666              	.LCFI108:
 10667              		.cfi_def_cfa_offset 12
 10668              		.cfi_offset 4, -12
 10669              		.cfi_offset 5, -8
 10670              		.cfi_offset 14, -4
 10671 0002 85B0     		sub	sp, sp, #20
 10672              	.LCFI109:
 10673              		.cfi_def_cfa_offset 32
4166:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 10674              		.loc 1 4166 1 view .LVU3816
 10675 0004 0191     		str	r1, [sp, #4]
4173:./Libraries/FatFs/Src/ff.c **** 
 10676              		.loc 1 4173 5 view .LVU3817
 10677 0006 0028     		cmp	r0, #0
 10678 0008 46D0     		beq	.L1031
4176:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&path, &fs, 0);
 10679              		.loc 1 4176 2 is_stmt 1 view .LVU3818
 10680 000a 0546     		mov	r5, r0
 10681              	.LVL1057:
4177:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 10682              		.loc 1 4177 2 view .LVU3819
4177:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 10683              		.loc 1 4177 8 is_stmt 0 view .LVU3820
 10684 000c 0022     		movs	r2, #0
 10685 000e 03A9     		add	r1, sp, #12
 10686              	.LVL1058:
ARM GAS  /tmp/ccaQXGqa.s 			page 353


4177:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 10687              		.loc 1 4177 8 view .LVU3821
 10688 0010 01A8     		add	r0, sp, #4
 10689              	.LVL1059:
4177:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 10690              		.loc 1 4177 8 view .LVU3822
 10691 0012 FFF7FEFF 		bl	find_volume
 10692              	.LVL1060:
4178:./Libraries/FatFs/Src/ff.c **** 		obj->fs = fs;
 10693              		.loc 1 4178 2 is_stmt 1 view .LVU3823
4178:./Libraries/FatFs/Src/ff.c **** 		obj->fs = fs;
 10694              		.loc 1 4178 5 is_stmt 0 view .LVU3824
 10695 0016 0446     		mov	r4, r0
 10696 0018 70B1     		cbz	r0, .L1020
 10697              	.LVL1061:
 10698              	.L1043:
4178:./Libraries/FatFs/Src/ff.c **** 		obj->fs = fs;
 10699              		.loc 1 4178 5 view .LVU3825
 10700 001a B4F10C03 		subs	r3, r4, #12
 10701 001e 18BF     		it	ne
 10702 0020 0123     		movne	r3, #1
 10703              	.L1021:
4220:./Libraries/FatFs/Src/ff.c **** 
 10704              		.loc 1 4220 20 is_stmt 1 discriminator 1 view .LVU3826
4220:./Libraries/FatFs/Src/ff.c **** 
 10705              		.loc 1 4220 28 is_stmt 0 discriminator 1 view .LVU3827
 10706 0022 0022     		movs	r2, #0
 10707 0024 2A60     		str	r2, [r5]
 10708              	.L1028:
4222:./Libraries/FatFs/Src/ff.c **** }
 10709              		.loc 1 4222 2 is_stmt 1 view .LVU3828
 10710 0026 0398     		ldr	r0, [sp, #12]
 10711              	.LVL1062:
 10712              	.LBB1410:
 10713              	.LBI1410:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 10714              		.loc 1 751 6 view .LVU3829
 10715              	.LBB1411:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10716              		.loc 1 756 2 view .LVU3830
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10717              		.loc 1 756 5 is_stmt 0 view .LVU3831
 10718 0028 18B1     		cbz	r0, .L1033
 10719 002a 13B1     		cbz	r3, .L1033
 10720 002c 2146     		mov	r1, r4
 10721 002e FFF7FEFF 		bl	unlock_fs.part.0
 10722              	.LVL1063:
 10723              	.L1033:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10724              		.loc 1 756 5 view .LVU3832
 10725              	.LBE1411:
 10726              	.LBE1410:
4223:./Libraries/FatFs/Src/ff.c **** 
 10727              		.loc 1 4223 1 view .LVU3833
 10728 0032 2046     		mov	r0, r4
 10729 0034 05B0     		add	sp, sp, #20
 10730              	.LCFI110:
ARM GAS  /tmp/ccaQXGqa.s 			page 354


 10731              		.cfi_remember_state
 10732              		.cfi_def_cfa_offset 12
 10733              		@ sp needed
 10734 0036 30BD     		pop	{r4, r5, pc}
 10735              	.LVL1064:
 10736              	.L1020:
 10737              	.LCFI111:
 10738              		.cfi_restore_state
4179:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
 10739              		.loc 1 4179 3 is_stmt 1 view .LVU3834
4179:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
 10740              		.loc 1 4179 11 is_stmt 0 view .LVU3835
 10741 0038 039B     		ldr	r3, [sp, #12]
4181:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
 10742              		.loc 1 4181 9 view .LVU3836
 10743 003a 2846     		mov	r0, r5
 10744              	.LVL1065:
4181:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
 10745              		.loc 1 4181 9 view .LVU3837
 10746 003c 0199     		ldr	r1, [sp, #4]
4179:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
 10747              		.loc 1 4179 11 view .LVU3838
 10748 003e 2B60     		str	r3, [r5]
4180:./Libraries/FatFs/Src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
 10749              		.loc 1 4180 18 is_stmt 1 view .LVU3839
4181:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
 10750              		.loc 1 4181 3 view .LVU3840
4181:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
 10751              		.loc 1 4181 9 is_stmt 0 view .LVU3841
 10752 0040 FFF7FEFF 		bl	follow_path
 10753              	.LVL1066:
4182:./Libraries/FatFs/Src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 10754              		.loc 1 4182 3 is_stmt 1 view .LVU3842
4182:./Libraries/FatFs/Src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 10755              		.loc 1 4182 6 is_stmt 0 view .LVU3843
 10756 0044 0446     		mov	r4, r0
 10757 0046 10BB     		cbnz	r0, .L1022
4183:./Libraries/FatFs/Src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
 10758              		.loc 1 4183 4 is_stmt 1 view .LVU3844
4183:./Libraries/FatFs/Src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
 10759              		.loc 1 4183 7 is_stmt 0 view .LVU3845
 10760 0048 95F92F30 		ldrsb	r3, [r5, #47]
 10761 004c 002B     		cmp	r3, #0
 10762 004e 27DB     		blt	.L1045
4184:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 10763              		.loc 1 4184 5 is_stmt 1 view .LVU3846
4184:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 10764              		.loc 1 4184 8 is_stmt 0 view .LVU3847
 10765 0050 AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 10766 0052 DB06     		lsls	r3, r3, #27
 10767 0054 1DD5     		bpl	.L1029
4196:./Libraries/FatFs/Src/ff.c **** 					}
 10768              		.loc 1 4196 7 is_stmt 1 view .LVU3848
4196:./Libraries/FatFs/Src/ff.c **** 					}
 10769              		.loc 1 4196 21 is_stmt 0 view .LVU3849
 10770 0056 039A     		ldr	r2, [sp, #12]
4196:./Libraries/FatFs/Src/ff.c **** 					}
ARM GAS  /tmp/ccaQXGqa.s 			page 355


 10771              		.loc 1 4196 36 view .LVU3850
 10772 0058 296A     		ldr	r1, [r5, #32]
 10773              	.LVL1067:
 10774              	.LBB1412:
 10775              	.LBI1412:
1632:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
 10776              		.loc 1 1632 7 is_stmt 1 view .LVU3851
 10777              	.LBB1413:
1637:./Libraries/FatFs/Src/ff.c **** 
 10778              		.loc 1 1637 2 view .LVU3852
1639:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 10779              		.loc 1 1639 2 view .LVU3853
 10780              	.LBB1414:
 10781              	.LBI1414:
 613:./Libraries/FatFs/Src/ff.c **** {
 10782              		.loc 1 613 6 view .LVU3854
 10783              	.LBB1415:
 615:./Libraries/FatFs/Src/ff.c **** 
 10784              		.loc 1 615 2 view .LVU3855
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 10785              		.loc 1 617 2 view .LVU3856
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 10786              		.loc 1 618 2 view .LVU3857
 619:./Libraries/FatFs/Src/ff.c **** }
 10787              		.loc 1 619 2 view .LVU3858
 619:./Libraries/FatFs/Src/ff.c **** }
 10788              		.loc 1 619 2 is_stmt 0 view .LVU3859
 10789              	.LBE1415:
 10790              	.LBE1414:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 10791              		.loc 1 1640 5 view .LVU3860
 10792 005a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 10793              	.LVL1068:
 10794              	.LBB1417:
 10795              	.LBB1416:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 10796              		.loc 1 618 10 view .LVU3861
 10797 005c CC7E     		ldrb	r4, [r1, #27]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 10798              		.loc 1 618 20 view .LVU3862
 10799 005e 8B7E     		ldrb	r3, [r1, #26]	@ zero_extendqisi2
 10800              	.LBE1416:
 10801              	.LBE1417:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 10802              		.loc 1 1640 5 view .LVU3863
 10803 0060 0328     		cmp	r0, #3
1639:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 10804              		.loc 1 1639 5 view .LVU3864
 10805 0062 43EA0423 		orr	r3, r3, r4, lsl #8
 10806              	.LVL1069:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 10807              		.loc 1 1640 2 is_stmt 1 view .LVU3865
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 10808              		.loc 1 1640 5 is_stmt 0 view .LVU3866
 10809 0066 05D1     		bne	.L1026
1641:./Libraries/FatFs/Src/ff.c **** 	}
 10810              		.loc 1 1641 3 is_stmt 1 view .LVU3867
ARM GAS  /tmp/ccaQXGqa.s 			page 356


 10811              	.LVL1070:
 10812              	.LBB1418:
 10813              	.LBI1418:
 613:./Libraries/FatFs/Src/ff.c **** {
 10814              		.loc 1 613 6 view .LVU3868
 10815              	.LBB1419:
 615:./Libraries/FatFs/Src/ff.c **** 
 10816              		.loc 1 615 2 view .LVU3869
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 10817              		.loc 1 617 2 view .LVU3870
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 10818              		.loc 1 618 2 view .LVU3871
 619:./Libraries/FatFs/Src/ff.c **** }
 10819              		.loc 1 619 2 view .LVU3872
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 10820              		.loc 1 618 10 is_stmt 0 view .LVU3873
 10821 0068 487D     		ldrb	r0, [r1, #21]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 10822              		.loc 1 618 20 view .LVU3874
 10823 006a 097D     		ldrb	r1, [r1, #20]	@ zero_extendqisi2
 10824              	.LVL1071:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 10825              		.loc 1 618 20 view .LVU3875
 10826              	.LBE1419:
 10827              	.LBE1418:
1641:./Libraries/FatFs/Src/ff.c **** 	}
 10828              		.loc 1 1641 9 view .LVU3876
 10829 006c 41EA0021 		orr	r1, r1, r0, lsl #8
1641:./Libraries/FatFs/Src/ff.c **** 	}
 10830              		.loc 1 1641 6 view .LVU3877
 10831 0070 43EA0143 		orr	r3, r3, r1, lsl #16
 10832              	.LVL1072:
 10833              	.L1026:
1644:./Libraries/FatFs/Src/ff.c **** }
 10834              		.loc 1 1644 2 is_stmt 1 view .LVU3878
1644:./Libraries/FatFs/Src/ff.c **** }
 10835              		.loc 1 1644 2 is_stmt 0 view .LVU3879
 10836              	.LBE1413:
 10837              	.LBE1412:
4196:./Libraries/FatFs/Src/ff.c **** 					}
 10838              		.loc 1 4196 19 view .LVU3880
 10839 0074 AB60     		str	r3, [r5, #8]
 10840              	.LVL1073:
 10841              	.L1024:
4202:./Libraries/FatFs/Src/ff.c **** 				obj->id = fs->id;
 10842              		.loc 1 4202 4 is_stmt 1 view .LVU3881
4203:./Libraries/FatFs/Src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 10843              		.loc 1 4203 5 view .LVU3882
4203:./Libraries/FatFs/Src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 10844              		.loc 1 4203 13 is_stmt 0 view .LVU3883
 10845 0076 D388     		ldrh	r3, [r2, #6]
4204:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 10846              		.loc 1 4204 11 view .LVU3884
 10847 0078 2846     		mov	r0, r5
4203:./Libraries/FatFs/Src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 10848              		.loc 1 4203 13 view .LVU3885
 10849 007a AB80     		strh	r3, [r5, #4]	@ movhi
ARM GAS  /tmp/ccaQXGqa.s 			page 357


4204:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 10850              		.loc 1 4204 5 is_stmt 1 view .LVU3886
4204:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 10851              		.loc 1 4204 11 is_stmt 0 view .LVU3887
 10852 007c FFF7FEFF 		bl	dir_sdi.constprop.0
 10853              	.LVL1074:
4206:./Libraries/FatFs/Src/ff.c **** 					if (obj->sclust) {
 10854              		.loc 1 4206 5 is_stmt 1 view .LVU3888
4206:./Libraries/FatFs/Src/ff.c **** 					if (obj->sclust) {
 10855              		.loc 1 4206 8 is_stmt 0 view .LVU3889
 10856 0080 0446     		mov	r4, r0
 10857 0082 20B9     		cbnz	r0, .L1022
4207:./Libraries/FatFs/Src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 10858              		.loc 1 4207 6 is_stmt 1 view .LVU3890
4207:./Libraries/FatFs/Src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 10859              		.loc 1 4207 9 is_stmt 0 view .LVU3891
 10860 0084 AB68     		ldr	r3, [r5, #8]
 10861 0086 6BB9     		cbnz	r3, .L1046
4211:./Libraries/FatFs/Src/ff.c **** 					}
 10862              		.loc 1 4211 7 is_stmt 1 view .LVU3892
4211:./Libraries/FatFs/Src/ff.c **** 					}
 10863              		.loc 1 4211 19 is_stmt 0 view .LVU3893
 10864 0088 0123     		movs	r3, #1
 10865 008a 2861     		str	r0, [r5, #16]
 10866              	.LVL1075:
4217:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
 10867              		.loc 1 4217 16 is_stmt 1 view .LVU3894
4218:./Libraries/FatFs/Src/ff.c **** 	}
 10868              		.loc 1 4218 3 view .LVU3895
4220:./Libraries/FatFs/Src/ff.c **** 
 10869              		.loc 1 4220 2 view .LVU3896
 10870 008c CBE7     		b	.L1028
 10871              	.LVL1076:
 10872              	.L1022:
4217:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
 10873              		.loc 1 4217 16 view .LVU3897
4218:./Libraries/FatFs/Src/ff.c **** 	}
 10874              		.loc 1 4218 3 view .LVU3898
4218:./Libraries/FatFs/Src/ff.c **** 	}
 10875              		.loc 1 4218 6 is_stmt 0 view .LVU3899
 10876 008e 042C     		cmp	r4, #4
 10877 0090 C3D1     		bne	.L1043
 10878              	.LVL1077:
 10879              	.L1029:
4166:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 10880              		.loc 1 4166 1 view .LVU3900
 10881 0092 0123     		movs	r3, #1
4199:./Libraries/FatFs/Src/ff.c **** 				}
 10882              		.loc 1 4199 10 view .LVU3901
 10883 0094 0524     		movs	r4, #5
 10884 0096 C4E7     		b	.L1021
 10885              	.LVL1078:
 10886              	.L1031:
4173:./Libraries/FatFs/Src/ff.c **** 
 10887              		.loc 1 4173 18 view .LVU3902
 10888 0098 0924     		movs	r4, #9
4222:./Libraries/FatFs/Src/ff.c **** }
ARM GAS  /tmp/ccaQXGqa.s 			page 358


 10889              		.loc 1 4222 19 is_stmt 1 view .LVU3903
4223:./Libraries/FatFs/Src/ff.c **** 
 10890              		.loc 1 4223 1 is_stmt 0 view .LVU3904
 10891 009a 2046     		mov	r0, r4
 10892              	.LVL1079:
4223:./Libraries/FatFs/Src/ff.c **** 
 10893              		.loc 1 4223 1 view .LVU3905
 10894 009c 05B0     		add	sp, sp, #20
 10895              	.LCFI112:
 10896              		.cfi_remember_state
 10897              		.cfi_def_cfa_offset 12
 10898              		@ sp needed
 10899 009e 30BD     		pop	{r4, r5, pc}
 10900              	.LVL1080:
 10901              	.L1045:
 10902              	.LCFI113:
 10903              		.cfi_restore_state
4223:./Libraries/FatFs/Src/ff.c **** 
 10904              		.loc 1 4223 1 view .LVU3906
 10905 00a0 039A     		ldr	r2, [sp, #12]
 10906 00a2 E8E7     		b	.L1024
 10907              	.L1046:
4208:./Libraries/FatFs/Src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
 10908              		.loc 1 4208 7 is_stmt 1 view .LVU3907
4208:./Libraries/FatFs/Src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
 10909              		.loc 1 4208 21 is_stmt 0 view .LVU3908
 10910 00a4 0146     		mov	r1, r0
 10911 00a6 2846     		mov	r0, r5
 10912              	.LVL1081:
4208:./Libraries/FatFs/Src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
 10913              		.loc 1 4208 21 view .LVU3909
 10914 00a8 FFF7FEFF 		bl	inc_lock
 10915              	.LVL1082:
 10916 00ac 0123     		movs	r3, #1
4208:./Libraries/FatFs/Src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
 10917              		.loc 1 4208 19 view .LVU3910
 10918 00ae 2861     		str	r0, [r5, #16]
4209:./Libraries/FatFs/Src/ff.c **** 					} else {
 10919              		.loc 1 4209 7 is_stmt 1 view .LVU3911
4209:./Libraries/FatFs/Src/ff.c **** 					} else {
 10920              		.loc 1 4209 10 is_stmt 0 view .LVU3912
 10921 00b0 0028     		cmp	r0, #0
 10922 00b2 B8D1     		bne	.L1028
4209:./Libraries/FatFs/Src/ff.c **** 					} else {
 10923              		.loc 1 4209 29 view .LVU3913
 10924 00b4 1224     		movs	r4, #18
 10925 00b6 B4E7     		b	.L1021
 10926              		.cfi_endproc
 10927              	.LFE382:
 10929              		.section	.text.f_closedir,"ax",%progbits
 10930              		.align	1
 10931              		.p2align 2,,3
 10932              		.global	f_closedir
 10933              		.syntax unified
 10934              		.thumb
 10935              		.thumb_func
 10936              		.fpu fpv5-d16
ARM GAS  /tmp/ccaQXGqa.s 			page 359


 10938              	f_closedir:
 10939              	.LVL1083:
 10940              	.LFB383:
4235:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 10941              		.loc 1 4235 1 is_stmt 1 view -0
 10942              		.cfi_startproc
 10943              		@ args = 0, pretend = 0, frame = 8
 10944              		@ frame_needed = 0, uses_anonymous_args = 0
4236:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
 10945              		.loc 1 4236 2 view .LVU3915
4237:./Libraries/FatFs/Src/ff.c **** 
 10946              		.loc 1 4237 2 view .LVU3916
4240:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 10947              		.loc 1 4240 2 view .LVU3917
4235:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 10948              		.loc 1 4235 1 is_stmt 0 view .LVU3918
 10949 0000 30B5     		push	{r4, r5, lr}
 10950              	.LCFI114:
 10951              		.cfi_def_cfa_offset 12
 10952              		.cfi_offset 4, -12
 10953              		.cfi_offset 5, -8
 10954              		.cfi_offset 14, -4
 10955 0002 83B0     		sub	sp, sp, #12
 10956              	.LCFI115:
 10957              		.cfi_def_cfa_offset 24
4235:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 10958              		.loc 1 4235 1 view .LVU3919
 10959 0004 0546     		mov	r5, r0
4240:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 10960              		.loc 1 4240 8 view .LVU3920
 10961 0006 01A9     		add	r1, sp, #4
 10962 0008 FFF7FEFF 		bl	validate
 10963              	.LVL1084:
4241:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 10964              		.loc 1 4241 2 is_stmt 1 view .LVU3921
4241:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 10965              		.loc 1 4241 5 is_stmt 0 view .LVU3922
 10966 000c 0446     		mov	r4, r0
 10967 000e 40B9     		cbnz	r0, .L1048
4243:./Libraries/FatFs/Src/ff.c **** 			res = dec_lock(dp->obj.lockid);
 10968              		.loc 1 4243 3 is_stmt 1 view .LVU3923
4243:./Libraries/FatFs/Src/ff.c **** 			res = dec_lock(dp->obj.lockid);
 10969              		.loc 1 4243 14 is_stmt 0 view .LVU3924
 10970 0010 2B69     		ldr	r3, [r5, #16]
4243:./Libraries/FatFs/Src/ff.c **** 			res = dec_lock(dp->obj.lockid);
 10971              		.loc 1 4243 6 view .LVU3925
 10972 0012 4BB9     		cbnz	r3, .L1065
 10973              	.LVL1085:
 10974              	.L1050:
4249:./Libraries/FatFs/Src/ff.c **** 		}
 10975              		.loc 1 4249 4 is_stmt 1 view .LVU3926
4249:./Libraries/FatFs/Src/ff.c **** 		}
 10976              		.loc 1 4249 15 is_stmt 0 view .LVU3927
 10977 0014 0023     		movs	r3, #0
 10978 0016 2B60     		str	r3, [r5]
 10979              	.L1051:
4252:./Libraries/FatFs/Src/ff.c **** #endif
ARM GAS  /tmp/ccaQXGqa.s 			page 360


 10980              		.loc 1 4252 3 is_stmt 1 view .LVU3928
 10981 0018 019B     		ldr	r3, [sp, #4]
 10982              	.LVL1086:
 10983              	.LBB1426:
 10984              	.LBI1426:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 10985              		.loc 1 751 6 view .LVU3929
 10986              	.LBB1427:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10987              		.loc 1 756 2 view .LVU3930
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 10988              		.loc 1 756 5 is_stmt 0 view .LVU3931
 10989 001a 13B1     		cbz	r3, .L1048
 10990              	.LVL1087:
 10991              	.LBB1428:
 10992              	.LBI1428:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 10993              		.loc 1 751 6 is_stmt 1 view .LVU3932
 10994              	.LBB1429:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 10995              		.loc 1 757 3 view .LVU3933
 10996 001c D868     		ldr	r0, [r3, #12]
 10997 001e FFF7FEFF 		bl	ff_rel_grant
 10998              	.LVL1088:
 10999              	.L1048:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 11000              		.loc 1 757 3 is_stmt 0 view .LVU3934
 11001              	.LBE1429:
 11002              	.LBE1428:
 11003              	.LBE1427:
 11004              	.LBE1426:
4255:./Libraries/FatFs/Src/ff.c **** }
 11005              		.loc 1 4255 2 is_stmt 1 view .LVU3935
4256:./Libraries/FatFs/Src/ff.c **** 
 11006              		.loc 1 4256 1 is_stmt 0 view .LVU3936
 11007 0022 2046     		mov	r0, r4
 11008 0024 03B0     		add	sp, sp, #12
 11009              	.LCFI116:
 11010              		.cfi_remember_state
 11011              		.cfi_def_cfa_offset 12
 11012              		@ sp needed
 11013 0026 30BD     		pop	{r4, r5, pc}
 11014              	.LVL1089:
 11015              	.L1065:
 11016              	.LCFI117:
 11017              		.cfi_restore_state
4244:./Libraries/FatFs/Src/ff.c **** 		}
 11018              		.loc 1 4244 4 is_stmt 1 view .LVU3937
 11019              	.LBB1430:
 11020              	.LBI1430:
 840:./Libraries/FatFs/Src/ff.c **** 	UINT i			/* Semaphore index (1..) */
 11021              		.loc 1 840 9 view .LVU3938
 11022              	.LBB1431:
 844:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 11023              		.loc 1 844 2 view .LVU3939
 845:./Libraries/FatFs/Src/ff.c **** 
 11024              		.loc 1 845 2 view .LVU3940
ARM GAS  /tmp/ccaQXGqa.s 			page 361


 848:./Libraries/FatFs/Src/ff.c **** 		n = Files[i].ctr;
 11025              		.loc 1 848 2 view .LVU3941
 848:./Libraries/FatFs/Src/ff.c **** 		n = Files[i].ctr;
 11026              		.loc 1 848 5 is_stmt 0 view .LVU3942
 11027 0028 013B     		subs	r3, r3, #1
 11028              	.LVL1090:
 848:./Libraries/FatFs/Src/ff.c **** 		n = Files[i].ctr;
 11029              		.loc 1 848 5 view .LVU3943
 11030 002a 012B     		cmp	r3, #1
 11031 002c 10D8     		bhi	.L1057
 849:./Libraries/FatFs/Src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 11032              		.loc 1 849 3 is_stmt 1 view .LVU3944
 849:./Libraries/FatFs/Src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 11033              		.loc 1 849 5 is_stmt 0 view .LVU3945
 11034 002e 0A49     		ldr	r1, .L1067
 11035 0030 1801     		lsls	r0, r3, #4
 11036              	.LVL1091:
 849:./Libraries/FatFs/Src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 11037              		.loc 1 849 5 view .LVU3946
 11038 0032 01EB0313 		add	r3, r1, r3, lsl #4
 11039              	.LVL1092:
 849:./Libraries/FatFs/Src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 11040              		.loc 1 849 5 view .LVU3947
 11041 0036 9A89     		ldrh	r2, [r3, #12]
 11042              	.LVL1093:
 850:./Libraries/FatFs/Src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 11043              		.loc 1 850 3 is_stmt 1 view .LVU3948
 850:./Libraries/FatFs/Src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 11044              		.loc 1 850 6 is_stmt 0 view .LVU3949
 11045 0038 B2F5807F 		cmp	r2, #256
 11046 003c 0AD0     		beq	.L1066
 851:./Libraries/FatFs/Src/ff.c **** 		Files[i].ctr = n;
 11047              		.loc 1 851 3 is_stmt 1 view .LVU3950
 851:./Libraries/FatFs/Src/ff.c **** 		Files[i].ctr = n;
 11048              		.loc 1 851 6 is_stmt 0 view .LVU3951
 11049 003e 22B1     		cbz	r2, .L1053
 851:./Libraries/FatFs/Src/ff.c **** 		Files[i].ctr = n;
 11050              		.loc 1 851 14 is_stmt 1 view .LVU3952
 851:./Libraries/FatFs/Src/ff.c **** 		Files[i].ctr = n;
 11051              		.loc 1 851 15 is_stmt 0 view .LVU3953
 11052 0040 013A     		subs	r2, r2, #1
 11053              	.LVL1094:
 851:./Libraries/FatFs/Src/ff.c **** 		Files[i].ctr = n;
 11054              		.loc 1 851 15 view .LVU3954
 11055 0042 92B2     		uxth	r2, r2
 11056              	.LVL1095:
 852:./Libraries/FatFs/Src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 11057              		.loc 1 852 3 is_stmt 1 view .LVU3955
 852:./Libraries/FatFs/Src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 11058              		.loc 1 852 16 is_stmt 0 view .LVU3956
 11059 0044 9A81     		strh	r2, [r3, #12]	@ movhi
 853:./Libraries/FatFs/Src/ff.c **** 		res = FR_OK;
 11060              		.loc 1 853 3 is_stmt 1 view .LVU3957
 853:./Libraries/FatFs/Src/ff.c **** 		res = FR_OK;
 11061              		.loc 1 853 6 is_stmt 0 view .LVU3958
 11062 0046 002A     		cmp	r2, #0
 11063 0048 E4D1     		bne	.L1050
ARM GAS  /tmp/ccaQXGqa.s 			page 362


 11064              	.LVL1096:
 11065              	.L1053:
 853:./Libraries/FatFs/Src/ff.c **** 		res = FR_OK;
 11066              		.loc 1 853 15 is_stmt 1 view .LVU3959
 853:./Libraries/FatFs/Src/ff.c **** 		res = FR_OK;
 11067              		.loc 1 853 27 is_stmt 0 view .LVU3960
 11068 004a 0023     		movs	r3, #0
 11069 004c 0B50     		str	r3, [r1, r0]
 11070              	.LVL1097:
 858:./Libraries/FatFs/Src/ff.c **** }
 11071              		.loc 1 858 2 is_stmt 1 view .LVU3961
 858:./Libraries/FatFs/Src/ff.c **** }
 11072              		.loc 1 858 2 is_stmt 0 view .LVU3962
 11073              	.LBE1431:
 11074              	.LBE1430:
4246:./Libraries/FatFs/Src/ff.c **** #endif
 11075              		.loc 1 4246 3 is_stmt 1 view .LVU3963
 11076 004e E1E7     		b	.L1050
 11077              	.LVL1098:
 11078              	.L1057:
 11079              	.LBB1433:
 11080              	.LBB1432:
 856:./Libraries/FatFs/Src/ff.c **** 	}
 11081              		.loc 1 856 7 is_stmt 0 view .LVU3964
 11082 0050 0224     		movs	r4, #2
 11083 0052 E1E7     		b	.L1051
 11084              	.LVL1099:
 11085              	.L1066:
 852:./Libraries/FatFs/Src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 11086              		.loc 1 852 3 is_stmt 1 view .LVU3965
 852:./Libraries/FatFs/Src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 11087              		.loc 1 852 16 is_stmt 0 view .LVU3966
 11088 0054 9C81     		strh	r4, [r3, #12]	@ movhi
 853:./Libraries/FatFs/Src/ff.c **** 		res = FR_OK;
 11089              		.loc 1 853 3 is_stmt 1 view .LVU3967
 11090 0056 F8E7     		b	.L1053
 11091              	.L1068:
 11092              		.align	2
 11093              	.L1067:
 11094 0058 00000000 		.word	.LANCHOR0
 11095              	.LBE1432:
 11096              	.LBE1433:
 11097              		.cfi_endproc
 11098              	.LFE383:
 11100              		.section	.text.f_readdir,"ax",%progbits
 11101              		.align	1
 11102              		.p2align 2,,3
 11103              		.global	f_readdir
 11104              		.syntax unified
 11105              		.thumb
 11106              		.thumb_func
 11107              		.fpu fpv5-d16
 11109              	f_readdir:
 11110              	.LVL1100:
 11111              	.LFB384:
4269:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 11112              		.loc 1 4269 1 view -0
ARM GAS  /tmp/ccaQXGqa.s 			page 363


 11113              		.cfi_startproc
 11114              		@ args = 0, pretend = 0, frame = 8
 11115              		@ frame_needed = 0, uses_anonymous_args = 0
4270:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
 11116              		.loc 1 4270 2 view .LVU3969
4271:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
 11117              		.loc 1 4271 2 view .LVU3970
4275:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 11118              		.loc 1 4275 2 view .LVU3971
4269:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 11119              		.loc 1 4269 1 is_stmt 0 view .LVU3972
 11120 0000 70B5     		push	{r4, r5, r6, lr}
 11121              	.LCFI118:
 11122              		.cfi_def_cfa_offset 16
 11123              		.cfi_offset 4, -16
 11124              		.cfi_offset 5, -12
 11125              		.cfi_offset 6, -8
 11126              		.cfi_offset 14, -4
 11127 0002 82B0     		sub	sp, sp, #8
 11128              	.LCFI119:
 11129              		.cfi_def_cfa_offset 24
4269:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 11130              		.loc 1 4269 1 view .LVU3973
 11131 0004 0E46     		mov	r6, r1
 11132 0006 0546     		mov	r5, r0
4275:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 11133              		.loc 1 4275 8 view .LVU3974
 11134 0008 01A9     		add	r1, sp, #4
 11135              	.LVL1101:
4275:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 11136              		.loc 1 4275 8 view .LVU3975
 11137 000a FFF7FEFF 		bl	validate
 11138              	.LVL1102:
4276:./Libraries/FatFs/Src/ff.c **** 		if (!fno) {
 11139              		.loc 1 4276 2 is_stmt 1 view .LVU3976
4276:./Libraries/FatFs/Src/ff.c **** 		if (!fno) {
 11140              		.loc 1 4276 5 is_stmt 0 view .LVU3977
 11141 000e E0B9     		cbnz	r0, .L1087
4277:./Libraries/FatFs/Src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 11142              		.loc 1 4277 3 is_stmt 1 view .LVU3978
4278:./Libraries/FatFs/Src/ff.c **** 		} else {
 11143              		.loc 1 4278 10 is_stmt 0 view .LVU3979
 11144 0010 2846     		mov	r0, r5
 11145              	.LVL1103:
4277:./Libraries/FatFs/Src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 11146              		.loc 1 4277 6 view .LVU3980
 11147 0012 C6B1     		cbz	r6, .L1089
4280:./Libraries/FatFs/Src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
 11148              		.loc 1 4280 19 is_stmt 1 view .LVU3981
4281:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 11149              		.loc 1 4281 4 view .LVU3982
4281:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 11150              		.loc 1 4281 10 is_stmt 0 view .LVU3983
 11151 0014 FFF7FEFF 		bl	dir_read.constprop.0
 11152              	.LVL1104:
4282:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
 11153              		.loc 1 4282 4 is_stmt 1 view .LVU3984
ARM GAS  /tmp/ccaQXGqa.s 			page 364


4283:./Libraries/FatFs/Src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 11154              		.loc 1 4283 4 view .LVU3985
4283:./Libraries/FatFs/Src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 11155              		.loc 1 4283 7 is_stmt 0 view .LVU3986
 11156 0018 10F0FB04 		ands	r4, r0, #251
 11157 001c 0DD1     		bne	.L1088
 11158              	.LVL1105:
4284:./Libraries/FatFs/Src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 11159              		.loc 1 4284 5 is_stmt 1 view .LVU3987
 11160 001e EB69     		ldr	r3, [r5, #28]
 11161              	.LVL1106:
 11162              	.LBB1434:
 11163              	.LBI1434:
2444:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
 11164              		.loc 1 2444 6 view .LVU3988
 11165              	.LBB1435:
2449:./Libraries/FatFs/Src/ff.c **** 	TCHAR c;
 11166              		.loc 1 2449 2 view .LVU3989
2450:./Libraries/FatFs/Src/ff.c **** 	DWORD tm;
 11167              		.loc 1 2450 2 view .LVU3990
2451:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0
 11168              		.loc 1 2451 2 view .LVU3991
2458:./Libraries/FatFs/Src/ff.c **** 	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 11169              		.loc 1 2458 2 view .LVU3992
2458:./Libraries/FatFs/Src/ff.c **** 	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 11170              		.loc 1 2458 16 is_stmt 0 view .LVU3993
 11171 0020 7472     		strb	r4, [r6, #9]
2459:./Libraries/FatFs/Src/ff.c **** 
 11172              		.loc 1 2459 2 is_stmt 1 view .LVU3994
2459:./Libraries/FatFs/Src/ff.c **** 
 11173              		.loc 1 2459 5 is_stmt 0 view .LVU3995
 11174 0022 23B1     		cbz	r3, .L1074
 11175 0024 3146     		mov	r1, r6
 11176 0026 05F12000 		add	r0, r5, #32
 11177 002a FFF7FEFF 		bl	get_fileinfo.isra.0.part.0
 11178              	.LVL1107:
 11179              	.L1074:
2459:./Libraries/FatFs/Src/ff.c **** 
 11180              		.loc 1 2459 5 view .LVU3996
 11181              	.LBE1435:
 11182              	.LBE1434:
4285:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 11183              		.loc 1 4285 5 is_stmt 1 view .LVU3997
4285:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 11184              		.loc 1 4285 11 is_stmt 0 view .LVU3998
 11185 002e 2846     		mov	r0, r5
 11186 0030 0021     		movs	r1, #0
 11187 0032 FFF7FEFF 		bl	dir_next
 11188              	.LVL1108:
4286:./Libraries/FatFs/Src/ff.c **** 			}
 11189              		.loc 1 4286 5 is_stmt 1 view .LVU3999
4286:./Libraries/FatFs/Src/ff.c **** 			}
 11190              		.loc 1 4286 8 is_stmt 0 view .LVU4000
 11191 0036 0428     		cmp	r0, #4
 11192 0038 15D0     		beq	.L1076
 11193              	.LVL1109:
 11194              	.L1088:
ARM GAS  /tmp/ccaQXGqa.s 			page 365


4286:./Libraries/FatFs/Src/ff.c **** 			}
 11195              		.loc 1 4286 8 view .LVU4001
 11196 003a B0F10C03 		subs	r3, r0, #12
 11197 003e 0446     		mov	r4, r0
 11198 0040 18BF     		it	ne
 11199 0042 0123     		movne	r3, #1
 11200 0044 06E0     		b	.L1071
 11201              	.LVL1110:
 11202              	.L1089:
4278:./Libraries/FatFs/Src/ff.c **** 		} else {
 11203              		.loc 1 4278 4 is_stmt 1 view .LVU4002
4278:./Libraries/FatFs/Src/ff.c **** 		} else {
 11204              		.loc 1 4278 10 is_stmt 0 view .LVU4003
 11205 0046 FFF7FEFF 		bl	dir_sdi.constprop.0
 11206              	.LVL1111:
 11207              	.L1087:
4278:./Libraries/FatFs/Src/ff.c **** 		} else {
 11208              		.loc 1 4278 10 view .LVU4004
 11209 004a B0F10C03 		subs	r3, r0, #12
 11210 004e 0446     		mov	r4, r0
 11211              	.LVL1112:
4278:./Libraries/FatFs/Src/ff.c **** 		} else {
 11212              		.loc 1 4278 10 view .LVU4005
 11213 0050 18BF     		it	ne
 11214 0052 0123     		movne	r3, #1
 11215              	.L1071:
 11216              	.LVL1113:
4288:./Libraries/FatFs/Src/ff.c **** 		}
 11217              		.loc 1 4288 17 is_stmt 1 view .LVU4006
4291:./Libraries/FatFs/Src/ff.c **** }
 11218              		.loc 1 4291 2 view .LVU4007
 11219 0054 0198     		ldr	r0, [sp, #4]
 11220              	.LVL1114:
 11221              	.LBB1436:
 11222              	.LBI1436:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 11223              		.loc 1 751 6 view .LVU4008
 11224              	.LBB1437:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11225              		.loc 1 756 2 view .LVU4009
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11226              		.loc 1 756 5 is_stmt 0 view .LVU4010
 11227 0056 18B1     		cbz	r0, .L1075
 11228 0058 13B1     		cbz	r3, .L1075
 11229 005a 2146     		mov	r1, r4
 11230 005c FFF7FEFF 		bl	unlock_fs.part.0
 11231              	.LVL1115:
 11232              	.L1075:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11233              		.loc 1 756 5 view .LVU4011
 11234              	.LBE1437:
 11235              	.LBE1436:
4291:./Libraries/FatFs/Src/ff.c **** }
 11236              		.loc 1 4291 2 is_stmt 1 view .LVU4012
4291:./Libraries/FatFs/Src/ff.c **** }
 11237              		.loc 1 4291 19 view .LVU4013
4292:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 366


 11238              		.loc 1 4292 1 is_stmt 0 view .LVU4014
 11239 0060 2046     		mov	r0, r4
 11240 0062 02B0     		add	sp, sp, #8
 11241              	.LCFI120:
 11242              		.cfi_remember_state
 11243              		.cfi_def_cfa_offset 16
 11244              		@ sp needed
 11245 0064 70BD     		pop	{r4, r5, r6, pc}
 11246              	.LVL1116:
 11247              	.L1076:
 11248              	.LCFI121:
 11249              		.cfi_restore_state
4292:./Libraries/FatFs/Src/ff.c **** 
 11250              		.loc 1 4292 1 view .LVU4015
 11251 0066 0123     		movs	r3, #1
 11252 0068 F4E7     		b	.L1071
 11253              		.cfi_endproc
 11254              	.LFE384:
 11256 006a 00BF     		.section	.text.f_stat,"ax",%progbits
 11257              		.align	1
 11258              		.p2align 2,,3
 11259              		.global	f_stat
 11260              		.syntax unified
 11261              		.thumb
 11262              		.thumb_func
 11263              		.fpu fpv5-d16
 11265              	f_stat:
 11266              	.LVL1117:
 11267              	.LFB385:
4357:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 11268              		.loc 1 4357 1 is_stmt 1 view -0
 11269              		.cfi_startproc
 11270              		@ args = 0, pretend = 0, frame = 56
 11271              		@ frame_needed = 0, uses_anonymous_args = 0
4358:./Libraries/FatFs/Src/ff.c **** 	DIR dj;
 11272              		.loc 1 4358 2 view .LVU4017
4359:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
 11273              		.loc 1 4359 2 view .LVU4018
4364:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 11274              		.loc 1 4364 2 view .LVU4019
4357:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 11275              		.loc 1 4357 1 is_stmt 0 view .LVU4020
 11276 0000 30B5     		push	{r4, r5, lr}
 11277              	.LCFI122:
 11278              		.cfi_def_cfa_offset 12
 11279              		.cfi_offset 4, -12
 11280              		.cfi_offset 5, -8
 11281              		.cfi_offset 14, -4
 11282 0002 8FB0     		sub	sp, sp, #60
 11283              	.LCFI123:
 11284              		.cfi_def_cfa_offset 72
4357:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 11285              		.loc 1 4357 1 view .LVU4021
 11286 0004 0D46     		mov	r5, r1
4364:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 11287              		.loc 1 4364 8 view .LVU4022
 11288 0006 0022     		movs	r2, #0
ARM GAS  /tmp/ccaQXGqa.s 			page 367


4357:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 11289              		.loc 1 4357 1 view .LVU4023
 11290 0008 0190     		str	r0, [sp, #4]
4364:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 11291              		.loc 1 4364 8 view .LVU4024
 11292 000a 02A9     		add	r1, sp, #8
 11293              	.LVL1118:
4364:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 11294              		.loc 1 4364 8 view .LVU4025
 11295 000c 01A8     		add	r0, sp, #4
 11296              	.LVL1119:
4364:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 11297              		.loc 1 4364 8 view .LVU4026
 11298 000e FFF7FEFF 		bl	find_volume
 11299              	.LVL1120:
4365:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
 11300              		.loc 1 4365 2 is_stmt 1 view .LVU4027
4365:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
 11301              		.loc 1 4365 5 is_stmt 0 view .LVU4028
 11302 0012 68B1     		cbz	r0, .L1091
 11303 0014 B0F10C03 		subs	r3, r0, #12
 11304 0018 0446     		mov	r4, r0
 11305 001a 18BF     		it	ne
 11306 001c 0123     		movne	r3, #1
 11307              	.LVL1121:
 11308              	.L1092:
4375:./Libraries/FatFs/Src/ff.c **** 	}
 11309              		.loc 1 4375 16 is_stmt 1 view .LVU4029
4378:./Libraries/FatFs/Src/ff.c **** }
 11310              		.loc 1 4378 2 view .LVU4030
 11311 001e 0298     		ldr	r0, [sp, #8]
 11312              	.LVL1122:
 11313              	.LBB1438:
 11314              	.LBI1438:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 11315              		.loc 1 751 6 view .LVU4031
 11316              	.LBB1439:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11317              		.loc 1 756 2 view .LVU4032
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11318              		.loc 1 756 5 is_stmt 0 view .LVU4033
 11319 0020 18B1     		cbz	r0, .L1096
 11320 0022 13B1     		cbz	r3, .L1096
 11321 0024 2146     		mov	r1, r4
 11322 0026 FFF7FEFF 		bl	unlock_fs.part.0
 11323              	.LVL1123:
 11324              	.L1096:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11325              		.loc 1 756 5 view .LVU4034
 11326              	.LBE1439:
 11327              	.LBE1438:
4378:./Libraries/FatFs/Src/ff.c **** }
 11328              		.loc 1 4378 2 is_stmt 1 view .LVU4035
4378:./Libraries/FatFs/Src/ff.c **** }
 11329              		.loc 1 4378 26 view .LVU4036
4379:./Libraries/FatFs/Src/ff.c **** 
 11330              		.loc 1 4379 1 is_stmt 0 view .LVU4037
ARM GAS  /tmp/ccaQXGqa.s 			page 368


 11331 002a 2046     		mov	r0, r4
 11332 002c 0FB0     		add	sp, sp, #60
 11333              	.LCFI124:
 11334              		.cfi_remember_state
 11335              		.cfi_def_cfa_offset 12
 11336              		@ sp needed
 11337 002e 30BD     		pop	{r4, r5, pc}
 11338              	.LVL1124:
 11339              	.L1091:
 11340              	.LCFI125:
 11341              		.cfi_restore_state
4366:./Libraries/FatFs/Src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 11342              		.loc 1 4366 25 is_stmt 1 view .LVU4038
4367:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 11343              		.loc 1 4367 3 view .LVU4039
4367:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 11344              		.loc 1 4367 9 is_stmt 0 view .LVU4040
 11345 0030 02A8     		add	r0, sp, #8
 11346              	.LVL1125:
4367:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 11347              		.loc 1 4367 9 view .LVU4041
 11348 0032 0199     		ldr	r1, [sp, #4]
 11349 0034 FFF7FEFF 		bl	follow_path
 11350              	.LVL1126:
4368:./Libraries/FatFs/Src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
 11351              		.loc 1 4368 3 is_stmt 1 view .LVU4042
4368:./Libraries/FatFs/Src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
 11352              		.loc 1 4368 6 is_stmt 0 view .LVU4043
 11353 0038 0446     		mov	r4, r0
 11354 003a 68B9     		cbnz	r0, .L1109
4369:./Libraries/FatFs/Src/ff.c **** 				res = FR_INVALID_NAME;
 11355              		.loc 1 4369 4 is_stmt 1 view .LVU4044
4369:./Libraries/FatFs/Src/ff.c **** 				res = FR_INVALID_NAME;
 11356              		.loc 1 4369 7 is_stmt 0 view .LVU4045
 11357 003c 9DF93730 		ldrsb	r3, [sp, #55]
 11358 0040 002B     		cmp	r3, #0
 11359 0042 0EDB     		blt	.L1097
4372:./Libraries/FatFs/Src/ff.c **** 			}
 11360              		.loc 1 4372 5 is_stmt 1 view .LVU4046
4372:./Libraries/FatFs/Src/ff.c **** 			}
 11361              		.loc 1 4372 8 is_stmt 0 view .LVU4047
 11362 0044 35B1     		cbz	r5, .L1108
4372:./Libraries/FatFs/Src/ff.c **** 			}
 11363              		.loc 1 4372 14 is_stmt 1 discriminator 1 view .LVU4048
 11364 0046 099B     		ldr	r3, [sp, #36]
 11365              	.LVL1127:
 11366              	.LBB1440:
 11367              	.LBI1440:
2444:./Libraries/FatFs/Src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
 11368              		.loc 1 2444 6 discriminator 1 view .LVU4049
 11369              	.LBB1441:
2449:./Libraries/FatFs/Src/ff.c **** 	TCHAR c;
 11370              		.loc 1 2449 2 discriminator 1 view .LVU4050
2450:./Libraries/FatFs/Src/ff.c **** 	DWORD tm;
 11371              		.loc 1 2450 2 discriminator 1 view .LVU4051
2451:./Libraries/FatFs/Src/ff.c **** #if _USE_LFN != 0
 11372              		.loc 1 2451 2 discriminator 1 view .LVU4052
ARM GAS  /tmp/ccaQXGqa.s 			page 369


2458:./Libraries/FatFs/Src/ff.c **** 	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 11373              		.loc 1 2458 2 discriminator 1 view .LVU4053
2458:./Libraries/FatFs/Src/ff.c **** 	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 11374              		.loc 1 2458 16 is_stmt 0 discriminator 1 view .LVU4054
 11375 0048 6872     		strb	r0, [r5, #9]
2459:./Libraries/FatFs/Src/ff.c **** 
 11376              		.loc 1 2459 2 is_stmt 1 discriminator 1 view .LVU4055
2459:./Libraries/FatFs/Src/ff.c **** 
 11377              		.loc 1 2459 5 is_stmt 0 discriminator 1 view .LVU4056
 11378 004a 1BB1     		cbz	r3, .L1108
 11379 004c 2946     		mov	r1, r5
 11380 004e 0AA8     		add	r0, sp, #40
 11381              	.LVL1128:
2459:./Libraries/FatFs/Src/ff.c **** 
 11382              		.loc 1 2459 5 discriminator 1 view .LVU4057
 11383 0050 FFF7FEFF 		bl	get_fileinfo.isra.0.part.0
 11384              	.LVL1129:
 11385              	.L1108:
2459:./Libraries/FatFs/Src/ff.c **** 
 11386              		.loc 1 2459 5 discriminator 1 view .LVU4058
 11387 0054 0123     		movs	r3, #1
 11388 0056 E2E7     		b	.L1092
 11389              	.LVL1130:
 11390              	.L1109:
2459:./Libraries/FatFs/Src/ff.c **** 
 11391              		.loc 1 2459 5 discriminator 1 view .LVU4059
 11392 0058 B0F10C03 		subs	r3, r0, #12
 11393 005c 18BF     		it	ne
 11394 005e 0123     		movne	r3, #1
 11395 0060 DDE7     		b	.L1092
 11396              	.L1097:
 11397              	.LBE1441:
 11398              	.LBE1440:
 11399 0062 0123     		movs	r3, #1
4370:./Libraries/FatFs/Src/ff.c **** 			} else {							/* Found an object */
 11400              		.loc 1 4370 9 view .LVU4060
 11401 0064 0624     		movs	r4, #6
 11402 0066 DAE7     		b	.L1092
 11403              		.cfi_endproc
 11404              	.LFE385:
 11406              		.section	.text.f_getfree,"ax",%progbits
 11407              		.align	1
 11408              		.p2align 2,,3
 11409              		.global	f_getfree
 11410              		.syntax unified
 11411              		.thumb
 11412              		.thumb_func
 11413              		.fpu fpv5-d16
 11415              	f_getfree:
 11416              	.LVL1131:
 11417              	.LFB386:
4393:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 11418              		.loc 1 4393 1 is_stmt 1 view -0
 11419              		.cfi_startproc
 11420              		@ args = 0, pretend = 0, frame = 16
 11421              		@ frame_needed = 0, uses_anonymous_args = 0
4394:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
ARM GAS  /tmp/ccaQXGqa.s 			page 370


 11422              		.loc 1 4394 2 view .LVU4062
4395:./Libraries/FatFs/Src/ff.c **** 	DWORD nfree, clst, sect, stat;
 11423              		.loc 1 4395 2 view .LVU4063
4396:./Libraries/FatFs/Src/ff.c **** 	UINT i;
 11424              		.loc 1 4396 2 view .LVU4064
4397:./Libraries/FatFs/Src/ff.c **** 	BYTE *p;
 11425              		.loc 1 4397 2 view .LVU4065
4398:./Libraries/FatFs/Src/ff.c **** 	_FDID obj;
 11426              		.loc 1 4398 2 view .LVU4066
4399:./Libraries/FatFs/Src/ff.c **** 
 11427              		.loc 1 4399 2 view .LVU4067
4403:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 11428              		.loc 1 4403 2 view .LVU4068
4393:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 11429              		.loc 1 4393 1 is_stmt 0 view .LVU4069
 11430 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 11431              	.LCFI126:
 11432              		.cfi_def_cfa_offset 28
 11433              		.cfi_offset 4, -28
 11434              		.cfi_offset 5, -24
 11435              		.cfi_offset 6, -20
 11436              		.cfi_offset 7, -16
 11437              		.cfi_offset 8, -12
 11438              		.cfi_offset 9, -8
 11439              		.cfi_offset 14, -4
 11440 0004 85B0     		sub	sp, sp, #20
 11441              	.LCFI127:
 11442              		.cfi_def_cfa_offset 48
4393:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 11443              		.loc 1 4393 1 view .LVU4070
 11444 0006 0F46     		mov	r7, r1
 11445 0008 9046     		mov	r8, r2
4403:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 11446              		.loc 1 4403 8 view .LVU4071
 11447 000a 0022     		movs	r2, #0
 11448              	.LVL1132:
4393:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 11449              		.loc 1 4393 1 view .LVU4072
 11450 000c 0190     		str	r0, [sp, #4]
4403:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 11451              		.loc 1 4403 8 view .LVU4073
 11452 000e 03A9     		add	r1, sp, #12
 11453              	.LVL1133:
4403:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 11454              		.loc 1 4403 8 view .LVU4074
 11455 0010 01A8     		add	r0, sp, #4
 11456              	.LVL1134:
4403:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 11457              		.loc 1 4403 8 view .LVU4075
 11458 0012 FFF7FEFF 		bl	find_volume
 11459              	.LVL1135:
4404:./Libraries/FatFs/Src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
 11460              		.loc 1 4404 2 is_stmt 1 view .LVU4076
4405:./Libraries/FatFs/Src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
 11461              		.loc 1 4405 10 is_stmt 0 view .LVU4077
 11462 0016 039C     		ldr	r4, [sp, #12]
4404:./Libraries/FatFs/Src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
ARM GAS  /tmp/ccaQXGqa.s 			page 371


 11463              		.loc 1 4404 5 view .LVU4078
 11464 0018 0646     		mov	r6, r0
 11465 001a 68B1     		cbz	r0, .L1111
 11466              	.LVL1136:
4465:./Libraries/FatFs/Src/ff.c **** }
 11467              		.loc 1 4465 2 is_stmt 1 view .LVU4079
 11468              	.LBB1442:
 11469              	.LBI1442:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 11470              		.loc 1 751 6 view .LVU4080
 11471              	.LBB1443:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11472              		.loc 1 756 2 view .LVU4081
 11473 001c B0F10C03 		subs	r3, r0, #12
 11474 0020 18BF     		it	ne
 11475 0022 0123     		movne	r3, #1
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11476              		.loc 1 756 5 is_stmt 0 view .LVU4082
 11477 0024 24B1     		cbz	r4, .L1129
 11478              	.LVL1137:
 11479              	.L1142:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11480              		.loc 1 756 5 view .LVU4083
 11481 0026 1BB1     		cbz	r3, .L1129
 11482              	.LVL1138:
 11483              	.L1114:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11484              		.loc 1 756 5 view .LVU4084
 11485 0028 2046     		mov	r0, r4
 11486 002a 3146     		mov	r1, r6
 11487 002c FFF7FEFF 		bl	unlock_fs.part.0
 11488              	.LVL1139:
 11489              	.L1129:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11490              		.loc 1 756 5 view .LVU4085
 11491              	.LBE1443:
 11492              	.LBE1442:
4465:./Libraries/FatFs/Src/ff.c **** }
 11493              		.loc 1 4465 2 is_stmt 1 view .LVU4086
4465:./Libraries/FatFs/Src/ff.c **** }
 11494              		.loc 1 4465 19 view .LVU4087
4466:./Libraries/FatFs/Src/ff.c **** 
 11495              		.loc 1 4466 1 is_stmt 0 view .LVU4088
 11496 0030 3046     		mov	r0, r6
 11497 0032 05B0     		add	sp, sp, #20
 11498              	.LCFI128:
 11499              		.cfi_remember_state
 11500              		.cfi_def_cfa_offset 28
 11501              		@ sp needed
 11502 0034 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 11503              	.LVL1140:
 11504              	.L1111:
 11505              	.LCFI129:
 11506              		.cfi_restore_state
4405:./Libraries/FatFs/Src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
 11507              		.loc 1 4405 3 is_stmt 1 view .LVU4089
4407:./Libraries/FatFs/Src/ff.c **** 			*nclst = fs->free_clst;
ARM GAS  /tmp/ccaQXGqa.s 			page 372


 11508              		.loc 1 4407 9 is_stmt 0 view .LVU4090
 11509 0038 D4E90535 		ldrd	r3, r5, [r4, #20]
4405:./Libraries/FatFs/Src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
 11510              		.loc 1 4405 10 view .LVU4091
 11511 003c C8F80040 		str	r4, [r8]
4407:./Libraries/FatFs/Src/ff.c **** 			*nclst = fs->free_clst;
 11512              		.loc 1 4407 3 is_stmt 1 view .LVU4092
4407:./Libraries/FatFs/Src/ff.c **** 			*nclst = fs->free_clst;
 11513              		.loc 1 4407 37 is_stmt 0 view .LVU4093
 11514 0040 AA1E     		subs	r2, r5, #2
4407:./Libraries/FatFs/Src/ff.c **** 			*nclst = fs->free_clst;
 11515              		.loc 1 4407 6 view .LVU4094
 11516 0042 9342     		cmp	r3, r2
 11517 0044 01D8     		bhi	.L1113
4408:./Libraries/FatFs/Src/ff.c **** 		} else {
 11518              		.loc 1 4408 4 is_stmt 1 view .LVU4095
4408:./Libraries/FatFs/Src/ff.c **** 		} else {
 11519              		.loc 1 4408 11 is_stmt 0 view .LVU4096
 11520 0046 3B60     		str	r3, [r7]
 11521              	.LVL1141:
4465:./Libraries/FatFs/Src/ff.c **** }
 11522              		.loc 1 4465 2 is_stmt 1 view .LVU4097
 11523              	.LBB1446:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 11524              		.loc 1 751 6 view .LVU4098
 11525              	.LBB1444:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11526              		.loc 1 756 2 view .LVU4099
 11527 0048 EEE7     		b	.L1114
 11528              	.LVL1142:
 11529              	.L1113:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11530              		.loc 1 756 2 is_stmt 0 view .LVU4100
 11531              	.LBE1444:
 11532              	.LBE1446:
4411:./Libraries/FatFs/Src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 11533              		.loc 1 4411 4 is_stmt 1 view .LVU4101
4412:./Libraries/FatFs/Src/ff.c **** 				clst = 2; obj.fs = fs;
 11534              		.loc 1 4412 4 view .LVU4102
4412:./Libraries/FatFs/Src/ff.c **** 				clst = 2; obj.fs = fs;
 11535              		.loc 1 4412 10 is_stmt 0 view .LVU4103
 11536 004a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
4412:./Libraries/FatFs/Src/ff.c **** 				clst = 2; obj.fs = fs;
 11537              		.loc 1 4412 7 view .LVU4104
 11538 004c 012B     		cmp	r3, #1
 11539 004e 36D0     		beq	.L1139
4440:./Libraries/FatFs/Src/ff.c **** 					i = 0; p = 0;
 11540              		.loc 1 4440 6 is_stmt 1 view .LVU4105
 11541              	.LVL1143:
4440:./Libraries/FatFs/Src/ff.c **** 					i = 0; p = 0;
 11542              		.loc 1 4440 27 view .LVU4106
4440:./Libraries/FatFs/Src/ff.c **** 					i = 0; p = 0;
 11543              		.loc 1 4440 32 is_stmt 0 view .LVU4107
 11544 0050 616A     		ldr	r1, [r4, #36]
 11545              	.LVL1144:
4441:./Libraries/FatFs/Src/ff.c **** 					do {
 11546              		.loc 1 4441 6 is_stmt 1 view .LVU4108
ARM GAS  /tmp/ccaQXGqa.s 			page 373


4441:./Libraries/FatFs/Src/ff.c **** 					do {
 11547              		.loc 1 4441 13 view .LVU4109
4441:./Libraries/FatFs/Src/ff.c **** 					do {
 11548              		.loc 1 4441 15 is_stmt 0 view .LVU4110
 11549 0052 0346     		mov	r3, r0
4441:./Libraries/FatFs/Src/ff.c **** 					do {
 11550              		.loc 1 4441 8 view .LVU4111
 11551 0054 0246     		mov	r2, r0
4411:./Libraries/FatFs/Src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 11552              		.loc 1 4411 10 view .LVU4112
 11553 0056 8046     		mov	r8, r0
 11554              	.LVL1145:
 11555              	.L1128:
4442:./Libraries/FatFs/Src/ff.c **** 						if (i == 0) {
 11556              		.loc 1 4442 6 is_stmt 1 view .LVU4113
4443:./Libraries/FatFs/Src/ff.c **** 							res = move_window(fs, sect++);
 11557              		.loc 1 4443 7 view .LVU4114
4443:./Libraries/FatFs/Src/ff.c **** 							res = move_window(fs, sect++);
 11558              		.loc 1 4443 10 is_stmt 0 view .LVU4115
 11559 0058 7AB9     		cbnz	r2, .L1121
 11560              	.LVL1146:
4444:./Libraries/FatFs/Src/ff.c **** 							if (res != FR_OK) break;
 11561              		.loc 1 4444 8 is_stmt 1 view .LVU4116
 11562              	.LBB1447:
 11563              	.LBB1448:
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 11564              		.loc 1 920 5 is_stmt 0 view .LVU4117
 11565 005a 236B     		ldr	r3, [r4, #48]
 11566              	.LBE1448:
 11567              	.LBE1447:
4444:./Libraries/FatFs/Src/ff.c **** 							if (res != FR_OK) break;
 11568              		.loc 1 4444 14 view .LVU4118
 11569 005c 01F10109 		add	r9, r1, #1
 11570              	.LVL1147:
 11571              	.LBB1451:
 11572              	.LBI1447:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 11573              		.loc 1 912 9 is_stmt 1 view .LVU4119
 11574              	.LBB1449:
 917:./Libraries/FatFs/Src/ff.c **** 
 11575              		.loc 1 917 2 view .LVU4120
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 11576              		.loc 1 920 2 view .LVU4121
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 11577              		.loc 1 920 5 is_stmt 0 view .LVU4122
 11578 0060 9942     		cmp	r1, r3
 11579 0062 05D0     		beq	.L1122
 11580 0064 2046     		mov	r0, r4
 11581 0066 FFF7FEFF 		bl	move_window.part.0
 11582              	.LVL1148:
 932:./Libraries/FatFs/Src/ff.c **** }
 11583              		.loc 1 932 2 is_stmt 1 view .LVU4123
 932:./Libraries/FatFs/Src/ff.c **** }
 11584              		.loc 1 932 2 is_stmt 0 view .LVU4124
 11585              	.LBE1449:
 11586              	.LBE1451:
4445:./Libraries/FatFs/Src/ff.c **** 							p = fs->win;
ARM GAS  /tmp/ccaQXGqa.s 			page 374


 11587              		.loc 1 4445 8 is_stmt 1 view .LVU4125
 11588 006a 039C     		ldr	r4, [sp, #12]
4445:./Libraries/FatFs/Src/ff.c **** 							p = fs->win;
 11589              		.loc 1 4445 11 is_stmt 0 view .LVU4126
 11590 006c 0028     		cmp	r0, #0
 11591 006e 49D1     		bne	.L1140
 11592              	.LVL1149:
 11593              	.L1122:
4446:./Libraries/FatFs/Src/ff.c **** 							i = SS(fs);
 11594              		.loc 1 4446 8 is_stmt 1 view .LVU4127
4444:./Libraries/FatFs/Src/ff.c **** 							if (res != FR_OK) break;
 11595              		.loc 1 4444 14 is_stmt 0 view .LVU4128
 11596 0070 4946     		mov	r1, r9
4446:./Libraries/FatFs/Src/ff.c **** 							i = SS(fs);
 11597              		.loc 1 4446 10 view .LVU4129
 11598 0072 04F13403 		add	r3, r4, #52
 11599              	.LVL1150:
4447:./Libraries/FatFs/Src/ff.c **** 						}
 11600              		.loc 1 4447 8 is_stmt 1 view .LVU4130
4447:./Libraries/FatFs/Src/ff.c **** 						}
 11601              		.loc 1 4447 10 is_stmt 0 view .LVU4131
 11602 0076 4FF40072 		mov	r2, #512
 11603              	.LVL1151:
 11604              	.L1121:
4449:./Libraries/FatFs/Src/ff.c **** 							if (ld_word(p) == 0) nfree++;
 11605              		.loc 1 4449 7 is_stmt 1 view .LVU4132
4449:./Libraries/FatFs/Src/ff.c **** 							if (ld_word(p) == 0) nfree++;
 11606              		.loc 1 4449 10 is_stmt 0 view .LVU4133
 11607 007a 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 11608 007c 0228     		cmp	r0, #2
 11609 007e 36D0     		beq	.L1141
4453:./Libraries/FatFs/Src/ff.c **** 							p += 4; i -= 4;
 11610              		.loc 1 4453 8 is_stmt 1 view .LVU4134
 11611              	.LVL1152:
 11612              	.LBB1452:
 11613              	.LBI1452:
 623:./Libraries/FatFs/Src/ff.c **** {
 11614              		.loc 1 623 7 view .LVU4135
 11615              	.LBB1453:
 625:./Libraries/FatFs/Src/ff.c **** 
 11616              		.loc 1 625 2 view .LVU4136
 627:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[2];
 11617              		.loc 1 627 2 view .LVU4137
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 11618              		.loc 1 628 2 view .LVU4138
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 11619              		.loc 1 629 2 view .LVU4139
 628:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[1];
 11620              		.loc 1 628 5 is_stmt 0 view .LVU4140
 11621 0080 B3F802E0 		ldrh	lr, [r3, #2]	@ unaligned
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 11622              		.loc 1 630 2 is_stmt 1 view .LVU4141
 11623              	.LBE1453:
 11624              	.LBE1452:
4454:./Libraries/FatFs/Src/ff.c **** 						}
 11625              		.loc 1 4454 18 is_stmt 0 view .LVU4142
 11626 0084 043A     		subs	r2, r2, #4
ARM GAS  /tmp/ccaQXGqa.s 			page 375


 11627              	.LVL1153:
 11628              	.LBB1456:
 11629              	.LBB1454:
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 11630              		.loc 1 629 20 view .LVU4143
 11631 0086 93F801C0 		ldrb	ip, [r3, #1]	@ zero_extendqisi2
 11632              	.LBE1454:
 11633              	.LBE1456:
4454:./Libraries/FatFs/Src/ff.c **** 						}
 11634              		.loc 1 4454 10 view .LVU4144
 11635 008a 0433     		adds	r3, r3, #4
 11636              	.LBB1457:
 11637              	.LBB1455:
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 11638              		.loc 1 630 20 view .LVU4145
 11639 008c 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 629:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 11640              		.loc 1 629 5 view .LVU4146
 11641 0090 4CEA0E2C 		orr	ip, ip, lr, lsl #8
 631:./Libraries/FatFs/Src/ff.c **** }
 11642              		.loc 1 631 2 is_stmt 1 view .LVU4147
 630:./Libraries/FatFs/Src/ff.c **** 	return rv;
 11643              		.loc 1 630 5 is_stmt 0 view .LVU4148
 11644 0094 40EA0C20 		orr	r0, r0, ip, lsl #8
 11645              	.LBE1455:
 11646              	.LBE1457:
4453:./Libraries/FatFs/Src/ff.c **** 							p += 4; i -= 4;
 11647              		.loc 1 4453 11 view .LVU4149
 11648 0098 30F07040 		bics	r0, r0, #-268435456
4453:./Libraries/FatFs/Src/ff.c **** 							p += 4; i -= 4;
 11649              		.loc 1 4453 45 is_stmt 1 view .LVU4150
4453:./Libraries/FatFs/Src/ff.c **** 							p += 4; i -= 4;
 11650              		.loc 1 4453 50 is_stmt 0 view .LVU4151
 11651 009c 08BF     		it	eq
 11652 009e 08F10108 		addeq	r8, r8, #1
 11653              	.LVL1154:
4454:./Libraries/FatFs/Src/ff.c **** 						}
 11654              		.loc 1 4454 8 is_stmt 1 view .LVU4152
4454:./Libraries/FatFs/Src/ff.c **** 						}
 11655              		.loc 1 4454 16 view .LVU4153
 11656              	.L1126:
4456:./Libraries/FatFs/Src/ff.c **** 				}
 11657              		.loc 1 4456 14 view .LVU4154
4456:./Libraries/FatFs/Src/ff.c **** 				}
 11658              		.loc 1 4456 6 is_stmt 0 view .LVU4155
 11659 00a2 013D     		subs	r5, r5, #1
 11660              	.LVL1155:
4456:./Libraries/FatFs/Src/ff.c **** 				}
 11661              		.loc 1 4456 6 view .LVU4156
 11662 00a4 D8D1     		bne	.L1128
4456:./Libraries/FatFs/Src/ff.c **** 				}
 11663              		.loc 1 4456 6 view .LVU4157
 11664 00a6 0123     		movs	r3, #1
 11665              	.LVL1156:
 11666              	.L1118:
4459:./Libraries/FatFs/Src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
 11667              		.loc 1 4459 4 is_stmt 1 view .LVU4158
ARM GAS  /tmp/ccaQXGqa.s 			page 376


4459:./Libraries/FatFs/Src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
 11668              		.loc 1 4459 11 is_stmt 0 view .LVU4159
 11669 00a8 C7F80080 		str	r8, [r7]
4460:./Libraries/FatFs/Src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
 11670              		.loc 1 4460 4 is_stmt 1 view .LVU4160
4461:./Libraries/FatFs/Src/ff.c **** 		}
 11671              		.loc 1 4461 17 is_stmt 0 view .LVU4161
 11672 00ac 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
4460:./Libraries/FatFs/Src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
 11673              		.loc 1 4460 18 view .LVU4162
 11674 00ae C4F81480 		str	r8, [r4, #20]
4461:./Libraries/FatFs/Src/ff.c **** 		}
 11675              		.loc 1 4461 4 is_stmt 1 view .LVU4163
4461:./Libraries/FatFs/Src/ff.c **** 		}
 11676              		.loc 1 4461 17 is_stmt 0 view .LVU4164
 11677 00b2 42F00102 		orr	r2, r2, #1
 11678 00b6 2271     		strb	r2, [r4, #4]
4465:./Libraries/FatFs/Src/ff.c **** }
 11679              		.loc 1 4465 2 is_stmt 1 view .LVU4165
 11680              	.LVL1157:
 11681              	.LBB1458:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 11682              		.loc 1 751 6 view .LVU4166
 11683              	.LBB1445:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11684              		.loc 1 756 2 view .LVU4167
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11685              		.loc 1 756 5 is_stmt 0 view .LVU4168
 11686 00b8 002C     		cmp	r4, #0
 11687 00ba B4D1     		bne	.L1142
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11688              		.loc 1 756 5 view .LVU4169
 11689 00bc B8E7     		b	.L1129
 11690              	.LVL1158:
 11691              	.L1139:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11692              		.loc 1 756 5 view .LVU4170
 11693              	.LBE1445:
 11694              	.LBE1458:
4413:./Libraries/FatFs/Src/ff.c **** 				do {
 11695              		.loc 1 4413 10 view .LVU4171
 11696 00be 0225     		movs	r5, #2
4411:./Libraries/FatFs/Src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 11697              		.loc 1 4411 10 view .LVU4172
 11698 00c0 8046     		mov	r8, r0
 11699              	.LVL1159:
4411:./Libraries/FatFs/Src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 11700              		.loc 1 4411 10 view .LVU4173
 11701 00c2 08E0     		b	.L1120
 11702              	.LVL1160:
 11703              	.L1145:
4417:./Libraries/FatFs/Src/ff.c **** 					if (stat == 0) nfree++;
 11704              		.loc 1 4417 9 view .LVU4174
 11705 00c4 0128     		cmp	r0, #1
 11706 00c6 23D0     		beq	.L1143
4418:./Libraries/FatFs/Src/ff.c **** 				} while (++clst < fs->n_fatent);
 11707              		.loc 1 4418 9 view .LVU4175
ARM GAS  /tmp/ccaQXGqa.s 			page 377


 11708 00c8 08B9     		cbnz	r0, .L1119
4418:./Libraries/FatFs/Src/ff.c **** 				} while (++clst < fs->n_fatent);
 11709              		.loc 1 4418 26 discriminator 1 view .LVU4176
 11710 00ca 08F10108 		add	r8, r8, #1
 11711              	.LVL1161:
 11712              	.L1119:
4419:./Libraries/FatFs/Src/ff.c **** 			} else {
 11713              		.loc 1 4419 13 is_stmt 1 view .LVU4177
4419:./Libraries/FatFs/Src/ff.c **** 			} else {
 11714              		.loc 1 4419 25 is_stmt 0 view .LVU4178
 11715 00ce 039B     		ldr	r3, [sp, #12]
4419:./Libraries/FatFs/Src/ff.c **** 			} else {
 11716              		.loc 1 4419 5 view .LVU4179
 11717 00d0 9A69     		ldr	r2, [r3, #24]
 11718 00d2 AA42     		cmp	r2, r5
 11719 00d4 20D9     		bls	.L1144
 11720              	.LVL1162:
 11721              	.L1120:
4414:./Libraries/FatFs/Src/ff.c **** 					stat = get_fat(&obj, clst);
 11722              		.loc 1 4414 5 is_stmt 1 view .LVU4180
4415:./Libraries/FatFs/Src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 11723              		.loc 1 4415 6 view .LVU4181
4415:./Libraries/FatFs/Src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 11724              		.loc 1 4415 13 is_stmt 0 view .LVU4182
 11725 00d6 2946     		mov	r1, r5
 11726 00d8 2046     		mov	r0, r4
 11727 00da FFF7FEFF 		bl	get_fat.isra.0
 11728              	.LVL1163:
4417:./Libraries/FatFs/Src/ff.c **** 					if (stat == 0) nfree++;
 11729              		.loc 1 4417 6 is_stmt 1 view .LVU4183
4418:./Libraries/FatFs/Src/ff.c **** 				} while (++clst < fs->n_fatent);
 11730              		.loc 1 4418 6 view .LVU4184
4418:./Libraries/FatFs/Src/ff.c **** 				} while (++clst < fs->n_fatent);
 11731              		.loc 1 4418 21 view .LVU4185
4416:./Libraries/FatFs/Src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 11732              		.loc 1 4416 9 is_stmt 0 view .LVU4186
 11733 00de 431C     		adds	r3, r0, #1
4419:./Libraries/FatFs/Src/ff.c **** 			} else {
 11734              		.loc 1 4419 5 view .LVU4187
 11735 00e0 05F10105 		add	r5, r5, #1
 11736              	.LVL1164:
4416:./Libraries/FatFs/Src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 11737              		.loc 1 4416 6 is_stmt 1 view .LVU4188
4416:./Libraries/FatFs/Src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 11738              		.loc 1 4416 9 is_stmt 0 view .LVU4189
 11739 00e4 EED1     		bne	.L1145
4416:./Libraries/FatFs/Src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 11740              		.loc 1 4416 36 view .LVU4190
 11741 00e6 0126     		movs	r6, #1
 11742 00e8 039C     		ldr	r4, [sp, #12]
4416:./Libraries/FatFs/Src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 11743              		.loc 1 4416 9 view .LVU4191
 11744 00ea 3346     		mov	r3, r6
 11745 00ec DCE7     		b	.L1118
 11746              	.LVL1165:
 11747              	.L1141:
4450:./Libraries/FatFs/Src/ff.c **** 							p += 2; i -= 2;
ARM GAS  /tmp/ccaQXGqa.s 			page 378


 11748              		.loc 1 4450 8 is_stmt 1 view .LVU4192
 11749              	.LBB1459:
 11750              	.LBI1459:
 613:./Libraries/FatFs/Src/ff.c **** {
 11751              		.loc 1 613 6 view .LVU4193
 11752              	.LBB1460:
 615:./Libraries/FatFs/Src/ff.c **** 
 11753              		.loc 1 615 2 view .LVU4194
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 11754              		.loc 1 617 2 view .LVU4195
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 11755              		.loc 1 618 2 view .LVU4196
 619:./Libraries/FatFs/Src/ff.c **** }
 11756              		.loc 1 619 2 view .LVU4197
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 11757              		.loc 1 618 10 is_stmt 0 view .LVU4198
 11758 00ee 93F801C0 		ldrb	ip, [r3, #1]	@ zero_extendqisi2
 11759              	.LBE1460:
 11760              	.LBE1459:
4451:./Libraries/FatFs/Src/ff.c **** 						} else {
 11761              		.loc 1 4451 18 view .LVU4199
 11762 00f2 023A     		subs	r2, r2, #2
 11763              	.LVL1166:
 11764              	.LBB1462:
 11765              	.LBB1461:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 11766              		.loc 1 618 20 view .LVU4200
 11767 00f4 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 11768              	.LBE1461:
 11769              	.LBE1462:
4451:./Libraries/FatFs/Src/ff.c **** 						} else {
 11770              		.loc 1 4451 10 view .LVU4201
 11771 00f6 0233     		adds	r3, r3, #2
4450:./Libraries/FatFs/Src/ff.c **** 							p += 2; i -= 2;
 11772              		.loc 1 4450 11 view .LVU4202
 11773 00f8 50EA0C20 		orrs	r0, r0, ip, lsl #8
4450:./Libraries/FatFs/Src/ff.c **** 							p += 2; i -= 2;
 11774              		.loc 1 4450 29 is_stmt 1 view .LVU4203
4450:./Libraries/FatFs/Src/ff.c **** 							p += 2; i -= 2;
 11775              		.loc 1 4450 34 is_stmt 0 view .LVU4204
 11776 00fc 08BF     		it	eq
 11777 00fe 08F10108 		addeq	r8, r8, #1
 11778              	.LVL1167:
4451:./Libraries/FatFs/Src/ff.c **** 						} else {
 11779              		.loc 1 4451 8 is_stmt 1 view .LVU4205
4451:./Libraries/FatFs/Src/ff.c **** 						} else {
 11780              		.loc 1 4451 16 view .LVU4206
4451:./Libraries/FatFs/Src/ff.c **** 						} else {
 11781              		.loc 1 4451 16 is_stmt 0 view .LVU4207
 11782 0102 CEE7     		b	.L1126
 11783              	.LVL1168:
 11784              	.L1140:
4451:./Libraries/FatFs/Src/ff.c **** 						} else {
 11785              		.loc 1 4451 16 view .LVU4208
 11786 0104 B0F10C03 		subs	r3, r0, #12
 11787              	.LBB1463:
 11788              	.LBB1450:
ARM GAS  /tmp/ccaQXGqa.s 			page 379


 11789 0108 0646     		mov	r6, r0
 11790 010a 18BF     		it	ne
 11791 010c 0123     		movne	r3, #1
 11792 010e CBE7     		b	.L1118
 11793              	.LVL1169:
 11794              	.L1143:
4451:./Libraries/FatFs/Src/ff.c **** 						} else {
 11795              		.loc 1 4451 16 view .LVU4209
 11796              	.LBE1450:
 11797              	.LBE1463:
4417:./Libraries/FatFs/Src/ff.c **** 					if (stat == 0) nfree++;
 11798              		.loc 1 4417 9 view .LVU4210
 11799 0110 0346     		mov	r3, r0
 11800 0112 039C     		ldr	r4, [sp, #12]
4417:./Libraries/FatFs/Src/ff.c **** 					if (stat == 0) nfree++;
 11801              		.loc 1 4417 27 view .LVU4211
 11802 0114 0226     		movs	r6, #2
 11803 0116 C7E7     		b	.L1118
 11804              	.LVL1170:
 11805              	.L1144:
4419:./Libraries/FatFs/Src/ff.c **** 			} else {
 11806              		.loc 1 4419 25 view .LVU4212
 11807 0118 1C46     		mov	r4, r3
 11808 011a 0123     		movs	r3, #1
 11809 011c C4E7     		b	.L1118
 11810              		.cfi_endproc
 11811              	.LFE386:
 11813 011e 00BF     		.section	.text.f_truncate,"ax",%progbits
 11814              		.align	1
 11815              		.p2align 2,,3
 11816              		.global	f_truncate
 11817              		.syntax unified
 11818              		.thumb
 11819              		.thumb_func
 11820              		.fpu fpv5-d16
 11822              	f_truncate:
 11823              	.LVL1171:
 11824              	.LFB387:
4478:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 11825              		.loc 1 4478 1 is_stmt 1 view -0
 11826              		.cfi_startproc
 11827              		@ args = 0, pretend = 0, frame = 8
 11828              		@ frame_needed = 0, uses_anonymous_args = 0
4479:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
 11829              		.loc 1 4479 2 view .LVU4214
4480:./Libraries/FatFs/Src/ff.c **** 	DWORD ncl;
 11830              		.loc 1 4480 2 view .LVU4215
4481:./Libraries/FatFs/Src/ff.c **** 
 11831              		.loc 1 4481 2 view .LVU4216
4484:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
 11832              		.loc 1 4484 2 view .LVU4217
4478:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 11833              		.loc 1 4478 1 is_stmt 0 view .LVU4218
 11834 0000 30B5     		push	{r4, r5, lr}
 11835              	.LCFI130:
 11836              		.cfi_def_cfa_offset 12
 11837              		.cfi_offset 4, -12
ARM GAS  /tmp/ccaQXGqa.s 			page 380


 11838              		.cfi_offset 5, -8
 11839              		.cfi_offset 14, -4
 11840 0002 83B0     		sub	sp, sp, #12
 11841              	.LCFI131:
 11842              		.cfi_def_cfa_offset 24
4478:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 11843              		.loc 1 4478 1 view .LVU4219
 11844 0004 0546     		mov	r5, r0
4484:./Libraries/FatFs/Src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
 11845              		.loc 1 4484 8 view .LVU4220
 11846 0006 01A9     		add	r1, sp, #4
 11847 0008 FFF7FEFF 		bl	validate
 11848              	.LVL1172:
4485:./Libraries/FatFs/Src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 11849              		.loc 1 4485 2 is_stmt 1 view .LVU4221
4485:./Libraries/FatFs/Src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 11850              		.loc 1 4485 5 is_stmt 0 view .LVU4222
 11851 000c F0B9     		cbnz	r0, .L1181
4485:./Libraries/FatFs/Src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 11852              		.loc 1 4485 27 discriminator 2 view .LVU4223
 11853 000e 6C7D     		ldrb	r4, [r5, #21]	@ zero_extendqisi2
 11854              	.LVL1173:
4485:./Libraries/FatFs/Src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 11855              		.loc 1 4485 19 discriminator 2 view .LVU4224
 11856 0010 ECB9     		cbnz	r4, .L1147
4485:./Libraries/FatFs/Src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 11857              		.loc 1 4485 74 is_stmt 1 discriminator 4 view .LVU4225
4486:./Libraries/FatFs/Src/ff.c **** 
 11858              		.loc 1 4486 2 discriminator 4 view .LVU4226
4486:./Libraries/FatFs/Src/ff.c **** 
 11859              		.loc 1 4486 5 is_stmt 0 discriminator 4 view .LVU4227
 11860 0012 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 11861 0014 9B07     		lsls	r3, r3, #30
 11862 0016 2BD5     		bpl	.L1184
4486:./Libraries/FatFs/Src/ff.c **** 
 11863              		.loc 1 4486 53 is_stmt 1 discriminator 2 view .LVU4228
4488:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 11864              		.loc 1 4488 2 discriminator 2 view .LVU4229
4488:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 11865              		.loc 1 4488 8 is_stmt 0 discriminator 2 view .LVU4230
 11866 0018 AB69     		ldr	r3, [r5, #24]
4488:./Libraries/FatFs/Src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 11867              		.loc 1 4488 5 discriminator 2 view .LVU4231
 11868 001a EA68     		ldr	r2, [r5, #12]
 11869 001c 9342     		cmp	r3, r2
 11870 001e 10D2     		bcs	.L1160
4489:./Libraries/FatFs/Src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
 11871              		.loc 1 4489 3 is_stmt 1 view .LVU4232
4489:./Libraries/FatFs/Src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
 11872              		.loc 1 4489 6 is_stmt 0 view .LVU4233
 11873 0020 6BBB     		cbnz	r3, .L1152
4490:./Libraries/FatFs/Src/ff.c **** 			fp->obj.sclust = 0;
 11874              		.loc 1 4490 4 is_stmt 1 view .LVU4234
4490:./Libraries/FatFs/Src/ff.c **** 			fp->obj.sclust = 0;
 11875              		.loc 1 4490 10 is_stmt 0 view .LVU4235
 11876 0022 2246     		mov	r2, r4
 11877 0024 A968     		ldr	r1, [r5, #8]
ARM GAS  /tmp/ccaQXGqa.s 			page 381


 11878 0026 2846     		mov	r0, r5
 11879 0028 FFF7FEFF 		bl	remove_chain
 11880              	.LVL1174:
4491:./Libraries/FatFs/Src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
 11881              		.loc 1 4491 19 view .LVU4236
 11882 002c AC60     		str	r4, [r5, #8]
 11883              	.LVL1175:
4491:./Libraries/FatFs/Src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
 11884              		.loc 1 4491 4 is_stmt 1 view .LVU4237
 11885              	.L1153:
4501:./Libraries/FatFs/Src/ff.c **** 		fp->flag |= FA_MODIFIED;
 11886              		.loc 1 4501 3 view .LVU4238
4502:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 11887              		.loc 1 4502 12 is_stmt 0 view .LVU4239
 11888 002e 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
4501:./Libraries/FatFs/Src/ff.c **** 		fp->flag |= FA_MODIFIED;
 11889              		.loc 1 4501 19 view .LVU4240
 11890 0030 AA69     		ldr	r2, [r5, #24]
4502:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 11891              		.loc 1 4502 12 view .LVU4241
 11892 0032 43F04003 		orr	r3, r3, #64
4501:./Libraries/FatFs/Src/ff.c **** 		fp->flag |= FA_MODIFIED;
 11893              		.loc 1 4501 19 view .LVU4242
 11894 0036 EA60     		str	r2, [r5, #12]
4502:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 11895              		.loc 1 4502 3 is_stmt 1 view .LVU4243
4502:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 11896              		.loc 1 4502 12 is_stmt 0 view .LVU4244
 11897 0038 2B75     		strb	r3, [r5, #20]
4504:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 11898              		.loc 1 4504 3 is_stmt 1 view .LVU4245
4504:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 11899              		.loc 1 4504 6 is_stmt 0 view .LVU4246
 11900 003a 0028     		cmp	r0, #0
 11901 003c 54D1     		bne	.L1158
4504:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 11902              		.loc 1 4504 20 discriminator 1 view .LVU4247
 11903 003e 1B06     		lsls	r3, r3, #24
 11904 0040 50D4     		bmi	.L1185
 11905              	.LVL1176:
 11906              	.L1160:
4512:./Libraries/FatFs/Src/ff.c **** 	}
 11907              		.loc 1 4512 21 is_stmt 1 discriminator 2 view .LVU4248
4512:./Libraries/FatFs/Src/ff.c **** 	}
 11908              		.loc 1 4512 35 discriminator 2 view .LVU4249
4515:./Libraries/FatFs/Src/ff.c **** }
 11909              		.loc 1 4515 2 discriminator 2 view .LVU4250
 11910 0042 0198     		ldr	r0, [sp, #4]
 11911              	.LVL1177:
 11912              	.LBB1474:
 11913              	.LBI1474:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 11914              		.loc 1 751 6 discriminator 2 view .LVU4251
 11915              	.LBB1475:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11916              		.loc 1 756 2 discriminator 2 view .LVU4252
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
ARM GAS  /tmp/ccaQXGqa.s 			page 382


 11917              		.loc 1 756 5 is_stmt 0 discriminator 2 view .LVU4253
 11918 0044 70B9     		cbnz	r0, .L1157
 11919              	.LVL1178:
 11920              	.L1165:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11921              		.loc 1 756 5 discriminator 2 view .LVU4254
 11922              	.LBE1475:
 11923              	.LBE1474:
4516:./Libraries/FatFs/Src/ff.c **** 
 11924              		.loc 1 4516 1 view .LVU4255
 11925 0046 2046     		mov	r0, r4
 11926 0048 03B0     		add	sp, sp, #12
 11927              	.LCFI132:
 11928              		.cfi_remember_state
 11929              		.cfi_def_cfa_offset 12
 11930              		@ sp needed
 11931 004a 30BD     		pop	{r4, r5, pc}
 11932              	.LVL1179:
 11933              	.L1181:
 11934              	.LCFI133:
 11935              		.cfi_restore_state
4516:./Libraries/FatFs/Src/ff.c **** 
 11936              		.loc 1 4516 1 view .LVU4256
 11937 004c 0446     		mov	r4, r0
 11938              	.LVL1180:
 11939              	.L1147:
4485:./Libraries/FatFs/Src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 11940              		.loc 1 4485 57 is_stmt 1 discriminator 3 view .LVU4257
 11941 004e 0198     		ldr	r0, [sp, #4]
 11942              	.LVL1181:
 11943              	.LBB1477:
 11944              	.LBI1477:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 11945              		.loc 1 751 6 discriminator 3 view .LVU4258
 11946              	.LBB1478:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11947              		.loc 1 756 2 discriminator 3 view .LVU4259
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11948              		.loc 1 756 5 is_stmt 0 discriminator 3 view .LVU4260
 11949 0050 0028     		cmp	r0, #0
 11950 0052 F8D0     		beq	.L1165
 11951 0054 0C2C     		cmp	r4, #12
 11952 0056 F6D0     		beq	.L1165
 11953              	.LVL1182:
 11954              	.L1183:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 11955              		.loc 1 756 5 discriminator 3 view .LVU4261
 11956              	.LBE1478:
 11957              	.LBE1477:
 11958              	.LBB1479:
 11959              	.LBB1480:
 11960 0058 2146     		mov	r1, r4
 11961 005a FFF7FEFF 		bl	unlock_fs.part.0
 11962              	.LVL1183:
 11963              	.LBE1480:
 11964              	.LBE1479:
4516:./Libraries/FatFs/Src/ff.c **** 
ARM GAS  /tmp/ccaQXGqa.s 			page 383


 11965              		.loc 1 4516 1 view .LVU4262
 11966 005e 2046     		mov	r0, r4
 11967 0060 03B0     		add	sp, sp, #12
 11968              	.LCFI134:
 11969              		.cfi_remember_state
 11970              		.cfi_def_cfa_offset 12
 11971              		@ sp needed
 11972 0062 30BD     		pop	{r4, r5, pc}
 11973              	.LVL1184:
 11974              	.L1157:
 11975              	.LCFI135:
 11976              		.cfi_restore_state
 11977              	.LBB1482:
 11978              	.LBB1476:
4516:./Libraries/FatFs/Src/ff.c **** 
 11979              		.loc 1 4516 1 view .LVU4263
 11980 0064 0021     		movs	r1, #0
 11981 0066 FFF7FEFF 		bl	unlock_fs.part.0
 11982              	.LVL1185:
4516:./Libraries/FatFs/Src/ff.c **** 
 11983              		.loc 1 4516 1 view .LVU4264
 11984              	.LBE1476:
 11985              	.LBE1482:
 11986 006a 2046     		mov	r0, r4
 11987 006c 03B0     		add	sp, sp, #12
 11988              	.LCFI136:
 11989              		.cfi_remember_state
 11990              		.cfi_def_cfa_offset 12
 11991              		@ sp needed
 11992 006e 30BD     		pop	{r4, r5, pc}
 11993              	.LVL1186:
 11994              	.L1184:
 11995              	.LCFI137:
 11996              		.cfi_restore_state
4486:./Libraries/FatFs/Src/ff.c **** 
 11997              		.loc 1 4486 30 is_stmt 1 discriminator 1 view .LVU4265
 11998 0070 019B     		ldr	r3, [sp, #4]
 11999              	.LVL1187:
 12000              	.LBB1483:
 12001              	.LBI1483:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 12002              		.loc 1 751 6 discriminator 1 view .LVU4266
 12003              	.LBB1484:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 12004              		.loc 1 756 2 discriminator 1 view .LVU4267
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 12005              		.loc 1 756 5 is_stmt 0 discriminator 1 view .LVU4268
 12006 0072 33B3     		cbz	r3, .L1161
 12007              	.LVL1188:
 12008              	.LBB1485:
 12009              	.LBI1485:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 12010              		.loc 1 751 6 is_stmt 1 view .LVU4269
 12011              	.LBB1486:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 12012              		.loc 1 757 3 view .LVU4270
 12013 0074 D868     		ldr	r0, [r3, #12]
ARM GAS  /tmp/ccaQXGqa.s 			page 384


 12014              	.LBE1486:
 12015              	.LBE1485:
 12016              	.LBE1484:
 12017              	.LBE1483:
4486:./Libraries/FatFs/Src/ff.c **** 
 12018              		.loc 1 4486 30 is_stmt 0 view .LVU4271
 12019 0076 0724     		movs	r4, #7
 12020              	.LVL1189:
 12021              	.LBB1490:
 12022              	.LBB1489:
 12023              	.LBB1488:
 12024              	.LBB1487:
 757:./Libraries/FatFs/Src/ff.c **** 	}
 12025              		.loc 1 757 3 view .LVU4272
 12026 0078 FFF7FEFF 		bl	ff_rel_grant
 12027              	.LVL1190:
 759:./Libraries/FatFs/Src/ff.c **** 
 12028              		.loc 1 759 1 view .LVU4273
 12029 007c E3E7     		b	.L1165
 12030              	.LVL1191:
 12031              	.L1152:
 759:./Libraries/FatFs/Src/ff.c **** 
 12032              		.loc 1 759 1 view .LVU4274
 12033              	.LBE1487:
 12034              	.LBE1488:
 12035              	.LBE1489:
 12036              	.LBE1490:
4493:./Libraries/FatFs/Src/ff.c **** 			res = FR_OK;
 12037              		.loc 1 4493 4 is_stmt 1 view .LVU4275
4493:./Libraries/FatFs/Src/ff.c **** 			res = FR_OK;
 12038              		.loc 1 4493 10 is_stmt 0 view .LVU4276
 12039 007e E969     		ldr	r1, [r5, #28]
 12040 0080 2868     		ldr	r0, [r5]
 12041 0082 FFF7FEFF 		bl	get_fat.isra.0
 12042              	.LVL1192:
 12043 0086 0146     		mov	r1, r0
 12044              	.LVL1193:
4494:./Libraries/FatFs/Src/ff.c **** 			if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
 12045              		.loc 1 4494 4 is_stmt 1 view .LVU4277
4495:./Libraries/FatFs/Src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 12046              		.loc 1 4495 4 view .LVU4278
4495:./Libraries/FatFs/Src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 12047              		.loc 1 4495 7 is_stmt 0 view .LVU4279
 12048 0088 481C     		adds	r0, r1, #1
 12049              	.LVL1194:
4495:./Libraries/FatFs/Src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 12050              		.loc 1 4495 7 view .LVU4280
 12051 008a 33D0     		beq	.L1162
4496:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 12052              		.loc 1 4496 4 is_stmt 1 view .LVU4281
4496:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 12053              		.loc 1 4496 7 is_stmt 0 view .LVU4282
 12054 008c 0129     		cmp	r1, #1
 12055 008e 1AD0     		beq	.L1163
4497:./Libraries/FatFs/Src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 12056              		.loc 1 4497 4 is_stmt 1 discriminator 1 view .LVU4283
4497:./Libraries/FatFs/Src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
ARM GAS  /tmp/ccaQXGqa.s 			page 385


 12057              		.loc 1 4497 32 is_stmt 0 discriminator 1 view .LVU4284
 12058 0090 0198     		ldr	r0, [sp, #4]
4497:./Libraries/FatFs/Src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 12059              		.loc 1 4497 21 discriminator 1 view .LVU4285
 12060 0092 8369     		ldr	r3, [r0, #24]
 12061 0094 8B42     		cmp	r3, r1
 12062 0096 2FD8     		bhi	.L1155
4501:./Libraries/FatFs/Src/ff.c **** 		fp->flag |= FA_MODIFIED;
 12063              		.loc 1 4501 3 is_stmt 1 view .LVU4286
4502:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 12064              		.loc 1 4502 12 is_stmt 0 view .LVU4287
 12065 0098 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
4501:./Libraries/FatFs/Src/ff.c **** 		fp->flag |= FA_MODIFIED;
 12066              		.loc 1 4501 19 view .LVU4288
 12067 009a AA69     		ldr	r2, [r5, #24]
4502:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 12068              		.loc 1 4502 12 view .LVU4289
 12069 009c 43F04003 		orr	r3, r3, #64
4501:./Libraries/FatFs/Src/ff.c **** 		fp->flag |= FA_MODIFIED;
 12070              		.loc 1 4501 19 view .LVU4290
 12071 00a0 EA60     		str	r2, [r5, #12]
4502:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 12072              		.loc 1 4502 3 is_stmt 1 view .LVU4291
4504:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 12073              		.loc 1 4504 20 is_stmt 0 view .LVU4292
 12074 00a2 1A06     		lsls	r2, r3, #24
4502:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 12075              		.loc 1 4502 12 view .LVU4293
 12076 00a4 2B75     		strb	r3, [r5, #20]
4504:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 12077              		.loc 1 4504 3 is_stmt 1 view .LVU4294
4504:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 12078              		.loc 1 4504 20 is_stmt 0 view .LVU4295
 12079 00a6 DDD5     		bpl	.L1157
 12080              	.LVL1195:
 12081              	.L1156:
4505:./Libraries/FatFs/Src/ff.c **** 				res = FR_DISK_ERR;
 12082              		.loc 1 4505 4 is_stmt 1 view .LVU4296
4505:./Libraries/FatFs/Src/ff.c **** 				res = FR_DISK_ERR;
 12083              		.loc 1 4505 8 is_stmt 0 view .LVU4297
 12084 00a8 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 12085 00aa 0123     		movs	r3, #1
 12086 00ac 2A6A     		ldr	r2, [r5, #32]
 12087 00ae 05F13001 		add	r1, r5, #48
 12088 00b2 FFF7FEFF 		bl	disk_write
 12089              	.LVL1196:
4505:./Libraries/FatFs/Src/ff.c **** 				res = FR_DISK_ERR;
 12090              		.loc 1 4505 7 view .LVU4298
 12091 00b6 20BB     		cbnz	r0, .L1164
4508:./Libraries/FatFs/Src/ff.c **** 			}
 12092              		.loc 1 4508 5 is_stmt 1 view .LVU4299
4508:./Libraries/FatFs/Src/ff.c **** 			}
 12093              		.loc 1 4508 14 is_stmt 0 view .LVU4300
 12094 00b8 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 12095 00ba 03F07F03 		and	r3, r3, #127
 12096 00be 2B75     		strb	r3, [r5, #20]
 12097 00c0 BFE7     		b	.L1160
ARM GAS  /tmp/ccaQXGqa.s 			page 386


 12098              	.LVL1197:
 12099              	.L1161:
4486:./Libraries/FatFs/Src/ff.c **** 
 12100              		.loc 1 4486 30 view .LVU4301
 12101 00c2 0724     		movs	r4, #7
 12102              	.LVL1198:
4515:./Libraries/FatFs/Src/ff.c **** }
 12103              		.loc 1 4515 19 is_stmt 1 view .LVU4302
 12104 00c4 BFE7     		b	.L1165
 12105              	.LVL1199:
 12106              	.L1163:
4496:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 12107              		.loc 1 4496 22 is_stmt 0 view .LVU4303
 12108 00c6 0224     		movs	r4, #2
 12109              	.L1154:
 12110              	.LVL1200:
4501:./Libraries/FatFs/Src/ff.c **** 		fp->flag |= FA_MODIFIED;
 12111              		.loc 1 4501 3 is_stmt 1 view .LVU4304
4502:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 12112              		.loc 1 4502 12 is_stmt 0 view .LVU4305
 12113 00c8 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 12114 00ca 0122     		movs	r2, #1
4501:./Libraries/FatFs/Src/ff.c **** 		fp->flag |= FA_MODIFIED;
 12115              		.loc 1 4501 19 view .LVU4306
 12116 00cc A969     		ldr	r1, [r5, #24]
 12117              	.LVL1201:
4502:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 12118              		.loc 1 4502 12 view .LVU4307
 12119 00ce 43F04003 		orr	r3, r3, #64
4501:./Libraries/FatFs/Src/ff.c **** 		fp->flag |= FA_MODIFIED;
 12120              		.loc 1 4501 19 view .LVU4308
 12121 00d2 E960     		str	r1, [r5, #12]
4502:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 12122              		.loc 1 4502 3 is_stmt 1 view .LVU4309
4502:./Libraries/FatFs/Src/ff.c **** #if !_FS_TINY
 12123              		.loc 1 4502 12 is_stmt 0 view .LVU4310
 12124 00d4 2B75     		strb	r3, [r5, #20]
4504:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 12125              		.loc 1 4504 3 is_stmt 1 view .LVU4311
 12126              	.LVL1202:
 12127              	.L1159:
4512:./Libraries/FatFs/Src/ff.c **** 	}
 12128              		.loc 1 4512 21 discriminator 1 view .LVU4312
 12129 00d6 0198     		ldr	r0, [sp, #4]
 12130 00d8 6C75     		strb	r4, [r5, #21]
4512:./Libraries/FatFs/Src/ff.c **** 	}
 12131              		.loc 1 4512 21 discriminator 1 view .LVU4313
 12132              	.LVL1203:
 12133              	.LBB1491:
 12134              	.LBI1479:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 12135              		.loc 1 751 6 discriminator 1 view .LVU4314
 12136              	.LBB1481:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 12137              		.loc 1 756 2 discriminator 1 view .LVU4315
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 12138              		.loc 1 756 5 is_stmt 0 discriminator 1 view .LVU4316
ARM GAS  /tmp/ccaQXGqa.s 			page 387


 12139 00da 0028     		cmp	r0, #0
 12140 00dc B3D0     		beq	.L1165
 12141 00de 002A     		cmp	r2, #0
 12142 00e0 BAD1     		bne	.L1183
 12143 00e2 B0E7     		b	.L1165
 12144              	.LVL1204:
 12145              	.L1185:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 12146              		.loc 1 756 5 discriminator 1 view .LVU4317
 12147 00e4 0198     		ldr	r0, [sp, #4]
 12148              	.LVL1205:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 12149              		.loc 1 756 5 discriminator 1 view .LVU4318
 12150 00e6 DFE7     		b	.L1156
 12151              	.LVL1206:
 12152              	.L1158:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 12153              		.loc 1 756 5 discriminator 1 view .LVU4319
 12154 00e8 B0F10C02 		subs	r2, r0, #12
 12155              	.LBE1481:
 12156              	.LBE1491:
4504:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 12157              		.loc 1 4504 6 view .LVU4320
 12158 00ec 0446     		mov	r4, r0
 12159 00ee 18BF     		it	ne
 12160 00f0 0122     		movne	r2, #1
 12161 00f2 F0E7     		b	.L1159
 12162              	.LVL1207:
 12163              	.L1162:
4495:./Libraries/FatFs/Src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 12164              		.loc 1 4495 31 view .LVU4321
 12165 00f4 0124     		movs	r4, #1
 12166 00f6 E7E7     		b	.L1154
 12167              	.L1155:
4498:./Libraries/FatFs/Src/ff.c **** 			}
 12168              		.loc 1 4498 5 is_stmt 1 view .LVU4322
4498:./Libraries/FatFs/Src/ff.c **** 			}
 12169              		.loc 1 4498 11 is_stmt 0 view .LVU4323
 12170 00f8 EA69     		ldr	r2, [r5, #28]
 12171 00fa 2846     		mov	r0, r5
 12172 00fc FFF7FEFF 		bl	remove_chain
 12173              	.LVL1208:
4498:./Libraries/FatFs/Src/ff.c **** 			}
 12174              		.loc 1 4498 11 view .LVU4324
 12175 0100 95E7     		b	.L1153
 12176              	.LVL1209:
 12177              	.L1164:
4498:./Libraries/FatFs/Src/ff.c **** 			}
 12178              		.loc 1 4498 11 view .LVU4325
 12179 0102 0124     		movs	r4, #1
4506:./Libraries/FatFs/Src/ff.c **** 			} else {
 12180              		.loc 1 4506 9 view .LVU4326
 12181 0104 2246     		mov	r2, r4
 12182 0106 E6E7     		b	.L1159
 12183              		.cfi_endproc
 12184              	.LFE387:
 12186              		.section	.text.f_unlink,"ax",%progbits
ARM GAS  /tmp/ccaQXGqa.s 			page 388


 12187              		.align	1
 12188              		.p2align 2,,3
 12189              		.global	f_unlink
 12190              		.syntax unified
 12191              		.thumb
 12192              		.thumb_func
 12193              		.fpu fpv5-d16
 12195              	f_unlink:
 12196              	.LVL1210:
 12197              	.LFB388:
4528:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 12198              		.loc 1 4528 1 is_stmt 1 view -0
 12199              		.cfi_startproc
 12200              		@ args = 0, pretend = 0, frame = 112
 12201              		@ frame_needed = 0, uses_anonymous_args = 0
4529:./Libraries/FatFs/Src/ff.c **** 	DIR dj, sdj;
 12202              		.loc 1 4529 2 view .LVU4328
4530:./Libraries/FatFs/Src/ff.c **** 	DWORD dclst = 0;
 12203              		.loc 1 4530 2 view .LVU4329
4531:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
 12204              		.loc 1 4531 2 view .LVU4330
4532:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 12205              		.loc 1 4532 2 view .LVU4331
4540:./Libraries/FatFs/Src/ff.c **** 	dj.obj.fs = fs;
 12206              		.loc 1 4540 2 view .LVU4332
4528:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 12207              		.loc 1 4528 1 is_stmt 0 view .LVU4333
 12208 0000 30B5     		push	{r4, r5, lr}
 12209              	.LCFI138:
 12210              		.cfi_def_cfa_offset 12
 12211              		.cfi_offset 4, -12
 12212              		.cfi_offset 5, -8
 12213              		.cfi_offset 14, -4
 12214 0002 9DB0     		sub	sp, sp, #116
 12215              	.LCFI139:
 12216              		.cfi_def_cfa_offset 128
4540:./Libraries/FatFs/Src/ff.c **** 	dj.obj.fs = fs;
 12217              		.loc 1 4540 8 view .LVU4334
 12218 0004 0222     		movs	r2, #2
4528:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 12219              		.loc 1 4528 1 view .LVU4335
 12220 0006 0190     		str	r0, [sp, #4]
4540:./Libraries/FatFs/Src/ff.c **** 	dj.obj.fs = fs;
 12221              		.loc 1 4540 8 view .LVU4336
 12222 0008 03A9     		add	r1, sp, #12
 12223 000a 01A8     		add	r0, sp, #4
 12224              	.LVL1211:
4540:./Libraries/FatFs/Src/ff.c **** 	dj.obj.fs = fs;
 12225              		.loc 1 4540 8 view .LVU4337
 12226 000c FFF7FEFF 		bl	find_volume
 12227              	.LVL1212:
4541:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 12228              		.loc 1 4541 2 is_stmt 1 view .LVU4338
4541:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 12229              		.loc 1 4541 12 is_stmt 0 view .LVU4339
 12230 0010 039B     		ldr	r3, [sp, #12]
 12231 0012 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccaQXGqa.s 			page 389


4542:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
 12232              		.loc 1 4542 2 is_stmt 1 view .LVU4340
4542:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
 12233              		.loc 1 4542 5 is_stmt 0 view .LVU4341
 12234 0014 68B1     		cbz	r0, .L1187
 12235              	.LVL1213:
 12236              	.L1221:
4542:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
 12237              		.loc 1 4542 5 view .LVU4342
 12238 0016 B0F10C02 		subs	r2, r0, #12
4604:./Libraries/FatFs/Src/ff.c **** 			}
 12239              		.loc 1 4604 29 discriminator 1 view .LVU4343
 12240 001a 0446     		mov	r4, r0
 12241              	.LVL1214:
4604:./Libraries/FatFs/Src/ff.c **** 			}
 12242              		.loc 1 4604 29 discriminator 1 view .LVU4344
 12243 001c 18BF     		it	ne
 12244 001e 0122     		movne	r2, #1
 12245              	.LVL1215:
 12246              	.L1188:
4607:./Libraries/FatFs/Src/ff.c **** 	}
 12247              		.loc 1 4607 16 is_stmt 1 view .LVU4345
4610:./Libraries/FatFs/Src/ff.c **** }
 12248              		.loc 1 4610 2 view .LVU4346
 12249              	.LBB1492:
 12250              	.LBI1492:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 12251              		.loc 1 751 6 view .LVU4347
 12252              	.LBB1493:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 12253              		.loc 1 756 2 view .LVU4348
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 12254              		.loc 1 756 5 is_stmt 0 view .LVU4349
 12255 0020 23B1     		cbz	r3, .L1199
 12256 0022 1AB1     		cbz	r2, .L1199
 12257 0024 1846     		mov	r0, r3
 12258 0026 2146     		mov	r1, r4
 12259 0028 FFF7FEFF 		bl	unlock_fs.part.0
 12260              	.LVL1216:
 12261              	.L1199:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 12262              		.loc 1 756 5 view .LVU4350
 12263              	.LBE1493:
 12264              	.LBE1492:
4610:./Libraries/FatFs/Src/ff.c **** }
 12265              		.loc 1 4610 2 is_stmt 1 view .LVU4351
4610:./Libraries/FatFs/Src/ff.c **** }
 12266              		.loc 1 4610 19 view .LVU4352
4611:./Libraries/FatFs/Src/ff.c **** 
 12267              		.loc 1 4611 1 is_stmt 0 view .LVU4353
 12268 002c 2046     		mov	r0, r4
 12269 002e 1DB0     		add	sp, sp, #116
 12270              	.LCFI140:
 12271              		.cfi_remember_state
 12272              		.cfi_def_cfa_offset 12
 12273              		@ sp needed
 12274 0030 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccaQXGqa.s 			page 390


 12275              	.LVL1217:
 12276              	.L1187:
 12277              	.LCFI141:
 12278              		.cfi_restore_state
4543:./Libraries/FatFs/Src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 12279              		.loc 1 4543 18 is_stmt 1 view .LVU4354
4544:./Libraries/FatFs/Src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
 12280              		.loc 1 4544 3 view .LVU4355
4544:./Libraries/FatFs/Src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
 12281              		.loc 1 4544 9 is_stmt 0 view .LVU4356
 12282 0032 0199     		ldr	r1, [sp, #4]
 12283 0034 04A8     		add	r0, sp, #16
 12284              	.LVL1218:
4544:./Libraries/FatFs/Src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
 12285              		.loc 1 4544 9 view .LVU4357
 12286 0036 FFF7FEFF 		bl	follow_path
 12287              	.LVL1219:
4545:./Libraries/FatFs/Src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
 12288              		.loc 1 4545 3 is_stmt 1 view .LVU4358
4549:./Libraries/FatFs/Src/ff.c **** #endif
 12289              		.loc 1 4549 3 view .LVU4359
4549:./Libraries/FatFs/Src/ff.c **** #endif
 12290              		.loc 1 4549 6 is_stmt 0 view .LVU4360
 12291 003a 0446     		mov	r4, r0
 12292 003c 0028     		cmp	r0, #0
 12293 003e 3FD1     		bne	.L1218
4549:./Libraries/FatFs/Src/ff.c **** #endif
 12294              		.loc 1 4549 21 is_stmt 1 discriminator 1 view .LVU4361
4549:./Libraries/FatFs/Src/ff.c **** #endif
 12295              		.loc 1 4549 27 is_stmt 0 discriminator 1 view .LVU4362
 12296 0040 0221     		movs	r1, #2
 12297 0042 04A8     		add	r0, sp, #16
 12298              	.LVL1220:
4549:./Libraries/FatFs/Src/ff.c **** #endif
 12299              		.loc 1 4549 27 discriminator 1 view .LVU4363
 12300 0044 FFF7FEFF 		bl	chk_lock
 12301              	.LVL1221:
4551:./Libraries/FatFs/Src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
 12302              		.loc 1 4551 3 is_stmt 1 discriminator 1 view .LVU4364
4551:./Libraries/FatFs/Src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
 12303              		.loc 1 4551 6 is_stmt 0 discriminator 1 view .LVU4365
 12304 0048 0446     		mov	r4, r0
 12305 004a 0028     		cmp	r0, #0
 12306 004c 38D1     		bne	.L1218
4552:./Libraries/FatFs/Src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 12307              		.loc 1 4552 4 is_stmt 1 view .LVU4366
4552:./Libraries/FatFs/Src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 12308              		.loc 1 4552 7 is_stmt 0 view .LVU4367
 12309 004e 9DF93F30 		ldrsb	r3, [sp, #63]
 12310 0052 002B     		cmp	r3, #0
 12311 0054 3EDB     		blt	.L1223
4555:./Libraries/FatFs/Src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 12312              		.loc 1 4555 5 is_stmt 1 view .LVU4368
4555:./Libraries/FatFs/Src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 12313              		.loc 1 4555 15 is_stmt 0 view .LVU4369
 12314 0056 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
4555:./Libraries/FatFs/Src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
ARM GAS  /tmp/ccaQXGqa.s 			page 391


 12315              		.loc 1 4555 8 view .LVU4370
 12316 005a DA07     		lsls	r2, r3, #31
 12317 005c 36D4     		bmi	.L1222
 12318              	.LVL1222:
4559:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 12319              		.loc 1 4559 4 is_stmt 1 view .LVU4371
4569:./Libraries/FatFs/Src/ff.c **** 				}
 12320              		.loc 1 4569 6 view .LVU4372
4569:./Libraries/FatFs/Src/ff.c **** 				}
 12321              		.loc 1 4569 14 is_stmt 0 view .LVU4373
 12322 005e 0399     		ldr	r1, [sp, #12]
4569:./Libraries/FatFs/Src/ff.c **** 				}
 12323              		.loc 1 4569 29 view .LVU4374
 12324 0060 0C9A     		ldr	r2, [sp, #48]
 12325              	.LVL1223:
 12326              	.LBB1494:
 12327              	.LBI1494:
1632:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
 12328              		.loc 1 1632 7 is_stmt 1 view .LVU4375
 12329              	.LBB1495:
1637:./Libraries/FatFs/Src/ff.c **** 
 12330              		.loc 1 1637 2 view .LVU4376
1639:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 12331              		.loc 1 1639 2 view .LVU4377
 12332              	.LBB1496:
 12333              	.LBI1496:
 613:./Libraries/FatFs/Src/ff.c **** {
 12334              		.loc 1 613 6 view .LVU4378
 12335              	.LBB1497:
 615:./Libraries/FatFs/Src/ff.c **** 
 12336              		.loc 1 615 2 view .LVU4379
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 12337              		.loc 1 617 2 view .LVU4380
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 12338              		.loc 1 618 2 view .LVU4381
 619:./Libraries/FatFs/Src/ff.c **** }
 12339              		.loc 1 619 2 view .LVU4382
 619:./Libraries/FatFs/Src/ff.c **** }
 12340              		.loc 1 619 2 is_stmt 0 view .LVU4383
 12341              	.LBE1497:
 12342              	.LBE1496:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 12343              		.loc 1 1640 5 view .LVU4384
 12344 0062 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 12345              	.LBB1499:
 12346              	.LBB1498:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 12347              		.loc 1 618 10 view .LVU4385
 12348 0064 D47E     		ldrb	r4, [r2, #27]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 12349              		.loc 1 618 20 view .LVU4386
 12350 0066 957E     		ldrb	r5, [r2, #26]	@ zero_extendqisi2
 12351              	.LBE1498:
 12352              	.LBE1499:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 12353              		.loc 1 1640 5 view .LVU4387
 12354 0068 0328     		cmp	r0, #3
ARM GAS  /tmp/ccaQXGqa.s 			page 392


1639:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 12355              		.loc 1 1639 5 view .LVU4388
 12356 006a 45EA0425 		orr	r5, r5, r4, lsl #8
 12357              	.LVL1224:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 12358              		.loc 1 1640 2 is_stmt 1 view .LVU4389
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 12359              		.loc 1 1640 5 is_stmt 0 view .LVU4390
 12360 006e 05D1     		bne	.L1193
1641:./Libraries/FatFs/Src/ff.c **** 	}
 12361              		.loc 1 1641 3 is_stmt 1 view .LVU4391
 12362              	.LVL1225:
 12363              	.LBB1500:
 12364              	.LBI1500:
 613:./Libraries/FatFs/Src/ff.c **** {
 12365              		.loc 1 613 6 view .LVU4392
 12366              	.LBB1501:
 615:./Libraries/FatFs/Src/ff.c **** 
 12367              		.loc 1 615 2 view .LVU4393
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 12368              		.loc 1 617 2 view .LVU4394
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 12369              		.loc 1 618 2 view .LVU4395
 619:./Libraries/FatFs/Src/ff.c **** }
 12370              		.loc 1 619 2 view .LVU4396
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 12371              		.loc 1 618 10 is_stmt 0 view .LVU4397
 12372 0070 507D     		ldrb	r0, [r2, #21]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 12373              		.loc 1 618 20 view .LVU4398
 12374 0072 127D     		ldrb	r2, [r2, #20]	@ zero_extendqisi2
 12375              	.LVL1226:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 12376              		.loc 1 618 20 view .LVU4399
 12377              	.LBE1501:
 12378              	.LBE1500:
1641:./Libraries/FatFs/Src/ff.c **** 	}
 12379              		.loc 1 1641 9 view .LVU4400
 12380 0074 42EA0022 		orr	r2, r2, r0, lsl #8
1641:./Libraries/FatFs/Src/ff.c **** 	}
 12381              		.loc 1 1641 6 view .LVU4401
 12382 0078 45EA0245 		orr	r5, r5, r2, lsl #16
 12383              	.LVL1227:
 12384              	.L1193:
1644:./Libraries/FatFs/Src/ff.c **** }
 12385              		.loc 1 1644 2 is_stmt 1 view .LVU4402
1644:./Libraries/FatFs/Src/ff.c **** }
 12386              		.loc 1 1644 2 is_stmt 0 view .LVU4403
 12387              	.LBE1495:
 12388              	.LBE1494:
4571:./Libraries/FatFs/Src/ff.c **** #if _FS_RPATH != 0
 12389              		.loc 1 4571 5 is_stmt 1 view .LVU4404
4571:./Libraries/FatFs/Src/ff.c **** #if _FS_RPATH != 0
 12390              		.loc 1 4571 8 is_stmt 0 view .LVU4405
 12391 007c DB06     		lsls	r3, r3, #27
 12392 007e 11D4     		bmi	.L1224
 12393              	.LVL1228:
ARM GAS  /tmp/ccaQXGqa.s 			page 393


 12394              	.L1194:
4596:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
 12395              		.loc 1 4596 5 is_stmt 1 view .LVU4406
4596:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
 12396              		.loc 1 4596 11 is_stmt 0 view .LVU4407
 12397 0080 04A8     		add	r0, sp, #16
 12398 0082 FFF7FEFF 		bl	dir_remove
 12399              	.LVL1229:
4597:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 12400              		.loc 1 4597 5 is_stmt 1 view .LVU4408
4597:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 12401              		.loc 1 4597 13 is_stmt 0 view .LVU4409
 12402 0086 0446     		mov	r4, r0
4597:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 12403              		.loc 1 4597 8 view .LVU4410
 12404 0088 D0B9     		cbnz	r0, .L1218
 12405 008a 2DB1     		cbz	r5, .L1197
4601:./Libraries/FatFs/Src/ff.c **** #endif
 12406              		.loc 1 4601 6 is_stmt 1 view .LVU4411
4601:./Libraries/FatFs/Src/ff.c **** #endif
 12407              		.loc 1 4601 12 is_stmt 0 view .LVU4412
 12408 008c 2946     		mov	r1, r5
 12409 008e 04A8     		add	r0, sp, #16
 12410              	.LVL1230:
4601:./Libraries/FatFs/Src/ff.c **** #endif
 12411              		.loc 1 4601 12 view .LVU4413
 12412 0090 0022     		movs	r2, #0
 12413 0092 FFF7FEFF 		bl	remove_chain
 12414              	.LVL1231:
 12415 0096 0446     		mov	r4, r0
 12416              	.LVL1232:
 12417              	.L1197:
4604:./Libraries/FatFs/Src/ff.c **** 			}
 12418              		.loc 1 4604 5 is_stmt 1 view .LVU4414
4604:./Libraries/FatFs/Src/ff.c **** 			}
 12419              		.loc 1 4604 8 is_stmt 0 view .LVU4415
 12420 0098 94B9     		cbnz	r4, .L1218
4604:./Libraries/FatFs/Src/ff.c **** 			}
 12421              		.loc 1 4604 23 is_stmt 1 discriminator 1 view .LVU4416
4604:./Libraries/FatFs/Src/ff.c **** 			}
 12422              		.loc 1 4604 29 is_stmt 0 discriminator 1 view .LVU4417
 12423 009a 0398     		ldr	r0, [sp, #12]
 12424 009c FFF7FEFF 		bl	sync_fs
 12425              	.LVL1233:
 12426 00a0 039B     		ldr	r3, [sp, #12]
 12427 00a2 B8E7     		b	.L1221
 12428              	.LVL1234:
 12429              	.L1224:
4578:./Libraries/FatFs/Src/ff.c **** 						sdj.obj.sclust = dclst;
 12430              		.loc 1 4578 7 is_stmt 1 view .LVU4418
4586:./Libraries/FatFs/Src/ff.c **** 						if (res == FR_OK) {
 12431              		.loc 1 4586 13 is_stmt 0 view .LVU4419
 12432 00a4 10A8     		add	r0, sp, #64
4578:./Libraries/FatFs/Src/ff.c **** 						sdj.obj.sclust = dclst;
 12433              		.loc 1 4578 18 view .LVU4420
 12434 00a6 1091     		str	r1, [sp, #64]
4579:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
ARM GAS  /tmp/ccaQXGqa.s 			page 394


 12435              		.loc 1 4579 7 is_stmt 1 view .LVU4421
4579:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 12436              		.loc 1 4579 22 is_stmt 0 view .LVU4422
 12437 00a8 1295     		str	r5, [sp, #72]
4586:./Libraries/FatFs/Src/ff.c **** 						if (res == FR_OK) {
 12438              		.loc 1 4586 7 is_stmt 1 view .LVU4423
4586:./Libraries/FatFs/Src/ff.c **** 						if (res == FR_OK) {
 12439              		.loc 1 4586 13 is_stmt 0 view .LVU4424
 12440 00aa FFF7FEFF 		bl	dir_sdi.constprop.0
 12441              	.LVL1235:
4587:./Libraries/FatFs/Src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
 12442              		.loc 1 4587 7 is_stmt 1 view .LVU4425
4587:./Libraries/FatFs/Src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
 12443              		.loc 1 4587 10 is_stmt 0 view .LVU4426
 12444 00ae 0446     		mov	r4, r0
 12445 00b0 30B9     		cbnz	r0, .L1218
4588:./Libraries/FatFs/Src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
 12446              		.loc 1 4588 8 is_stmt 1 view .LVU4427
4588:./Libraries/FatFs/Src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
 12447              		.loc 1 4588 14 is_stmt 0 view .LVU4428
 12448 00b2 10A8     		add	r0, sp, #64
 12449              	.LVL1236:
4588:./Libraries/FatFs/Src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
 12450              		.loc 1 4588 14 view .LVU4429
 12451 00b4 FFF7FEFF 		bl	dir_read.constprop.0
 12452              	.LVL1237:
4589:./Libraries/FatFs/Src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 12453              		.loc 1 4589 8 is_stmt 1 view .LVU4430
4589:./Libraries/FatFs/Src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 12454              		.loc 1 4589 11 is_stmt 0 view .LVU4431
 12455 00b8 0446     		mov	r4, r0
 12456 00ba 38B1     		cbz	r0, .L1222
4590:./Libraries/FatFs/Src/ff.c **** 						}
 12457              		.loc 1 4590 8 is_stmt 1 view .LVU4432
4590:./Libraries/FatFs/Src/ff.c **** 						}
 12458              		.loc 1 4590 11 is_stmt 0 view .LVU4433
 12459 00bc 0428     		cmp	r0, #4
 12460 00be DFD0     		beq	.L1194
 12461              	.LVL1238:
 12462              	.L1218:
4590:./Libraries/FatFs/Src/ff.c **** 						}
 12463              		.loc 1 4590 11 view .LVU4434
 12464 00c0 B4F10C02 		subs	r2, r4, #12
 12465 00c4 039B     		ldr	r3, [sp, #12]
 12466 00c6 18BF     		it	ne
 12467 00c8 0122     		movne	r2, #1
 12468 00ca A9E7     		b	.L1188
 12469              	.LVL1239:
 12470              	.L1222:
4590:./Libraries/FatFs/Src/ff.c **** 						}
 12471              		.loc 1 4590 11 view .LVU4435
 12472 00cc 039B     		ldr	r3, [sp, #12]
4589:./Libraries/FatFs/Src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 12473              		.loc 1 4589 11 view .LVU4436
 12474 00ce 0122     		movs	r2, #1
4589:./Libraries/FatFs/Src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 12475              		.loc 1 4589 30 view .LVU4437
ARM GAS  /tmp/ccaQXGqa.s 			page 395


 12476 00d0 0724     		movs	r4, #7
 12477 00d2 A5E7     		b	.L1188
 12478              	.LVL1240:
 12479              	.L1223:
4589:./Libraries/FatFs/Src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 12480              		.loc 1 4589 30 view .LVU4438
 12481 00d4 039B     		ldr	r3, [sp, #12]
4552:./Libraries/FatFs/Src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 12482              		.loc 1 4552 7 view .LVU4439
 12483 00d6 0122     		movs	r2, #1
4553:./Libraries/FatFs/Src/ff.c **** 			} else {
 12484              		.loc 1 4553 9 view .LVU4440
 12485 00d8 0624     		movs	r4, #6
 12486 00da A1E7     		b	.L1188
 12487              		.cfi_endproc
 12488              	.LFE388:
 12490              		.section	.text.f_mkdir,"ax",%progbits
 12491              		.align	1
 12492              		.p2align 2,,3
 12493              		.global	f_mkdir
 12494              		.syntax unified
 12495              		.thumb
 12496              		.thumb_func
 12497              		.fpu fpv5-d16
 12499              	f_mkdir:
 12500              	.LVL1241:
 12501              	.LFB389:
4623:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 12502              		.loc 1 4623 1 is_stmt 1 view -0
 12503              		.cfi_startproc
 12504              		@ args = 0, pretend = 0, frame = 88
 12505              		@ frame_needed = 0, uses_anonymous_args = 0
4624:./Libraries/FatFs/Src/ff.c **** 	DIR dj;
 12506              		.loc 1 4624 2 view .LVU4442
4625:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
 12507              		.loc 1 4625 2 view .LVU4443
4626:./Libraries/FatFs/Src/ff.c **** 	BYTE *dir;
 12508              		.loc 1 4626 2 view .LVU4444
4627:./Libraries/FatFs/Src/ff.c **** 	UINT n;
 12509              		.loc 1 4627 2 view .LVU4445
4628:./Libraries/FatFs/Src/ff.c **** 	DWORD dsc, dcl, pcl, tm;
 12510              		.loc 1 4628 2 view .LVU4446
4629:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
 12511              		.loc 1 4629 2 view .LVU4447
4634:./Libraries/FatFs/Src/ff.c **** 	dj.obj.fs = fs;
 12512              		.loc 1 4634 2 view .LVU4448
4623:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 12513              		.loc 1 4623 1 is_stmt 0 view .LVU4449
 12514 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 12515              	.LCFI142:
 12516              		.cfi_def_cfa_offset 36
 12517              		.cfi_offset 4, -36
 12518              		.cfi_offset 5, -32
 12519              		.cfi_offset 6, -28
 12520              		.cfi_offset 7, -24
 12521              		.cfi_offset 8, -20
 12522              		.cfi_offset 9, -16
ARM GAS  /tmp/ccaQXGqa.s 			page 396


 12523              		.cfi_offset 10, -12
 12524              		.cfi_offset 11, -8
 12525              		.cfi_offset 14, -4
 12526 0004 97B0     		sub	sp, sp, #92
 12527              	.LCFI143:
 12528              		.cfi_def_cfa_offset 128
4634:./Libraries/FatFs/Src/ff.c **** 	dj.obj.fs = fs;
 12529              		.loc 1 4634 8 view .LVU4450
 12530 0006 0222     		movs	r2, #2
4623:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 12531              		.loc 1 4623 1 view .LVU4451
 12532 0008 0790     		str	r0, [sp, #28]
4634:./Libraries/FatFs/Src/ff.c **** 	dj.obj.fs = fs;
 12533              		.loc 1 4634 8 view .LVU4452
 12534 000a 09A9     		add	r1, sp, #36
 12535 000c 07A8     		add	r0, sp, #28
 12536              	.LVL1242:
4634:./Libraries/FatFs/Src/ff.c **** 	dj.obj.fs = fs;
 12537              		.loc 1 4634 8 view .LVU4453
 12538 000e FFF7FEFF 		bl	find_volume
 12539              	.LVL1243:
4635:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 12540              		.loc 1 4635 2 is_stmt 1 view .LVU4454
4635:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 12541              		.loc 1 4635 12 is_stmt 0 view .LVU4455
 12542 0012 099B     		ldr	r3, [sp, #36]
4636:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
 12543              		.loc 1 4636 5 view .LVU4456
 12544 0014 0446     		mov	r4, r0
4635:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 12545              		.loc 1 4635 12 view .LVU4457
 12546 0016 0A93     		str	r3, [sp, #40]
4636:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
 12547              		.loc 1 4636 2 is_stmt 1 view .LVU4458
4636:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
 12548              		.loc 1 4636 5 is_stmt 0 view .LVU4459
 12549 0018 68B1     		cbz	r0, .L1226
 12550              	.LVL1244:
 12551              	.L1270:
4636:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
 12552              		.loc 1 4636 5 view .LVU4460
 12553 001a B4F10C05 		subs	r5, r4, #12
 12554 001e 18BF     		it	ne
 12555 0020 0125     		movne	r5, #1
 12556              	.LVL1245:
 12557              	.L1227:
4704:./Libraries/FatFs/Src/ff.c **** 	}
 12558              		.loc 1 4704 16 is_stmt 1 view .LVU4461
4707:./Libraries/FatFs/Src/ff.c **** }
 12559              		.loc 1 4707 2 view .LVU4462
 12560              	.LBB1502:
 12561              	.LBI1502:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 12562              		.loc 1 751 6 view .LVU4463
 12563              	.LBB1503:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 12564              		.loc 1 756 2 view .LVU4464
ARM GAS  /tmp/ccaQXGqa.s 			page 397


 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 12565              		.loc 1 756 5 is_stmt 0 view .LVU4465
 12566 0022 23B1     		cbz	r3, .L1254
 12567 0024 1DB1     		cbz	r5, .L1254
 12568 0026 1846     		mov	r0, r3
 12569 0028 2146     		mov	r1, r4
 12570 002a FFF7FEFF 		bl	unlock_fs.part.0
 12571              	.LVL1246:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 12572              		.loc 1 756 5 view .LVU4466
 12573              	.LBE1503:
 12574              	.LBE1502:
4707:./Libraries/FatFs/Src/ff.c **** }
 12575              		.loc 1 4707 2 is_stmt 1 view .LVU4467
4707:./Libraries/FatFs/Src/ff.c **** }
 12576              		.loc 1 4707 19 view .LVU4468
 12577              	.L1254:
4708:./Libraries/FatFs/Src/ff.c **** 
 12578              		.loc 1 4708 1 is_stmt 0 view .LVU4469
 12579 002e 2046     		mov	r0, r4
 12580 0030 17B0     		add	sp, sp, #92
 12581              	.LCFI144:
 12582              		.cfi_remember_state
 12583              		.cfi_def_cfa_offset 36
 12584              		@ sp needed
 12585 0032 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 12586              	.LVL1247:
 12587              	.L1226:
 12588              	.LCFI145:
 12589              		.cfi_restore_state
4637:./Libraries/FatFs/Src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
 12590              		.loc 1 4637 18 is_stmt 1 view .LVU4470
4638:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 12591              		.loc 1 4638 3 view .LVU4471
4638:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 12592              		.loc 1 4638 9 is_stmt 0 view .LVU4472
 12593 0036 0799     		ldr	r1, [sp, #28]
 12594 0038 0AA8     		add	r0, sp, #40
 12595              	.LVL1248:
4638:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 12596              		.loc 1 4638 9 view .LVU4473
 12597 003a FFF7FEFF 		bl	follow_path
 12598              	.LVL1249:
4639:./Libraries/FatFs/Src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 12599              		.loc 1 4639 3 is_stmt 1 view .LVU4474
4639:./Libraries/FatFs/Src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 12600              		.loc 1 4639 6 is_stmt 0 view .LVU4475
 12601 003e 40B1     		cbz	r0, .L1271
4640:./Libraries/FatFs/Src/ff.c **** 			res = FR_INVALID_NAME;
 12602              		.loc 1 4640 3 is_stmt 1 view .LVU4476
4643:./Libraries/FatFs/Src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
 12603              		.loc 1 4643 3 view .LVU4477
4643:./Libraries/FatFs/Src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
 12604              		.loc 1 4643 6 is_stmt 0 view .LVU4478
 12605 0040 0428     		cmp	r0, #4
 12606 0042 0AD0     		beq	.L1229
 12607 0044 B0F10C05 		subs	r5, r0, #12
ARM GAS  /tmp/ccaQXGqa.s 			page 398


 12608 0048 099B     		ldr	r3, [sp, #36]
 12609 004a 0446     		mov	r4, r0
 12610 004c 18BF     		it	ne
 12611 004e 0125     		movne	r5, #1
 12612 0050 E7E7     		b	.L1227
 12613              	.L1271:
 12614 0052 099B     		ldr	r3, [sp, #36]
4639:./Libraries/FatFs/Src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 12615              		.loc 1 4639 6 view .LVU4479
 12616 0054 0125     		movs	r5, #1
4639:./Libraries/FatFs/Src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 12617              		.loc 1 4639 25 view .LVU4480
 12618 0056 0824     		movs	r4, #8
 12619 0058 E3E7     		b	.L1227
 12620              	.L1229:
4644:./Libraries/FatFs/Src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
 12621              		.loc 1 4644 4 is_stmt 1 view .LVU4481
4644:./Libraries/FatFs/Src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
 12622              		.loc 1 4644 10 is_stmt 0 view .LVU4482
 12623 005a 2146     		mov	r1, r4
 12624 005c 0AA8     		add	r0, sp, #40
 12625              	.LVL1250:
4644:./Libraries/FatFs/Src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
 12626              		.loc 1 4644 10 view .LVU4483
 12627 005e FFF7FEFF 		bl	create_chain
 12628              	.LVL1251:
4645:./Libraries/FatFs/Src/ff.c **** 			res = FR_OK;
 12629              		.loc 1 4645 4 is_stmt 1 view .LVU4484
4645:./Libraries/FatFs/Src/ff.c **** 			res = FR_OK;
 12630              		.loc 1 4645 30 is_stmt 0 view .LVU4485
 12631 0062 099A     		ldr	r2, [sp, #36]
4647:./Libraries/FatFs/Src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 12632              		.loc 1 4647 7 view .LVU4486
 12633 0064 0646     		mov	r6, r0
4645:./Libraries/FatFs/Src/ff.c **** 			res = FR_OK;
 12634              		.loc 1 4645 21 view .LVU4487
 12635 0066 5389     		ldrh	r3, [r2, #10]
4645:./Libraries/FatFs/Src/ff.c **** 			res = FR_OK;
 12636              		.loc 1 4645 38 view .LVU4488
 12637 0068 5B02     		lsls	r3, r3, #9
4645:./Libraries/FatFs/Src/ff.c **** 			res = FR_OK;
 12638              		.loc 1 4645 19 view .LVU4489
 12639 006a 0D93     		str	r3, [sp, #52]
4646:./Libraries/FatFs/Src/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
 12640              		.loc 1 4646 4 is_stmt 1 view .LVU4490
 12641              	.LVL1252:
4647:./Libraries/FatFs/Src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 12642              		.loc 1 4647 4 view .LVU4491
4647:./Libraries/FatFs/Src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 12643              		.loc 1 4647 7 is_stmt 0 view .LVU4492
 12644 006c 0028     		cmp	r0, #0
 12645 006e 00F0B880 		beq	.L1248
4648:./Libraries/FatFs/Src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 12646              		.loc 1 4648 4 is_stmt 1 view .LVU4493
4648:./Libraries/FatFs/Src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 12647              		.loc 1 4648 7 is_stmt 0 view .LVU4494
 12648 0072 0128     		cmp	r0, #1
ARM GAS  /tmp/ccaQXGqa.s 			page 399


 12649 0074 00F0D580 		beq	.L1249
4649:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 12650              		.loc 1 4649 4 is_stmt 1 view .LVU4495
4649:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 12651              		.loc 1 4649 7 is_stmt 0 view .LVU4496
 12652 0078 431C     		adds	r3, r0, #1
 12653 007a 00F0DD80 		beq	.L1250
4650:./Libraries/FatFs/Src/ff.c **** 			tm = GET_FATTIME();
 12654              		.loc 1 4650 4 is_stmt 1 discriminator 1 view .LVU4497
4650:./Libraries/FatFs/Src/ff.c **** 			tm = GET_FATTIME();
 12655              		.loc 1 4650 22 discriminator 1 view .LVU4498
 12656              	.LVL1253:
 12657              	.LBB1504:
 12658              	.LBI1504:
 883:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs			/* File system object */
 12659              		.loc 1 883 9 discriminator 1 view .LVU4499
 12660              	.LBB1505:
 887:./Libraries/FatFs/Src/ff.c **** 	UINT nf;
 12661              		.loc 1 887 2 discriminator 1 view .LVU4500
 888:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_OK;
 12662              		.loc 1 888 2 discriminator 1 view .LVU4501
 889:./Libraries/FatFs/Src/ff.c **** 
 12663              		.loc 1 889 2 discriminator 1 view .LVU4502
 892:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 12664              		.loc 1 892 2 discriminator 1 view .LVU4503
 892:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 12665              		.loc 1 892 5 is_stmt 0 discriminator 1 view .LVU4504
 12666 007e D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 12667 0080 002B     		cmp	r3, #0
 12668 0082 40F0B980 		bne	.L1231
 12669              	.LVL1254:
 892:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 12670              		.loc 1 892 5 discriminator 1 view .LVU4505
 12671              	.LBE1505:
 12672              	.LBE1504:
4651:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 12673              		.loc 1 4651 4 is_stmt 1 view .LVU4506
4651:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 12674              		.loc 1 4651 9 is_stmt 0 view .LVU4507
 12675 0086 FFF7FEFF 		bl	get_fattime
 12676              	.LVL1255:
4652:./Libraries/FatFs/Src/ff.c **** 				dsc = clust2sect(fs, dcl);
 12677              		.loc 1 4652 4 is_stmt 1 view .LVU4508
 12678              	.L1232:
4653:./Libraries/FatFs/Src/ff.c **** 				dir = fs->win;
 12679              		.loc 1 4653 5 view .LVU4509
4653:./Libraries/FatFs/Src/ff.c **** 				dir = fs->win;
 12680              		.loc 1 4653 11 is_stmt 0 view .LVU4510
 12681 008a 099F     		ldr	r7, [sp, #36]
 12682              	.LVL1256:
 12683              	.LBB1507:
 12684              	.LBI1507:
 983:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 12685              		.loc 1 983 7 is_stmt 1 view .LVU4511
 12686              	.LBB1508:
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 12687              		.loc 1 988 2 view .LVU4512
ARM GAS  /tmp/ccaQXGqa.s 			page 400


 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 12688              		.loc 1 988 7 is_stmt 0 view .LVU4513
 12689 008c B21E     		subs	r2, r6, #2
 12690              	.LVL1257:
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 12691              		.loc 1 989 2 is_stmt 1 view .LVU4514
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 12692              		.loc 1 989 27 is_stmt 0 view .LVU4515
 12693 008e BB69     		ldr	r3, [r7, #24]
 12694 0090 023B     		subs	r3, r3, #2
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 12695              		.loc 1 989 5 view .LVU4516
 12696 0092 9A42     		cmp	r2, r3
 12697 0094 80F0CD80 		bcs	.L1251
 990:./Libraries/FatFs/Src/ff.c **** }
 12698              		.loc 1 990 2 is_stmt 1 view .LVU4517
 990:./Libraries/FatFs/Src/ff.c **** }
 12699              		.loc 1 990 18 is_stmt 0 view .LVU4518
 12700 0098 7989     		ldrh	r1, [r7, #10]
 990:./Libraries/FatFs/Src/ff.c **** }
 12701              		.loc 1 990 26 view .LVU4519
 12702 009a FB6A     		ldr	r3, [r7, #44]
 12703 009c 02FB0139 		mla	r9, r2, r1, r3
 12704              	.L1234:
 12705              	.LVL1258:
 990:./Libraries/FatFs/Src/ff.c **** }
 12706              		.loc 1 990 26 view .LVU4520
 12707              	.LBE1508:
 12708              	.LBE1507:
4654:./Libraries/FatFs/Src/ff.c **** 				mem_set(dir, 0, SS(fs));
 12709              		.loc 1 4654 5 is_stmt 1 view .LVU4521
4654:./Libraries/FatFs/Src/ff.c **** 				mem_set(dir, 0, SS(fs));
 12710              		.loc 1 4654 9 is_stmt 0 view .LVU4522
 12711 00a0 07F13408 		add	r8, r7, #52
 12712              	.LVL1259:
4655:./Libraries/FatFs/Src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 12713              		.loc 1 4655 5 is_stmt 1 view .LVU4523
 12714              	.LBB1510:
 12715              	.LBI1510:
 706:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 12716              		.loc 1 706 6 view .LVU4524
 12717 00a4 07F50D75 		add	r5, r7, #564
 12718              	.LBB1511:
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 12719              		.loc 1 710 8 is_stmt 0 view .LVU4525
 12720 00a8 0021     		movs	r1, #0
 707:./Libraries/FatFs/Src/ff.c **** 
 12721              		.loc 1 707 8 view .LVU4526
 12722 00aa 4246     		mov	r2, r8
 12723              	.LVL1260:
 12724              	.L1235:
 709:./Libraries/FatFs/Src/ff.c **** 		*d++ = (BYTE)val;
 12725              		.loc 1 709 2 is_stmt 1 view .LVU4527
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 12726              		.loc 1 710 3 view .LVU4528
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 12727              		.loc 1 710 8 is_stmt 0 view .LVU4529
ARM GAS  /tmp/ccaQXGqa.s 			page 401


 12728 00ac 02F8011B 		strb	r1, [r2], #1
 12729              	.LVL1261:
 711:./Libraries/FatFs/Src/ff.c **** }
 12730              		.loc 1 711 10 is_stmt 1 view .LVU4530
 711:./Libraries/FatFs/Src/ff.c **** }
 12731              		.loc 1 711 2 is_stmt 0 view .LVU4531
 12732 00b0 AA42     		cmp	r2, r5
 12733 00b2 FBD1     		bne	.L1235
 12734 00b4 07F13F0C 		add	ip, r7, #63
 12735              	.LBE1511:
 12736              	.LBE1510:
 12737              	.LBB1512:
 12738              	.LBB1513:
 707:./Libraries/FatFs/Src/ff.c **** 
 12739              		.loc 1 707 8 view .LVU4532
 12740 00b8 4246     		mov	r2, r8
 12741              	.LVL1262:
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 12742              		.loc 1 710 8 view .LVU4533
 12743 00ba 2021     		movs	r1, #32
 12744              	.LVL1263:
 12745              	.L1236:
 709:./Libraries/FatFs/Src/ff.c **** 		*d++ = (BYTE)val;
 12746              		.loc 1 709 2 is_stmt 1 view .LVU4534
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 12747              		.loc 1 710 3 view .LVU4535
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 12748              		.loc 1 710 8 is_stmt 0 view .LVU4536
 12749 00bc 02F8011B 		strb	r1, [r2], #1
 12750              	.LVL1264:
 711:./Libraries/FatFs/Src/ff.c **** }
 12751              		.loc 1 711 10 is_stmt 1 view .LVU4537
 711:./Libraries/FatFs/Src/ff.c **** }
 12752              		.loc 1 711 2 is_stmt 0 view .LVU4538
 12753 00c0 6245     		cmp	r2, ip
 12754 00c2 FBD1     		bne	.L1236
 12755              	.LVL1265:
 711:./Libraries/FatFs/Src/ff.c **** }
 12756              		.loc 1 711 2 view .LVU4539
 12757              	.LBE1513:
 12758              	.LBE1512:
4658:./Libraries/FatFs/Src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
 12759              		.loc 1 4658 6 is_stmt 1 view .LVU4540
 12760              	.LBB1514:
 12761              	.LBB1515:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 12762              		.loc 1 664 11 is_stmt 0 view .LVU4541
 12763 00c4 C0F30722 		ubfx	r2, r0, #8, #8
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 12764              		.loc 1 663 11 view .LVU4542
 12765 00c8 C3B2     		uxtb	r3, r0
 12766              	.LBE1515:
 12767              	.LBE1514:
 12768              	.LBB1521:
 12769              	.LBB1522:
 12770              	.LBB1523:
 12771              	.LBB1524:
ARM GAS  /tmp/ccaQXGqa.s 			page 402


 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12772              		.loc 1 656 11 view .LVU4543
 12773 00ca 5FFA86FC 		uxtb	ip, r6
 12774              	.LBE1524:
 12775              	.LBE1523:
 12776              	.LBE1522:
 12777              	.LBE1521:
4658:./Libraries/FatFs/Src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
 12778              		.loc 1 4658 20 view .LVU4544
 12779 00ce 4FF02E0E 		mov	lr, #46
 12780              	.LBB1539:
 12781              	.LBB1516:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 12782              		.loc 1 664 11 view .LVU4545
 12783 00d2 0392     		str	r2, [sp, #12]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12784              		.loc 1 665 11 view .LVU4546
 12785 00d4 C0F30742 		ubfx	r2, r0, #16, #8
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 12786              		.loc 1 663 9 view .LVU4547
 12787 00d8 87F84A30 		strb	r3, [r7, #74]
 666:./Libraries/FatFs/Src/ff.c **** }
 12788              		.loc 1 666 11 view .LVU4548
 12789 00dc 000E     		lsrs	r0, r0, #24
 12790              	.LVL1266:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 12791              		.loc 1 663 11 view .LVU4549
 12792 00de 0593     		str	r3, [sp, #20]
 12793              	.LBE1516:
 12794              	.LBE1539:
4659:./Libraries/FatFs/Src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
 12795              		.loc 1 4659 20 view .LVU4550
 12796 00e0 1021     		movs	r1, #16
 12797              	.LBB1540:
 12798              	.LBB1517:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 12799              		.loc 1 664 9 view .LVU4551
 12800 00e2 039B     		ldr	r3, [sp, #12]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12801              		.loc 1 665 11 view .LVU4552
 12802 00e4 0492     		str	r2, [sp, #16]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 12803              		.loc 1 664 9 view .LVU4553
 12804 00e6 87F84B30 		strb	r3, [r7, #75]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12805              		.loc 1 665 9 view .LVU4554
 12806 00ea 049B     		ldr	r3, [sp, #16]
 12807              	.LBE1517:
 12808              	.LBE1540:
 12809              	.LBB1541:
 12810              	.LBB1535:
 12811              	.LBB1529:
 12812              	.LBB1525:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12813              		.loc 1 656 11 view .LVU4555
 12814 00ec CDF804C0 		str	ip, [sp, #4]
 657:./Libraries/FatFs/Src/ff.c **** }
ARM GAS  /tmp/ccaQXGqa.s 			page 403


 12815              		.loc 1 657 11 view .LVU4556
 12816 00f0 C6F3072C 		ubfx	ip, r6, #8, #8
 12817              	.LBE1525:
 12818              	.LBE1529:
 12819              	.LBE1535:
 12820              	.LBE1541:
 12821              	.LBB1542:
 12822              	.LBB1518:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12823              		.loc 1 665 9 view .LVU4557
 12824 00f4 87F84C30 		strb	r3, [r7, #76]
 12825              	.LBE1518:
 12826              	.LBE1542:
4661:./Libraries/FatFs/Src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
 12827              		.loc 1 4661 6 view .LVU4558
 12828 00f8 099A     		ldr	r2, [sp, #36]
 12829              	.LBB1543:
 12830              	.LBB1536:
 12831              	.LBB1530:
 12832              	.LBB1526:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12833              		.loc 1 656 9 view .LVU4559
 12834 00fa 019B     		ldr	r3, [sp, #4]
 12835              	.LBE1526:
 12836              	.LBE1530:
 12837              	.LBE1536:
 12838              	.LBE1543:
4658:./Libraries/FatFs/Src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
 12839              		.loc 1 4658 20 view .LVU4560
 12840 00fc 87F834E0 		strb	lr, [r7, #52]
4659:./Libraries/FatFs/Src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
 12841              		.loc 1 4659 6 is_stmt 1 view .LVU4561
4659:./Libraries/FatFs/Src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
 12842              		.loc 1 4659 20 is_stmt 0 view .LVU4562
 12843 0100 87F83F10 		strb	r1, [r7, #63]
4660:./Libraries/FatFs/Src/ff.c **** 					st_clust(fs, dir, dcl);
 12844              		.loc 1 4660 6 is_stmt 1 view .LVU4563
 12845              	.LVL1267:
 12846              	.LBB1544:
 12847              	.LBI1514:
 661:./Libraries/FatFs/Src/ff.c **** {
 12848              		.loc 1 661 6 view .LVU4564
 12849              	.LBB1519:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 12850              		.loc 1 663 2 view .LVU4565
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 12851              		.loc 1 663 22 view .LVU4566
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 12852              		.loc 1 664 2 view .LVU4567
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 12853              		.loc 1 664 22 view .LVU4568
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12854              		.loc 1 665 2 view .LVU4569
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12855              		.loc 1 665 22 view .LVU4570
 666:./Libraries/FatFs/Src/ff.c **** }
 12856              		.loc 1 666 2 view .LVU4571
ARM GAS  /tmp/ccaQXGqa.s 			page 404


 666:./Libraries/FatFs/Src/ff.c **** }
 12857              		.loc 1 666 9 is_stmt 0 view .LVU4572
 12858 0104 87F84D00 		strb	r0, [r7, #77]
 12859              	.LVL1268:
 666:./Libraries/FatFs/Src/ff.c **** }
 12860              		.loc 1 666 9 view .LVU4573
 12861              	.LBE1519:
 12862              	.LBE1544:
4661:./Libraries/FatFs/Src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
 12863              		.loc 1 4661 6 is_stmt 1 view .LVU4574
 12864              	.LBB1545:
 12865              	.LBI1521:
1650:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
 12866              		.loc 1 1650 6 view .LVU4575
 12867              	.LBB1537:
1656:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 12868              		.loc 1 1656 2 view .LVU4576
 12869              	.LBB1531:
 12870              	.LBI1523:
 654:./Libraries/FatFs/Src/ff.c **** {
 12871              		.loc 1 654 6 view .LVU4577
 12872              	.LBB1527:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12873              		.loc 1 656 2 view .LVU4578
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12874              		.loc 1 656 9 is_stmt 0 view .LVU4579
 12875 0108 87F84E30 		strb	r3, [r7, #78]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12876              		.loc 1 656 22 is_stmt 1 view .LVU4580
 12877              	.LVL1269:
 657:./Libraries/FatFs/Src/ff.c **** }
 12878              		.loc 1 657 2 view .LVU4581
 657:./Libraries/FatFs/Src/ff.c **** }
 12879              		.loc 1 657 9 is_stmt 0 view .LVU4582
 12880 010c 87F84FC0 		strb	ip, [r7, #79]
 12881              	.LVL1270:
 657:./Libraries/FatFs/Src/ff.c **** }
 12882              		.loc 1 657 9 view .LVU4583
 12883              	.LBE1527:
 12884              	.LBE1531:
1657:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 12885              		.loc 1 1657 2 is_stmt 1 view .LVU4584
1657:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 12886              		.loc 1 1657 5 is_stmt 0 view .LVU4585
 12887 0110 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 12888              	.LVL1271:
1657:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 12889              		.loc 1 1657 5 view .LVU4586
 12890              	.LBE1537:
 12891              	.LBE1545:
 12892              	.LBB1546:
 12893              	.LBB1520:
 666:./Libraries/FatFs/Src/ff.c **** }
 12894              		.loc 1 666 11 view .LVU4587
 12895 0112 0690     		str	r0, [sp, #24]
 12896              	.LBE1520:
 12897              	.LBE1546:
ARM GAS  /tmp/ccaQXGqa.s 			page 405


 12898              	.LBB1547:
 12899              	.LBB1538:
1657:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 12900              		.loc 1 1657 5 view .LVU4588
 12901 0114 032A     		cmp	r2, #3
 12902              	.LBB1532:
 12903              	.LBB1528:
 657:./Libraries/FatFs/Src/ff.c **** }
 12904              		.loc 1 657 11 view .LVU4589
 12905 0116 CDF808C0 		str	ip, [sp, #8]
 12906              	.LBE1528:
 12907              	.LBE1532:
1657:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 12908              		.loc 1 1657 5 view .LVU4590
 12909 011a 05D1     		bne	.L1237
1658:./Libraries/FatFs/Src/ff.c **** 	}
 12910              		.loc 1 1658 3 is_stmt 1 view .LVU4591
1658:./Libraries/FatFs/Src/ff.c **** 	}
 12911              		.loc 1 1658 42 is_stmt 0 view .LVU4592
 12912 011c 320C     		lsrs	r2, r6, #16
 12913              	.LVL1272:
 12914              	.LBB1533:
 12915              	.LBI1533:
 654:./Libraries/FatFs/Src/ff.c **** {
 12916              		.loc 1 654 6 is_stmt 1 view .LVU4593
 12917              	.LBB1534:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12918              		.loc 1 656 2 view .LVU4594
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12919              		.loc 1 656 26 is_stmt 0 view .LVU4595
 12920 011e 110A     		lsrs	r1, r2, #8
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12921              		.loc 1 656 11 view .LVU4596
 12922 0120 87F84820 		strb	r2, [r7, #72]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12923              		.loc 1 656 22 is_stmt 1 view .LVU4597
 12924              	.LVL1273:
 657:./Libraries/FatFs/Src/ff.c **** }
 12925              		.loc 1 657 2 view .LVU4598
 657:./Libraries/FatFs/Src/ff.c **** }
 12926              		.loc 1 657 11 is_stmt 0 view .LVU4599
 12927 0124 87F84910 		strb	r1, [r7, #73]
 12928              	.LVL1274:
 12929              	.L1237:
 657:./Libraries/FatFs/Src/ff.c **** }
 12930              		.loc 1 657 11 view .LVU4600
 12931              	.LBE1534:
 12932              	.LBE1533:
 12933              	.LBE1538:
 12934              	.LBE1547:
4662:./Libraries/FatFs/Src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
 12935              		.loc 1 4662 6 is_stmt 1 view .LVU4601
 12936              	.LBB1548:
 12937              	.LBI1548:
 693:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 12938              		.loc 1 693 6 view .LVU4602
 12939              	.LBB1549:
ARM GAS  /tmp/ccaQXGqa.s 			page 406


 694:./Libraries/FatFs/Src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 12940              		.loc 1 694 2 view .LVU4603
 695:./Libraries/FatFs/Src/ff.c **** 
 12941              		.loc 1 695 2 view .LVU4604
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 12942              		.loc 1 697 2 view .LVU4605
 12943 0128 2022     		movs	r2, #32
 12944 012a 4146     		mov	r1, r8
 12945 012c 07F15400 		add	r0, r7, #84
 12946 0130 FFF7FEFF 		bl	mem_cpy.part.0
 12947              	.LVL1275:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 12948              		.loc 1 697 2 is_stmt 0 view .LVU4606
 12949              	.LBE1549:
 12950              	.LBE1548:
4663:./Libraries/FatFs/Src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
 12951              		.loc 1 4663 6 is_stmt 1 view .LVU4607
4663:./Libraries/FatFs/Src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
 12952              		.loc 1 4663 22 is_stmt 0 view .LVU4608
 12953 0134 2E22     		movs	r2, #46
4664:./Libraries/FatFs/Src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 12954              		.loc 1 4664 12 view .LVU4609
 12955 0136 0998     		ldr	r0, [sp, #36]
4663:./Libraries/FatFs/Src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
 12956              		.loc 1 4663 22 view .LVU4610
 12957 0138 87F85520 		strb	r2, [r7, #85]
4663:./Libraries/FatFs/Src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
 12958              		.loc 1 4663 29 is_stmt 1 view .LVU4611
4664:./Libraries/FatFs/Src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 12959              		.loc 1 4664 9 is_stmt 0 view .LVU4612
 12960 013c 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
4663:./Libraries/FatFs/Src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
 12961              		.loc 1 4663 33 view .LVU4613
 12962 013e 0C9A     		ldr	r2, [sp, #48]
 12963              	.LVL1276:
4664:./Libraries/FatFs/Src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 12964              		.loc 1 4664 6 is_stmt 1 view .LVU4614
4664:./Libraries/FatFs/Src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 12965              		.loc 1 4664 9 is_stmt 0 view .LVU4615
 12966 0140 0329     		cmp	r1, #3
 12967 0142 70D0     		beq	.L1238
 12968              	.L1269:
 12969 0144 D4B2     		uxtb	r4, r2
 12970 0146 C2F30721 		ubfx	r1, r2, #8, #8
 12971              	.LVL1277:
 12972              	.L1239:
4665:./Libraries/FatFs/Src/ff.c **** 				}
 12973              		.loc 1 4665 6 is_stmt 1 view .LVU4616
 12974              	.LBB1550:
 12975              	.LBI1550:
1650:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
 12976              		.loc 1 1650 6 view .LVU4617
 12977              	.LBB1551:
1656:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 12978              		.loc 1 1656 2 view .LVU4618
 12979              	.LBB1552:
 12980              	.LBI1552:
ARM GAS  /tmp/ccaQXGqa.s 			page 407


 654:./Libraries/FatFs/Src/ff.c **** {
 12981              		.loc 1 654 6 view .LVU4619
 12982              	.LBB1553:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12983              		.loc 1 656 2 view .LVU4620
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12984              		.loc 1 656 9 is_stmt 0 view .LVU4621
 12985 014a 87F86E40 		strb	r4, [r7, #110]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 12986              		.loc 1 656 22 is_stmt 1 view .LVU4622
 12987              	.LVL1278:
 657:./Libraries/FatFs/Src/ff.c **** }
 12988              		.loc 1 657 2 view .LVU4623
 657:./Libraries/FatFs/Src/ff.c **** }
 12989              		.loc 1 657 9 is_stmt 0 view .LVU4624
 12990 014e 87F86F10 		strb	r1, [r7, #111]
 12991              	.LVL1279:
 657:./Libraries/FatFs/Src/ff.c **** }
 12992              		.loc 1 657 9 view .LVU4625
 12993              	.LBE1553:
 12994              	.LBE1552:
1657:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 12995              		.loc 1 1657 2 is_stmt 1 view .LVU4626
1657:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 12996              		.loc 1 1657 5 is_stmt 0 view .LVU4627
 12997 0152 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 12998 0154 0329     		cmp	r1, #3
 12999 0156 05D1     		bne	.L1240
1658:./Libraries/FatFs/Src/ff.c **** 	}
 13000              		.loc 1 1658 3 is_stmt 1 view .LVU4628
1658:./Libraries/FatFs/Src/ff.c **** 	}
 13001              		.loc 1 1658 42 is_stmt 0 view .LVU4629
 13002 0158 120C     		lsrs	r2, r2, #16
 13003              	.LVL1280:
 13004              	.LBB1554:
 13005              	.LBI1554:
 654:./Libraries/FatFs/Src/ff.c **** {
 13006              		.loc 1 654 6 is_stmt 1 view .LVU4630
 13007              	.LBB1555:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13008              		.loc 1 656 2 view .LVU4631
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13009              		.loc 1 656 26 is_stmt 0 view .LVU4632
 13010 015a 110A     		lsrs	r1, r2, #8
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13011              		.loc 1 656 11 view .LVU4633
 13012 015c 87F86820 		strb	r2, [r7, #104]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13013              		.loc 1 656 22 is_stmt 1 view .LVU4634
 13014              	.LVL1281:
 657:./Libraries/FatFs/Src/ff.c **** }
 13015              		.loc 1 657 2 view .LVU4635
 657:./Libraries/FatFs/Src/ff.c **** }
 13016              		.loc 1 657 11 is_stmt 0 view .LVU4636
 13017 0160 87F86910 		strb	r1, [r7, #105]
 13018              	.LVL1282:
 13019              	.L1240:
ARM GAS  /tmp/ccaQXGqa.s 			page 408


 657:./Libraries/FatFs/Src/ff.c **** }
 13020              		.loc 1 657 11 view .LVU4637
 13021              	.LBE1555:
 13022              	.LBE1554:
 13023              	.LBE1551:
 13024              	.LBE1550:
4667:./Libraries/FatFs/Src/ff.c **** 					fs->winsect = dsc++;
 13025              		.loc 1 4667 5 is_stmt 1 view .LVU4638
4667:./Libraries/FatFs/Src/ff.c **** 					fs->winsect = dsc++;
 13026              		.loc 1 4667 12 is_stmt 0 view .LVU4639
 13027 0164 4289     		ldrh	r2, [r0, #10]
 13028              	.LVL1283:
4667:./Libraries/FatFs/Src/ff.c **** 					fs->winsect = dsc++;
 13029              		.loc 1 4667 25 is_stmt 1 view .LVU4640
4667:./Libraries/FatFs/Src/ff.c **** 					fs->winsect = dsc++;
 13030              		.loc 1 4667 5 is_stmt 0 view .LVU4641
 13031 0166 C2B1     		cbz	r2, .L1241
 13032 0168 013A     		subs	r2, r2, #1
 13033              	.LVL1284:
4669:./Libraries/FatFs/Src/ff.c **** 					res = sync_window(fs);
 13034              		.loc 1 4669 16 view .LVU4642
 13035 016a 4FF0010A 		mov	r10, #1
 13036              	.LBB1556:
 13037              	.LBB1557:
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 13038              		.loc 1 710 8 view .LVU4643
 13039 016e 4FF0000B 		mov	fp, #0
 13040 0172 4C46     		mov	r4, r9
 13041 0174 02EB0907 		add	r7, r2, r9
 13042              	.LVL1285:
 13043              	.L1244:
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 13044              		.loc 1 710 8 view .LVU4644
 13045              	.LBE1557:
 13046              	.LBE1556:
4668:./Libraries/FatFs/Src/ff.c **** 					fs->wflag = 1;
 13047              		.loc 1 4668 6 is_stmt 1 view .LVU4645
4668:./Libraries/FatFs/Src/ff.c **** 					fs->wflag = 1;
 13048              		.loc 1 4668 18 is_stmt 0 view .LVU4646
 13049 0178 0463     		str	r4, [r0, #48]
4669:./Libraries/FatFs/Src/ff.c **** 					res = sync_window(fs);
 13050              		.loc 1 4669 6 is_stmt 1 view .LVU4647
4669:./Libraries/FatFs/Src/ff.c **** 					res = sync_window(fs);
 13051              		.loc 1 4669 16 is_stmt 0 view .LVU4648
 13052 017a 80F803A0 		strb	r10, [r0, #3]
4670:./Libraries/FatFs/Src/ff.c **** 					if (res != FR_OK) break;
 13053              		.loc 1 4670 6 is_stmt 1 view .LVU4649
 13054              	.LVL1286:
 13055              	.LBB1559:
 13056              	.LBI1559:
 883:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs			/* File system object */
 13057              		.loc 1 883 9 view .LVU4650
 13058              	.LBB1560:
 887:./Libraries/FatFs/Src/ff.c **** 	UINT nf;
 13059              		.loc 1 887 2 view .LVU4651
 888:./Libraries/FatFs/Src/ff.c **** 	FRESULT res = FR_OK;
 13060              		.loc 1 888 2 view .LVU4652
ARM GAS  /tmp/ccaQXGqa.s 			page 409


 889:./Libraries/FatFs/Src/ff.c **** 
 13061              		.loc 1 889 2 view .LVU4653
 892:./Libraries/FatFs/Src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 13062              		.loc 1 892 2 view .LVU4654
 13063 017e FFF7FEFF 		bl	sync_window.part.0
 13064              	.LVL1287:
 906:./Libraries/FatFs/Src/ff.c **** }
 13065              		.loc 1 906 2 view .LVU4655
 906:./Libraries/FatFs/Src/ff.c **** }
 13066              		.loc 1 906 2 is_stmt 0 view .LVU4656
 13067              	.LBE1560:
 13068              	.LBE1559:
4671:./Libraries/FatFs/Src/ff.c **** 					mem_set(dir, 0, SS(fs));
 13069              		.loc 1 4671 6 is_stmt 1 view .LVU4657
4671:./Libraries/FatFs/Src/ff.c **** 					mem_set(dir, 0, SS(fs));
 13070              		.loc 1 4671 9 is_stmt 0 view .LVU4658
 13071 0182 0028     		cmp	r0, #0
 13072 0184 47D1     		bne	.L1272
 13073 0186 4346     		mov	r3, r8
 13074              	.L1242:
 13075              	.LVL1288:
 13076              	.LBB1561:
 13077              	.LBB1558:
 709:./Libraries/FatFs/Src/ff.c **** 		*d++ = (BYTE)val;
 13078              		.loc 1 709 2 is_stmt 1 view .LVU4659
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 13079              		.loc 1 710 3 view .LVU4660
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 13080              		.loc 1 710 8 is_stmt 0 view .LVU4661
 13081 0188 03F801BB 		strb	fp, [r3], #1
 13082              	.LVL1289:
 711:./Libraries/FatFs/Src/ff.c **** }
 13083              		.loc 1 711 10 is_stmt 1 view .LVU4662
 711:./Libraries/FatFs/Src/ff.c **** }
 13084              		.loc 1 711 2 is_stmt 0 view .LVU4663
 13085 018c AB42     		cmp	r3, r5
 13086 018e FBD1     		bne	.L1242
 13087              	.LVL1290:
 711:./Libraries/FatFs/Src/ff.c **** }
 13088              		.loc 1 711 2 view .LVU4664
 13089              	.LBE1558:
 13090              	.LBE1561:
4667:./Libraries/FatFs/Src/ff.c **** 					fs->winsect = dsc++;
 13091              		.loc 1 4667 28 is_stmt 1 discriminator 2 view .LVU4665
4667:./Libraries/FatFs/Src/ff.c **** 					fs->winsect = dsc++;
 13092              		.loc 1 4667 25 discriminator 2 view .LVU4666
4667:./Libraries/FatFs/Src/ff.c **** 					fs->winsect = dsc++;
 13093              		.loc 1 4667 5 is_stmt 0 discriminator 2 view .LVU4667
 13094 0190 A742     		cmp	r7, r4
 13095 0192 02D0     		beq	.L1241
 13096 0194 0134     		adds	r4, r4, #1
 13097              	.LVL1291:
4667:./Libraries/FatFs/Src/ff.c **** 					fs->winsect = dsc++;
 13098              		.loc 1 4667 5 discriminator 2 view .LVU4668
 13099 0196 0998     		ldr	r0, [sp, #36]
 13100 0198 EEE7     		b	.L1244
 13101              	.LVL1292:
ARM GAS  /tmp/ccaQXGqa.s 			page 410


 13102              	.L1241:
4675:./Libraries/FatFs/Src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
 13103              		.loc 1 4675 4 is_stmt 1 view .LVU4669
4676:./Libraries/FatFs/Src/ff.c **** 			}
 13104              		.loc 1 4676 5 view .LVU4670
4676:./Libraries/FatFs/Src/ff.c **** 			}
 13105              		.loc 1 4676 11 is_stmt 0 view .LVU4671
 13106 019a 0AA8     		add	r0, sp, #40
 13107 019c FFF7FEFF 		bl	dir_register
 13108              	.LVL1293:
4678:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 13109              		.loc 1 4678 4 is_stmt 1 view .LVU4672
4678:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 13110              		.loc 1 4678 7 is_stmt 0 view .LVU4673
 13111 01a0 0446     		mov	r4, r0
 13112 01a2 0028     		cmp	r0, #0
 13113 01a4 4AD1     		bne	.L1273
4691:./Libraries/FatFs/Src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
 13114              		.loc 1 4691 6 is_stmt 1 view .LVU4674
4691:./Libraries/FatFs/Src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
 13115              		.loc 1 4691 10 is_stmt 0 view .LVU4675
 13116 01a6 129B     		ldr	r3, [sp, #72]
 13117              	.LVL1294:
4692:./Libraries/FatFs/Src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
 13118              		.loc 1 4692 6 is_stmt 1 view .LVU4676
 13119              	.LBB1562:
 13120              	.LBI1562:
 661:./Libraries/FatFs/Src/ff.c **** {
 13121              		.loc 1 661 6 view .LVU4677
 13122              	.LBB1563:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 13123              		.loc 1 663 2 view .LVU4678
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 13124              		.loc 1 663 9 is_stmt 0 view .LVU4679
 13125 01a8 059A     		ldr	r2, [sp, #20]
 13126              	.LBE1563:
 13127              	.LBE1562:
4693:./Libraries/FatFs/Src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
 13128              		.loc 1 4693 6 view .LVU4680
 13129 01aa 0998     		ldr	r0, [sp, #36]
 13130              	.LVL1295:
 13131              	.LBB1565:
 13132              	.LBB1564:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 13133              		.loc 1 663 9 view .LVU4681
 13134 01ac 9A75     		strb	r2, [r3, #22]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 13135              		.loc 1 663 22 is_stmt 1 view .LVU4682
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 13136              		.loc 1 664 2 view .LVU4683
 13137              	.LVL1296:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 13138              		.loc 1 664 9 is_stmt 0 view .LVU4684
 13139 01ae 039A     		ldr	r2, [sp, #12]
 13140 01b0 DA75     		strb	r2, [r3, #23]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 13141              		.loc 1 664 22 is_stmt 1 view .LVU4685
ARM GAS  /tmp/ccaQXGqa.s 			page 411


 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13142              		.loc 1 665 2 view .LVU4686
 13143              	.LVL1297:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13144              		.loc 1 665 9 is_stmt 0 view .LVU4687
 13145 01b2 049A     		ldr	r2, [sp, #16]
 13146 01b4 1A76     		strb	r2, [r3, #24]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13147              		.loc 1 665 22 is_stmt 1 view .LVU4688
 666:./Libraries/FatFs/Src/ff.c **** }
 13148              		.loc 1 666 2 view .LVU4689
 13149              	.LVL1298:
 666:./Libraries/FatFs/Src/ff.c **** }
 13150              		.loc 1 666 9 is_stmt 0 view .LVU4690
 13151 01b6 069A     		ldr	r2, [sp, #24]
 13152 01b8 5A76     		strb	r2, [r3, #25]
 13153              	.LVL1299:
 666:./Libraries/FatFs/Src/ff.c **** }
 13154              		.loc 1 666 9 view .LVU4691
 13155              	.LBE1564:
 13156              	.LBE1565:
4693:./Libraries/FatFs/Src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
 13157              		.loc 1 4693 6 is_stmt 1 view .LVU4692
 13158              	.LBB1566:
 13159              	.LBI1566:
1650:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
 13160              		.loc 1 1650 6 view .LVU4693
 13161              	.LBB1567:
1656:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 13162              		.loc 1 1656 2 view .LVU4694
 13163              	.LBB1568:
 13164              	.LBI1568:
 654:./Libraries/FatFs/Src/ff.c **** {
 13165              		.loc 1 654 6 view .LVU4695
 13166              	.LBB1569:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13167              		.loc 1 656 2 view .LVU4696
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13168              		.loc 1 656 9 is_stmt 0 view .LVU4697
 13169 01ba 019A     		ldr	r2, [sp, #4]
 13170 01bc 9A76     		strb	r2, [r3, #26]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13171              		.loc 1 656 22 is_stmt 1 view .LVU4698
 13172              	.LVL1300:
 657:./Libraries/FatFs/Src/ff.c **** }
 13173              		.loc 1 657 2 view .LVU4699
 657:./Libraries/FatFs/Src/ff.c **** }
 13174              		.loc 1 657 9 is_stmt 0 view .LVU4700
 13175 01be 029A     		ldr	r2, [sp, #8]
 13176 01c0 DA76     		strb	r2, [r3, #27]
 13177              	.LVL1301:
 657:./Libraries/FatFs/Src/ff.c **** }
 13178              		.loc 1 657 9 view .LVU4701
 13179              	.LBE1569:
 13180              	.LBE1568:
1657:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 13181              		.loc 1 1657 2 is_stmt 1 view .LVU4702
ARM GAS  /tmp/ccaQXGqa.s 			page 412


1657:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 13182              		.loc 1 1657 5 is_stmt 0 view .LVU4703
 13183 01c2 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 13184 01c4 032A     		cmp	r2, #3
 13185 01c6 03D1     		bne	.L1245
1658:./Libraries/FatFs/Src/ff.c **** 	}
 13186              		.loc 1 1658 3 is_stmt 1 view .LVU4704
1658:./Libraries/FatFs/Src/ff.c **** 	}
 13187              		.loc 1 1658 42 is_stmt 0 view .LVU4705
 13188 01c8 360C     		lsrs	r6, r6, #16
 13189              	.LVL1302:
 13190              	.LBB1570:
 13191              	.LBI1570:
 654:./Libraries/FatFs/Src/ff.c **** {
 13192              		.loc 1 654 6 is_stmt 1 view .LVU4706
 13193              	.LBB1571:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13194              		.loc 1 656 2 view .LVU4707
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13195              		.loc 1 656 26 is_stmt 0 view .LVU4708
 13196 01ca 320A     		lsrs	r2, r6, #8
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13197              		.loc 1 656 11 view .LVU4709
 13198 01cc 1E75     		strb	r6, [r3, #20]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13199              		.loc 1 656 22 is_stmt 1 view .LVU4710
 13200              	.LVL1303:
 657:./Libraries/FatFs/Src/ff.c **** }
 13201              		.loc 1 657 2 view .LVU4711
 657:./Libraries/FatFs/Src/ff.c **** }
 13202              		.loc 1 657 11 is_stmt 0 view .LVU4712
 13203 01ce 5A75     		strb	r2, [r3, #21]
 13204              	.LVL1304:
 13205              	.L1245:
 657:./Libraries/FatFs/Src/ff.c **** }
 13206              		.loc 1 657 11 view .LVU4713
 13207              	.LBE1571:
 13208              	.LBE1570:
 13209              	.LBE1567:
 13210              	.LBE1566:
4694:./Libraries/FatFs/Src/ff.c **** 					fs->wflag = 1;
 13211              		.loc 1 4694 6 is_stmt 1 view .LVU4714
4694:./Libraries/FatFs/Src/ff.c **** 					fs->wflag = 1;
 13212              		.loc 1 4694 20 is_stmt 0 view .LVU4715
 13213 01d0 1021     		movs	r1, #16
4695:./Libraries/FatFs/Src/ff.c **** 				}
 13214              		.loc 1 4695 16 view .LVU4716
 13215 01d2 0122     		movs	r2, #1
4694:./Libraries/FatFs/Src/ff.c **** 					fs->wflag = 1;
 13216              		.loc 1 4694 20 view .LVU4717
 13217 01d4 D972     		strb	r1, [r3, #11]
4695:./Libraries/FatFs/Src/ff.c **** 				}
 13218              		.loc 1 4695 6 is_stmt 1 view .LVU4718
4695:./Libraries/FatFs/Src/ff.c **** 				}
 13219              		.loc 1 4695 16 is_stmt 0 view .LVU4719
 13220 01d6 C270     		strb	r2, [r0, #3]
4697:./Libraries/FatFs/Src/ff.c **** 					res = sync_fs(fs);
ARM GAS  /tmp/ccaQXGqa.s 			page 413


 13221              		.loc 1 4697 5 is_stmt 1 view .LVU4720
4698:./Libraries/FatFs/Src/ff.c **** 				}
 13222              		.loc 1 4698 6 view .LVU4721
4698:./Libraries/FatFs/Src/ff.c **** 				}
 13223              		.loc 1 4698 12 is_stmt 0 view .LVU4722
 13224 01d8 FFF7FEFF 		bl	sync_fs
 13225              	.LVL1305:
4698:./Libraries/FatFs/Src/ff.c **** 				}
 13226              		.loc 1 4698 12 view .LVU4723
 13227 01dc 099B     		ldr	r3, [sp, #36]
 13228 01de 0446     		mov	r4, r0
 13229 01e0 1BE7     		b	.L1270
 13230              	.LVL1306:
 13231              	.L1248:
4647:./Libraries/FatFs/Src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 13232              		.loc 1 4647 22 view .LVU4724
 13233 01e2 0724     		movs	r4, #7
 13234              	.L1230:
 13235              	.LVL1307:
4651:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 13236              		.loc 1 4651 4 is_stmt 1 view .LVU4725
4651:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 13237              		.loc 1 4651 9 is_stmt 0 view .LVU4726
 13238 01e4 0125     		movs	r5, #1
 13239 01e6 FFF7FEFF 		bl	get_fattime
 13240              	.LVL1308:
4652:./Libraries/FatFs/Src/ff.c **** 				dsc = clust2sect(fs, dcl);
 13241              		.loc 1 4652 4 is_stmt 1 view .LVU4727
 13242              	.L1243:
4701:./Libraries/FatFs/Src/ff.c **** 			}
 13243              		.loc 1 4701 5 view .LVU4728
 13244 01ea 3146     		mov	r1, r6
 13245 01ec 0AA8     		add	r0, sp, #40
 13246 01ee 0022     		movs	r2, #0
 13247 01f0 FFF7FEFF 		bl	remove_chain
 13248              	.LVL1309:
 13249 01f4 099B     		ldr	r3, [sp, #36]
 13250 01f6 14E7     		b	.L1227
 13251              	.LVL1310:
 13252              	.L1231:
 13253              	.LBB1572:
 13254              	.LBB1506:
4701:./Libraries/FatFs/Src/ff.c **** 			}
 13255              		.loc 1 4701 5 is_stmt 0 view .LVU4729
 13256 01f8 1046     		mov	r0, r2
 13257              	.LVL1311:
4701:./Libraries/FatFs/Src/ff.c **** 			}
 13258              		.loc 1 4701 5 view .LVU4730
 13259 01fa FFF7FEFF 		bl	sync_window.part.0
 13260              	.LVL1312:
4701:./Libraries/FatFs/Src/ff.c **** 			}
 13261              		.loc 1 4701 5 view .LVU4731
 13262 01fe 0746     		mov	r7, r0
 13263              	.LVL1313:
4701:./Libraries/FatFs/Src/ff.c **** 			}
 13264              		.loc 1 4701 5 view .LVU4732
 13265              	.LBE1506:
ARM GAS  /tmp/ccaQXGqa.s 			page 414


 13266              	.LBE1572:
4651:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 13267              		.loc 1 4651 4 is_stmt 1 view .LVU4733
4651:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 13268              		.loc 1 4651 9 is_stmt 0 view .LVU4734
 13269 0200 FFF7FEFF 		bl	get_fattime
 13270              	.LVL1314:
4652:./Libraries/FatFs/Src/ff.c **** 				dsc = clust2sect(fs, dcl);
 13271              		.loc 1 4652 4 is_stmt 1 view .LVU4735
4652:./Libraries/FatFs/Src/ff.c **** 				dsc = clust2sect(fs, dcl);
 13272              		.loc 1 4652 7 is_stmt 0 view .LVU4736
 13273 0204 002F     		cmp	r7, #0
 13274 0206 3FF440AF 		beq	.L1232
 13275 020a B7F10C05 		subs	r5, r7, #12
 13276 020e 3C46     		mov	r4, r7
 13277 0210 18BF     		it	ne
 13278 0212 0125     		movne	r5, #1
 13279 0214 E9E7     		b	.L1243
 13280              	.LVL1315:
 13281              	.L1272:
4652:./Libraries/FatFs/Src/ff.c **** 				dsc = clust2sect(fs, dcl);
 13282              		.loc 1 4652 7 view .LVU4737
 13283 0216 B0F10C05 		subs	r5, r0, #12
 13284 021a 0446     		mov	r4, r0
 13285              	.LVL1316:
4652:./Libraries/FatFs/Src/ff.c **** 				dsc = clust2sect(fs, dcl);
 13286              		.loc 1 4652 7 view .LVU4738
 13287 021c 18BF     		it	ne
 13288 021e 0125     		movne	r5, #1
 13289 0220 E3E7     		b	.L1243
 13290              	.LVL1317:
 13291              	.L1249:
4648:./Libraries/FatFs/Src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 13292              		.loc 1 4648 22 view .LVU4739
 13293 0222 0224     		movs	r4, #2
 13294 0224 DEE7     		b	.L1230
 13295              	.LVL1318:
 13296              	.L1238:
4664:./Libraries/FatFs/Src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 13297              		.loc 1 4664 34 discriminator 1 view .LVU4740
 13298 0226 816A     		ldr	r1, [r0, #40]
 13299 0228 9142     		cmp	r1, r2
 13300 022a 8BD1     		bne	.L1269
 13301 022c 0021     		movs	r1, #0
4664:./Libraries/FatFs/Src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 13302              		.loc 1 4664 61 view .LVU4741
 13303 022e 0A46     		mov	r2, r1
 13304              	.LVL1319:
4664:./Libraries/FatFs/Src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 13305              		.loc 1 4664 61 view .LVU4742
 13306 0230 8BE7     		b	.L1239
 13307              	.LVL1320:
 13308              	.L1251:
 13309              	.LBB1573:
 13310              	.LBB1509:
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 13311              		.loc 1 989 39 view .LVU4743
ARM GAS  /tmp/ccaQXGqa.s 			page 415


 13312 0232 4FF00009 		mov	r9, #0
 13313 0236 33E7     		b	.L1234
 13314              	.LVL1321:
 13315              	.L1250:
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 13316              		.loc 1 989 39 view .LVU4744
 13317              	.LBE1509:
 13318              	.LBE1573:
4649:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 13319              		.loc 1 4649 31 view .LVU4745
 13320 0238 0124     		movs	r4, #1
 13321 023a D3E7     		b	.L1230
 13322              	.LVL1322:
 13323              	.L1273:
4649:./Libraries/FatFs/Src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 13324              		.loc 1 4649 31 view .LVU4746
 13325 023c B0F10C05 		subs	r5, r0, #12
 13326 0240 18BF     		it	ne
 13327 0242 0125     		movne	r5, #1
 13328 0244 D1E7     		b	.L1243
 13329              		.cfi_endproc
 13330              	.LFE389:
 13332 0246 00BF     		.section	.text.f_rename,"ax",%progbits
 13333              		.align	1
 13334              		.p2align 2,,3
 13335              		.global	f_rename
 13336              		.syntax unified
 13337              		.thumb
 13338              		.thumb_func
 13339              		.fpu fpv5-d16
 13341              	f_rename:
 13342              	.LVL1323:
 13343              	.LFB390:
4721:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 13344              		.loc 1 4721 1 is_stmt 1 view -0
 13345              		.cfi_startproc
 13346              		@ args = 0, pretend = 0, frame = 136
 13347              		@ frame_needed = 0, uses_anonymous_args = 0
4722:./Libraries/FatFs/Src/ff.c **** 	DIR djo, djn;
 13348              		.loc 1 4722 2 view .LVU4748
4723:./Libraries/FatFs/Src/ff.c **** 	FATFS *fs;
 13349              		.loc 1 4723 2 view .LVU4749
4724:./Libraries/FatFs/Src/ff.c **** 	BYTE buf[_FS_EXFAT ? SZDIRE * 2 : 24], *dir;
 13350              		.loc 1 4724 2 view .LVU4750
4725:./Libraries/FatFs/Src/ff.c **** 	DWORD dw;
 13351              		.loc 1 4725 2 view .LVU4751
4726:./Libraries/FatFs/Src/ff.c **** 	DEF_NAMBUF
 13352              		.loc 1 4726 2 view .LVU4752
4730:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
 13353              		.loc 1 4730 2 view .LVU4753
4721:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 13354              		.loc 1 4721 1 is_stmt 0 view .LVU4754
 13355 0000 10B5     		push	{r4, lr}
 13356              	.LCFI146:
 13357              		.cfi_def_cfa_offset 8
 13358              		.cfi_offset 4, -8
 13359              		.cfi_offset 14, -4
ARM GAS  /tmp/ccaQXGqa.s 			page 416


 13360 0002 A2B0     		sub	sp, sp, #136
 13361              	.LCFI147:
 13362              		.cfi_def_cfa_offset 144
4721:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 13363              		.loc 1 4721 1 view .LVU4755
 13364 0004 0190     		str	r0, [sp, #4]
4730:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
 13365              		.loc 1 4730 2 view .LVU4756
 13366 0006 6846     		mov	r0, sp
 13367              	.LVL1324:
4721:./Libraries/FatFs/Src/ff.c **** 	FRESULT res;
 13368              		.loc 1 4721 1 view .LVU4757
 13369 0008 0091     		str	r1, [sp]
4730:./Libraries/FatFs/Src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
 13370              		.loc 1 4730 2 view .LVU4758
 13371 000a FFF7FEFF 		bl	get_ldnumber
 13372              	.LVL1325:
4731:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 13373              		.loc 1 4731 2 is_stmt 1 view .LVU4759
4731:./Libraries/FatFs/Src/ff.c **** 	if (res == FR_OK) {
 13374              		.loc 1 4731 8 is_stmt 0 view .LVU4760
 13375 000e 0222     		movs	r2, #2
 13376 0010 03A9     		add	r1, sp, #12
 13377 0012 01A8     		add	r0, sp, #4
 13378 0014 FFF7FEFF 		bl	find_volume
 13379              	.LVL1326:
4732:./Libraries/FatFs/Src/ff.c **** 		djo.obj.fs = fs;
 13380              		.loc 1 4732 2 is_stmt 1 view .LVU4761
4732:./Libraries/FatFs/Src/ff.c **** 		djo.obj.fs = fs;
 13381              		.loc 1 4732 5 is_stmt 0 view .LVU4762
 13382 0018 68B1     		cbz	r0, .L1275
 13383              	.LVL1327:
 13384              	.L1308:
4802:./Libraries/FatFs/Src/ff.c **** 				}
 13385              		.loc 1 4802 12 view .LVU4763
 13386 001a 0446     		mov	r4, r0
 13387              	.L1307:
 13388              	.LVL1328:
4802:./Libraries/FatFs/Src/ff.c **** 				}
 13389              		.loc 1 4802 12 view .LVU4764
 13390 001c B4F10C03 		subs	r3, r4, #12
 13391 0020 18BF     		it	ne
 13392 0022 0123     		movne	r3, #1
 13393              	.LVL1329:
 13394              	.L1276:
4807:./Libraries/FatFs/Src/ff.c **** 	}
 13395              		.loc 1 4807 16 is_stmt 1 view .LVU4765
4810:./Libraries/FatFs/Src/ff.c **** }
 13396              		.loc 1 4810 2 view .LVU4766
 13397 0024 0398     		ldr	r0, [sp, #12]
 13398              	.LVL1330:
 13399              	.LBB1574:
 13400              	.LBI1574:
 751:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 13401              		.loc 1 751 6 view .LVU4767
 13402              	.LBB1575:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
ARM GAS  /tmp/ccaQXGqa.s 			page 417


 13403              		.loc 1 756 2 view .LVU4768
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 13404              		.loc 1 756 5 is_stmt 0 view .LVU4769
 13405 0026 18B1     		cbz	r0, .L1291
 13406 0028 13B1     		cbz	r3, .L1291
 13407              	.LVL1331:
 13408              	.L1286:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 13409              		.loc 1 756 5 view .LVU4770
 13410 002a 2146     		mov	r1, r4
 13411 002c FFF7FEFF 		bl	unlock_fs.part.0
 13412              	.LVL1332:
 13413              	.L1291:
 756:./Libraries/FatFs/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 13414              		.loc 1 756 5 view .LVU4771
 13415              	.LBE1575:
 13416              	.LBE1574:
4810:./Libraries/FatFs/Src/ff.c **** }
 13417              		.loc 1 4810 2 is_stmt 1 view .LVU4772
4810:./Libraries/FatFs/Src/ff.c **** }
 13418              		.loc 1 4810 19 view .LVU4773
4811:./Libraries/FatFs/Src/ff.c **** 
 13419              		.loc 1 4811 1 is_stmt 0 view .LVU4774
 13420 0030 2046     		mov	r0, r4
 13421 0032 22B0     		add	sp, sp, #136
 13422              	.LCFI148:
 13423              		.cfi_remember_state
 13424              		.cfi_def_cfa_offset 8
 13425              		@ sp needed
 13426 0034 10BD     		pop	{r4, pc}
 13427              	.LVL1333:
 13428              	.L1275:
 13429              	.LCFI149:
 13430              		.cfi_restore_state
4733:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
 13431              		.loc 1 4733 3 is_stmt 1 view .LVU4775
4733:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
 13432              		.loc 1 4733 14 is_stmt 0 view .LVU4776
 13433 0036 039B     		ldr	r3, [sp, #12]
4735:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
 13434              		.loc 1 4735 9 view .LVU4777
 13435 0038 0AA8     		add	r0, sp, #40
 13436              	.LVL1334:
4735:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
 13437              		.loc 1 4735 9 view .LVU4778
 13438 003a 0199     		ldr	r1, [sp, #4]
4733:./Libraries/FatFs/Src/ff.c **** 		INIT_NAMBUF(fs);
 13439              		.loc 1 4733 14 view .LVU4779
 13440 003c 0A93     		str	r3, [sp, #40]
4734:./Libraries/FatFs/Src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
 13441              		.loc 1 4734 18 is_stmt 1 view .LVU4780
4735:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
 13442              		.loc 1 4735 3 view .LVU4781
4735:./Libraries/FatFs/Src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
 13443              		.loc 1 4735 9 is_stmt 0 view .LVU4782
 13444 003e FFF7FEFF 		bl	follow_path
 13445              	.LVL1335:
ARM GAS  /tmp/ccaQXGqa.s 			page 418


4736:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 13446              		.loc 1 4736 3 is_stmt 1 view .LVU4783
4736:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 13447              		.loc 1 4736 6 is_stmt 0 view .LVU4784
 13448 0042 0446     		mov	r4, r0
 13449 0044 0028     		cmp	r0, #0
 13450 0046 E9D1     		bne	.L1307
4736:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 13451              		.loc 1 4736 20 discriminator 1 view .LVU4785
 13452 0048 9DF85730 		ldrb	r3, [sp, #87]	@ zero_extendqisi2
 13453 004c 13F0A00F 		tst	r3, #160
 13454 0050 02D0     		beq	.L1309
 13455 0052 0123     		movs	r3, #1
4736:./Libraries/FatFs/Src/ff.c **** #if _FS_LOCK != 0
 13456              		.loc 1 4736 68 view .LVU4786
 13457 0054 0624     		movs	r4, #6
 13458 0056 E5E7     		b	.L1276
 13459              	.L1309:
 13460              	.LVL1336:
4738:./Libraries/FatFs/Src/ff.c **** 			res = chk_lock(&djo, 2);
 13461              		.loc 1 4738 3 is_stmt 1 view .LVU4787
4739:./Libraries/FatFs/Src/ff.c **** 		}
 13462              		.loc 1 4739 4 view .LVU4788
4739:./Libraries/FatFs/Src/ff.c **** 		}
 13463              		.loc 1 4739 10 is_stmt 0 view .LVU4789
 13464 0058 0221     		movs	r1, #2
 13465 005a 0AA8     		add	r0, sp, #40
 13466 005c FFF7FEFF 		bl	chk_lock
 13467              	.LVL1337:
4742:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 13468              		.loc 1 4742 3 is_stmt 1 view .LVU4790
4742:./Libraries/FatFs/Src/ff.c **** #if _FS_EXFAT
 13469              		.loc 1 4742 6 is_stmt 0 view .LVU4791
 13470 0060 0446     		mov	r4, r0
 13471 0062 0028     		cmp	r0, #0
 13472 0064 DAD1     		bne	.L1307
4769:./Libraries/FatFs/Src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 13473              		.loc 1 4769 5 is_stmt 1 view .LVU4792
 13474              	.LVL1338:
 13475              	.LBB1576:
 13476              	.LBI1576:
 693:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 13477              		.loc 1 693 6 view .LVU4793
 13478              	.LBB1577:
 694:./Libraries/FatFs/Src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 13479              		.loc 1 694 2 view .LVU4794
 695:./Libraries/FatFs/Src/ff.c **** 
 13480              		.loc 1 695 2 view .LVU4795
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 13481              		.loc 1 697 2 view .LVU4796
 13482              	.LBE1577:
 13483              	.LBE1576:
4769:./Libraries/FatFs/Src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 13484              		.loc 1 4769 26 is_stmt 0 view .LVU4797
 13485 0066 1299     		ldr	r1, [sp, #72]
 13486              	.LBB1579:
 13487              	.LBB1578:
ARM GAS  /tmp/ccaQXGqa.s 			page 419


 13488 0068 1522     		movs	r2, #21
 13489 006a 04A8     		add	r0, sp, #16
 13490              	.LVL1339:
4769:./Libraries/FatFs/Src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 13491              		.loc 1 4769 26 view .LVU4798
 13492 006c 0B31     		adds	r1, r1, #11
 13493              	.LVL1340:
4769:./Libraries/FatFs/Src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 13494              		.loc 1 4769 26 view .LVU4799
 13495 006e FFF7FEFF 		bl	mem_cpy.part.0
 13496              	.LVL1341:
4769:./Libraries/FatFs/Src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 13497              		.loc 1 4769 26 view .LVU4800
 13498              	.LBE1578:
 13499              	.LBE1579:
4770:./Libraries/FatFs/Src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
 13500              		.loc 1 4770 5 is_stmt 1 view .LVU4801
 13501              	.LBB1580:
 13502              	.LBI1580:
 693:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 13503              		.loc 1 693 6 view .LVU4802
 13504              	.LBB1581:
 694:./Libraries/FatFs/Src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 13505              		.loc 1 694 2 view .LVU4803
 695:./Libraries/FatFs/Src/ff.c **** 
 13506              		.loc 1 695 2 view .LVU4804
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 13507              		.loc 1 697 2 view .LVU4805
 13508 0072 16A8     		add	r0, sp, #88
 13509              	.LVL1342:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 13510              		.loc 1 697 2 is_stmt 0 view .LVU4806
 13511 0074 3022     		movs	r2, #48
 13512 0076 0AA9     		add	r1, sp, #40
 13513              	.LVL1343:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 13514              		.loc 1 697 2 view .LVU4807
 13515 0078 FFF7FEFF 		bl	mem_cpy.part.0
 13516              	.LVL1344:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 13517              		.loc 1 697 2 view .LVU4808
 13518              	.LBE1581:
 13519              	.LBE1580:
4771:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
 13520              		.loc 1 4771 5 is_stmt 1 view .LVU4809
4771:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
 13521              		.loc 1 4771 11 is_stmt 0 view .LVU4810
 13522 007c 16A8     		add	r0, sp, #88
 13523 007e 0099     		ldr	r1, [sp]
 13524 0080 FFF7FEFF 		bl	follow_path
 13525              	.LVL1345:
4772:./Libraries/FatFs/Src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
 13526              		.loc 1 4772 5 is_stmt 1 view .LVU4811
4772:./Libraries/FatFs/Src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
 13527              		.loc 1 4772 8 is_stmt 0 view .LVU4812
 13528 0084 0446     		mov	r4, r0
 13529 0086 30B9     		cbnz	r0, .L1279
ARM GAS  /tmp/ccaQXGqa.s 			page 420


4773:./Libraries/FatFs/Src/ff.c **** 				}
 13530              		.loc 1 4773 6 is_stmt 1 view .LVU4813
4773:./Libraries/FatFs/Src/ff.c **** 				}
 13531              		.loc 1 4773 84 is_stmt 0 view .LVU4814
 13532 0088 189A     		ldr	r2, [sp, #96]
 13533 008a 0C9B     		ldr	r3, [sp, #48]
 13534 008c 9A42     		cmp	r2, r3
 13535 008e 50D0     		beq	.L1310
 13536              	.L1293:
 13537 0090 0123     		movs	r3, #1
 13538 0092 0824     		movs	r4, #8
 13539 0094 C6E7     		b	.L1276
 13540              	.L1279:
4775:./Libraries/FatFs/Src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 13541              		.loc 1 4775 5 is_stmt 1 view .LVU4815
4775:./Libraries/FatFs/Src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 13542              		.loc 1 4775 8 is_stmt 0 view .LVU4816
 13543 0096 0428     		cmp	r0, #4
 13544 0098 C0D1     		bne	.L1307
 13545              	.L1280:
 13546              	.LVL1346:
4776:./Libraries/FatFs/Src/ff.c **** 					if (res == FR_OK) {
 13547              		.loc 1 4776 6 is_stmt 1 view .LVU4817
4776:./Libraries/FatFs/Src/ff.c **** 					if (res == FR_OK) {
 13548              		.loc 1 4776 12 is_stmt 0 view .LVU4818
 13549 009a 16A8     		add	r0, sp, #88
 13550 009c FFF7FEFF 		bl	dir_register
 13551              	.LVL1347:
4777:./Libraries/FatFs/Src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
 13552              		.loc 1 4777 6 is_stmt 1 view .LVU4819
4777:./Libraries/FatFs/Src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
 13553              		.loc 1 4777 9 is_stmt 0 view .LVU4820
 13554 00a0 0446     		mov	r4, r0
 13555 00a2 0028     		cmp	r0, #0
 13556 00a4 BAD1     		bne	.L1307
4778:./Libraries/FatFs/Src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
 13557              		.loc 1 4778 7 is_stmt 1 view .LVU4821
4778:./Libraries/FatFs/Src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
 13558              		.loc 1 4778 11 is_stmt 0 view .LVU4822
 13559 00a6 1E9C     		ldr	r4, [sp, #120]
 13560              	.LVL1348:
4779:./Libraries/FatFs/Src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 13561              		.loc 1 4779 7 is_stmt 1 view .LVU4823
 13562              	.LBB1582:
 13563              	.LBI1582:
 693:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 13564              		.loc 1 693 6 view .LVU4824
 13565              	.LBB1583:
 694:./Libraries/FatFs/Src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 13566              		.loc 1 694 2 view .LVU4825
 695:./Libraries/FatFs/Src/ff.c **** 
 13567              		.loc 1 695 2 view .LVU4826
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 13568              		.loc 1 697 2 view .LVU4827
 13569 00a8 1322     		movs	r2, #19
 13570 00aa 0DF11201 		add	r1, sp, #18
 13571              	.LVL1349:
ARM GAS  /tmp/ccaQXGqa.s 			page 421


 697:./Libraries/FatFs/Src/ff.c **** 		do {
 13572              		.loc 1 697 2 is_stmt 0 view .LVU4828
 13573 00ae 04F10D00 		add	r0, r4, #13
 13574              	.LVL1350:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 13575              		.loc 1 697 2 view .LVU4829
 13576 00b2 FFF7FEFF 		bl	mem_cpy.part.0
 13577              	.LVL1351:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 13578              		.loc 1 697 2 view .LVU4830
 13579              	.LBE1583:
 13580              	.LBE1582:
4780:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 13581              		.loc 1 4780 7 is_stmt 1 view .LVU4831
4780:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 13582              		.loc 1 4780 21 is_stmt 0 view .LVU4832
 13583 00b6 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
4781:./Libraries/FatFs/Src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
 13584              		.loc 1 4781 9 view .LVU4833
 13585 00ba 0398     		ldr	r0, [sp, #12]
4781:./Libraries/FatFs/Src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
 13586              		.loc 1 4781 17 view .LVU4834
 13587 00bc 0122     		movs	r2, #1
4780:./Libraries/FatFs/Src/ff.c **** 						fs->wflag = 1;
 13588              		.loc 1 4780 21 view .LVU4835
 13589 00be 43F02003 		orr	r3, r3, #32
 13590 00c2 E372     		strb	r3, [r4, #11]
4781:./Libraries/FatFs/Src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
 13591              		.loc 1 4781 7 is_stmt 1 view .LVU4836
4781:./Libraries/FatFs/Src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
 13592              		.loc 1 4781 17 is_stmt 0 view .LVU4837
 13593 00c4 C270     		strb	r2, [r0, #3]
4782:./Libraries/FatFs/Src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 13594              		.loc 1 4782 7 is_stmt 1 view .LVU4838
4782:./Libraries/FatFs/Src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 13595              		.loc 1 4782 10 is_stmt 0 view .LVU4839
 13596 00c6 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 13597 00c8 DB06     		lsls	r3, r3, #27
 13598 00ca 27D5     		bpl	.L1283
4782:./Libraries/FatFs/Src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 13599              		.loc 1 4782 36 discriminator 1 view .LVU4840
 13600 00cc 0C9A     		ldr	r2, [sp, #48]
 13601 00ce 189B     		ldr	r3, [sp, #96]
 13602 00d0 9A42     		cmp	r2, r3
 13603 00d2 23D0     		beq	.L1283
4783:./Libraries/FatFs/Src/ff.c **** 							if (!dw) {
 13604              		.loc 1 4783 8 is_stmt 1 view .LVU4841
 13605              	.LVL1352:
 13606              	.LBB1584:
 13607              	.LBI1584:
1632:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
 13608              		.loc 1 1632 7 view .LVU4842
 13609              	.LBB1585:
1637:./Libraries/FatFs/Src/ff.c **** 
 13610              		.loc 1 1637 2 view .LVU4843
1639:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 13611              		.loc 1 1639 2 view .LVU4844
ARM GAS  /tmp/ccaQXGqa.s 			page 422


 13612              	.LBB1586:
 13613              	.LBI1586:
 613:./Libraries/FatFs/Src/ff.c **** {
 13614              		.loc 1 613 6 view .LVU4845
 13615              	.LBB1587:
 615:./Libraries/FatFs/Src/ff.c **** 
 13616              		.loc 1 615 2 view .LVU4846
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 13617              		.loc 1 617 2 view .LVU4847
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 13618              		.loc 1 618 2 view .LVU4848
 619:./Libraries/FatFs/Src/ff.c **** }
 13619              		.loc 1 619 2 view .LVU4849
 619:./Libraries/FatFs/Src/ff.c **** }
 13620              		.loc 1 619 2 is_stmt 0 view .LVU4850
 13621              	.LBE1587:
 13622              	.LBE1586:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 13623              		.loc 1 1640 5 view .LVU4851
 13624 00d4 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 13625              	.LBB1589:
 13626              	.LBB1588:
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 13627              		.loc 1 618 10 view .LVU4852
 13628 00d6 E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 13629              		.loc 1 618 20 view .LVU4853
 13630 00d8 A37E     		ldrb	r3, [r4, #26]	@ zero_extendqisi2
 13631              	.LBE1588:
 13632              	.LBE1589:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 13633              		.loc 1 1640 5 view .LVU4854
 13634 00da 032A     		cmp	r2, #3
1639:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 13635              		.loc 1 1639 5 view .LVU4855
 13636 00dc 43EA0123 		orr	r3, r3, r1, lsl #8
 13637              	.LVL1353:
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 13638              		.loc 1 1640 2 is_stmt 1 view .LVU4856
1640:./Libraries/FatFs/Src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 13639              		.loc 1 1640 5 is_stmt 0 view .LVU4857
 13640 00e0 05D1     		bne	.L1285
1641:./Libraries/FatFs/Src/ff.c **** 	}
 13641              		.loc 1 1641 3 is_stmt 1 view .LVU4858
 13642              	.LVL1354:
 13643              	.LBB1590:
 13644              	.LBI1590:
 613:./Libraries/FatFs/Src/ff.c **** {
 13645              		.loc 1 613 6 view .LVU4859
 13646              	.LBB1591:
 615:./Libraries/FatFs/Src/ff.c **** 
 13647              		.loc 1 615 2 view .LVU4860
 617:./Libraries/FatFs/Src/ff.c **** 	rv = rv << 8 | ptr[0];
 13648              		.loc 1 617 2 view .LVU4861
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 13649              		.loc 1 618 2 view .LVU4862
 619:./Libraries/FatFs/Src/ff.c **** }
ARM GAS  /tmp/ccaQXGqa.s 			page 423


 13650              		.loc 1 619 2 view .LVU4863
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 13651              		.loc 1 618 10 is_stmt 0 view .LVU4864
 13652 00e2 617D     		ldrb	r1, [r4, #21]	@ zero_extendqisi2
 618:./Libraries/FatFs/Src/ff.c **** 	return rv;
 13653              		.loc 1 618 20 view .LVU4865
 13654 00e4 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 13655              	.LBE1591:
 13656              	.LBE1590:
1641:./Libraries/FatFs/Src/ff.c **** 	}
 13657              		.loc 1 1641 9 view .LVU4866
 13658 00e6 42EA0122 		orr	r2, r2, r1, lsl #8
1641:./Libraries/FatFs/Src/ff.c **** 	}
 13659              		.loc 1 1641 6 view .LVU4867
 13660 00ea 43EA0243 		orr	r3, r3, r2, lsl #16
 13661              	.LVL1355:
 13662              	.L1285:
1644:./Libraries/FatFs/Src/ff.c **** }
 13663              		.loc 1 1644 2 is_stmt 1 view .LVU4868
1644:./Libraries/FatFs/Src/ff.c **** }
 13664              		.loc 1 1644 2 is_stmt 0 view .LVU4869
 13665              	.LBE1585:
 13666              	.LBE1584:
 13667              	.LBB1592:
 13668              	.LBI1592:
 983:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,		/* File system object */
 13669              		.loc 1 983 7 is_stmt 1 view .LVU4870
 13670              	.LBB1593:
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 13671              		.loc 1 988 2 view .LVU4871
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 13672              		.loc 1 989 27 is_stmt 0 view .LVU4872
 13673 00ee 8269     		ldr	r2, [r0, #24]
 988:./Libraries/FatFs/Src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 13674              		.loc 1 988 7 view .LVU4873
 13675 00f0 023B     		subs	r3, r3, #2
 13676              	.LVL1356:
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 13677              		.loc 1 989 2 is_stmt 1 view .LVU4874
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 13678              		.loc 1 989 27 is_stmt 0 view .LVU4875
 13679 00f2 023A     		subs	r2, r2, #2
 989:./Libraries/FatFs/Src/ff.c **** 	return clst * fs->csize + fs->database;
 13680              		.loc 1 989 5 view .LVU4876
 13681 00f4 9342     		cmp	r3, r2
 13682 00f6 21D2     		bcs	.L1295
 990:./Libraries/FatFs/Src/ff.c **** }
 13683              		.loc 1 990 2 is_stmt 1 view .LVU4877
 990:./Libraries/FatFs/Src/ff.c **** }
 13684              		.loc 1 990 18 is_stmt 0 view .LVU4878
 13685 00f8 4289     		ldrh	r2, [r0, #10]
 990:./Libraries/FatFs/Src/ff.c **** }
 13686              		.loc 1 990 26 view .LVU4879
 13687 00fa C16A     		ldr	r1, [r0, #44]
 13688 00fc 03FB0211 		mla	r1, r3, r2, r1
 13689              	.LVL1357:
 990:./Libraries/FatFs/Src/ff.c **** }
ARM GAS  /tmp/ccaQXGqa.s 			page 424


 13690              		.loc 1 990 26 view .LVU4880
 13691              	.LBE1593:
 13692              	.LBE1592:
4784:./Libraries/FatFs/Src/ff.c **** 								res = FR_INT_ERR;
 13693              		.loc 1 4784 8 is_stmt 1 view .LVU4881
4784:./Libraries/FatFs/Src/ff.c **** 								res = FR_INT_ERR;
 13694              		.loc 1 4784 11 is_stmt 0 view .LVU4882
 13695 0100 E1B1     		cbz	r1, .L1295
4788:./Libraries/FatFs/Src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
 13696              		.loc 1 4788 9 is_stmt 1 view .LVU4883
 13697              	.LVL1358:
 13698              	.LBB1594:
 13699              	.LBI1594:
 912:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,			/* File system object */
 13700              		.loc 1 912 9 view .LVU4884
 13701              	.LBB1595:
 917:./Libraries/FatFs/Src/ff.c **** 
 13702              		.loc 1 917 2 view .LVU4885
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 13703              		.loc 1 920 2 view .LVU4886
 920:./Libraries/FatFs/Src/ff.c **** #if !_FS_READONLY
 13704              		.loc 1 920 5 is_stmt 0 view .LVU4887
 13705 0102 026B     		ldr	r2, [r0, #48]
 13706 0104 9142     		cmp	r1, r2
 13707 0106 05D0     		beq	.L1287
 13708 0108 FFF7FEFF 		bl	move_window.part.0
 13709              	.LVL1359:
 932:./Libraries/FatFs/Src/ff.c **** }
 13710              		.loc 1 932 2 is_stmt 1 view .LVU4888
 932:./Libraries/FatFs/Src/ff.c **** }
 13711              		.loc 1 932 2 is_stmt 0 view .LVU4889
 13712              	.LBE1595:
 13713              	.LBE1594:
4789:./Libraries/FatFs/Src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 13714              		.loc 1 4789 9 is_stmt 1 view .LVU4890
4790:./Libraries/FatFs/Src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 13715              		.loc 1 4790 9 view .LVU4891
4790:./Libraries/FatFs/Src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 13716              		.loc 1 4790 12 is_stmt 0 view .LVU4892
 13717 010c 0446     		mov	r4, r0
 13718 010e 0028     		cmp	r0, #0
 13719 0110 84D1     		bne	.L1307
4789:./Libraries/FatFs/Src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 13720              		.loc 1 4789 17 view .LVU4893
 13721 0112 0398     		ldr	r0, [sp, #12]
 13722              	.LVL1360:
 13723              	.L1287:
4790:./Libraries/FatFs/Src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 13724              		.loc 1 4790 26 discriminator 1 view .LVU4894
 13725 0114 90F85530 		ldrb	r3, [r0, #85]	@ zero_extendqisi2
 13726 0118 2E2B     		cmp	r3, #46
 13727 011a 11D0     		beq	.L1311
 13728              	.L1283:
4800:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK) {
 13729              		.loc 1 4800 5 is_stmt 1 view .LVU4895
4800:./Libraries/FatFs/Src/ff.c **** 				if (res == FR_OK) {
 13730              		.loc 1 4800 11 is_stmt 0 view .LVU4896
ARM GAS  /tmp/ccaQXGqa.s 			page 425


 13731 011c 0AA8     		add	r0, sp, #40
 13732 011e FFF7FEFF 		bl	dir_remove
 13733              	.LVL1361:
4801:./Libraries/FatFs/Src/ff.c **** 					res = sync_fs(fs);
 13734              		.loc 1 4801 5 is_stmt 1 view .LVU4897
4801:./Libraries/FatFs/Src/ff.c **** 					res = sync_fs(fs);
 13735              		.loc 1 4801 8 is_stmt 0 view .LVU4898
 13736 0122 0446     		mov	r4, r0
 13737 0124 0028     		cmp	r0, #0
 13738 0126 7FF479AF 		bne	.L1307
4802:./Libraries/FatFs/Src/ff.c **** 				}
 13739              		.loc 1 4802 6 is_stmt 1 view .LVU4899
4802:./Libraries/FatFs/Src/ff.c **** 				}
 13740              		.loc 1 4802 12 is_stmt 0 view .LVU4900
 13741 012a 0398     		ldr	r0, [sp, #12]
 13742              	.LVL1362:
4802:./Libraries/FatFs/Src/ff.c **** 				}
 13743              		.loc 1 4802 12 view .LVU4901
 13744 012c FFF7FEFF 		bl	sync_fs
 13745              	.LVL1363:
 13746 0130 73E7     		b	.L1308
 13747              	.LVL1364:
 13748              	.L1310:
4773:./Libraries/FatFs/Src/ff.c **** 				}
 13749              		.loc 1 4773 46 discriminator 1 view .LVU4902
 13750 0132 1B9A     		ldr	r2, [sp, #108]
 13751 0134 0F9B     		ldr	r3, [sp, #60]
 13752 0136 9A42     		cmp	r2, r3
 13753 0138 AAD1     		bne	.L1293
 13754 013a AEE7     		b	.L1280
 13755              	.LVL1365:
 13756              	.L1295:
4773:./Libraries/FatFs/Src/ff.c **** 				}
 13757              		.loc 1 4773 46 discriminator 1 view .LVU4903
 13758 013c 0224     		movs	r4, #2
 13759              	.LVL1366:
4773:./Libraries/FatFs/Src/ff.c **** 				}
 13760              		.loc 1 4773 46 discriminator 1 view .LVU4904
 13761 013e 74E7     		b	.L1286
 13762              	.LVL1367:
 13763              	.L1311:
4791:./Libraries/FatFs/Src/ff.c **** 									fs->wflag = 1;
 13764              		.loc 1 4791 10 is_stmt 1 view .LVU4905
 13765 0140 189B     		ldr	r3, [sp, #96]
 13766 0142 039A     		ldr	r2, [sp, #12]
 13767              	.LVL1368:
 13768              	.LBB1596:
 13769              	.LBI1596:
1650:./Libraries/FatFs/Src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
 13770              		.loc 1 1650 6 view .LVU4906
 13771              	.LBB1597:
1656:./Libraries/FatFs/Src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 13772              		.loc 1 1656 2 view .LVU4907
 13773              	.LBB1598:
 13774              	.LBI1598:
 654:./Libraries/FatFs/Src/ff.c **** {
 13775              		.loc 1 654 6 view .LVU4908
ARM GAS  /tmp/ccaQXGqa.s 			page 426


 13776              	.LBB1599:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13777              		.loc 1 656 2 view .LVU4909
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13778              		.loc 1 656 26 is_stmt 0 view .LVU4910
 13779 0144 C3F30721 		ubfx	r1, r3, #8, #8
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13780              		.loc 1 656 11 view .LVU4911
 13781 0148 80F86E30 		strb	r3, [r0, #110]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13782              		.loc 1 656 22 is_stmt 1 view .LVU4912
 13783              	.LVL1369:
 657:./Libraries/FatFs/Src/ff.c **** }
 13784              		.loc 1 657 2 view .LVU4913
 657:./Libraries/FatFs/Src/ff.c **** }
 13785              		.loc 1 657 11 is_stmt 0 view .LVU4914
 13786 014c 80F86F10 		strb	r1, [r0, #111]
 13787              	.LVL1370:
 657:./Libraries/FatFs/Src/ff.c **** }
 13788              		.loc 1 657 11 view .LVU4915
 13789              	.LBE1599:
 13790              	.LBE1598:
1657:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 13791              		.loc 1 1657 2 is_stmt 1 view .LVU4916
1657:./Libraries/FatFs/Src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 13792              		.loc 1 1657 5 is_stmt 0 view .LVU4917
 13793 0150 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 13794 0152 0329     		cmp	r1, #3
 13795 0154 05D1     		bne	.L1289
1658:./Libraries/FatFs/Src/ff.c **** 	}
 13796              		.loc 1 1658 3 is_stmt 1 view .LVU4918
1658:./Libraries/FatFs/Src/ff.c **** 	}
 13797              		.loc 1 1658 42 is_stmt 0 view .LVU4919
 13798 0156 1B0C     		lsrs	r3, r3, #16
 13799              	.LVL1371:
 13800              	.LBB1600:
 13801              	.LBI1600:
 654:./Libraries/FatFs/Src/ff.c **** {
 13802              		.loc 1 654 6 is_stmt 1 view .LVU4920
 13803              	.LBB1601:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13804              		.loc 1 656 2 view .LVU4921
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13805              		.loc 1 656 26 is_stmt 0 view .LVU4922
 13806 0158 190A     		lsrs	r1, r3, #8
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13807              		.loc 1 656 11 view .LVU4923
 13808 015a 80F86830 		strb	r3, [r0, #104]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 13809              		.loc 1 656 22 is_stmt 1 view .LVU4924
 13810              	.LVL1372:
 657:./Libraries/FatFs/Src/ff.c **** }
 13811              		.loc 1 657 2 view .LVU4925
 657:./Libraries/FatFs/Src/ff.c **** }
 13812              		.loc 1 657 11 is_stmt 0 view .LVU4926
 13813 015e 80F86910 		strb	r1, [r0, #105]
 13814              	.LVL1373:
ARM GAS  /tmp/ccaQXGqa.s 			page 427


 13815              	.L1289:
 657:./Libraries/FatFs/Src/ff.c **** }
 13816              		.loc 1 657 11 view .LVU4927
 13817              	.LBE1601:
 13818              	.LBE1600:
 13819              	.LBE1597:
 13820              	.LBE1596:
4792:./Libraries/FatFs/Src/ff.c **** 								}
 13821              		.loc 1 4792 10 is_stmt 1 view .LVU4928
4792:./Libraries/FatFs/Src/ff.c **** 								}
 13822              		.loc 1 4792 20 is_stmt 0 view .LVU4929
 13823 0162 0123     		movs	r3, #1
 13824 0164 D370     		strb	r3, [r2, #3]
 13825 0166 D9E7     		b	.L1283
 13826              		.cfi_endproc
 13827              	.LFE390:
 13829              		.section	.rodata.f_mkfs.str1.4,"aMS",%progbits,1
 13830              		.align	2
 13831              	.LC1:
 13832 0000 EBFE904D 		.ascii	"\353\376\220MSDOS5.0\000"
 13832      53444F53 
 13832      352E3000 
 13833              		.align	2
 13834              	.LC2:
 13835 000c 4E4F204E 		.ascii	"NO NAME    FAT32   \000"
 13835      414D4520 
 13835      20202046 
 13835      41543332 
 13835      20202000 
 13836              		.align	2
 13837              	.LC3:
 13838 0020 4E4F204E 		.ascii	"NO NAME    FAT     \000"
 13838      414D4520 
 13838      20202046 
 13838      41542020 
 13838      20202000 
 13839              		.section	.text.f_mkfs,"ax",%progbits
 13840              		.align	1
 13841              		.p2align 2,,3
 13842              		.global	f_mkfs
 13843              		.syntax unified
 13844              		.thumb
 13845              		.thumb_func
 13846              		.fpu fpv5-d16
 13848              	f_mkfs:
 13849              	.LVL1374:
 13850              	.LFB391:
5308:./Libraries/FatFs/Src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
 13851              		.loc 1 5308 1 is_stmt 1 view -0
 13852              		.cfi_startproc
 13853              		@ args = 4, pretend = 0, frame = 48
 13854              		@ frame_needed = 0, uses_anonymous_args = 0
5309:./Libraries/FatFs/Src/ff.c **** 	const UINT n_rootdir = 512;	/* Number of root directory entries for FAT12/16 volume */
 13855              		.loc 1 5309 2 view .LVU4931
5310:./Libraries/FatFs/Src/ff.c **** 	static const WORD cst[] = {1, 4, 16, 64, 256, 512, 0};	/* Cluster size boundary for FAT12/16 volum
 13856              		.loc 1 5310 2 view .LVU4932
5311:./Libraries/FatFs/Src/ff.c **** 	static const WORD cst32[] = {1, 2, 4, 8, 16, 32, 0};	/* Cluster size boundary for FAT32 volume (12
ARM GAS  /tmp/ccaQXGqa.s 			page 428


 13857              		.loc 1 5311 2 view .LVU4933
5312:./Libraries/FatFs/Src/ff.c **** 	BYTE fmt, sys, *buf, *pte, pdrv, part;
 13858              		.loc 1 5312 2 view .LVU4934
5313:./Libraries/FatFs/Src/ff.c **** 	WORD ss;
 13859              		.loc 1 5313 2 view .LVU4935
5314:./Libraries/FatFs/Src/ff.c **** 	DWORD szb_buf, sz_buf, sz_blk, n_clst, pau, sect, nsect, n;
 13860              		.loc 1 5314 2 view .LVU4936
5315:./Libraries/FatFs/Src/ff.c **** 	DWORD b_vol, b_fat, b_data;				/* Base LBA for volume, fat, data */
 13861              		.loc 1 5315 2 view .LVU4937
5316:./Libraries/FatFs/Src/ff.c **** 	DWORD sz_vol, sz_rsv, sz_fat, sz_dir;	/* Size for volume, fat, dir, data */
 13862              		.loc 1 5316 2 view .LVU4938
5317:./Libraries/FatFs/Src/ff.c **** 	UINT i;
 13863              		.loc 1 5317 2 view .LVU4939
5318:./Libraries/FatFs/Src/ff.c **** 	int vol;
 13864              		.loc 1 5318 2 view .LVU4940
5319:./Libraries/FatFs/Src/ff.c **** 	DSTATUS stat;
 13865              		.loc 1 5319 2 view .LVU4941
5320:./Libraries/FatFs/Src/ff.c **** #if _USE_TRIM || _FS_EXFAT
 13866              		.loc 1 5320 2 view .LVU4942
5327:./Libraries/FatFs/Src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 13867              		.loc 1 5327 2 view .LVU4943
5308:./Libraries/FatFs/Src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
 13868              		.loc 1 5308 1 is_stmt 0 view .LVU4944
 13869 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 13870              	.LCFI150:
 13871              		.cfi_def_cfa_offset 36
 13872              		.cfi_offset 4, -36
 13873              		.cfi_offset 5, -32
 13874              		.cfi_offset 6, -28
 13875              		.cfi_offset 7, -24
 13876              		.cfi_offset 8, -20
 13877              		.cfi_offset 9, -16
 13878              		.cfi_offset 10, -12
 13879              		.cfi_offset 11, -8
 13880              		.cfi_offset 14, -4
 13881 0004 8DB0     		sub	sp, sp, #52
 13882              	.LCFI151:
 13883              		.cfi_def_cfa_offset 88
5308:./Libraries/FatFs/Src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
 13884              		.loc 1 5308 1 view .LVU4945
 13885 0006 0D46     		mov	r5, r1
 13886 0008 9046     		mov	r8, r2
 13887 000a 1E46     		mov	r6, r3
 13888 000c 0990     		str	r0, [sp, #36]
5327:./Libraries/FatFs/Src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 13889              		.loc 1 5327 8 view .LVU4946
 13890 000e 09A8     		add	r0, sp, #36
 13891              	.LVL1375:
5327:./Libraries/FatFs/Src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 13892              		.loc 1 5327 8 view .LVU4947
 13893 0010 FFF7FEFF 		bl	get_ldnumber
 13894              	.LVL1376:
5328:./Libraries/FatFs/Src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 13895              		.loc 1 5328 2 is_stmt 1 view .LVU4948
5328:./Libraries/FatFs/Src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 13896              		.loc 1 5328 5 is_stmt 0 view .LVU4949
 13897 0014 0028     		cmp	r0, #0
ARM GAS  /tmp/ccaQXGqa.s 			page 429


5328:./Libraries/FatFs/Src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 13898              		.loc 1 5328 5 view .LVU4950
 13899 0016 C0F2D780 		blt	.L1367
5329:./Libraries/FatFs/Src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 13900              		.loc 1 5329 2 is_stmt 1 view .LVU4951
5329:./Libraries/FatFs/Src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 13901              		.loc 1 5329 11 is_stmt 0 view .LVU4952
 13902 001a CB4B     		ldr	r3, .L1432
 13903 001c 53F82030 		ldr	r3, [r3, r0, lsl #2]
5329:./Libraries/FatFs/Src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 13904              		.loc 1 5329 5 view .LVU4953
 13905 0020 0BB1     		cbz	r3, .L1314
5329:./Libraries/FatFs/Src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 13906              		.loc 1 5329 18 is_stmt 1 discriminator 1 view .LVU4954
5329:./Libraries/FatFs/Src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 13907              		.loc 1 5329 38 is_stmt 0 discriminator 1 view .LVU4955
 13908 0022 0022     		movs	r2, #0
 13909 0024 1A70     		strb	r2, [r3]
 13910              	.L1314:
5330:./Libraries/FatFs/Src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
 13911              		.loc 1 5330 2 is_stmt 1 view .LVU4956
5330:./Libraries/FatFs/Src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
 13912              		.loc 1 5330 7 is_stmt 0 view .LVU4957
 13913 0026 C4B2     		uxtb	r4, r0
 13914              	.LVL1377:
5331:./Libraries/FatFs/Src/ff.c **** 
 13915              		.loc 1 5331 2 is_stmt 1 view .LVU4958
5334:./Libraries/FatFs/Src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 13916              		.loc 1 5334 2 view .LVU4959
5334:./Libraries/FatFs/Src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 13917              		.loc 1 5334 9 is_stmt 0 view .LVU4960
 13918 0028 2046     		mov	r0, r4
 13919              	.LVL1378:
5334:./Libraries/FatFs/Src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 13920              		.loc 1 5334 9 view .LVU4961
 13921 002a FFF7FEFF 		bl	disk_initialize
 13922              	.LVL1379:
5335:./Libraries/FatFs/Src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 13923              		.loc 1 5335 2 is_stmt 1 view .LVU4962
5335:./Libraries/FatFs/Src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 13924              		.loc 1 5335 5 is_stmt 0 view .LVU4963
 13925 002e C307     		lsls	r3, r0, #31
 13926 0030 00F1C680 		bmi	.L1368
5336:./Libraries/FatFs/Src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 13927              		.loc 1 5336 2 is_stmt 1 view .LVU4964
5336:./Libraries/FatFs/Src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 13928              		.loc 1 5336 5 is_stmt 0 view .LVU4965
 13929 0034 4707     		lsls	r7, r0, #29
 13930 0036 19D4     		bmi	.L1369
5337:./Libraries/FatFs/Src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 13931              		.loc 1 5337 2 is_stmt 1 view .LVU4966
5337:./Libraries/FatFs/Src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 13932              		.loc 1 5337 6 is_stmt 0 view .LVU4967
 13933 0038 0AAA     		add	r2, sp, #40
 13934 003a 0321     		movs	r1, #3
 13935 003c 2046     		mov	r0, r4
 13936              	.LVL1380:
ARM GAS  /tmp/ccaQXGqa.s 			page 430


5337:./Libraries/FatFs/Src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 13937              		.loc 1 5337 6 view .LVU4968
 13938 003e FFF7FEFF 		bl	disk_ioctl
 13939              	.LVL1381:
5337:./Libraries/FatFs/Src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 13940              		.loc 1 5337 5 view .LVU4969
 13941 0042 28B9     		cbnz	r0, .L1315
5337:./Libraries/FatFs/Src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 13942              		.loc 1 5337 61 discriminator 2 view .LVU4970
 13943 0044 0A9A     		ldr	r2, [sp, #40]
5337:./Libraries/FatFs/Src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 13944              		.loc 1 5337 69 discriminator 2 view .LVU4971
 13945 0046 531E     		subs	r3, r2, #1
 13946 0048 B3F5004F 		cmp	r3, #32768
 13947 004c C0F0B480 		bcc	.L1422
 13948              	.L1315:
5337:./Libraries/FatFs/Src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 13949              		.loc 1 5337 115 is_stmt 1 discriminator 7 view .LVU4972
5337:./Libraries/FatFs/Src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 13950              		.loc 1 5337 122 is_stmt 0 discriminator 7 view .LVU4973
 13951 0050 0123     		movs	r3, #1
 13952 0052 0A93     		str	r3, [sp, #40]
 13953              	.L1316:
5342:./Libraries/FatFs/Src/ff.c **** #endif
 13954              		.loc 1 5342 2 is_stmt 1 view .LVU4974
 13955              	.LVL1382:
5344:./Libraries/FatFs/Src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 13956              		.loc 1 5344 2 view .LVU4975
5344:./Libraries/FatFs/Src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 13957              		.loc 1 5344 5 is_stmt 0 view .LVU4976
 13958 0054 B8F1000F 		cmp	r8, #0
 13959 0058 11D0     		beq	.L1317
5344:./Libraries/FatFs/Src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 13960              		.loc 1 5344 27 discriminator 4 view .LVU4977
 13961 005a A8F50072 		sub	r2, r8, #512
 13962 005e BB4B     		ldr	r3, .L1432+4
 13963 0060 9A42     		cmp	r2, r3
 13964 0062 07D9     		bls	.L1318
 13965              	.LVL1383:
 13966              	.L1319:
5344:./Libraries/FatFs/Src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 13967              		.loc 1 5344 72 view .LVU4978
 13968 0064 1320     		movs	r0, #19
5749:./Libraries/FatFs/Src/ff.c **** 
 13969              		.loc 1 5749 1 view .LVU4979
 13970 0066 0DB0     		add	sp, sp, #52
 13971              	.LCFI152:
 13972              		.cfi_remember_state
 13973              		.cfi_def_cfa_offset 36
 13974              		@ sp needed
 13975 0068 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 13976              	.LVL1384:
 13977              	.L1369:
 13978              	.LCFI153:
 13979              		.cfi_restore_state
5336:./Libraries/FatFs/Src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 13980              		.loc 1 5336 33 view .LVU4980
ARM GAS  /tmp/ccaQXGqa.s 			page 431


 13981 006c 0A20     		movs	r0, #10
 13982              	.LVL1385:
 13983              	.L1413:
5749:./Libraries/FatFs/Src/ff.c **** 
 13984              		.loc 1 5749 1 view .LVU4981
 13985 006e 0DB0     		add	sp, sp, #52
 13986              	.LCFI154:
 13987              		.cfi_remember_state
 13988              		.cfi_def_cfa_offset 36
 13989              		@ sp needed
 13990 0070 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 13991              	.LVL1386:
 13992              	.L1318:
 13993              	.LCFI155:
 13994              		.cfi_restore_state
5344:./Libraries/FatFs/Src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 13995              		.loc 1 5344 58 discriminator 6 view .LVU4982
 13996 0074 08F1FF33 		add	r3, r8, #-1
5344:./Libraries/FatFs/Src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 13997              		.loc 1 5344 45 discriminator 6 view .LVU4983
 13998 0078 13EA080F 		tst	r3, r8
 13999 007c F2D1     		bne	.L1319
 14000              	.L1317:
5345:./Libraries/FatFs/Src/ff.c **** 
 14001              		.loc 1 5345 2 is_stmt 1 view .LVU4984
 14002              	.LVL1387:
5348:./Libraries/FatFs/Src/ff.c **** 	sz_buf = len / ss;		/* Size of working buffer (sector) */
 14003              		.loc 1 5348 2 view .LVU4985
5349:./Libraries/FatFs/Src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
 14004              		.loc 1 5349 2 view .LVU4986
5350:./Libraries/FatFs/Src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
 14005              		.loc 1 5350 2 view .LVU4987
5350:./Libraries/FatFs/Src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
 14006              		.loc 1 5350 10 is_stmt 0 view .LVU4988
 14007 007e B44F     		ldr	r7, .L1432+8
 14008 0080 169B     		ldr	r3, [sp, #88]
 14009 0082 1F40     		ands	r7, r7, r3
 14010              	.LVL1388:
5351:./Libraries/FatFs/Src/ff.c **** 
 14011              		.loc 1 5351 2 is_stmt 1 view .LVU4989
5351:./Libraries/FatFs/Src/ff.c **** 
 14012              		.loc 1 5351 5 is_stmt 0 view .LVU4990
 14013 0084 002F     		cmp	r7, #0
 14014 0086 00F09380 		beq	.L1322
5354:./Libraries/FatFs/Src/ff.c **** 		/* Get partition information from partition table in the MBR */
 14015              		.loc 1 5354 2 is_stmt 1 view .LVU4991
5364:./Libraries/FatFs/Src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 14016              		.loc 1 5364 3 view .LVU4992
5364:./Libraries/FatFs/Src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 14017              		.loc 1 5364 7 is_stmt 0 view .LVU4993
 14018 008a 0BAA     		add	r2, sp, #44
 14019 008c 0121     		movs	r1, #1
 14020 008e 2046     		mov	r0, r4
 14021 0090 FFF7FEFF 		bl	disk_ioctl
 14022              	.LVL1389:
5364:./Libraries/FatFs/Src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 14023              		.loc 1 5364 6 view .LVU4994
ARM GAS  /tmp/ccaQXGqa.s 			page 432


 14024 0094 8246     		mov	r10, r0
 14025 0096 0028     		cmp	r0, #0
 14026 0098 40F07181 		bne	.L1370
5365:./Libraries/FatFs/Src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 14027              		.loc 1 5365 3 is_stmt 1 view .LVU4995
5365:./Libraries/FatFs/Src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 14028              		.loc 1 5365 30 is_stmt 0 view .LVU4996
 14029 009c 15F00803 		ands	r3, r5, #8
5366:./Libraries/FatFs/Src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 14030              		.loc 1 5366 14 view .LVU4997
 14031 00a0 0B99     		ldr	r1, [sp, #44]
5365:./Libraries/FatFs/Src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 14032              		.loc 1 5365 30 view .LVU4998
 14033 00a2 0493     		str	r3, [sp, #16]
 14034 00a4 40F06D81 		bne	.L1321
 14035              	.LVL1390:
5366:./Libraries/FatFs/Src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 14036              		.loc 1 5366 3 is_stmt 1 discriminator 4 view .LVU4999
5366:./Libraries/FatFs/Src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 14037              		.loc 1 5366 6 is_stmt 0 discriminator 4 view .LVU5000
 14038 00a8 3E29     		cmp	r1, #62
 14039 00aa 40F28180 		bls	.L1322
 14040 00ae 3F39     		subs	r1, r1, #63
5365:./Libraries/FatFs/Src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 14041              		.loc 1 5365 30 view .LVU5001
 14042 00b0 4FF03F09 		mov	r9, #63
 14043              	.LVL1391:
 14044              	.L1366:
5367:./Libraries/FatFs/Src/ff.c **** 	}
 14045              		.loc 1 5367 3 is_stmt 1 view .LVU5002
5369:./Libraries/FatFs/Src/ff.c **** 
 14046              		.loc 1 5369 5 is_stmt 0 view .LVU5003
 14047 00b4 7F29     		cmp	r1, #127
5367:./Libraries/FatFs/Src/ff.c **** 	}
 14048              		.loc 1 5367 10 view .LVU5004
 14049 00b6 0B91     		str	r1, [sp, #44]
5369:./Libraries/FatFs/Src/ff.c **** 
 14050              		.loc 1 5369 2 is_stmt 1 view .LVU5005
5369:./Libraries/FatFs/Src/ff.c **** 
 14051              		.loc 1 5369 5 is_stmt 0 view .LVU5006
 14052 00b8 7AD9     		bls	.L1322
5372:./Libraries/FatFs/Src/ff.c **** 		if (_FS_EXFAT && (opt & FM_EXFAT)) {	/* exFAT possible? */
 14053              		.loc 1 5372 2 is_stmt 1 view .LVU5007
5373:./Libraries/FatFs/Src/ff.c **** 			if ((opt & FM_ANY) == FM_EXFAT || sz_vol >= 0x4000000 || au > 128) {	/* exFAT only, vol >= 64Ms 
 14054              		.loc 1 5373 3 view .LVU5008
5378:./Libraries/FatFs/Src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 14055              		.loc 1 5378 3 view .LVU5009
5378:./Libraries/FatFs/Src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 14056              		.loc 1 5378 6 is_stmt 0 view .LVU5010
 14057 00ba B8F5813F 		cmp	r8, #66048
 14058 00be D1D2     		bcs	.L1319
5379:./Libraries/FatFs/Src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
 14059              		.loc 1 5379 6 view .LVU5011
 14060 00c0 15F00203 		ands	r3, r5, #2
5345:./Libraries/FatFs/Src/ff.c **** 
 14061              		.loc 1 5345 5 view .LVU5012
 14062 00c4 4FEA5822 		lsr	r2, r8, #9
ARM GAS  /tmp/ccaQXGqa.s 			page 433


5379:./Libraries/FatFs/Src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
 14063              		.loc 1 5379 3 is_stmt 1 view .LVU5013
5379:./Libraries/FatFs/Src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
 14064              		.loc 1 5379 6 is_stmt 0 view .LVU5014
 14065 00c8 0693     		str	r3, [sp, #24]
 14066 00ca 00F09181 		beq	.L1323
5380:./Libraries/FatFs/Src/ff.c **** 				fmt = FS_FAT32; break;
 14067              		.loc 1 5380 4 is_stmt 1 view .LVU5015
5380:./Libraries/FatFs/Src/ff.c **** 				fmt = FS_FAT32; break;
 14068              		.loc 1 5380 7 is_stmt 0 view .LVU5016
 14069 00ce 05F00703 		and	r3, r5, #7
 14070 00d2 022B     		cmp	r3, #2
 14071 00d4 00F05E81 		beq	.L1324
5380:./Libraries/FatFs/Src/ff.c **** 				fmt = FS_FAT32; break;
 14072              		.loc 1 5380 35 discriminator 1 view .LVU5017
 14073 00d8 E807     		lsls	r0, r5, #31
 14074 00da 40F15B81 		bpl	.L1324
 14075              	.L1421:
 14076 00de DDF828E0 		ldr	lr, [sp, #40]
 14077              	.LVL1392:
 14078              	.L1325:
5566:./Libraries/FatFs/Src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
 14079              		.loc 1 5566 5 is_stmt 1 view .LVU5018
5566:./Libraries/FatFs/Src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
 14080              		.loc 1 5566 8 is_stmt 0 view .LVU5019
 14081 00e2 002A     		cmp	r2, #0
 14082 00e4 00F08C81 		beq	.L1423
 14083 00e8 1546     		mov	r5, r2
 14084              	.L1330:
 14085              	.LVL1393:
5570:./Libraries/FatFs/Src/ff.c **** 				if (n_clst > MAX_FAT12) {
 14086              		.loc 1 5570 5 is_stmt 1 view .LVU5020
5571:./Libraries/FatFs/Src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
 14087              		.loc 1 5571 8 is_stmt 0 view .LVU5021
 14088 00ea 40F6F570 		movw	r0, #4085
5570:./Libraries/FatFs/Src/ff.c **** 				if (n_clst > MAX_FAT12) {
 14089              		.loc 1 5570 12 view .LVU5022
 14090 00ee B1FBF5F3 		udiv	r3, r1, r5
 14091              	.LVL1394:
5571:./Libraries/FatFs/Src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
 14092              		.loc 1 5571 5 is_stmt 1 view .LVU5023
5571:./Libraries/FatFs/Src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
 14093              		.loc 1 5571 8 is_stmt 0 view .LVU5024
 14094 00f2 8342     		cmp	r3, r0
 14095 00f4 4CD9     		bls	.L1333
 14096              	.L1426:
5572:./Libraries/FatFs/Src/ff.c **** 				} else {
 14097              		.loc 1 5572 6 is_stmt 1 view .LVU5025
5572:./Libraries/FatFs/Src/ff.c **** 				} else {
 14098              		.loc 1 5572 21 is_stmt 0 view .LVU5026
 14099 00f6 0233     		adds	r3, r3, #2
 14100              	.LVL1395:
5572:./Libraries/FatFs/Src/ff.c **** 				} else {
 14101              		.loc 1 5572 21 view .LVU5027
 14102 00f8 0220     		movs	r0, #2
5572:./Libraries/FatFs/Src/ff.c **** 				} else {
 14103              		.loc 1 5572 8 view .LVU5028
ARM GAS  /tmp/ccaQXGqa.s 			page 434


 14104 00fa 5B00     		lsls	r3, r3, #1
 14105              	.LVL1396:
5572:./Libraries/FatFs/Src/ff.c **** 				} else {
 14106              		.loc 1 5572 8 view .LVU5029
 14107 00fc 0190     		str	r0, [sp, #4]
 14108              	.L1334:
 14109              	.LVL1397:
5577:./Libraries/FatFs/Src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
 14110              		.loc 1 5577 5 is_stmt 1 view .LVU5030
5578:./Libraries/FatFs/Src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
 14111              		.loc 1 5578 5 view .LVU5031
5579:./Libraries/FatFs/Src/ff.c **** 			}
 14112              		.loc 1 5579 5 view .LVU5032
5581:./Libraries/FatFs/Src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 14113              		.loc 1 5581 4 view .LVU5033
5585:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 14114              		.loc 1 5585 26 is_stmt 0 view .LVU5034
 14115 00fe 0EF1FF30 		add	r0, lr, #-1
5577:./Libraries/FatFs/Src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
 14116              		.loc 1 5577 22 view .LVU5035
 14117 0102 03F2FF18 		addw	r8, r3, #511
5582:./Libraries/FatFs/Src/ff.c **** 
 14118              		.loc 1 5582 11 view .LVU5036
 14119 0106 09F12103 		add	r3, r9, #33
 14120              	.LVL1398:
5585:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 14121              		.loc 1 5585 33 view .LVU5037
 14122 010a CEF1000C 		rsb	ip, lr, #0
5585:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 14123              		.loc 1 5585 26 view .LVU5038
 14124 010e 0290     		str	r0, [sp, #8]
5581:./Libraries/FatFs/Src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 14125              		.loc 1 5581 10 view .LVU5039
 14126 0110 09F10100 		add	r0, r9, #1
5582:./Libraries/FatFs/Src/ff.c **** 
 14127              		.loc 1 5582 11 view .LVU5040
 14128 0114 03EB5823 		add	r3, r3, r8, lsr #9
5578:./Libraries/FatFs/Src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
 14129              		.loc 1 5578 12 view .LVU5041
 14130 0118 4FF0010B 		mov	fp, #1
5581:./Libraries/FatFs/Src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 14131              		.loc 1 5581 10 view .LVU5042
 14132 011c 0590     		str	r0, [sp, #20]
 14133              	.LVL1399:
5582:./Libraries/FatFs/Src/ff.c **** 
 14134              		.loc 1 5582 4 is_stmt 1 view .LVU5043
5585:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 14135              		.loc 1 5585 4 view .LVU5044
5586:./Libraries/FatFs/Src/ff.c **** 				sz_rsv += n; b_fat += n;
 14136              		.loc 1 5586 4 view .LVU5045
5589:./Libraries/FatFs/Src/ff.c **** 			}
 14137              		.loc 1 5589 5 view .LVU5046
5579:./Libraries/FatFs/Src/ff.c **** 			}
 14138              		.loc 1 5579 12 is_stmt 0 view .LVU5047
 14139 011e 2020     		movs	r0, #32
 14140              	.LVL1400:
5579:./Libraries/FatFs/Src/ff.c **** 			}
ARM GAS  /tmp/ccaQXGqa.s 			page 435


 14141              		.loc 1 5579 12 view .LVU5048
 14142 0120 0390     		str	r0, [sp, #12]
5585:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 14143              		.loc 1 5585 26 view .LVU5049
 14144 0122 0298     		ldr	r0, [sp, #8]
 14145 0124 1844     		add	r0, r0, r3
5585:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 14146              		.loc 1 5585 31 view .LVU5050
 14147 0126 00EA0C00 		and	r0, r0, ip
5589:./Libraries/FatFs/Src/ff.c **** 			}
 14148              		.loc 1 5589 12 view .LVU5051
 14149 012a A0EB0900 		sub	r0, r0, r9
 14150 012e 2138     		subs	r0, r0, #33
 14151 0130 0290     		str	r0, [sp, #8]
 14152              	.LVL1401:
 14153              	.L1365:
5593:./Libraries/FatFs/Src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 14154              		.loc 1 5593 4 is_stmt 1 view .LVU5052
5593:./Libraries/FatFs/Src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 14155              		.loc 1 5593 35 is_stmt 0 view .LVU5053
 14156 0132 A3EB0903 		sub	r3, r3, r9
 14157              	.LVL1402:
5593:./Libraries/FatFs/Src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 14158              		.loc 1 5593 35 view .LVU5054
 14159 0136 03EB0513 		add	r3, r3, r5, lsl #4
5593:./Libraries/FatFs/Src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 14160              		.loc 1 5593 7 view .LVU5055
 14161 013a 8B42     		cmp	r3, r1
 14162 013c 38D8     		bhi	.L1322
5594:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {
 14163              		.loc 1 5594 4 is_stmt 1 view .LVU5056
5594:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {
 14164              		.loc 1 5594 30 is_stmt 0 view .LVU5057
 14165 013e 029B     		ldr	r3, [sp, #8]
 14166 0140 0BEB0308 		add	r8, fp, r3
5594:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {
 14167              		.loc 1 5594 48 view .LVU5058
 14168 0144 039B     		ldr	r3, [sp, #12]
5594:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {
 14169              		.loc 1 5594 30 view .LVU5059
 14170 0146 A1EB0808 		sub	r8, r1, r8
5594:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {
 14171              		.loc 1 5594 48 view .LVU5060
 14172 014a A8EB0308 		sub	r8, r8, r3
5595:./Libraries/FatFs/Src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
 14173              		.loc 1 5595 7 view .LVU5061
 14174 014e 019B     		ldr	r3, [sp, #4]
 14175 0150 032B     		cmp	r3, #3
5594:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {
 14176              		.loc 1 5594 11 view .LVU5062
 14177 0152 B8FBF5F8 		udiv	r8, r8, r5
 14178              	.LVL1403:
5595:./Libraries/FatFs/Src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
 14179              		.loc 1 5595 4 is_stmt 1 view .LVU5063
5595:./Libraries/FatFs/Src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
 14180              		.loc 1 5595 7 is_stmt 0 view .LVU5064
 14181 0156 3BD0     		beq	.L1424
ARM GAS  /tmp/ccaQXGqa.s 			page 436


5601:./Libraries/FatFs/Src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
 14182              		.loc 1 5601 4 is_stmt 1 view .LVU5065
5601:./Libraries/FatFs/Src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
 14183              		.loc 1 5601 7 is_stmt 0 view .LVU5066
 14184 0158 019B     		ldr	r3, [sp, #4]
 14185 015a 022B     		cmp	r3, #2
 14186 015c 40F01B82 		bne	.L1337
5602:./Libraries/FatFs/Src/ff.c **** 					if (!au && (pau * 2) <= 64) {
 14187              		.loc 1 5602 5 is_stmt 1 view .LVU5067
5602:./Libraries/FatFs/Src/ff.c **** 					if (!au && (pau * 2) <= 64) {
 14188              		.loc 1 5602 8 is_stmt 0 view .LVU5068
 14189 0160 4FF6F573 		movw	r3, #65525
 14190 0164 9845     		cmp	r8, r3
 14191 0166 1BD9     		bls	.L1338
5603:./Libraries/FatFs/Src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 14192              		.loc 1 5603 6 is_stmt 1 view .LVU5069
5603:./Libraries/FatFs/Src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 14193              		.loc 1 5603 9 is_stmt 0 view .LVU5070
 14194 0168 002A     		cmp	r2, #0
 14195 016a 40F04581 		bne	.L1339
5603:./Libraries/FatFs/Src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 14196              		.loc 1 5603 22 discriminator 1 view .LVU5071
 14197 016e 6D00     		lsls	r5, r5, #1
5603:./Libraries/FatFs/Src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 14198              		.loc 1 5603 14 discriminator 1 view .LVU5072
 14199 0170 402D     		cmp	r5, #64
 14200 0172 40F26281 		bls	.L1425
5606:./Libraries/FatFs/Src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
 14201              		.loc 1 5606 6 is_stmt 1 view .LVU5073
5606:./Libraries/FatFs/Src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
 14202              		.loc 1 5606 9 is_stmt 0 view .LVU5074
 14203 0176 069B     		ldr	r3, [sp, #24]
 14204 0178 002B     		cmp	r3, #0
 14205 017a 40F05081 		bne	.L1363
 14206              	.LVL1404:
5609:./Libraries/FatFs/Src/ff.c **** 					return FR_MKFS_ABORTED;
 14207              		.loc 1 5609 14 discriminator 1 view .LVU5075
 14208 017e 802D     		cmp	r5, #128
 14209 0180 16D8     		bhi	.L1322
5571:./Libraries/FatFs/Src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
 14210              		.loc 1 5571 8 view .LVU5076
 14211 0182 40F6F570 		movw	r0, #4085
 14212 0186 2A46     		mov	r2, r5
 14213              	.LVL1405:
5570:./Libraries/FatFs/Src/ff.c **** 				if (n_clst > MAX_FAT12) {
 14214              		.loc 1 5570 5 is_stmt 1 view .LVU5077
5570:./Libraries/FatFs/Src/ff.c **** 				if (n_clst > MAX_FAT12) {
 14215              		.loc 1 5570 12 is_stmt 0 view .LVU5078
 14216 0188 B1FBF5F3 		udiv	r3, r1, r5
 14217              	.LVL1406:
5571:./Libraries/FatFs/Src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
 14218              		.loc 1 5571 5 is_stmt 1 view .LVU5079
5571:./Libraries/FatFs/Src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
 14219              		.loc 1 5571 8 is_stmt 0 view .LVU5080
 14220 018c 8342     		cmp	r3, r0
 14221 018e B2D8     		bhi	.L1426
 14222              	.LVL1407:
ARM GAS  /tmp/ccaQXGqa.s 			page 437


 14223              	.L1333:
5574:./Libraries/FatFs/Src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
 14224              		.loc 1 5574 6 is_stmt 1 view .LVU5081
5575:./Libraries/FatFs/Src/ff.c **** 				}
 14225              		.loc 1 5575 6 view .LVU5082
5574:./Libraries/FatFs/Src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
 14226              		.loc 1 5574 10 is_stmt 0 view .LVU5083
 14227 0190 0120     		movs	r0, #1
5575:./Libraries/FatFs/Src/ff.c **** 				}
 14228              		.loc 1 5575 18 view .LVU5084
 14229 0192 03EB4303 		add	r3, r3, r3, lsl #1
 14230              	.LVL1408:
5575:./Libraries/FatFs/Src/ff.c **** 				}
 14231              		.loc 1 5575 22 view .LVU5085
 14232 0196 0344     		add	r3, r3, r0
5574:./Libraries/FatFs/Src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
 14233              		.loc 1 5574 10 view .LVU5086
 14234 0198 0190     		str	r0, [sp, #4]
5575:./Libraries/FatFs/Src/ff.c **** 				}
 14235              		.loc 1 5575 27 view .LVU5087
 14236 019a C340     		lsrs	r3, r3, r0
5575:./Libraries/FatFs/Src/ff.c **** 				}
 14237              		.loc 1 5575 8 view .LVU5088
 14238 019c 0333     		adds	r3, r3, #3
 14239              	.LVL1409:
5575:./Libraries/FatFs/Src/ff.c **** 				}
 14240              		.loc 1 5575 8 view .LVU5089
 14241 019e AEE7     		b	.L1334
 14242              	.LVL1410:
 14243              	.L1338:
5612:./Libraries/FatFs/Src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
 14244              		.loc 1 5612 5 is_stmt 1 view .LVU5090
5612:./Libraries/FatFs/Src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
 14245              		.loc 1 5612 9 is_stmt 0 view .LVU5091
 14246 01a0 40F6F573 		movw	r3, #4085
 14247 01a4 9845     		cmp	r8, r3
 14248 01a6 18D8     		bhi	.L1336
5613:./Libraries/FatFs/Src/ff.c **** 					return FR_MKFS_ABORTED;
 14249              		.loc 1 5613 6 is_stmt 1 view .LVU5092
5613:./Libraries/FatFs/Src/ff.c **** 					return FR_MKFS_ABORTED;
 14250              		.loc 1 5613 9 is_stmt 0 view .LVU5093
 14251 01a8 12B9     		cbnz	r2, .L1322
5613:./Libraries/FatFs/Src/ff.c **** 					return FR_MKFS_ABORTED;
 14252              		.loc 1 5613 21 discriminator 1 view .LVU5094
 14253 01aa 6A00     		lsls	r2, r5, #1
 14254              	.LVL1411:
5613:./Libraries/FatFs/Src/ff.c **** 					return FR_MKFS_ABORTED;
 14255              		.loc 1 5613 14 discriminator 1 view .LVU5095
 14256 01ac 802A     		cmp	r2, #128
 14257 01ae 98D9     		bls	.L1325
 14258              	.LVL1412:
 14259              	.L1322:
5351:./Libraries/FatFs/Src/ff.c **** 
 14260              		.loc 1 5351 23 view .LVU5096
 14261 01b0 0E20     		movs	r0, #14
5749:./Libraries/FatFs/Src/ff.c **** 
 14262              		.loc 1 5749 1 view .LVU5097
ARM GAS  /tmp/ccaQXGqa.s 			page 438


 14263 01b2 0DB0     		add	sp, sp, #52
 14264              	.LCFI156:
 14265              		.cfi_remember_state
 14266              		.cfi_def_cfa_offset 36
 14267              		@ sp needed
 14268 01b4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 14269              	.LVL1413:
 14270              	.L1422:
 14271              	.LCFI157:
 14272              		.cfi_restore_state
5337:./Libraries/FatFs/Src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 14273              		.loc 1 5337 87 discriminator 6 view .LVU5098
 14274 01b8 1A42     		tst	r2, r3
 14275 01ba 3FF44BAF 		beq	.L1316
 14276 01be 47E7     		b	.L1315
 14277              	.LVL1414:
 14278              	.L1368:
5335:./Libraries/FatFs/Src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 14279              		.loc 1 5335 32 view .LVU5099
 14280 01c0 0320     		movs	r0, #3
 14281              	.LVL1415:
5749:./Libraries/FatFs/Src/ff.c **** 
 14282              		.loc 1 5749 1 view .LVU5100
 14283 01c2 0DB0     		add	sp, sp, #52
 14284              	.LCFI158:
 14285              		.cfi_remember_state
 14286              		.cfi_def_cfa_offset 36
 14287              		@ sp needed
 14288 01c4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 14289              	.LVL1416:
 14290              	.L1367:
 14291              	.LCFI159:
 14292              		.cfi_restore_state
5328:./Libraries/FatFs/Src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 14293              		.loc 1 5328 22 view .LVU5101
 14294 01c8 0B20     		movs	r0, #11
 14295              	.LVL1417:
5749:./Libraries/FatFs/Src/ff.c **** 
 14296              		.loc 1 5749 1 view .LVU5102
 14297 01ca 0DB0     		add	sp, sp, #52
 14298              	.LCFI160:
 14299              		.cfi_remember_state
 14300              		.cfi_def_cfa_offset 36
 14301              		@ sp needed
 14302 01cc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 14303              	.LVL1418:
 14304              	.L1424:
 14305              	.LCFI161:
 14306              		.cfi_restore_state
5596:./Libraries/FatFs/Src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
 14307              		.loc 1 5596 5 is_stmt 1 view .LVU5103
5596:./Libraries/FatFs/Src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
 14308              		.loc 1 5596 8 is_stmt 0 view .LVU5104
 14309 01d0 4FF6F573 		movw	r3, #65525
 14310 01d4 9845     		cmp	r8, r3
 14311 01d6 40F2D680 		bls	.L1427
 14312              	.L1336:
ARM GAS  /tmp/ccaQXGqa.s 			page 439


5596:./Libraries/FatFs/Src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
 14313              		.loc 1 5596 8 view .LVU5105
 14314 01da 06F50071 		add	r1, r6, #512
 14315 01de 3246     		mov	r2, r6
 14316              	.LBB1602:
 14317              	.LBB1603:
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 14318              		.loc 1 710 8 view .LVU5106
 14319 01e0 0023     		movs	r3, #0
 14320 01e2 0691     		str	r1, [sp, #24]
 14321              	.L1341:
 14322              	.LVL1419:
 709:./Libraries/FatFs/Src/ff.c **** 		*d++ = (BYTE)val;
 14323              		.loc 1 709 2 is_stmt 1 view .LVU5107
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 14324              		.loc 1 710 3 view .LVU5108
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 14325              		.loc 1 710 8 is_stmt 0 view .LVU5109
 14326 01e4 02F8013B 		strb	r3, [r2], #1
 14327              	.LVL1420:
 711:./Libraries/FatFs/Src/ff.c **** }
 14328              		.loc 1 711 10 is_stmt 1 view .LVU5110
 711:./Libraries/FatFs/Src/ff.c **** }
 14329              		.loc 1 711 2 is_stmt 0 view .LVU5111
 14330 01e8 8A42     		cmp	r2, r1
 14331 01ea FBD1     		bne	.L1341
 14332              	.LVL1421:
 711:./Libraries/FatFs/Src/ff.c **** }
 14333              		.loc 1 711 2 view .LVU5112
 14334              	.LBE1603:
 14335              	.LBE1602:
5629:./Libraries/FatFs/Src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
 14336              		.loc 1 5629 3 is_stmt 1 view .LVU5113
 14337              	.LBB1604:
 14338              	.LBI1604:
 693:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 14339              		.loc 1 693 6 view .LVU5114
 14340              	.LBB1605:
 694:./Libraries/FatFs/Src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 14341              		.loc 1 694 2 view .LVU5115
 695:./Libraries/FatFs/Src/ff.c **** 
 14342              		.loc 1 695 2 view .LVU5116
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 14343              		.loc 1 697 2 view .LVU5117
 14344 01ec 0B22     		movs	r2, #11
 14345 01ee 5949     		ldr	r1, .L1432+12
 14346 01f0 3046     		mov	r0, r6
 14347 01f2 FFF7FEFF 		bl	mem_cpy.part.0
 14348              	.LVL1422:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 14349              		.loc 1 697 2 is_stmt 0 view .LVU5118
 14350              	.LBE1605:
 14351              	.LBE1604:
5630:./Libraries/FatFs/Src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
 14352              		.loc 1 5630 3 is_stmt 1 view .LVU5119
 14353              	.LBB1606:
 14354              	.LBI1606:
ARM GAS  /tmp/ccaQXGqa.s 			page 440


 654:./Libraries/FatFs/Src/ff.c **** {
 14355              		.loc 1 654 6 view .LVU5120
 14356              	.LBB1607:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14357              		.loc 1 656 2 view .LVU5121
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14358              		.loc 1 656 2 is_stmt 0 view .LVU5122
 14359              	.LBE1607:
 14360              	.LBE1606:
5634:./Libraries/FatFs/Src/ff.c **** 		if (sz_vol < 0x10000) {
 14361              		.loc 1 5634 3 view .LVU5123
 14362 01f6 019B     		ldr	r3, [sp, #4]
 14363              	.LBB1611:
 14364              	.LBB1608:
 657:./Libraries/FatFs/Src/ff.c **** }
 14365              		.loc 1 657 9 view .LVU5124
 14366 01f8 4FF0020C 		mov	ip, #2
 14367              	.LBE1608:
 14368              	.LBE1611:
 14369              	.LBB1612:
 14370              	.LBB1613:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14371              		.loc 1 656 9 view .LVU5125
 14372 01fc 0022     		movs	r2, #0
 14373              	.LBE1613:
 14374              	.LBE1612:
5634:./Libraries/FatFs/Src/ff.c **** 		if (sz_vol < 0x10000) {
 14375              		.loc 1 5634 3 view .LVU5126
 14376 01fe 032B     		cmp	r3, #3
5635:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
 14377              		.loc 1 5635 14 view .LVU5127
 14378 0200 0B9B     		ldr	r3, [sp, #44]
 14379              	.LBB1616:
 14380              	.LBB1617:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14381              		.loc 1 656 26 view .LVU5128
 14382 0202 CBF30720 		ubfx	r0, fp, #8, #8
 14383              	.LBE1617:
 14384              	.LBE1616:
5633:./Libraries/FatFs/Src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
 14385              		.loc 1 5633 20 view .LVU5129
 14386 0206 4FF00101 		mov	r1, #1
5634:./Libraries/FatFs/Src/ff.c **** 		if (sz_vol < 0x10000) {
 14387              		.loc 1 5634 3 view .LVU5130
 14388 020a 18BF     		it	ne
 14389 020c E246     		movne	r10, ip
5635:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
 14390              		.loc 1 5635 6 view .LVU5131
 14391 020e B3F5803F 		cmp	r3, #65536
 14392              	.LBB1620:
 14393              	.LBB1609:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14394              		.loc 1 656 9 view .LVU5132
 14395 0212 F272     		strb	r2, [r6, #11]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14396              		.loc 1 656 22 is_stmt 1 view .LVU5133
 14397              	.LVL1423:
ARM GAS  /tmp/ccaQXGqa.s 			page 441


 657:./Libraries/FatFs/Src/ff.c **** }
 14398              		.loc 1 657 2 view .LVU5134
 657:./Libraries/FatFs/Src/ff.c **** }
 14399              		.loc 1 657 2 is_stmt 0 view .LVU5135
 14400              	.LBE1609:
 14401              	.LBE1620:
 14402              	.LBB1621:
 14403              	.LBB1614:
 657:./Libraries/FatFs/Src/ff.c **** }
 14404              		.loc 1 657 9 view .LVU5136
 14405 0214 86F812A0 		strb	r10, [r6, #18]
 14406              	.LBE1614:
 14407              	.LBE1621:
5631:./Libraries/FatFs/Src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
 14408              		.loc 1 5631 25 view .LVU5137
 14409 0218 7573     		strb	r5, [r6, #13]
 14410              	.LBB1622:
 14411              	.LBB1618:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14412              		.loc 1 656 11 view .LVU5138
 14413 021a 86F80EB0 		strb	fp, [r6, #14]
 657:./Libraries/FatFs/Src/ff.c **** }
 14414              		.loc 1 657 11 view .LVU5139
 14415 021e F073     		strb	r0, [r6, #15]
 14416              	.LBE1618:
 14417              	.LBE1622:
 14418              	.LBB1623:
 14419              	.LBB1610:
 657:./Libraries/FatFs/Src/ff.c **** }
 14420              		.loc 1 657 9 view .LVU5140
 14421 0220 86F80CC0 		strb	ip, [r6, #12]
 14422              	.LVL1424:
 657:./Libraries/FatFs/Src/ff.c **** }
 14423              		.loc 1 657 9 view .LVU5141
 14424              	.LBE1610:
 14425              	.LBE1623:
5631:./Libraries/FatFs/Src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
 14426              		.loc 1 5631 3 is_stmt 1 view .LVU5142
5632:./Libraries/FatFs/Src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
 14427              		.loc 1 5632 3 view .LVU5143
 14428              	.LBB1624:
 14429              	.LBI1616:
 654:./Libraries/FatFs/Src/ff.c **** {
 14430              		.loc 1 654 6 view .LVU5144
 14431              	.LBB1619:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14432              		.loc 1 656 2 view .LVU5145
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14433              		.loc 1 656 22 view .LVU5146
 657:./Libraries/FatFs/Src/ff.c **** }
 14434              		.loc 1 657 2 view .LVU5147
 657:./Libraries/FatFs/Src/ff.c **** }
 14435              		.loc 1 657 2 is_stmt 0 view .LVU5148
 14436              	.LBE1619:
 14437              	.LBE1624:
5633:./Libraries/FatFs/Src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
 14438              		.loc 1 5633 3 is_stmt 1 view .LVU5149
ARM GAS  /tmp/ccaQXGqa.s 			page 442


5633:./Libraries/FatFs/Src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
 14439              		.loc 1 5633 20 is_stmt 0 view .LVU5150
 14440 0224 3174     		strb	r1, [r6, #16]
5634:./Libraries/FatFs/Src/ff.c **** 		if (sz_vol < 0x10000) {
 14441              		.loc 1 5634 3 is_stmt 1 view .LVU5151
 14442              	.LVL1425:
 14443              	.LBB1625:
 14444              	.LBI1612:
 654:./Libraries/FatFs/Src/ff.c **** {
 14445              		.loc 1 654 6 view .LVU5152
 14446              	.LBB1615:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14447              		.loc 1 656 2 view .LVU5153
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14448              		.loc 1 656 9 is_stmt 0 view .LVU5154
 14449 0226 7274     		strb	r2, [r6, #17]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14450              		.loc 1 656 22 is_stmt 1 view .LVU5155
 657:./Libraries/FatFs/Src/ff.c **** }
 14451              		.loc 1 657 2 view .LVU5156
 14452              	.LVL1426:
 657:./Libraries/FatFs/Src/ff.c **** }
 14453              		.loc 1 657 2 is_stmt 0 view .LVU5157
 14454              	.LBE1615:
 14455              	.LBE1625:
5635:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
 14456              		.loc 1 5635 3 is_stmt 1 view .LVU5158
5635:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
 14457              		.loc 1 5635 6 is_stmt 0 view .LVU5159
 14458 0228 80F00981 		bcs	.L1343
5636:./Libraries/FatFs/Src/ff.c **** 		} else {
 14459              		.loc 1 5636 4 is_stmt 1 view .LVU5160
 14460              	.LVL1427:
 14461              	.LBB1626:
 14462              	.LBI1626:
 654:./Libraries/FatFs/Src/ff.c **** {
 14463              		.loc 1 654 6 view .LVU5161
 14464              	.LBB1627:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14465              		.loc 1 656 2 view .LVU5162
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14466              		.loc 1 656 26 is_stmt 0 view .LVU5163
 14467 022c C3F30722 		ubfx	r2, r3, #8, #8
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14468              		.loc 1 656 11 view .LVU5164
 14469 0230 F374     		strb	r3, [r6, #19]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14470              		.loc 1 656 22 is_stmt 1 view .LVU5165
 14471              	.LVL1428:
 657:./Libraries/FatFs/Src/ff.c **** }
 14472              		.loc 1 657 2 view .LVU5166
 657:./Libraries/FatFs/Src/ff.c **** }
 14473              		.loc 1 657 11 is_stmt 0 view .LVU5167
 14474 0232 3275     		strb	r2, [r6, #20]
 14475              	.LVL1429:
 14476              	.L1344:
 657:./Libraries/FatFs/Src/ff.c **** }
ARM GAS  /tmp/ccaQXGqa.s 			page 443


 14477              		.loc 1 657 11 view .LVU5168
 14478              	.LBE1627:
 14479              	.LBE1626:
5640:./Libraries/FatFs/Src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
 14480              		.loc 1 5640 3 is_stmt 1 view .LVU5169
 14481              	.LBB1628:
 14482              	.LBB1629:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14483              		.loc 1 656 9 is_stmt 0 view .LVU5170
 14484 0234 FF23     		movs	r3, #255
 14485              	.LBE1629:
 14486              	.LBE1628:
5640:./Libraries/FatFs/Src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
 14487              		.loc 1 5640 18 view .LVU5171
 14488 0236 F821     		movs	r1, #248
 14489              	.LBB1633:
 14490              	.LBB1634:
 657:./Libraries/FatFs/Src/ff.c **** }
 14491              		.loc 1 657 9 view .LVU5172
 14492 0238 4FF0000A 		mov	r10, #0
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14493              		.loc 1 656 9 view .LVU5173
 14494 023c 3F22     		movs	r2, #63
 14495              	.LBE1634:
 14496              	.LBE1633:
 14497              	.LBB1638:
 14498              	.LBB1630:
 14499 023e B376     		strb	r3, [r6, #26]
 14500              	.LBE1630:
 14501              	.LBE1638:
5644:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
 14502              		.loc 1 5644 6 view .LVU5174
 14503 0240 019B     		ldr	r3, [sp, #4]
5640:./Libraries/FatFs/Src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
 14504              		.loc 1 5640 18 view .LVU5175
 14505 0242 7175     		strb	r1, [r6, #21]
5641:./Libraries/FatFs/Src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
 14506              		.loc 1 5641 3 is_stmt 1 view .LVU5176
 14507              	.LVL1430:
 14508              	.LBB1639:
 14509              	.LBI1633:
 654:./Libraries/FatFs/Src/ff.c **** {
 14510              		.loc 1 654 6 view .LVU5177
 14511              	.LBB1635:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14512              		.loc 1 656 2 view .LVU5178
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14513              		.loc 1 656 2 is_stmt 0 view .LVU5179
 14514              	.LBE1635:
 14515              	.LBE1639:
 14516              	.LBB1640:
 14517              	.LBB1641:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14518              		.loc 1 663 11 view .LVU5180
 14519 0244 5FFA89F1 		uxtb	r1, r9
 14520              	.LBE1641:
 14521              	.LBE1640:
ARM GAS  /tmp/ccaQXGqa.s 			page 444


5644:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
 14522              		.loc 1 5644 6 view .LVU5181
 14523 0248 032B     		cmp	r3, #3
 14524              	.LBB1645:
 14525              	.LBB1636:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14526              		.loc 1 656 9 view .LVU5182
 14527 024a 3276     		strb	r2, [r6, #24]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14528              		.loc 1 656 22 is_stmt 1 view .LVU5183
 14529              	.LVL1431:
 657:./Libraries/FatFs/Src/ff.c **** }
 14530              		.loc 1 657 2 view .LVU5184
 657:./Libraries/FatFs/Src/ff.c **** }
 14531              		.loc 1 657 2 is_stmt 0 view .LVU5185
 14532              	.LBE1636:
 14533              	.LBE1645:
 14534              	.LBB1646:
 14535              	.LBB1642:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14536              		.loc 1 663 11 view .LVU5186
 14537 024c 0791     		str	r1, [sp, #28]
 14538              	.LBE1642:
 14539              	.LBE1646:
 14540              	.LBB1647:
 14541              	.LBB1637:
 657:./Libraries/FatFs/Src/ff.c **** }
 14542              		.loc 1 657 9 view .LVU5187
 14543 024e 86F819A0 		strb	r10, [r6, #25]
 14544              	.LVL1432:
 657:./Libraries/FatFs/Src/ff.c **** }
 14545              		.loc 1 657 9 view .LVU5188
 14546              	.LBE1637:
 14547              	.LBE1647:
5642:./Libraries/FatFs/Src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
 14548              		.loc 1 5642 3 is_stmt 1 view .LVU5189
 14549              	.LBB1648:
 14550              	.LBI1628:
 654:./Libraries/FatFs/Src/ff.c **** {
 14551              		.loc 1 654 6 view .LVU5190
 14552              	.LBB1631:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14553              		.loc 1 656 2 view .LVU5191
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14554              		.loc 1 656 22 view .LVU5192
 657:./Libraries/FatFs/Src/ff.c **** }
 14555              		.loc 1 657 2 view .LVU5193
 657:./Libraries/FatFs/Src/ff.c **** }
 14556              		.loc 1 657 2 is_stmt 0 view .LVU5194
 14557              	.LBE1631:
 14558              	.LBE1648:
5643:./Libraries/FatFs/Src/ff.c **** 		if (fmt == FS_FAT32) {
 14559              		.loc 1 5643 3 is_stmt 1 view .LVU5195
 14560              	.LBB1649:
 14561              	.LBI1640:
 661:./Libraries/FatFs/Src/ff.c **** {
 14562              		.loc 1 661 6 view .LVU5196
ARM GAS  /tmp/ccaQXGqa.s 			page 445


 14563              	.LBB1643:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14564              		.loc 1 663 2 view .LVU5197
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14565              		.loc 1 663 2 is_stmt 0 view .LVU5198
 14566              	.LBE1643:
 14567              	.LBE1649:
 14568              	.LBB1650:
 14569              	.LBB1632:
 657:./Libraries/FatFs/Src/ff.c **** }
 14570              		.loc 1 657 9 view .LVU5199
 14571 0252 86F81BA0 		strb	r10, [r6, #27]
 14572              	.LBE1632:
 14573              	.LBE1650:
 14574              	.LBB1651:
 14575              	.LBB1644:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14576              		.loc 1 664 9 view .LVU5200
 14577 0256 86F81DA0 		strb	r10, [r6, #29]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14578              		.loc 1 665 9 view .LVU5201
 14579 025a 86F81EA0 		strb	r10, [r6, #30]
 666:./Libraries/FatFs/Src/ff.c **** }
 14580              		.loc 1 666 9 view .LVU5202
 14581 025e 86F81FA0 		strb	r10, [r6, #31]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14582              		.loc 1 663 9 view .LVU5203
 14583 0262 3177     		strb	r1, [r6, #28]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14584              		.loc 1 663 22 is_stmt 1 view .LVU5204
 14585              	.LVL1433:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14586              		.loc 1 664 2 view .LVU5205
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14587              		.loc 1 664 22 view .LVU5206
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14588              		.loc 1 665 2 view .LVU5207
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14589              		.loc 1 665 22 view .LVU5208
 666:./Libraries/FatFs/Src/ff.c **** }
 14590              		.loc 1 666 2 view .LVU5209
 666:./Libraries/FatFs/Src/ff.c **** }
 14591              		.loc 1 666 2 is_stmt 0 view .LVU5210
 14592              	.LBE1644:
 14593              	.LBE1651:
5644:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
 14594              		.loc 1 5644 3 is_stmt 1 view .LVU5211
5644:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
 14595              		.loc 1 5644 6 is_stmt 0 view .LVU5212
 14596 0264 00F0F780 		beq	.L1428
5654:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
 14597              		.loc 1 5654 4 is_stmt 1 view .LVU5213
 14598 0268 FFF7FEFF 		bl	get_fattime
 14599              	.LVL1434:
 14600              	.LBB1652:
 14601              	.LBB1653:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
ARM GAS  /tmp/ccaQXGqa.s 			page 446


 14602              		.loc 1 656 26 is_stmt 0 view .LVU5214
 14603 026c 0299     		ldr	r1, [sp, #8]
 14604              	.LBE1653:
 14605              	.LBE1652:
5657:./Libraries/FatFs/Src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 14606              		.loc 1 5657 20 view .LVU5215
 14607 026e 2923     		movs	r3, #41
 14608              	.LBB1658:
 14609              	.LBB1659:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14610              		.loc 1 663 26 view .LVU5216
 14611 0270 4FEA102C 		lsr	ip, r0, #8
 14612              	.LBE1659:
 14613              	.LBE1658:
 14614              	.LBB1665:
 14615              	.LBB1654:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14616              		.loc 1 656 26 view .LVU5217
 14617 0274 C1F30722 		ubfx	r2, r1, #8, #8
 14618              	.LBE1654:
 14619              	.LBE1665:
5656:./Libraries/FatFs/Src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
 14620              		.loc 1 5656 19 view .LVU5218
 14621 0278 4FF0800E 		mov	lr, #128
 14622              	.LVL1435:
 14623              	.LBB1666:
 14624              	.LBI1658:
 661:./Libraries/FatFs/Src/ff.c **** {
 14625              		.loc 1 661 6 is_stmt 1 view .LVU5219
 14626              	.LBB1660:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14627              		.loc 1 663 2 view .LVU5220
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14628              		.loc 1 663 11 is_stmt 0 view .LVU5221
 14629 027c 86F82700 		strb	r0, [r6, #39]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14630              		.loc 1 663 22 is_stmt 1 view .LVU5222
 14631              	.LVL1436:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14632              		.loc 1 664 2 view .LVU5223
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14633              		.loc 1 664 2 is_stmt 0 view .LVU5224
 14634              	.LBE1660:
 14635              	.LBE1666:
 14636              	.LBB1667:
 14637              	.LBB1655:
 657:./Libraries/FatFs/Src/ff.c **** }
 14638              		.loc 1 657 11 view .LVU5225
 14639 0280 F275     		strb	r2, [r6, #23]
 14640              	.LBE1655:
 14641              	.LBE1667:
 14642              	.LBB1668:
 14643              	.LBB1661:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14644              		.loc 1 664 26 view .LVU5226
 14645 0282 020C     		lsrs	r2, r0, #16
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
ARM GAS  /tmp/ccaQXGqa.s 			page 447


 14646              		.loc 1 665 26 view .LVU5227
 14647 0284 000E     		lsrs	r0, r0, #24
 14648              	.LBE1661:
 14649              	.LBE1668:
 14650              	.LBB1669:
 14651              	.LBB1656:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14652              		.loc 1 656 11 view .LVU5228
 14653 0286 B175     		strb	r1, [r6, #22]
 14654              	.LBE1656:
 14655              	.LBE1669:
 14656              	.LBB1670:
 14657              	.LBB1662:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14658              		.loc 1 665 11 view .LVU5229
 14659 0288 86F82920 		strb	r2, [r6, #41]
 14660              	.LBE1662:
 14661              	.LBE1670:
 14662              	.LBB1671:
 14663              	.LBB1672:
 14664 028c 1322     		movs	r2, #19
 14665 028e 3249     		ldr	r1, .L1432+16
 14666              	.LBE1672:
 14667              	.LBE1671:
 14668              	.LBB1675:
 14669              	.LBB1663:
 666:./Libraries/FatFs/Src/ff.c **** }
 14670              		.loc 1 666 11 view .LVU5230
 14671 0290 86F82A00 		strb	r0, [r6, #42]
 14672              	.LBE1663:
 14673              	.LBE1675:
 14674              	.LBB1676:
 14675              	.LBB1673:
 14676 0294 06F12B00 		add	r0, r6, #43
 14677              	.LBE1673:
 14678              	.LBE1676:
5657:./Libraries/FatFs/Src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 14679              		.loc 1 5657 20 view .LVU5231
 14680 0298 86F82630 		strb	r3, [r6, #38]
 14681              	.LBB1677:
 14682              	.LBB1664:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14683              		.loc 1 664 11 view .LVU5232
 14684 029c 86F828C0 		strb	ip, [r6, #40]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14685              		.loc 1 664 22 is_stmt 1 view .LVU5233
 14686              	.LVL1437:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14687              		.loc 1 665 2 view .LVU5234
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14688              		.loc 1 665 22 view .LVU5235
 666:./Libraries/FatFs/Src/ff.c **** }
 14689              		.loc 1 666 2 view .LVU5236
 666:./Libraries/FatFs/Src/ff.c **** }
 14690              		.loc 1 666 2 is_stmt 0 view .LVU5237
 14691              	.LBE1664:
 14692              	.LBE1677:
ARM GAS  /tmp/ccaQXGqa.s 			page 448


5655:./Libraries/FatFs/Src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
 14693              		.loc 1 5655 4 is_stmt 1 view .LVU5238
 14694              	.LBB1678:
 14695              	.LBI1652:
 654:./Libraries/FatFs/Src/ff.c **** {
 14696              		.loc 1 654 6 view .LVU5239
 14697              	.LBB1657:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14698              		.loc 1 656 2 view .LVU5240
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14699              		.loc 1 656 22 view .LVU5241
 657:./Libraries/FatFs/Src/ff.c **** }
 14700              		.loc 1 657 2 view .LVU5242
 657:./Libraries/FatFs/Src/ff.c **** }
 14701              		.loc 1 657 2 is_stmt 0 view .LVU5243
 14702              	.LBE1657:
 14703              	.LBE1678:
5656:./Libraries/FatFs/Src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
 14704              		.loc 1 5656 4 is_stmt 1 view .LVU5244
5656:./Libraries/FatFs/Src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
 14705              		.loc 1 5656 19 is_stmt 0 view .LVU5245
 14706 02a0 86F824E0 		strb	lr, [r6, #36]
5657:./Libraries/FatFs/Src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 14707              		.loc 1 5657 4 is_stmt 1 view .LVU5246
5658:./Libraries/FatFs/Src/ff.c **** 		}
 14708              		.loc 1 5658 4 view .LVU5247
 14709              	.LVL1438:
 14710              	.LBB1679:
 14711              	.LBI1671:
 693:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 14712              		.loc 1 693 6 view .LVU5248
 14713              	.LBB1674:
 694:./Libraries/FatFs/Src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 14714              		.loc 1 694 2 view .LVU5249
 695:./Libraries/FatFs/Src/ff.c **** 
 14715              		.loc 1 695 2 view .LVU5250
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 14716              		.loc 1 697 2 view .LVU5251
 14717 02a4 FFF7FEFF 		bl	mem_cpy.part.0
 14718              	.LVL1439:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 14719              		.loc 1 697 2 is_stmt 0 view .LVU5252
 14720              	.LBE1674:
 14721              	.LBE1679:
5660:./Libraries/FatFs/Src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
 14722              		.loc 1 5660 3 is_stmt 1 view .LVU5253
 14723              	.LBB1680:
 14724              	.LBI1680:
 654:./Libraries/FatFs/Src/ff.c **** {
 14725              		.loc 1 654 6 view .LVU5254
 14726              	.LBB1681:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14727              		.loc 1 656 2 view .LVU5255
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14728              		.loc 1 656 9 is_stmt 0 view .LVU5256
 14729 02a8 5522     		movs	r2, #85
 657:./Libraries/FatFs/Src/ff.c **** }
ARM GAS  /tmp/ccaQXGqa.s 			page 449


 14730              		.loc 1 657 9 view .LVU5257
 14731 02aa AA21     		movs	r1, #170
 14732              	.LBE1681:
 14733              	.LBE1680:
5661:./Libraries/FatFs/Src/ff.c **** 
 14734              		.loc 1 5661 7 view .LVU5258
 14735 02ac 0123     		movs	r3, #1
 14736              	.LBB1687:
 14737              	.LBB1682:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14738              		.loc 1 656 9 view .LVU5259
 14739 02ae 86F8FE21 		strb	r2, [r6, #510]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14740              		.loc 1 656 22 is_stmt 1 view .LVU5260
 14741              	.LVL1440:
 657:./Libraries/FatFs/Src/ff.c **** }
 14742              		.loc 1 657 2 view .LVU5261
 657:./Libraries/FatFs/Src/ff.c **** }
 14743              		.loc 1 657 2 is_stmt 0 view .LVU5262
 14744              	.LBE1682:
 14745              	.LBE1687:
5661:./Libraries/FatFs/Src/ff.c **** 
 14746              		.loc 1 5661 7 view .LVU5263
 14747 02b2 2046     		mov	r0, r4
 14748              	.LBB1688:
 14749              	.LBB1683:
 657:./Libraries/FatFs/Src/ff.c **** }
 14750              		.loc 1 657 9 view .LVU5264
 14751 02b4 86F8FF11 		strb	r1, [r6, #511]
 14752              	.LVL1441:
 657:./Libraries/FatFs/Src/ff.c **** }
 14753              		.loc 1 657 9 view .LVU5265
 14754              	.LBE1683:
 14755              	.LBE1688:
5661:./Libraries/FatFs/Src/ff.c **** 
 14756              		.loc 1 5661 3 is_stmt 1 view .LVU5266
5661:./Libraries/FatFs/Src/ff.c **** 
 14757              		.loc 1 5661 7 is_stmt 0 view .LVU5267
 14758 02b8 4A46     		mov	r2, r9
 14759 02ba 3146     		mov	r1, r6
 14760 02bc FFF7FEFF 		bl	disk_write
 14761              	.LVL1442:
5661:./Libraries/FatFs/Src/ff.c **** 
 14762              		.loc 1 5661 6 view .LVU5268
 14763 02c0 0028     		cmp	r0, #0
 14764 02c2 5CD1     		bne	.L1370
 14765              	.LVL1443:
 14766              	.L1348:
5661:./Libraries/FatFs/Src/ff.c **** 
 14767              		.loc 1 5661 6 view .LVU5269
 14768 02c4 3744     		add	r7, r7, r6
 14769              	.LVL1444:
5665:./Libraries/FatFs/Src/ff.c **** 			mem_set(buf, 0, ss);
 14770              		.loc 1 5665 4 view .LVU5270
 14771 02c6 3346     		mov	r3, r6
 14772              	.LBB1689:
 14773              	.LBB1690:
ARM GAS  /tmp/ccaQXGqa.s 			page 450


 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 14774              		.loc 1 710 8 view .LVU5271
 14775 02c8 0022     		movs	r2, #0
 14776              	.L1350:
 14777              	.LVL1445:
 709:./Libraries/FatFs/Src/ff.c **** 		*d++ = (BYTE)val;
 14778              		.loc 1 709 2 is_stmt 1 view .LVU5272
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 14779              		.loc 1 710 3 view .LVU5273
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 14780              		.loc 1 710 8 is_stmt 0 view .LVU5274
 14781 02ca 03F8012B 		strb	r2, [r3], #1
 14782              	.LVL1446:
 711:./Libraries/FatFs/Src/ff.c **** }
 14783              		.loc 1 711 10 is_stmt 1 view .LVU5275
 711:./Libraries/FatFs/Src/ff.c **** }
 14784              		.loc 1 711 2 is_stmt 0 view .LVU5276
 14785 02ce BB42     		cmp	r3, r7
 14786 02d0 FBD1     		bne	.L1350
 14787              	.LVL1447:
 711:./Libraries/FatFs/Src/ff.c **** }
 14788              		.loc 1 711 2 view .LVU5277
 14789              	.LBE1690:
 14790              	.LBE1689:
5679:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {
 14791              		.loc 1 5679 15 is_stmt 1 discriminator 1 view .LVU5278
5680:./Libraries/FatFs/Src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
 14792              		.loc 1 5680 4 discriminator 1 view .LVU5279
5680:./Libraries/FatFs/Src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
 14793              		.loc 1 5680 7 is_stmt 0 discriminator 1 view .LVU5280
 14794 02d2 019B     		ldr	r3, [sp, #4]
 14795 02d4 032B     		cmp	r3, #3
 14796 02d6 00F0C281 		beq	.L1429
5685:./Libraries/FatFs/Src/ff.c **** 			}
 14797              		.loc 1 5685 5 is_stmt 1 view .LVU5281
 14798 02da 019B     		ldr	r3, [sp, #4]
 14799              	.LBB1691:
 14800              	.LBB1692:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14801              		.loc 1 663 9 is_stmt 0 view .LVU5282
 14802 02dc F821     		movs	r1, #248
 14803              	.LBE1692:
 14804              	.LBE1691:
5685:./Libraries/FatFs/Src/ff.c **** 			}
 14805              		.loc 1 5685 5 view .LVU5283
 14806 02de 012B     		cmp	r3, #1
 14807              	.LVL1448:
 14808              	.LBB1694:
 14809              	.LBI1691:
 661:./Libraries/FatFs/Src/ff.c **** {
 14810              		.loc 1 661 6 is_stmt 1 view .LVU5284
 14811              	.LBB1693:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14812              		.loc 1 663 2 view .LVU5285
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14813              		.loc 1 664 9 is_stmt 0 view .LVU5286
 14814 02e0 4FF0FF03 		mov	r3, #255
ARM GAS  /tmp/ccaQXGqa.s 			page 451


 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14815              		.loc 1 663 9 view .LVU5287
 14816 02e4 3170     		strb	r1, [r6]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14817              		.loc 1 663 22 is_stmt 1 view .LVU5288
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14818              		.loc 1 664 2 view .LVU5289
 14819              	.LVL1449:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14820              		.loc 1 665 26 is_stmt 0 view .LVU5290
 14821 02e6 14BF     		ite	ne
 14822 02e8 1A46     		movne	r2, r3
 14823 02ea 0022     		moveq	r2, #0
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14824              		.loc 1 664 9 view .LVU5291
 14825 02ec 7370     		strb	r3, [r6, #1]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 14826              		.loc 1 664 22 is_stmt 1 view .LVU5292
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14827              		.loc 1 665 2 view .LVU5293
 14828              	.LVL1450:
 666:./Libraries/FatFs/Src/ff.c **** }
 14829              		.loc 1 666 11 is_stmt 0 view .LVU5294
 14830 02ee F270     		strb	r2, [r6, #3]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14831              		.loc 1 665 9 view .LVU5295
 14832 02f0 B370     		strb	r3, [r6, #2]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 14833              		.loc 1 665 22 is_stmt 1 view .LVU5296
 666:./Libraries/FatFs/Src/ff.c **** }
 14834              		.loc 1 666 2 view .LVU5297
 14835              	.LVL1451:
 14836              	.L1352:
 666:./Libraries/FatFs/Src/ff.c **** }
 14837              		.loc 1 666 2 is_stmt 0 view .LVU5298
 14838              	.LBE1693:
 14839              	.LBE1694:
5349:./Libraries/FatFs/Src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
 14840              		.loc 1 5349 9 view .LVU5299
 14841 02f2 169B     		ldr	r3, [sp, #88]
 14842              	.LBB1695:
 14843              	.LBB1696:
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 14844              		.loc 1 710 8 view .LVU5300
 14845 02f4 4FF00008 		mov	r8, #0
 14846 02f8 DDF808B0 		ldr	fp, [sp, #8]
 14847 02fc CDF82090 		str	r9, [sp, #32]
 14848              	.LBE1696:
 14849              	.LBE1695:
5349:./Libraries/FatFs/Src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
 14850              		.loc 1 5349 9 view .LVU5301
 14851 0300 5F0A     		lsrs	r7, r3, #9
 14852              	.LBB1699:
 14853              	.LBB1697:
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 14854              		.loc 1 710 8 view .LVU5302
 14855 0302 B146     		mov	r9, r6
ARM GAS  /tmp/ccaQXGqa.s 			page 452


 14856 0304 0295     		str	r5, [sp, #8]
 14857              	.LVL1452:
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 14858              		.loc 1 710 8 view .LVU5303
 14859 0306 059E     		ldr	r6, [sp, #20]
 14860              	.LVL1453:
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 14861              		.loc 1 710 8 view .LVU5304
 14862 0308 069D     		ldr	r5, [sp, #24]
 14863              	.LVL1454:
 14864              	.L1355:
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 14865              		.loc 1 710 8 view .LVU5305
 14866              	.LBE1697:
 14867              	.LBE1699:
5688:./Libraries/FatFs/Src/ff.c **** 				n = (nsect > sz_buf) ? sz_buf : nsect;
 14868              		.loc 1 5688 4 is_stmt 1 view .LVU5306
5689:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 14869              		.loc 1 5689 5 view .LVU5307
5689:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 14870              		.loc 1 5689 7 is_stmt 0 view .LVU5308
 14871 030a BB45     		cmp	fp, r7
 14872 030c DA46     		mov	r10, fp
5690:./Libraries/FatFs/Src/ff.c **** 				mem_set(buf, 0, ss);
 14873              		.loc 1 5690 9 view .LVU5309
 14874 030e 3246     		mov	r2, r6
 14875 0310 4946     		mov	r1, r9
5689:./Libraries/FatFs/Src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 14876              		.loc 1 5689 7 view .LVU5310
 14877 0312 28BF     		it	cs
 14878 0314 BA46     		movcs	r10, r7
 14879              	.LVL1455:
5690:./Libraries/FatFs/Src/ff.c **** 				mem_set(buf, 0, ss);
 14880              		.loc 1 5690 5 is_stmt 1 view .LVU5311
5690:./Libraries/FatFs/Src/ff.c **** 				mem_set(buf, 0, ss);
 14881              		.loc 1 5690 9 is_stmt 0 view .LVU5312
 14882 0316 2046     		mov	r0, r4
 14883 0318 5346     		mov	r3, r10
 14884 031a FFF7FEFF 		bl	disk_write
 14885              	.LVL1456:
5690:./Libraries/FatFs/Src/ff.c **** 				mem_set(buf, 0, ss);
 14886              		.loc 1 5690 8 view .LVU5313
 14887 031e 70BB     		cbnz	r0, .L1370
 14888 0320 4B46     		mov	r3, r9
 14889              	.L1354:
 14890              	.LVL1457:
 14891              	.LBB1700:
 14892              	.LBB1698:
 709:./Libraries/FatFs/Src/ff.c **** 		*d++ = (BYTE)val;
 14893              		.loc 1 709 2 is_stmt 1 view .LVU5314
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 14894              		.loc 1 710 3 view .LVU5315
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 14895              		.loc 1 710 8 is_stmt 0 view .LVU5316
 14896 0322 03F8018B 		strb	r8, [r3], #1
 14897              	.LVL1458:
 711:./Libraries/FatFs/Src/ff.c **** }
ARM GAS  /tmp/ccaQXGqa.s 			page 453


 14898              		.loc 1 711 10 is_stmt 1 view .LVU5317
 711:./Libraries/FatFs/Src/ff.c **** }
 14899              		.loc 1 711 2 is_stmt 0 view .LVU5318
 14900 0326 AB42     		cmp	r3, r5
 14901 0328 FBD1     		bne	.L1354
 14902              	.LVL1459:
 711:./Libraries/FatFs/Src/ff.c **** }
 14903              		.loc 1 711 2 view .LVU5319
 14904              	.LBE1698:
 14905              	.LBE1700:
5692:./Libraries/FatFs/Src/ff.c **** 			} while (nsect);
 14906              		.loc 1 5692 5 is_stmt 1 view .LVU5320
5693:./Libraries/FatFs/Src/ff.c **** 		}
 14907              		.loc 1 5693 4 is_stmt 0 view .LVU5321
 14908 032a BBEB0A0B 		subs	fp, fp, r10
 14909              	.LVL1460:
5692:./Libraries/FatFs/Src/ff.c **** 			} while (nsect);
 14910              		.loc 1 5692 10 view .LVU5322
 14911 032e 5644     		add	r6, r6, r10
 14912              	.LVL1461:
5692:./Libraries/FatFs/Src/ff.c **** 			} while (nsect);
 14913              		.loc 1 5692 16 is_stmt 1 view .LVU5323
5693:./Libraries/FatFs/Src/ff.c **** 		}
 14914              		.loc 1 5693 12 view .LVU5324
5693:./Libraries/FatFs/Src/ff.c **** 		}
 14915              		.loc 1 5693 4 is_stmt 0 view .LVU5325
 14916 0330 EBD1     		bne	.L1355
 14917              	.LVL1462:
5693:./Libraries/FatFs/Src/ff.c **** 		}
 14918              		.loc 1 5693 4 view .LVU5326
 14919 0332 029D     		ldr	r5, [sp, #8]
 14920 0334 B246     		mov	r10, r6
 14921              	.LVL1463:
5679:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {
 14922              		.loc 1 5679 15 is_stmt 1 view .LVU5327
5697:./Libraries/FatFs/Src/ff.c **** 		do {
 14923              		.loc 1 5697 3 view .LVU5328
5697:./Libraries/FatFs/Src/ff.c **** 		do {
 14924              		.loc 1 5697 35 is_stmt 0 view .LVU5329
 14925 0336 039B     		ldr	r3, [sp, #12]
 14926 0338 4E46     		mov	r6, r9
 14927              	.LVL1464:
5697:./Libraries/FatFs/Src/ff.c **** 		do {
 14928              		.loc 1 5697 35 view .LVU5330
 14929 033a 019A     		ldr	r2, [sp, #4]
 14930 033c DDF82090 		ldr	r9, [sp, #32]
 14931              	.LVL1465:
5697:./Libraries/FatFs/Src/ff.c **** 		do {
 14932              		.loc 1 5697 35 view .LVU5331
 14933 0340 032A     		cmp	r2, #3
 14934 0342 18BF     		it	ne
 14935 0344 1D46     		movne	r5, r3
 14936 0346 0DE0     		b	.L1359
 14937              	.L1433:
 14938              		.align	2
 14939              	.L1432:
 14940 0348 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccaQXGqa.s 			page 454


 14941 034c 00FEFF00 		.word	16776704
 14942 0350 00FEFFFF 		.word	-512
 14943 0354 00000000 		.word	.LC1
 14944 0358 20000000 		.word	.LC3
 14945              	.LVL1466:
 14946              	.L1431:
5702:./Libraries/FatFs/Src/ff.c **** 	}
 14947              		.loc 1 5702 3 view .LVU5332
 14948 035c B5EB0805 		subs	r5, r5, r8
 14949              	.LVL1467:
5702:./Libraries/FatFs/Src/ff.c **** 	}
 14950              		.loc 1 5702 3 view .LVU5333
 14951 0360 00F02181 		beq	.L1430
 14952              	.LVL1468:
 14953              	.L1359:
5698:./Libraries/FatFs/Src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
 14954              		.loc 1 5698 3 is_stmt 1 view .LVU5334
5699:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 14955              		.loc 1 5699 4 view .LVU5335
5699:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 14956              		.loc 1 5699 6 is_stmt 0 view .LVU5336
 14957 0364 BD42     		cmp	r5, r7
 14958 0366 A846     		mov	r8, r5
5700:./Libraries/FatFs/Src/ff.c **** 			sect += n; nsect -= n;
 14959              		.loc 1 5700 8 view .LVU5337
 14960 0368 5246     		mov	r2, r10
 14961 036a 3146     		mov	r1, r6
5699:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 14962              		.loc 1 5699 6 view .LVU5338
 14963 036c 28BF     		it	cs
 14964 036e B846     		movcs	r8, r7
 14965              	.LVL1469:
5700:./Libraries/FatFs/Src/ff.c **** 			sect += n; nsect -= n;
 14966              		.loc 1 5700 4 is_stmt 1 view .LVU5339
5700:./Libraries/FatFs/Src/ff.c **** 			sect += n; nsect -= n;
 14967              		.loc 1 5700 8 is_stmt 0 view .LVU5340
 14968 0370 2046     		mov	r0, r4
 14969 0372 4346     		mov	r3, r8
5701:./Libraries/FatFs/Src/ff.c **** 		} while (nsect);
 14970              		.loc 1 5701 9 view .LVU5341
 14971 0374 C244     		add	r10, r10, r8
 14972              	.LVL1470:
5700:./Libraries/FatFs/Src/ff.c **** 			sect += n; nsect -= n;
 14973              		.loc 1 5700 8 view .LVU5342
 14974 0376 FFF7FEFF 		bl	disk_write
 14975              	.LVL1471:
5701:./Libraries/FatFs/Src/ff.c **** 		} while (nsect);
 14976              		.loc 1 5701 4 is_stmt 1 view .LVU5343
5701:./Libraries/FatFs/Src/ff.c **** 		} while (nsect);
 14977              		.loc 1 5701 15 view .LVU5344
5702:./Libraries/FatFs/Src/ff.c **** 	}
 14978              		.loc 1 5702 11 view .LVU5345
5700:./Libraries/FatFs/Src/ff.c **** 			sect += n; nsect -= n;
 14979              		.loc 1 5700 7 is_stmt 0 view .LVU5346
 14980 037a 0028     		cmp	r0, #0
 14981 037c EED0     		beq	.L1431
 14982              	.LVL1472:
ARM GAS  /tmp/ccaQXGqa.s 			page 455


 14983              	.L1370:
5364:./Libraries/FatFs/Src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 14984              		.loc 1 5364 69 view .LVU5347
 14985 037e 0120     		movs	r0, #1
 14986 0380 75E6     		b	.L1413
 14987              	.LVL1473:
 14988              	.L1321:
5366:./Libraries/FatFs/Src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 14989              		.loc 1 5366 3 is_stmt 1 view .LVU5348
5365:./Libraries/FatFs/Src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 14990              		.loc 1 5365 30 is_stmt 0 view .LVU5349
 14991 0382 8146     		mov	r9, r0
 14992 0384 96E6     		b	.L1366
 14993              	.LVL1474:
 14994              	.L1427:
5597:./Libraries/FatFs/Src/ff.c **** 					return FR_MKFS_ABORTED;
 14995              		.loc 1 5597 6 is_stmt 1 view .LVU5350
5597:./Libraries/FatFs/Src/ff.c **** 					return FR_MKFS_ABORTED;
 14996              		.loc 1 5597 9 is_stmt 0 view .LVU5351
 14997 0386 002A     		cmp	r2, #0
 14998 0388 7FF412AF 		bne	.L1322
 14999              	.LVL1475:
5597:./Libraries/FatFs/Src/ff.c **** 					return FR_MKFS_ABORTED;
 15000              		.loc 1 5597 14 discriminator 1 view .LVU5352
 15001 038c 012D     		cmp	r5, #1
 15002 038e 7FF60FAF 		bls	.L1322
5597:./Libraries/FatFs/Src/ff.c **** 					return FR_MKFS_ABORTED;
 15003              		.loc 1 5597 21 view .LVU5353
 15004 0392 6A08     		lsrs	r2, r5, #1
 15005              	.LVL1476:
 15006              	.L1324:
5556:./Libraries/FatFs/Src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
 15007              		.loc 1 5556 5 is_stmt 1 view .LVU5354
5556:./Libraries/FatFs/Src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
 15008              		.loc 1 5556 8 is_stmt 0 view .LVU5355
 15009 0394 002A     		cmp	r2, #0
 15010 0396 42D0     		beq	.L1363
 15011 0398 1046     		mov	r0, r2
 15012              	.L1326:
 15013              	.LVL1477:
5560:./Libraries/FatFs/Src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
 15014              		.loc 1 5560 5 is_stmt 1 view .LVU5356
5564:./Libraries/FatFs/Src/ff.c **** 			} else {				/* FAT12/16 volume */
 15015              		.loc 1 5564 29 is_stmt 0 view .LVU5357
 15016 039a BB4B     		ldr	r3, .L1434
5564:./Libraries/FatFs/Src/ff.c **** 			} else {				/* FAT12/16 volume */
 15017              		.loc 1 5564 8 view .LVU5358
 15018 039c DFF8F8C2 		ldr	ip, .L1434+16
5560:./Libraries/FatFs/Src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
 15019              		.loc 1 5560 12 view .LVU5359
 15020 03a0 B1FBF2FE 		udiv	lr, r1, r2
 15021              	.LVL1478:
5561:./Libraries/FatFs/Src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
 15022              		.loc 1 5561 5 is_stmt 1 view .LVU5360
5561:./Libraries/FatFs/Src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
 15023              		.loc 1 5561 26 is_stmt 0 view .LVU5361
 15024 03a4 4FEA8E05 		lsl	r5, lr, #2
ARM GAS  /tmp/ccaQXGqa.s 			page 456


5564:./Libraries/FatFs/Src/ff.c **** 			} else {				/* FAT12/16 volume */
 15025              		.loc 1 5564 29 view .LVU5362
 15026 03a8 7344     		add	r3, r3, lr
5561:./Libraries/FatFs/Src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
 15027              		.loc 1 5561 35 view .LVU5363
 15028 03aa 05F20725 		addw	r5, r5, #519
5564:./Libraries/FatFs/Src/ff.c **** 			} else {				/* FAT12/16 volume */
 15029              		.loc 1 5564 8 view .LVU5364
 15030 03ae 6345     		cmp	r3, ip
5561:./Libraries/FatFs/Src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
 15031              		.loc 1 5561 12 view .LVU5365
 15032 03b0 4FEA5525 		lsr	r5, r5, #9
 15033 03b4 0295     		str	r5, [sp, #8]
 15034              	.LVL1479:
5562:./Libraries/FatFs/Src/ff.c **** 				sz_dir = 0;		/* No static directory */
 15035              		.loc 1 5562 5 is_stmt 1 view .LVU5366
5563:./Libraries/FatFs/Src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
 15036              		.loc 1 5563 5 view .LVU5367
5564:./Libraries/FatFs/Src/ff.c **** 			} else {				/* FAT12/16 volume */
 15037              		.loc 1 5564 5 view .LVU5368
5564:./Libraries/FatFs/Src/ff.c **** 			} else {				/* FAT12/16 volume */
 15038              		.loc 1 5564 8 is_stmt 0 view .LVU5369
 15039 03b6 3FF6FBAE 		bhi	.L1322
 15040              	.LVL1480:
5581:./Libraries/FatFs/Src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 15041              		.loc 1 5581 4 is_stmt 1 view .LVU5370
 15042 03ba 0323     		movs	r3, #3
5581:./Libraries/FatFs/Src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 15043              		.loc 1 5581 10 is_stmt 0 view .LVU5371
 15044 03bc 09F12008 		add	r8, r9, #32
5582:./Libraries/FatFs/Src/ff.c **** 
 15045              		.loc 1 5582 4 is_stmt 1 view .LVU5372
5585:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 15046              		.loc 1 5585 17 is_stmt 0 view .LVU5373
 15047 03c0 DDF828E0 		ldr	lr, [sp, #40]
 15048              	.LVL1481:
5585:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 15049              		.loc 1 5585 17 view .LVU5374
 15050 03c4 1546     		mov	r5, r2
 15051              	.LVL1482:
5585:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 15052              		.loc 1 5585 17 view .LVU5375
 15053 03c6 0193     		str	r3, [sp, #4]
 15054 03c8 0246     		mov	r2, r0
 15055              	.LVL1483:
5582:./Libraries/FatFs/Src/ff.c **** 
 15056              		.loc 1 5582 19 view .LVU5376
 15057 03ca 029B     		ldr	r3, [sp, #8]
5585:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 15058              		.loc 1 5585 26 view .LVU5377
 15059 03cc 0EF1FF3C 		add	ip, lr, #-1
5585:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 15060              		.loc 1 5585 33 view .LVU5378
 15061 03d0 CEF1000B 		rsb	fp, lr, #0
 15062 03d4 0020     		movs	r0, #0
5582:./Libraries/FatFs/Src/ff.c **** 
 15063              		.loc 1 5582 19 view .LVU5379
ARM GAS  /tmp/ccaQXGqa.s 			page 457


 15064 03d6 4344     		add	r3, r3, r8
 15065              	.LVL1484:
5585:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 15066              		.loc 1 5585 4 is_stmt 1 view .LVU5380
 15067 03d8 0390     		str	r0, [sp, #12]
5585:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 15068              		.loc 1 5585 26 is_stmt 0 view .LVU5381
 15069 03da 9C44     		add	ip, ip, r3
5585:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 15070              		.loc 1 5585 31 view .LVU5382
 15071 03dc 0CEA0B0B 		and	fp, ip, fp
5585:./Libraries/FatFs/Src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 15072              		.loc 1 5585 6 view .LVU5383
 15073 03e0 ABEB030B 		sub	fp, fp, r3
 15074              	.LVL1485:
5586:./Libraries/FatFs/Src/ff.c **** 				sz_rsv += n; b_fat += n;
 15075              		.loc 1 5586 4 is_stmt 1 view .LVU5384
5587:./Libraries/FatFs/Src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
 15076              		.loc 1 5587 5 view .LVU5385
5587:./Libraries/FatFs/Src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
 15077              		.loc 1 5587 24 is_stmt 0 view .LVU5386
 15078 03e4 08EB0B00 		add	r0, r8, fp
5587:./Libraries/FatFs/Src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
 15079              		.loc 1 5587 12 view .LVU5387
 15080 03e8 0BF1200B 		add	fp, fp, #32
 15081              	.LVL1486:
5587:./Libraries/FatFs/Src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
 15082              		.loc 1 5587 18 is_stmt 1 view .LVU5388
5587:./Libraries/FatFs/Src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
 15083              		.loc 1 5587 24 is_stmt 0 view .LVU5389
 15084 03ec 0590     		str	r0, [sp, #20]
 15085              	.LVL1487:
5587:./Libraries/FatFs/Src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
 15086              		.loc 1 5587 24 view .LVU5390
 15087 03ee A0E6     		b	.L1365
 15088              	.LVL1488:
 15089              	.L1323:
5384:./Libraries/FatFs/Src/ff.c **** 		fmt = FS_FAT16;
 15090              		.loc 1 5384 3 is_stmt 1 view .LVU5391
5384:./Libraries/FatFs/Src/ff.c **** 		fmt = FS_FAT16;
 15091              		.loc 1 5384 6 is_stmt 0 view .LVU5392
 15092 03f0 EB07     		lsls	r3, r5, #31
 15093 03f2 7FF537AE 		bpl	.L1319
 15094 03f6 72E6     		b	.L1421
 15095              	.LVL1489:
 15096              	.L1339:
5606:./Libraries/FatFs/Src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
 15097              		.loc 1 5606 6 is_stmt 1 view .LVU5393
5606:./Libraries/FatFs/Src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
 15098              		.loc 1 5606 9 is_stmt 0 view .LVU5394
 15099 03f8 069B     		ldr	r3, [sp, #24]
 15100 03fa 002B     		cmp	r3, #0
 15101 03fc CAD1     		bne	.L1324
 15102 03fe D7E6     		b	.L1322
 15103              	.LVL1490:
 15104              	.L1423:
5567:./Libraries/FatFs/Src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
ARM GAS  /tmp/ccaQXGqa.s 			page 458


 15105              		.loc 1 5567 6 is_stmt 1 view .LVU5395
5568:./Libraries/FatFs/Src/ff.c **** 				}
 15106              		.loc 1 5568 22 is_stmt 0 view .LVU5396
 15107 0400 0125     		movs	r5, #1
5567:./Libraries/FatFs/Src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 15108              		.loc 1 5567 8 view .LVU5397
 15109 0402 4FEA113C 		lsr	ip, r1, #12
 15110              	.LVL1491:
5568:./Libraries/FatFs/Src/ff.c **** 				}
 15111              		.loc 1 5568 6 is_stmt 1 view .LVU5398
5568:./Libraries/FatFs/Src/ff.c **** 				}
 15112              		.loc 1 5568 27 view .LVU5399
 15113 0406 A148     		ldr	r0, .L1434+4
5568:./Libraries/FatFs/Src/ff.c **** 				}
 15114              		.loc 1 5568 30 is_stmt 0 view .LVU5400
 15115 0408 2B46     		mov	r3, r5
 15116 040a 05E0     		b	.L1331
 15117              	.LVL1492:
 15118              	.L1332:
5568:./Libraries/FatFs/Src/ff.c **** 				}
 15119              		.loc 1 5568 30 discriminator 4 view .LVU5401
 15120 040c 30F8023B 		ldrh	r3, [r0], #2
5568:./Libraries/FatFs/Src/ff.c **** 				}
 15121              		.loc 1 5568 59 discriminator 4 view .LVU5402
 15122 0410 6D00     		lsls	r5, r5, #1
 15123              	.LVL1493:
5568:./Libraries/FatFs/Src/ff.c **** 				}
 15124              		.loc 1 5568 27 is_stmt 1 discriminator 4 view .LVU5403
5568:./Libraries/FatFs/Src/ff.c **** 				}
 15125              		.loc 1 5568 6 is_stmt 0 discriminator 4 view .LVU5404
 15126 0412 002B     		cmp	r3, #0
 15127 0414 3FF469AE 		beq	.L1330
 15128              	.LVL1494:
 15129              	.L1331:
5568:./Libraries/FatFs/Src/ff.c **** 				}
 15130              		.loc 1 5568 66 is_stmt 1 discriminator 3 view .LVU5405
5568:./Libraries/FatFs/Src/ff.c **** 				}
 15131              		.loc 1 5568 50 discriminator 3 view .LVU5406
5568:./Libraries/FatFs/Src/ff.c **** 				}
 15132              		.loc 1 5568 34 is_stmt 0 discriminator 3 view .LVU5407
 15133 0418 6345     		cmp	r3, ip
 15134 041a F7D9     		bls	.L1332
 15135 041c 65E6     		b	.L1330
 15136              	.LVL1495:
 15137              	.L1363:
5557:./Libraries/FatFs/Src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 15138              		.loc 1 5557 6 is_stmt 1 view .LVU5408
5558:./Libraries/FatFs/Src/ff.c **** 				}
 15139              		.loc 1 5558 22 is_stmt 0 view .LVU5409
 15140 041e 0122     		movs	r2, #1
5557:./Libraries/FatFs/Src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 15141              		.loc 1 5557 8 view .LVU5410
 15142 0420 4D0C     		lsrs	r5, r1, #17
 15143              	.LVL1496:
5558:./Libraries/FatFs/Src/ff.c **** 				}
 15144              		.loc 1 5558 6 is_stmt 1 view .LVU5411
5558:./Libraries/FatFs/Src/ff.c **** 				}
ARM GAS  /tmp/ccaQXGqa.s 			page 459


 15145              		.loc 1 5558 27 view .LVU5412
 15146 0422 9B4B     		ldr	r3, .L1434+8
5558:./Libraries/FatFs/Src/ff.c **** 				}
 15147              		.loc 1 5558 32 is_stmt 0 view .LVU5413
 15148 0424 1046     		mov	r0, r2
 15149 0426 04E0     		b	.L1327
 15150              	.LVL1497:
 15151              	.L1328:
5558:./Libraries/FatFs/Src/ff.c **** 				}
 15152              		.loc 1 5558 32 discriminator 4 view .LVU5414
 15153 0428 33F8020B 		ldrh	r0, [r3], #2
5558:./Libraries/FatFs/Src/ff.c **** 				}
 15154              		.loc 1 5558 63 discriminator 4 view .LVU5415
 15155 042c 5200     		lsls	r2, r2, #1
 15156              	.LVL1498:
5558:./Libraries/FatFs/Src/ff.c **** 				}
 15157              		.loc 1 5558 27 is_stmt 1 discriminator 4 view .LVU5416
5558:./Libraries/FatFs/Src/ff.c **** 				}
 15158              		.loc 1 5558 6 is_stmt 0 discriminator 4 view .LVU5417
 15159 042e 0028     		cmp	r0, #0
 15160 0430 B3D0     		beq	.L1326
 15161              	.LVL1499:
 15162              	.L1327:
5558:./Libraries/FatFs/Src/ff.c **** 				}
 15163              		.loc 1 5558 70 is_stmt 1 discriminator 3 view .LVU5418
5558:./Libraries/FatFs/Src/ff.c **** 				}
 15164              		.loc 1 5558 54 discriminator 3 view .LVU5419
5558:./Libraries/FatFs/Src/ff.c **** 				}
 15165              		.loc 1 5558 36 is_stmt 0 discriminator 3 view .LVU5420
 15166 0432 A842     		cmp	r0, r5
 15167 0434 F8D9     		bls	.L1328
 15168 0436 0020     		movs	r0, #0
 15169 0438 AFE7     		b	.L1326
 15170              	.LVL1500:
 15171              	.L1425:
5558:./Libraries/FatFs/Src/ff.c **** 				}
 15172              		.loc 1 5558 36 discriminator 3 view .LVU5421
 15173 043a 2A46     		mov	r2, r5
 15174 043c 51E6     		b	.L1325
 15175              	.L1343:
5638:./Libraries/FatFs/Src/ff.c **** 		}
 15176              		.loc 1 5638 4 is_stmt 1 view .LVU5422
 15177              	.LVL1501:
 15178              	.LBB1701:
 15179              	.LBI1701:
 661:./Libraries/FatFs/Src/ff.c **** {
 15180              		.loc 1 661 6 view .LVU5423
 15181              	.LBB1702:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15182              		.loc 1 663 2 view .LVU5424
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15183              		.loc 1 663 26 is_stmt 0 view .LVU5425
 15184 043e 190A     		lsrs	r1, r3, #8
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15185              		.loc 1 663 11 view .LVU5426
 15186 0440 86F82030 		strb	r3, [r6, #32]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
ARM GAS  /tmp/ccaQXGqa.s 			page 460


 15187              		.loc 1 663 22 is_stmt 1 view .LVU5427
 15188              	.LVL1502:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15189              		.loc 1 664 2 view .LVU5428
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15190              		.loc 1 664 26 is_stmt 0 view .LVU5429
 15191 0444 1A0C     		lsrs	r2, r3, #16
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15192              		.loc 1 665 26 view .LVU5430
 15193 0446 1B0E     		lsrs	r3, r3, #24
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15194              		.loc 1 664 11 view .LVU5431
 15195 0448 86F82110 		strb	r1, [r6, #33]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15196              		.loc 1 664 22 is_stmt 1 view .LVU5432
 15197              	.LVL1503:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15198              		.loc 1 665 2 view .LVU5433
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15199              		.loc 1 665 11 is_stmt 0 view .LVU5434
 15200 044c 86F82220 		strb	r2, [r6, #34]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15201              		.loc 1 665 22 is_stmt 1 view .LVU5435
 15202              	.LVL1504:
 666:./Libraries/FatFs/Src/ff.c **** }
 15203              		.loc 1 666 2 view .LVU5436
 666:./Libraries/FatFs/Src/ff.c **** }
 15204              		.loc 1 666 11 is_stmt 0 view .LVU5437
 15205 0450 86F82330 		strb	r3, [r6, #35]
 667:./Libraries/FatFs/Src/ff.c **** 
 15206              		.loc 1 667 1 view .LVU5438
 15207 0454 EEE6     		b	.L1344
 15208              	.LVL1505:
 15209              	.L1428:
 667:./Libraries/FatFs/Src/ff.c **** 
 15210              		.loc 1 667 1 view .LVU5439
 15211              	.LBE1702:
 15212              	.LBE1701:
5645:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
 15213              		.loc 1 5645 4 is_stmt 1 view .LVU5440
 15214 0456 FFF7FEFF 		bl	get_fattime
 15215              	.LVL1506:
 15216 045a 0246     		mov	r2, r0
 15217              	.LVL1507:
 15218              	.LBB1703:
 15219              	.LBI1703:
 661:./Libraries/FatFs/Src/ff.c **** {
 15220              		.loc 1 661 6 view .LVU5441
 15221              	.LBB1704:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15222              		.loc 1 663 2 view .LVU5442
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15223              		.loc 1 663 2 is_stmt 0 view .LVU5443
 15224              	.LBE1704:
 15225              	.LBE1703:
 15226              	.LBB1710:
 15227              	.LBB1711:
ARM GAS  /tmp/ccaQXGqa.s 			page 461


 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15228              		.loc 1 663 26 view .LVU5444
 15229 045c 029B     		ldr	r3, [sp, #8]
 15230              	.LBE1711:
 15231              	.LBE1710:
 15232              	.LBB1718:
 15233              	.LBB1719:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15234              		.loc 1 656 9 view .LVU5445
 15235 045e 4FF0010B 		mov	fp, #1
 15236              	.LVL1508:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15237              		.loc 1 656 9 view .LVU5446
 15238              	.LBE1719:
 15239              	.LBE1718:
 15240              	.LBB1723:
 15241              	.LBB1705:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15242              		.loc 1 663 26 view .LVU5447
 15243 0462 4FEA122E 		lsr	lr, r2, #8
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15244              		.loc 1 663 11 view .LVU5448
 15245 0466 86F84320 		strb	r2, [r6, #67]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15246              		.loc 1 663 22 is_stmt 1 view .LVU5449
 15247              	.LVL1509:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15248              		.loc 1 664 2 view .LVU5450
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15249              		.loc 1 664 26 is_stmt 0 view .LVU5451
 15250 046a 4FEA124C 		lsr	ip, r2, #16
 15251              	.LBE1705:
 15252              	.LBE1723:
 15253              	.LBB1724:
 15254              	.LBB1712:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15255              		.loc 1 663 11 view .LVU5452
 15256 046e 86F82430 		strb	r3, [r6, #36]
 15257              	.LBE1712:
 15258              	.LBE1724:
 15259              	.LBB1725:
 15260              	.LBB1706:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15261              		.loc 1 665 26 view .LVU5453
 15262 0472 120E     		lsrs	r2, r2, #24
 15263              	.LBE1706:
 15264              	.LBE1725:
 15265              	.LBB1726:
 15266              	.LBB1727:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15267              		.loc 1 664 9 view .LVU5454
 15268 0474 86F82DA0 		strb	r10, [r6, #45]
 15269              	.LBE1727:
 15270              	.LBE1726:
 15271              	.LBB1733:
 15272              	.LBB1713:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
ARM GAS  /tmp/ccaQXGqa.s 			page 462


 15273              		.loc 1 663 26 view .LVU5455
 15274 0478 190A     		lsrs	r1, r3, #8
 15275              	.LBE1713:
 15276              	.LBE1733:
 15277              	.LBB1734:
 15278              	.LBB1728:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15279              		.loc 1 665 9 view .LVU5456
 15280 047a 86F82EA0 		strb	r10, [r6, #46]
 15281              	.LBE1728:
 15282              	.LBE1734:
 15283              	.LBB1735:
 15284              	.LBB1714:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15285              		.loc 1 664 26 view .LVU5457
 15286 047e 180C     		lsrs	r0, r3, #16
 15287              	.LBE1714:
 15288              	.LBE1735:
 15289              	.LBB1736:
 15290              	.LBB1729:
 666:./Libraries/FatFs/Src/ff.c **** }
 15291              		.loc 1 666 9 view .LVU5458
 15292 0480 86F82FA0 		strb	r10, [r6, #47]
 15293              	.LBE1729:
 15294              	.LBE1736:
 15295              	.LBB1737:
 15296              	.LBB1720:
 657:./Libraries/FatFs/Src/ff.c **** }
 15297              		.loc 1 657 9 view .LVU5459
 15298 0484 86F831A0 		strb	r10, [r6, #49]
 15299              	.LBE1720:
 15300              	.LBE1737:
 15301              	.LBB1738:
 15302              	.LBB1739:
 15303 0488 86F833A0 		strb	r10, [r6, #51]
 15304              	.LBE1739:
 15305              	.LBE1738:
5651:./Libraries/FatFs/Src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 15306              		.loc 1 5651 22 view .LVU5460
 15307 048c 4FF0290A 		mov	r10, #41
 15308              	.LBB1743:
 15309              	.LBB1707:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15310              		.loc 1 664 11 view .LVU5461
 15311 0490 86F844E0 		strb	lr, [r6, #68]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15312              		.loc 1 664 22 is_stmt 1 view .LVU5462
 15313              	.LVL1510:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15314              		.loc 1 665 2 view .LVU5463
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15315              		.loc 1 665 2 is_stmt 0 view .LVU5464
 15316              	.LBE1707:
 15317              	.LBE1743:
 15318              	.LBB1744:
 15319              	.LBB1740:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
ARM GAS  /tmp/ccaQXGqa.s 			page 463


 15320              		.loc 1 656 9 view .LVU5465
 15321 0494 4FF0060E 		mov	lr, #6
 15322              	.LBE1740:
 15323              	.LBE1744:
 15324              	.LBB1745:
 15325              	.LBB1708:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15326              		.loc 1 665 11 view .LVU5466
 15327 0498 86F845C0 		strb	ip, [r6, #69]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15328              		.loc 1 665 22 is_stmt 1 view .LVU5467
 666:./Libraries/FatFs/Src/ff.c **** }
 15329              		.loc 1 666 2 view .LVU5468
 15330              	.LVL1511:
 666:./Libraries/FatFs/Src/ff.c **** }
 15331              		.loc 1 666 2 is_stmt 0 view .LVU5469
 15332              	.LBE1708:
 15333              	.LBE1745:
5650:./Libraries/FatFs/Src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
 15334              		.loc 1 5650 21 view .LVU5470
 15335 049c 4FF0800C 		mov	ip, #128
 15336              	.LBB1746:
 15337              	.LBB1709:
 666:./Libraries/FatFs/Src/ff.c **** }
 15338              		.loc 1 666 11 view .LVU5471
 15339 04a0 86F84620 		strb	r2, [r6, #70]
 15340              	.LVL1512:
 666:./Libraries/FatFs/Src/ff.c **** }
 15341              		.loc 1 666 11 view .LVU5472
 15342              	.LBE1709:
 15343              	.LBE1746:
5646:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
 15344              		.loc 1 5646 4 is_stmt 1 view .LVU5473
 15345              	.LBB1747:
 15346              	.LBI1710:
 661:./Libraries/FatFs/Src/ff.c **** {
 15347              		.loc 1 661 6 view .LVU5474
 15348              	.LBB1715:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15349              		.loc 1 663 2 view .LVU5475
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15350              		.loc 1 663 22 view .LVU5476
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15351              		.loc 1 664 2 view .LVU5477
 666:./Libraries/FatFs/Src/ff.c **** }
 15352              		.loc 1 666 11 is_stmt 0 view .LVU5478
 15353 04a4 1A0E     		lsrs	r2, r3, #24
 15354              	.LBE1715:
 15355              	.LBE1747:
 15356              	.LBB1748:
 15357              	.LBB1730:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15358              		.loc 1 663 9 view .LVU5479
 15359 04a6 4FF00203 		mov	r3, #2
 15360              	.LBE1730:
 15361              	.LBE1748:
 15362              	.LBB1749:
ARM GAS  /tmp/ccaQXGqa.s 			page 464


 15363              	.LBB1716:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15364              		.loc 1 664 11 view .LVU5480
 15365 04aa 86F82510 		strb	r1, [r6, #37]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15366              		.loc 1 664 22 is_stmt 1 view .LVU5481
 15367              	.LVL1513:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15368              		.loc 1 665 2 view .LVU5482
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15369              		.loc 1 665 11 is_stmt 0 view .LVU5483
 15370 04ae 86F82600 		strb	r0, [r6, #38]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15371              		.loc 1 665 22 is_stmt 1 view .LVU5484
 15372              	.LVL1514:
 666:./Libraries/FatFs/Src/ff.c **** }
 15373              		.loc 1 666 2 view .LVU5485
 666:./Libraries/FatFs/Src/ff.c **** }
 15374              		.loc 1 666 2 is_stmt 0 view .LVU5486
 15375              	.LBE1716:
 15376              	.LBE1749:
 15377              	.LBB1750:
 15378              	.LBB1751:
 15379 04b2 06F14700 		add	r0, r6, #71
 15380 04b6 7749     		ldr	r1, .L1434+12
 15381              	.LBE1751:
 15382              	.LBE1750:
 15383              	.LBB1754:
 15384              	.LBB1717:
 666:./Libraries/FatFs/Src/ff.c **** }
 15385              		.loc 1 666 11 view .LVU5487
 15386 04b8 86F82720 		strb	r2, [r6, #39]
 15387              	.LVL1515:
 666:./Libraries/FatFs/Src/ff.c **** }
 15388              		.loc 1 666 11 view .LVU5488
 15389              	.LBE1717:
 15390              	.LBE1754:
5647:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
 15391              		.loc 1 5647 4 is_stmt 1 view .LVU5489
 15392              	.LBB1755:
 15393              	.LBI1726:
 661:./Libraries/FatFs/Src/ff.c **** {
 15394              		.loc 1 661 6 view .LVU5490
 15395              	.LBB1731:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15396              		.loc 1 663 2 view .LVU5491
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15397              		.loc 1 663 2 is_stmt 0 view .LVU5492
 15398              	.LBE1731:
 15399              	.LBE1755:
 15400              	.LBB1756:
 15401              	.LBB1752:
 15402 04bc 1322     		movs	r2, #19
 15403              	.LBE1752:
 15404              	.LBE1756:
 15405              	.LBB1757:
 15406              	.LBB1732:
ARM GAS  /tmp/ccaQXGqa.s 			page 465


 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15407              		.loc 1 663 9 view .LVU5493
 15408 04be 86F82C30 		strb	r3, [r6, #44]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15409              		.loc 1 663 22 is_stmt 1 view .LVU5494
 15410              	.LVL1516:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15411              		.loc 1 664 2 view .LVU5495
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15412              		.loc 1 664 22 view .LVU5496
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15413              		.loc 1 665 2 view .LVU5497
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15414              		.loc 1 665 22 view .LVU5498
 666:./Libraries/FatFs/Src/ff.c **** }
 15415              		.loc 1 666 2 view .LVU5499
 666:./Libraries/FatFs/Src/ff.c **** }
 15416              		.loc 1 666 2 is_stmt 0 view .LVU5500
 15417              	.LBE1732:
 15418              	.LBE1757:
5648:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
 15419              		.loc 1 5648 4 is_stmt 1 view .LVU5501
 15420              	.LBB1758:
 15421              	.LBI1718:
 654:./Libraries/FatFs/Src/ff.c **** {
 15422              		.loc 1 654 6 view .LVU5502
 15423              	.LBB1721:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15424              		.loc 1 656 2 view .LVU5503
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15425              		.loc 1 656 2 is_stmt 0 view .LVU5504
 15426              	.LBE1721:
 15427              	.LBE1758:
 15428              	.LBB1759:
 15429              	.LBB1741:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15430              		.loc 1 656 9 view .LVU5505
 15431 04c2 86F832E0 		strb	lr, [r6, #50]
 15432              	.LBE1741:
 15433              	.LBE1759:
5650:./Libraries/FatFs/Src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
 15434              		.loc 1 5650 21 view .LVU5506
 15435 04c6 86F840C0 		strb	ip, [r6, #64]
5651:./Libraries/FatFs/Src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 15436              		.loc 1 5651 22 view .LVU5507
 15437 04ca 86F842A0 		strb	r10, [r6, #66]
 15438              	.LBB1760:
 15439              	.LBB1722:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15440              		.loc 1 656 9 view .LVU5508
 15441 04ce 86F830B0 		strb	fp, [r6, #48]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15442              		.loc 1 656 22 is_stmt 1 view .LVU5509
 15443              	.LVL1517:
 657:./Libraries/FatFs/Src/ff.c **** }
 15444              		.loc 1 657 2 view .LVU5510
 657:./Libraries/FatFs/Src/ff.c **** }
ARM GAS  /tmp/ccaQXGqa.s 			page 466


 15445              		.loc 1 657 2 is_stmt 0 view .LVU5511
 15446              	.LBE1722:
 15447              	.LBE1760:
5649:./Libraries/FatFs/Src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
 15448              		.loc 1 5649 4 is_stmt 1 view .LVU5512
 15449              	.LBB1761:
 15450              	.LBI1738:
 654:./Libraries/FatFs/Src/ff.c **** {
 15451              		.loc 1 654 6 view .LVU5513
 15452              	.LBB1742:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15453              		.loc 1 656 2 view .LVU5514
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15454              		.loc 1 656 22 view .LVU5515
 657:./Libraries/FatFs/Src/ff.c **** }
 15455              		.loc 1 657 2 view .LVU5516
 657:./Libraries/FatFs/Src/ff.c **** }
 15456              		.loc 1 657 2 is_stmt 0 view .LVU5517
 15457              	.LBE1742:
 15458              	.LBE1761:
5650:./Libraries/FatFs/Src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
 15459              		.loc 1 5650 4 is_stmt 1 view .LVU5518
5651:./Libraries/FatFs/Src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 15460              		.loc 1 5651 4 view .LVU5519
5652:./Libraries/FatFs/Src/ff.c **** 		} else {
 15461              		.loc 1 5652 4 view .LVU5520
 15462              	.LBB1762:
 15463              	.LBI1750:
 693:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 15464              		.loc 1 693 6 view .LVU5521
 15465              	.LBB1753:
 694:./Libraries/FatFs/Src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 15466              		.loc 1 694 2 view .LVU5522
 695:./Libraries/FatFs/Src/ff.c **** 
 15467              		.loc 1 695 2 view .LVU5523
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 15468              		.loc 1 697 2 view .LVU5524
 15469 04d2 FFF7FEFF 		bl	mem_cpy.part.0
 15470              	.LVL1518:
 697:./Libraries/FatFs/Src/ff.c **** 		do {
 15471              		.loc 1 697 2 is_stmt 0 view .LVU5525
 15472              	.LBE1753:
 15473              	.LBE1762:
5660:./Libraries/FatFs/Src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
 15474              		.loc 1 5660 3 is_stmt 1 view .LVU5526
 15475              	.LBB1763:
 654:./Libraries/FatFs/Src/ff.c **** {
 15476              		.loc 1 654 6 view .LVU5527
 15477              	.LBB1684:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15478              		.loc 1 656 2 view .LVU5528
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15479              		.loc 1 656 9 is_stmt 0 view .LVU5529
 15480 04d6 5522     		movs	r2, #85
 657:./Libraries/FatFs/Src/ff.c **** }
 15481              		.loc 1 657 9 view .LVU5530
 15482 04d8 AA21     		movs	r1, #170
ARM GAS  /tmp/ccaQXGqa.s 			page 467


 15483              	.LBE1684:
 15484              	.LBE1763:
5661:./Libraries/FatFs/Src/ff.c **** 
 15485              		.loc 1 5661 7 view .LVU5531
 15486 04da 5B46     		mov	r3, fp
 15487              	.LBB1764:
 15488              	.LBB1685:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15489              		.loc 1 656 9 view .LVU5532
 15490 04dc 86F8FE21 		strb	r2, [r6, #510]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15491              		.loc 1 656 22 is_stmt 1 view .LVU5533
 15492              	.LVL1519:
 657:./Libraries/FatFs/Src/ff.c **** }
 15493              		.loc 1 657 2 view .LVU5534
 657:./Libraries/FatFs/Src/ff.c **** }
 15494              		.loc 1 657 2 is_stmt 0 view .LVU5535
 15495              	.LBE1685:
 15496              	.LBE1764:
5661:./Libraries/FatFs/Src/ff.c **** 
 15497              		.loc 1 5661 7 view .LVU5536
 15498 04e0 2046     		mov	r0, r4
 15499              	.LBB1765:
 15500              	.LBB1686:
 657:./Libraries/FatFs/Src/ff.c **** }
 15501              		.loc 1 657 9 view .LVU5537
 15502 04e2 86F8FF11 		strb	r1, [r6, #511]
 15503              	.LVL1520:
 657:./Libraries/FatFs/Src/ff.c **** }
 15504              		.loc 1 657 9 view .LVU5538
 15505              	.LBE1686:
 15506              	.LBE1765:
5661:./Libraries/FatFs/Src/ff.c **** 
 15507              		.loc 1 5661 3 is_stmt 1 view .LVU5539
5661:./Libraries/FatFs/Src/ff.c **** 
 15508              		.loc 1 5661 7 is_stmt 0 view .LVU5540
 15509 04e6 4A46     		mov	r2, r9
 15510 04e8 3146     		mov	r1, r6
 15511 04ea FFF7FEFF 		bl	disk_write
 15512              	.LVL1521:
5661:./Libraries/FatFs/Src/ff.c **** 
 15513              		.loc 1 5661 6 view .LVU5541
 15514 04ee 8246     		mov	r10, r0
 15515 04f0 0028     		cmp	r0, #0
 15516 04f2 7FF444AF 		bne	.L1370
5665:./Libraries/FatFs/Src/ff.c **** 			mem_set(buf, 0, ss);
 15517              		.loc 1 5665 4 is_stmt 1 view .LVU5542
 15518 04f6 5B46     		mov	r3, fp
 15519 04f8 09F10602 		add	r2, r9, #6
 15520 04fc 3146     		mov	r1, r6
 15521 04fe 2046     		mov	r0, r4
 15522 0500 FFF7FEFF 		bl	disk_write
 15523              	.LVL1522:
5666:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
 15524              		.loc 1 5666 4 view .LVU5543
 15525              	.LBB1766:
 15526              	.LBI1766:
ARM GAS  /tmp/ccaQXGqa.s 			page 468


 706:./Libraries/FatFs/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 15527              		.loc 1 706 6 view .LVU5544
 15528              	.LBB1767:
 707:./Libraries/FatFs/Src/ff.c **** 
 15529              		.loc 1 707 2 view .LVU5545
 707:./Libraries/FatFs/Src/ff.c **** 
 15530              		.loc 1 707 2 is_stmt 0 view .LVU5546
 15531              	.LBE1767:
 15532              	.LBE1766:
5665:./Libraries/FatFs/Src/ff.c **** 			mem_set(buf, 0, ss);
 15533              		.loc 1 5665 4 view .LVU5547
 15534 0504 3346     		mov	r3, r6
 15535 0506 069A     		ldr	r2, [sp, #24]
 15536              	.LVL1523:
 15537              	.L1349:
 15538              	.LBB1769:
 15539              	.LBB1768:
 709:./Libraries/FatFs/Src/ff.c **** 		*d++ = (BYTE)val;
 15540              		.loc 1 709 2 is_stmt 1 view .LVU5548
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 15541              		.loc 1 710 3 view .LVU5549
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 15542              		.loc 1 710 8 is_stmt 0 view .LVU5550
 15543 0508 03F801AB 		strb	r10, [r3], #1
 15544              	.LVL1524:
 711:./Libraries/FatFs/Src/ff.c **** }
 15545              		.loc 1 711 10 is_stmt 1 view .LVU5551
 711:./Libraries/FatFs/Src/ff.c **** }
 15546              		.loc 1 711 2 is_stmt 0 view .LVU5552
 15547 050c 9342     		cmp	r3, r2
 15548 050e FBD1     		bne	.L1349
 15549              	.LVL1525:
 711:./Libraries/FatFs/Src/ff.c **** }
 15550              		.loc 1 711 2 view .LVU5553
 15551              	.LBE1768:
 15552              	.LBE1769:
5667:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
 15553              		.loc 1 5667 4 is_stmt 1 view .LVU5554
 15554              	.LBB1770:
 15555              	.LBI1770:
 661:./Libraries/FatFs/Src/ff.c **** {
 15556              		.loc 1 661 6 view .LVU5555
 15557              	.LBB1771:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15558              		.loc 1 663 2 view .LVU5556
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15559              		.loc 1 663 2 is_stmt 0 view .LVU5557
 15560              	.LBE1771:
 15561              	.LBE1770:
5669:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
 15562              		.loc 1 5669 4 view .LVU5558
 15563 0510 08F1FF38 		add	r8, r8, #-1
 15564              	.LVL1526:
 15565              	.LBB1778:
 15566              	.LBB1772:
 666:./Libraries/FatFs/Src/ff.c **** }
 15567              		.loc 1 666 9 view .LVU5559
ARM GAS  /tmp/ccaQXGqa.s 			page 469


 15568 0514 4FF0410C 		mov	ip, #65
 15569              	.LBE1772:
 15570              	.LBE1778:
 15571              	.LBB1779:
 15572              	.LBB1780:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15573              		.loc 1 663 9 view .LVU5560
 15574 0518 4FF0720E 		mov	lr, #114
 15575              	.LBE1780:
 15576              	.LBE1779:
 15577              	.LBB1783:
 15578              	.LBB1773:
 15579 051c 5222     		movs	r2, #82
 15580              	.LBE1773:
 15581              	.LBE1783:
 15582              	.LBB1784:
 15583              	.LBB1785:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15584              		.loc 1 663 26 view .LVU5561
 15585 051e 4FEA1820 		lsr	r0, r8, #8
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15586              		.loc 1 663 11 view .LVU5562
 15587 0522 86F8E881 		strb	r8, [r6, #488]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15588              		.loc 1 664 26 view .LVU5563
 15589 0526 4FEA1841 		lsr	r1, r8, #16
 15590              	.LBE1785:
 15591              	.LBE1784:
 15592              	.LBB1791:
 15593              	.LBB1774:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15594              		.loc 1 665 9 view .LVU5564
 15595 052a 6123     		movs	r3, #97
 15596              	.LBE1774:
 15597              	.LBE1791:
 15598              	.LBB1792:
 15599              	.LBB1786:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15600              		.loc 1 665 26 view .LVU5565
 15601 052c 4FEA1868 		lsr	r8, r8, #24
 15602              	.LVL1527:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15603              		.loc 1 665 26 view .LVU5566
 15604              	.LBE1786:
 15605              	.LBE1792:
 15606              	.LBB1793:
 15607              	.LBB1794:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15608              		.loc 1 664 9 view .LVU5567
 15609 0530 86F8EDA1 		strb	r10, [r6, #493]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15610              		.loc 1 665 9 view .LVU5568
 15611 0534 86F8EEA1 		strb	r10, [r6, #494]
 666:./Libraries/FatFs/Src/ff.c **** }
 15612              		.loc 1 666 9 view .LVU5569
 15613 0538 86F8EFA1 		strb	r10, [r6, #495]
 15614              	.LBE1794:
ARM GAS  /tmp/ccaQXGqa.s 			page 470


 15615              	.LBE1793:
 15616              	.LBB1798:
 15617              	.LBB1799:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15618              		.loc 1 656 9 view .LVU5570
 15619 053c 4FF0550A 		mov	r10, #85
 15620              	.LBE1799:
 15621              	.LBE1798:
 15622              	.LBB1802:
 15623              	.LBB1787:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15624              		.loc 1 664 11 view .LVU5571
 15625 0540 86F8E901 		strb	r0, [r6, #489]
 15626              	.LBE1787:
 15627              	.LBE1802:
 15628              	.LBB1803:
 15629              	.LBB1795:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15630              		.loc 1 663 9 view .LVU5572
 15631 0544 0220     		movs	r0, #2
 15632              	.LBE1795:
 15633              	.LBE1803:
 15634              	.LBB1804:
 15635              	.LBB1788:
 666:./Libraries/FatFs/Src/ff.c **** }
 15636              		.loc 1 666 11 view .LVU5573
 15637 0546 86F8EB81 		strb	r8, [r6, #491]
 15638              	.LBE1788:
 15639              	.LBE1804:
 15640              	.LBB1805:
 15641              	.LBB1800:
 657:./Libraries/FatFs/Src/ff.c **** }
 15642              		.loc 1 657 9 view .LVU5574
 15643 054a 4FF0AA08 		mov	r8, #170
 15644              	.LBE1800:
 15645              	.LBE1805:
 15646              	.LBB1806:
 15647              	.LBB1789:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15648              		.loc 1 665 11 view .LVU5575
 15649 054e 86F8EA11 		strb	r1, [r6, #490]
 15650              	.LBE1789:
 15651              	.LBE1806:
5672:./Libraries/FatFs/Src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
 15652              		.loc 1 5672 4 view .LVU5576
 15653 0552 3146     		mov	r1, r6
 15654              	.LBB1807:
 15655              	.LBB1775:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15656              		.loc 1 663 9 view .LVU5577
 15657 0554 3270     		strb	r2, [r6]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15658              		.loc 1 663 22 is_stmt 1 view .LVU5578
 15659              	.LVL1528:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15660              		.loc 1 664 2 view .LVU5579
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
ARM GAS  /tmp/ccaQXGqa.s 			page 471


 15661              		.loc 1 664 9 is_stmt 0 view .LVU5580
 15662 0556 7270     		strb	r2, [r6, #1]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15663              		.loc 1 664 22 is_stmt 1 view .LVU5581
 15664              	.LVL1529:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15665              		.loc 1 665 2 view .LVU5582
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15666              		.loc 1 665 2 is_stmt 0 view .LVU5583
 15667              	.LBE1775:
 15668              	.LBE1807:
5672:./Libraries/FatFs/Src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
 15669              		.loc 1 5672 4 view .LVU5584
 15670 0558 09F10702 		add	r2, r9, #7
 15671              	.LBB1808:
 15672              	.LBB1776:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15673              		.loc 1 665 9 view .LVU5585
 15674 055c B370     		strb	r3, [r6, #2]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15675              		.loc 1 665 22 is_stmt 1 view .LVU5586
 15676              	.LVL1530:
 666:./Libraries/FatFs/Src/ff.c **** }
 15677              		.loc 1 666 2 view .LVU5587
 666:./Libraries/FatFs/Src/ff.c **** }
 15678              		.loc 1 666 2 is_stmt 0 view .LVU5588
 15679              	.LBE1776:
 15680              	.LBE1808:
 15681              	.LBB1809:
 15682              	.LBB1781:
 666:./Libraries/FatFs/Src/ff.c **** }
 15683              		.loc 1 666 9 view .LVU5589
 15684 055e 86F8E731 		strb	r3, [r6, #487]
 15685              	.LBE1781:
 15686              	.LBE1809:
5672:./Libraries/FatFs/Src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
 15687              		.loc 1 5672 4 view .LVU5590
 15688 0562 0123     		movs	r3, #1
 15689              	.LBB1810:
 15690              	.LBB1796:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15691              		.loc 1 663 9 view .LVU5591
 15692 0564 86F8EC01 		strb	r0, [r6, #492]
 15693              	.LBE1796:
 15694              	.LBE1810:
5672:./Libraries/FatFs/Src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
 15695              		.loc 1 5672 4 view .LVU5592
 15696 0568 2046     		mov	r0, r4
 15697              	.LBB1811:
 15698              	.LBB1777:
 666:./Libraries/FatFs/Src/ff.c **** }
 15699              		.loc 1 666 9 view .LVU5593
 15700 056a 86F803C0 		strb	ip, [r6, #3]
 15701              	.LVL1531:
 666:./Libraries/FatFs/Src/ff.c **** }
 15702              		.loc 1 666 9 view .LVU5594
 15703              	.LBE1777:
ARM GAS  /tmp/ccaQXGqa.s 			page 472


 15704              	.LBE1811:
5668:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
 15705              		.loc 1 5668 4 is_stmt 1 view .LVU5595
 15706              	.LBB1812:
 15707              	.LBI1779:
 661:./Libraries/FatFs/Src/ff.c **** {
 15708              		.loc 1 661 6 view .LVU5596
 15709              	.LBB1782:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15710              		.loc 1 663 2 view .LVU5597
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15711              		.loc 1 665 9 is_stmt 0 view .LVU5598
 15712 056e 86F8E6C1 		strb	ip, [r6, #486]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15713              		.loc 1 663 9 view .LVU5599
 15714 0572 86F8E4E1 		strb	lr, [r6, #484]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15715              		.loc 1 663 22 is_stmt 1 view .LVU5600
 15716              	.LVL1532:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15717              		.loc 1 664 2 view .LVU5601
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15718              		.loc 1 664 9 is_stmt 0 view .LVU5602
 15719 0576 86F8E5E1 		strb	lr, [r6, #485]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15720              		.loc 1 664 22 is_stmt 1 view .LVU5603
 15721              	.LVL1533:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15722              		.loc 1 665 2 view .LVU5604
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15723              		.loc 1 665 22 view .LVU5605
 666:./Libraries/FatFs/Src/ff.c **** }
 15724              		.loc 1 666 2 view .LVU5606
 666:./Libraries/FatFs/Src/ff.c **** }
 15725              		.loc 1 666 2 is_stmt 0 view .LVU5607
 15726              	.LBE1782:
 15727              	.LBE1812:
5669:./Libraries/FatFs/Src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
 15728              		.loc 1 5669 4 is_stmt 1 view .LVU5608
 15729              	.LBB1813:
 15730              	.LBI1784:
 661:./Libraries/FatFs/Src/ff.c **** {
 15731              		.loc 1 661 6 view .LVU5609
 15732              	.LBB1790:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15733              		.loc 1 663 2 view .LVU5610
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15734              		.loc 1 663 22 view .LVU5611
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15735              		.loc 1 664 2 view .LVU5612
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15736              		.loc 1 664 22 view .LVU5613
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15737              		.loc 1 665 2 view .LVU5614
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15738              		.loc 1 665 22 view .LVU5615
 666:./Libraries/FatFs/Src/ff.c **** }
ARM GAS  /tmp/ccaQXGqa.s 			page 473


 15739              		.loc 1 666 2 view .LVU5616
 666:./Libraries/FatFs/Src/ff.c **** }
 15740              		.loc 1 666 2 is_stmt 0 view .LVU5617
 15741              	.LBE1790:
 15742              	.LBE1813:
5670:./Libraries/FatFs/Src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
 15743              		.loc 1 5670 4 is_stmt 1 view .LVU5618
 15744              	.LBB1814:
 15745              	.LBI1793:
 661:./Libraries/FatFs/Src/ff.c **** {
 15746              		.loc 1 661 6 view .LVU5619
 15747              	.LBB1797:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15748              		.loc 1 663 2 view .LVU5620
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15749              		.loc 1 663 22 view .LVU5621
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15750              		.loc 1 664 2 view .LVU5622
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15751              		.loc 1 664 22 view .LVU5623
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15752              		.loc 1 665 2 view .LVU5624
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15753              		.loc 1 665 22 view .LVU5625
 666:./Libraries/FatFs/Src/ff.c **** }
 15754              		.loc 1 666 2 view .LVU5626
 666:./Libraries/FatFs/Src/ff.c **** }
 15755              		.loc 1 666 2 is_stmt 0 view .LVU5627
 15756              	.LBE1797:
 15757              	.LBE1814:
5671:./Libraries/FatFs/Src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
 15758              		.loc 1 5671 4 is_stmt 1 view .LVU5628
 15759              	.LBB1815:
 15760              	.LBI1798:
 654:./Libraries/FatFs/Src/ff.c **** {
 15761              		.loc 1 654 6 view .LVU5629
 15762              	.LBB1801:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15763              		.loc 1 656 2 view .LVU5630
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15764              		.loc 1 656 9 is_stmt 0 view .LVU5631
 15765 057a 86F8FEA1 		strb	r10, [r6, #510]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15766              		.loc 1 656 22 is_stmt 1 view .LVU5632
 15767              	.LVL1534:
 657:./Libraries/FatFs/Src/ff.c **** }
 15768              		.loc 1 657 2 view .LVU5633
 657:./Libraries/FatFs/Src/ff.c **** }
 15769              		.loc 1 657 9 is_stmt 0 view .LVU5634
 15770 057e 86F8FF81 		strb	r8, [r6, #511]
 15771              	.LVL1535:
 657:./Libraries/FatFs/Src/ff.c **** }
 15772              		.loc 1 657 9 view .LVU5635
 15773              	.LBE1801:
 15774              	.LBE1815:
5672:./Libraries/FatFs/Src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
 15775              		.loc 1 5672 4 is_stmt 1 view .LVU5636
ARM GAS  /tmp/ccaQXGqa.s 			page 474


 15776 0582 FFF7FEFF 		bl	disk_write
 15777              	.LVL1536:
5673:./Libraries/FatFs/Src/ff.c **** 		}
 15778              		.loc 1 5673 4 view .LVU5637
 15779 0586 0123     		movs	r3, #1
 15780 0588 3146     		mov	r1, r6
 15781 058a 2046     		mov	r0, r4
 15782 058c 09EB0302 		add	r2, r9, r3
 15783 0590 FFF7FEFF 		bl	disk_write
 15784              	.LVL1537:
 15785 0594 96E6     		b	.L1348
 15786              	.LVL1538:
 15787              	.L1337:
5617:./Libraries/FatFs/Src/ff.c **** 
 15788              		.loc 1 5617 4 view .LVU5638
5617:./Libraries/FatFs/Src/ff.c **** 
 15789              		.loc 1 5617 7 is_stmt 0 view .LVU5639
 15790 0596 40F6F573 		movw	r3, #4085
 15791 059a 9845     		cmp	r8, r3
 15792 059c 3FF608AE 		bhi	.L1322
 15793 05a0 0123     		movs	r3, #1
 15794 05a2 0193     		str	r3, [sp, #4]
 15795 05a4 19E6     		b	.L1336
 15796              	.LVL1539:
 15797              	.L1430:
5706:./Libraries/FatFs/Src/ff.c **** 		sys = 0x07;			/* HPFS/NTFS/exFAT */
 15798              		.loc 1 5706 2 is_stmt 1 view .LVU5640
5709:./Libraries/FatFs/Src/ff.c **** 			sys = 0x0C;		/* FAT32X */
 15799              		.loc 1 5709 3 view .LVU5641
5709:./Libraries/FatFs/Src/ff.c **** 			sys = 0x0C;		/* FAT32X */
 15800              		.loc 1 5709 6 is_stmt 0 view .LVU5642
 15801 05a6 019A     		ldr	r2, [sp, #4]
 15802 05a8 032A     		cmp	r2, #3
 15803 05aa 6AD0     		beq	.L1377
5712:./Libraries/FatFs/Src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
 15804              		.loc 1 5712 4 is_stmt 1 view .LVU5643
5712:./Libraries/FatFs/Src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
 15805              		.loc 1 5712 7 is_stmt 0 view .LVU5644
 15806 05ac 0B9B     		ldr	r3, [sp, #44]
 15807 05ae B3F5803F 		cmp	r3, #65536
 15808 05b2 64D2     		bcs	.L1378
5715:./Libraries/FatFs/Src/ff.c **** 			}
 15809              		.loc 1 5715 5 is_stmt 1 view .LVU5645
5715:./Libraries/FatFs/Src/ff.c **** 			}
 15810              		.loc 1 5715 9 is_stmt 0 view .LVU5646
 15811 05b4 022A     		cmp	r2, #2
 15812 05b6 0CBF     		ite	eq
 15813 05b8 0421     		moveq	r1, #4
 15814 05ba 0121     		movne	r1, #1
 15815              	.L1360:
 15816              	.LVL1540:
5721:./Libraries/FatFs/Src/ff.c **** 		/* Update system ID in the partition table */
 15817              		.loc 1 5721 2 is_stmt 1 view .LVU5647
5727:./Libraries/FatFs/Src/ff.c **** 			mem_set(buf, 0, ss);
 15818              		.loc 1 5727 3 view .LVU5648
5727:./Libraries/FatFs/Src/ff.c **** 			mem_set(buf, 0, ss);
 15819              		.loc 1 5727 6 is_stmt 0 view .LVU5649
ARM GAS  /tmp/ccaQXGqa.s 			page 475


 15820 05bc 049B     		ldr	r3, [sp, #16]
 15821 05be 002B     		cmp	r3, #0
 15822 05c0 44D1     		bne	.L1362
 15823              	.LBB1816:
 15824              	.LBB1817:
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 15825              		.loc 1 710 8 view .LVU5650
 15826 05c2 049A     		ldr	r2, [sp, #16]
 15827              	.LBE1817:
 15828              	.LBE1816:
 15829 05c4 3346     		mov	r3, r6
 15830 05c6 0698     		ldr	r0, [sp, #24]
 15831              	.L1361:
 15832              	.LVL1541:
 15833              	.LBB1819:
 15834              	.LBB1818:
 709:./Libraries/FatFs/Src/ff.c **** 		*d++ = (BYTE)val;
 15835              		.loc 1 709 2 is_stmt 1 view .LVU5651
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 15836              		.loc 1 710 3 view .LVU5652
 710:./Libraries/FatFs/Src/ff.c **** 	} while (--cnt);
 15837              		.loc 1 710 8 is_stmt 0 view .LVU5653
 15838 05c8 03F8012B 		strb	r2, [r3], #1
 15839              	.LVL1542:
 711:./Libraries/FatFs/Src/ff.c **** }
 15840              		.loc 1 711 10 is_stmt 1 view .LVU5654
 711:./Libraries/FatFs/Src/ff.c **** }
 15841              		.loc 1 711 2 is_stmt 0 view .LVU5655
 15842 05cc 8342     		cmp	r3, r0
 15843 05ce FBD1     		bne	.L1361
 15844              	.LVL1543:
 711:./Libraries/FatFs/Src/ff.c **** }
 15845              		.loc 1 711 2 view .LVU5656
 15846              	.LBE1818:
 15847              	.LBE1819:
5729:./Libraries/FatFs/Src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
 15848              		.loc 1 5729 4 is_stmt 1 view .LVU5657
 15849              	.LBB1820:
 15850              	.LBI1820:
 654:./Libraries/FatFs/Src/ff.c **** {
 15851              		.loc 1 654 6 view .LVU5658
 15852              	.LBB1821:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15853              		.loc 1 656 2 view .LVU5659
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15854              		.loc 1 656 2 is_stmt 0 view .LVU5660
 15855              	.LBE1821:
 15856              	.LBE1820:
5736:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
 15857              		.loc 1 5736 15 view .LVU5661
 15858 05d0 0B9B     		ldr	r3, [sp, #44]
5736:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
 15859              		.loc 1 5736 6 view .LVU5662
 15860 05d2 43F6C165 		movw	r5, #16065
5735:./Libraries/FatFs/Src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
 15861              		.loc 1 5735 20 view .LVU5663
 15862 05d6 86F8C211 		strb	r1, [r6, #450]
ARM GAS  /tmp/ccaQXGqa.s 			page 476


5736:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
 15863              		.loc 1 5736 15 view .LVU5664
 15864 05da 03EB0900 		add	r0, r3, r9
 15865              	.LBB1826:
 15866              	.LBB1827:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15867              		.loc 1 663 9 view .LVU5665
 15868 05de 0799     		ldr	r1, [sp, #28]
 15869              	.LVL1544:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15870              		.loc 1 663 9 view .LVU5666
 15871              	.LBE1827:
 15872              	.LBE1826:
 15873              	.LBB1831:
 15874              	.LBB1832:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15875              		.loc 1 663 26 view .LVU5667
 15876 05e0 1F0A     		lsrs	r7, r3, #8
 15877              	.LBE1832:
 15878              	.LBE1831:
5731:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
 15879              		.loc 1 5731 18 view .LVU5668
 15880 05e2 86F8BE21 		strb	r2, [r6, #446]
5734:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
 15881              		.loc 1 5734 19 view .LVU5669
 15882 05e6 86F8C121 		strb	r2, [r6, #449]
 15883              	.LBB1838:
 15884              	.LBB1828:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15885              		.loc 1 663 9 view .LVU5670
 15886 05ea 86F8C611 		strb	r1, [r6, #454]
 15887              	.LBE1828:
 15888              	.LBE1838:
 15889              	.LBB1839:
 15890              	.LBB1833:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15891              		.loc 1 664 26 view .LVU5671
 15892 05ee 190C     		lsrs	r1, r3, #16
 15893              	.LBE1833:
 15894              	.LBE1839:
 15895              	.LBB1840:
 15896              	.LBB1829:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15897              		.loc 1 664 9 view .LVU5672
 15898 05f0 86F8C721 		strb	r2, [r6, #455]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15899              		.loc 1 665 9 view .LVU5673
 15900 05f4 86F8C821 		strb	r2, [r6, #456]
 666:./Libraries/FatFs/Src/ff.c **** }
 15901              		.loc 1 666 9 view .LVU5674
 15902 05f8 86F8C921 		strb	r2, [r6, #457]
 15903              	.LBE1829:
 15904              	.LBE1840:
 15905              	.LBB1841:
 15906              	.LBB1822:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15907              		.loc 1 656 9 view .LVU5675
ARM GAS  /tmp/ccaQXGqa.s 			page 477


 15908 05fc 5522     		movs	r2, #85
 15909              	.LBE1822:
 15910              	.LBE1841:
 15911              	.LBB1842:
 15912              	.LBB1834:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15913              		.loc 1 663 11 view .LVU5676
 15914 05fe 86F8CA31 		strb	r3, [r6, #458]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15915              		.loc 1 665 26 view .LVU5677
 15916 0602 1B0E     		lsrs	r3, r3, #24
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15917              		.loc 1 665 11 view .LVU5678
 15918 0604 86F8CC11 		strb	r1, [r6, #460]
 15919              	.LBE1834:
 15920              	.LBE1842:
 15921              	.LBB1843:
 15922              	.LBB1823:
 657:./Libraries/FatFs/Src/ff.c **** }
 15923              		.loc 1 657 9 view .LVU5679
 15924 0608 AA21     		movs	r1, #170
 15925              	.LBE1823:
 15926              	.LBE1843:
 15927              	.LBB1844:
 15928              	.LBB1835:
 666:./Libraries/FatFs/Src/ff.c **** }
 15929              		.loc 1 666 11 view .LVU5680
 15930 060a 86F8CD31 		strb	r3, [r6, #461]
 15931              	.LBE1835:
 15932              	.LBE1844:
5732:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
 15933              		.loc 1 5732 20 view .LVU5681
 15934 060e 0123     		movs	r3, #1
 15935              	.LBB1845:
 15936              	.LBB1824:
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15937              		.loc 1 656 9 view .LVU5682
 15938 0610 86F8FE21 		strb	r2, [r6, #510]
 656:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 15939              		.loc 1 656 22 is_stmt 1 view .LVU5683
 15940              	.LVL1545:
 657:./Libraries/FatFs/Src/ff.c **** }
 15941              		.loc 1 657 2 view .LVU5684
 657:./Libraries/FatFs/Src/ff.c **** }
 15942              		.loc 1 657 2 is_stmt 0 view .LVU5685
 15943              	.LBE1824:
 15944              	.LBE1845:
5737:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
 15945              		.loc 1 5737 20 view .LVU5686
 15946 0614 FE22     		movs	r2, #254
 15947              	.LBB1846:
 15948              	.LBB1825:
 657:./Libraries/FatFs/Src/ff.c **** }
 15949              		.loc 1 657 9 view .LVU5687
 15950 0616 86F8FF11 		strb	r1, [r6, #511]
 15951              	.LVL1546:
 657:./Libraries/FatFs/Src/ff.c **** }
ARM GAS  /tmp/ccaQXGqa.s 			page 478


 15952              		.loc 1 657 9 view .LVU5688
 15953              	.LBE1825:
 15954              	.LBE1846:
5730:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_Boot] = 0;					/* Boot indicator */
 15955              		.loc 1 5730 4 is_stmt 1 view .LVU5689
5731:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
 15956              		.loc 1 5731 4 view .LVU5690
5732:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
 15957              		.loc 1 5732 4 view .LVU5691
5742:./Libraries/FatFs/Src/ff.c **** 		}
 15958              		.loc 1 5742 8 is_stmt 0 view .LVU5692
 15959 061a 3146     		mov	r1, r6
5737:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
 15960              		.loc 1 5737 20 view .LVU5693
 15961 061c 86F8C321 		strb	r2, [r6, #451]
5742:./Libraries/FatFs/Src/ff.c **** 		}
 15962              		.loc 1 5742 8 view .LVU5694
 15963 0620 0022     		movs	r2, #0
 15964              	.LBB1847:
 15965              	.LBB1836:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 15966              		.loc 1 664 11 view .LVU5695
 15967 0622 86F8CB71 		strb	r7, [r6, #459]
 15968              	.LBE1836:
 15969              	.LBE1847:
5732:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
 15970              		.loc 1 5732 20 view .LVU5696
 15971 0626 86F8BF31 		strb	r3, [r6, #447]
5733:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
 15972              		.loc 1 5733 4 is_stmt 1 view .LVU5697
5733:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
 15973              		.loc 1 5733 19 is_stmt 0 view .LVU5698
 15974 062a 86F8C031 		strb	r3, [r6, #448]
5734:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
 15975              		.loc 1 5734 4 is_stmt 1 view .LVU5699
5735:./Libraries/FatFs/Src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
 15976              		.loc 1 5735 4 view .LVU5700
5736:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
 15977              		.loc 1 5736 4 view .LVU5701
5736:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
 15978              		.loc 1 5736 6 is_stmt 0 view .LVU5702
 15979 062e B0FBF5F0 		udiv	r0, r0, r5
 15980              	.LVL1547:
5737:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
 15981              		.loc 1 5737 4 is_stmt 1 view .LVU5703
5738:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
 15982              		.loc 1 5738 4 view .LVU5704
5738:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
 15983              		.loc 1 5738 30 is_stmt 0 view .LVU5705
 15984 0632 8508     		lsrs	r5, r0, #2
5739:./Libraries/FatFs/Src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
 15985              		.loc 1 5739 21 view .LVU5706
 15986 0634 86F8C501 		strb	r0, [r6, #453]
5742:./Libraries/FatFs/Src/ff.c **** 		}
 15987              		.loc 1 5742 8 view .LVU5707
 15988 0638 2046     		mov	r0, r4
 15989              	.LVL1548:
ARM GAS  /tmp/ccaQXGqa.s 			page 479


5738:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
 15990              		.loc 1 5738 21 view .LVU5708
 15991 063a 45F03F05 		orr	r5, r5, #63
5738:./Libraries/FatFs/Src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
 15992              		.loc 1 5738 19 view .LVU5709
 15993 063e 86F8C451 		strb	r5, [r6, #452]
5739:./Libraries/FatFs/Src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
 15994              		.loc 1 5739 4 is_stmt 1 view .LVU5710
5740:./Libraries/FatFs/Src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
 15995              		.loc 1 5740 4 view .LVU5711
 15996              	.LVL1549:
 15997              	.LBB1848:
 15998              	.LBI1826:
 661:./Libraries/FatFs/Src/ff.c **** {
 15999              		.loc 1 661 6 view .LVU5712
 16000              	.LBB1830:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16001              		.loc 1 663 2 view .LVU5713
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16002              		.loc 1 663 22 view .LVU5714
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16003              		.loc 1 664 2 view .LVU5715
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16004              		.loc 1 664 22 view .LVU5716
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 16005              		.loc 1 665 2 view .LVU5717
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 16006              		.loc 1 665 22 view .LVU5718
 666:./Libraries/FatFs/Src/ff.c **** }
 16007              		.loc 1 666 2 view .LVU5719
 666:./Libraries/FatFs/Src/ff.c **** }
 16008              		.loc 1 666 2 is_stmt 0 view .LVU5720
 16009              	.LBE1830:
 16010              	.LBE1848:
5741:./Libraries/FatFs/Src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
 16011              		.loc 1 5741 4 is_stmt 1 view .LVU5721
 16012              	.LBB1849:
 16013              	.LBI1831:
 661:./Libraries/FatFs/Src/ff.c **** {
 16014              		.loc 1 661 6 view .LVU5722
 16015              	.LBB1837:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16016              		.loc 1 663 2 view .LVU5723
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16017              		.loc 1 663 22 view .LVU5724
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16018              		.loc 1 664 2 view .LVU5725
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16019              		.loc 1 664 22 view .LVU5726
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 16020              		.loc 1 665 2 view .LVU5727
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 16021              		.loc 1 665 22 view .LVU5728
 666:./Libraries/FatFs/Src/ff.c **** }
 16022              		.loc 1 666 2 view .LVU5729
 666:./Libraries/FatFs/Src/ff.c **** }
 16023              		.loc 1 666 2 is_stmt 0 view .LVU5730
ARM GAS  /tmp/ccaQXGqa.s 			page 480


 16024              	.LBE1837:
 16025              	.LBE1849:
5742:./Libraries/FatFs/Src/ff.c **** 		}
 16026              		.loc 1 5742 4 is_stmt 1 view .LVU5731
5742:./Libraries/FatFs/Src/ff.c **** 		}
 16027              		.loc 1 5742 8 is_stmt 0 view .LVU5732
 16028 0642 FFF7FEFF 		bl	disk_write
 16029              	.LVL1550:
5742:./Libraries/FatFs/Src/ff.c **** 		}
 16030              		.loc 1 5742 7 view .LVU5733
 16031 0646 0028     		cmp	r0, #0
 16032 0648 7FF499AE 		bne	.L1370
 16033              	.LVL1551:
 16034              	.L1362:
5746:./Libraries/FatFs/Src/ff.c **** 
 16035              		.loc 1 5746 2 is_stmt 1 view .LVU5734
5746:./Libraries/FatFs/Src/ff.c **** 
 16036              		.loc 1 5746 6 is_stmt 0 view .LVU5735
 16037 064c 0022     		movs	r2, #0
 16038 064e 2046     		mov	r0, r4
 16039 0650 1146     		mov	r1, r2
 16040 0652 FFF7FEFF 		bl	disk_ioctl
 16041              	.LVL1552:
5328:./Libraries/FatFs/Src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 16042              		.loc 1 5328 22 view .LVU5736
 16043 0656 0038     		subs	r0, r0, #0
 16044 0658 18BF     		it	ne
 16045 065a 0120     		movne	r0, #1
 16046 065c 07E5     		b	.L1413
 16047              	.LVL1553:
 16048              	.L1429:
5681:./Libraries/FatFs/Src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
 16049              		.loc 1 5681 5 is_stmt 1 view .LVU5737
 16050              	.LBB1850:
 16051              	.LBI1850:
 661:./Libraries/FatFs/Src/ff.c **** {
 16052              		.loc 1 661 6 view .LVU5738
 16053              	.LBB1851:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16054              		.loc 1 663 2 view .LVU5739
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16055              		.loc 1 664 9 is_stmt 0 view .LVU5740
 16056 065e FF23     		movs	r3, #255
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16057              		.loc 1 663 9 view .LVU5741
 16058 0660 F821     		movs	r1, #248
 16059              	.LBE1851:
 16060              	.LBE1850:
 16061              	.LBB1853:
 16062              	.LBB1854:
 666:./Libraries/FatFs/Src/ff.c **** }
 16063              		.loc 1 666 9 view .LVU5742
 16064 0662 0F22     		movs	r2, #15
 16065              	.LBE1854:
 16066              	.LBE1853:
 16067              	.LBB1856:
 16068              	.LBB1852:
ARM GAS  /tmp/ccaQXGqa.s 			page 481


 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16069              		.loc 1 663 9 view .LVU5743
 16070 0664 3170     		strb	r1, [r6]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16071              		.loc 1 663 22 is_stmt 1 view .LVU5744
 16072              	.LVL1554:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16073              		.loc 1 664 2 view .LVU5745
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16074              		.loc 1 664 9 is_stmt 0 view .LVU5746
 16075 0666 7370     		strb	r3, [r6, #1]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16076              		.loc 1 664 22 is_stmt 1 view .LVU5747
 16077              	.LVL1555:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 16078              		.loc 1 665 2 view .LVU5748
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 16079              		.loc 1 665 9 is_stmt 0 view .LVU5749
 16080 0668 B370     		strb	r3, [r6, #2]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 16081              		.loc 1 665 22 is_stmt 1 view .LVU5750
 16082              	.LVL1556:
 666:./Libraries/FatFs/Src/ff.c **** }
 16083              		.loc 1 666 2 view .LVU5751
 666:./Libraries/FatFs/Src/ff.c **** }
 16084              		.loc 1 666 9 is_stmt 0 view .LVU5752
 16085 066a F370     		strb	r3, [r6, #3]
 16086              	.LVL1557:
 666:./Libraries/FatFs/Src/ff.c **** }
 16087              		.loc 1 666 9 view .LVU5753
 16088              	.LBE1852:
 16089              	.LBE1856:
5682:./Libraries/FatFs/Src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
 16090              		.loc 1 5682 5 is_stmt 1 view .LVU5754
 16091              	.LBB1857:
 16092              	.LBI1857:
 661:./Libraries/FatFs/Src/ff.c **** {
 16093              		.loc 1 661 6 view .LVU5755
 16094              	.LBB1858:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16095              		.loc 1 663 2 view .LVU5756
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16096              		.loc 1 663 9 is_stmt 0 view .LVU5757
 16097 066c 3371     		strb	r3, [r6, #4]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16098              		.loc 1 663 22 is_stmt 1 view .LVU5758
 16099              	.LVL1558:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16100              		.loc 1 664 2 view .LVU5759
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16101              		.loc 1 664 9 is_stmt 0 view .LVU5760
 16102 066e 7371     		strb	r3, [r6, #5]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16103              		.loc 1 664 22 is_stmt 1 view .LVU5761
 16104              	.LVL1559:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 16105              		.loc 1 665 2 view .LVU5762
ARM GAS  /tmp/ccaQXGqa.s 			page 482


 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 16106              		.loc 1 665 9 is_stmt 0 view .LVU5763
 16107 0670 B371     		strb	r3, [r6, #6]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 16108              		.loc 1 665 22 is_stmt 1 view .LVU5764
 16109              	.LVL1560:
 666:./Libraries/FatFs/Src/ff.c **** }
 16110              		.loc 1 666 2 view .LVU5765
 666:./Libraries/FatFs/Src/ff.c **** }
 16111              		.loc 1 666 9 is_stmt 0 view .LVU5766
 16112 0672 F371     		strb	r3, [r6, #7]
 16113              	.LVL1561:
 666:./Libraries/FatFs/Src/ff.c **** }
 16114              		.loc 1 666 9 view .LVU5767
 16115              	.LBE1858:
 16116              	.LBE1857:
5683:./Libraries/FatFs/Src/ff.c **** 			} else {
 16117              		.loc 1 5683 5 is_stmt 1 view .LVU5768
 16118              	.LBB1859:
 16119              	.LBI1853:
 661:./Libraries/FatFs/Src/ff.c **** {
 16120              		.loc 1 661 6 view .LVU5769
 16121              	.LBB1855:
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16122              		.loc 1 663 2 view .LVU5770
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16123              		.loc 1 663 9 is_stmt 0 view .LVU5771
 16124 0674 3372     		strb	r3, [r6, #8]
 663:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16125              		.loc 1 663 22 is_stmt 1 view .LVU5772
 16126              	.LVL1562:
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16127              		.loc 1 664 2 view .LVU5773
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16128              		.loc 1 664 9 is_stmt 0 view .LVU5774
 16129 0676 7372     		strb	r3, [r6, #9]
 664:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 16130              		.loc 1 664 22 is_stmt 1 view .LVU5775
 16131              	.LVL1563:
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 16132              		.loc 1 665 2 view .LVU5776
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 16133              		.loc 1 665 9 is_stmt 0 view .LVU5777
 16134 0678 B372     		strb	r3, [r6, #10]
 665:./Libraries/FatFs/Src/ff.c **** 	*ptr++ = (BYTE)val;
 16135              		.loc 1 665 22 is_stmt 1 view .LVU5778
 16136              	.LVL1564:
 666:./Libraries/FatFs/Src/ff.c **** }
 16137              		.loc 1 666 2 view .LVU5779
 666:./Libraries/FatFs/Src/ff.c **** }
 16138              		.loc 1 666 9 is_stmt 0 view .LVU5780
 16139 067a F272     		strb	r2, [r6, #11]
 667:./Libraries/FatFs/Src/ff.c **** 
 16140              		.loc 1 667 1 view .LVU5781
 16141 067c 39E6     		b	.L1352
 16142              	.LVL1565:
 16143              	.L1378:
ARM GAS  /tmp/ccaQXGqa.s 			page 483


 667:./Libraries/FatFs/Src/ff.c **** 
 16144              		.loc 1 667 1 view .LVU5782
 16145              	.LBE1855:
 16146              	.LBE1859:
5713:./Libraries/FatFs/Src/ff.c **** 			} else {
 16147              		.loc 1 5713 9 view .LVU5783
 16148 067e 0621     		movs	r1, #6
 16149 0680 9CE7     		b	.L1360
 16150              	.L1377:
5710:./Libraries/FatFs/Src/ff.c **** 		} else {
 16151              		.loc 1 5710 8 view .LVU5784
 16152 0682 0C21     		movs	r1, #12
 16153 0684 9AE7     		b	.L1360
 16154              	.L1435:
 16155 0686 00BF     		.align	2
 16156              	.L1434:
 16157 0688 0A00FFFF 		.word	-65526
 16158 068c 02000000 		.word	.LANCHOR5+2
 16159 0690 02000000 		.word	.LANCHOR4+2
 16160 0694 0C000000 		.word	.LC2
 16161 0698 FFFFFE0F 		.word	268369919
 16162              		.cfi_endproc
 16163              	.LFE391:
 16165              		.section	.text.f_gets,"ax",%progbits
 16166              		.align	1
 16167              		.p2align 2,,3
 16168              		.global	f_gets
 16169              		.syntax unified
 16170              		.thumb
 16171              		.thumb_func
 16172              		.fpu fpv5-d16
 16174              	f_gets:
 16175              	.LVL1566:
 16176              	.LFB392:
5835:./Libraries/FatFs/Src/ff.c **** 	int n = 0;
 16177              		.loc 1 5835 1 is_stmt 1 view -0
 16178              		.cfi_startproc
 16179              		@ args = 0, pretend = 0, frame = 8
 16180              		@ frame_needed = 0, uses_anonymous_args = 0
5836:./Libraries/FatFs/Src/ff.c **** 	TCHAR c, *p = buff;
 16181              		.loc 1 5836 2 view .LVU5786
5837:./Libraries/FatFs/Src/ff.c **** 	BYTE s[2];
 16182              		.loc 1 5837 2 view .LVU5787
5835:./Libraries/FatFs/Src/ff.c **** 	int n = 0;
 16183              		.loc 1 5835 1 is_stmt 0 view .LVU5788
 16184 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 16185              	.LCFI162:
 16186              		.cfi_def_cfa_offset 24
 16187              		.cfi_offset 4, -24
 16188              		.cfi_offset 5, -20
 16189              		.cfi_offset 6, -16
 16190              		.cfi_offset 7, -12
 16191              		.cfi_offset 8, -8
 16192              		.cfi_offset 14, -4
5836:./Libraries/FatFs/Src/ff.c **** 	TCHAR c, *p = buff;
 16193              		.loc 1 5836 6 view .LVU5789
 16194 0004 0024     		movs	r4, #0
ARM GAS  /tmp/ccaQXGqa.s 			page 484


5835:./Libraries/FatFs/Src/ff.c **** 	int n = 0;
 16195              		.loc 1 5835 1 view .LVU5790
 16196 0006 82B0     		sub	sp, sp, #8
 16197              	.LCFI163:
 16198              		.cfi_def_cfa_offset 32
5835:./Libraries/FatFs/Src/ff.c **** 	int n = 0;
 16199              		.loc 1 5835 1 view .LVU5791
 16200 0008 8046     		mov	r8, r0
 16201              	.LVL1567:
5838:./Libraries/FatFs/Src/ff.c **** 	UINT rc;
 16202              		.loc 1 5838 2 is_stmt 1 view .LVU5792
5839:./Libraries/FatFs/Src/ff.c **** 
 16203              		.loc 1 5839 2 view .LVU5793
5842:./Libraries/FatFs/Src/ff.c **** #if _LFN_UNICODE
 16204              		.loc 1 5842 2 view .LVU5794
 16205 000a 4F1E     		subs	r7, r1, #1
5835:./Libraries/FatFs/Src/ff.c **** 	int n = 0;
 16206              		.loc 1 5835 1 is_stmt 0 view .LVU5795
 16207 000c 1646     		mov	r6, r2
5837:./Libraries/FatFs/Src/ff.c **** 	BYTE s[2];
 16208              		.loc 1 5837 12 view .LVU5796
 16209 000e 0546     		mov	r5, r0
 16210              	.LVL1568:
 16211              	.L1441:
5887:./Libraries/FatFs/Src/ff.c **** 		if (rc != 1) break;
 16212              		.loc 1 5887 3 is_stmt 1 view .LVU5797
5842:./Libraries/FatFs/Src/ff.c **** #if _LFN_UNICODE
 16213              		.loc 1 5842 8 view .LVU5798
 16214 0010 BC42     		cmp	r4, r7
5887:./Libraries/FatFs/Src/ff.c **** 		if (rc != 1) break;
 16215              		.loc 1 5887 3 is_stmt 0 view .LVU5799
 16216 0012 01AB     		add	r3, sp, #4
 16217 0014 4FF00102 		mov	r2, #1
 16218 0018 6946     		mov	r1, sp
 16219 001a 3046     		mov	r0, r6
5842:./Libraries/FatFs/Src/ff.c **** #if _LFN_UNICODE
 16220              		.loc 1 5842 8 view .LVU5800
 16221 001c 14DA     		bge	.L1444
 16222              	.LVL1569:
5887:./Libraries/FatFs/Src/ff.c **** 		if (rc != 1) break;
 16223              		.loc 1 5887 3 view .LVU5801
 16224 001e FFF7FEFF 		bl	f_read
 16225              	.LVL1570:
5888:./Libraries/FatFs/Src/ff.c **** 		c = s[0];
 16226              		.loc 1 5888 3 is_stmt 1 view .LVU5802
5889:./Libraries/FatFs/Src/ff.c **** #endif
 16227              		.loc 1 5889 3 view .LVU5803
5892:./Libraries/FatFs/Src/ff.c **** 		n++;
 16228              		.loc 1 5892 3 view .LVU5804
5888:./Libraries/FatFs/Src/ff.c **** 		c = s[0];
 16229              		.loc 1 5888 6 is_stmt 0 view .LVU5805
 16230 0022 019B     		ldr	r3, [sp, #4]
 16231 0024 012B     		cmp	r3, #1
 16232 0026 0FD1     		bne	.L1444
5889:./Libraries/FatFs/Src/ff.c **** #endif
 16233              		.loc 1 5889 5 view .LVU5806
 16234 0028 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
ARM GAS  /tmp/ccaQXGqa.s 			page 485


 16235              	.LVL1571:
5891:./Libraries/FatFs/Src/ff.c **** 		*p++ = c;
 16236              		.loc 1 5891 3 is_stmt 1 view .LVU5807
5891:./Libraries/FatFs/Src/ff.c **** 		*p++ = c;
 16237              		.loc 1 5891 6 is_stmt 0 view .LVU5808
 16238 002c 0D2B     		cmp	r3, #13
 16239 002e EFD0     		beq	.L1441
5894:./Libraries/FatFs/Src/ff.c **** 	}
 16240              		.loc 1 5894 6 view .LVU5809
 16241 0030 0A2B     		cmp	r3, #10
5893:./Libraries/FatFs/Src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
 16242              		.loc 1 5893 4 view .LVU5810
 16243 0032 04F10104 		add	r4, r4, #1
5892:./Libraries/FatFs/Src/ff.c **** 		n++;
 16244              		.loc 1 5892 8 view .LVU5811
 16245 0036 05F8013B 		strb	r3, [r5], #1
 16246              	.LVL1572:
5893:./Libraries/FatFs/Src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
 16247              		.loc 1 5893 3 is_stmt 1 view .LVU5812
5894:./Libraries/FatFs/Src/ff.c **** 	}
 16248              		.loc 1 5894 3 view .LVU5813
5894:./Libraries/FatFs/Src/ff.c **** 	}
 16249              		.loc 1 5894 6 is_stmt 0 view .LVU5814
 16250 003a E9D1     		bne	.L1441
5896:./Libraries/FatFs/Src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 16251              		.loc 1 5896 2 is_stmt 1 view .LVU5815
5896:./Libraries/FatFs/Src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 16252              		.loc 1 5896 5 is_stmt 0 view .LVU5816
 16253 003c 0023     		movs	r3, #0
 16254              	.LVL1573:
5898:./Libraries/FatFs/Src/ff.c **** 
 16255              		.loc 1 5898 1 view .LVU5817
 16256 003e 4046     		mov	r0, r8
5896:./Libraries/FatFs/Src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 16257              		.loc 1 5896 5 view .LVU5818
 16258 0040 2B70     		strb	r3, [r5]
5897:./Libraries/FatFs/Src/ff.c **** }
 16259              		.loc 1 5897 2 is_stmt 1 view .LVU5819
5898:./Libraries/FatFs/Src/ff.c **** 
 16260              		.loc 1 5898 1 is_stmt 0 view .LVU5820
 16261 0042 02B0     		add	sp, sp, #8
 16262              	.LCFI164:
 16263              		.cfi_remember_state
 16264              		.cfi_def_cfa_offset 24
 16265              		@ sp needed
 16266 0044 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 16267              	.LVL1574:
 16268              	.L1444:
 16269              	.LCFI165:
 16270              		.cfi_restore_state
5896:./Libraries/FatFs/Src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 16271              		.loc 1 5896 2 is_stmt 1 view .LVU5821
5896:./Libraries/FatFs/Src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 16272              		.loc 1 5896 5 is_stmt 0 view .LVU5822
 16273 0048 0023     		movs	r3, #0
5897:./Libraries/FatFs/Src/ff.c **** }
 16274              		.loc 1 5897 18 view .LVU5823
ARM GAS  /tmp/ccaQXGqa.s 			page 486


 16275 004a 002C     		cmp	r4, #0
 16276 004c 08BF     		it	eq
 16277 004e 9846     		moveq	r8, r3
 16278              	.LVL1575:
5896:./Libraries/FatFs/Src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 16279              		.loc 1 5896 5 view .LVU5824
 16280 0050 2B70     		strb	r3, [r5]
5897:./Libraries/FatFs/Src/ff.c **** }
 16281              		.loc 1 5897 2 is_stmt 1 view .LVU5825
5898:./Libraries/FatFs/Src/ff.c **** 
 16282              		.loc 1 5898 1 is_stmt 0 view .LVU5826
 16283 0052 4046     		mov	r0, r8
 16284 0054 02B0     		add	sp, sp, #8
 16285              	.LCFI166:
 16286              		.cfi_def_cfa_offset 24
 16287              		@ sp needed
 16288 0056 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
5898:./Libraries/FatFs/Src/ff.c **** 
 16289              		.loc 1 5898 1 view .LVU5827
 16290              		.cfi_endproc
 16291              	.LFE392:
 16293 005a 00BF     		.section	.text.f_putc,"ax",%progbits
 16294              		.align	1
 16295              		.p2align 2,,3
 16296              		.global	f_putc
 16297              		.syntax unified
 16298              		.thumb
 16299              		.thumb_func
 16300              		.fpu fpv5-d16
 16302              	f_putc:
 16303              	.LVL1576:
 16304              	.LFB396:
5984:./Libraries/FatFs/Src/ff.c **** 
5985:./Libraries/FatFs/Src/ff.c **** 
5986:./Libraries/FatFs/Src/ff.c **** static
5987:./Libraries/FatFs/Src/ff.c **** void putc_init (		/* Initialize write buffer */
5988:./Libraries/FatFs/Src/ff.c **** 	putbuff* pb,
5989:./Libraries/FatFs/Src/ff.c **** 	FIL* fp
5990:./Libraries/FatFs/Src/ff.c **** )
5991:./Libraries/FatFs/Src/ff.c **** {
5992:./Libraries/FatFs/Src/ff.c **** 	pb->fp = fp;
5993:./Libraries/FatFs/Src/ff.c **** 	pb->nchr = pb->idx = 0;
5994:./Libraries/FatFs/Src/ff.c **** }
5995:./Libraries/FatFs/Src/ff.c **** 
5996:./Libraries/FatFs/Src/ff.c **** 
5997:./Libraries/FatFs/Src/ff.c **** 
5998:./Libraries/FatFs/Src/ff.c **** int f_putc (
5999:./Libraries/FatFs/Src/ff.c **** 	TCHAR c,	/* A character to be output */
6000:./Libraries/FatFs/Src/ff.c **** 	FIL* fp		/* Pointer to the file object */
6001:./Libraries/FatFs/Src/ff.c **** )
6002:./Libraries/FatFs/Src/ff.c **** {
 16305              		.loc 1 6002 1 is_stmt 1 view -0
 16306              		.cfi_startproc
 16307              		@ args = 0, pretend = 0, frame = 80
 16308              		@ frame_needed = 0, uses_anonymous_args = 0
6003:./Libraries/FatFs/Src/ff.c **** 	putbuff pb;
 16309              		.loc 1 6003 2 view .LVU5829
ARM GAS  /tmp/ccaQXGqa.s 			page 487


6004:./Libraries/FatFs/Src/ff.c **** 
6005:./Libraries/FatFs/Src/ff.c **** 
6006:./Libraries/FatFs/Src/ff.c **** 	putc_init(&pb, fp);
 16310              		.loc 1 6006 2 view .LVU5830
6002:./Libraries/FatFs/Src/ff.c **** 	putbuff pb;
 16311              		.loc 1 6002 1 is_stmt 0 view .LVU5831
 16312 0000 00B5     		push	{lr}
 16313              	.LCFI167:
 16314              		.cfi_def_cfa_offset 4
 16315              		.cfi_offset 14, -4
 16316 0002 95B0     		sub	sp, sp, #84
 16317              	.LCFI168:
 16318              		.cfi_def_cfa_offset 88
 16319              	.LVL1577:
6002:./Libraries/FatFs/Src/ff.c **** 	putbuff pb;
 16320              		.loc 1 6002 1 view .LVU5832
 16321 0004 0A46     		mov	r2, r1
 16322              	.LVL1578:
 16323              	.LBB1860:
 16324              	.LBI1860:
5987:./Libraries/FatFs/Src/ff.c **** 	putbuff* pb,
 16325              		.loc 1 5987 6 is_stmt 1 view .LVU5833
 16326              	.LBB1861:
5992:./Libraries/FatFs/Src/ff.c **** 	pb->nchr = pb->idx = 0;
 16327              		.loc 1 5992 2 view .LVU5834
5993:./Libraries/FatFs/Src/ff.c **** }
 16328              		.loc 1 5993 21 is_stmt 0 view .LVU5835
 16329 0006 0023     		movs	r3, #0
 16330              	.LBE1861:
 16331              	.LBE1860:
6007:./Libraries/FatFs/Src/ff.c **** 	putc_bfd(&pb, c);	/* Put the character */
 16332              		.loc 1 6007 2 view .LVU5836
 16333 0008 0146     		mov	r1, r0
 16334              	.LVL1579:
 16335              		.loc 1 6007 2 view .LVU5837
 16336 000a 01A8     		add	r0, sp, #4
 16337              	.LVL1580:
 16338              	.LBB1864:
 16339              	.LBB1862:
5993:./Libraries/FatFs/Src/ff.c **** }
 16340              		.loc 1 5993 11 view .LVU5838
 16341 000c 0393     		str	r3, [sp, #12]
 16342              	.LVL1581:
5993:./Libraries/FatFs/Src/ff.c **** }
 16343              		.loc 1 5993 11 view .LVU5839
 16344              	.LBE1862:
 16345              	.LBE1864:
 16346              		.loc 1 6007 2 is_stmt 1 view .LVU5840
 16347              	.LBB1865:
 16348              	.LBB1863:
5993:./Libraries/FatFs/Src/ff.c **** }
 16349              		.loc 1 5993 21 is_stmt 0 view .LVU5841
 16350 000e CDE90123 		strd	r2, r3, [sp, #4]
 16351              	.LBE1863:
 16352              	.LBE1865:
 16353              		.loc 1 6007 2 view .LVU5842
 16354 0012 FFF7FEFF 		bl	putc_bfd
ARM GAS  /tmp/ccaQXGqa.s 			page 488


 16355              	.LVL1582:
6008:./Libraries/FatFs/Src/ff.c **** 	return putc_flush(&pb);
 16356              		.loc 1 6008 2 is_stmt 1 view .LVU5843
 16357              		.loc 1 6008 9 is_stmt 0 view .LVU5844
 16358 0016 01A8     		add	r0, sp, #4
 16359 0018 FFF7FEFF 		bl	putc_flush
 16360              	.LVL1583:
6009:./Libraries/FatFs/Src/ff.c **** }
 16361              		.loc 1 6009 1 view .LVU5845
 16362 001c 15B0     		add	sp, sp, #84
 16363              	.LCFI169:
 16364              		.cfi_def_cfa_offset 4
 16365              		@ sp needed
 16366 001e 5DF804FB 		ldr	pc, [sp], #4
 16367              		.cfi_endproc
 16368              	.LFE396:
 16370 0022 00BF     		.section	.text.f_puts,"ax",%progbits
 16371              		.align	1
 16372              		.p2align 2,,3
 16373              		.global	f_puts
 16374              		.syntax unified
 16375              		.thumb
 16376              		.thumb_func
 16377              		.fpu fpv5-d16
 16379              	f_puts:
 16380              	.LVL1584:
 16381              	.LFB397:
6010:./Libraries/FatFs/Src/ff.c **** 
6011:./Libraries/FatFs/Src/ff.c **** 
6012:./Libraries/FatFs/Src/ff.c **** 
6013:./Libraries/FatFs/Src/ff.c **** 
6014:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
6015:./Libraries/FatFs/Src/ff.c **** /* Put a string to the file                                              */
6016:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
6017:./Libraries/FatFs/Src/ff.c **** 
6018:./Libraries/FatFs/Src/ff.c **** int f_puts (
6019:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* str,	/* Pointer to the string to be output */
6020:./Libraries/FatFs/Src/ff.c **** 	FIL* fp				/* Pointer to the file object */
6021:./Libraries/FatFs/Src/ff.c **** )
6022:./Libraries/FatFs/Src/ff.c **** {
 16382              		.loc 1 6022 1 is_stmt 1 view -0
 16383              		.cfi_startproc
 16384              		@ args = 0, pretend = 0, frame = 80
 16385              		@ frame_needed = 0, uses_anonymous_args = 0
6023:./Libraries/FatFs/Src/ff.c **** 	putbuff pb;
 16386              		.loc 1 6023 2 view .LVU5847
6024:./Libraries/FatFs/Src/ff.c **** 
6025:./Libraries/FatFs/Src/ff.c **** 
6026:./Libraries/FatFs/Src/ff.c **** 	putc_init(&pb, fp);
 16387              		.loc 1 6026 2 view .LVU5848
6022:./Libraries/FatFs/Src/ff.c **** 	putbuff pb;
 16388              		.loc 1 6022 1 is_stmt 0 view .LVU5849
 16389 0000 30B5     		push	{r4, r5, lr}
 16390              	.LCFI170:
 16391              		.cfi_def_cfa_offset 12
 16392              		.cfi_offset 4, -12
 16393              		.cfi_offset 5, -8
ARM GAS  /tmp/ccaQXGqa.s 			page 489


 16394              		.cfi_offset 14, -4
 16395              	.LBB1866:
 16396              	.LBB1867:
5993:./Libraries/FatFs/Src/ff.c **** }
 16397              		.loc 1 5993 21 view .LVU5850
 16398 0002 0023     		movs	r3, #0
 16399              	.LBE1867:
 16400              	.LBE1866:
6022:./Libraries/FatFs/Src/ff.c **** 	putbuff pb;
 16401              		.loc 1 6022 1 view .LVU5851
 16402 0004 95B0     		sub	sp, sp, #84
 16403              	.LCFI171:
 16404              		.cfi_def_cfa_offset 96
 16405              	.LVL1585:
 16406              	.LBB1870:
 16407              	.LBI1866:
5987:./Libraries/FatFs/Src/ff.c **** 	putbuff* pb,
 16408              		.loc 1 5987 6 is_stmt 1 view .LVU5852
 16409              	.LBB1868:
5992:./Libraries/FatFs/Src/ff.c **** 	pb->nchr = pb->idx = 0;
 16410              		.loc 1 5992 2 view .LVU5853
5993:./Libraries/FatFs/Src/ff.c **** }
 16411              		.loc 1 5993 21 is_stmt 0 view .LVU5854
 16412 0006 CDE90113 		strd	r1, r3, [sp, #4]
 16413              	.LBE1868:
 16414              	.LBE1870:
6027:./Libraries/FatFs/Src/ff.c **** 	while (*str) putc_bfd(&pb, *str++);		/* Put the string */
 16415              		.loc 1 6027 9 view .LVU5855
 16416 000a 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 16417              	.LVL1586:
 16418              	.LBB1871:
 16419              	.LBB1869:
5993:./Libraries/FatFs/Src/ff.c **** }
 16420              		.loc 1 5993 11 view .LVU5856
 16421 000c 0393     		str	r3, [sp, #12]
 16422              	.LVL1587:
5993:./Libraries/FatFs/Src/ff.c **** }
 16423              		.loc 1 5993 11 view .LVU5857
 16424              	.LBE1869:
 16425              	.LBE1871:
 16426              		.loc 1 6027 8 is_stmt 1 view .LVU5858
 16427 000e 69B1     		cbz	r1, .L1459
 16428 0010 0446     		mov	r4, r0
 16429 0012 01AD     		add	r5, sp, #4
 16430              	.LVL1588:
 16431              	.L1453:
 16432              		.loc 1 6027 15 discriminator 2 view .LVU5859
 16433              		.loc 1 6027 15 is_stmt 0 discriminator 2 view .LVU5860
 16434 0014 2846     		mov	r0, r5
 16435 0016 FFF7FEFF 		bl	putc_bfd
 16436              	.LVL1589:
 16437              		.loc 1 6027 8 is_stmt 1 discriminator 2 view .LVU5861
 16438              		.loc 1 6027 9 is_stmt 0 discriminator 2 view .LVU5862
 16439 001a 14F8011F 		ldrb	r1, [r4, #1]!	@ zero_extendqisi2
 16440              	.LVL1590:
 16441              		.loc 1 6027 8 discriminator 2 view .LVU5863
 16442 001e 0029     		cmp	r1, #0
ARM GAS  /tmp/ccaQXGqa.s 			page 490


 16443 0020 F8D1     		bne	.L1453
6028:./Libraries/FatFs/Src/ff.c **** 	return putc_flush(&pb);
 16444              		.loc 1 6028 2 is_stmt 1 view .LVU5864
 16445              		.loc 1 6028 9 is_stmt 0 view .LVU5865
 16446 0022 2846     		mov	r0, r5
 16447 0024 FFF7FEFF 		bl	putc_flush
 16448              	.LVL1591:
6029:./Libraries/FatFs/Src/ff.c **** }
 16449              		.loc 1 6029 1 view .LVU5866
 16450 0028 15B0     		add	sp, sp, #84
 16451              	.LCFI172:
 16452              		.cfi_remember_state
 16453              		.cfi_def_cfa_offset 12
 16454              		@ sp needed
 16455 002a 30BD     		pop	{r4, r5, pc}
 16456              	.LVL1592:
 16457              	.L1459:
 16458              	.LCFI173:
 16459              		.cfi_restore_state
 16460              		.loc 1 6029 1 view .LVU5867
 16461 002c 01AD     		add	r5, sp, #4
 16462              	.LVL1593:
6028:./Libraries/FatFs/Src/ff.c **** 	return putc_flush(&pb);
 16463              		.loc 1 6028 2 is_stmt 1 view .LVU5868
6028:./Libraries/FatFs/Src/ff.c **** 	return putc_flush(&pb);
 16464              		.loc 1 6028 9 is_stmt 0 view .LVU5869
 16465 002e 2846     		mov	r0, r5
 16466              	.LVL1594:
6028:./Libraries/FatFs/Src/ff.c **** 	return putc_flush(&pb);
 16467              		.loc 1 6028 9 view .LVU5870
 16468 0030 FFF7FEFF 		bl	putc_flush
 16469              	.LVL1595:
 16470              		.loc 1 6029 1 view .LVU5871
 16471 0034 15B0     		add	sp, sp, #84
 16472              	.LCFI174:
 16473              		.cfi_def_cfa_offset 12
 16474              		@ sp needed
 16475 0036 30BD     		pop	{r4, r5, pc}
 16476              		.cfi_endproc
 16477              	.LFE397:
 16479              		.section	.text.f_printf,"ax",%progbits
 16480              		.align	1
 16481              		.p2align 2,,3
 16482              		.global	f_printf
 16483              		.syntax unified
 16484              		.thumb
 16485              		.thumb_func
 16486              		.fpu fpv5-d16
 16488              	f_printf:
 16489              	.LVL1596:
 16490              	.LFB398:
6030:./Libraries/FatFs/Src/ff.c **** 
6031:./Libraries/FatFs/Src/ff.c **** 
6032:./Libraries/FatFs/Src/ff.c **** 
6033:./Libraries/FatFs/Src/ff.c **** 
6034:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
6035:./Libraries/FatFs/Src/ff.c **** /* Put a formatted string to the file                                    */
ARM GAS  /tmp/ccaQXGqa.s 			page 491


6036:./Libraries/FatFs/Src/ff.c **** /*-----------------------------------------------------------------------*/
6037:./Libraries/FatFs/Src/ff.c **** 
6038:./Libraries/FatFs/Src/ff.c **** int f_printf (
6039:./Libraries/FatFs/Src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
6040:./Libraries/FatFs/Src/ff.c **** 	const TCHAR* fmt,	/* Pointer to the format string */
6041:./Libraries/FatFs/Src/ff.c **** 	...					/* Optional arguments... */
6042:./Libraries/FatFs/Src/ff.c **** )
6043:./Libraries/FatFs/Src/ff.c **** {
 16491              		.loc 1 6043 1 is_stmt 1 view -0
 16492              		.cfi_startproc
 16493              		@ args = 4, pretend = 12, frame = 120
 16494              		@ frame_needed = 0, uses_anonymous_args = 1
6044:./Libraries/FatFs/Src/ff.c **** 	va_list arp;
 16495              		.loc 1 6044 2 view .LVU5873
6045:./Libraries/FatFs/Src/ff.c **** 	putbuff pb;
 16496              		.loc 1 6045 2 view .LVU5874
6046:./Libraries/FatFs/Src/ff.c **** 	BYTE f, r;
 16497              		.loc 1 6046 2 view .LVU5875
6047:./Libraries/FatFs/Src/ff.c **** 	UINT i, j, w;
 16498              		.loc 1 6047 2 view .LVU5876
6048:./Libraries/FatFs/Src/ff.c **** 	DWORD v;
 16499              		.loc 1 6048 2 view .LVU5877
6049:./Libraries/FatFs/Src/ff.c **** 	TCHAR c, d, str[32], *p;
 16500              		.loc 1 6049 2 view .LVU5878
6050:./Libraries/FatFs/Src/ff.c **** 
6051:./Libraries/FatFs/Src/ff.c **** 
6052:./Libraries/FatFs/Src/ff.c **** 	putc_init(&pb, fp);
 16501              		.loc 1 6052 2 view .LVU5879
6043:./Libraries/FatFs/Src/ff.c **** 	va_list arp;
 16502              		.loc 1 6043 1 is_stmt 0 view .LVU5880
 16503 0000 0EB4     		push	{r1, r2, r3}
 16504              	.LCFI175:
 16505              		.cfi_def_cfa_offset 12
 16506              		.cfi_offset 1, -12
 16507              		.cfi_offset 2, -8
 16508              		.cfi_offset 3, -4
 16509 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 16510              	.LCFI176:
 16511              		.cfi_def_cfa_offset 48
 16512              		.cfi_offset 4, -48
 16513              		.cfi_offset 5, -44
 16514              		.cfi_offset 6, -40
 16515              		.cfi_offset 7, -36
 16516              		.cfi_offset 8, -32
 16517              		.cfi_offset 9, -28
 16518              		.cfi_offset 10, -24
 16519              		.cfi_offset 11, -20
 16520              		.cfi_offset 14, -16
 16521 0006 9EB0     		sub	sp, sp, #120
 16522              	.LCFI177:
 16523              		.cfi_def_cfa_offset 168
 16524              	.LVL1597:
 16525              	.LBB1872:
 16526              	.LBB1873:
5993:./Libraries/FatFs/Src/ff.c **** }
 16527              		.loc 1 5993 21 view .LVU5881
 16528 0008 0024     		movs	r4, #0
ARM GAS  /tmp/ccaQXGqa.s 			page 492


 16529              	.LBE1873:
 16530              	.LBE1872:
6043:./Libraries/FatFs/Src/ff.c **** 	va_list arp;
 16531              		.loc 1 6043 1 view .LVU5882
 16532 000a 27AA     		add	r2, sp, #156
 16533              	.LVL1598:
 16534              	.LBB1877:
 16535              	.LBI1872:
5987:./Libraries/FatFs/Src/ff.c **** 	putbuff* pb,
 16536              		.loc 1 5987 6 is_stmt 1 view .LVU5883
 16537              	.LBB1874:
5992:./Libraries/FatFs/Src/ff.c **** 	pb->nchr = pb->idx = 0;
 16538              		.loc 1 5992 2 view .LVU5884
 16539 000c 0DF12C08 		add	r8, sp, #44
 16540              	.LVL1599:
5992:./Libraries/FatFs/Src/ff.c **** 	pb->nchr = pb->idx = 0;
 16541              		.loc 1 5992 9 is_stmt 0 view .LVU5885
 16542 0010 0B90     		str	r0, [sp, #44]
5993:./Libraries/FatFs/Src/ff.c **** }
 16543              		.loc 1 5993 2 is_stmt 1 view .LVU5886
 16544              	.LBE1874:
 16545              	.LBE1877:
6043:./Libraries/FatFs/Src/ff.c **** 	va_list arp;
 16546              		.loc 1 6043 1 is_stmt 0 view .LVU5887
 16547 0012 52F8047B 		ldr	r7, [r2], #4
 16548              	.LBB1878:
 16549              	.LBB1875:
5993:./Libraries/FatFs/Src/ff.c **** }
 16550              		.loc 1 5993 21 view .LVU5888
 16551 0016 0C94     		str	r4, [sp, #48]
 16552              	.LBE1875:
 16553              	.LBE1878:
6053:./Libraries/FatFs/Src/ff.c **** 
6054:./Libraries/FatFs/Src/ff.c **** 	va_start(arp, fmt);
6055:./Libraries/FatFs/Src/ff.c **** 
6056:./Libraries/FatFs/Src/ff.c **** 	for (;;) {
6057:./Libraries/FatFs/Src/ff.c **** 		c = *fmt++;
 16554              		.loc 1 6057 11 view .LVU5889
 16555 0018 3B46     		mov	r3, r7
6054:./Libraries/FatFs/Src/ff.c **** 
 16556              		.loc 1 6054 2 view .LVU5890
 16557 001a 0292     		str	r2, [sp, #8]
 16558              	.LBB1879:
 16559              	.LBB1876:
5993:./Libraries/FatFs/Src/ff.c **** }
 16560              		.loc 1 5993 11 view .LVU5891
 16561 001c 0D94     		str	r4, [sp, #52]
 16562              	.LVL1600:
5993:./Libraries/FatFs/Src/ff.c **** }
 16563              		.loc 1 5993 11 view .LVU5892
 16564              	.LBE1876:
 16565              	.LBE1879:
6054:./Libraries/FatFs/Src/ff.c **** 
 16566              		.loc 1 6054 2 is_stmt 1 view .LVU5893
6056:./Libraries/FatFs/Src/ff.c **** 		c = *fmt++;
 16567              		.loc 1 6056 2 view .LVU5894
 16568              		.loc 1 6057 3 view .LVU5895
ARM GAS  /tmp/ccaQXGqa.s 			page 493


 16569              		.loc 1 6057 5 is_stmt 0 view .LVU5896
 16570 001e 13F8011B 		ldrb	r1, [r3], #1	@ zero_extendqisi2
 16571              	.LVL1601:
6058:./Libraries/FatFs/Src/ff.c **** 		if (c == 0) break;			/* End of string */
 16572              		.loc 1 6058 3 is_stmt 1 view .LVU5897
 16573              		.loc 1 6058 6 is_stmt 0 view .LVU5898
 16574 0022 49B9     		cbnz	r1, .L1462
 16575 0024 5AE0     		b	.L1461
 16576              	.LVL1602:
 16577              	.L1558:
6059:./Libraries/FatFs/Src/ff.c **** 		if (c != '%') {				/* Non escape character */
6060:./Libraries/FatFs/Src/ff.c **** 			putc_bfd(&pb, c);
 16578              		.loc 1 6060 4 is_stmt 1 view .LVU5899
 16579 0026 4046     		mov	r0, r8
6061:./Libraries/FatFs/Src/ff.c **** 			continue;
 16580              		.loc 1 6061 4 is_stmt 0 view .LVU5900
 16581 0028 1F46     		mov	r7, r3
6060:./Libraries/FatFs/Src/ff.c **** 			continue;
 16582              		.loc 1 6060 4 view .LVU5901
 16583 002a FFF7FEFF 		bl	putc_bfd
 16584              	.LVL1603:
 16585              		.loc 1 6061 4 is_stmt 1 view .LVU5902
 16586              	.L1464:
6056:./Libraries/FatFs/Src/ff.c **** 		c = *fmt++;
 16587              		.loc 1 6056 2 view .LVU5903
6057:./Libraries/FatFs/Src/ff.c **** 		if (c == 0) break;			/* End of string */
 16588              		.loc 1 6057 3 view .LVU5904
6057:./Libraries/FatFs/Src/ff.c **** 		if (c == 0) break;			/* End of string */
 16589              		.loc 1 6057 11 is_stmt 0 view .LVU5905
 16590 002e 3B46     		mov	r3, r7
 16591              	.LVL1604:
6057:./Libraries/FatFs/Src/ff.c **** 		if (c == 0) break;			/* End of string */
 16592              		.loc 1 6057 5 view .LVU5906
 16593 0030 13F8011B 		ldrb	r1, [r3], #1	@ zero_extendqisi2
 16594              	.LVL1605:
6058:./Libraries/FatFs/Src/ff.c **** 		if (c != '%') {				/* Non escape character */
 16595              		.loc 1 6058 3 is_stmt 1 view .LVU5907
6058:./Libraries/FatFs/Src/ff.c **** 		if (c != '%') {				/* Non escape character */
 16596              		.loc 1 6058 6 is_stmt 0 view .LVU5908
 16597 0034 0029     		cmp	r1, #0
 16598 0036 51D0     		beq	.L1461
 16599              	.LVL1606:
 16600              	.L1462:
6059:./Libraries/FatFs/Src/ff.c **** 			putc_bfd(&pb, c);
 16601              		.loc 1 6059 3 is_stmt 1 view .LVU5909
6059:./Libraries/FatFs/Src/ff.c **** 			putc_bfd(&pb, c);
 16602              		.loc 1 6059 6 is_stmt 0 view .LVU5910
 16603 0038 2529     		cmp	r1, #37
 16604 003a F4D1     		bne	.L1558
6062:./Libraries/FatFs/Src/ff.c **** 		}
6063:./Libraries/FatFs/Src/ff.c **** 		w = f = 0;
 16605              		.loc 1 6063 3 is_stmt 1 view .LVU5911
 16606              	.LVL1607:
6064:./Libraries/FatFs/Src/ff.c **** 		c = *fmt++;
 16607              		.loc 1 6064 3 view .LVU5912
 16608              		.loc 1 6064 5 is_stmt 0 view .LVU5913
 16609 003c 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
ARM GAS  /tmp/ccaQXGqa.s 			page 494


 16610              	.LVL1608:
6065:./Libraries/FatFs/Src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 16611              		.loc 1 6065 3 is_stmt 1 view .LVU5914
 16612              		.loc 1 6065 6 is_stmt 0 view .LVU5915
 16613 003e 3029     		cmp	r1, #48
 16614 0040 00F01081 		beq	.L1559
6066:./Libraries/FatFs/Src/ff.c **** 			f = 1; c = *fmt++;
6067:./Libraries/FatFs/Src/ff.c **** 		} else {
6068:./Libraries/FatFs/Src/ff.c **** 			if (c == '-') {			/* Flag: left justified */
 16615              		.loc 1 6068 4 is_stmt 1 view .LVU5916
 16616              		.loc 1 6068 7 is_stmt 0 view .LVU5917
 16617 0044 2D29     		cmp	r1, #45
 16618 0046 00F01281 		beq	.L1560
6064:./Libraries/FatFs/Src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 16619              		.loc 1 6064 11 view .LVU5918
 16620 004a 0237     		adds	r7, r7, #2
 16621              	.LVL1609:
6063:./Libraries/FatFs/Src/ff.c **** 		c = *fmt++;
 16622              		.loc 1 6063 9 view .LVU5919
 16623 004c 4FF0000A 		mov	r10, #0
 16624              	.LVL1610:
 16625              	.L1466:
6069:./Libraries/FatFs/Src/ff.c **** 				f = 2; c = *fmt++;
6070:./Libraries/FatFs/Src/ff.c **** 			}
6071:./Libraries/FatFs/Src/ff.c **** 		}
6072:./Libraries/FatFs/Src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
 16626              		.loc 1 6072 9 is_stmt 1 view .LVU5920
 16627 0050 A1F13003 		sub	r3, r1, #48
 16628 0054 0024     		movs	r4, #0
 16629 0056 092B     		cmp	r3, #9
 16630 0058 0AD8     		bhi	.L1469
 16631              	.LVL1611:
 16632              	.L1468:
6073:./Libraries/FatFs/Src/ff.c **** 			w = w * 10 + c - '0';
 16633              		.loc 1 6073 4 view .LVU5921
 16634              		.loc 1 6073 10 is_stmt 0 view .LVU5922
 16635 005a 04EB8404 		add	r4, r4, r4, lsl #2
 16636              	.LVL1612:
 16637              		.loc 1 6073 15 view .LVU5923
 16638 005e 01EB4404 		add	r4, r1, r4, lsl #1
6074:./Libraries/FatFs/Src/ff.c **** 			c = *fmt++;
 16639              		.loc 1 6074 6 view .LVU5924
 16640 0062 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 16641              	.LVL1613:
6072:./Libraries/FatFs/Src/ff.c **** 			w = w * 10 + c - '0';
 16642              		.loc 1 6072 9 view .LVU5925
 16643 0066 A1F13003 		sub	r3, r1, #48
6073:./Libraries/FatFs/Src/ff.c **** 			w = w * 10 + c - '0';
 16644              		.loc 1 6073 6 view .LVU5926
 16645 006a 303C     		subs	r4, r4, #48
 16646              	.LVL1614:
 16647              		.loc 1 6074 4 is_stmt 1 view .LVU5927
6072:./Libraries/FatFs/Src/ff.c **** 			w = w * 10 + c - '0';
 16648              		.loc 1 6072 9 view .LVU5928
 16649 006c 092B     		cmp	r3, #9
 16650 006e F4D9     		bls	.L1468
 16651              	.LVL1615:
ARM GAS  /tmp/ccaQXGqa.s 			page 495


 16652              	.L1469:
6075:./Libraries/FatFs/Src/ff.c **** 		}
6076:./Libraries/FatFs/Src/ff.c **** 		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
 16653              		.loc 1 6076 3 view .LVU5929
 16654              		.loc 1 6076 6 is_stmt 0 view .LVU5930
 16655 0070 01F0DF03 		and	r3, r1, #223
 16656 0074 4C2B     		cmp	r3, #76
 16657 0076 03D1     		bne	.L1470
6077:./Libraries/FatFs/Src/ff.c **** 			f |= 4; c = *fmt++;
 16658              		.loc 1 6077 4 is_stmt 1 view .LVU5931
 16659              		.loc 1 6077 6 is_stmt 0 view .LVU5932
 16660 0078 4AF0040A 		orr	r10, r10, #4
 16661              	.LVL1616:
 16662              		.loc 1 6077 12 is_stmt 1 view .LVU5933
 16663              		.loc 1 6077 14 is_stmt 0 view .LVU5934
 16664 007c 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 16665              	.LVL1617:
 16666              	.L1470:
6078:./Libraries/FatFs/Src/ff.c **** 		}
6079:./Libraries/FatFs/Src/ff.c **** 		if (!c) break;
 16667              		.loc 1 6079 3 is_stmt 1 view .LVU5935
 16668              		.loc 1 6079 6 is_stmt 0 view .LVU5936
 16669 0080 61B3     		cbz	r1, .L1461
6080:./Libraries/FatFs/Src/ff.c **** 		d = c;
 16670              		.loc 1 6080 3 is_stmt 1 view .LVU5937
 16671              	.LVL1618:
6081:./Libraries/FatFs/Src/ff.c **** 		if (IsLower(d)) d -= 0x20;
 16672              		.loc 1 6081 3 view .LVU5938
 16673              		.loc 1 6081 6 is_stmt 0 view .LVU5939
 16674 0082 A1F16103 		sub	r3, r1, #97
 16675 0086 192B     		cmp	r3, #25
 16676 0088 00F2EA80 		bhi	.L1508
 16677              		.loc 1 6081 19 is_stmt 1 discriminator 1 view .LVU5940
 16678              		.loc 1 6081 21 is_stmt 0 discriminator 1 view .LVU5941
 16679 008c A1F12000 		sub	r0, r1, #32
 16680 0090 C0B2     		uxtb	r0, r0
 16681              	.LVL1619:
 16682              	.L1471:
6082:./Libraries/FatFs/Src/ff.c **** 		switch (d) {				/* Type is... */
 16683              		.loc 1 6082 3 is_stmt 1 view .LVU5942
 16684 0092 A0F14203 		sub	r3, r0, #66
 16685 0096 162B     		cmp	r3, #22
 16686 0098 18D8     		bhi	.L1472
 16687 009a DFE813F0 		tbh	[pc, r3, lsl #1]
 16688              	.L1474:
 16689 009e F500     		.2byte	(.L1509-.L1474)/2
 16690 00a0 3B00     		.2byte	(.L1478-.L1474)/2
 16691 00a2 2700     		.2byte	(.L1475-.L1474)/2
 16692 00a4 1700     		.2byte	(.L1472-.L1474)/2
 16693 00a6 1700     		.2byte	(.L1472-.L1474)/2
 16694 00a8 1700     		.2byte	(.L1472-.L1474)/2
 16695 00aa 1700     		.2byte	(.L1472-.L1474)/2
 16696 00ac 1700     		.2byte	(.L1472-.L1474)/2
 16697 00ae 1700     		.2byte	(.L1472-.L1474)/2
 16698 00b0 1700     		.2byte	(.L1472-.L1474)/2
 16699 00b2 1700     		.2byte	(.L1472-.L1474)/2
 16700 00b4 1700     		.2byte	(.L1472-.L1474)/2
ARM GAS  /tmp/ccaQXGqa.s 			page 496


 16701 00b6 1700     		.2byte	(.L1472-.L1474)/2
 16702 00b8 6D00     		.2byte	(.L1477-.L1474)/2
 16703 00ba 1700     		.2byte	(.L1472-.L1474)/2
 16704 00bc 1700     		.2byte	(.L1472-.L1474)/2
 16705 00be 1700     		.2byte	(.L1472-.L1474)/2
 16706 00c0 4300     		.2byte	(.L1476-.L1474)/2
 16707 00c2 1700     		.2byte	(.L1472-.L1474)/2
 16708 00c4 2700     		.2byte	(.L1475-.L1474)/2
 16709 00c6 1700     		.2byte	(.L1472-.L1474)/2
 16710 00c8 1700     		.2byte	(.L1472-.L1474)/2
 16711 00ca F700     		.2byte	(.L1473-.L1474)/2
 16712              		.p2align 1
 16713              	.L1472:
6083:./Libraries/FatFs/Src/ff.c **** 		case 'S' :					/* String */
6084:./Libraries/FatFs/Src/ff.c **** 			p = va_arg(arp, TCHAR*);
6085:./Libraries/FatFs/Src/ff.c **** 			for (j = 0; p[j]; j++) ;
6086:./Libraries/FatFs/Src/ff.c **** 			if (!(f & 2)) {
6087:./Libraries/FatFs/Src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
6088:./Libraries/FatFs/Src/ff.c **** 			}
6089:./Libraries/FatFs/Src/ff.c **** 			while (*p) putc_bfd(&pb, *p++);
6090:./Libraries/FatFs/Src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
6091:./Libraries/FatFs/Src/ff.c **** 			continue;
6092:./Libraries/FatFs/Src/ff.c **** 
6093:./Libraries/FatFs/Src/ff.c **** 		case 'C' :					/* Character */
6094:./Libraries/FatFs/Src/ff.c **** 			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
6095:./Libraries/FatFs/Src/ff.c **** 
6096:./Libraries/FatFs/Src/ff.c **** 		case 'B' :					/* Binary */
6097:./Libraries/FatFs/Src/ff.c **** 			r = 2; break;
6098:./Libraries/FatFs/Src/ff.c **** 
6099:./Libraries/FatFs/Src/ff.c **** 		case 'O' :					/* Octal */
6100:./Libraries/FatFs/Src/ff.c **** 			r = 8; break;
6101:./Libraries/FatFs/Src/ff.c **** 
6102:./Libraries/FatFs/Src/ff.c **** 		case 'D' :					/* Signed decimal */
6103:./Libraries/FatFs/Src/ff.c **** 		case 'U' :					/* Unsigned decimal */
6104:./Libraries/FatFs/Src/ff.c **** 			r = 10; break;
6105:./Libraries/FatFs/Src/ff.c **** 
6106:./Libraries/FatFs/Src/ff.c **** 		case 'X' :					/* Hexdecimal */
6107:./Libraries/FatFs/Src/ff.c **** 			r = 16; break;
6108:./Libraries/FatFs/Src/ff.c **** 
6109:./Libraries/FatFs/Src/ff.c **** 		default:					/* Unknown type (pass-through) */
6110:./Libraries/FatFs/Src/ff.c **** 			putc_bfd(&pb, c); continue;
 16714              		.loc 1 6110 4 view .LVU5943
 16715 00cc 4046     		mov	r0, r8
 16716              	.LVL1620:
 16717              		.loc 1 6110 4 is_stmt 0 view .LVU5944
 16718 00ce FFF7FEFF 		bl	putc_bfd
 16719              	.LVL1621:
 16720              		.loc 1 6110 22 is_stmt 1 view .LVU5945
6056:./Libraries/FatFs/Src/ff.c **** 		c = *fmt++;
 16721              		.loc 1 6056 2 view .LVU5946
6057:./Libraries/FatFs/Src/ff.c **** 		if (c == 0) break;			/* End of string */
 16722              		.loc 1 6057 3 view .LVU5947
6057:./Libraries/FatFs/Src/ff.c **** 		if (c == 0) break;			/* End of string */
 16723              		.loc 1 6057 11 is_stmt 0 view .LVU5948
 16724 00d2 3B46     		mov	r3, r7
 16725              	.LVL1622:
6057:./Libraries/FatFs/Src/ff.c **** 		if (c == 0) break;			/* End of string */
ARM GAS  /tmp/ccaQXGqa.s 			page 497


 16726              		.loc 1 6057 5 view .LVU5949
 16727 00d4 13F8011B 		ldrb	r1, [r3], #1	@ zero_extendqisi2
 16728              	.LVL1623:
6058:./Libraries/FatFs/Src/ff.c **** 		if (c != '%') {				/* Non escape character */
 16729              		.loc 1 6058 3 is_stmt 1 view .LVU5950
6058:./Libraries/FatFs/Src/ff.c **** 		if (c != '%') {				/* Non escape character */
 16730              		.loc 1 6058 6 is_stmt 0 view .LVU5951
 16731 00d8 0029     		cmp	r1, #0
 16732 00da ADD1     		bne	.L1462
 16733              	.LVL1624:
 16734              	.L1461:
6111:./Libraries/FatFs/Src/ff.c **** 		}
6112:./Libraries/FatFs/Src/ff.c **** 
6113:./Libraries/FatFs/Src/ff.c **** 		/* Get an argument and put it in numeral */
6114:./Libraries/FatFs/Src/ff.c **** 		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_
6115:./Libraries/FatFs/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
6116:./Libraries/FatFs/Src/ff.c **** 			v = 0 - v;
6117:./Libraries/FatFs/Src/ff.c **** 			f |= 8;
6118:./Libraries/FatFs/Src/ff.c **** 		}
6119:./Libraries/FatFs/Src/ff.c **** 		i = 0;
6120:./Libraries/FatFs/Src/ff.c **** 		do {
6121:./Libraries/FatFs/Src/ff.c **** 			d = (TCHAR)(v % r); v /= r;
6122:./Libraries/FatFs/Src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
6123:./Libraries/FatFs/Src/ff.c **** 			str[i++] = d + '0';
6124:./Libraries/FatFs/Src/ff.c **** 		} while (v && i < sizeof str / sizeof str[0]);
6125:./Libraries/FatFs/Src/ff.c **** 		if (f & 8) str[i++] = '-';
6126:./Libraries/FatFs/Src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
6127:./Libraries/FatFs/Src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
6128:./Libraries/FatFs/Src/ff.c **** 		do {
6129:./Libraries/FatFs/Src/ff.c **** 			putc_bfd(&pb, str[--i]);
6130:./Libraries/FatFs/Src/ff.c **** 		} while (i);
6131:./Libraries/FatFs/Src/ff.c **** 		while (j++ < w) putc_bfd(&pb, d);
6132:./Libraries/FatFs/Src/ff.c **** 	}
6133:./Libraries/FatFs/Src/ff.c **** 
6134:./Libraries/FatFs/Src/ff.c **** 	va_end(arp);
 16735              		.loc 1 6134 2 is_stmt 1 view .LVU5952
6135:./Libraries/FatFs/Src/ff.c **** 
6136:./Libraries/FatFs/Src/ff.c **** 	return putc_flush(&pb);
 16736              		.loc 1 6136 2 view .LVU5953
 16737              		.loc 1 6136 9 is_stmt 0 view .LVU5954
 16738 00dc 4046     		mov	r0, r8
 16739 00de FFF7FEFF 		bl	putc_flush
 16740              	.LVL1625:
6137:./Libraries/FatFs/Src/ff.c **** }
 16741              		.loc 1 6137 1 view .LVU5955
 16742 00e2 1EB0     		add	sp, sp, #120
 16743              	.LCFI178:
 16744              		.cfi_remember_state
 16745              		.cfi_def_cfa_offset 48
 16746              		@ sp needed
 16747 00e4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 16748              	.LCFI179:
 16749              		.cfi_restore 14
 16750              		.cfi_restore 11
 16751              		.cfi_restore 10
 16752              		.cfi_restore 9
 16753              		.cfi_restore 8
ARM GAS  /tmp/ccaQXGqa.s 			page 498


 16754              		.cfi_restore 7
 16755              		.cfi_restore 6
 16756              		.cfi_restore 5
 16757              		.cfi_restore 4
 16758              		.cfi_def_cfa_offset 12
 16759 00e8 03B0     		add	sp, sp, #12
 16760              	.LCFI180:
 16761              		.cfi_restore 3
 16762              		.cfi_restore 2
 16763              		.cfi_restore 1
 16764              		.cfi_def_cfa_offset 0
 16765 00ea 7047     		bx	lr
 16766              	.LVL1626:
 16767              	.L1475:
 16768              	.LCFI181:
 16769              		.cfi_restore_state
6114:./Libraries/FatFs/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 16770              		.loc 1 6114 3 is_stmt 1 view .LVU5956
6114:./Libraries/FatFs/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 16771              		.loc 1 6114 42 is_stmt 0 view .LVU5957
 16772 00ec 1AF0040F 		tst	r10, #4
 16773 00f0 40F0CE80 		bne	.L1561
6114:./Libraries/FatFs/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 16774              		.loc 1 6114 88 discriminator 2 view .LVU5958
 16775 00f4 4428     		cmp	r0, #68
 16776 00f6 40F0BF80 		bne	.L1511
6114:./Libraries/FatFs/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 16777              		.loc 1 6114 71 view .LVU5959
 16778 00fa 029B     		ldr	r3, [sp, #8]
6115:./Libraries/FatFs/Src/ff.c **** 			v = 0 - v;
 16779              		.loc 1 6115 6 view .LVU5960
 16780 00fc 4428     		cmp	r0, #68
 16781 00fe 4FF00A02 		mov	r2, #10
6114:./Libraries/FatFs/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 16782              		.loc 1 6114 71 view .LVU5961
 16783 0102 03F10406 		add	r6, r3, #4
 16784 0106 1D68     		ldr	r5, [r3]
 16785 0108 0296     		str	r6, [sp, #8]
6114:./Libraries/FatFs/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 16786              		.loc 1 6114 88 view .LVU5962
 16787 010a 2B46     		mov	r3, r5
 16788              	.LVL1627:
6115:./Libraries/FatFs/Src/ff.c **** 			v = 0 - v;
 16789              		.loc 1 6115 3 is_stmt 1 view .LVU5963
6115:./Libraries/FatFs/Src/ff.c **** 			v = 0 - v;
 16790              		.loc 1 6115 6 is_stmt 0 view .LVU5964
 16791 010c 40D0     		beq	.L1562
 16792              	.L1512:
6115:./Libraries/FatFs/Src/ff.c **** 			v = 0 - v;
 16793              		.loc 1 6115 6 view .LVU5965
 16794 010e 0020     		movs	r0, #0
 16795              	.LVL1628:
6115:./Libraries/FatFs/Src/ff.c **** 			v = 0 - v;
 16796              		.loc 1 6115 6 view .LVU5966
 16797 0110 0190     		str	r0, [sp, #4]
 16798 0112 44E0     		b	.L1491
 16799              	.LVL1629:
ARM GAS  /tmp/ccaQXGqa.s 			page 499


 16800              	.L1478:
6094:./Libraries/FatFs/Src/ff.c **** 
 16801              		.loc 1 6094 4 is_stmt 1 view .LVU5967
6094:./Libraries/FatFs/Src/ff.c **** 
 16802              		.loc 1 6094 25 is_stmt 0 view .LVU5968
 16803 0114 029B     		ldr	r3, [sp, #8]
6094:./Libraries/FatFs/Src/ff.c **** 
 16804              		.loc 1 6094 4 view .LVU5969
 16805 0116 4046     		mov	r0, r8
 16806              	.LVL1630:
6094:./Libraries/FatFs/Src/ff.c **** 
 16807              		.loc 1 6094 25 view .LVU5970
 16808 0118 1A1D     		adds	r2, r3, #4
6094:./Libraries/FatFs/Src/ff.c **** 
 16809              		.loc 1 6094 4 view .LVU5971
 16810 011a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 16811              	.LVL1631:
6094:./Libraries/FatFs/Src/ff.c **** 
 16812              		.loc 1 6094 25 view .LVU5972
 16813 011c 0292     		str	r2, [sp, #8]
6094:./Libraries/FatFs/Src/ff.c **** 
 16814              		.loc 1 6094 4 view .LVU5973
 16815 011e FFF7FEFF 		bl	putc_bfd
 16816              	.LVL1632:
6094:./Libraries/FatFs/Src/ff.c **** 
 16817              		.loc 1 6094 44 is_stmt 1 view .LVU5974
6094:./Libraries/FatFs/Src/ff.c **** 
 16818              		.loc 1 6094 4 is_stmt 0 view .LVU5975
 16819 0122 84E7     		b	.L1464
 16820              	.LVL1633:
 16821              	.L1476:
6084:./Libraries/FatFs/Src/ff.c **** 			for (j = 0; p[j]; j++) ;
 16822              		.loc 1 6084 4 is_stmt 1 view .LVU5976
6084:./Libraries/FatFs/Src/ff.c **** 			for (j = 0; p[j]; j++) ;
 16823              		.loc 1 6084 6 is_stmt 0 view .LVU5977
 16824 0124 029B     		ldr	r3, [sp, #8]
 16825 0126 1E68     		ldr	r6, [r3]
6085:./Libraries/FatFs/Src/ff.c **** 			if (!(f & 2)) {
 16826              		.loc 1 6085 4 is_stmt 1 view .LVU5978
 16827              	.LVL1634:
6085:./Libraries/FatFs/Src/ff.c **** 			if (!(f & 2)) {
 16828              		.loc 1 6085 16 view .LVU5979
6084:./Libraries/FatFs/Src/ff.c **** 			for (j = 0; p[j]; j++) ;
 16829              		.loc 1 6084 6 is_stmt 0 view .LVU5980
 16830 0128 0433     		adds	r3, r3, #4
6085:./Libraries/FatFs/Src/ff.c **** 			if (!(f & 2)) {
 16831              		.loc 1 6085 17 view .LVU5981
 16832 012a 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 16833              	.LVL1635:
6084:./Libraries/FatFs/Src/ff.c **** 			for (j = 0; p[j]; j++) ;
 16834              		.loc 1 6084 6 view .LVU5982
 16835 012c 0293     		str	r3, [sp, #8]
6085:./Libraries/FatFs/Src/ff.c **** 			if (!(f & 2)) {
 16836              		.loc 1 6085 4 view .LVU5983
 16837 012e 0029     		cmp	r1, #0
 16838 0130 00F0D180 		beq	.L1480
 16839 0134 3346     		mov	r3, r6
ARM GAS  /tmp/ccaQXGqa.s 			page 500


 16840 0136 C6F10100 		rsb	r0, r6, #1
 16841              	.LVL1636:
 16842              	.L1481:
6085:./Libraries/FatFs/Src/ff.c **** 			if (!(f & 2)) {
 16843              		.loc 1 6085 27 is_stmt 1 discriminator 3 view .LVU5984
6085:./Libraries/FatFs/Src/ff.c **** 			if (!(f & 2)) {
 16844              		.loc 1 6085 22 discriminator 3 view .LVU5985
 16845 013a 00EB0309 		add	r9, r0, r3
 16846              	.LVL1637:
6085:./Libraries/FatFs/Src/ff.c **** 			if (!(f & 2)) {
 16847              		.loc 1 6085 16 discriminator 3 view .LVU5986
6085:./Libraries/FatFs/Src/ff.c **** 			if (!(f & 2)) {
 16848              		.loc 1 6085 4 is_stmt 0 discriminator 3 view .LVU5987
 16849 013e 13F8012F 		ldrb	r2, [r3, #1]!	@ zero_extendqisi2
 16850 0142 002A     		cmp	r2, #0
 16851 0144 F9D1     		bne	.L1481
6086:./Libraries/FatFs/Src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 16852              		.loc 1 6086 4 is_stmt 1 view .LVU5988
6086:./Libraries/FatFs/Src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 16853              		.loc 1 6086 7 is_stmt 0 view .LVU5989
 16854 0146 1AF0020F 		tst	r10, #2
 16855 014a 00F0A380 		beq	.L1563
 16856              	.LVL1638:
6089:./Libraries/FatFs/Src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 16857              		.loc 1 6089 10 is_stmt 1 view .LVU5990
 16858 014e 09F10105 		add	r5, r9, #1
 16859              	.LVL1639:
 16860              	.L1486:
6089:./Libraries/FatFs/Src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 16861              		.loc 1 6089 15 discriminator 2 view .LVU5991
6089:./Libraries/FatFs/Src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 16862              		.loc 1 6089 15 is_stmt 0 discriminator 2 view .LVU5992
 16863 0152 4046     		mov	r0, r8
 16864 0154 FFF7FEFF 		bl	putc_bfd
 16865              	.LVL1640:
6089:./Libraries/FatFs/Src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 16866              		.loc 1 6089 10 is_stmt 1 discriminator 2 view .LVU5993
6089:./Libraries/FatFs/Src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 16867              		.loc 1 6089 11 is_stmt 0 discriminator 2 view .LVU5994
 16868 0158 16F8011F 		ldrb	r1, [r6, #1]!	@ zero_extendqisi2
 16869              	.LVL1641:
6089:./Libraries/FatFs/Src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 16870              		.loc 1 6089 10 discriminator 2 view .LVU5995
 16871 015c 0029     		cmp	r1, #0
 16872 015e F8D1     		bne	.L1486
 16873              	.LVL1642:
 16874              	.L1485:
6090:./Libraries/FatFs/Src/ff.c **** 			continue;
 16875              		.loc 1 6090 10 is_stmt 1 view .LVU5996
6090:./Libraries/FatFs/Src/ff.c **** 			continue;
 16876              		.loc 1 6090 10 is_stmt 0 view .LVU5997
 16877 0160 A145     		cmp	r9, r4
 16878 0162 BFF464AF 		bcs	.L1464
 16879              	.LVL1643:
 16880              	.L1487:
6090:./Libraries/FatFs/Src/ff.c **** 			continue;
 16881              		.loc 1 6090 20 is_stmt 1 discriminator 2 view .LVU5998
ARM GAS  /tmp/ccaQXGqa.s 			page 501


 16882 0166 2021     		movs	r1, #32
 16883 0168 4046     		mov	r0, r8
 16884 016a FFF7FEFF 		bl	putc_bfd
 16885              	.LVL1644:
6090:./Libraries/FatFs/Src/ff.c **** 			continue;
 16886              		.loc 1 6090 10 discriminator 2 view .LVU5999
6090:./Libraries/FatFs/Src/ff.c **** 			continue;
 16887              		.loc 1 6090 10 is_stmt 0 discriminator 2 view .LVU6000
 16888 016e AC42     		cmp	r4, r5
 16889 0170 05F10105 		add	r5, r5, #1
 16890              	.LVL1645:
6090:./Libraries/FatFs/Src/ff.c **** 			continue;
 16891              		.loc 1 6090 10 discriminator 2 view .LVU6001
 16892 0174 F7D8     		bhi	.L1487
 16893 0176 5AE7     		b	.L1464
 16894              	.LVL1646:
 16895              	.L1477:
6114:./Libraries/FatFs/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 16896              		.loc 1 6114 3 is_stmt 1 view .LVU6002
6114:./Libraries/FatFs/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 16897              		.loc 1 6114 42 is_stmt 0 view .LVU6003
 16898 0178 0822     		movs	r2, #8
 16899              	.L1557:
 16900 017a 1AF0040F 		tst	r10, #4
 16901 017e 7CD0     		beq	.L1490
 16902              	.L1502:
6114:./Libraries/FatFs/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 16903              		.loc 1 6114 24 view .LVU6004
 16904 0180 029B     		ldr	r3, [sp, #8]
6115:./Libraries/FatFs/Src/ff.c **** 			v = 0 - v;
 16905              		.loc 1 6115 6 view .LVU6005
 16906 0182 4428     		cmp	r0, #68
6114:./Libraries/FatFs/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 16907              		.loc 1 6114 24 view .LVU6006
 16908 0184 03F10406 		add	r6, r3, #4
 16909 0188 1D68     		ldr	r5, [r3]
 16910              	.LVL1647:
6115:./Libraries/FatFs/Src/ff.c **** 			v = 0 - v;
 16911              		.loc 1 6115 3 is_stmt 1 view .LVU6007
6114:./Libraries/FatFs/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 16912              		.loc 1 6114 24 is_stmt 0 view .LVU6008
 16913 018a 0296     		str	r6, [sp, #8]
6114:./Libraries/FatFs/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 16914              		.loc 1 6114 42 view .LVU6009
 16915 018c 2B46     		mov	r3, r5
6115:./Libraries/FatFs/Src/ff.c **** 			v = 0 - v;
 16916              		.loc 1 6115 6 view .LVU6010
 16917 018e BED1     		bne	.L1512
 16918              	.LVL1648:
 16919              	.L1562:
6115:./Libraries/FatFs/Src/ff.c **** 			v = 0 - v;
 16920              		.loc 1 6115 6 discriminator 8 view .LVU6011
 16921 0190 002D     		cmp	r5, #0
 16922 0192 BCDA     		bge	.L1512
6116:./Libraries/FatFs/Src/ff.c **** 			f |= 8;
 16923              		.loc 1 6116 4 is_stmt 1 view .LVU6012
6117:./Libraries/FatFs/Src/ff.c **** 		}
ARM GAS  /tmp/ccaQXGqa.s 			page 502


 16924              		.loc 1 6117 6 is_stmt 0 view .LVU6013
 16925 0194 0820     		movs	r0, #8
 16926              	.LVL1649:
6116:./Libraries/FatFs/Src/ff.c **** 			f |= 8;
 16927              		.loc 1 6116 6 view .LVU6014
 16928 0196 6B42     		rsbs	r3, r5, #0
 16929              	.LVL1650:
6117:./Libraries/FatFs/Src/ff.c **** 		}
 16930              		.loc 1 6117 4 is_stmt 1 view .LVU6015
6117:./Libraries/FatFs/Src/ff.c **** 		}
 16931              		.loc 1 6117 6 is_stmt 0 view .LVU6016
 16932 0198 4AF0080A 		orr	r10, r10, #8
 16933              	.LVL1651:
6117:./Libraries/FatFs/Src/ff.c **** 		}
 16934              		.loc 1 6117 6 view .LVU6017
 16935 019c 0190     		str	r0, [sp, #4]
 16936              	.LVL1652:
 16937              	.L1491:
6119:./Libraries/FatFs/Src/ff.c **** 		do {
 16938              		.loc 1 6119 3 is_stmt 1 view .LVU6018
6119:./Libraries/FatFs/Src/ff.c **** 		do {
 16939              		.loc 1 6119 3 is_stmt 0 view .LVU6019
 16940 019e 7829     		cmp	r1, #120
 16941 01a0 0DF10C09 		add	r9, sp, #12
6119:./Libraries/FatFs/Src/ff.c **** 		do {
 16942              		.loc 1 6119 5 view .LVU6020
 16943 01a4 4FF00000 		mov	r0, #0
 16944 01a8 0CBF     		ite	eq
 16945 01aa 4FF0270E 		moveq	lr, #39
 16946 01ae 4FF0070E 		movne	lr, #7
 16947 01b2 4946     		mov	r1, r9
 16948              	.LVL1653:
6119:./Libraries/FatFs/Src/ff.c **** 		do {
 16949              		.loc 1 6119 5 view .LVU6021
 16950 01b4 00E0     		b	.L1493
 16951              	.LVL1654:
 16952              	.L1513:
6119:./Libraries/FatFs/Src/ff.c **** 		do {
 16953              		.loc 1 6119 5 view .LVU6022
 16954 01b6 3046     		mov	r0, r6
 16955              	.LVL1655:
 16956              	.L1493:
6120:./Libraries/FatFs/Src/ff.c **** 			d = (TCHAR)(v % r); v /= r;
 16957              		.loc 1 6120 3 is_stmt 1 view .LVU6023
6121:./Libraries/FatFs/Src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 16958              		.loc 1 6121 4 view .LVU6024
6122:./Libraries/FatFs/Src/ff.c **** 			str[i++] = d + '0';
 16959              		.loc 1 6122 15 view .LVU6025
 16960 01b8 9C46     		mov	ip, r3
6123:./Libraries/FatFs/Src/ff.c **** 		} while (v && i < sizeof str / sizeof str[0]);
 16961              		.loc 1 6123 9 is_stmt 0 view .LVU6026
 16962 01ba 461C     		adds	r6, r0, #1
6121:./Libraries/FatFs/Src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 16963              		.loc 1 6121 18 view .LVU6027
 16964 01bc B3FBF2F5 		udiv	r5, r3, r2
 16965 01c0 02FB153B 		mls	fp, r2, r5, r3
6121:./Libraries/FatFs/Src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
ARM GAS  /tmp/ccaQXGqa.s 			page 503


 16966              		.loc 1 6121 26 view .LVU6028
 16967 01c4 2B46     		mov	r3, r5
 16968              	.LVL1656:
6121:./Libraries/FatFs/Src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 16969              		.loc 1 6121 6 view .LVU6029
 16970 01c6 5FFA8BF5 		uxtb	r5, fp
 16971              	.LVL1657:
6121:./Libraries/FatFs/Src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 16972              		.loc 1 6121 24 is_stmt 1 view .LVU6030
6122:./Libraries/FatFs/Src/ff.c **** 			str[i++] = d + '0';
 16973              		.loc 1 6122 4 view .LVU6031
6122:./Libraries/FatFs/Src/ff.c **** 			str[i++] = d + '0';
 16974              		.loc 1 6122 7 is_stmt 0 view .LVU6032
 16975 01ca BBF1090F 		cmp	fp, #9
6122:./Libraries/FatFs/Src/ff.c **** 			str[i++] = d + '0';
 16976              		.loc 1 6122 17 view .LVU6033
 16977 01ce 0EEB050B 		add	fp, lr, r5
 16978 01d2 88BF     		it	hi
 16979 01d4 5FFA8BF5 		uxtbhi	r5, fp
 16980              	.LVL1658:
6123:./Libraries/FatFs/Src/ff.c **** 		} while (v && i < sizeof str / sizeof str[0]);
 16981              		.loc 1 6123 4 is_stmt 1 view .LVU6034
6124:./Libraries/FatFs/Src/ff.c **** 		if (f & 8) str[i++] = '-';
 16982              		.loc 1 6124 3 is_stmt 0 view .LVU6035
 16983 01d8 9445     		cmp	ip, r2
6123:./Libraries/FatFs/Src/ff.c **** 		} while (v && i < sizeof str / sizeof str[0]);
 16984              		.loc 1 6123 17 view .LVU6036
 16985 01da 05F13005 		add	r5, r5, #48
 16986              	.LVL1659:
6123:./Libraries/FatFs/Src/ff.c **** 		} while (v && i < sizeof str / sizeof str[0]);
 16987              		.loc 1 6123 17 view .LVU6037
 16988 01de EDB2     		uxtb	r5, r5
 16989              	.LVL1660:
6123:./Libraries/FatFs/Src/ff.c **** 		} while (v && i < sizeof str / sizeof str[0]);
 16990              		.loc 1 6123 13 view .LVU6038
 16991 01e0 01F8015B 		strb	r5, [r1], #1
6124:./Libraries/FatFs/Src/ff.c **** 		if (f & 8) str[i++] = '-';
 16992              		.loc 1 6124 11 is_stmt 1 view .LVU6039
6124:./Libraries/FatFs/Src/ff.c **** 		if (f & 8) str[i++] = '-';
 16993              		.loc 1 6124 3 is_stmt 0 view .LVU6040
 16994 01e4 01D3     		bcc	.L1518
 16995 01e6 1F2E     		cmp	r6, #31
 16996 01e8 E5D9     		bls	.L1513
 16997              	.L1518:
6125:./Libraries/FatFs/Src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 16998              		.loc 1 6125 3 is_stmt 1 view .LVU6041
6125:./Libraries/FatFs/Src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 16999              		.loc 1 6125 6 is_stmt 0 view .LVU6042
 17000 01ea 019B     		ldr	r3, [sp, #4]
 17001              	.LVL1661:
6125:./Libraries/FatFs/Src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 17002              		.loc 1 6125 6 view .LVU6043
 17003 01ec 3BB1     		cbz	r3, .L1495
6125:./Libraries/FatFs/Src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 17004              		.loc 1 6125 14 is_stmt 1 discriminator 1 view .LVU6044
 17005              	.LVL1662:
6125:./Libraries/FatFs/Src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
ARM GAS  /tmp/ccaQXGqa.s 			page 504


 17006              		.loc 1 6125 23 is_stmt 0 discriminator 1 view .LVU6045
 17007 01ee 1EAB     		add	r3, sp, #120
 17008 01f0 4FF02D02 		mov	r2, #45
 17009              	.LVL1663:
6125:./Libraries/FatFs/Src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 17010              		.loc 1 6125 23 discriminator 1 view .LVU6046
 17011 01f4 2D25     		movs	r5, #45
 17012 01f6 3344     		add	r3, r3, r6
6125:./Libraries/FatFs/Src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 17013              		.loc 1 6125 19 discriminator 1 view .LVU6047
 17014 01f8 861C     		adds	r6, r0, #2
 17015              	.LVL1664:
6125:./Libraries/FatFs/Src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 17016              		.loc 1 6125 23 discriminator 1 view .LVU6048
 17017 01fa 03F86C2C 		strb	r2, [r3, #-108]
 17018              	.L1495:
6126:./Libraries/FatFs/Src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 17019              		.loc 1 6126 3 is_stmt 1 view .LVU6049
 17020              	.LVL1665:
6126:./Libraries/FatFs/Src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 17021              		.loc 1 6126 10 view .LVU6050
6126:./Libraries/FatFs/Src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 17022              		.loc 1 6126 12 is_stmt 0 view .LVU6051
 17023 01fe 1AF0010F 		tst	r10, #1
 17024 0202 14BF     		ite	ne
 17025 0204 4FF0300B 		movne	fp, #48
 17026 0208 4FF0200B 		moveq	fp, #32
 17027              	.LVL1666:
6127:./Libraries/FatFs/Src/ff.c **** 		do {
 17028              		.loc 1 6127 3 is_stmt 1 view .LVU6052
6127:./Libraries/FatFs/Src/ff.c **** 		do {
 17029              		.loc 1 6127 9 view .LVU6053
 17030 020c 1AF0020F 		tst	r10, #2
 17031 0210 5FD1     		bne	.L1515
6127:./Libraries/FatFs/Src/ff.c **** 		do {
 17032              		.loc 1 6127 19 is_stmt 0 view .LVU6054
 17033 0212 A642     		cmp	r6, r4
6127:./Libraries/FatFs/Src/ff.c **** 		do {
 17034              		.loc 1 6127 23 view .LVU6055
 17035 0214 06F1010A 		add	r10, r6, #1
 17036              	.LVL1667:
6127:./Libraries/FatFs/Src/ff.c **** 		do {
 17037              		.loc 1 6127 19 view .LVU6056
 17038 0218 09D2     		bcs	.L1497
 17039              	.LVL1668:
 17040              	.L1498:
6127:./Libraries/FatFs/Src/ff.c **** 		do {
 17041              		.loc 1 6127 31 is_stmt 1 discriminator 3 view .LVU6057
 17042 021a 5946     		mov	r1, fp
 17043 021c 4046     		mov	r0, r8
 17044 021e FFF7FEFF 		bl	putc_bfd
 17045              	.LVL1669:
6127:./Libraries/FatFs/Src/ff.c **** 		do {
 17046              		.loc 1 6127 9 discriminator 3 view .LVU6058
6127:./Libraries/FatFs/Src/ff.c **** 		do {
 17047              		.loc 1 6127 19 is_stmt 0 discriminator 3 view .LVU6059
 17048 0222 5445     		cmp	r4, r10
ARM GAS  /tmp/ccaQXGqa.s 			page 505


 17049 0224 0AF1010A 		add	r10, r10, #1
 17050              	.LVL1670:
6127:./Libraries/FatFs/Src/ff.c **** 		do {
 17051              		.loc 1 6127 19 discriminator 3 view .LVU6060
 17052 0228 F7D1     		bne	.L1498
 17053 022a 04F1010A 		add	r10, r4, #1
 17054              	.LVL1671:
 17055              	.L1497:
6127:./Libraries/FatFs/Src/ff.c **** 		do {
 17056              		.loc 1 6127 19 discriminator 3 view .LVU6061
 17057 022e 013E     		subs	r6, r6, #1
 17058              	.LVL1672:
6127:./Libraries/FatFs/Src/ff.c **** 		do {
 17059              		.loc 1 6127 19 discriminator 3 view .LVU6062
 17060 0230 2946     		mov	r1, r5
 17061 0232 4E44     		add	r6, r6, r9
 17062              	.LVL1673:
6127:./Libraries/FatFs/Src/ff.c **** 		do {
 17063              		.loc 1 6127 19 discriminator 3 view .LVU6063
 17064 0234 01E0     		b	.L1500
 17065              	.LVL1674:
 17066              	.L1564:
6127:./Libraries/FatFs/Src/ff.c **** 		do {
 17067              		.loc 1 6127 19 discriminator 3 view .LVU6064
 17068 0236 16F8011D 		ldrb	r1, [r6, #-1]!	@ zero_extendqisi2
 17069              	.LVL1675:
 17070              	.L1500:
6128:./Libraries/FatFs/Src/ff.c **** 			putc_bfd(&pb, str[--i]);
 17071              		.loc 1 6128 3 is_stmt 1 discriminator 1 view .LVU6065
6129:./Libraries/FatFs/Src/ff.c **** 		} while (i);
 17072              		.loc 1 6129 4 discriminator 1 view .LVU6066
6129:./Libraries/FatFs/Src/ff.c **** 		} while (i);
 17073              		.loc 1 6129 4 is_stmt 0 discriminator 1 view .LVU6067
 17074 023a 4046     		mov	r0, r8
 17075 023c FFF7FEFF 		bl	putc_bfd
 17076              	.LVL1676:
6130:./Libraries/FatFs/Src/ff.c **** 		while (j++ < w) putc_bfd(&pb, d);
 17077              		.loc 1 6130 11 is_stmt 1 discriminator 1 view .LVU6068
6130:./Libraries/FatFs/Src/ff.c **** 		while (j++ < w) putc_bfd(&pb, d);
 17078              		.loc 1 6130 3 is_stmt 0 discriminator 1 view .LVU6069
 17079 0240 4E45     		cmp	r6, r9
 17080 0242 F8D1     		bne	.L1564
 17081              	.LVL1677:
6131:./Libraries/FatFs/Src/ff.c **** 	}
 17082              		.loc 1 6131 9 is_stmt 1 view .LVU6070
 17083 0244 A245     		cmp	r10, r4
6131:./Libraries/FatFs/Src/ff.c **** 	}
 17084              		.loc 1 6131 11 is_stmt 0 view .LVU6071
 17085 0246 0AF10105 		add	r5, r10, #1
 17086              	.LVL1678:
6131:./Libraries/FatFs/Src/ff.c **** 	}
 17087              		.loc 1 6131 9 view .LVU6072
 17088 024a BFF4F0AE 		bcs	.L1464
 17089              	.LVL1679:
 17090              	.L1501:
6131:./Libraries/FatFs/Src/ff.c **** 	}
 17091              		.loc 1 6131 19 is_stmt 1 discriminator 2 view .LVU6073
ARM GAS  /tmp/ccaQXGqa.s 			page 506


 17092 024e 5946     		mov	r1, fp
 17093 0250 4046     		mov	r0, r8
 17094 0252 FFF7FEFF 		bl	putc_bfd
 17095              	.LVL1680:
6131:./Libraries/FatFs/Src/ff.c **** 	}
 17096              		.loc 1 6131 9 discriminator 2 view .LVU6074
6131:./Libraries/FatFs/Src/ff.c **** 	}
 17097              		.loc 1 6131 9 is_stmt 0 discriminator 2 view .LVU6075
 17098 0256 AC42     		cmp	r4, r5
 17099 0258 05F10105 		add	r5, r5, #1
 17100              	.LVL1681:
6131:./Libraries/FatFs/Src/ff.c **** 	}
 17101              		.loc 1 6131 9 discriminator 2 view .LVU6076
 17102 025c F7D1     		bne	.L1501
 17103 025e E6E6     		b	.L1464
 17104              	.LVL1682:
 17105              	.L1508:
6131:./Libraries/FatFs/Src/ff.c **** 	}
 17106              		.loc 1 6131 9 discriminator 2 view .LVU6077
 17107 0260 0846     		mov	r0, r1
 17108 0262 16E7     		b	.L1471
 17109              	.LVL1683:
 17110              	.L1559:
6066:./Libraries/FatFs/Src/ff.c **** 		} else {
 17111              		.loc 1 6066 4 is_stmt 1 view .LVU6078
6066:./Libraries/FatFs/Src/ff.c **** 		} else {
 17112              		.loc 1 6066 11 view .LVU6079
6066:./Libraries/FatFs/Src/ff.c **** 		} else {
 17113              		.loc 1 6066 13 is_stmt 0 view .LVU6080
 17114 0264 B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 17115              	.LVL1684:
6066:./Libraries/FatFs/Src/ff.c **** 		} else {
 17116              		.loc 1 6066 6 view .LVU6081
 17117 0266 4FF0010A 		mov	r10, #1
6066:./Libraries/FatFs/Src/ff.c **** 		} else {
 17118              		.loc 1 6066 19 view .LVU6082
 17119 026a 0337     		adds	r7, r7, #3
 17120              	.LVL1685:
6066:./Libraries/FatFs/Src/ff.c **** 		} else {
 17121              		.loc 1 6066 19 view .LVU6083
 17122 026c F0E6     		b	.L1466
 17123              	.LVL1686:
 17124              	.L1560:
6069:./Libraries/FatFs/Src/ff.c **** 			}
 17125              		.loc 1 6069 5 is_stmt 1 view .LVU6084
6069:./Libraries/FatFs/Src/ff.c **** 			}
 17126              		.loc 1 6069 12 view .LVU6085
6069:./Libraries/FatFs/Src/ff.c **** 			}
 17127              		.loc 1 6069 14 is_stmt 0 view .LVU6086
 17128 026e B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 17129              	.LVL1687:
6069:./Libraries/FatFs/Src/ff.c **** 			}
 17130              		.loc 1 6069 7 view .LVU6087
 17131 0270 4FF0020A 		mov	r10, #2
6069:./Libraries/FatFs/Src/ff.c **** 			}
 17132              		.loc 1 6069 20 view .LVU6088
 17133 0274 0337     		adds	r7, r7, #3
ARM GAS  /tmp/ccaQXGqa.s 			page 507


 17134              	.LVL1688:
6069:./Libraries/FatFs/Src/ff.c **** 			}
 17135              		.loc 1 6069 20 view .LVU6089
 17136 0276 EBE6     		b	.L1466
 17137              	.LVL1689:
 17138              	.L1511:
6069:./Libraries/FatFs/Src/ff.c **** 			}
 17139              		.loc 1 6069 20 view .LVU6090
 17140 0278 0A22     		movs	r2, #10
 17141              	.L1490:
6114:./Libraries/FatFs/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 17142              		.loc 1 6114 88 view .LVU6091
 17143 027a 029B     		ldr	r3, [sp, #8]
 17144 027c 0020     		movs	r0, #0
 17145              	.LVL1690:
6114:./Libraries/FatFs/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 17146              		.loc 1 6114 88 view .LVU6092
 17147 027e 0190     		str	r0, [sp, #4]
 17148 0280 181D     		adds	r0, r3, #4
 17149 0282 1B68     		ldr	r3, [r3]
6115:./Libraries/FatFs/Src/ff.c **** 			v = 0 - v;
 17150              		.loc 1 6115 3 is_stmt 1 view .LVU6093
6114:./Libraries/FatFs/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 17151              		.loc 1 6114 88 is_stmt 0 view .LVU6094
 17152 0284 0290     		str	r0, [sp, #8]
 17153 0286 8AE7     		b	.L1491
 17154              	.LVL1691:
 17155              	.L1509:
6127:./Libraries/FatFs/Src/ff.c **** 		do {
 17156              		.loc 1 6127 9 view .LVU6095
 17157 0288 0222     		movs	r2, #2
 17158 028a 76E7     		b	.L1557
 17159              	.L1473:
 17160 028c 1022     		movs	r2, #16
 17161 028e 74E7     		b	.L1557
 17162              	.L1561:
 17163 0290 0A22     		movs	r2, #10
 17164 0292 75E7     		b	.L1502
 17165              	.LVL1692:
 17166              	.L1563:
6087:./Libraries/FatFs/Src/ff.c **** 			}
 17167              		.loc 1 6087 11 view .LVU6096
 17168 0294 A145     		cmp	r9, r4
 17169 0296 09F1010A 		add	r10, r9, #1
 17170              	.LVL1693:
6087:./Libraries/FatFs/Src/ff.c **** 			}
 17171              		.loc 1 6087 11 view .LVU6097
 17172 029a 09F10205 		add	r5, r9, #2
6087:./Libraries/FatFs/Src/ff.c **** 			}
 17173              		.loc 1 6087 11 is_stmt 1 view .LVU6098
 17174              	.LVL1694:
6087:./Libraries/FatFs/Src/ff.c **** 			}
 17175              		.loc 1 6087 11 is_stmt 0 view .LVU6099
 17176 029e 20D2     		bcs	.L1565
 17177              	.LVL1695:
 17178              	.L1506:
6087:./Libraries/FatFs/Src/ff.c **** 			}
ARM GAS  /tmp/ccaQXGqa.s 			page 508


 17179              		.loc 1 6087 11 view .LVU6100
 17180 02a0 5546     		mov	r5, r10
 17181              	.L1484:
 17182              	.LVL1696:
6087:./Libraries/FatFs/Src/ff.c **** 			}
 17183              		.loc 1 6087 21 is_stmt 1 discriminator 2 view .LVU6101
 17184 02a2 2021     		movs	r1, #32
 17185 02a4 4046     		mov	r0, r8
 17186 02a6 FFF7FEFF 		bl	putc_bfd
 17187              	.LVL1697:
6087:./Libraries/FatFs/Src/ff.c **** 			}
 17188              		.loc 1 6087 11 discriminator 2 view .LVU6102
6087:./Libraries/FatFs/Src/ff.c **** 			}
 17189              		.loc 1 6087 11 is_stmt 0 discriminator 2 view .LVU6103
 17190 02aa AC42     		cmp	r4, r5
 17191 02ac 05F10105 		add	r5, r5, #1
 17192              	.LVL1698:
6087:./Libraries/FatFs/Src/ff.c **** 			}
 17193              		.loc 1 6087 11 discriminator 2 view .LVU6104
 17194 02b0 F7D8     		bhi	.L1484
 17195 02b2 A4EB0A09 		sub	r9, r4, r10
 17196 02b6 0AF10103 		add	r3, r10, #1
 17197 02ba 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 17198 02bc 5445     		cmp	r4, r10
 17199 02be 38BF     		it	cc
 17200 02c0 4FF00009 		movcc	r9, #0
 17201 02c4 9944     		add	r9, r9, r3
 17202 02c6 09F10105 		add	r5, r9, #1
 17203              	.LVL1699:
6089:./Libraries/FatFs/Src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 17204              		.loc 1 6089 10 is_stmt 1 view .LVU6105
 17205 02ca 0029     		cmp	r1, #0
 17206 02cc 7FF441AF 		bne	.L1486
 17207 02d0 46E7     		b	.L1485
 17208              	.LVL1700:
 17209              	.L1515:
6127:./Libraries/FatFs/Src/ff.c **** 		do {
 17210              		.loc 1 6127 9 is_stmt 0 view .LVU6106
 17211 02d2 B246     		mov	r10, r6
 17212              	.LVL1701:
6127:./Libraries/FatFs/Src/ff.c **** 		do {
 17213              		.loc 1 6127 9 view .LVU6107
 17214 02d4 ABE7     		b	.L1497
 17215              	.LVL1702:
 17216              	.L1480:
6086:./Libraries/FatFs/Src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 17217              		.loc 1 6086 4 is_stmt 1 view .LVU6108
6086:./Libraries/FatFs/Src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 17218              		.loc 1 6086 7 is_stmt 0 view .LVU6109
 17219 02d6 1AF0020F 		tst	r10, #2
 17220 02da 04D0     		beq	.L1505
6085:./Libraries/FatFs/Src/ff.c **** 			if (!(f & 2)) {
 17221              		.loc 1 6085 11 view .LVU6110
 17222 02dc 8946     		mov	r9, r1
6086:./Libraries/FatFs/Src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 17223              		.loc 1 6086 7 view .LVU6111
 17224 02de 0125     		movs	r5, #1
ARM GAS  /tmp/ccaQXGqa.s 			page 509


 17225 02e0 3EE7     		b	.L1485
 17226              	.LVL1703:
 17227              	.L1565:
6087:./Libraries/FatFs/Src/ff.c **** 			}
 17228              		.loc 1 6087 11 view .LVU6112
 17229 02e2 D146     		mov	r9, r10
 17230 02e4 35E7     		b	.L1486
 17231              	.LVL1704:
 17232              	.L1505:
6087:./Libraries/FatFs/Src/ff.c **** 			}
 17233              		.loc 1 6087 11 is_stmt 1 view .LVU6113
6087:./Libraries/FatFs/Src/ff.c **** 			}
 17234              		.loc 1 6087 11 is_stmt 0 view .LVU6114
 17235 02e6 002C     		cmp	r4, #0
 17236 02e8 3FF4A1AE 		beq	.L1464
 17237 02ec 4FF0010A 		mov	r10, #1
 17238              	.LVL1705:
6087:./Libraries/FatFs/Src/ff.c **** 			}
 17239              		.loc 1 6087 11 view .LVU6115
 17240 02f0 D6E7     		b	.L1506
 17241              		.cfi_endproc
 17242              	.LFE398:
 17244 02f2 00BF     		.section	.bss.FatFs,"aw",%nobits
 17245              		.align	2
 17246              		.set	.LANCHOR1,. + 0
 17249              	FatFs:
 17250 0000 00000000 		.space	4
 17251              		.section	.bss.Files,"aw",%nobits
 17252              		.align	2
 17253              		.set	.LANCHOR0,. + 0
 17256              	Files:
 17257 0000 00000000 		.space	32
 17257      00000000 
 17257      00000000 
 17257      00000000 
 17257      00000000 
 17258              		.section	.bss.Fsid,"aw",%nobits
 17259              		.align	1
 17260              		.set	.LANCHOR2,. + 0
 17263              	Fsid:
 17264 0000 0000     		.space	2
 17265              		.section	.rodata.ExCvt,"a"
 17266              		.align	2
 17267              		.set	.LANCHOR3,. + 0
 17270              	ExCvt:
 17271 0000 43554541 		.ascii	"CUEAAAACEEEIIIAAE\222\222OOOUUYOUO\234O\236\237AIOU"
 17271      41414143 
 17271      45454549 
 17271      49494141 
 17271      4592924F 
 17272 0024 A5A5A6A7 		.ascii	"\245\245\246\247\250\251\252\253\254\255\256\257\260"
 17272      A8A9AAAB 
 17272      ACADAEAF 
 17272      B0
 17273 0031 B1B2B3B4 		.ascii	"\261\262\263\264AAA\270\271\272\273\274\275\276\277"
 17273      414141B8 
 17273      B9BABBBC 
ARM GAS  /tmp/ccaQXGqa.s 			page 510


 17273      BDBEBF
 17274 0040 C0C1C2C3 		.ascii	"\300\301\302\303\304\305AA\310\311\312\313\314\315\316"
 17274      C4C54141 
 17274      C8C9CACB 
 17274      CCCDCE
 17275 004f CFD1D145 		.ascii	"\317\321\321EEEIIII\331\332\333\334\335I\337O\341OO"
 17275      45454949 
 17275      4949D9DA 
 17275      DBDCDD49 
 17275      DF4FE14F 
 17276 0064 4F4FE6E8 		.ascii	"OO\346\350\350UUUYY\356\357\360\361\362\363\364\365"
 17276      E8555555 
 17276      5959EEEF 
 17276      F0F1F2F3 
 17276      F4F5
 17277 0076 F6F7F8F9 		.ascii	"\366\367\370\371\372\373\374\375\376\377"
 17277      FAFBFCFD 
 17277      FEFF
 17278              		.section	.rodata.cst.15638,"a"
 17279              		.align	2
 17280              		.set	.LANCHOR5,. + 0
 17283              	cst.15638:
 17284 0000 0100     		.short	1
 17285 0002 0400     		.short	4
 17286 0004 1000     		.short	16
 17287 0006 4000     		.short	64
 17288 0008 0001     		.short	256
 17289 000a 0002     		.short	512
 17290 000c 0000     		.short	0
 17291              		.section	.rodata.cst32.15639,"a"
 17292              		.align	2
 17293              		.set	.LANCHOR4,. + 0
 17296              	cst32.15639:
 17297 0000 0100     		.short	1
 17298 0002 0200     		.short	2
 17299 0004 0400     		.short	4
 17300 0006 0800     		.short	8
 17301 0008 1000     		.short	16
 17302 000a 2000     		.short	32
 17303 000c 0000     		.short	0
 17304              		.text
 17305              	.Letext0:
 17306              		.file 2 "./Libraries/FatFs/Inc/integer.h"
 17307              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 17308              		.file 4 "./Libraries/CMSIS/Core/Include/core_cm7.h"
 17309              		.file 5 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 17310              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 17311              		.file 7 "/usr/include/newlib/sys/_types.h"
 17312              		.file 8 "/usr/include/newlib/sys/reent.h"
 17313              		.file 9 "/usr/include/newlib/sys/lock.h"
 17314              		.file 10 "/usr/include/newlib/math.h"
 17315              		.file 11 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 17316              		.file 12 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 17317              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 17318              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 17319              		.file 15 "./Libraries/FreeRTOS/Source/CMSIS_RTOS/cmsis_os2.h"
 17320              		.file 16 "./Libraries/FatFs/Inc/ff.h"
ARM GAS  /tmp/ccaQXGqa.s 			page 511


 17321              		.file 17 "./Libraries/FatFs/Inc/diskio.h"
 17322              		.file 18 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 17323              		.file 19 "<built-in>"
ARM GAS  /tmp/ccaQXGqa.s 			page 512


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ff.c
     /tmp/ccaQXGqa.s:17     .text.chk_lock:0000000000000000 $t
     /tmp/ccaQXGqa.s:25     .text.chk_lock:0000000000000000 chk_lock
     /tmp/ccaQXGqa.s:186    .text.chk_lock:0000000000000074 $d
     /tmp/ccaQXGqa.s:191    .text.inc_lock:0000000000000000 $t
     /tmp/ccaQXGqa.s:198    .text.inc_lock:0000000000000000 inc_lock
     /tmp/ccaQXGqa.s:400    .text.inc_lock:00000000000000a4 $d
     /tmp/ccaQXGqa.s:405    .text.get_ldnumber:0000000000000000 $t
     /tmp/ccaQXGqa.s:412    .text.get_ldnumber:0000000000000000 get_ldnumber
     /tmp/ccaQXGqa.s:541    .text.mem_cpy.part.0:0000000000000000 $t
     /tmp/ccaQXGqa.s:548    .text.mem_cpy.part.0:0000000000000000 mem_cpy.part.0
     /tmp/ccaQXGqa.s:581    .text.get_fileinfo.isra.0.part.0:0000000000000000 $t
     /tmp/ccaQXGqa.s:588    .text.get_fileinfo.isra.0.part.0:0000000000000000 get_fileinfo.isra.0.part.0
     /tmp/ccaQXGqa.s:752    .text.sync_window.part.0:0000000000000000 $t
     /tmp/ccaQXGqa.s:759    .text.sync_window.part.0:0000000000000000 sync_window.part.0
     /tmp/ccaQXGqa.s:863    .text.sync_fs:0000000000000000 $t
     /tmp/ccaQXGqa.s:870    .text.sync_fs:0000000000000000 sync_fs
     /tmp/ccaQXGqa.s:1254   .text.move_window.part.0:0000000000000000 $t
     /tmp/ccaQXGqa.s:1261   .text.move_window.part.0:0000000000000000 move_window.part.0
     /tmp/ccaQXGqa.s:1352   .text.dir_remove:0000000000000000 $t
     /tmp/ccaQXGqa.s:1359   .text.dir_remove:0000000000000000 dir_remove
     /tmp/ccaQXGqa.s:1431   .text.check_fs:0000000000000000 $t
     /tmp/ccaQXGqa.s:1438   .text.check_fs:0000000000000000 check_fs
     /tmp/ccaQXGqa.s:1649   .text.check_fs:0000000000000090 $d
     /tmp/ccaQXGqa.s:1656   .text.find_volume:0000000000000000 $t
     /tmp/ccaQXGqa.s:1663   .text.find_volume:0000000000000000 find_volume
     /tmp/ccaQXGqa.s:2582   .text.find_volume:00000000000002c8 $d
     /tmp/ccaQXGqa.s:2588   .text.find_volume:00000000000002d4 $t
     /tmp/ccaQXGqa.s:2793   .text.find_volume:0000000000000360 $d
     /tmp/ccaQXGqa.s:2799   .text.put_fat.part.0:0000000000000000 $t
     /tmp/ccaQXGqa.s:2806   .text.put_fat.part.0:0000000000000000 put_fat.part.0
     /tmp/ccaQXGqa.s:3231   .text.get_fat.isra.0:0000000000000000 $t
     /tmp/ccaQXGqa.s:3238   .text.get_fat.isra.0:0000000000000000 get_fat.isra.0
     /tmp/ccaQXGqa.s:3568   .text.create_chain:0000000000000000 $t
     /tmp/ccaQXGqa.s:3575   .text.create_chain:0000000000000000 create_chain
     /tmp/ccaQXGqa.s:3821   .text.remove_chain:0000000000000000 $t
     /tmp/ccaQXGqa.s:3828   .text.remove_chain:0000000000000000 remove_chain
     /tmp/ccaQXGqa.s:4047   .text.dir_next:0000000000000000 $t
     /tmp/ccaQXGqa.s:4054   .text.dir_next:0000000000000000 dir_next
     /tmp/ccaQXGqa.s:4494   .text.unlock_fs.part.0:0000000000000000 $t
     /tmp/ccaQXGqa.s:4501   .text.unlock_fs.part.0:0000000000000000 unlock_fs.part.0
     /tmp/ccaQXGqa.s:4528   .text.dir_read.constprop.0:0000000000000000 $t
     /tmp/ccaQXGqa.s:4535   .text.dir_read.constprop.0:0000000000000000 dir_read.constprop.0
     /tmp/ccaQXGqa.s:4682   .text.dir_sdi.constprop.0:0000000000000000 $t
     /tmp/ccaQXGqa.s:4689   .text.dir_sdi.constprop.0:0000000000000000 dir_sdi.constprop.0
     /tmp/ccaQXGqa.s:4860   .text.dir_register:0000000000000000 $t
     /tmp/ccaQXGqa.s:4867   .text.dir_register:0000000000000000 dir_register
     /tmp/ccaQXGqa.s:5078   .rodata.follow_path.str1.4:0000000000000000 $d
     /tmp/ccaQXGqa.s:5082   .text.follow_path:0000000000000000 $t
     /tmp/ccaQXGqa.s:5089   .text.follow_path:0000000000000000 follow_path
     /tmp/ccaQXGqa.s:5787   .text.follow_path:00000000000001ec $d
     /tmp/ccaQXGqa.s:5793   .text.validate:0000000000000000 $t
     /tmp/ccaQXGqa.s:5800   .text.validate:0000000000000000 validate
     /tmp/ccaQXGqa.s:5923   .text.f_mount:0000000000000000 $t
     /tmp/ccaQXGqa.s:5931   .text.f_mount:0000000000000000 f_mount
     /tmp/ccaQXGqa.s:6202   .text.f_mount:00000000000000b8 $d
ARM GAS  /tmp/ccaQXGqa.s 			page 513


     /tmp/ccaQXGqa.s:6208   .text.f_open:0000000000000000 $t
     /tmp/ccaQXGqa.s:6216   .text.f_open:0000000000000000 f_open
     /tmp/ccaQXGqa.s:7263   .text.f_open:0000000000000310 $d
     /tmp/ccaQXGqa.s:7268   .text.f_read:0000000000000000 $t
     /tmp/ccaQXGqa.s:7276   .text.f_read:0000000000000000 f_read
     /tmp/ccaQXGqa.s:8037   .text.f_write:0000000000000000 $t
     /tmp/ccaQXGqa.s:8045   .text.f_write:0000000000000000 f_write
     /tmp/ccaQXGqa.s:8815   .text.putc_bfd:0000000000000000 $t
     /tmp/ccaQXGqa.s:8822   .text.putc_bfd:0000000000000000 putc_bfd
     /tmp/ccaQXGqa.s:8928   .text.putc_flush:0000000000000000 $t
     /tmp/ccaQXGqa.s:8935   .text.putc_flush:0000000000000000 putc_flush
     /tmp/ccaQXGqa.s:9012   .text.f_sync:0000000000000000 $t
     /tmp/ccaQXGqa.s:9020   .text.f_sync:0000000000000000 f_sync
     /tmp/ccaQXGqa.s:9442   .text.f_close:0000000000000000 $t
     /tmp/ccaQXGqa.s:9450   .text.f_close:0000000000000000 f_close
     /tmp/ccaQXGqa.s:9620   .text.f_close:0000000000000068 $d
     /tmp/ccaQXGqa.s:9627   .text.f_lseek:0000000000000000 $t
     /tmp/ccaQXGqa.s:9635   .text.f_lseek:0000000000000000 f_lseek
     /tmp/ccaQXGqa.s:10645  .text.f_opendir:0000000000000000 $t
     /tmp/ccaQXGqa.s:10653  .text.f_opendir:0000000000000000 f_opendir
     /tmp/ccaQXGqa.s:10930  .text.f_closedir:0000000000000000 $t
     /tmp/ccaQXGqa.s:10938  .text.f_closedir:0000000000000000 f_closedir
     /tmp/ccaQXGqa.s:11094  .text.f_closedir:0000000000000058 $d
     /tmp/ccaQXGqa.s:11101  .text.f_readdir:0000000000000000 $t
     /tmp/ccaQXGqa.s:11109  .text.f_readdir:0000000000000000 f_readdir
     /tmp/ccaQXGqa.s:11257  .text.f_stat:0000000000000000 $t
     /tmp/ccaQXGqa.s:11265  .text.f_stat:0000000000000000 f_stat
     /tmp/ccaQXGqa.s:11407  .text.f_getfree:0000000000000000 $t
     /tmp/ccaQXGqa.s:11415  .text.f_getfree:0000000000000000 f_getfree
     /tmp/ccaQXGqa.s:11814  .text.f_truncate:0000000000000000 $t
     /tmp/ccaQXGqa.s:11822  .text.f_truncate:0000000000000000 f_truncate
     /tmp/ccaQXGqa.s:12187  .text.f_unlink:0000000000000000 $t
     /tmp/ccaQXGqa.s:12195  .text.f_unlink:0000000000000000 f_unlink
     /tmp/ccaQXGqa.s:12491  .text.f_mkdir:0000000000000000 $t
     /tmp/ccaQXGqa.s:12499  .text.f_mkdir:0000000000000000 f_mkdir
     /tmp/ccaQXGqa.s:13333  .text.f_rename:0000000000000000 $t
     /tmp/ccaQXGqa.s:13341  .text.f_rename:0000000000000000 f_rename
     /tmp/ccaQXGqa.s:13830  .rodata.f_mkfs.str1.4:0000000000000000 $d
     /tmp/ccaQXGqa.s:13840  .text.f_mkfs:0000000000000000 $t
     /tmp/ccaQXGqa.s:13848  .text.f_mkfs:0000000000000000 f_mkfs
     /tmp/ccaQXGqa.s:14940  .text.f_mkfs:0000000000000348 $d
     /tmp/ccaQXGqa.s:14948  .text.f_mkfs:000000000000035c $t
     /tmp/ccaQXGqa.s:16157  .text.f_mkfs:0000000000000688 $d
     /tmp/ccaQXGqa.s:16166  .text.f_gets:0000000000000000 $t
     /tmp/ccaQXGqa.s:16174  .text.f_gets:0000000000000000 f_gets
     /tmp/ccaQXGqa.s:16294  .text.f_putc:0000000000000000 $t
     /tmp/ccaQXGqa.s:16302  .text.f_putc:0000000000000000 f_putc
     /tmp/ccaQXGqa.s:16371  .text.f_puts:0000000000000000 $t
     /tmp/ccaQXGqa.s:16379  .text.f_puts:0000000000000000 f_puts
     /tmp/ccaQXGqa.s:16480  .text.f_printf:0000000000000000 $t
     /tmp/ccaQXGqa.s:16488  .text.f_printf:0000000000000000 f_printf
     /tmp/ccaQXGqa.s:16689  .text.f_printf:000000000000009e $d
     /tmp/ccaQXGqa.s:16712  .text.f_printf:00000000000000cc $t
     /tmp/ccaQXGqa.s:17245  .bss.FatFs:0000000000000000 $d
     /tmp/ccaQXGqa.s:17249  .bss.FatFs:0000000000000000 FatFs
     /tmp/ccaQXGqa.s:17252  .bss.Files:0000000000000000 $d
     /tmp/ccaQXGqa.s:17256  .bss.Files:0000000000000000 Files
ARM GAS  /tmp/ccaQXGqa.s 			page 514


     /tmp/ccaQXGqa.s:17259  .bss.Fsid:0000000000000000 $d
     /tmp/ccaQXGqa.s:17263  .bss.Fsid:0000000000000000 Fsid
     /tmp/ccaQXGqa.s:17266  .rodata.ExCvt:0000000000000000 $d
     /tmp/ccaQXGqa.s:17270  .rodata.ExCvt:0000000000000000 ExCvt
     /tmp/ccaQXGqa.s:17279  .rodata.cst.15638:0000000000000000 $d
     /tmp/ccaQXGqa.s:17283  .rodata.cst.15638:0000000000000000 cst.15638
     /tmp/ccaQXGqa.s:17292  .rodata.cst32.15639:0000000000000000 $d
     /tmp/ccaQXGqa.s:17296  .rodata.cst32.15639:0000000000000000 cst32.15639

UNDEFINED SYMBOLS
disk_write
disk_ioctl
disk_read
ff_req_grant
disk_initialize
disk_status
ff_rel_grant
ff_del_syncobj
ff_cre_syncobj
get_fattime
