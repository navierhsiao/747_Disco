ARM GAS  /tmp/ccWj20lo.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_dot_prod_q31.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_dot_prod_q31,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	arm_dot_prod_q31
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_dot_prod_q31:
  27              	.LVL0:
  28              	.LFB145:
  29              		.file 1 "./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c"
   1:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * Title:        arm_dot_prod_q31.c
   4:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * Description:  Q31 dot product
   5:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  *
   6:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  *
   9:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** /*
  12:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  *
  14:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  *
  16:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  *
  20:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  *
  22:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  */
  28:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  29:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** #include "arm_math.h"
ARM GAS  /tmp/ccWj20lo.s 			page 2


  30:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  31:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** /**
  32:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @ingroup groupMath
  33:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  */
  34:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  35:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** /**
  36:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @addtogroup BasicDotProd
  37:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  */
  39:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  40:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** /**
  41:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @brief         Dot product of Q31 vectors.
  42:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @param[in]     pSrcA      points to the first input vector.
  43:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @param[in]     pSrcB      points to the second input vector.
  44:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @param[in]     blockSize  number of samples in each vector.
  45:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @param[out]    result     output result returned here.
  46:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @return        none
  47:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  48:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @par           Scaling and Overflow Behavior
  49:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****                    The intermediate multiplications are in 1.31 x 1.31 = 2.62 format and these
  50:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****                    are truncated to 2.48 format by discarding the lower 14 bits.
  51:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****                    The 2.48 result is then added without saturation to a 64-bit accumulator in 16.4
  52:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****                    There are 15 guard bits in the accumulator and there is no risk of overflow as l
  53:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****                    the length of the vectors is less than 2^16 elements.
  54:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****                    The return result is in 16.48 format.
  55:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  */
  56:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  57:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** void arm_dot_prod_q31(
  58:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   const q31_t * pSrcA,
  59:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   const q31_t * pSrcB,
  60:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****         uint32_t blockSize,
  61:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****         q63_t * result)
  62:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** {
  30              		.loc 1 62 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  63:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****         uint32_t blkCnt;                               /* Loop counter */
  35              		.loc 1 63 9 view .LVU1
  64:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****         q63_t sum = 0;                                 /* Temporary return variable */
  36              		.loc 1 64 9 view .LVU2
  65:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  66:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
  67:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  68:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   /* Loop unrolling: Compute 4 outputs at a time */
  69:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   blkCnt = blockSize >> 2U;
  70:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  71:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   while (blkCnt > 0U)
  72:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   {
  73:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
  74:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  75:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     /* Calculate dot product and store result in a temporary buffer. */
  76:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     sum += ((q63_t) *pSrcA++ * *pSrcB++) >> 14U;
  77:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  78:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     sum += ((q63_t) *pSrcA++ * *pSrcB++) >> 14U;
  79:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
ARM GAS  /tmp/ccWj20lo.s 			page 3


  80:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     sum += ((q63_t) *pSrcA++ * *pSrcB++) >> 14U;
  81:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  82:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     sum += ((q63_t) *pSrcA++ * *pSrcB++) >> 14U;
  83:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  84:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     /* Decrement loop counter */
  85:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     blkCnt--;
  86:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   }
  87:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  88:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   /* Loop unrolling: Compute remaining outputs */
  89:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   blkCnt = blockSize % 0x4U;
  90:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  91:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** #else
  92:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  93:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   /* Initialize blkCnt with number of samples */
  94:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   blkCnt = blockSize;
  37              		.loc 1 94 3 view .LVU3
  95:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  96:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
  97:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  98:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   while (blkCnt > 0U)
  38              		.loc 1 98 3 view .LVU4
  39              		.loc 1 98 9 view .LVU5
  62:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****         uint32_t blkCnt;                               /* Loop counter */
  40              		.loc 1 62 1 is_stmt 0 view .LVU6
  41 0000 2DE9F003 		push	{r4, r5, r6, r7, r8, r9}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 24
  44              		.cfi_offset 4, -24
  45              		.cfi_offset 5, -20
  46              		.cfi_offset 6, -16
  47              		.cfi_offset 7, -12
  48              		.cfi_offset 8, -8
  49              		.cfi_offset 9, -4
  64:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  50              		.loc 1 64 15 view .LVU7
  51 0004 0026     		movs	r6, #0
  52 0006 3746     		mov	r7, r6
  53              		.loc 1 98 9 view .LVU8
  54 0008 82B1     		cbz	r2, .L2
  55              	.LVL1:
  56              	.L3:
  99:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   {
 100:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
 101:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
 102:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     /* Calculate dot product and store result in a temporary buffer. */
 103:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     sum += ((q63_t) *pSrcA++ * *pSrcB++) >> 14U;
  57              		.loc 1 103 5 is_stmt 1 view .LVU9
  58              		.loc 1 103 30 is_stmt 0 view .LVU10
  59 000a 51F8044B 		ldr	r4, [r1], #4
  60              	.LVL2:
  61              		.loc 1 103 30 view .LVU11
  62 000e 50F8045B 		ldr	r5, [r0], #4
  63              	.LVL3:
  64              		.loc 1 103 30 view .LVU12
  65 0012 85FB0489 		smull	r8, r9, r5, r4
  66              		.loc 1 103 42 view .LVU13
  67 0016 4FEA9834 		lsr	r4, r8, #14
ARM GAS  /tmp/ccWj20lo.s 			page 4


  68 001a 4FEAA93C 		asr	ip, r9, #14
  69 001e 44EA8944 		orr	r4, r4, r9, lsl #18
  70              		.loc 1 103 9 view .LVU14
  71 0022 3619     		adds	r6, r6, r4
  72              	.LVL4:
  73              		.loc 1 103 9 view .LVU15
  74 0024 47EB0C07 		adc	r7, r7, ip
  75              	.LVL5:
 104:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
 105:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     /* Decrement loop counter */
 106:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     blkCnt--;
  76              		.loc 1 106 5 is_stmt 1 view .LVU16
  98:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   {
  77              		.loc 1 98 9 view .LVU17
  78 0028 013A     		subs	r2, r2, #1
  79              	.LVL6:
  98:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   {
  80              		.loc 1 98 9 is_stmt 0 view .LVU18
  81 002a EED1     		bne	.L3
  82              	.LVL7:
  83              	.L2:
 107:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   }
 108:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
 109:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   /* Store result in destination buffer in 16.48 format */
 110:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   *result = sum;
  84              		.loc 1 110 3 is_stmt 1 view .LVU19
  85              		.loc 1 110 11 is_stmt 0 view .LVU20
  86 002c C3E90067 		strd	r6, r7, [r3]
 111:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** }
  87              		.loc 1 111 1 view .LVU21
  88 0030 BDE8F003 		pop	{r4, r5, r6, r7, r8, r9}
  89              	.LCFI1:
  90              		.cfi_restore 9
  91              		.cfi_restore 8
  92              		.cfi_restore 7
  93              		.cfi_restore 6
  94              		.cfi_restore 5
  95              		.cfi_restore 4
  96              		.cfi_def_cfa_offset 0
  97 0034 7047     		bx	lr
  98              		.cfi_endproc
  99              	.LFE145:
 101 0036 00BF     		.text
 102              	.Letext0:
 103              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 104              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 105              		.file 4 "/usr/include/newlib/sys/_types.h"
 106              		.file 5 "/usr/include/newlib/sys/reent.h"
 107              		.file 6 "/usr/include/newlib/sys/lock.h"
 108              		.file 7 "/usr/include/newlib/math.h"
 109              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/ccWj20lo.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_dot_prod_q31.c
     /tmp/ccWj20lo.s:17     .text.arm_dot_prod_q31:0000000000000000 $t
     /tmp/ccWj20lo.s:26     .text.arm_dot_prod_q31:0000000000000000 arm_dot_prod_q31

NO UNDEFINED SYMBOLS
