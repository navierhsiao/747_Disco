ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_mat_mult_f32.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_mat_mult_f32,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	arm_mat_mult_f32
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_mat_mult_f32:
  27              	.LVL0:
  28              	.LFB145:
  29              		.file 1 ".//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c"
   1:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** /* ----------------------------------------------------------------------
   2:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * Project:      CMSIS DSP Library
   3:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * Title:        arm_mat_mult_f32.c
   4:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * Description:  Floating-point matrix multiplication
   5:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  *
   6:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * $Date:        18. March 2019
   7:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * $Revision:    V1.6.0
   8:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  *
   9:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * Target Processor: Cortex-M cores
  10:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * -------------------------------------------------------------------- */
  11:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** /*
  12:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  *
  14:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  *
  16:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * not use this file except in compliance with the License.
  18:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * You may obtain a copy of the License at
  19:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  *
  20:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  *
  22:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * See the License for the specific language governing permissions and
  26:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * limitations under the License.
  27:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  */
  28:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  29:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** #include "arm_math.h"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s 			page 2


  30:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  31:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** /**
  32:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * @ingroup groupMatrix
  33:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  */
  34:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  35:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** /**
  36:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * @defgroup MatrixMult Matrix Multiplication
  37:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  *
  38:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * Multiplies two matrices.
  39:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  *
  40:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * \image html MatrixMultiplication.gif "Multiplication of two 3 x 3 matrices"
  41:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  42:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * Matrix multiplication is only defined if the number of columns of the
  43:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * first matrix equals the number of rows of the second matrix.
  44:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * Multiplying an <code>M x N</code> matrix with an <code>N x P</code> matrix results
  45:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * in an <code>M x P</code> matrix.
  46:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * When matrix size checking is enabled, the functions check: (1) that the inner dimensions of
  47:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * <code>pSrcA</code> and <code>pSrcB</code> are equal; and (2) that the size of the output
  48:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * matrix equals the outer dimensions of <code>pSrcA</code> and <code>pSrcB</code>.
  49:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  */
  50:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  51:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  52:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** /**
  53:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * @addtogroup MatrixMult
  54:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * @{
  55:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  */
  56:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  57:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** /**
  58:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * @brief Floating-point matrix multiplication.
  59:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * @param[in]       *pSrcA points to the first input matrix structure
  60:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * @param[in]       *pSrcB points to the second input matrix structure
  61:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * @param[out]      *pDst points to output matrix structure
  62:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * @return     		The function returns either
  63:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of siz
  64:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****  */
  65:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** #if defined(ARM_MATH_NEON)
  66:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  67:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** #define GROUPOFROWS 8
  68:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  69:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** arm_status arm_mat_mult_f32(
  70:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   const arm_matrix_instance_f32 * pSrcA,
  71:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   const arm_matrix_instance_f32 * pSrcB,
  72:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   arm_matrix_instance_f32 * pDst)
  73:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** {
  74:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pIn1 = pSrcA->pData;                /* input data matrix pointer A */
  75:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pIn2 = pSrcB->pData;                /* input data matrix pointer B */
  76:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pInA = pSrcA->pData;                /* input data matrix pointer A  */
  77:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pOut = pDst->pData;                 /* output data matrix pointer */
  78:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *px;                                 /* Temporary output data matrix pointer */
  79:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t sum;                                 /* Accumulator */
  80:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   uint16_t numRowsA = pSrcA->numRows;            /* number of rows of input matrix A */
  81:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   uint16_t numColsB = pSrcB->numCols;            /* number of columns of input matrix B */
  82:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   uint16_t numColsA = pSrcA->numCols;            /* number of columns of input matrix A */
  83:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  84:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  85:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t in1, in2, in3, in4;
  86:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   uint16_t col, i = 0U, j, row = numRowsA, rowCnt, colCnt;      /* loop counters */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s 			page 3


  87:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   arm_status status;                             /* status of matrix multiplication */
  88:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  89:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32x4_t a0V, a1V, a2V, a3V, a4V, a5V, a6V, a7V;
  90:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32x4_t acc0,acc1,acc2,acc3,acc4,acc5,acc6,acc7,temp;
  91:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32x2_t accum = vdup_n_f32(0);
  92:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pIn1B = pSrcA->pData;    
  93:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pIn1C = pSrcA->pData;    
  94:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pIn1D = pSrcA->pData;  
  95:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pIn1E = pSrcA->pData; 
  96:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pIn1F = pSrcA->pData; 
  97:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pIn1G = pSrcA->pData; 
  98:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pIn1H = pSrcA->pData;   
  99:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 100:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pxB,*pxC, *pxD, *pxE, *pxF, *pxG, *pxH;                                 /* Temporary o
 101:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t sum0,sum1, sum2,sum3, sum4, sum5 , sum6, sum7;
 102:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 103:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** #ifdef ARM_MATH_MATRIX_CHECK
 104:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 105:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   /* Check for matrix mismatch condition */
 106:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   if ((pSrcA->numCols != pSrcB->numRows) ||
 107:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****      (pSrcA->numRows != pDst->numRows) || (pSrcB->numCols != pDst->numCols))
 108:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   {
 109:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 110:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     status = ARM_MATH_SIZE_MISMATCH;
 111:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   }
 112:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   else
 113:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** #endif /*      #ifdef ARM_MATH_MATRIX_CHECK    */
 114:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   {
 115:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     /* The following loop performs the dot-product of each row in pSrcA with each column in pSrcB *
 116:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     /* Row loop */
 117:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     rowCnt = row >> 3;
 118:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 119:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     while(rowCnt > 0)
 120:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     {
 121:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* Output pointer is set to starting address of the row being processed */
 122:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       px = pOut + GROUPOFROWS*i;
 123:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       pxB = px + numColsB;
 124:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       pxC = px + 2*numColsB;
 125:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       pxD = px + 3*numColsB;
 126:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       pxE = px + 4*numColsB;
 127:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       pxF = px + 5*numColsB;
 128:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       pxG = px + 6*numColsB;
 129:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       pxH = px + 7*numColsB;
 130:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 131:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* For every row wise process, the column loop counter is to be initiated */
 132:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       col = numColsB;
 133:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 134:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* For every row wise process, the pIn2 pointer is set
 135:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****        ** to the starting address of the pSrcB data */
 136:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       pIn2 = pSrcB->pData;
 137:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 138:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       j = 0U;
 139:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 140:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* Column loop */
 141:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       do
 142:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       {
 143:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Set the variable sum, that acts as accumulator, to zero */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s 			page 4


 144:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum0 = 0.0f;
 145:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum1 = 0.0f;
 146:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum2 = 0.0f;
 147:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum3 = 0.0f;
 148:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum4 = 0.0f;
 149:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum5 = 0.0f;
 150:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum6 = 0.0f;
 151:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum7 = 0.0f;
 152:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 153:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Initiate the pointer pIn1 to point to the starting address of the column being processed
 154:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         pIn1 = pInA;
 155:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         pIn1B = pIn1 + numColsA;
 156:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         pIn1C = pIn1 + 2*numColsA;
 157:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         pIn1D = pIn1 + 3*numColsA;
 158:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         pIn1E = pIn1 + 4*numColsA;
 159:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         pIn1F = pIn1 + 5*numColsA;
 160:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         pIn1G = pIn1 + 6*numColsA;
 161:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         pIn1H = pIn1 + 7*numColsA;
 162:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 163:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         acc0 = vdupq_n_f32(0.0);
 164:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         acc1 = vdupq_n_f32(0.0);
 165:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         acc2 = vdupq_n_f32(0.0);
 166:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         acc3 = vdupq_n_f32(0.0);
 167:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         acc4 = vdupq_n_f32(0.0);
 168:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         acc5 = vdupq_n_f32(0.0);
 169:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         acc6 = vdupq_n_f32(0.0);
 170:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         acc7 = vdupq_n_f32(0.0);
 171:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 172:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Compute 4 MACs simultaneously. */
 173:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         colCnt = numColsA >> 2U;
 174:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 175:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Matrix multiplication */
 176:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         while (colCnt > 0U)
 177:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         {
 178:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           /* c(m,n) = a(1,1)*b(1,1) + a(1,2)*b(2,1) + ... + a(m,p)*b(p,n) */
 179:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           a0V = vld1q_f32(pIn1);  
 180:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           a1V = vld1q_f32(pIn1B);  
 181:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           a2V = vld1q_f32(pIn1C); 
 182:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           a3V = vld1q_f32(pIn1D); 
 183:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           a4V = vld1q_f32(pIn1E); 
 184:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           a5V = vld1q_f32(pIn1F); 
 185:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           a6V = vld1q_f32(pIn1G); 
 186:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           a7V = vld1q_f32(pIn1H); 
 187:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 188:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 	  pIn1 += 4;
 189:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn1B += 4;
 190:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn1C += 4;
 191:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn1D += 4;
 192:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn1E += 4;
 193:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn1F += 4;
 194:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn1G += 4;
 195:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn1H += 4;
 196:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           
 197:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           temp[0] = *pIn2;
 198:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 199:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           temp[1] = *pIn2;
 200:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s 			page 5


 201:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           temp[2] = *pIn2;
 202:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 203:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           temp[3] = *pIn2;
 204:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 205:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 206:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           acc0 = vmlaq_f32(acc0,a0V,temp);
 207:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           acc1 = vmlaq_f32(acc1,a1V,temp);
 208:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           acc2 = vmlaq_f32(acc2,a2V,temp);
 209:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           acc3 = vmlaq_f32(acc3,a3V,temp);
 210:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           acc4 = vmlaq_f32(acc4,a4V,temp);
 211:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           acc5 = vmlaq_f32(acc5,a5V,temp);
 212:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           acc6 = vmlaq_f32(acc6,a6V,temp);
 213:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           acc7 = vmlaq_f32(acc7,a7V,temp);
 214:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 215:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           /* Decrement the loop count */
 216:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           colCnt--;
 217:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         }
 218:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 219:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         accum = vpadd_f32(vget_low_f32(acc0), vget_high_f32(acc0));
 220:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum0 += accum[0] + accum[1];
 221:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 222:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         accum = vpadd_f32(vget_low_f32(acc1), vget_high_f32(acc1));
 223:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum1 += accum[0] + accum[1];
 224:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 225:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         accum = vpadd_f32(vget_low_f32(acc2), vget_high_f32(acc2));
 226:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum2 += accum[0] + accum[1];
 227:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 228:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         accum = vpadd_f32(vget_low_f32(acc3), vget_high_f32(acc3));
 229:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum3 += accum[0] + accum[1];
 230:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 231:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         accum = vpadd_f32(vget_low_f32(acc4), vget_high_f32(acc4));
 232:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum4 += accum[0] + accum[1];
 233:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 234:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         accum = vpadd_f32(vget_low_f32(acc5), vget_high_f32(acc5));
 235:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum5 += accum[0] + accum[1];
 236:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 237:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         accum = vpadd_f32(vget_low_f32(acc6), vget_high_f32(acc6));
 238:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum6 += accum[0] + accum[1];
 239:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 240:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         accum = vpadd_f32(vget_low_f32(acc7), vget_high_f32(acc7));
 241:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum7 += accum[0] + accum[1];
 242:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 243:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* If the columns of pSrcA is not a multiple of 4, compute any remaining MACs here.
 244:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****          ** No loop unrolling is used. */
 245:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         colCnt = numColsA & 3;
 246:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 247:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         while (colCnt > 0U)
 248:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         {
 249:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           /* c(m,n) = a(1,1)*b(1,1) + a(1,2)*b(2,1) + ... + a(m,p)*b(p,n) */
 250:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           sum0 += *pIn1++ * (*pIn2);
 251:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           sum1 += *pIn1B++ * (*pIn2);
 252:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           sum2 += *pIn1C++ * (*pIn2);
 253:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           sum3 += *pIn1D++ * (*pIn2);
 254:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           sum4 += *pIn1E++ * (*pIn2);
 255:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           sum5 += *pIn1F++ * (*pIn2);
 256:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           sum6 += *pIn1G++ * (*pIn2);
 257:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           sum7 += *pIn1H++ * (*pIn2);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s 			page 6


 258:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 259:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 260:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           /* Decrement the loop counter */
 261:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           colCnt--;
 262:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         }
 263:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 264:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Store the result in the destination buffer */
 265:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         *px++ = sum0;
 266:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         *pxB++ = sum1;
 267:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         *pxC++ = sum2;
 268:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         *pxD++ = sum3;
 269:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         *pxE++ = sum4;
 270:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         *pxF++ = sum5;
 271:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         *pxG++ = sum6;
 272:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         *pxH++ = sum7;
 273:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 274:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Update the pointer pIn2 to point to the  starting address of the next column */
 275:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         j++;
 276:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         pIn2 = pSrcB->pData + j;
 277:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 278:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Decrement the column loop counter */
 279:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         col--;
 280:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 281:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       } while (col > 0U);
 282:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 283:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* Update the pointer pInA to point to the  starting address of the next row */
 284:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       i = i + numColsB;
 285:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       pInA = pInA + GROUPOFROWS*numColsA;
 286:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 287:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* Decrement the row loop counter */
 288:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       rowCnt--;
 289:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     } 
 290:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 291:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     /*
 292:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 293:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     i was the index of a group of rows computed by previous loop.
 294:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     Now i is the index of a row since below code is computing row per row
 295:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     and no more group of row per group of rows.
 296:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 297:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     */
 298:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 299:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     i = GROUPOFROWS*i;
 300:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     rowCnt = row & 7;
 301:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 302:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     while(rowCnt > 0)
 303:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     {
 304:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* Output pointer is set to starting address of the row being processed */
 305:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       px = pOut + i;
 306:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 307:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* For every row wise process, the column loop counter is to be initiated */
 308:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       col = numColsB;
 309:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 310:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* For every row wise process, the pIn2 pointer is set
 311:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****        ** to the starting address of the pSrcB data */
 312:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       pIn2 = pSrcB->pData;
 313:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 314:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       j = 0U;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s 			page 7


 315:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 316:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* Column loop */
 317:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       do
 318:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       {
 319:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Set the variable sum, that acts as accumulator, to zero */
 320:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum = 0.0f;
 321:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 322:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Initiate the pointer pIn1 to point to the starting address of the column being processed
 323:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         pIn1 = pInA;
 324:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 325:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         acc0 = vdupq_n_f32(0.0);
 326:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 327:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Compute 4 MACs simultaneously. */
 328:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         colCnt = numColsA >> 2U;
 329:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 330:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Matrix multiplication   */
 331:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         while (colCnt > 0U)
 332:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         {
 333:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           /* c(m,n) = a(1,1)*b(1,1) + a(1,2)*b(2,1) + ... + a(m,p)*b(p,n) */
 334:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           a0V = vld1q_f32(pIn1);  // load & separate real/imag pSrcA (de-interleave 2)
 335:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn1 += 4;
 336:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           
 337:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           temp[0] = *pIn2;
 338:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 339:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           temp[1] = *pIn2;
 340:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 341:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           temp[2] = *pIn2;
 342:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 343:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           temp[3] = *pIn2;
 344:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 345:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 346:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           acc0 = vmlaq_f32(acc0,a0V,temp);
 347:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 348:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           /* Decrement the loop count */
 349:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           colCnt--;
 350:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         }
 351:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 352:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         accum = vpadd_f32(vget_low_f32(acc0), vget_high_f32(acc0));
 353:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum += accum[0] + accum[1];
 354:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 355:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* If the columns of pSrcA is not a multiple of 4, compute any remaining MACs here.
 356:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****          ** No loop unrolling is used. */
 357:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         colCnt = numColsA % 0x4U;
 358:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 359:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         while (colCnt > 0U)
 360:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         {
 361:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           /* c(m,n) = a(1,1)*b(1,1) + a(1,2)*b(2,1) + ... + a(m,p)*b(p,n) */
 362:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           sum += *pIn1++ * (*pIn2);
 363:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 364:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 365:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           /* Decrement the loop counter */
 366:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           colCnt--;
 367:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         }
 368:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 369:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Store the result in the destination buffer */
 370:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         *px++ = sum;
 371:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s 			page 8


 372:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Update the pointer pIn2 to point to the  starting address of the next column */
 373:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         j++;
 374:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         pIn2 = pSrcB->pData + j;
 375:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 376:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Decrement the column loop counter */
 377:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         col--;
 378:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 379:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       } while (col > 0U);
 380:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 381:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 382:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* Update the pointer pInA to point to the  starting address of the next row */
 383:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       i = i + numColsB;
 384:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       pInA = pInA + numColsA;
 385:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 386:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* Decrement the row loop counter */
 387:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       rowCnt--;
 388:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 389:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     } 
 390:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     /* Set status as ARM_MATH_SUCCESS */
 391:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     status = ARM_MATH_SUCCESS;
 392:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   }
 393:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 394:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   /* Return to application */
 395:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   return (status);
 396:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** }
 397:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** #else
 398:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** arm_status arm_mat_mult_f32(
 399:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   const arm_matrix_instance_f32 * pSrcA,
 400:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   const arm_matrix_instance_f32 * pSrcB,
 401:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         arm_matrix_instance_f32 * pDst)
 402:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** {
  30              		.loc 1 402 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 403:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pIn1 = pSrcA->pData;                /* Input data matrix pointer A */
  34              		.loc 1 403 3 view .LVU1
 402:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pIn1 = pSrcA->pData;                /* Input data matrix pointer A */
  35              		.loc 1 402 1 is_stmt 0 view .LVU2
  36 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 32
  39              		.cfi_offset 4, -32
  40              		.cfi_offset 5, -28
  41              		.cfi_offset 6, -24
  42              		.cfi_offset 7, -20
  43              		.cfi_offset 8, -16
  44              		.cfi_offset 9, -12
  45              		.cfi_offset 10, -8
  46              		.cfi_offset 14, -4
 404:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pIn2 = pSrcB->pData;                /* Input data matrix pointer B */
 405:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pInA = pSrcA->pData;                /* Input data matrix pointer A */
 406:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pInB = pSrcB->pData;                /* Input data matrix pointer B */
 407:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pOut = pDst->pData;                 /* Output data matrix pointer */
 408:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *px;                                 /* Temporary output data matrix pointer */
 409:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t sum;                                 /* Accumulator */
 410:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   uint16_t numRowsA = pSrcA->numRows;            /* Number of rows of input matrix A */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s 			page 9


 411:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   uint16_t numColsB = pSrcB->numCols;            /* Number of columns of input matrix B */
 412:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   uint16_t numColsA = pSrcA->numCols;            /* Number of columns of input matrix A */
 413:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   uint32_t col, i = 0U, row = numRowsA, colCnt;  /* Loop counters */
 414:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   arm_status status;                             /* Status of matrix multiplication */
 415:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 416:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** #ifdef ARM_MATH_MATRIX_CHECK
 417:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 418:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   /* Check for matrix mismatch condition */
 419:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   if ((pSrcA->numCols != pSrcB->numRows) ||
 420:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       (pSrcA->numRows != pDst->numRows)  ||
 421:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       (pSrcB->numCols != pDst->numCols)    )
 422:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   {
 423:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 424:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     status = ARM_MATH_SIZE_MISMATCH;
 425:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   }
 426:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   else
 427:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 428:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** #endif /* #ifdef ARM_MATH_MATRIX_CHECK */
 429:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 430:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   {
 431:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     /* The following loop performs the dot-product of each row in pSrcA with each column in pSrcB *
 432:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     /* row loop */
 433:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     do
 434:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     {
 435:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* Output pointer is set to starting address of row being processed */
 436:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       px = pOut + i;
 437:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 438:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* For every row wise process, column loop counter is to be initiated */
 439:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       col = numColsB;
  47              		.loc 1 439 11 view .LVU3
  48 0004 4C88     		ldrh	r4, [r1, #2]
 440:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 441:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* For every row wise process, pIn2 pointer is set to starting address of pSrcB data */
 442:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       pIn2 = pSrcB->pData;
 443:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 444:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* column loop */
 445:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       do
 446:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       {
 447:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Set the variable sum, that acts as accumulator, to zero */
 448:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         sum = 0.0f;
 449:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 450:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Initialize pointer pIn1 to point to starting address of column being processed */
 451:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         pIn1 = pInA;
 452:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 453:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 454:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 455:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Loop unrolling: Compute 4 MACs at a time. */
 456:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         colCnt = numColsA >> 2U;
 457:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 458:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* matrix multiplication */
 459:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         while (colCnt > 0U)
 460:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         {
 461:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           /* c(m,n) = a(1,1) * b(1,1) + a(1,2) * b(2,1) + .... + a(m,p) * b(p,n) */
 462:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 463:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           /* Perform the multiply-accumulates */
 464:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           sum += *pIn1++ * *pIn2;
 465:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s 			page 10


 466:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 467:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           sum += *pIn1++ * *pIn2;
 468:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 469:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 470:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           sum += *pIn1++ * *pIn2;
 471:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 472:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 473:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           sum += *pIn1++ * *pIn2;
 474:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 475:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 476:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           /* Decrement loop counter */
 477:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           colCnt--;
 478:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         }
 479:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 480:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Loop unrolling: Compute remaining MACs */
 481:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         colCnt = numColsA % 0x4U;
 482:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 483:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** #else
 484:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 485:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Initialize cntCnt with number of columns */
 486:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         colCnt = numColsA;
  49              		.loc 1 486 16 view .LVU4
  50 0006 4788     		ldrh	r7, [r0, #2]
  51 0008 C4EB8478 		rsb	r8, r4, r4, lsl #30
  52 000c 5368     		ldr	r3, [r2, #4]
 403:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pIn2 = pSrcB->pData;                /* Input data matrix pointer B */
  53              		.loc 1 403 14 view .LVU5
  54 000e D0F804E0 		ldr	lr, [r0, #4]
  55              	.LVL1:
 404:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pIn2 = pSrcB->pData;                /* Input data matrix pointer B */
  56              		.loc 1 404 3 is_stmt 1 view .LVU6
 487:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 488:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 489:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 490:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         while (colCnt > 0U)
 491:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         {
 492:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           /* c(m,n) = a(1,1) * b(1,1) + a(1,2) * b(2,1) + .... + a(m,p) * b(p,n) */
 493:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 494:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           /* Perform the multiply-accumulates */
 495:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           sum += *pIn1++ * *pIn2;
 496:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 497:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 498:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           /* Decrement loop counter */
 499:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           colCnt--;
 500:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         }
 501:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 502:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Store result in destination buffer */
 503:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         *px++ = sum;
 504:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 505:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Decrement column loop counter */
 506:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         col--;
 507:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 508:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         /* Update pointer pIn2 to point to starting address of next column */
 509:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         pIn2 = pInB + (numColsB - col);
 510:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 511:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       } while (col > 0U);
 512:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s 			page 11


 513:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* Update pointer pInA to point to starting address of next row */
 514:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       i = i + numColsB;
 515:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       pInA = pInA + numColsA;
  57              		.loc 1 515 19 is_stmt 0 view .LVU7
  58 0012 4FEA8709 		lsl	r9, r7, #2
  59 0016 03EB840C 		add	ip, r3, r4, lsl #2
 404:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pInA = pSrcA->pData;                /* Input data matrix pointer A */
  60              		.loc 1 404 14 view .LVU8
  61 001a D1F804A0 		ldr	r10, [r1, #4]
  62              	.LVL2:
 405:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pInB = pSrcB->pData;                /* Input data matrix pointer B */
  63              		.loc 1 405 3 is_stmt 1 view .LVU9
 406:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *pOut = pDst->pData;                 /* Output data matrix pointer */
  64              		.loc 1 406 3 view .LVU10
 407:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t *px;                                 /* Temporary output data matrix pointer */
  65              		.loc 1 407 3 view .LVU11
 408:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   float32_t sum;                                 /* Accumulator */
  66              		.loc 1 408 3 view .LVU12
 409:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   uint16_t numRowsA = pSrcA->numRows;            /* Number of rows of input matrix A */
  67              		.loc 1 409 3 view .LVU13
 410:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   uint16_t numColsB = pSrcB->numCols;            /* Number of columns of input matrix B */
  68              		.loc 1 410 3 view .LVU14
 411:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   uint16_t numColsA = pSrcA->numCols;            /* Number of columns of input matrix A */
  69              		.loc 1 411 3 view .LVU15
 412:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   uint32_t col, i = 0U, row = numRowsA, colCnt;  /* Loop counters */
  70              		.loc 1 412 3 view .LVU16
 413:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   arm_status status;                             /* Status of matrix multiplication */
  71              		.loc 1 413 3 view .LVU17
 413:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   arm_status status;                             /* Status of matrix multiplication */
  72              		.loc 1 413 3 is_stmt 0 view .LVU18
  73 001e 4FEA8808 		lsl	r8, r8, #2
 413:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   arm_status status;                             /* Status of matrix multiplication */
  74              		.loc 1 413 25 view .LVU19
  75 0022 0088     		ldrh	r0, [r0]
  76              	.LVL3:
 496:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  77              		.loc 1 496 16 view .LVU20
  78 0024 A400     		lsls	r4, r4, #2
  79              	.LVL4:
  80              	.L5:
 414:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  81              		.loc 1 414 3 is_stmt 1 view .LVU21
 433:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     {
  82              		.loc 1 433 5 view .LVU22
 436:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  83              		.loc 1 436 7 view .LVU23
  84 0026 0CEB0805 		add	r5, ip, r8
  85              	.LVL5:
 439:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  86              		.loc 1 439 7 view .LVU24
 442:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  87              		.loc 1 442 7 view .LVU25
 442:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  88              		.loc 1 442 12 is_stmt 0 view .LVU26
  89 002a 5646     		mov	r6, r10
  90              	.LVL6:
  91              	.L4:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s 			page 12


 445:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       {
  92              		.loc 1 445 7 is_stmt 1 view .LVU27
 448:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  93              		.loc 1 448 9 view .LVU28
 451:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  94              		.loc 1 451 9 view .LVU29
 486:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
  95              		.loc 1 486 9 view .LVU30
 490:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         {
  96              		.loc 1 490 9 view .LVU31
 490:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         {
  97              		.loc 1 490 15 view .LVU32
  98 002c D7B1     		cbz	r7, .L6
 490:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         {
  99              		.loc 1 490 15 is_stmt 0 view .LVU33
 100 002e 3A46     		mov	r2, r7
 101 0030 3346     		mov	r3, r6
 451:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 102              		.loc 1 451 14 view .LVU34
 103 0032 7146     		mov	r1, lr
 448:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 104              		.loc 1 448 13 view .LVU35
 105 0034 DFED0F7A 		vldr.32	s15, .L13
 106              	.LVL7:
 107              	.L3:
 495:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 108              		.loc 1 495 11 is_stmt 1 view .LVU36
 495:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 109              		.loc 1 495 15 is_stmt 0 view .LVU37
 110 0038 93ED007A 		vldr.32	s14, [r3]
 490:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         {
 111              		.loc 1 490 15 view .LVU38
 112 003c 013A     		subs	r2, r2, #1
 113              	.LVL8:
 495:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 114              		.loc 1 495 15 view .LVU39
 115 003e F1EC016A 		vldmia.32	r1!, {s13}
 116              	.LVL9:
 496:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 117              		.loc 1 496 16 view .LVU40
 118 0042 2344     		add	r3, r3, r4
 119              	.LVL10:
 495:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****           pIn2 += numColsB;
 120              		.loc 1 495 15 view .LVU41
 121 0044 E6EE877A 		vfma.f32	s15, s13, s14
 122              	.LVL11:
 496:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 123              		.loc 1 496 11 is_stmt 1 view .LVU42
 499:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         }
 124              		.loc 1 499 11 view .LVU43
 490:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****         {
 125              		.loc 1 490 15 view .LVU44
 126 0048 F6D1     		bne	.L3
 503:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 127              		.loc 1 503 9 view .LVU45
 128              	.LVL12:
 503:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s 			page 13


 129              		.loc 1 503 15 is_stmt 0 view .LVU46
 130 004a E5EC017A 		vstmia.32	r5!, {s15}
 131              	.LVL13:
 506:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 132              		.loc 1 506 9 is_stmt 1 view .LVU47
 509:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 133              		.loc 1 509 9 view .LVU48
 511:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 134              		.loc 1 511 7 is_stmt 0 view .LVU49
 135 004e 6545     		cmp	r5, ip
 136 0050 06F10406 		add	r6, r6, #4
 137              	.LVL14:
 511:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 138              		.loc 1 511 15 is_stmt 1 view .LVU50
 511:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 139              		.loc 1 511 7 is_stmt 0 view .LVU51
 140 0054 EAD1     		bne	.L4
 141              	.LVL15:
 142              	.L12:
 514:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       pInA = pInA + numColsA;
 143              		.loc 1 514 7 is_stmt 1 view .LVU52
 144              		.loc 1 515 7 view .LVU53
 516:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 517:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       /* Decrement row loop counter */
 518:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****       row--;
 519:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 520:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     } while (row > 0U);
 145              		.loc 1 520 5 is_stmt 0 view .LVU54
 146 0056 0138     		subs	r0, r0, #1
 147              	.LVL16:
 515:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 148              		.loc 1 515 12 view .LVU55
 149 0058 CE44     		add	lr, lr, r9
 150              	.LVL17:
 518:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 151              		.loc 1 518 7 is_stmt 1 view .LVU56
 152              		.loc 1 520 13 view .LVU57
 153 005a 05EB040C 		add	ip, r5, r4
 154              		.loc 1 520 5 is_stmt 0 view .LVU58
 155 005e E2D1     		bne	.L5
 521:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 522:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     /* Set status as ARM_MATH_SUCCESS */
 523:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****     status = ARM_MATH_SUCCESS;
 524:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   }
 525:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 526:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   /* Return to application */
 527:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c ****   return (status);
 528:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** }
 156              		.loc 1 528 1 view .LVU59
 157 0060 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 158              	.LVL18:
 159              	.L6:
 448:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 160              		.loc 1 448 13 view .LVU60
 161 0064 DFED037A 		vldr.32	s15, .L13
 503:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 162              		.loc 1 503 9 is_stmt 1 view .LVU61
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s 			page 14


 163              	.LVL19:
 503:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 164              		.loc 1 503 9 is_stmt 0 view .LVU62
 165 0068 0436     		adds	r6, r6, #4
 166              	.LVL20:
 503:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 167              		.loc 1 503 15 view .LVU63
 168 006a E5EC017A 		vstmia.32	r5!, {s15}
 169              	.LVL21:
 506:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 170              		.loc 1 506 9 is_stmt 1 view .LVU64
 509:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 171              		.loc 1 509 9 view .LVU65
 511:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 172              		.loc 1 511 15 view .LVU66
 511:.//Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_f32.c **** 
 173              		.loc 1 511 7 is_stmt 0 view .LVU67
 174 006e 6545     		cmp	r5, ip
 175 0070 DCD1     		bne	.L4
 176 0072 F0E7     		b	.L12
 177              	.L14:
 178              		.align	2
 179              	.L13:
 180 0074 00000000 		.word	0
 181              		.cfi_endproc
 182              	.LFE145:
 184              		.text
 185              	.Letext0:
 186              		.file 2 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/
 187              		.file 3 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_std
 188              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock
 189              		.file 5 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_typ
 190              		.file 6 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/in
 191              		.file 7 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reen
 192              		.file 8 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 193              		.file 9 ".//Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_mat_mult_f32.c
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s:17     .text.arm_mat_mult_f32:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s:26     .text.arm_mat_mult_f32:0000000000000000 arm_mat_mult_f32
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccYl5W5v.s:180    .text.arm_mat_mult_f32:0000000000000074 $d

NO UNDEFINED SYMBOLS
