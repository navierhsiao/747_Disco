ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_conv_opt_q7.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_conv_opt_q7,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	arm_conv_opt_q7
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_conv_opt_q7:
  27              	.LVL0:
  28              	.LFB145:
  29              		.file 1 ".//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c"
   1:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** /* ----------------------------------------------------------------------
   2:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * Project:      CMSIS DSP Library
   3:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * Title:        arm_conv_opt_q7.c
   4:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * Description:  Convolution of Q7 sequences
   5:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  *
   6:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * $Date:        18. March 2019
   7:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * $Revision:    V1.6.0
   8:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  *
   9:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * Target Processor: Cortex-M cores
  10:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * -------------------------------------------------------------------- */
  11:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** /*
  12:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  *
  14:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * SPDX-License-Identifier: Apache-2.0
  15:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  *
  16:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * not use this file except in compliance with the License.
  18:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * You may obtain a copy of the License at
  19:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  *
  20:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  *
  22:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * Unless required by applicable law or agreed to in writing, software
  23:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * See the License for the specific language governing permissions and
  26:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  * limitations under the License.
  27:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  */
  28:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
  29:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** #include "arm_math.h"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 2


  30:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
  31:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** /**
  32:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   @ingroup groupFilters
  33:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  */
  34:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
  35:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** /**
  36:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   @addtogroup Conv
  37:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   @{
  38:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  */
  39:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
  40:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** /**
  41:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   @brief         Convolution of Q7 sequences.
  42:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   @param[in]     pSrcA      points to the first input sequence
  43:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   @param[in]     srcALen    length of the first input sequence
  44:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   @param[in]     pSrcB      points to the second input sequence
  45:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   @param[in]     srcBLen    length of the second input sequence
  46:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   @param[out]    pDst       points to the location where the output result is written.  Length srcA
  47:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   @param[in]     pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
  48:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   @param[in]     pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
  49:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   @return        none
  50:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
  51:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   @par           Scaling and Overflow Behavior
  52:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****                    The function is implemented using a 32-bit internal accumulator.
  53:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****                    Both the inputs are represented in 1.7 format and multiplications yield a 2.14 r
  54:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****                    The 2.14 intermediate results are accumulated in a 32-bit accumulator in 18.14 f
  55:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****                    This approach provides 17 guard bits and there is no risk of overflow as long as
  56:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****                    The 18.14 result is then truncated to 18.7 format by discarding the low 7 bits a
  57:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****  */
  58:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
  59:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** void arm_conv_opt_q7(
  60:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   const q7_t * pSrcA,
  61:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         uint32_t srcALen,
  62:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   const q7_t * pSrcB,
  63:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         uint32_t srcBLen,
  64:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q7_t * pDst,
  65:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q15_t * pScratch1,
  66:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q15_t * pScratch2)
  67:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** {
  30              		.loc 1 67 1 view -0
  31              		.cfi_startproc
  32              		@ args = 12, pretend = 0, frame = 40
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 67 1 is_stmt 0 view .LVU1
  35 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 36
  38              		.cfi_offset 4, -36
  39              		.cfi_offset 5, -32
  40              		.cfi_offset 6, -28
  41              		.cfi_offset 7, -24
  42              		.cfi_offset 8, -20
  43              		.cfi_offset 9, -16
  44              		.cfi_offset 10, -12
  45              		.cfi_offset 11, -8
  46              		.cfi_offset 14, -4
  68:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q15_t *pScr1 = pScratch1;                      /* Temporary pointer for scratch */
  69:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q15_t *pScr2 = pScratch2;                      /* Temporary pointer for scratch */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 3


  70:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q15_t x4;                                      /* Temporary input variable */
  71:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q15_t *py;                                     /* Temporary input2 pointer */
  72:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q31_t acc0, acc1, acc2, acc3;                  /* Accumulators */
  73:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   const q7_t *pIn1, *pIn2;                             /* InputA and inputB pointer */
  74:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         uint32_t j, k, blkCnt, tapCnt;                 /* Loop counter */
  75:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q31_t x1, x2, x3, y1;                          /* Temporary input variables */
  76:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   const q7_t *px;                                      /* Temporary input1 pointer */
  77:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q7_t *pOut = pDst;                             /* Output pointer */
  78:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q7_t out0, out1, out2, out3;                   /* Temporary variables */
  79:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
  80:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
  81:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* srcB is always made to slide across srcA. */
  82:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
  83:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   if (srcALen >= srcBLen)
  47              		.loc 1 83 6 view .LVU2
  48 0004 9942     		cmp	r1, r3
  67:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q15_t *pScr1 = pScratch1;                      /* Temporary pointer for scratch */
  49              		.loc 1 67 1 view .LVU3
  50 0006 8BB0     		sub	sp, sp, #44
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 80
  67:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q15_t *pScr1 = pScratch1;                      /* Temporary pointer for scratch */
  53              		.loc 1 67 1 view .LVU4
  54 0008 0F46     		mov	r7, r1
  55 000a 0646     		mov	r6, r0
  56 000c 1446     		mov	r4, r2
  68:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q15_t *pScr1 = pScratch1;                      /* Temporary pointer for scratch */
  57              		.loc 1 68 9 is_stmt 1 view .LVU5
  58              	.LVL1:
  69:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q15_t x4;                                      /* Temporary input variable */
  59              		.loc 1 69 9 view .LVU6
  67:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q15_t *pScr1 = pScratch1;                      /* Temporary pointer for scratch */
  60              		.loc 1 67 1 is_stmt 0 view .LVU7
  61 000e DDF858A0 		ldr	r10, [sp, #88]
  62              	.LVL2:
  70:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q15_t *py;                                     /* Temporary input2 pointer */
  63              		.loc 1 70 9 is_stmt 1 view .LVU8
  71:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q31_t acc0, acc1, acc2, acc3;                  /* Accumulators */
  64              		.loc 1 71 9 view .LVU9
  72:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   const q7_t *pIn1, *pIn2;                             /* InputA and inputB pointer */
  65              		.loc 1 72 9 view .LVU10
  73:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         uint32_t j, k, blkCnt, tapCnt;                 /* Loop counter */
  66              		.loc 1 73 3 view .LVU11
  74:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q31_t x1, x2, x3, y1;                          /* Temporary input variables */
  67              		.loc 1 74 9 view .LVU12
  75:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   const q7_t *px;                                      /* Temporary input1 pointer */
  68              		.loc 1 75 9 view .LVU13
  76:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q7_t *pOut = pDst;                             /* Output pointer */
  69              		.loc 1 76 3 view .LVU14
  77:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q7_t out0, out1, out2, out3;                   /* Temporary variables */
  70              		.loc 1 77 9 view .LVU15
  78:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
  71              		.loc 1 78 9 view .LVU16
  72              		.loc 1 83 3 view .LVU17
  67:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q15_t *pScr1 = pScratch1;                      /* Temporary pointer for scratch */
  73              		.loc 1 67 1 is_stmt 0 view .LVU18
  74 0012 0793     		str	r3, [sp, #28]
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 4


  75              		.loc 1 83 6 view .LVU19
  76 0014 05D2     		bcs	.L2
  77 0016 1946     		mov	r1, r3
  78              	.LVL3:
  84:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
  85:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Initialization of inputA pointer */
  86:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     pIn1 = pSrcA;
  87:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
  88:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Initialization of inputB pointer */
  89:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     pIn2 = pSrcB;
  90:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   }
  91:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   else
  92:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
  93:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Initialization of inputA pointer */
  94:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     pIn1 = pSrcB;
  79              		.loc 1 94 10 view .LVU20
  80 0018 1646     		mov	r6, r2
  83:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
  81              		.loc 1 83 6 view .LVU21
  82 001a 3B46     		mov	r3, r7
  83              	.LVL4:
  95:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
  96:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Initialization of inputB pointer */
  97:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     pIn2 = pSrcA;
  84              		.loc 1 97 10 view .LVU22
  85 001c 0446     		mov	r4, r0
  83:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
  86              		.loc 1 83 6 view .LVU23
  87 001e 0F46     		mov	r7, r1
  88              	.LVL5:
  83:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
  89              		.loc 1 83 6 view .LVU24
  90 0020 0793     		str	r3, [sp, #28]
  91              	.LVL6:
  92              	.L2:
  98:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
  99:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 100:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     j = srcBLen;
 101:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     srcBLen = srcALen;
 102:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     srcALen = j;
 103:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   }
 104:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 105:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* points to smaller length sequence */
 106:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   px = pIn2 + srcBLen - 1;
  93              		.loc 1 106 3 is_stmt 1 view .LVU25
  94              		.loc 1 106 23 is_stmt 0 view .LVU26
  95 0022 079B     		ldr	r3, [sp, #28]
  96 0024 5A1E     		subs	r2, r3, #1
  97              	.LVL7:
 107:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 108:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* Apply loop unrolling and do 4 Copies simultaneously. */
 109:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   k = srcBLen >> 2U;
 110:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 111:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 112:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 113:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   while (k > 0U)
  98              		.loc 1 113 9 view .LVU27
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 5


  99 0026 9808     		lsrs	r0, r3, #2
 100              	.LVL8:
 106:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 101              		.loc 1 106 6 view .LVU28
 102 0028 1444     		add	r4, r4, r2
 103              	.LVL9:
 109:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 104              		.loc 1 109 3 is_stmt 1 view .LVU29
 105              		.loc 1 113 3 view .LVU30
 106              		.loc 1 113 9 view .LVU31
 107 002a 0190     		str	r0, [sp, #4]
 108 002c 00F06181 		beq	.L25
 109 0030 0AF10801 		add	r1, r10, #8
 110 0034 231F     		subs	r3, r4, #4
 111 0036 A4EB8005 		sub	r5, r4, r0, lsl #2
 112              	.LVL10:
 113              	.L4:
 114:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 115:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* copy second buffer in reversal manner */
 116:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) *px--;
 114              		.loc 1 116 5 view .LVU32
 115              		.loc 1 116 8 is_stmt 0 view .LVU33
 116 003a 93F904C0 		ldrsb	ip, [r3, #4]
 117              	.LVL11:
 117:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr2++ = x4;
 118              		.loc 1 117 5 is_stmt 1 view .LVU34
 113:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 119              		.loc 1 113 9 is_stmt 0 view .LVU35
 120 003e AB42     		cmp	r3, r5
 121 0040 01F10801 		add	r1, r1, #8
 122              	.LVL12:
 113:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 123              		.loc 1 113 9 view .LVU36
 124 0044 A3F10403 		sub	r3, r3, #4
 125              	.LVL13:
 116:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr2++ = x4;
 126              		.loc 1 116 8 view .LVU37
 127 0048 21F810CC 		strh	ip, [r1, #-16]	@ movhi
 128              	.LVL14:
 118:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) *px--;
 129              		.loc 1 118 5 is_stmt 1 view .LVU38
 119:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr2++ = x4;
 130              		.loc 1 119 5 view .LVU39
 118:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) *px--;
 131              		.loc 1 118 8 is_stmt 0 view .LVU40
 132 004c 93F907C0 		ldrsb	ip, [r3, #7]
 133 0050 21F80ECC 		strh	ip, [r1, #-14]	@ movhi
 120:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) *px--;
 134              		.loc 1 120 5 is_stmt 1 view .LVU41
 135              	.LVL15:
 121:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr2++ = x4;
 136              		.loc 1 121 5 view .LVU42
 120:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) *px--;
 137              		.loc 1 120 8 is_stmt 0 view .LVU43
 138 0054 93F906C0 		ldrsb	ip, [r3, #6]
 139 0058 21F80CCC 		strh	ip, [r1, #-12]	@ movhi
 122:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) *px--;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 6


 140              		.loc 1 122 5 is_stmt 1 view .LVU44
 141              	.LVL16:
 123:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr2++ = x4;
 142              		.loc 1 123 5 view .LVU45
 122:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) *px--;
 143              		.loc 1 122 8 is_stmt 0 view .LVU46
 144 005c 93F905C0 		ldrsb	ip, [r3, #5]
 145 0060 21F80ACC 		strh	ip, [r1, #-10]	@ movhi
 124:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 125:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Decrement loop counter */
 126:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     k--;
 146              		.loc 1 126 5 is_stmt 1 view .LVU47
 113:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 147              		.loc 1 113 9 view .LVU48
 148 0064 E9D1     		bne	.L4
 149 0066 019B     		ldr	r3, [sp, #4]
 150 0068 C3EB8371 		rsb	r1, r3, r3, lsl #30
 151 006c 0AEBC303 		add	r3, r10, r3, lsl #3
 152 0070 04EB8104 		add	r4, r4, r1, lsl #2
 153              	.L3:
 127:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   }
 128:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 129:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 130:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****    ** No loop unrolling is used. */
 131:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   k = srcBLen % 0x4U;
 154              		.loc 1 131 3 view .LVU49
 155              	.LVL17:
 132:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 133:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   while (k > 0U)
 156              		.loc 1 133 3 view .LVU50
 157              		.loc 1 133 9 view .LVU51
 158 0074 0799     		ldr	r1, [sp, #28]
 159 0076 11F00301 		ands	r1, r1, #3
 160              	.LVL18:
 161              		.loc 1 133 9 is_stmt 0 view .LVU52
 162 007a 0291     		str	r1, [sp, #8]
 163 007c 08D0     		beq	.L9
 164 007e 0299     		ldr	r1, [sp, #8]
 165              		.loc 1 133 9 view .LVU53
 166 0080 03EB4100 		add	r0, r3, r1, lsl #1
 167              	.LVL19:
 168              	.L8:
 134:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 135:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* copy second buffer in reversal manner for remaining samples */
 136:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) *px--;
 169              		.loc 1 136 5 is_stmt 1 view .LVU54
 137:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr2++ = x4;
 170              		.loc 1 137 5 view .LVU55
 136:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr2++ = x4;
 171              		.loc 1 136 8 is_stmt 0 view .LVU56
 172 0084 14F90119 		ldrsb	r1, [r4], #-1
 173              	.LVL20:
 136:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr2++ = x4;
 174              		.loc 1 136 8 view .LVU57
 175 0088 23F8021B 		strh	r1, [r3], #2	@ movhi
 176              	.LVL21:
 138:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 7


 139:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Decrement loop counter */
 140:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     k--;
 177              		.loc 1 140 5 is_stmt 1 view .LVU58
 133:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 178              		.loc 1 133 9 view .LVU59
 179 008c 8342     		cmp	r3, r0
 180 008e F9D1     		bne	.L8
 181              	.LVL22:
 182              	.L9:
 141:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   }
 142:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 143:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* Fill (srcBLen - 1U) zeros in scratch buffer */
 144:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   arm_fill_q15(0, pScr1, (srcBLen - 1U));
 183              		.loc 1 144 3 view .LVU60
 184 0090 1599     		ldr	r1, [sp, #84]
 185 0092 0020     		movs	r0, #0
 186 0094 0092     		str	r2, [sp]
 187 0096 FFF7FEFF 		bl	arm_fill_q15
 188              	.LVL23:
 145:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 146:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* Update temporary scratch pointer */
 147:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   pScr1 += (srcBLen - 1U);
 189              		.loc 1 147 3 view .LVU61
 190              		.loc 1 147 9 is_stmt 0 view .LVU62
 191 009a 079B     		ldr	r3, [sp, #28]
 192 009c 6FF00041 		mvn	r1, #-2147483648
 148:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 149:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* Copy (srcALen) samples in scratch buffer */
 150:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* Apply loop unrolling and do 4 Copies simultaneously. */
 151:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   k = srcALen >> 2U;
 152:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 153:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 154:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****    ** a second loop below copies for the remaining 1 to 3 samples. */
 155:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   while (k > 0U)
 193              		.loc 1 155 9 view .LVU63
 194 00a0 5FEA970C 		lsrs	ip, r7, #2
 195 00a4 009A     		ldr	r2, [sp]
 147:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 196              		.loc 1 147 9 view .LVU64
 197 00a6 1944     		add	r1, r1, r3
 198 00a8 159B     		ldr	r3, [sp, #84]
 199 00aa 03EB4101 		add	r1, r3, r1, lsl #1
 200              	.LVL24:
 151:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 201              		.loc 1 151 3 is_stmt 1 view .LVU65
 202              		.loc 1 155 3 view .LVU66
 203              		.loc 1 155 9 view .LVU67
 204 00ae 1DD0     		beq	.L7
 205 00b0 331D     		adds	r3, r6, #4
 206 00b2 01F10804 		add	r4, r1, #8
 207              	.LVL25:
 208              		.loc 1 155 9 is_stmt 0 view .LVU68
 209 00b6 4FEA8C0E 		lsl	lr, ip, #2
 210 00ba 03EB8C00 		add	r0, r3, ip, lsl #2
 211              	.LVL26:
 212              	.L10:
 156:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 8


 157:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* copy second buffer in reversal manner */
 158:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) *pIn1++;
 213              		.loc 1 158 5 is_stmt 1 view .LVU69
 159:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = x4;
 214              		.loc 1 159 5 view .LVU70
 158:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = x4;
 215              		.loc 1 158 8 is_stmt 0 view .LVU71
 216 00be 13F9045C 		ldrsb	r5, [r3, #-4]
 217 00c2 0433     		adds	r3, r3, #4
 218              	.LVL27:
 158:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = x4;
 219              		.loc 1 158 8 view .LVU72
 220 00c4 0834     		adds	r4, r4, #8
 221              	.LVL28:
 158:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = x4;
 222              		.loc 1 158 8 view .LVU73
 223 00c6 24F8105C 		strh	r5, [r4, #-16]	@ movhi
 224              	.LVL29:
 160:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) *pIn1++;
 225              		.loc 1 160 5 is_stmt 1 view .LVU74
 161:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = x4;
 226              		.loc 1 161 5 view .LVU75
 160:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) *pIn1++;
 227              		.loc 1 160 8 is_stmt 0 view .LVU76
 228 00ca 13F9075C 		ldrsb	r5, [r3, #-7]
 229 00ce 24F80E5C 		strh	r5, [r4, #-14]	@ movhi
 162:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) *pIn1++;
 230              		.loc 1 162 5 is_stmt 1 view .LVU77
 231              	.LVL30:
 163:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = x4;
 232              		.loc 1 163 5 view .LVU78
 162:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) *pIn1++;
 233              		.loc 1 162 8 is_stmt 0 view .LVU79
 234 00d2 13F9065C 		ldrsb	r5, [r3, #-6]
 235 00d6 24F80C5C 		strh	r5, [r4, #-12]	@ movhi
 164:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) *pIn1++;
 236              		.loc 1 164 5 is_stmt 1 view .LVU80
 237              	.LVL31:
 165:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = x4;
 238              		.loc 1 165 5 view .LVU81
 164:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) *pIn1++;
 239              		.loc 1 164 8 is_stmt 0 view .LVU82
 240 00da 13F9055C 		ldrsb	r5, [r3, #-5]
 155:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 241              		.loc 1 155 9 view .LVU83
 242 00de 8342     		cmp	r3, r0
 164:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) *pIn1++;
 243              		.loc 1 164 8 view .LVU84
 244 00e0 24F80A5C 		strh	r5, [r4, #-10]	@ movhi
 166:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 167:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Decrement loop counter */
 168:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     k--;
 245              		.loc 1 168 5 is_stmt 1 view .LVU85
 155:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 246              		.loc 1 155 9 view .LVU86
 247 00e4 EBD1     		bne	.L10
 248 00e6 01EBCC01 		add	r1, r1, ip, lsl #3
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 9


 249 00ea 7644     		add	r6, r6, lr
 250              	.L7:
 169:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   }
 170:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 171:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 172:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****    ** No loop unrolling is used. */
 173:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   k = srcALen % 0x4U;
 251              		.loc 1 173 3 view .LVU87
 252              	.LVL32:
 174:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 175:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   while (k > 0U)
 253              		.loc 1 175 3 view .LVU88
 254              		.loc 1 175 9 view .LVU89
 255 00ec 17F00305 		ands	r5, r7, #3
 256              	.LVL33:
 257              		.loc 1 175 9 is_stmt 0 view .LVU90
 258 00f0 09D0     		beq	.L11
 259 00f2 7419     		adds	r4, r6, r5
 260 00f4 0B46     		mov	r3, r1
 261              	.LVL34:
 262              	.L12:
 176:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 177:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* copy second buffer in reversal manner for remaining samples */
 178:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x4 = (q15_t) * pIn1++;
 263              		.loc 1 178 5 is_stmt 1 view .LVU91
 179:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = x4;
 264              		.loc 1 179 5 view .LVU92
 178:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = x4;
 265              		.loc 1 178 8 is_stmt 0 view .LVU93
 266 00f6 16F9010B 		ldrsb	r0, [r6], #1
 267              	.LVL35:
 175:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 268              		.loc 1 175 9 view .LVU94
 269 00fa B442     		cmp	r4, r6
 178:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pScr1++ = x4;
 270              		.loc 1 178 8 view .LVU95
 271 00fc 23F8020B 		strh	r0, [r3], #2	@ movhi
 272              	.LVL36:
 180:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 181:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Decrement the loop counter */
 182:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     k--;
 273              		.loc 1 182 5 is_stmt 1 view .LVU96
 175:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 274              		.loc 1 175 9 view .LVU97
 275 0100 F9D1     		bne	.L12
 276 0102 01EB4501 		add	r1, r1, r5, lsl #1
 277              	.LVL37:
 278              	.L11:
 183:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   }
 184:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 185:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* Fill (srcBLen - 1U) zeros at end of scratch buffer */
 186:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   arm_fill_q15(0, pScr1, (srcBLen - 1U));
 279              		.loc 1 186 3 view .LVU98
 280 0106 0020     		movs	r0, #0
 281 0108 FFF7FEFF 		bl	arm_fill_q15
 282              	.LVL38:
 187:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 10


 188:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* Update pointer */
 189:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   pScr1 += (srcBLen - 1U);
 283              		.loc 1 189 3 view .LVU99
 190:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 191:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* Temporary pointer for scratch2 */
 192:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   py = pScratch2;
 284              		.loc 1 192 3 view .LVU100
 193:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 194:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* Initialization of pIn2 pointer */
 195:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   pIn2 = (q7_t *) py;
 285              		.loc 1 195 3 view .LVU101
 196:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 197:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   pScr2 = py;
 286              		.loc 1 197 3 view .LVU102
 198:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 199:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* Actual convolution process starts here */
 200:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   blkCnt = (srcALen + srcBLen - 1U) >> 2U;
 287              		.loc 1 200 3 view .LVU103
 288              		.loc 1 200 21 is_stmt 0 view .LVU104
 289 010c 079B     		ldr	r3, [sp, #28]
 290 010e 1F44     		add	r7, r7, r3
 291              	.LVL39:
 292              		.loc 1 200 31 view .LVU105
 293 0110 7B1E     		subs	r3, r7, #1
 201:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 202:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   while (blkCnt > 0)
 294              		.loc 1 202 9 view .LVU106
 295 0112 9A08     		lsrs	r2, r3, #2
 200:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 296              		.loc 1 200 31 view .LVU107
 297 0114 0893     		str	r3, [sp, #32]
 298              	.LVL40:
 299              		.loc 1 202 3 is_stmt 1 view .LVU108
 300              		.loc 1 202 9 view .LVU109
 301 0116 0992     		str	r2, [sp, #36]
 302 0118 00F0E880 		beq	.L26
 303 011c 0199     		ldr	r1, [sp, #4]
 304 011e CDF858A0 		str	r10, [sp, #88]
 305              	.LVL41:
 306              		.loc 1 202 9 is_stmt 0 view .LVU110
 307 0122 CB00     		lsls	r3, r1, #3
 203:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 204:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Initialze temporary scratch pointer as scratch1 */
 205:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     pScr1 = pScratch1;
 206:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 207:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Clear Accumlators */
 208:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     acc0 = 0;
 209:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     acc1 = 0;
 210:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     acc2 = 0;
 211:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     acc3 = 0;
 212:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 213:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Read two samples from scratch1 buffer */
 214:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x1 = read_q15x2_ia (&pScr1);
 215:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 216:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Read next two samples from scratch1 buffer */
 217:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     x2 = read_q15x2_ia (&pScr1);
 218:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 11


 219:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     tapCnt = (srcBLen) >> 2U;
 220:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 221:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     while (tapCnt > 0U)
 222:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 223:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       /* Read four samples from smaller buffer */
 224:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       y1 = read_q15x2_ia (&pScr2);
 225:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 226:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       /* multiply and accumlate */
 227:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc0 = __SMLAD(x1, y1, acc0);
 228:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc2 = __SMLAD(x2, y1, acc2);
 229:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 230:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       /* pack input data */
 231:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 232:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       x3 = __PKHBT(x2, x1, 0);
 308              		.loc 1 232 12 view .LVU111
 309 0124 DFF8D0B1 		ldr	fp, .L49
 310 0128 0833     		adds	r3, r3, #8
 311 012a 0593     		str	r3, [sp, #20]
 312 012c 0AEBC103 		add	r3, r10, r1, lsl #3
 313 0130 DDE91440 		ldrd	r4, r0, [sp, #80]
 314 0134 0493     		str	r3, [sp, #16]
 315 0136 029B     		ldr	r3, [sp, #8]
 316 0138 04EB8202 		add	r2, r4, r2, lsl #2
 317              	.LVL42:
 318              		.loc 1 232 12 view .LVU112
 319 013c 8246     		mov	r10, r0
 320              	.LVL43:
 321              		.loc 1 232 12 view .LVU113
 322 013e 5B00     		lsls	r3, r3, #1
 323 0140 0392     		str	r2, [sp, #12]
 324 0142 0693     		str	r3, [sp, #24]
 325              	.LVL44:
 326              	.L18:
 205:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 327              		.loc 1 205 5 is_stmt 1 view .LVU114
 208:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     acc1 = 0;
 328              		.loc 1 208 5 view .LVU115
 209:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     acc2 = 0;
 329              		.loc 1 209 5 view .LVU116
 210:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     acc3 = 0;
 330              		.loc 1 210 5 view .LVU117
 211:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 331              		.loc 1 211 5 view .LVU118
 214:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 332              		.loc 1 214 5 view .LVU119
 333              	.LBB37:
 334              	.LBI37:
 335              		.file 2 ".//Libraries/CMSIS/DSP/Include/arm_math.h"
   1:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /******************************************************************************
   2:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @file     arm_math.h
   3:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief    Public header file for CMSIS DSP Library
   4:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @version  V1.6.0
   5:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @date     18. March 2019
   6:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  ******************************************************************************/
   7:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /*
   8:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved.
   9:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 12


  10:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  12:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * not use this file except in compliance with the License.
  14:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * You may obtain a copy of the License at
  15:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  16:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  18:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * See the License for the specific language governing permissions and
  22:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * limitations under the License.
  23:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
  24:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
  25:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
  26:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  28:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Introduction
  29:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  30:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  31:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  34:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Basic math functions
  36:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Fast math functions
  37:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Complex math functions
  38:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Filters
  39:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Matrix functions
  40:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Transform functions
  41:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Motor control functions
  42:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Statistical functions
  43:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Support functions
  44:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Interpolation functions
  45:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  46:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  49:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Using the Library
  50:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  51:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  52:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  58:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  59:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  61:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  64:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 13


  67:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  70:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  73:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  77:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  78:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Examples
  79:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * --------
  80:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  81:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  82:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  83:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Toolchain Support
  84:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  85:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  86:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  87:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  88:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  89:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Building the Library
  90:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  91:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  92:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  93:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
  94:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  95:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  96:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
  97:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  98:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Preprocessor Macros
  99:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 100:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 101:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Each library project have different preprocessor macros.
 102:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 103:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 104:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 105:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 106:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 107:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 108:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 109:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 110:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 111:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 112:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 113:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 114:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 115:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_LOOPUNROLL:
 116:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 117:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_LOOPUNROLL to enable manual loop unrolling in DSP functions
 118:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 119:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON:
 120:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 121:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON to enable Neon versions of the DSP functions.
 122:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * It is not enabled by default when Neon is available because performances are 
 123:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * dependent on the compiler and target architecture.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 14


 124:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 125:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON_EXPERIMENTAL:
 126:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 127:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON_EXPERIMENTAL to enable experimental Neon versions of 
 128:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * of some DSP functions. Experimental Neon versions currently do not have better
 129:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * performances than the scalar versions.
 130:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 131:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 132:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 133:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * -----------------------------
 134:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 135:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 136:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |File/Folder                      |Content                                                    
 137:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |---------------------------------|-----------------------------------------------------------
 138:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP     | This documentation                                        
 139:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\DSP_Lib_TestSuite | DSP_Lib test suite                                        
 140:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Examples          | Example projects demonstrating the usage of the library fu
 141:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Include           | DSP_Lib include files                                     
 142:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Lib               | DSP_Lib binaries                                          
 143:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Projects          | Projects to rebuild DSP_Lib binaries                      
 144:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Source            | DSP_Lib source files                                      
 145:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 146:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 147:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Revision History of CMSIS-DSP
 148:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 149:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 150:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 151:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 152:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 153:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 154:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 155:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 156:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 157:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 158:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 159:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 160:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 161:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * operate on individual values and not arrays.
 162:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 163:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 164:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 165:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 166:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 167:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 168:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 169:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 170:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * (real, imag, real, imag, ...).
 171:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 172:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 173:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * real values.
 174:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 175:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 176:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 177:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 178:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 179:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 180:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 15


 181:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 182:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 183:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 184:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 185:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * the type
 186:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 187:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * below:
 188:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 189:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     typedef struct
 190:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     {
 191:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 192:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 193:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 194:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 195:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 196:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 197:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 198:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 199:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 200:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 201:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * matrix element (i, j) is stored at:
 202:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 203:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     pData[i*numCols + j]
 204:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 205:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 206:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Init Functions
 207:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 208:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * data structure.
 209:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 210:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Refer to \ref arm_mat_init_f32(), \ref arm_mat_init_q31() and \ref arm_mat_init_q15()
 211:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * for floating-point, Q31 and Q15 types,  respectively.
 212:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 213:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par
 214:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 215:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 216:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * To place the instance structure in a const data
 217:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 218:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 219:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 220:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 221:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 222:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 223:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 224:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 225:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * data array.
 226:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 227:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Size Checking
 228:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 229:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 230:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 231:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * columns. If the size check fails the functions return:
 232:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 233:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 234:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 235:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Otherwise the functions return
 236:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 237:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SUCCESS
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 16


 238:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 239:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 240:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 241:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 242:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 243:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 244:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 245:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 246:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 247:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 248:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 249:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 250:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 251:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 252:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 253:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 254:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 255:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 256:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupController Controller Functions
 257:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 258:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 259:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 260:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 261:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 262:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 263:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 264:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 265:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 266:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 267:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 268:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 269:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 270:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 271:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 272:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 273:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 274:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 275:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupExamples Examples
 276:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 277:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 278:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 279:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef _ARM_MATH_H
 280:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define _ARM_MATH_H
 281:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 282:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /* Compiler specific diagnostic adjustment */
 283:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 284:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 285:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 286:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 287:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 288:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic push
 289:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wsign-conversion"
 290:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wconversion"
 291:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wunused-parameter"
 292:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 293:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 294:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 17


 295:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 296:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 297:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 298:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 299:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 300:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 301:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( _MSC_VER )
 302:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 303:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 304:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 305:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 306:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 307:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 308:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /* Included for instrinsics definitions */
 309:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if !defined ( _MSC_VER )
 310:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include "cmsis_compiler.h"
 311:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 312:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include <stdint.h>
 313:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __STATIC_FORCEINLINE static __forceinline
 314:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __ALIGNED(x) __declspec(align(x))
 315:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_ENTER
 316:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_EXIT
 317:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_ENTER 
 318:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
 319:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 320:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 321:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include "string.h"
 322:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include "math.h"
 323:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include "float.h"
 324:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 325:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /* evaluate ARM DSP feature */
 326:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
 327:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define ARM_MATH_DSP                   1
 328:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 329:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 330:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined(__ARM_NEON)
 331:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include <arm_neon.h>
 332:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 333:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 334:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 335:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #ifdef   __cplusplus
 336:.//Libraries/CMSIS/DSP/Include/arm_math.h **** extern "C"
 337:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 338:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 339:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 340:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 341:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 342:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 344:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 345:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q15          0x5
 347:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef PI
 349:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define PI               3.14159265358979f
 350:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 351:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 18


 352:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 353:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 355:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 356:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 363:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 364:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 366:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 370:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 371:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 372:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 373:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 374:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 375:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef enum
 376:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 377:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SUCCESS        =  0,        /**< No error */
 378:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 379:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR   = -2,        /**< Length of data buffer is incorrect */
 380:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH  = -3,        /**< Size of matrices is not compatible with the operation
 381:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_NANINF         = -4,        /**< Not-a-number (NaN) or infinity is generated */
 382:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SINGULAR       = -5,        /**< Input matrix is singular and cannot be inverted */
 383:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_TEST_FAILURE   = -6         /**< Test Failed */
 384:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_status;
 385:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 386:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 387:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 388:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 389:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int8_t q7_t;
 390:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 391:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 392:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 393:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 394:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int16_t q15_t;
 395:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 396:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 397:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 398:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 399:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int32_t q31_t;
 400:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 401:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 402:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 403:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 404:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int64_t q63_t;
 405:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 406:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 407:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 408:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 19


 409:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef float float32_t;
 410:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 411:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 412:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 413:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 414:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef double float64_t;
 415:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 416:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 417:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 418:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief definition to read/write two 16 bit values.
 419:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @deprecated
 420:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 421:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 422:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 423:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 424:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 425:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 426:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 427:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 428:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 429:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 430:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 431:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 432:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 433:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 434:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
 435:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined(_MSC_VER )
 436:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 437:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 438:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 439:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 440:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 441:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 442:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
 443:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
 444:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
 445:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 446:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /* SIMD replacement */
 447:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 448:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 449:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 450:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer.
 451:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 452:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 453:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 454:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
 455:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15)
 456:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 457:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 458:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 459:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, pQ15, 4);
 460:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 461:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 462:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 463:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 464:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 465:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and increment pointer afterwards.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 20


 466:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 467:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 468:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_ia (
 336              		.loc 2 469 28 view .LVU120
 337              	.LBB38:
 470:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 471:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 338              		.loc 2 472 3 view .LVU121
 473:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 339              		.loc 2 474 3 view .LVU122
 340 0144 0AF10803 		add	r3, r10, #8
 341              	.LBE38:
 342              	.LBE37:
 221:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 343              		.loc 1 221 11 is_stmt 0 view .LVU123
 344 0148 019A     		ldr	r2, [sp, #4]
 345              	.LBB40:
 346              	.LBB39:
 347              		.loc 2 474 3 view .LVU124
 348 014a DAF80000 		ldr	r0, [r10]	@ unaligned
 349              	.LVL45:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 350              		.loc 2 475 3 is_stmt 1 view .LVU125
 476:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 477:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 351              		.loc 2 477 3 view .LVU126
 352              		.loc 2 477 3 is_stmt 0 view .LVU127
 353              	.LBE39:
 354              	.LBE40:
 217:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 355              		.loc 1 217 5 is_stmt 1 view .LVU128
 356              	.LBB41:
 357              	.LBI41:
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 358              		.loc 2 469 28 view .LVU129
 359              	.LBB42:
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 360              		.loc 2 472 3 view .LVU130
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 361              		.loc 2 474 3 view .LVU131
 362 014e DAF80460 		ldr	r6, [r10, #4]	@ unaligned
 363              	.LVL46:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 364              		.loc 2 475 3 view .LVU132
 365 0152 1F46     		mov	r7, r3
 366              	.LVL47:
 367              		.loc 2 477 3 view .LVU133
 368              		.loc 2 477 3 is_stmt 0 view .LVU134
 369              	.LBE42:
 370              	.LBE41:
 219:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 371              		.loc 1 219 5 is_stmt 1 view .LVU135
 221:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 372              		.loc 1 221 5 view .LVU136
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 21


 221:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 373              		.loc 1 221 11 view .LVU137
 374 0154 0093     		str	r3, [sp]
 375 0156 002A     		cmp	r2, #0
 376 0158 00F0BF80 		beq	.L27
 211:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 377              		.loc 1 211 10 is_stmt 0 view .LVU138
 378 015c 0023     		movs	r3, #0
 379              	.LVL48:
 221:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 380              		.loc 1 221 11 view .LVU139
 381 015e DDF858C0 		ldr	ip, [sp, #88]
 208:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     acc1 = 0;
 382              		.loc 1 208 10 view .LVU140
 383 0162 9146     		mov	r9, r2
 210:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     acc3 = 0;
 384              		.loc 1 210 10 view .LVU141
 385 0164 9846     		mov	r8, r3
 209:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     acc2 = 0;
 386              		.loc 1 209 10 view .LVU142
 387 0166 1946     		mov	r1, r3
 208:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     acc1 = 0;
 388              		.loc 1 208 10 view .LVU143
 389 0168 1D46     		mov	r5, r3
 390              	.LVL49:
 391              	.L15:
 224:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 392              		.loc 1 224 7 is_stmt 1 view .LVU144
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 393              		.loc 2 472 3 view .LVU145
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 394              		.loc 2 474 3 view .LVU146
 395 016a DCF80020 		ldr	r2, [ip]	@ unaligned
 396              	.LVL50:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 397              		.loc 2 475 3 view .LVU147
 398              		.loc 2 477 3 view .LVU148
 227:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc2 = __SMLAD(x2, y1, acc2);
 399              		.loc 1 227 7 view .LVU149
 400              	.LBB43:
 401              	.LBI43:
 402              		.file 3 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 22


  16:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 23


  73:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 24


 130:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 25


 187:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 26


 244:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 27


 301:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 28


 358:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 29


 415:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 30


 472:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 31


 529:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 32


 586:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 33


 643:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 34


 700:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 35


 757:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 36


 814:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 37


 871:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 38


 928:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 948:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 949:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 950:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 951:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 955:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 957:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 959:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 960:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 962:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 966:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 967:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 969:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 972:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 973:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 974:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 976:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 977:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 980:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 981:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 39


 985:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 990:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 992:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 994:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 996:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1000:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1006:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
1007:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1008:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1010:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1011:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1012:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1013:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1014:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1015:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1020:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1021:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1023:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1026:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
1027:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1030:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1032:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1033:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1039:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1041:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 40


1042:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1043:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1047:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1048:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1050:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1051:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1052:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1057:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1062:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
1063:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
1065:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1066:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1068:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1069:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1070:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1071:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1072:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1073:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1078:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1080:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
1086:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    */
1089:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
1090:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1091:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
1092:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1093:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1095:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1096:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1097:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 41


1099:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1102:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1107:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1109:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1110:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1111:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1114:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1117:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1119:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1121:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1122:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1123:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1124:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1129:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1131:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1132:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1133:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1136:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1139:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1141:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1143:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1144:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1145:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1146:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1151:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1152:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1153:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1155:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 42


1156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1157:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1159:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1160:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1161:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1168:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1170:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1171:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1172:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1174:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1175:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1176:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1177:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1178:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1185:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1187:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1188:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1189:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1191:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1192:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1193:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1194:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1195:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1202:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1203:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1204:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1205:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1206:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
1207:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1208:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1209:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1210:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1211:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1212:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 43


1213:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1214:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1215:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
1216:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1217:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1218:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1219:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1220:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1221:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1222:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1223:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1224:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1225:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1226:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1227:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1228:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1229:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1230:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1231:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1232:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1233:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
1234:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1235:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1236:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1237:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __extension__ \
1238:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1239:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1240:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1241:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1242:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1243:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1244:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1245:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1246:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1247:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1248:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1249:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
1250:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1251:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1252:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1253:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  __extension__ \
1254:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1255:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1256:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1257:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1258:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1259:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1260:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1261:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1262:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1263:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1264:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1265:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
1266:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1267:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1268:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
1269:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 44


1270:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1271:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1272:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1273:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1274:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1275:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1276:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1277:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1278:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1279:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1280:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1281:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1282:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1283:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1284:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1285:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1286:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1287:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1288:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1289:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1290:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1291:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1292:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1293:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1294:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1295:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1296:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1297:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1298:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1299:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1300:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1301:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1302:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1303:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1304:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1305:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1306:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1307:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1308:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1309:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1310:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1311:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1312:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1313:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1314:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1315:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1316:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1317:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1318:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1319:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1320:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1321:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1322:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1323:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1324:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1325:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1326:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 45


1327:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
1328:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1329:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1330:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1331:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1332:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1333:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1334:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1335:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1336:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1337:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1338:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1339:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1340:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1341:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1342:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1343:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1344:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1345:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1346:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1347:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1348:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1349:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1350:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1351:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1352:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1353:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1354:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1355:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1356:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1357:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1358:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1359:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1360:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1361:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1362:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1363:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1364:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1365:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1366:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1367:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1368:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1369:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1370:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1371:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1372:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1373:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1374:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1375:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1376:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1377:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1378:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1379:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1380:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1381:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1382:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
1383:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 46


1384:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
1385:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1386:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
1387:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
1388:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > max)
1389:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1390:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1391:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1392:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < min)
1393:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1394:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return min;
1395:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1396:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1397:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return val;
1398:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1399:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1400:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1401:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1402:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1403:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1404:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1405:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1406:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1407:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
1408:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1409:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (sat <= 31U)
1410:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1411:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
1412:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
1413:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1414:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1415:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1416:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < 0)
1417:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1418:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return 0U;
1419:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1420:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1421:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (uint32_t)val;
1422:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1423:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1424:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1425:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1426:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1427:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1428:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1429:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1430:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1431:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1432:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1433:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1434:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1435:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1436:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1437:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
1438:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1439:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1440:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 47


1441:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1442:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1443:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1444:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1445:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1446:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1447:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1448:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1449:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1450:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1451:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1452:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
1453:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1454:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1455:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1456:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1457:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1458:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1459:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1460:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1461:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1462:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1463:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1464:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1465:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1466:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1467:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
1468:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1469:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1470:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1471:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1472:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1473:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1474:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1475:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1476:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1477:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1478:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1479:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1480:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1481:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1482:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1483:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1484:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1485:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1486:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1487:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1488:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1489:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1490:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1491:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1492:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1493:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1494:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1495:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1496:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1497:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 48


1498:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1499:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1500:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1501:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1502:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1503:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1504:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1505:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1506:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1507:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1508:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1509:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1510:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1511:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1512:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1513:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1514:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1515:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1516:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1517:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1518:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1519:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1520:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1521:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1522:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1523:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1524:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1525:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1526:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1527:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1528:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1529:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1530:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1531:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1532:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1533:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1534:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1535:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1536:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1537:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1538:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1539:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1540:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1541:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1542:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1543:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1544:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1545:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1546:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1547:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1548:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1549:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1550:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1551:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1552:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1553:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1554:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 49


1555:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1556:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1557:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1558:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1559:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1560:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1561:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1562:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1563:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1564:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1565:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
1566:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1567:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1568:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1569:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1570:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1571:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1572:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1573:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1574:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1575:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1576:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1577:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1578:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1579:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1580:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1581:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1582:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
1583:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1584:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1585:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1586:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1587:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1588:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1589:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1590:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1591:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1592:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1593:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1594:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1595:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1596:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1597:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1598:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1599:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
1600:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1601:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1602:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1603:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1604:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1605:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1606:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1607:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1608:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1609:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1610:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1611:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 50


1612:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1613:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1614:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1615:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated SIMD instructions
1616:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
1617:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
1618:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1619:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
1620:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1621:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1622:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1623:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1624:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1625:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1626:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1627:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1628:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1629:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1630:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1631:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1632:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1633:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1634:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1635:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1636:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1637:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1638:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1639:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1640:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1641:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1642:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1643:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1644:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1645:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1646:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1647:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1648:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1649:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1650:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1651:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1652:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1653:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1654:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1655:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1656:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1657:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1658:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1659:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1660:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1661:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1662:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1663:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1664:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1665:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1666:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1667:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1668:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 51


1669:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1670:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1671:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1672:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1673:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1674:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1675:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1676:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1677:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1678:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1679:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1680:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1681:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1682:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1683:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1684:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1685:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1686:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1687:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1688:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1689:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1690:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1691:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1692:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1693:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1694:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1695:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1696:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1697:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1698:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1699:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1700:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1701:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1702:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1703:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1704:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1705:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1706:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1707:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1708:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1709:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1710:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1711:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1712:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1713:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1714:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1715:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1716:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1717:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1718:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1719:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1720:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1721:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1722:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1723:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1724:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1725:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 52


1726:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1727:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1728:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1729:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1730:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1731:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1732:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1733:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1734:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1736:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1738:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1741:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1742:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1743:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1744:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1745:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1746:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1747:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1748:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1749:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1750:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1751:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1752:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1753:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1754:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1755:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1756:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1757:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1758:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1759:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1760:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1761:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1762:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1763:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1764:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1765:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1766:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1767:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1768:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1769:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1770:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1771:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1772:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1773:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1774:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1775:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1776:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1777:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1778:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1779:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1780:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1781:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1782:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 53


1783:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1784:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1785:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1786:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1787:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1788:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1789:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1790:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1791:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1792:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1793:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1794:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1795:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1796:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1797:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1798:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1799:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1800:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1801:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1802:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1803:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1804:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1805:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1806:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1807:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1808:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1809:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1810:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1811:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1812:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1813:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1814:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1815:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1816:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1817:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1818:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1819:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1820:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1821:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1822:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1823:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1824:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1825:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1826:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1827:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1828:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1829:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1830:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1831:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1832:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1833:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1834:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1835:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1836:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1837:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1838:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1839:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 54


1840:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1841:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1842:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1843:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1844:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1845:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1846:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1847:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1848:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1849:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1850:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1851:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1852:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1853:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1854:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1855:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1856:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1857:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1858:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1859:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1860:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1861:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1862:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1863:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1864:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1865:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1866:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1867:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1868:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1869:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1870:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1871:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1872:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1873:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1874:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1875:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1876:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1877:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1878:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1879:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1880:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1881:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1882:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1883:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1884:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1885:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1886:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1887:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1888:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1889:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1890:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1891:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1892:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1893:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1894:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1895:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1896:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 55


1897:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1898:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1899:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1900:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1901:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1902:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1903:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1904:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1905:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1906:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1907:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1908:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1909:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1910:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1911:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1912:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1913:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1914:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1915:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1916:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1917:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1918:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1919:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)
1920:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1921:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1922:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1923:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1924:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1925:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1926:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1927:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1928:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1929:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1930:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1931:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1932:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1933:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1934:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1935:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1936:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1937:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1938:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1939:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1940:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1941:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTB16(uint32_t op1)
1942:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1943:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1944:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1945:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1946:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1947:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1948:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1949:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1950:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1951:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1952:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1953:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 56


1954:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1955:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1956:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1957:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTB16(uint32_t op1)
1958:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1959:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1960:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1962:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1963:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1964:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1965:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1966:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1967:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1968:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1969:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1970:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1971:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1972:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1973:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1974:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1975:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1976:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1977:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1978:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1979:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1980:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1981:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1982:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1983:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1984:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1985:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1986:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1987:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1988:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32_t op3)
 403              		.loc 3 1989 31 view .LVU150
 404              	.LBB44:
1990:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 405              		.loc 3 1991 3 view .LVU151
1992:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 406              		.loc 3 1993 3 view .LVU152
 407              		.syntax unified
 408              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 409 016e 20FB0255 		smlad r5, r0, r2, r5
 410              	@ 0 "" 2
 411              	.LVL51:
1994:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 412              		.loc 3 1994 3 view .LVU153
 413              		.loc 3 1994 3 is_stmt 0 view .LVU154
 414              		.thumb
 415              		.syntax unified
 416              	.LBE44:
 417              	.LBE43:
 228:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 57


 418              		.loc 1 228 7 is_stmt 1 view .LVU155
 419              	.LBB45:
 420              	.LBI45:
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 421              		.loc 3 1989 31 view .LVU156
 422              	.LBB46:
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 423              		.loc 3 1991 3 view .LVU157
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 424              		.loc 3 1993 3 view .LVU158
 425              		.syntax unified
 426              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 427 0172 26FB0288 		smlad r8, r6, r2, r8
 428              	@ 0 "" 2
 429              	.LVL52:
 430              		.loc 3 1994 3 view .LVU159
 431              		.loc 3 1994 3 is_stmt 0 view .LVU160
 432              		.thumb
 433              		.syntax unified
 434              	.LBE46:
 435              	.LBE45:
 436              		.loc 1 232 7 is_stmt 1 view .LVU161
 233:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** #else
 234:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       x3 = __PKHBT(x1, x2, 0);
 235:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** #endif
 236:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 237:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       /* multiply and accumlate */
 238:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc1 = __SMLADX(x3, y1, acc1);
 437              		.loc 1 238 7 view .LVU162
 438              	.LBB47:
 439              	.LBI47:
1995:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1996:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1997:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint32_t op3)
 440              		.loc 3 1997 31 view .LVU163
 441              	.LBB48:
1998:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1999:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 442              		.loc 3 1999 3 view .LVU164
2000:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2001:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 443              		.loc 3 2001 3 view .LVU165
 444              	.LBE48:
 445              	.LBE47:
 232:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** #else
 446              		.loc 1 232 12 is_stmt 0 view .LVU166
 447 0176 00EA0B00 		and	r0, r0, fp
 448              	.LVL53:
 232:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** #else
 449              		.loc 1 232 12 view .LVU167
 450 017a 1FFA86FE 		uxth	lr, r6
 451 017e 4EEA0000 		orr	r0, lr, r0
 452              	.LBB50:
 453              	.LBB49:
 454              		.loc 3 2001 3 view .LVU168
 455              		.syntax unified
 456              	@ 2001 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 58


 457 0182 20FB1211 		smladx r1, r0, r2, r1
 458              	@ 0 "" 2
 459              	.LVL54:
2002:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 460              		.loc 3 2002 3 is_stmt 1 view .LVU169
 461              		.loc 3 2002 3 is_stmt 0 view .LVU170
 462              		.thumb
 463              		.syntax unified
 464              	.LBE49:
 465              	.LBE50:
 239:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 240:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       /* Read next two samples from scratch1 buffer */
 241:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       x1 = read_q15x2_ia (&pScr1);
 466              		.loc 1 241 7 is_stmt 1 view .LVU171
 467              	.LBB51:
 468              	.LBI51:
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 469              		.loc 2 469 28 view .LVU172
 470              	.LBB52:
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 471              		.loc 2 472 3 view .LVU173
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 472              		.loc 2 474 3 view .LVU174
 473 0186 3868     		ldr	r0, [r7]	@ unaligned
 474              	.LVL55:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 475              		.loc 2 475 3 view .LVU175
 476              		.loc 2 477 3 view .LVU176
 477              		.loc 2 477 3 is_stmt 0 view .LVU177
 478              	.LBE52:
 479              	.LBE51:
 242:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 243:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       /* pack input data */
 244:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 245:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       x3 = __PKHBT(x1, x2, 0);
 480              		.loc 1 245 7 is_stmt 1 view .LVU178
 481              		.loc 1 245 12 is_stmt 0 view .LVU179
 482 0188 06EA0B04 		and	r4, r6, fp
 483 018c 1FFA80FE 		uxth	lr, r0
 484 0190 4EEA040E 		orr	lr, lr, r4
 485              	.LVL56:
 246:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** #else
 247:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       x3 = __PKHBT(x2, x1, 0);
 248:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** #endif
 249:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 250:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc3 = __SMLADX(x3, y1, acc3);
 486              		.loc 1 250 7 is_stmt 1 view .LVU180
 487              	.LBB53:
 488              	.LBI53:
1997:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 489              		.loc 3 1997 31 view .LVU181
 490              	.LBB54:
1999:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 491              		.loc 3 1999 3 view .LVU182
2001:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 492              		.loc 3 2001 3 view .LVU183
 493              		.syntax unified
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 59


 494              	@ 2001 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 495 0194 2EFB1232 		smladx r2, lr, r2, r3
 496              	@ 0 "" 2
 497              	.LVL57:
 498              		.loc 3 2002 3 view .LVU184
 499              		.loc 3 2002 3 is_stmt 0 view .LVU185
 500              		.thumb
 501              		.syntax unified
 502              	.LBE54:
 503              	.LBE53:
 251:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 252:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       /* Read four samples from smaller buffer */
 253:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       y1 = read_q15x2_ia (&pScr2);
 504              		.loc 1 253 7 is_stmt 1 view .LVU186
 505              	.LBB55:
 506              	.LBI55:
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 507              		.loc 2 469 28 view .LVU187
 508              	.LBB56:
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 509              		.loc 2 472 3 view .LVU188
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 510              		.loc 2 474 3 view .LVU189
 511 0198 DCF80440 		ldr	r4, [ip, #4]	@ unaligned
 512              	.LVL58:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 513              		.loc 2 475 3 view .LVU190
 514 019c 0CF1080C 		add	ip, ip, #8
 515              	.LVL59:
 516              		.loc 2 477 3 view .LVU191
 517              		.loc 2 477 3 is_stmt 0 view .LVU192
 518              	.LBE56:
 519              	.LBE55:
 254:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 255:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc0 = __SMLAD(x2, y1, acc0);
 520              		.loc 1 255 7 is_stmt 1 view .LVU193
 521              	.LBB58:
 522              	.LBI58:
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 523              		.loc 3 1989 31 view .LVU194
 524              	.LBB59:
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 525              		.loc 3 1991 3 view .LVU195
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 526              		.loc 3 1993 3 view .LVU196
 527              		.syntax unified
 528              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 529 01a0 26FB0455 		smlad r5, r6, r4, r5
 530              	@ 0 "" 2
 531              	.LVL60:
1994:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 532              		.loc 3 1994 3 view .LVU197
1994:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 533              		.loc 3 1994 3 is_stmt 0 view .LVU198
 534              		.thumb
 535              		.syntax unified
 536              	.LBE59:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 60


 537              	.LBE58:
 256:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 257:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc2 = __SMLAD(x1, y1, acc2);
 538              		.loc 1 257 7 is_stmt 1 view .LVU199
 539              	.LBB60:
 540              	.LBI60:
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 541              		.loc 3 1989 31 view .LVU200
 542              	.LBB61:
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 543              		.loc 3 1991 3 view .LVU201
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 544              		.loc 3 1993 3 view .LVU202
 545              		.syntax unified
 546              	@ 1993 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 547 01a4 20FB0488 		smlad r8, r0, r4, r8
 548              	@ 0 "" 2
 549              	.LVL61:
1994:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550              		.loc 3 1994 3 view .LVU203
1994:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 551              		.loc 3 1994 3 is_stmt 0 view .LVU204
 552              		.thumb
 553              		.syntax unified
 554              	.LBE61:
 555              	.LBE60:
 258:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 259:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc1 = __SMLADX(x3, y1, acc1);
 556              		.loc 1 259 7 is_stmt 1 view .LVU205
 557              	.LBB62:
 558              	.LBI62:
1997:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 559              		.loc 3 1997 31 view .LVU206
 560              	.LBB63:
1999:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 561              		.loc 3 1999 3 view .LVU207
2001:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 562              		.loc 3 2001 3 view .LVU208
 563              		.syntax unified
 564              	@ 2001 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 565 01a8 2EFB1411 		smladx r1, lr, r4, r1
 566              	@ 0 "" 2
 567              	.LVL62:
 568              		.loc 3 2002 3 view .LVU209
 569              		.loc 3 2002 3 is_stmt 0 view .LVU210
 570              		.thumb
 571              		.syntax unified
 572              	.LBE63:
 573              	.LBE62:
 260:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 261:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       x2 = read_q15x2_ia (&pScr1);
 574              		.loc 1 261 7 is_stmt 1 view .LVU211
 575              	.LBB64:
 576              	.LBI64:
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 577              		.loc 2 469 28 view .LVU212
 578              	.LBB65:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 61


 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 579              		.loc 2 472 3 view .LVU213
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 580              		.loc 2 474 3 view .LVU214
 581 01ac 7E68     		ldr	r6, [r7, #4]	@ unaligned
 582              	.LVL63:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 583              		.loc 2 475 3 view .LVU215
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 584              		.loc 2 475 3 is_stmt 0 view .LVU216
 585              	.LBE65:
 586              	.LBE64:
 262:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 263:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 264:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       x3 = __PKHBT(x2, x1, 0);
 587              		.loc 1 264 12 view .LVU217
 588 01ae 00EA0B0E 		and	lr, r0, fp
 589              	.LVL64:
 590              		.loc 1 264 12 view .LVU218
 591 01b2 0837     		adds	r7, r7, #8
 592              	.LVL65:
 593              	.LBB67:
 594              	.LBB66:
 595              		.loc 2 477 3 is_stmt 1 view .LVU219
 596              		.loc 2 477 3 is_stmt 0 view .LVU220
 597              	.LBE66:
 598              	.LBE67:
 599              		.loc 1 264 7 is_stmt 1 view .LVU221
 265:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** #else
 266:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       x3 = __PKHBT(x1, x2, 0);
 267:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** #endif
 268:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 269:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc3 = __SMLADX(x3, y1, acc3);
 600              		.loc 1 269 7 view .LVU222
 601              	.LBB68:
 602              	.LBI68:
1997:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 603              		.loc 3 1997 31 view .LVU223
 604              	.LBB69:
1999:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 605              		.loc 3 1999 3 view .LVU224
2001:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 606              		.loc 3 2001 3 view .LVU225
 607              	.LBE69:
 608              	.LBE68:
 264:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** #else
 609              		.loc 1 264 12 is_stmt 0 view .LVU226
 610 01b4 B3B2     		uxth	r3, r6
 611 01b6 43EA0E03 		orr	r3, r3, lr
 612              	.LBB71:
 613              	.LBB70:
2001:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 614              		.loc 3 2001 3 view .LVU227
 615              		.syntax unified
 616              	@ 2001 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 617 01ba 23FB1423 		smladx r3, r3, r4, r2
 618              	@ 0 "" 2
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 62


 619              	.LVL66:
 620              		.loc 3 2002 3 is_stmt 1 view .LVU228
 621              		.loc 3 2002 3 is_stmt 0 view .LVU229
 622              		.thumb
 623              		.syntax unified
 624              	.LBE70:
 625              	.LBE71:
 270:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 271:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       /* Decrement loop counter */
 272:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       tapCnt--;
 626              		.loc 1 272 7 is_stmt 1 view .LVU230
 221:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 627              		.loc 1 221 11 view .LVU231
 628 01be B9F10109 		subs	r9, r9, #1
 629              	.LVL67:
 221:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 630              		.loc 1 221 11 is_stmt 0 view .LVU232
 631 01c2 D2D1     		bne	.L15
 632              	.LVL68:
 221:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 633              		.loc 1 221 11 view .LVU233
 634 01c4 059A     		ldr	r2, [sp, #20]
 635              	.LBB72:
 636              	.LBB57:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 637              		.loc 2 475 9 view .LVU234
 638 01c6 0498     		ldr	r0, [sp, #16]
 639              	.LVL69:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 640              		.loc 2 475 9 view .LVU235
 641 01c8 0AEB0207 		add	r7, r10, r2
 642              	.LVL70:
 643              	.L14:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 644              		.loc 2 475 9 view .LVU236
 645              	.LBE57:
 646              	.LBE72:
 273:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     }
 274:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 275:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Update scratch pointer for remaining samples of smaller length sequence */
 276:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     pScr1 -= 4U;
 647              		.loc 1 276 5 is_stmt 1 view .LVU237
 277:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 278:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* apply same above for remaining samples of smaller length sequence */
 279:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     tapCnt = (srcBLen) & 3U;
 648              		.loc 1 279 5 view .LVU238
 280:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 281:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     while (tapCnt > 0U)
 649              		.loc 1 281 5 view .LVU239
 650              		.loc 1 281 11 view .LVU240
 651 01cc 029A     		ldr	r2, [sp, #8]
 652 01ce D2B1     		cbz	r2, .L16
 653 01d0 BC46     		mov	ip, r7
 654 01d2 069A     		ldr	r2, [sp, #24]
 655 01d4 37F908EC 		ldrsh	lr, [r7, #-8]
 656 01d8 00EB0209 		add	r9, r0, r2
 657 01dc 3CF9046D 		ldrsh	r6, [ip, #-4]!
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 63


 658 01e0 37F9064C 		ldrsh	r4, [r7, #-6]
 659              	.LVL71:
 660              	.L17:
 282:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 283:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       /* accumlate the results */
 284:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2);
 661              		.loc 1 284 7 view .LVU241
 662              		.loc 1 284 27 is_stmt 0 view .LVU242
 663 01e4 30F9022B 		ldrsh	r2, [r0], #2
 664              	.LVL72:
 285:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc1 += (*pScr1++ * *pScr2);
 286:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc2 += (*pScr1++ * *pScr2);
 287:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc3 += (*pScr1++ * *pScr2++);
 665              		.loc 1 287 16 view .LVU243
 666 01e8 3CF9027F 		ldrsh	r7, [ip, #2]!
 281:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 667              		.loc 1 281 11 view .LVU244
 668 01ec 8145     		cmp	r9, r0
 284:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc1 += (*pScr1++ * *pScr2);
 669              		.loc 1 284 12 view .LVU245
 670 01ee 0EFB0255 		mla	r5, lr, r2, r5
 671              	.LVL73:
 285:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc1 += (*pScr1++ * *pScr2);
 672              		.loc 1 285 7 is_stmt 1 view .LVU246
 285:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc1 += (*pScr1++ * *pScr2);
 673              		.loc 1 285 12 is_stmt 0 view .LVU247
 674 01f2 02FB0411 		mla	r1, r2, r4, r1
 675              	.LVL74:
 286:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc3 += (*pScr1++ * *pScr2++);
 676              		.loc 1 286 7 is_stmt 1 view .LVU248
 286:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc3 += (*pScr1++ * *pScr2++);
 677              		.loc 1 286 7 is_stmt 0 view .LVU249
 678 01f6 A646     		mov	lr, r4
 286:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc3 += (*pScr1++ * *pScr2++);
 679              		.loc 1 286 12 view .LVU250
 680 01f8 02FB0688 		mla	r8, r2, r6, r8
 681              	.LVL75:
 682              		.loc 1 287 7 is_stmt 1 view .LVU251
 683              		.loc 1 287 7 is_stmt 0 view .LVU252
 684 01fc 3446     		mov	r4, r6
 685              		.loc 1 287 12 view .LVU253
 686 01fe 02FB0733 		mla	r3, r2, r7, r3
 687              	.LVL76:
 288:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 289:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       pScr1 -= 3U;
 688              		.loc 1 289 7 is_stmt 1 view .LVU254
 290:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 291:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       /* Decrement loop counter */
 292:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       tapCnt--;
 689              		.loc 1 292 7 view .LVU255
 281:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 690              		.loc 1 281 11 view .LVU256
 691 0202 3E46     		mov	r6, r7
 692 0204 EED1     		bne	.L17
 693              	.LVL77:
 694              	.L16:
 293:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 64


 294:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 295:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     blkCnt--;
 695              		.loc 1 295 5 view .LVU257
 296:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 297:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Store the result in the accumulator in the destination buffer. */
 298:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out0 = (q7_t) (__SSAT(acc0 >> 7U, 8));
 696              		.loc 1 298 5 view .LVU258
 697              	.LBB73:
 698              		.loc 1 298 20 view .LVU259
 699              		.loc 1 298 20 view .LVU260
 700 0206 ED11     		asrs	r5, r5, #7
 701              	.LVL78:
 702              		.loc 1 298 20 is_stmt 0 view .LVU261
 703              	.LBE73:
 704              	.LBB74:
 705              	.LBB75:
 478:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 479:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 480:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 481:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and decrement pointer afterwards.
 482:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 483:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 484:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 485:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_da (
 486:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 487:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 488:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 489:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 490:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 491:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 492:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 493:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 494:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 495:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 496:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 497:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer and increment pointer afterwards.
 498:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 499:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 500:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 501:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 502:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2_ia (
 503:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15,
 504:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t    value)
 505:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 506:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 507:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 508:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ15, &val, 4);
 509:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 510:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 511:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 512:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 513:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer.
 514:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 515:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 516:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 517:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 518:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2 (
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 65


 519:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15,
 520:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t   value)
 521:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 522:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 523:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 524:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (pQ15, &val, 4);
 525:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 526:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 527:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 528:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 529:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and increment pointer afterwards.
 530:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 531:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 532:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 533:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_ia (
 534:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7)
 535:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 536:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 537:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 538:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ7, 4);
 539:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 += 4;
 540:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 541:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 542:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 543:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 544:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 545:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and decrement pointer afterwards.
 546:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 547:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 548:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 549:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_da (
 550:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7)
 551:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 552:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 553:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 554:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ7, 4);
 555:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 -= 4;
 556:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 557:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 558:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 559:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 560:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 561:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 4 Q7 to Q7 pointer and increment pointer afterwards.
 562:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 563:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 564:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 565:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 566:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q7x4_ia (
 567:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7,
 568:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t   value)
 569:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 570:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 571:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 572:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ7, &val, 4);
 706              		.loc 2 572 3 view .LVU262
 707 0208 149A     		ldr	r2, [sp, #80]
 708              	.LBE75:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 66


 709              	.LBE74:
 710              	.LBB79:
 299:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out1 = (q7_t) (__SSAT(acc1 >> 7U, 8));
 711              		.loc 1 299 20 view .LVU263
 712 020a C911     		asrs	r1, r1, #7
 713              	.LVL79:
 714              		.loc 1 299 20 view .LVU264
 715              	.LBE79:
 300:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out2 = (q7_t) (__SSAT(acc2 >> 7U, 8));
 301:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out3 = (q7_t) (__SSAT(acc3 >> 7U, 8));
 302:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 303:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     write_q7x4_ia (&pOut, __PACKq7(out0, out1, out2, out3));
 304:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 305:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Initialization of inputB pointer */
 306:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     pScr2 = py;
 307:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 308:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     pScratch1 += 4U;
 716              		.loc 1 308 15 view .LVU265
 717 020c DDF800A0 		ldr	r10, [sp]
 718              	.LVL80:
 719              	.LBB80:
 298:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out1 = (q7_t) (__SSAT(acc1 >> 7U, 8));
 720              		.loc 1 298 20 view .LVU266
 721              		.syntax unified
 722              	@ 298 ".//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c" 1
 723 0210 05F30705 		ssat r5, #8, r5
 724              	@ 0 "" 2
 725              	.LVL81:
 298:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out1 = (q7_t) (__SSAT(acc1 >> 7U, 8));
 726              		.loc 1 298 20 is_stmt 1 view .LVU267
 298:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out1 = (q7_t) (__SSAT(acc1 >> 7U, 8));
 727              		.loc 1 298 20 is_stmt 0 view .LVU268
 728              		.thumb
 729              		.syntax unified
 730              	.LBE80:
 299:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out1 = (q7_t) (__SSAT(acc1 >> 7U, 8));
 731              		.loc 1 299 5 is_stmt 1 view .LVU269
 732              	.LBB81:
 299:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out1 = (q7_t) (__SSAT(acc1 >> 7U, 8));
 733              		.loc 1 299 20 view .LVU270
 299:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out1 = (q7_t) (__SSAT(acc1 >> 7U, 8));
 734              		.loc 1 299 20 view .LVU271
 735              		.syntax unified
 736              	@ 299 ".//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c" 1
 737 0214 01F30701 		ssat r1, #8, r1
 738              	@ 0 "" 2
 739              	.LVL82:
 299:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out1 = (q7_t) (__SSAT(acc1 >> 7U, 8));
 740              		.loc 1 299 20 view .LVU272
 299:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out1 = (q7_t) (__SSAT(acc1 >> 7U, 8));
 741              		.loc 1 299 20 is_stmt 0 view .LVU273
 742              		.thumb
 743              		.syntax unified
 744              	.LBE81:
 300:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out2 = (q7_t) (__SSAT(acc2 >> 7U, 8));
 745              		.loc 1 300 5 is_stmt 1 view .LVU274
 746              	.LBB82:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 67


 300:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out2 = (q7_t) (__SSAT(acc2 >> 7U, 8));
 747              		.loc 1 300 20 view .LVU275
 300:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out2 = (q7_t) (__SSAT(acc2 >> 7U, 8));
 748              		.loc 1 300 20 view .LVU276
 749              	.LBE82:
 303:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 750              		.loc 1 303 27 is_stmt 0 view .LVU277
 751 0218 EDB2     		uxtb	r5, r5
 752              	.LVL83:
 303:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 753              		.loc 1 303 27 view .LVU278
 754 021a 0902     		lsls	r1, r1, #8
 755              	.LVL84:
 756              	.LBB83:
 300:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out2 = (q7_t) (__SSAT(acc2 >> 7U, 8));
 757              		.loc 1 300 20 view .LVU279
 758 021c 4FEAE818 		asr	r8, r8, #7
 759              	.LVL85:
 300:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out2 = (q7_t) (__SSAT(acc2 >> 7U, 8));
 760              		.loc 1 300 20 view .LVU280
 761              	.LBE83:
 303:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 762              		.loc 1 303 27 view .LVU281
 763 0220 01F47F41 		and	r1, r1, #65280
 764              	.LBB84:
 301:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 765              		.loc 1 301 20 view .LVU282
 766 0224 DB11     		asrs	r3, r3, #7
 767              	.LVL86:
 301:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 768              		.loc 1 301 20 view .LVU283
 769              	.LBE84:
 770              	.LBB85:
 300:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out3 = (q7_t) (__SSAT(acc3 >> 7U, 8));
 771              		.loc 1 300 20 view .LVU284
 772              		.syntax unified
 773              	@ 300 ".//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c" 1
 774 0226 08F30708 		ssat r8, #8, r8
 775              	@ 0 "" 2
 776              	.LVL87:
 300:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out3 = (q7_t) (__SSAT(acc3 >> 7U, 8));
 777              		.loc 1 300 20 is_stmt 1 view .LVU285
 300:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     out3 = (q7_t) (__SSAT(acc3 >> 7U, 8));
 778              		.loc 1 300 20 is_stmt 0 view .LVU286
 779              		.thumb
 780              		.syntax unified
 781              	.LBE85:
 301:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 782              		.loc 1 301 5 is_stmt 1 view .LVU287
 783              	.LBB86:
 301:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 784              		.loc 1 301 20 view .LVU288
 301:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 785              		.loc 1 301 20 view .LVU289
 786              		.syntax unified
 787              	@ 301 ".//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c" 1
 788 022a 03F30703 		ssat r3, #8, r3
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 68


 789              	@ 0 "" 2
 790              	.LVL88:
 301:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 791              		.loc 1 301 20 view .LVU290
 301:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 792              		.loc 1 301 20 is_stmt 0 view .LVU291
 793              		.thumb
 794              		.syntax unified
 795              	.LBE86:
 303:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 796              		.loc 1 303 5 is_stmt 1 view .LVU292
 797              	.LBB87:
 798              	.LBI74:
 566:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7,
 799              		.loc 2 566 27 view .LVU293
 800              	.LBB76:
 570:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 801              		.loc 2 570 3 view .LVU294
 802              		.loc 2 572 3 view .LVU295
 803              	.LBE76:
 804              	.LBE87:
 303:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 805              		.loc 1 303 27 is_stmt 0 view .LVU296
 806 022e 4FEA0848 		lsl	r8, r8, #16
 807              	.LVL89:
 303:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 808              		.loc 1 303 5 view .LVU297
 809 0232 45EA0363 		orr	r3, r5, r3, lsl #24
 810              	.LVL90:
 303:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 811              		.loc 1 303 27 view .LVU298
 812 0236 08F47F08 		and	r8, r8, #16711680
 303:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 813              		.loc 1 303 5 view .LVU299
 814 023a 0B43     		orrs	r3, r3, r1
 815 023c 43EA0803 		orr	r3, r3, r8
 816              	.LBB88:
 817              	.LBB77:
 818              		.loc 2 572 3 view .LVU300
 819 0240 42F8043B 		str	r3, [r2], #4	@ unaligned
 820              	.LBE77:
 821              	.LBE88:
 202:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 822              		.loc 1 202 9 view .LVU301
 823 0244 039B     		ldr	r3, [sp, #12]
 824              	.LBB89:
 825              	.LBB78:
 826              		.loc 2 572 3 view .LVU302
 827 0246 1492     		str	r2, [sp, #80]
 828              	.LVL91:
 573:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 += 4;
 829              		.loc 2 573 3 is_stmt 1 view .LVU303
 830              		.loc 2 573 3 is_stmt 0 view .LVU304
 831              	.LBE78:
 832              	.LBE89:
 306:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 833              		.loc 1 306 5 is_stmt 1 view .LVU305
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 69


 834              		.loc 1 308 5 view .LVU306
 202:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 835              		.loc 1 202 9 view .LVU307
 836 0248 9342     		cmp	r3, r2
 837 024a 7FF47BAF 		bne	.L18
 838 024e 099A     		ldr	r2, [sp, #36]
 839              	.LVL92:
 202:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 840              		.loc 1 202 9 is_stmt 0 view .LVU308
 841 0250 DDE9153A 		ldrd	r3, r10, [sp, #84]
 842 0254 03EBC203 		add	r3, r3, r2, lsl #3
 843 0258 1593     		str	r3, [sp, #84]
 844              	.LVL93:
 845              	.L13:
 309:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   }
 310:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 311:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   blkCnt = (srcALen + srcBLen - 1U) & 0x3;
 846              		.loc 1 311 3 is_stmt 1 view .LVU309
 312:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 313:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   /* Calculate convolution for remaining samples of Bigger length sequence */
 314:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   while (blkCnt > 0)
 847              		.loc 1 314 3 view .LVU310
 848              		.loc 1 314 9 view .LVU311
 849 025a 089B     		ldr	r3, [sp, #32]
 850 025c 13F00308 		ands	r8, r3, #3
 851              	.LVL94:
 852              		.loc 1 314 9 is_stmt 0 view .LVU312
 853 0260 38D0     		beq	.L1
 315:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 316:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Initialze temporary scratch pointer as scratch1 */
 317:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     pScr1 = pScratch1;
 318:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 319:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Clear Accumlators */
 320:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     acc0 = 0;
 321:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 322:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     tapCnt = (srcBLen) >> 1U;
 854              		.loc 1 322 12 view .LVU313
 855 0262 079B     		ldr	r3, [sp, #28]
 856 0264 0AF1020C 		add	ip, r10, #2
 857 0268 159A     		ldr	r2, [sp, #84]
 858 026a 5F08     		lsrs	r7, r3, #1
 859 026c 03F00104 		and	r4, r3, #1
 860 0270 951C     		adds	r5, r2, #2
 861 0272 039A     		ldr	r2, [sp, #12]
 862 0274 0AEB870B 		add	fp, r10, r7, lsl #2
 863 0278 4FEA8709 		lsl	r9, r7, #2
 864 027c 9044     		add	r8, r8, r2
 865              	.LVL95:
 866              		.loc 1 322 12 view .LVU314
 867 027e 5E46     		mov	r6, fp
 868 0280 9346     		mov	fp, r2
 869 0282 A9F10209 		sub	r9, r9, #2
 870              	.LVL96:
 871              	.L23:
 872              		.loc 1 322 12 view .LVU315
 873 0286 A5F1020E 		sub	lr, r5, #2
 874              	.LVL97:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 70


 317:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 875              		.loc 1 317 5 is_stmt 1 view .LVU316
 320:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 876              		.loc 1 320 5 view .LVU317
 877              		.loc 1 322 5 view .LVU318
 323:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 324:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     while (tapCnt > 0U)
 878              		.loc 1 324 5 view .LVU319
 879              		.loc 1 324 11 view .LVU320
 880 028a 67B3     		cbz	r7, .L29
 881              		.loc 1 324 11 is_stmt 0 view .LVU321
 882 028c 0023     		movs	r3, #0
 320:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 883              		.loc 1 320 10 view .LVU322
 884 028e 0094     		str	r4, [sp]
 885 0290 1A46     		mov	r2, r3
 886              	.LVL98:
 887              	.L21:
 325:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 326:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2++);
 888              		.loc 1 326 7 is_stmt 1 view .LVU323
 889              		.loc 1 326 12 is_stmt 0 view .LVU324
 890 0292 3EF82310 		ldrh	r1, [lr, r3, lsl #2]
 891 0296 3AF82340 		ldrh	r4, [r10, r3, lsl #2]
 327:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2++);
 892              		.loc 1 327 12 view .LVU325
 893 029a 35F82300 		ldrh	r0, [r5, r3, lsl #2]
 326:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2++);
 894              		.loc 1 326 12 view .LVU326
 895 029e 11FB0422 		smlabb	r2, r1, r4, r2
 896              	.LVL99:
 897              		.loc 1 327 7 is_stmt 1 view .LVU327
 898              		.loc 1 327 12 is_stmt 0 view .LVU328
 899 02a2 3CF82310 		ldrh	r1, [ip, r3, lsl #2]
 900 02a6 0133     		adds	r3, r3, #1
 901              	.LVL100:
 902              		.loc 1 327 12 view .LVU329
 903 02a8 10FB0122 		smlabb	r2, r0, r1, r2
 904              	.LVL101:
 328:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 329:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       /* Decrement loop counter */
 330:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       tapCnt--;
 905              		.loc 1 330 7 is_stmt 1 view .LVU330
 324:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 906              		.loc 1 324 11 view .LVU331
 907 02ac 9F42     		cmp	r7, r3
 908 02ae F0D1     		bne	.L21
 909 02b0 009C     		ldr	r4, [sp]
 910 02b2 09EB050E 		add	lr, r9, r5
 911              	.LVL102:
 327:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 912              		.loc 1 327 33 is_stmt 0 view .LVU332
 913 02b6 3346     		mov	r3, r6
 914              	.LVL103:
 915              	.L20:
 331:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     }
 332:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 71


 333:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     tapCnt = (srcBLen) & 1U;
 916              		.loc 1 333 5 is_stmt 1 view .LVU333
 334:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 335:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* apply same above for remaining samples of smaller length sequence */
 336:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     while (tapCnt > 0U)
 917              		.loc 1 336 5 view .LVU334
 918              		.loc 1 336 11 view .LVU335
 919 02b8 24B1     		cbz	r4, .L22
 337:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 338:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       /* accumlate the results */
 339:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2++);
 920              		.loc 1 339 7 view .LVU336
 921              	.LVL104:
 922              		.loc 1 339 12 is_stmt 0 view .LVU337
 923 02ba BEF80010 		ldrh	r1, [lr]
 924 02be 1B88     		ldrh	r3, [r3]
 925              	.LVL105:
 926              		.loc 1 339 12 view .LVU338
 927 02c0 11FB0322 		smlabb	r2, r1, r3, r2
 928              	.LVL106:
 340:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 341:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       /* Decrement loop counter */
 342:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****       tapCnt--;
 929              		.loc 1 342 7 is_stmt 1 view .LVU339
 336:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 930              		.loc 1 336 11 view .LVU340
 931              	.L22:
 343:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     }
 344:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 345:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     blkCnt--;
 932              		.loc 1 345 5 view .LVU341
 346:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 347:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Store the result in the accumulator in the destination buffer. */
 348:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     *pOut++ = (q7_t) (__SSAT(acc0 >> 7U, 8));
 933              		.loc 1 348 5 view .LVU342
 934              	.LBB90:
 935              		.loc 1 348 23 view .LVU343
 936              		.loc 1 348 23 view .LVU344
 937 02c4 D211     		asrs	r2, r2, #7
 938              	.LVL107:
 939              		.loc 1 348 23 is_stmt 0 view .LVU345
 940 02c6 0235     		adds	r5, r5, #2
 941              	.LVL108:
 942              		.loc 1 348 23 view .LVU346
 943              		.syntax unified
 944              	@ 348 ".//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c" 1
 945 02c8 02F30702 		ssat r2, #8, r2
 946              	@ 0 "" 2
 947              	.LVL109:
 948              		.loc 1 348 23 is_stmt 1 view .LVU347
 949              		.loc 1 348 23 is_stmt 0 view .LVU348
 950              		.thumb
 951              		.syntax unified
 952              	.LBE90:
 953              		.loc 1 348 15 view .LVU349
 954 02cc 0BF8012B 		strb	r2, [fp], #1
 955              	.LVL110:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 72


 349:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 350:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     /* Initialization of inputB pointer */
 351:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     pScr2 = py;
 956              		.loc 1 351 5 is_stmt 1 view .LVU350
 352:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 353:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     pScratch1 += 1U;
 957              		.loc 1 353 5 view .LVU351
 314:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 958              		.loc 1 314 9 view .LVU352
 959 02d0 C345     		cmp	fp, r8
 960 02d2 D8D1     		bne	.L23
 961              	.LVL111:
 962              	.L1:
 354:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   }
 355:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 356:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** }
 963              		.loc 1 356 1 is_stmt 0 view .LVU353
 964 02d4 0BB0     		add	sp, sp, #44
 965              	.LCFI2:
 966              		.cfi_remember_state
 967              		.cfi_def_cfa_offset 36
 968              		@ sp needed
 969 02d6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 970              	.LVL112:
 971              	.L27:
 972              	.LCFI3:
 973              		.cfi_restore_state
 211:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 974              		.loc 1 211 10 view .LVU354
 975 02da 019D     		ldr	r5, [sp, #4]
 221:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 976              		.loc 1 221 11 view .LVU355
 977 02dc 1698     		ldr	r0, [sp, #88]
 978              	.LVL113:
 211:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 979              		.loc 1 211 10 view .LVU356
 980 02de 2B46     		mov	r3, r5
 981              	.LVL114:
 210:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     acc3 = 0;
 982              		.loc 1 210 10 view .LVU357
 983 02e0 A846     		mov	r8, r5
 209:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     acc2 = 0;
 984              		.loc 1 209 10 view .LVU358
 985 02e2 2946     		mov	r1, r5
 986 02e4 72E7     		b	.L14
 987              	.LVL115:
 988              	.L29:
 324:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****     {
 989              		.loc 1 324 11 view .LVU359
 990 02e6 5346     		mov	r3, r10
 320:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c **** 
 991              		.loc 1 320 10 view .LVU360
 992 02e8 3A46     		mov	r2, r7
 993 02ea E5E7     		b	.L20
 994              	.LVL116:
 995              	.L26:
  77:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****         q7_t out0, out1, out2, out3;                   /* Temporary variables */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 73


 996              		.loc 1 77 15 view .LVU361
 997 02ec 149B     		ldr	r3, [sp, #80]
 998 02ee 0393     		str	r3, [sp, #12]
 999 02f0 B3E7     		b	.L13
 1000              	.LVL117:
 1001              	.L25:
 113:.//Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_opt_q7.c ****   {
 1002              		.loc 1 113 9 view .LVU362
 1003 02f2 5346     		mov	r3, r10
 1004 02f4 BEE6     		b	.L3
 1005              	.L50:
 1006 02f6 00BF     		.align	2
 1007              	.L49:
 1008 02f8 0000FFFF 		.word	-65536
 1009              		.cfi_endproc
 1010              	.LFE145:
 1012              		.text
 1013              	.Letext0:
 1014              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/
 1015              		.file 5 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_std
 1016              		.file 6 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock
 1017              		.file 7 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_typ
 1018              		.file 8 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/in
 1019              		.file 9 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reen
 1020              		.file 10 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s 			page 74


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_conv_opt_q7.c
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s:17     .text.arm_conv_opt_q7:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s:26     .text.arm_conv_opt_q7:0000000000000000 arm_conv_opt_q7
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccFnVe6J.s:1008   .text.arm_conv_opt_q7:00000000000002f8 $d

UNDEFINED SYMBOLS
arm_fill_q15
