ARM GAS  /tmp/cc1LPmsL.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"is42s32800j.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.global	sdram_attr
  17              		.section	.data.sdram_attr,"aw"
  18              		.align	2
  21              	sdram_attr:
  22 0000 40410052 		.word	1375748416
  23 0004 01000000 		.word	1
  24 0008 01000000 		.word	1
  25 000c 04000000 		.word	4
  26 0010 20000000 		.word	32
  27 0014 40000000 		.word	64
  28 0018 80010000 		.word	384
  29 001c 00000000 		.word	0
  30 0020 00080000 		.word	2048
  31 0024 00100000 		.word	4096
  32 0028 00000000 		.word	0
  33              		.global	sdram_timing
  34              		.section	.data.sdram_timing,"aw"
  35              		.align	2
  38              	sdram_timing:
  39 0000 02000000 		.word	2
  40 0004 07000000 		.word	7
  41 0008 04000000 		.word	4
  42 000c 07000000 		.word	7
  43 0010 02000000 		.word	2
  44 0014 02000000 		.word	2
  45 0018 02000000 		.word	2
  46              		.global	RegMode
  47              		.section	.data.RegMode,"aw"
  48              		.align	2
  51              	RegMode:
  52 0000 08000000 		.word	8
  53 0004 03000000 		.word	3
  54 0008 03060000 		.word	1539
  55 000c 00000000 		.word	0
  56 0010 00000000 		.word	0
  57 0014 30000000 		.word	48
  58 0018 00000000 		.word	0
  59 001c 00020000 		.word	512
  60              		.section	.text.IS42S32800J_Init,"ax",%progbits
  61              		.align	1
  62              		.global	IS42S32800J_Init
  63              		.arch armv7e-m
ARM GAS  /tmp/cc1LPmsL.s 			page 2


  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv5-d16
  69              	IS42S32800J_Init:
  70              	.LFB338:
  71              		.file 1 "./BSP/Components/Src/is42s32800j.c"
   1:./BSP/Components/Src/is42s32800j.c **** #include "../../system.h"
   2:./BSP/Components/Src/is42s32800j.c **** 
   3:./BSP/Components/Src/is42s32800j.c **** sdram_objectAttr sdram_attr={
   4:./BSP/Components/Src/is42s32800j.c ****     .Instance=              FMC_SDRAM_DEVICE,
   5:./BSP/Components/Src/is42s32800j.c ****     .SDBank=                FMC_SDRAM_BANK2,                   
   6:./BSP/Components/Src/is42s32800j.c ****     .ColumnBitsNumber=      FMC_SDRAM_COLUMN_BITS_NUM_9,         
   7:./BSP/Components/Src/is42s32800j.c ****     .RowBitsNumber=         FMC_SDRAM_ROW_BITS_NUM_12,             
   8:./BSP/Components/Src/is42s32800j.c ****     .MemoryDataWidth=       FMC_SDRAM_MEM_BUS_WIDTH_32,           
   9:./BSP/Components/Src/is42s32800j.c ****     .InternalBankNumber=    FMC_SDRAM_INTERN_BANKS_NUM_4,        
  10:./BSP/Components/Src/is42s32800j.c ****     .CASLatency=            FMC_SDRAM_CAS_LATENCY_3,                   
  11:./BSP/Components/Src/is42s32800j.c ****     .WriteProtection=       FMC_SDRAM_WRITE_PROTECTION_DISABLE,            
  12:./BSP/Components/Src/is42s32800j.c ****     .SDClockPeriod=         FMC_SDRAM_CLOCK_PERIOD_2,             
  13:./BSP/Components/Src/is42s32800j.c ****     .ReadBurst=             FMC_SDRAM_RBURST_ENABLE,                   
  14:./BSP/Components/Src/is42s32800j.c ****     .ReadPipeDelay=         FMC_SDRAM_RPIPE_DELAY_0
  15:./BSP/Components/Src/is42s32800j.c **** };
  16:./BSP/Components/Src/is42s32800j.c **** 
  17:./BSP/Components/Src/is42s32800j.c **** FMC_SDRAM_TimingTypeDef sdram_timing={
  18:./BSP/Components/Src/is42s32800j.c ****     .LoadToActiveDelay    = 2,
  19:./BSP/Components/Src/is42s32800j.c ****     .ExitSelfRefreshDelay = 7,
  20:./BSP/Components/Src/is42s32800j.c ****     .SelfRefreshTime      = 4,
  21:./BSP/Components/Src/is42s32800j.c ****     .RowCycleDelay        = 7,
  22:./BSP/Components/Src/is42s32800j.c ****     .WriteRecoveryTime    = 2,
  23:./BSP/Components/Src/is42s32800j.c ****     .RPDelay              = 2,
  24:./BSP/Components/Src/is42s32800j.c ****     .RCDDelay             = 2
  25:./BSP/Components/Src/is42s32800j.c **** };
  26:./BSP/Components/Src/is42s32800j.c **** 
  27:./BSP/Components/Src/is42s32800j.c **** IS42S32800J_Context_t RegMode={
  28:./BSP/Components/Src/is42s32800j.c ****     .TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2,
  29:./BSP/Components/Src/is42s32800j.c ****     .RefreshMode     = IS42S32800J_AUTOREFRESH_MODE_CMD,
  30:./BSP/Components/Src/is42s32800j.c ****     .RefreshRate     = (uint32_t)0x0603,
  31:./BSP/Components/Src/is42s32800j.c ****     .BurstLength     = IS42S32800J_BURST_LENGTH_1,
  32:./BSP/Components/Src/is42s32800j.c ****     .BurstType       = IS42S32800J_BURST_TYPE_SEQUENTIAL,
  33:./BSP/Components/Src/is42s32800j.c ****     .CASLatency      = IS42S32800J_CAS_LATENCY_3,
  34:./BSP/Components/Src/is42s32800j.c ****     .OperationMode   = IS42S32800J_OPERATING_MODE_STANDARD,
  35:./BSP/Components/Src/is42s32800j.c ****     .WriteBurstMode  = IS42S32800J_WRITEBURST_MODE_SINGLE
  36:./BSP/Components/Src/is42s32800j.c **** };
  37:./BSP/Components/Src/is42s32800j.c **** 
  38:./BSP/Components/Src/is42s32800j.c **** void IS42S32800J_ClockEnable(sdram_objectTypeDef *object,uint32_t Interface) ;
  39:./BSP/Components/Src/is42s32800j.c **** void IS42S32800J_Precharge(sdram_objectTypeDef *object, uint32_t Interface) ;
  40:./BSP/Components/Src/is42s32800j.c **** void IS42S32800J_ModeRegConfig(sdram_objectTypeDef *object, IS42S32800J_Context_t *pRegMode) ;
  41:./BSP/Components/Src/is42s32800j.c **** void IS42S32800J_RefreshMode(sdram_objectTypeDef *object, uint32_t Interface, uint32_t RefreshMode)
  42:./BSP/Components/Src/is42s32800j.c **** void IS42S32800J_RefreshRate(sdram_objectTypeDef *object, uint32_t RefreshCount) ;
  43:./BSP/Components/Src/is42s32800j.c **** void IS42S32800J_EnterPowerMode(sdram_objectTypeDef *object, uint32_t Interface) ;
  44:./BSP/Components/Src/is42s32800j.c **** void IS42S32800J_ExitPowerMode(sdram_objectTypeDef *object, uint32_t Interface) ;
  45:./BSP/Components/Src/is42s32800j.c **** 
  46:./BSP/Components/Src/is42s32800j.c **** void IS42S32800J_Init(void)
  47:./BSP/Components/Src/is42s32800j.c **** {
  72              		.loc 1 47 1
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 136
ARM GAS  /tmp/cc1LPmsL.s 			page 3


  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  77              	.LCFI0:
  78              		.cfi_def_cfa_offset 20
  79              		.cfi_offset 4, -20
  80              		.cfi_offset 5, -16
  81              		.cfi_offset 6, -12
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 ABB0     		sub	sp, sp, #172
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 192
  87 0004 08AF     		add	r7, sp, #32
  88              	.LCFI2:
  89              		.cfi_def_cfa 7, 160
  48:./BSP/Components/Src/is42s32800j.c ****     sdram_objectTypeDef sdram_object;
  49:./BSP/Components/Src/is42s32800j.c ****     SDRAM_object_Init(&sdram_object,sdram_attr);
  90              		.loc 1 49 5
  91 0006 244E     		ldr	r6, .L2
  92 0008 07F1040C 		add	ip, r7, #4
  93 000c 6D46     		mov	r5, sp
  94 000e 06F10C04 		add	r4, r6, #12
  95 0012 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
  96 0014 0FC5     		stmia	r5!, {r0, r1, r2, r3}
  97 0016 94E80F00 		ldm	r4, {r0, r1, r2, r3}
  98 001a 85E80F00 		stm	r5, {r0, r1, r2, r3}
  99 001e 96E80E00 		ldm	r6, {r1, r2, r3}
 100 0022 6046     		mov	r0, ip
 101 0024 FFF7FEFF 		bl	SDRAM_object_Init
  50:./BSP/Components/Src/is42s32800j.c ****     sdram_object.sdram_timing=sdram_timing;
 102              		.loc 1 50 30
 103 0028 1C4B     		ldr	r3, .L2+4
 104 002a 07F13004 		add	r4, r7, #48
 105 002e 1D46     		mov	r5, r3
 106 0030 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 107 0032 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 108 0034 95E80700 		ldm	r5, {r0, r1, r2}
 109 0038 84E80700 		stm	r4, {r0, r1, r2}
  51:./BSP/Components/Src/is42s32800j.c **** 
  52:./BSP/Components/Src/is42s32800j.c ****     sdram_object.sdram_init(&sdram_object);
 110              		.loc 1 52 17
 111 003c D7F88030 		ldr	r3, [r7, #128]
 112              		.loc 1 52 5
 113 0040 3A1D     		adds	r2, r7, #4
 114 0042 1046     		mov	r0, r2
 115 0044 9847     		blx	r3
 116              	.LVL0:
  53:./BSP/Components/Src/is42s32800j.c ****     IS42S32800J_ClockEnable(&sdram_object,RegMode.TargetBank);
 117              		.loc 1 53 5
 118 0046 164B     		ldr	r3, .L2+8
 119 0048 1A68     		ldr	r2, [r3]
 120 004a 3B1D     		adds	r3, r7, #4
 121 004c 1146     		mov	r1, r2
 122 004e 1846     		mov	r0, r3
 123 0050 FFF7FEFF 		bl	IS42S32800J_ClockEnable
  54:./BSP/Components/Src/is42s32800j.c ****     HAL_Delay(1);
 124              		.loc 1 54 5
ARM GAS  /tmp/cc1LPmsL.s 			page 4


 125 0054 0120     		movs	r0, #1
 126 0056 FFF7FEFF 		bl	HAL_Delay
  55:./BSP/Components/Src/is42s32800j.c ****     IS42S32800J_Precharge(&sdram_object,RegMode.TargetBank);
 127              		.loc 1 55 5
 128 005a 114B     		ldr	r3, .L2+8
 129 005c 1A68     		ldr	r2, [r3]
 130 005e 3B1D     		adds	r3, r7, #4
 131 0060 1146     		mov	r1, r2
 132 0062 1846     		mov	r0, r3
 133 0064 FFF7FEFF 		bl	IS42S32800J_Precharge
  56:./BSP/Components/Src/is42s32800j.c ****     IS42S32800J_RefreshMode(&sdram_object,RegMode.TargetBank,RegMode.RefreshMode);
 134              		.loc 1 56 5
 135 0068 0D4B     		ldr	r3, .L2+8
 136 006a 1968     		ldr	r1, [r3]
 137 006c 0C4B     		ldr	r3, .L2+8
 138 006e 5A68     		ldr	r2, [r3, #4]
 139 0070 3B1D     		adds	r3, r7, #4
 140 0072 1846     		mov	r0, r3
 141 0074 FFF7FEFF 		bl	IS42S32800J_RefreshMode
  57:./BSP/Components/Src/is42s32800j.c ****     IS42S32800J_ModeRegConfig(&sdram_object,&RegMode);
 142              		.loc 1 57 5
 143 0078 3B1D     		adds	r3, r7, #4
 144 007a 0949     		ldr	r1, .L2+8
 145 007c 1846     		mov	r0, r3
 146 007e FFF7FEFF 		bl	IS42S32800J_ModeRegConfig
  58:./BSP/Components/Src/is42s32800j.c ****     IS42S32800J_RefreshRate(&sdram_object,RegMode.RefreshRate);
 147              		.loc 1 58 5
 148 0082 074B     		ldr	r3, .L2+8
 149 0084 9A68     		ldr	r2, [r3, #8]
 150 0086 3B1D     		adds	r3, r7, #4
 151 0088 1146     		mov	r1, r2
 152 008a 1846     		mov	r0, r3
 153 008c FFF7FEFF 		bl	IS42S32800J_RefreshRate
  59:./BSP/Components/Src/is42s32800j.c **** }
 154              		.loc 1 59 1
 155 0090 00BF     		nop
 156 0092 8C37     		adds	r7, r7, #140
 157              	.LCFI3:
 158              		.cfi_def_cfa_offset 20
 159 0094 BD46     		mov	sp, r7
 160              	.LCFI4:
 161              		.cfi_def_cfa_register 13
 162              		@ sp needed
 163 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 164              	.L3:
 165              		.align	2
 166              	.L2:
 167 0098 00000000 		.word	sdram_attr
 168 009c 00000000 		.word	sdram_timing
 169 00a0 00000000 		.word	RegMode
 170              		.cfi_endproc
 171              	.LFE338:
 173              		.section	.text.IS42S32800J_ClockEnable,"ax",%progbits
 174              		.align	1
 175              		.global	IS42S32800J_ClockEnable
 176              		.syntax unified
 177              		.thumb
ARM GAS  /tmp/cc1LPmsL.s 			page 5


 178              		.thumb_func
 179              		.fpu fpv5-d16
 181              	IS42S32800J_ClockEnable:
 182              	.LFB339:
  60:./BSP/Components/Src/is42s32800j.c **** 
  61:./BSP/Components/Src/is42s32800j.c **** void IS42S32800J_ClockEnable(sdram_objectTypeDef *object,uint32_t Interface) 
  62:./BSP/Components/Src/is42s32800j.c **** {
 183              		.loc 1 62 1
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 24
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 80B5     		push	{r7, lr}
 188              	.LCFI5:
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 7, -8
 191              		.cfi_offset 14, -4
 192 0002 86B0     		sub	sp, sp, #24
 193              	.LCFI6:
 194              		.cfi_def_cfa_offset 32
 195 0004 00AF     		add	r7, sp, #0
 196              	.LCFI7:
 197              		.cfi_def_cfa_register 7
 198 0006 7860     		str	r0, [r7, #4]
 199 0008 3960     		str	r1, [r7]
  63:./BSP/Components/Src/is42s32800j.c ****     FMC_SDRAM_CommandTypeDef Command;
  64:./BSP/Components/Src/is42s32800j.c ****     Command.CommandMode            = IS42S32800J_CLK_ENABLE_CMD;
 200              		.loc 1 64 36
 201 000a 0123     		movs	r3, #1
 202 000c BB60     		str	r3, [r7, #8]
  65:./BSP/Components/Src/is42s32800j.c ****     Command.CommandTarget          = Interface;
 203              		.loc 1 65 36
 204 000e 3B68     		ldr	r3, [r7]
 205 0010 FB60     		str	r3, [r7, #12]
  66:./BSP/Components/Src/is42s32800j.c ****     Command.AutoRefreshNumber      = 1;
 206              		.loc 1 66 36
 207 0012 0123     		movs	r3, #1
 208 0014 3B61     		str	r3, [r7, #16]
  67:./BSP/Components/Src/is42s32800j.c ****     Command.ModeRegisterDefinition = 0;
 209              		.loc 1 67 36
 210 0016 0023     		movs	r3, #0
 211 0018 7B61     		str	r3, [r7, #20]
  68:./BSP/Components/Src/is42s32800j.c **** 
  69:./BSP/Components/Src/is42s32800j.c ****     /* Send the command */
  70:./BSP/Components/Src/is42s32800j.c ****     object->sdram_writeCmd(object,&Command);
 212              		.loc 1 70 11
 213 001a 7B68     		ldr	r3, [r7, #4]
 214 001c D3F88030 		ldr	r3, [r3, #128]
 215              		.loc 1 70 5
 216 0020 07F10802 		add	r2, r7, #8
 217 0024 1146     		mov	r1, r2
 218 0026 7868     		ldr	r0, [r7, #4]
 219 0028 9847     		blx	r3
 220              	.LVL1:
  71:./BSP/Components/Src/is42s32800j.c **** }
 221              		.loc 1 71 1
 222 002a 00BF     		nop
 223 002c 1837     		adds	r7, r7, #24
ARM GAS  /tmp/cc1LPmsL.s 			page 6


 224              	.LCFI8:
 225              		.cfi_def_cfa_offset 8
 226 002e BD46     		mov	sp, r7
 227              	.LCFI9:
 228              		.cfi_def_cfa_register 13
 229              		@ sp needed
 230 0030 80BD     		pop	{r7, pc}
 231              		.cfi_endproc
 232              	.LFE339:
 234              		.section	.text.IS42S32800J_Precharge,"ax",%progbits
 235              		.align	1
 236              		.global	IS42S32800J_Precharge
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv5-d16
 242              	IS42S32800J_Precharge:
 243              	.LFB340:
  72:./BSP/Components/Src/is42s32800j.c **** 
  73:./BSP/Components/Src/is42s32800j.c **** void IS42S32800J_Precharge(sdram_objectTypeDef *object, uint32_t Interface) 
  74:./BSP/Components/Src/is42s32800j.c **** {
 244              		.loc 1 74 1
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 24
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248 0000 80B5     		push	{r7, lr}
 249              	.LCFI10:
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 86B0     		sub	sp, sp, #24
 254              	.LCFI11:
 255              		.cfi_def_cfa_offset 32
 256 0004 00AF     		add	r7, sp, #0
 257              	.LCFI12:
 258              		.cfi_def_cfa_register 7
 259 0006 7860     		str	r0, [r7, #4]
 260 0008 3960     		str	r1, [r7]
  75:./BSP/Components/Src/is42s32800j.c ****     FMC_SDRAM_CommandTypeDef Command;
  76:./BSP/Components/Src/is42s32800j.c ****     Command.CommandMode            = IS42S32800J_PALL_CMD;
 261              		.loc 1 76 36
 262 000a 0223     		movs	r3, #2
 263 000c BB60     		str	r3, [r7, #8]
  77:./BSP/Components/Src/is42s32800j.c ****     Command.CommandTarget          = Interface;
 264              		.loc 1 77 36
 265 000e 3B68     		ldr	r3, [r7]
 266 0010 FB60     		str	r3, [r7, #12]
  78:./BSP/Components/Src/is42s32800j.c ****     Command.AutoRefreshNumber      = 1;
 267              		.loc 1 78 36
 268 0012 0123     		movs	r3, #1
 269 0014 3B61     		str	r3, [r7, #16]
  79:./BSP/Components/Src/is42s32800j.c ****     Command.ModeRegisterDefinition = 0;
 270              		.loc 1 79 36
 271 0016 0023     		movs	r3, #0
 272 0018 7B61     		str	r3, [r7, #20]
  80:./BSP/Components/Src/is42s32800j.c ****     object->sdram_writeCmd(object,&Command);
 273              		.loc 1 80 11
ARM GAS  /tmp/cc1LPmsL.s 			page 7


 274 001a 7B68     		ldr	r3, [r7, #4]
 275 001c D3F88030 		ldr	r3, [r3, #128]
 276              		.loc 1 80 5
 277 0020 07F10802 		add	r2, r7, #8
 278 0024 1146     		mov	r1, r2
 279 0026 7868     		ldr	r0, [r7, #4]
 280 0028 9847     		blx	r3
 281              	.LVL2:
  81:./BSP/Components/Src/is42s32800j.c **** }
 282              		.loc 1 81 1
 283 002a 00BF     		nop
 284 002c 1837     		adds	r7, r7, #24
 285              	.LCFI13:
 286              		.cfi_def_cfa_offset 8
 287 002e BD46     		mov	sp, r7
 288              	.LCFI14:
 289              		.cfi_def_cfa_register 13
 290              		@ sp needed
 291 0030 80BD     		pop	{r7, pc}
 292              		.cfi_endproc
 293              	.LFE340:
 295              		.section	.text.IS42S32800J_ModeRegConfig,"ax",%progbits
 296              		.align	1
 297              		.global	IS42S32800J_ModeRegConfig
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 301              		.fpu fpv5-d16
 303              	IS42S32800J_ModeRegConfig:
 304              	.LFB341:
  82:./BSP/Components/Src/is42s32800j.c **** 
  83:./BSP/Components/Src/is42s32800j.c **** void IS42S32800J_ModeRegConfig(sdram_objectTypeDef *object, IS42S32800J_Context_t *pRegMode) 
  84:./BSP/Components/Src/is42s32800j.c **** {
 305              		.loc 1 84 1
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 32
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309 0000 80B5     		push	{r7, lr}
 310              	.LCFI15:
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 7, -8
 313              		.cfi_offset 14, -4
 314 0002 88B0     		sub	sp, sp, #32
 315              	.LCFI16:
 316              		.cfi_def_cfa_offset 40
 317 0004 00AF     		add	r7, sp, #0
 318              	.LCFI17:
 319              		.cfi_def_cfa_register 7
 320 0006 7860     		str	r0, [r7, #4]
 321 0008 3960     		str	r1, [r7]
  85:./BSP/Components/Src/is42s32800j.c ****     uint32_t tmpmrd;
  86:./BSP/Components/Src/is42s32800j.c ****     FMC_SDRAM_CommandTypeDef Command;
  87:./BSP/Components/Src/is42s32800j.c ****     /* Program the external memory mode register */
  88:./BSP/Components/Src/is42s32800j.c ****     tmpmrd = (uint32_t)pRegMode->BurstLength   |\
 322              		.loc 1 88 32
 323 000a 3B68     		ldr	r3, [r7]
 324 000c DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/cc1LPmsL.s 			page 8


  89:./BSP/Components/Src/is42s32800j.c ****                         pRegMode->BurstType     |\
 325              		.loc 1 89 33
 326 000e 3B68     		ldr	r3, [r7]
 327 0010 1B69     		ldr	r3, [r3, #16]
  88:./BSP/Components/Src/is42s32800j.c ****                         pRegMode->BurstType     |\
 328              		.loc 1 88 48
 329 0012 1A43     		orrs	r2, r2, r3
  90:./BSP/Components/Src/is42s32800j.c ****                         pRegMode->CASLatency    |\
 330              		.loc 1 90 33
 331 0014 3B68     		ldr	r3, [r7]
 332 0016 5B69     		ldr	r3, [r3, #20]
  89:./BSP/Components/Src/is42s32800j.c ****                         pRegMode->BurstType     |\
 333              		.loc 1 89 49
 334 0018 1A43     		orrs	r2, r2, r3
  91:./BSP/Components/Src/is42s32800j.c ****                         pRegMode->OperationMode |\
 335              		.loc 1 91 33
 336 001a 3B68     		ldr	r3, [r7]
 337 001c 9B69     		ldr	r3, [r3, #24]
  90:./BSP/Components/Src/is42s32800j.c ****                         pRegMode->CASLatency    |\
 338              		.loc 1 90 49
 339 001e 1A43     		orrs	r2, r2, r3
  92:./BSP/Components/Src/is42s32800j.c ****                         pRegMode->WriteBurstMode;
 340              		.loc 1 92 33
 341 0020 3B68     		ldr	r3, [r7]
 342 0022 DB69     		ldr	r3, [r3, #28]
  88:./BSP/Components/Src/is42s32800j.c ****                         pRegMode->BurstType     |\
 343              		.loc 1 88 12
 344 0024 1343     		orrs	r3, r3, r2
 345 0026 FB61     		str	r3, [r7, #28]
  93:./BSP/Components/Src/is42s32800j.c **** 
  94:./BSP/Components/Src/is42s32800j.c ****     Command.CommandMode            = IS42S32800J_LOAD_MODE_CMD;
 346              		.loc 1 94 36
 347 0028 0423     		movs	r3, #4
 348 002a FB60     		str	r3, [r7, #12]
  95:./BSP/Components/Src/is42s32800j.c ****     Command.CommandTarget          = pRegMode->TargetBank;
 349              		.loc 1 95 46
 350 002c 3B68     		ldr	r3, [r7]
 351 002e 1B68     		ldr	r3, [r3]
 352              		.loc 1 95 36
 353 0030 3B61     		str	r3, [r7, #16]
  96:./BSP/Components/Src/is42s32800j.c ****     Command.AutoRefreshNumber      = 1;
 354              		.loc 1 96 36
 355 0032 0123     		movs	r3, #1
 356 0034 7B61     		str	r3, [r7, #20]
  97:./BSP/Components/Src/is42s32800j.c ****     Command.ModeRegisterDefinition = tmpmrd;
 357              		.loc 1 97 36
 358 0036 FB69     		ldr	r3, [r7, #28]
 359 0038 BB61     		str	r3, [r7, #24]
  98:./BSP/Components/Src/is42s32800j.c **** 
  99:./BSP/Components/Src/is42s32800j.c ****     /* Send the command */
 100:./BSP/Components/Src/is42s32800j.c ****     object->sdram_writeCmd(object,&Command);
 360              		.loc 1 100 11
 361 003a 7B68     		ldr	r3, [r7, #4]
 362 003c D3F88030 		ldr	r3, [r3, #128]
 363              		.loc 1 100 5
 364 0040 07F10C02 		add	r2, r7, #12
 365 0044 1146     		mov	r1, r2
ARM GAS  /tmp/cc1LPmsL.s 			page 9


 366 0046 7868     		ldr	r0, [r7, #4]
 367 0048 9847     		blx	r3
 368              	.LVL3:
 101:./BSP/Components/Src/is42s32800j.c **** }
 369              		.loc 1 101 1
 370 004a 00BF     		nop
 371 004c 2037     		adds	r7, r7, #32
 372              	.LCFI18:
 373              		.cfi_def_cfa_offset 8
 374 004e BD46     		mov	sp, r7
 375              	.LCFI19:
 376              		.cfi_def_cfa_register 13
 377              		@ sp needed
 378 0050 80BD     		pop	{r7, pc}
 379              		.cfi_endproc
 380              	.LFE341:
 382              		.section	.text.IS42S32800J_RefreshMode,"ax",%progbits
 383              		.align	1
 384              		.global	IS42S32800J_RefreshMode
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 388              		.fpu fpv5-d16
 390              	IS42S32800J_RefreshMode:
 391              	.LFB342:
 102:./BSP/Components/Src/is42s32800j.c **** 
 103:./BSP/Components/Src/is42s32800j.c **** void IS42S32800J_RefreshMode(sdram_objectTypeDef *object, uint32_t Interface, uint32_t RefreshMode)
 104:./BSP/Components/Src/is42s32800j.c **** {
 392              		.loc 1 104 1
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 32
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396 0000 80B5     		push	{r7, lr}
 397              	.LCFI20:
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 7, -8
 400              		.cfi_offset 14, -4
 401 0002 88B0     		sub	sp, sp, #32
 402              	.LCFI21:
 403              		.cfi_def_cfa_offset 40
 404 0004 00AF     		add	r7, sp, #0
 405              	.LCFI22:
 406              		.cfi_def_cfa_register 7
 407 0006 F860     		str	r0, [r7, #12]
 408 0008 B960     		str	r1, [r7, #8]
 409 000a 7A60     		str	r2, [r7, #4]
 105:./BSP/Components/Src/is42s32800j.c ****     FMC_SDRAM_CommandTypeDef Command;
 106:./BSP/Components/Src/is42s32800j.c ****     Command.CommandMode            = RefreshMode;
 410              		.loc 1 106 36
 411 000c 7B68     		ldr	r3, [r7, #4]
 412 000e 3B61     		str	r3, [r7, #16]
 107:./BSP/Components/Src/is42s32800j.c ****     Command.CommandTarget          = Interface;
 413              		.loc 1 107 36
 414 0010 BB68     		ldr	r3, [r7, #8]
 415 0012 7B61     		str	r3, [r7, #20]
 108:./BSP/Components/Src/is42s32800j.c ****     Command.AutoRefreshNumber      = 8;
 416              		.loc 1 108 36
ARM GAS  /tmp/cc1LPmsL.s 			page 10


 417 0014 0823     		movs	r3, #8
 418 0016 BB61     		str	r3, [r7, #24]
 109:./BSP/Components/Src/is42s32800j.c ****     Command.ModeRegisterDefinition = 0;
 419              		.loc 1 109 36
 420 0018 0023     		movs	r3, #0
 421 001a FB61     		str	r3, [r7, #28]
 110:./BSP/Components/Src/is42s32800j.c **** 
 111:./BSP/Components/Src/is42s32800j.c ****     /* Send the command */
 112:./BSP/Components/Src/is42s32800j.c ****     object->sdram_writeCmd(object,&Command);
 422              		.loc 1 112 11
 423 001c FB68     		ldr	r3, [r7, #12]
 424 001e D3F88030 		ldr	r3, [r3, #128]
 425              		.loc 1 112 5
 426 0022 07F11002 		add	r2, r7, #16
 427 0026 1146     		mov	r1, r2
 428 0028 F868     		ldr	r0, [r7, #12]
 429 002a 9847     		blx	r3
 430              	.LVL4:
 113:./BSP/Components/Src/is42s32800j.c **** }
 431              		.loc 1 113 1
 432 002c 00BF     		nop
 433 002e 2037     		adds	r7, r7, #32
 434              	.LCFI23:
 435              		.cfi_def_cfa_offset 8
 436 0030 BD46     		mov	sp, r7
 437              	.LCFI24:
 438              		.cfi_def_cfa_register 13
 439              		@ sp needed
 440 0032 80BD     		pop	{r7, pc}
 441              		.cfi_endproc
 442              	.LFE342:
 444              		.section	.rodata
 445              		.align	2
 446              	.LC0:
 447 0000 2E2F4253 		.ascii	"./BSP/Components/Src/is42s32800j.c\000"
 447      502F436F 
 447      6D706F6E 
 447      656E7473 
 447      2F537263 
 448              		.section	.text.IS42S32800J_RefreshRate,"ax",%progbits
 449              		.align	1
 450              		.global	IS42S32800J_RefreshRate
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 454              		.fpu fpv5-d16
 456              	IS42S32800J_RefreshRate:
 457              	.LFB343:
 114:./BSP/Components/Src/is42s32800j.c **** 
 115:./BSP/Components/Src/is42s32800j.c **** void IS42S32800J_RefreshRate(sdram_objectTypeDef *object, uint32_t RefreshCount) 
 116:./BSP/Components/Src/is42s32800j.c **** {
 458              		.loc 1 116 1
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 8
 461              		@ frame_needed = 1, uses_anonymous_args = 0
 462 0000 80B5     		push	{r7, lr}
 463              	.LCFI25:
ARM GAS  /tmp/cc1LPmsL.s 			page 11


 464              		.cfi_def_cfa_offset 8
 465              		.cfi_offset 7, -8
 466              		.cfi_offset 14, -4
 467 0002 82B0     		sub	sp, sp, #8
 468              	.LCFI26:
 469              		.cfi_def_cfa_offset 16
 470 0004 00AF     		add	r7, sp, #0
 471              	.LCFI27:
 472              		.cfi_def_cfa_register 7
 473 0006 7860     		str	r0, [r7, #4]
 474 0008 3960     		str	r1, [r7]
 117:./BSP/Components/Src/is42s32800j.c ****     /* Set the device refresh rate */
 118:./BSP/Components/Src/is42s32800j.c ****     if(HAL_SDRAM_ProgramRefreshRate(&object->hsdram, RefreshCount) != HAL_OK)
 475              		.loc 1 118 37
 476 000a 7B68     		ldr	r3, [r7, #4]
 477 000c 4833     		adds	r3, r3, #72
 478              		.loc 1 118 8
 479 000e 3968     		ldr	r1, [r7]
 480 0010 1846     		mov	r0, r3
 481 0012 FFF7FEFF 		bl	HAL_SDRAM_ProgramRefreshRate
 482 0016 0346     		mov	r3, r0
 483              		.loc 1 118 7
 484 0018 002B     		cmp	r3, #0
 485 001a 03D0     		beq	.L10
 119:./BSP/Components/Src/is42s32800j.c ****     {
 120:./BSP/Components/Src/is42s32800j.c ****         Error_Handler(__FILE__, __LINE__);
 486              		.loc 1 120 9
 487 001c 7821     		movs	r1, #120
 488 001e 0348     		ldr	r0, .L11
 489 0020 FFF7FEFF 		bl	Error_Handler
 490              	.L10:
 121:./BSP/Components/Src/is42s32800j.c ****     }
 122:./BSP/Components/Src/is42s32800j.c **** }
 491              		.loc 1 122 1
 492 0024 00BF     		nop
 493 0026 0837     		adds	r7, r7, #8
 494              	.LCFI28:
 495              		.cfi_def_cfa_offset 8
 496 0028 BD46     		mov	sp, r7
 497              	.LCFI29:
 498              		.cfi_def_cfa_register 13
 499              		@ sp needed
 500 002a 80BD     		pop	{r7, pc}
 501              	.L12:
 502              		.align	2
 503              	.L11:
 504 002c 00000000 		.word	.LC0
 505              		.cfi_endproc
 506              	.LFE343:
 508              		.section	.text.IS42S32800J_EnterPowerMode,"ax",%progbits
 509              		.align	1
 510              		.global	IS42S32800J_EnterPowerMode
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 514              		.fpu fpv5-d16
 516              	IS42S32800J_EnterPowerMode:
ARM GAS  /tmp/cc1LPmsL.s 			page 12


 517              	.LFB344:
 123:./BSP/Components/Src/is42s32800j.c **** 
 124:./BSP/Components/Src/is42s32800j.c **** void IS42S32800J_EnterPowerMode(sdram_objectTypeDef *object, uint32_t Interface) 
 125:./BSP/Components/Src/is42s32800j.c **** {
 518              		.loc 1 125 1
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 24
 521              		@ frame_needed = 1, uses_anonymous_args = 0
 522 0000 80B5     		push	{r7, lr}
 523              	.LCFI30:
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 86B0     		sub	sp, sp, #24
 528              	.LCFI31:
 529              		.cfi_def_cfa_offset 32
 530 0004 00AF     		add	r7, sp, #0
 531              	.LCFI32:
 532              		.cfi_def_cfa_register 7
 533 0006 7860     		str	r0, [r7, #4]
 534 0008 3960     		str	r1, [r7]
 126:./BSP/Components/Src/is42s32800j.c ****     FMC_SDRAM_CommandTypeDef Command;
 127:./BSP/Components/Src/is42s32800j.c ****     Command.CommandMode            = IS42S32800J_POWERDOWN_MODE_CMD;
 535              		.loc 1 127 36
 536 000a 0623     		movs	r3, #6
 537 000c BB60     		str	r3, [r7, #8]
 128:./BSP/Components/Src/is42s32800j.c ****     Command.CommandTarget          = Interface;
 538              		.loc 1 128 36
 539 000e 3B68     		ldr	r3, [r7]
 540 0010 FB60     		str	r3, [r7, #12]
 129:./BSP/Components/Src/is42s32800j.c ****     Command.AutoRefreshNumber      = 1;
 541              		.loc 1 129 36
 542 0012 0123     		movs	r3, #1
 543 0014 3B61     		str	r3, [r7, #16]
 130:./BSP/Components/Src/is42s32800j.c ****     Command.ModeRegisterDefinition = 0;
 544              		.loc 1 130 36
 545 0016 0023     		movs	r3, #0
 546 0018 7B61     		str	r3, [r7, #20]
 131:./BSP/Components/Src/is42s32800j.c **** 
 132:./BSP/Components/Src/is42s32800j.c ****     /* Send the command */
 133:./BSP/Components/Src/is42s32800j.c ****     object->sdram_writeCmd(object,&Command);
 547              		.loc 1 133 11
 548 001a 7B68     		ldr	r3, [r7, #4]
 549 001c D3F88030 		ldr	r3, [r3, #128]
 550              		.loc 1 133 5
 551 0020 07F10802 		add	r2, r7, #8
 552 0024 1146     		mov	r1, r2
 553 0026 7868     		ldr	r0, [r7, #4]
 554 0028 9847     		blx	r3
 555              	.LVL5:
 134:./BSP/Components/Src/is42s32800j.c **** }
 556              		.loc 1 134 1
 557 002a 00BF     		nop
 558 002c 1837     		adds	r7, r7, #24
 559              	.LCFI33:
 560              		.cfi_def_cfa_offset 8
 561 002e BD46     		mov	sp, r7
ARM GAS  /tmp/cc1LPmsL.s 			page 13


 562              	.LCFI34:
 563              		.cfi_def_cfa_register 13
 564              		@ sp needed
 565 0030 80BD     		pop	{r7, pc}
 566              		.cfi_endproc
 567              	.LFE344:
 569              		.section	.text.IS42S32800J_ExitPowerMode,"ax",%progbits
 570              		.align	1
 571              		.global	IS42S32800J_ExitPowerMode
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
 575              		.fpu fpv5-d16
 577              	IS42S32800J_ExitPowerMode:
 578              	.LFB345:
 135:./BSP/Components/Src/is42s32800j.c **** 
 136:./BSP/Components/Src/is42s32800j.c **** void IS42S32800J_ExitPowerMode(sdram_objectTypeDef *object, uint32_t Interface) 
 137:./BSP/Components/Src/is42s32800j.c **** {
 579              		.loc 1 137 1
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 24
 582              		@ frame_needed = 1, uses_anonymous_args = 0
 583 0000 80B5     		push	{r7, lr}
 584              	.LCFI35:
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 7, -8
 587              		.cfi_offset 14, -4
 588 0002 86B0     		sub	sp, sp, #24
 589              	.LCFI36:
 590              		.cfi_def_cfa_offset 32
 591 0004 00AF     		add	r7, sp, #0
 592              	.LCFI37:
 593              		.cfi_def_cfa_register 7
 594 0006 7860     		str	r0, [r7, #4]
 595 0008 3960     		str	r1, [r7]
 138:./BSP/Components/Src/is42s32800j.c ****     FMC_SDRAM_CommandTypeDef Command;
 139:./BSP/Components/Src/is42s32800j.c ****     Command.CommandMode            = IS42S32800J_NORMAL_MODE_CMD;
 596              		.loc 1 139 36
 597 000a 0023     		movs	r3, #0
 598 000c BB60     		str	r3, [r7, #8]
 140:./BSP/Components/Src/is42s32800j.c ****     Command.CommandTarget          = Interface;
 599              		.loc 1 140 36
 600 000e 3B68     		ldr	r3, [r7]
 601 0010 FB60     		str	r3, [r7, #12]
 141:./BSP/Components/Src/is42s32800j.c ****     Command.AutoRefreshNumber      = 1;
 602              		.loc 1 141 36
 603 0012 0123     		movs	r3, #1
 604 0014 3B61     		str	r3, [r7, #16]
 142:./BSP/Components/Src/is42s32800j.c ****     Command.ModeRegisterDefinition = 0;
 605              		.loc 1 142 36
 606 0016 0023     		movs	r3, #0
 607 0018 7B61     		str	r3, [r7, #20]
 143:./BSP/Components/Src/is42s32800j.c **** 
 144:./BSP/Components/Src/is42s32800j.c ****     /* Send the command */
 145:./BSP/Components/Src/is42s32800j.c ****     object->sdram_writeCmd(object,&Command);
 608              		.loc 1 145 11
 609 001a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc1LPmsL.s 			page 14


 610 001c D3F88030 		ldr	r3, [r3, #128]
 611              		.loc 1 145 5
 612 0020 07F10802 		add	r2, r7, #8
 613 0024 1146     		mov	r1, r2
 614 0026 7868     		ldr	r0, [r7, #4]
 615 0028 9847     		blx	r3
 616              	.LVL6:
 146:./BSP/Components/Src/is42s32800j.c **** }...
 617              		.loc 1 146 1
 618 002a 00BF     		nop
 619 002c 1837     		adds	r7, r7, #24
 620              	.LCFI38:
 621              		.cfi_def_cfa_offset 8
 622 002e BD46     		mov	sp, r7
 623              	.LCFI39:
 624              		.cfi_def_cfa_register 13
 625              		@ sp needed
 626 0030 80BD     		pop	{r7, pc}
 627              		.cfi_endproc
 628              	.LFE345:
 630              		.text
 631              	.Letext0:
 632              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 633              		.file 3 "./Libraries/CMSIS/Core/Include/core_cm7.h"
 634              		.file 4 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 635              		.file 5 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 636              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 637              		.file 7 "/usr/include/newlib/sys/_types.h"
 638              		.file 8 "/usr/include/newlib/sys/reent.h"
 639              		.file 9 "/usr/include/newlib/sys/lock.h"
 640              		.file 10 "/usr/include/newlib/math.h"
 641              		.file 11 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 642              		.file 12 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_mdma.h"
 643              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 644              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_fmc.h"
 645              		.file 15 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_sdram.h"
 646              		.file 16 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 647              		.file 17 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 648              		.file 18 "/usr/include/newlib/stdlib.h"
 649              		.file 19 "./BSP/Components/Src/../../Components/Inc/../../Hardware/Inc/sdram.h"
 650              		.file 20 "./BSP/Components/Src/../../Components/Inc/is42s32800j.h"
ARM GAS  /tmp/cc1LPmsL.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 is42s32800j.c
     /tmp/cc1LPmsL.s:21     .data.sdram_attr:0000000000000000 sdram_attr
     /tmp/cc1LPmsL.s:18     .data.sdram_attr:0000000000000000 $d
     /tmp/cc1LPmsL.s:38     .data.sdram_timing:0000000000000000 sdram_timing
     /tmp/cc1LPmsL.s:35     .data.sdram_timing:0000000000000000 $d
     /tmp/cc1LPmsL.s:51     .data.RegMode:0000000000000000 RegMode
     /tmp/cc1LPmsL.s:48     .data.RegMode:0000000000000000 $d
     /tmp/cc1LPmsL.s:61     .text.IS42S32800J_Init:0000000000000000 $t
     /tmp/cc1LPmsL.s:69     .text.IS42S32800J_Init:0000000000000000 IS42S32800J_Init
     /tmp/cc1LPmsL.s:181    .text.IS42S32800J_ClockEnable:0000000000000000 IS42S32800J_ClockEnable
     /tmp/cc1LPmsL.s:242    .text.IS42S32800J_Precharge:0000000000000000 IS42S32800J_Precharge
     /tmp/cc1LPmsL.s:390    .text.IS42S32800J_RefreshMode:0000000000000000 IS42S32800J_RefreshMode
     /tmp/cc1LPmsL.s:303    .text.IS42S32800J_ModeRegConfig:0000000000000000 IS42S32800J_ModeRegConfig
     /tmp/cc1LPmsL.s:456    .text.IS42S32800J_RefreshRate:0000000000000000 IS42S32800J_RefreshRate
     /tmp/cc1LPmsL.s:167    .text.IS42S32800J_Init:0000000000000098 $d
     /tmp/cc1LPmsL.s:174    .text.IS42S32800J_ClockEnable:0000000000000000 $t
     /tmp/cc1LPmsL.s:235    .text.IS42S32800J_Precharge:0000000000000000 $t
     /tmp/cc1LPmsL.s:296    .text.IS42S32800J_ModeRegConfig:0000000000000000 $t
     /tmp/cc1LPmsL.s:383    .text.IS42S32800J_RefreshMode:0000000000000000 $t
     /tmp/cc1LPmsL.s:445    .rodata:0000000000000000 $d
     /tmp/cc1LPmsL.s:449    .text.IS42S32800J_RefreshRate:0000000000000000 $t
     /tmp/cc1LPmsL.s:504    .text.IS42S32800J_RefreshRate:000000000000002c $d
     /tmp/cc1LPmsL.s:509    .text.IS42S32800J_EnterPowerMode:0000000000000000 $t
     /tmp/cc1LPmsL.s:516    .text.IS42S32800J_EnterPowerMode:0000000000000000 IS42S32800J_EnterPowerMode
     /tmp/cc1LPmsL.s:570    .text.IS42S32800J_ExitPowerMode:0000000000000000 $t
     /tmp/cc1LPmsL.s:577    .text.IS42S32800J_ExitPowerMode:0000000000000000 IS42S32800J_ExitPowerMode

UNDEFINED SYMBOLS
SDRAM_object_Init
HAL_Delay
HAL_SDRAM_ProgramRefreshRate
Error_Handler
