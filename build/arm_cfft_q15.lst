ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_cfft_q15.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_cfft_radix4by2_q15,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	arm_cfft_radix4by2_q15
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_cfft_radix4by2_q15:
  27              	.LVL0:
  28              	.LFB146:
  29              		.file 1 ".//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c"
   1:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** /* ----------------------------------------------------------------------
   2:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * Project:      CMSIS DSP Library
   3:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * Title:        arm_cfft_q15.c
   4:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * Description:  Combined Radix Decimation in Q15 Frequency CFFT processing function
   5:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  *
   6:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * $Date:        18. March 2019
   7:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * $Revision:    V1.6.0
   8:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  *
   9:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * Target Processor: Cortex-M cores
  10:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * -------------------------------------------------------------------- */
  11:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** /*
  12:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  *
  14:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  *
  16:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * not use this file except in compliance with the License.
  18:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * You may obtain a copy of the License at
  19:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  *
  20:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  *
  22:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * See the License for the specific language governing permissions and
  26:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  * limitations under the License.
  27:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  */
  28:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
  29:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #include "arm_math.h"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 2


  30:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
  31:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** extern void arm_radix4_butterfly_q15(
  32:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t * pSrc,
  33:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t fftLen,
  34:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   const q15_t * pCoef,
  35:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t twidCoefModifier);
  36:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
  37:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** extern void arm_radix4_butterfly_inverse_q15(
  38:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t * pSrc,
  39:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t fftLen,
  40:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   const q15_t * pCoef,
  41:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t twidCoefModifier);
  42:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
  43:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** extern void arm_bitreversal_16(
  44:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint16_t * pSrc,
  45:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   const uint16_t bitRevLen,
  46:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   const uint16_t * pBitRevTable);
  47:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
  48:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** void arm_cfft_radix4by2_q15(
  49:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t * pSrc,
  50:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t fftLen,
  51:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   const q15_t * pCoef);
  52:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
  53:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** void arm_cfft_radix4by2_inverse_q15(
  54:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t * pSrc,
  55:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t fftLen,
  56:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   const q15_t * pCoef);
  57:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
  58:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** /**
  59:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   @ingroup groupTransforms
  60:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  */
  61:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
  62:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** /**
  63:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   @addtogroup ComplexFFT
  64:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   @{
  65:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  */
  66:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
  67:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** /**
  68:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   @brief         Processing function for Q15 complex FFT.
  69:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   @param[in]     S               points to an instance of Q15 CFFT structure
  70:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   @param[in,out] p1              points to the complex data buffer of size <code>2*fftLen</code>. P
  71:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   @param[in]     ifftFlag       flag that selects transform direction
  72:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****                    - value = 0: forward transform
  73:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****                    - value = 1: inverse transform
  74:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   @param[in]     bitReverseFlag flag that enables / disables bit reversal of output
  75:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****                    - value = 0: disables bit reversal of output
  76:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****                    - value = 1: enables bit reversal of output
  77:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   @return        none
  78:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  */
  79:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
  80:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** void arm_cfft_q15(
  81:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   const arm_cfft_instance_q15 * S,
  82:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t * p1,
  83:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint8_t ifftFlag,
  84:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint8_t bitReverseFlag)
  85:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** {
  86:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   uint32_t L = S->fftLen;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 3


  87:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
  88:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   if (ifftFlag == 1U)
  89:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
  90:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      switch (L)
  91:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      {
  92:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 16:
  93:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 64:
  94:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 256:
  95:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 1024:
  96:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 4096:
  97:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        arm_radix4_butterfly_inverse_q15 ( p1, L, (q15_t*)S->pTwiddle, 1 );
  98:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
  99:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 100:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 32:
 101:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 128:
 102:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 512:
 103:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 2048:
 104:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        arm_cfft_radix4by2_inverse_q15 ( p1, L, S->pTwiddle );
 105:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 106:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      }
 107:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   }
 108:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   else
 109:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 110:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      switch (L)
 111:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      {
 112:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 16:
 113:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 64:
 114:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 256:
 115:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 1024:
 116:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 4096:
 117:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        arm_radix4_butterfly_q15  ( p1, L, (q15_t*)S->pTwiddle, 1 );
 118:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 119:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 120:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 32:
 121:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 128:
 122:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 512:
 123:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      case 2048:
 124:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        arm_cfft_radix4by2_q15  ( p1, L, S->pTwiddle );
 125:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 126:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      }
 127:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   }
 128:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 129:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   if ( bitReverseFlag )
 130:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****     arm_bitreversal_16 ((uint16_t*) p1, S->bitRevLength, S->pBitRevTable);
 131:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** }
 132:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 133:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** /**
 134:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   @} end of ComplexFFT group
 135:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****  */
 136:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 137:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** void arm_cfft_radix4by2_q15(
 138:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t * pSrc,
 139:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t fftLen,
 140:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   const q15_t * pCoef)
 141:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** {
  30              		.loc 1 141 1 view -0
  31              		.cfi_startproc
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 4


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 142:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t i;
  34              		.loc 1 142 9 view .LVU1
 143:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t n2;
  35              		.loc 1 143 9 view .LVU2
 144:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t p0, p1, p2, p3;
  36              		.loc 1 144 9 view .LVU3
 145:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #if defined (ARM_MATH_DSP)
 146:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q31_t T, S, R;
  37              		.loc 1 146 9 view .LVU4
 147:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q31_t coeff, out1, out2;
  38              		.loc 1 147 9 view .LVU5
 148:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   const q15_t *pC = pCoef;
  39              		.loc 1 148 3 view .LVU6
 141:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t i;
  40              		.loc 1 141 1 is_stmt 0 view .LVU7
  41 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 36
  44              		.cfi_offset 4, -36
  45              		.cfi_offset 5, -32
  46              		.cfi_offset 6, -28
  47              		.cfi_offset 7, -24
  48              		.cfi_offset 8, -20
  49              		.cfi_offset 9, -16
  50              		.cfi_offset 10, -12
  51              		.cfi_offset 11, -8
  52              		.cfi_offset 14, -4
 149:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t *pSi = pSrc;
 150:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t *pSl = pSrc + fftLen;
 151:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #else
 152:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t l;
 153:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t xt, yt, cosVal, sinVal;
 154:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #endif
 155:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 156:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   n2 = fftLen >> 1U;
 157:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 158:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #if defined (ARM_MATH_DSP)
 159:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 160:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   for (i = n2; i > 0; i--)
  53              		.loc 1 160 3 view .LVU8
  54 0004 4D08     		lsrs	r5, r1, #1
 141:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t i;
  55              		.loc 1 141 1 view .LVU9
  56 0006 81B0     		sub	sp, sp, #4
  57              	.LCFI1:
  58              		.cfi_def_cfa_offset 40
 141:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t i;
  59              		.loc 1 141 1 view .LVU10
  60 0008 1646     		mov	r6, r2
  61              	.LVL1:
 149:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t *pSi = pSrc;
  62              		.loc 1 149 9 is_stmt 1 view .LVU11
 150:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #else
  63              		.loc 1 150 9 view .LVU12
 150:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #else
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 5


  64              		.loc 1 150 27 is_stmt 0 view .LVU13
  65 000a 00EB4107 		add	r7, r0, r1, lsl #1
  66              	.LVL2:
 156:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
  67              		.loc 1 156 3 is_stmt 1 view .LVU14
  68              		.loc 1 160 3 view .LVU15
  69              		.loc 1 160 16 view .LVU16
  70              		.loc 1 160 3 is_stmt 0 view .LVU17
  71 000e 4DD0     		beq	.L2
  72 0010 0446     		mov	r4, r0
 148:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t *pSi = pSrc;
  73              		.loc 1 148 16 view .LVU18
  74 0012 9646     		mov	lr, r2
 150:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #else
  75              		.loc 1 150 16 view .LVU19
  76 0014 3846     		mov	r0, r7
  77              	.LVL3:
  78              		.loc 1 160 3 view .LVU20
  79 0016 2A46     		mov	r2, r5
  80              	.LVL4:
 149:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t *pSl = pSrc + fftLen;
  81              		.loc 1 149 16 view .LVU21
  82 0018 2146     		mov	r1, r4
  83              	.LVL5:
  84              	.LBB46:
  85              	.LBB47:
  86              		.file 2 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 6


  31:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 7


  88:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 8


 145:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 9


 202:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 10


 259:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 11


 316:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 12


 373:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 13


 430:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 14


 487:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 15


 544:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 16


 601:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 17


 658:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 18


 715:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 19


 772:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 20


 829:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 21


 886:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 22


 943:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 948:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 949:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 950:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 951:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 955:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 957:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 959:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 960:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 962:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 966:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 967:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 969:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 972:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 973:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 974:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 976:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 977:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 980:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 981:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 985:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 990:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 992:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 994:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 996:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 23


1000:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1006:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
1007:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1008:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1010:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1011:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1012:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1013:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1014:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1015:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1020:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1021:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1023:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1026:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
1027:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1030:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1032:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1033:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1039:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1041:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1042:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1043:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1047:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1048:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1050:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1051:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1052:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 24


1057:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1062:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
1063:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
1065:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1066:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1068:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1069:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1070:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1071:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1072:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1073:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1078:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1080:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
1086:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    */
1089:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
1090:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1091:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
1092:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1093:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1095:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1096:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1097:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1102:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1107:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1109:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1110:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1111:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 25


1114:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1117:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1119:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1121:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1122:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1123:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1124:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1129:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1131:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1132:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1133:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1136:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1139:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1141:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1143:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1144:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1145:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1146:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1151:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1152:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1153:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1154:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1155:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
1156:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1157:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1158:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1159:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1160:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1161:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1168:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1170:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 26


1171:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1172:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1174:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1175:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1176:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1177:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1178:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1185:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1187:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1188:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1189:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1191:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1192:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1193:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1194:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1195:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1202:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1203:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1204:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1205:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1206:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
1207:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1208:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1209:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1210:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1211:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1212:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
1213:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1214:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1215:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
1216:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1217:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1218:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1219:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1220:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1221:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1222:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1223:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1224:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1225:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1226:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1227:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 27


1228:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1229:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1230:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1231:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1232:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1233:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
1234:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1235:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1236:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1237:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __extension__ \
1238:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1239:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1240:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1241:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1242:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1243:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1244:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1245:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1246:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1247:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1248:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1249:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
1250:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1251:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1252:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1253:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  __extension__ \
1254:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1255:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1256:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1257:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1258:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1259:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1260:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1261:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1262:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1263:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1264:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1265:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
1266:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1267:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1268:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
1269:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1270:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1271:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1272:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1273:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1274:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1275:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1276:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1277:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1278:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1279:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1280:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1281:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1282:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1283:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1284:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 28


1285:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1286:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1287:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1288:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1289:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1290:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1291:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1292:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1293:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1294:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1295:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1296:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1297:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1298:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1299:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1300:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1301:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1302:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1303:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1304:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1305:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1306:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1307:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1308:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1309:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1310:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1311:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1312:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1313:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1314:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1315:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1316:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1317:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1318:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1319:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1320:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1321:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1322:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1323:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1324:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1325:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1326:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1327:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
1328:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1329:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1330:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1331:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1332:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1333:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1334:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1335:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1336:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1337:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1338:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1339:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1340:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1341:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 29


1342:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1343:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1344:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1345:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1346:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1347:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1348:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1349:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1350:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1351:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1352:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1353:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1354:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1355:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1356:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1357:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1358:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1359:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1360:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1361:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1362:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1363:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1364:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1365:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1366:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1367:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1368:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1369:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1370:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1371:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1372:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1373:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1374:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1375:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1376:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1377:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1378:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1379:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1380:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1381:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1382:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
1383:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1384:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
1385:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1386:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
1387:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
1388:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > max)
1389:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1390:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1391:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1392:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < min)
1393:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1394:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return min;
1395:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1396:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1397:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return val;
1398:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 30


1399:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1400:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1401:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1402:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1403:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1404:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1405:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1406:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1407:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
1408:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1409:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (sat <= 31U)
1410:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1411:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
1412:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
1413:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1414:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1415:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1416:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < 0)
1417:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1418:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return 0U;
1419:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1420:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1421:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (uint32_t)val;
1422:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1423:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1424:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1425:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1426:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1427:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1428:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1429:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1430:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1431:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1432:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1433:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1434:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1435:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1436:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1437:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
1438:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1439:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1440:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1441:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1442:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1443:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1444:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1445:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1446:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1447:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1448:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1449:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1450:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1451:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1452:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
1453:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1454:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1455:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 31


1456:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1457:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1458:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1459:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1460:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1461:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1462:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1463:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1464:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1465:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1466:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1467:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
1468:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1469:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1470:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1471:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1472:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1473:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1474:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1475:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1476:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1477:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1478:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1479:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1480:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1481:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1482:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1483:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1484:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1485:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1486:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1487:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1488:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1489:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1490:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1491:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1492:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1493:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1494:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1495:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1496:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1497:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1498:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1499:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1500:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1501:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1502:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1503:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1504:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1505:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1506:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1507:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1508:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1509:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1510:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1511:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1512:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 32


1513:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1514:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1515:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1516:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1517:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1518:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1519:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1520:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1521:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1522:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1523:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1524:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1525:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1526:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1527:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1528:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1529:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1530:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1531:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1532:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1533:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1534:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1535:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1536:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1537:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1538:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1539:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1540:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1541:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1542:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1543:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1544:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1545:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1546:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1547:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1548:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1549:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1550:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1551:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1552:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1553:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1554:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1555:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1556:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1557:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1558:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1559:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1560:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1561:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1562:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1563:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1564:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1565:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
1566:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1567:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1568:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1569:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 33


1570:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1571:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1572:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1573:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1574:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1575:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1576:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1577:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1578:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1579:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1580:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1581:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1582:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
1583:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1584:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1585:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1586:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1587:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1588:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1589:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1590:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1591:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1592:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1593:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1594:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1595:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1596:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1597:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1598:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1599:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
1600:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1601:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1602:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1603:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1604:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1605:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1606:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1607:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1608:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1609:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1610:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1611:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1612:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1613:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1614:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1615:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated SIMD instructions
1616:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
1617:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
1618:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1619:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
1620:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1621:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1622:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1623:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1624:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1625:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1626:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 34


1627:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1628:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1629:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1630:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1631:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1632:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1633:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1634:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1635:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1636:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1637:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1638:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1639:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1640:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1641:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1642:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1643:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1644:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1645:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1646:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1647:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1648:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1649:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1650:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1651:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1652:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1653:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1654:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1655:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1656:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1657:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1658:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1659:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1660:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1661:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1662:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1663:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1664:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1665:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1666:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1667:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1668:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1669:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1670:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1671:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1672:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1673:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1674:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1675:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1676:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1677:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1678:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1679:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1680:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1681:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1682:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1683:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 35


1684:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1685:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1686:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1687:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1688:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1689:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1690:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1691:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1692:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1693:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1694:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1695:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1696:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1697:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1698:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1699:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1700:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1701:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1702:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1703:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1704:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1705:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1706:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1707:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1708:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1709:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1710:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1711:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1712:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1713:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1714:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1715:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1716:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1717:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1718:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1719:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1720:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1721:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1722:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1723:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1724:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1725:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1726:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1727:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1728:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1729:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1730:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1731:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1732:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1733:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1734:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1736:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1738:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  87              		.loc 2 1739 3 view .LVU22
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 36


  88 001a 4FF0000C 		mov	ip, #0
  89              	.LBE47:
  90              	.LBE46:
 161:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 162:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****       coeff = read_q15x2_ia ((q15_t **) &pC);
 163:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 164:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****       T = read_q15x2 (pSi);
 165:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****       T = __SHADD16(T, 0); /* this is just a SIMD arithmetic shift right by 1 */
 166:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 167:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****       S = read_q15x2 (pSl);
 168:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****       S = __SHADD16(S, 0); /* this is just a SIMD arithmetic shift right by 1 */
 169:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 170:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****       R = __QSUB16(T, S);
 171:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 172:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****       write_q15x2_ia (&pSi, __SHADD16(T, S));
 173:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 174:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 175:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****       out1 = __SMUAD(coeff, R) >> 16U;
 176:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****       out2 = __SMUSDX(coeff, R);
 177:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #else
 178:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****       out1 = __SMUSDX(R, coeff) >> 16U;
 179:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****       out2 = __SMUAD(coeff, R);
 180:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #endif /* #ifndef ARM_MATH_BIG_ENDIAN */
 181:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 182:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****       write_q15x2_ia (&pSl, (q31_t) ((out2) & 0xFFFF0000) | (out1 & 0x0000FFFF));
  91              		.loc 1 182 29 view .LVU23
  92 001e DFF8A880 		ldr	r8, .L12
  93              	.LVL6:
  94              	.L3:
 162:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
  95              		.loc 1 162 7 is_stmt 1 view .LVU24
  96              	.LBB49:
  97              	.LBI49:
  98              		.file 3 ".//Libraries/CMSIS/DSP/Include/arm_math.h"
   1:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /******************************************************************************
   2:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @file     arm_math.h
   3:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief    Public header file for CMSIS DSP Library
   4:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @version  V1.6.0
   5:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @date     18. March 2019
   6:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  ******************************************************************************/
   7:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /*
   8:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved.
   9:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  10:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  12:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * not use this file except in compliance with the License.
  14:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * You may obtain a copy of the License at
  15:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  16:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  18:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * See the License for the specific language governing permissions and
  22:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * limitations under the License.
  23:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 37


  24:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
  25:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
  26:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  28:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Introduction
  29:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  30:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  31:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  34:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Basic math functions
  36:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Fast math functions
  37:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Complex math functions
  38:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Filters
  39:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Matrix functions
  40:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Transform functions
  41:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Motor control functions
  42:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Statistical functions
  43:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Support functions
  44:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Interpolation functions
  45:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  46:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  49:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Using the Library
  50:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  51:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  52:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  58:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  59:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  61:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  64:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  67:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  70:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  73:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  77:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  78:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Examples
  79:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * --------
  80:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 38


  81:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  82:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  83:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Toolchain Support
  84:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  85:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  86:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  87:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  88:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  89:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Building the Library
  90:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  91:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  92:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  93:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
  94:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  95:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  96:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
  97:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  98:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Preprocessor Macros
  99:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 100:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 101:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Each library project have different preprocessor macros.
 102:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 103:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 104:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 105:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 106:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 107:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 108:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 109:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 110:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 111:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 112:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 113:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 114:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 115:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_LOOPUNROLL:
 116:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 117:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_LOOPUNROLL to enable manual loop unrolling in DSP functions
 118:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 119:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON:
 120:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 121:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON to enable Neon versions of the DSP functions.
 122:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * It is not enabled by default when Neon is available because performances are 
 123:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * dependent on the compiler and target architecture.
 124:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 125:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON_EXPERIMENTAL:
 126:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 127:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON_EXPERIMENTAL to enable experimental Neon versions of 
 128:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * of some DSP functions. Experimental Neon versions currently do not have better
 129:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * performances than the scalar versions.
 130:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 131:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 132:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 133:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * -----------------------------
 134:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 135:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 136:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |File/Folder                      |Content                                                    
 137:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |---------------------------------|-----------------------------------------------------------
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 39


 138:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP     | This documentation                                        
 139:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\DSP_Lib_TestSuite | DSP_Lib test suite                                        
 140:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Examples          | Example projects demonstrating the usage of the library fu
 141:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Include           | DSP_Lib include files                                     
 142:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Lib               | DSP_Lib binaries                                          
 143:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Projects          | Projects to rebuild DSP_Lib binaries                      
 144:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Source            | DSP_Lib source files                                      
 145:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 146:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 147:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Revision History of CMSIS-DSP
 148:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 149:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 150:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 151:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 152:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 153:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 154:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 155:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 156:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 157:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 158:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 159:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 160:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 161:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * operate on individual values and not arrays.
 162:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 163:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 164:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 165:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 166:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 167:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 168:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 169:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 170:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * (real, imag, real, imag, ...).
 171:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 172:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 173:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * real values.
 174:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 175:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 176:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 177:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 178:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 179:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 180:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 181:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 182:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 183:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 184:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 185:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * the type
 186:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 187:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * below:
 188:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 189:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     typedef struct
 190:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     {
 191:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 192:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 193:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 194:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     } arm_matrix_instance_f32;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 40


 195:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 196:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 197:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 198:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 199:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 200:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 201:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * matrix element (i, j) is stored at:
 202:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 203:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     pData[i*numCols + j]
 204:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 205:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 206:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Init Functions
 207:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 208:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * data structure.
 209:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 210:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Refer to \ref arm_mat_init_f32(), \ref arm_mat_init_q31() and \ref arm_mat_init_q15()
 211:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * for floating-point, Q31 and Q15 types,  respectively.
 212:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 213:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par
 214:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 215:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 216:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * To place the instance structure in a const data
 217:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 218:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 219:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 220:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 221:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 222:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 223:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 224:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 225:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * data array.
 226:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 227:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Size Checking
 228:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 229:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 230:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 231:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * columns. If the size check fails the functions return:
 232:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 233:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 234:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 235:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Otherwise the functions return
 236:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 237:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 238:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 239:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 240:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 241:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 242:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 243:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 244:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 245:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 246:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 247:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 248:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 249:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 250:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 251:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 41


 252:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 253:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 254:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 255:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 256:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupController Controller Functions
 257:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 258:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 259:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 260:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 261:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 262:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 263:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 264:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 265:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 266:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 267:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 268:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 269:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 270:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 271:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 272:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 273:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 274:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 275:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupExamples Examples
 276:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 277:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 278:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 279:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef _ARM_MATH_H
 280:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define _ARM_MATH_H
 281:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 282:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /* Compiler specific diagnostic adjustment */
 283:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 284:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 285:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 286:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 287:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 288:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic push
 289:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wsign-conversion"
 290:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wconversion"
 291:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wunused-parameter"
 292:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 293:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 294:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 295:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 296:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 297:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 298:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 299:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 300:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 301:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( _MSC_VER )
 302:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 303:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 304:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 305:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 306:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 307:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 308:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /* Included for instrinsics definitions */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 42


 309:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if !defined ( _MSC_VER )
 310:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include "cmsis_compiler.h"
 311:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 312:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include <stdint.h>
 313:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __STATIC_FORCEINLINE static __forceinline
 314:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __ALIGNED(x) __declspec(align(x))
 315:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_ENTER
 316:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_EXIT
 317:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_ENTER 
 318:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
 319:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 320:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 321:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include "string.h"
 322:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include "math.h"
 323:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include "float.h"
 324:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 325:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /* evaluate ARM DSP feature */
 326:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
 327:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define ARM_MATH_DSP                   1
 328:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 329:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 330:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined(__ARM_NEON)
 331:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #include <arm_neon.h>
 332:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 333:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 334:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 335:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #ifdef   __cplusplus
 336:.//Libraries/CMSIS/DSP/Include/arm_math.h **** extern "C"
 337:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 338:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 339:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 340:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 341:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 342:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 344:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 345:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q15          0x5
 347:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef PI
 349:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define PI               3.14159265358979f
 350:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 351:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 352:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 353:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 355:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 356:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 363:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 364:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 43


 366:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 370:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 371:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 372:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 373:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 374:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 375:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef enum
 376:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 377:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SUCCESS        =  0,        /**< No error */
 378:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 379:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR   = -2,        /**< Length of data buffer is incorrect */
 380:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH  = -3,        /**< Size of matrices is not compatible with the operation
 381:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_NANINF         = -4,        /**< Not-a-number (NaN) or infinity is generated */
 382:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SINGULAR       = -5,        /**< Input matrix is singular and cannot be inverted */
 383:.//Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_TEST_FAILURE   = -6         /**< Test Failed */
 384:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_status;
 385:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 386:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 387:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 388:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 389:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int8_t q7_t;
 390:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 391:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 392:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 393:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 394:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int16_t q15_t;
 395:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 396:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 397:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 398:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 399:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int32_t q31_t;
 400:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 401:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 402:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 403:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 404:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int64_t q63_t;
 405:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 406:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 407:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 408:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 409:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef float float32_t;
 410:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 411:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 412:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 413:.//Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 414:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef double float64_t;
 415:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 416:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 417:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 418:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief definition to read/write two 16 bit values.
 419:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @deprecated
 420:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 421:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 422:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 44


 423:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 424:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 425:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 426:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 427:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 428:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 429:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 430:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 431:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 432:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 433:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 434:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
 435:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined(_MSC_VER )
 436:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 437:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 438:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 439:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 440:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 441:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 442:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
 443:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
 444:.//Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
 445:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 446:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /* SIMD replacement */
 447:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 448:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 449:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 450:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer.
 451:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 452:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 453:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 454:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
 455:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15)
 456:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 457:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 458:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 459:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, pQ15, 4);
 460:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 461:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 462:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 463:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 464:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 465:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and increment pointer afterwards.
 466:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 467:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 468:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_ia (
  99              		.loc 3 469 28 view .LVU25
 100              	.LBB50:
 470:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 471:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 101              		.loc 3 472 3 view .LVU26
 473:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 102              		.loc 3 474 3 view .LVU27
 103 0022 5EF8043B 		ldr	r3, [lr], #4	@ unaligned
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 45


 104              	.LVL7:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 105              		.loc 3 475 3 view .LVU28
 476:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 477:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 106              		.loc 3 477 3 view .LVU29
 107              		.loc 3 477 3 is_stmt 0 view .LVU30
 108              	.LBE50:
 109              	.LBE49:
 164:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****       T = __SHADD16(T, 0); /* this is just a SIMD arithmetic shift right by 1 */
 110              		.loc 1 164 7 is_stmt 1 view .LVU31
 457:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 111              		.loc 3 457 3 view .LVU32
 459:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 112              		.loc 3 459 3 view .LVU33
 461:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 113              		.loc 3 461 3 view .LVU34
 165:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 114              		.loc 1 165 7 view .LVU35
 115              	.LBB51:
 116              	.LBI46:
1735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 117              		.loc 2 1735 31 view .LVU36
 118              	.LBB48:
1737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 119              		.loc 2 1737 3 view .LVU37
 120              		.loc 2 1739 3 view .LVU38
 121 0026 D1F80090 		ldr	r9, [r1]	@ unaligned
 122              		.syntax unified
 123              	@ 1739 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 124 002a 99FA2CF9 		shadd16 r9, r9, ip
 125              	@ 0 "" 2
 126              	.LVL8:
1740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 127              		.loc 2 1740 3 view .LVU39
 128              		.loc 2 1740 3 is_stmt 0 view .LVU40
 129              		.thumb
 130              		.syntax unified
 131              	.LBE48:
 132              	.LBE51:
 167:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****       S = __SHADD16(S, 0); /* this is just a SIMD arithmetic shift right by 1 */
 133              		.loc 1 167 7 is_stmt 1 view .LVU41
 457:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 134              		.loc 3 457 3 view .LVU42
 459:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 135              		.loc 3 459 3 view .LVU43
 461:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 136              		.loc 3 461 3 view .LVU44
 168:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 137              		.loc 1 168 7 view .LVU45
 138              	.LBB52:
 139              	.LBI52:
1735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 140              		.loc 2 1735 31 view .LVU46
 141              	.LBB53:
1737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 142              		.loc 2 1737 3 view .LVU47
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 46


1739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 143              		.loc 2 1739 3 view .LVU48
 144 002e D0F800B0 		ldr	fp, [r0]	@ unaligned
 145              		.syntax unified
 146              	@ 1739 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 147 0032 9BFA2CFB 		shadd16 fp, fp, ip
 148              	@ 0 "" 2
 149              	.LVL9:
 150              		.loc 2 1740 3 view .LVU49
 151              		.loc 2 1740 3 is_stmt 0 view .LVU50
 152              		.thumb
 153              		.syntax unified
 154              	.LBE53:
 155              	.LBE52:
 170:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 156              		.loc 1 170 7 is_stmt 1 view .LVU51
 157              	.LBB54:
 158              	.LBI54:
1741:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1742:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1743:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1744:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1745:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1746:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1747:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1748:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1749:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1750:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1751:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1752:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1753:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1754:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1755:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1756:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1757:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1758:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1759:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1760:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1761:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1762:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1763:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1764:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1765:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1766:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1767:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1768:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1769:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1770:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1771:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1772:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1773:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1774:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1775:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
 159              		.loc 2 1775 31 view .LVU52
 160              	.LBB55:
1776:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1777:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 47


 161              		.loc 2 1777 3 view .LVU53
1778:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1779:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 162              		.loc 2 1779 3 view .LVU54
 163              		.syntax unified
 164              	@ 1779 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 165 0036 D9FA1BFA 		qsub16 r10, r9, fp
 166              	@ 0 "" 2
 167              	.LVL10:
1780:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 168              		.loc 2 1780 3 view .LVU55
 169              		.loc 2 1780 3 is_stmt 0 view .LVU56
 170              		.thumb
 171              		.syntax unified
 172              	.LBE55:
 173              	.LBE54:
 172:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 174              		.loc 1 172 7 is_stmt 1 view .LVU57
 175              	.LBB56:
 176              	.LBI56:
1735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 177              		.loc 2 1735 31 view .LVU58
 178              	.LBB57:
1737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 179              		.loc 2 1737 3 view .LVU59
1739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 180              		.loc 2 1739 3 view .LVU60
 181              		.syntax unified
 182              	@ 1739 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 183 003a 99FA2BF9 		shadd16 r9, r9, fp
 184              	@ 0 "" 2
 185              	.LVL11:
1740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 186              		.loc 2 1740 3 view .LVU61
1740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 187              		.loc 2 1740 3 is_stmt 0 view .LVU62
 188              		.thumb
 189              		.syntax unified
 190              	.LBE57:
 191              	.LBE56:
 192              	.LBB58:
 193              	.LBI58:
 478:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 479:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 480:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 481:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and decrement pointer afterwards.
 482:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 483:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 484:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 485:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_da (
 486:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 487:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 488:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 489:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 490:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 491:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 492:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 48


 493:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 494:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 495:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 496:.//Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 497:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer and increment pointer afterwards.
 498:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 499:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 500:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 501:.//Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 502:.//Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2_ia (
 194              		.loc 3 502 27 is_stmt 1 view .LVU63
 195              	.LBB59:
 503:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15,
 504:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t    value)
 505:.//Libraries/CMSIS/DSP/Include/arm_math.h **** {
 506:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 196              		.loc 3 506 3 view .LVU64
 507:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 508:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ15, &val, 4);
 197              		.loc 3 508 3 view .LVU65
 198 003e 41F8049B 		str	r9, [r1], #4	@ unaligned
 199              	.LVL12:
 509:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 200              		.loc 3 509 3 view .LVU66
 201              		.loc 3 509 3 is_stmt 0 view .LVU67
 202              	.LBE59:
 203              	.LBE58:
 175:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****       out2 = __SMUSDX(coeff, R);
 204              		.loc 1 175 7 is_stmt 1 view .LVU68
 205              	.LBB60:
 206              	.LBI60:
1781:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1782:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1783:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1784:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1785:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1786:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1787:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1788:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1789:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1790:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1791:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1792:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1793:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1794:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1795:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1796:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1797:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1798:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1799:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1800:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1801:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1802:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1803:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1804:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1805:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1806:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 49


1807:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1808:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1809:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1810:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1811:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1812:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1813:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1814:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1815:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1816:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1817:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1818:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1819:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1820:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1821:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1822:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1823:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1824:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1825:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1826:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1827:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1828:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1829:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1830:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1831:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1832:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1833:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1834:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1835:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1836:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1837:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1838:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1839:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1840:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1841:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1842:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1843:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1844:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1845:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1846:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1847:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1848:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1849:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1850:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1851:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1852:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1853:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1854:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1855:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1856:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1857:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1858:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1859:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1860:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1861:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1862:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1863:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 50


1864:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1865:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1866:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1867:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1868:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1869:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1870:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1871:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1872:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1873:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1874:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1875:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1876:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1877:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1878:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1879:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1880:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1881:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1882:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1883:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1884:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1885:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1886:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1887:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1888:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1889:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1890:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1891:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1892:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1893:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1894:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1895:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1896:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1897:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1898:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1899:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1900:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1901:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1902:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1903:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1904:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1905:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1906:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1907:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1908:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1909:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1910:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1911:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1912:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1913:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1914:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1915:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1916:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1917:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1918:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1919:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)
1920:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 51


1921:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1922:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1923:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1924:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1925:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1926:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1927:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1928:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1929:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1930:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1931:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1932:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1933:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1934:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1935:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1936:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1937:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1938:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1939:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1940:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1941:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTB16(uint32_t op1)
1942:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1943:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1944:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1945:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1946:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1947:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1948:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1949:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1950:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1951:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1952:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1953:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1954:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1955:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1956:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1957:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTB16(uint32_t op1)
1958:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1959:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1960:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1961:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1962:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1963:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1964:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1965:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1966:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1967:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1968:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1969:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1970:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1971:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1972:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1973:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
 207              		.loc 2 1973 31 view .LVU69
 208              	.LBB61:
1974:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1975:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 52


 209              		.loc 2 1975 3 view .LVU70
1976:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1977:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 210              		.loc 2 1977 3 view .LVU71
 211              		.syntax unified
 212              	@ 1977 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 213 0042 23FB0AF9 		smuad r9, r3, r10
 214              	@ 0 "" 2
 215              	.LVL13:
1978:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 216              		.loc 2 1978 3 view .LVU72
 217              		.loc 2 1978 3 is_stmt 0 view .LVU73
 218              		.thumb
 219              		.syntax unified
 220              	.LBE61:
 221              	.LBE60:
 176:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #else
 222              		.loc 1 176 7 is_stmt 1 view .LVU74
 223              	.LBB62:
 224              	.LBI62:
1979:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1980:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1981:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1982:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1983:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1984:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1985:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1986:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1987:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1988:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1989:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32_t op3)
1990:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1991:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1992:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1993:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1994:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1995:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1996:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1997:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint32_t op3)
1998:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1999:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
2000:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2001:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
2002:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
2003:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2004:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2005:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint64_t __SMLALD (uint32_t op1, uint32_t op2, uint64_t acc)
2006:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2007:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   union llreg_u{
2008:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t w32[2];
2009:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint64_t w64;
2010:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } llr;
2011:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   llr.w64 = acc;
2012:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2013:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
2014:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlald %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (o
2015:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 53


2016:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlald %0, %1, %2, %3" : "=r" (llr.w32[1]), "=r" (llr.w32[0]): "r" (op1), "r" (o
2017:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
2018:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2019:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(llr.w64);
2020:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2021:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2022:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint64_t __SMLALDX (uint32_t op1, uint32_t op2, uint64_t acc)
2023:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2024:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   union llreg_u{
2025:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t w32[2];
2026:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint64_t w64;
2027:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } llr;
2028:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   llr.w64 = acc;
2029:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2030:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
2031:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlaldx %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (
2032:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
2033:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlaldx %0, %1, %2, %3" : "=r" (llr.w32[1]), "=r" (llr.w32[0]): "r" (op1), "r" (
2034:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
2035:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2036:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(llr.w64);
2037:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2038:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2039:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUSD  (uint32_t op1, uint32_t op2)
2040:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2041:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
2042:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2043:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smusd %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
2044:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
2045:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2046:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2047:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUSDX (uint32_t op1, uint32_t op2)
 225              		.loc 2 2047 31 view .LVU75
 226              	.LBB63:
2048:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2049:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 227              		.loc 2 2049 3 view .LVU76
2050:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2051:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smusdx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 228              		.loc 2 2051 3 view .LVU77
 229              		.syntax unified
 230              	@ 2051 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 231 0046 43FB1AF3 		smusdx r3, r3, r10
 232              	@ 0 "" 2
 233              	.LVL14:
2052:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 234              		.loc 2 2052 3 view .LVU78
 235              		.loc 2 2052 3 is_stmt 0 view .LVU79
 236              		.thumb
 237              		.syntax unified
 238              	.LBE63:
 239              	.LBE62:
 240              		.loc 1 182 7 is_stmt 1 view .LVU80
 241              	.LBB64:
 242              	.LBI64:
 502:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15,
 243              		.loc 3 502 27 view .LVU81
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 54


 244              	.LBB65:
 506:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 245              		.loc 3 506 3 view .LVU82
 508:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 246              		.loc 3 508 3 view .LVU83
 247              	.LBE65:
 248              	.LBE64:
 249              		.loc 1 182 29 is_stmt 0 view .LVU84
 250 004a 03EA0803 		and	r3, r3, r8
 251              	.LVL15:
 160:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 252              		.loc 1 160 3 view .LVU85
 253 004e 013A     		subs	r2, r2, #1
 254              	.LVL16:
 255              		.loc 1 182 7 view .LVU86
 256 0050 43EA1943 		orr	r3, r3, r9, lsr #16
 257              	.LBB67:
 258              	.LBB66:
 508:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 259              		.loc 3 508 3 view .LVU87
 260 0054 40F8043B 		str	r3, [r0], #4	@ unaligned
 261              	.LVL17:
 262              		.loc 3 509 3 is_stmt 1 view .LVU88
 263              		.loc 3 509 3 is_stmt 0 view .LVU89
 264              	.LBE66:
 265              	.LBE67:
 160:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 266              		.loc 1 160 23 is_stmt 1 view .LVU90
 160:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 267              		.loc 1 160 16 view .LVU91
 160:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 268              		.loc 1 160 3 is_stmt 0 view .LVU92
 269 0058 E3D1     		bne	.L3
 183:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   }
 184:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 185:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #else /* #if defined (ARM_MATH_DSP) */
 186:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 187:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   for (i = 0; i < n2; i++)
 188:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 189:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      cosVal = pCoef[2 * i];
 190:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      sinVal = pCoef[2 * i + 1];
 191:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 192:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      l = i + n2;
 193:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 194:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      xt =           (pSrc[2 * i] >> 1U) - (pSrc[2 * l] >> 1U);
 195:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      pSrc[2 * i] = ((pSrc[2 * i] >> 1U) + (pSrc[2 * l] >> 1U)) >> 1U;
 196:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 197:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      yt =               (pSrc[2 * i + 1] >> 1U) - (pSrc[2 * l + 1] >> 1U);
 198:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      pSrc[2 * i + 1] = ((pSrc[2 * l + 1] >> 1U) + (pSrc[2 * i + 1] >> 1U)) >> 1U;
 199:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 200:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      pSrc[2 * l]     = (((int16_t) (((q31_t) xt * cosVal) >> 16U)) +
 201:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****                         ((int16_t) (((q31_t) yt * sinVal) >> 16U))  );
 202:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 203:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      pSrc[2 * l + 1] = (((int16_t) (((q31_t) yt * cosVal) >> 16U)) -
 204:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****                         ((int16_t) (((q31_t) xt * sinVal) >> 16U))   );
 205:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   }
 206:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 55


 207:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #endif /* #if defined (ARM_MATH_DSP) */
 208:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 209:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   /* first col */
 210:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   arm_radix4_butterfly_q15( pSrc,          n2, (q15_t*)pCoef, 2U);
 270              		.loc 1 210 3 is_stmt 1 view .LVU93
 271 005a 2946     		mov	r1, r5
 272              	.LVL18:
 273              		.loc 1 210 3 is_stmt 0 view .LVU94
 274 005c 0223     		movs	r3, #2
 275 005e 3246     		mov	r2, r6
 276 0060 2046     		mov	r0, r4
 277              	.LVL19:
 278              		.loc 1 210 3 view .LVU95
 279 0062 FFF7FEFF 		bl	arm_radix4_butterfly_q15
 280              	.LVL20:
 211:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 212:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   /* second col */
 213:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   arm_radix4_butterfly_q15( pSrc + fftLen, n2, (q15_t*)pCoef, 2U);
 281              		.loc 1 213 3 is_stmt 1 view .LVU96
 282 0066 3846     		mov	r0, r7
 283 0068 2946     		mov	r1, r5
 284 006a 3246     		mov	r2, r6
 285 006c 0223     		movs	r3, #2
 286 006e 04EBC505 		add	r5, r4, r5, lsl #3
 287              	.LVL21:
 288              		.loc 1 213 3 is_stmt 0 view .LVU97
 289 0072 FFF7FEFF 		bl	arm_radix4_butterfly_q15
 290              	.LVL22:
 214:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 215:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   n2 = fftLen >> 1U;
 291              		.loc 1 215 3 is_stmt 1 view .LVU98
 216:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   for (i = 0; i < n2; i++)
 292              		.loc 1 216 3 view .LVU99
 293              		.loc 1 216 15 view .LVU100
 294 0076 2046     		mov	r0, r4
 295              	.LVL23:
 296              	.L5:
 217:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 218:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p0 = pSrc[4 * i + 0];
 297              		.loc 1 218 6 discriminator 3 view .LVU101
 219:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p1 = pSrc[4 * i + 1];
 298              		.loc 1 219 6 discriminator 3 view .LVU102
 220:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p2 = pSrc[4 * i + 2];
 299              		.loc 1 220 6 discriminator 3 view .LVU103
 221:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p3 = pSrc[4 * i + 3];
 300              		.loc 1 221 6 discriminator 3 view .LVU104
 222:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 223:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p0 <<= 1U;
 301              		.loc 1 223 6 discriminator 3 view .LVU105
 302              		.loc 1 223 9 is_stmt 0 discriminator 3 view .LVU106
 303 0078 B0F90060 		ldrsh	r6, [r0]
 304 007c 0830     		adds	r0, r0, #8
 305              	.LVL24:
 224:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p1 <<= 1U;
 306              		.loc 1 224 9 discriminator 3 view .LVU107
 307 007e 30F9064C 		ldrsh	r4, [r0, #-6]
 225:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p2 <<= 1U;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 56


 308              		.loc 1 225 9 discriminator 3 view .LVU108
 309 0082 30F9042C 		ldrsh	r2, [r0, #-4]
 223:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p1 <<= 1U;
 310              		.loc 1 223 9 discriminator 3 view .LVU109
 311 0086 7600     		lsls	r6, r6, #1
 312              	.LVL25:
 224:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p1 <<= 1U;
 313              		.loc 1 224 6 is_stmt 1 discriminator 3 view .LVU110
 226:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p3 <<= 1U;
 314              		.loc 1 226 9 is_stmt 0 discriminator 3 view .LVU111
 315 0088 30F9023C 		ldrsh	r3, [r0, #-2]
 224:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p2 <<= 1U;
 316              		.loc 1 224 9 discriminator 3 view .LVU112
 317 008c 6400     		lsls	r4, r4, #1
 318              	.LVL26:
 225:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p3 <<= 1U;
 319              		.loc 1 225 6 is_stmt 1 discriminator 3 view .LVU113
 225:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p3 <<= 1U;
 320              		.loc 1 225 9 is_stmt 0 discriminator 3 view .LVU114
 321 008e 5200     		lsls	r2, r2, #1
 322              	.LVL27:
 323              		.loc 1 226 6 is_stmt 1 discriminator 3 view .LVU115
 223:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p1 <<= 1U;
 324              		.loc 1 223 9 is_stmt 0 discriminator 3 view .LVU116
 325 0090 20F8086C 		strh	r6, [r0, #-8]	@ movhi
 326              		.loc 1 226 9 discriminator 3 view .LVU117
 327 0094 5B00     		lsls	r3, r3, #1
 328              	.LVL28:
 227:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 228:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      pSrc[4 * i + 0] = p0;
 329              		.loc 1 228 6 is_stmt 1 discriminator 3 view .LVU118
 229:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      pSrc[4 * i + 1] = p1;
 330              		.loc 1 229 6 discriminator 3 view .LVU119
 224:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p2 <<= 1U;
 331              		.loc 1 224 9 is_stmt 0 discriminator 3 view .LVU120
 332 0096 20F8064C 		strh	r4, [r0, #-6]	@ movhi
 230:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      pSrc[4 * i + 2] = p2;
 333              		.loc 1 230 6 is_stmt 1 discriminator 3 view .LVU121
 225:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p3 <<= 1U;
 334              		.loc 1 225 9 is_stmt 0 discriminator 3 view .LVU122
 335 009a 20F8042C 		strh	r2, [r0, #-4]	@ movhi
 231:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      pSrc[4 * i + 3] = p3;
 336              		.loc 1 231 6 is_stmt 1 discriminator 3 view .LVU123
 226:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 337              		.loc 1 226 9 is_stmt 0 discriminator 3 view .LVU124
 338 009e 20F8023C 		strh	r3, [r0, #-2]	@ movhi
 216:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 339              		.loc 1 216 23 is_stmt 1 discriminator 3 view .LVU125
 216:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 340              		.loc 1 216 15 discriminator 3 view .LVU126
 216:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 341              		.loc 1 216 3 is_stmt 0 discriminator 3 view .LVU127
 342 00a2 8542     		cmp	r5, r0
 343 00a4 E8D1     		bne	.L5
 232:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   }
 233:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 234:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** }
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 57


 344              		.loc 1 234 1 view .LVU128
 345 00a6 01B0     		add	sp, sp, #4
 346              	.LCFI2:
 347              		.cfi_remember_state
 348              		.cfi_def_cfa_offset 36
 349              		@ sp needed
 350 00a8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 351              	.LVL29:
 352              	.L2:
 353              	.LCFI3:
 354              		.cfi_restore_state
 210:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 355              		.loc 1 210 3 is_stmt 1 view .LVU129
 356 00ac 2946     		mov	r1, r5
 357              	.LVL30:
 210:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 358              		.loc 1 210 3 is_stmt 0 view .LVU130
 359 00ae 0223     		movs	r3, #2
 360 00b0 FFF7FEFF 		bl	arm_radix4_butterfly_q15
 361              	.LVL31:
 213:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 362              		.loc 1 213 3 is_stmt 1 view .LVU131
 363 00b4 3246     		mov	r2, r6
 364 00b6 2946     		mov	r1, r5
 365 00b8 3846     		mov	r0, r7
 366 00ba 0223     		movs	r3, #2
 367              		.loc 1 234 1 is_stmt 0 view .LVU132
 368 00bc 01B0     		add	sp, sp, #4
 369              	.LCFI4:
 370              		.cfi_def_cfa_offset 36
 371              		@ sp needed
 372 00be BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 373              	.LCFI5:
 374              		.cfi_restore 14
 375              		.cfi_restore 11
 376              		.cfi_restore 10
 377              		.cfi_restore 9
 378              		.cfi_restore 8
 379              		.cfi_restore 7
 380              		.cfi_restore 6
 381              		.cfi_restore 5
 382              		.cfi_restore 4
 383              		.cfi_def_cfa_offset 0
 384              	.LVL32:
 213:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 385              		.loc 1 213 3 view .LVU133
 386 00c2 FFF7FEBF 		b	arm_radix4_butterfly_q15
 387              	.LVL33:
 388              	.L13:
 213:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 389              		.loc 1 213 3 view .LVU134
 390 00c6 00BF     		.align	2
 391              	.L12:
 392 00c8 0000FFFF 		.word	-65536
 393              		.cfi_endproc
 394              	.LFE146:
 396              		.section	.text.arm_cfft_radix4by2_inverse_q15,"ax",%progbits
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 58


 397              		.align	1
 398              		.p2align 2,,3
 399              		.global	arm_cfft_radix4by2_inverse_q15
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv5-d16
 405              	arm_cfft_radix4by2_inverse_q15:
 406              	.LVL34:
 407              	.LFB147:
 235:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 236:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** void arm_cfft_radix4by2_inverse_q15(
 237:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t * pSrc,
 238:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t fftLen,
 239:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   const q15_t * pCoef)
 240:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** {
 408              		.loc 1 240 1 is_stmt 1 view -0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 241:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t i;
 412              		.loc 1 241 9 view .LVU136
 242:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t n2;
 413              		.loc 1 242 9 view .LVU137
 243:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t p0, p1, p2, p3;
 414              		.loc 1 243 9 view .LVU138
 244:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #if defined (ARM_MATH_DSP)
 245:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q31_t T, S, R;
 415              		.loc 1 245 9 view .LVU139
 246:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q31_t coeff, out1, out2;
 416              		.loc 1 246 9 view .LVU140
 247:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   const q15_t *pC = pCoef;
 417              		.loc 1 247 3 view .LVU141
 240:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t i;
 418              		.loc 1 240 1 is_stmt 0 view .LVU142
 419 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 420              	.LCFI6:
 421              		.cfi_def_cfa_offset 36
 422              		.cfi_offset 4, -36
 423              		.cfi_offset 5, -32
 424              		.cfi_offset 6, -28
 425              		.cfi_offset 7, -24
 426              		.cfi_offset 8, -20
 427              		.cfi_offset 9, -16
 428              		.cfi_offset 10, -12
 429              		.cfi_offset 11, -8
 430              		.cfi_offset 14, -4
 248:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t *pSi = pSrc;
 249:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t *pSl = pSrc + fftLen;
 250:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #else
 251:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t l;
 252:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t xt, yt, cosVal, sinVal;
 253:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #endif
 254:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 255:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   n2 = fftLen >> 1U;
 256:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 257:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #if defined (ARM_MATH_DSP)
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 59


 258:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 259:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   for (i = n2; i > 0; i--)
 431              		.loc 1 259 3 view .LVU143
 432 0004 4D08     		lsrs	r5, r1, #1
 240:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t i;
 433              		.loc 1 240 1 view .LVU144
 434 0006 81B0     		sub	sp, sp, #4
 435              	.LCFI7:
 436              		.cfi_def_cfa_offset 40
 240:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         uint32_t i;
 437              		.loc 1 240 1 view .LVU145
 438 0008 1646     		mov	r6, r2
 439              	.LVL35:
 248:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t *pSi = pSrc;
 440              		.loc 1 248 9 is_stmt 1 view .LVU146
 249:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #else
 441              		.loc 1 249 9 view .LVU147
 249:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #else
 442              		.loc 1 249 27 is_stmt 0 view .LVU148
 443 000a 00EB4107 		add	r7, r0, r1, lsl #1
 444              	.LVL36:
 255:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 445              		.loc 1 255 3 is_stmt 1 view .LVU149
 446              		.loc 1 259 3 view .LVU150
 447              		.loc 1 259 16 view .LVU151
 448              		.loc 1 259 3 is_stmt 0 view .LVU152
 449 000e 4DD0     		beq	.L15
 450 0010 0446     		mov	r4, r0
 247:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t *pSi = pSrc;
 451              		.loc 1 247 16 view .LVU153
 452 0012 9646     		mov	lr, r2
 249:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #else
 453              		.loc 1 249 16 view .LVU154
 454 0014 3846     		mov	r0, r7
 455              	.LVL37:
 456              		.loc 1 259 3 view .LVU155
 457 0016 2A46     		mov	r2, r5
 458              	.LVL38:
 248:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****         q15_t *pSl = pSrc + fftLen;
 459              		.loc 1 248 16 view .LVU156
 460 0018 2146     		mov	r1, r4
 461              	.LVL39:
 462              	.LBB68:
 463              	.LBB69:
1739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 464              		.loc 2 1739 3 view .LVU157
 465 001a 4FF0000C 		mov	ip, #0
 466              	.LBE69:
 467              	.LBE68:
 260:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 261:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      coeff = read_q15x2_ia ((q15_t **) &pC);
 262:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 263:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      T = read_q15x2 (pSi);
 264:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      T = __SHADD16(T, 0); /* this is just a SIMD arithmetic shift right by 1 */
 265:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 266:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      S = read_q15x2 (pSl);
 267:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      S = __SHADD16(S, 0); /* this is just a SIMD arithmetic shift right by 1 */
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 60


 268:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 269:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      R = __QSUB16(T, S);
 270:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 271:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      write_q15x2_ia (&pSi, __SHADD16(T, S));
 272:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 273:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 274:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      out1 = __SMUSD(coeff, R) >> 16U;
 275:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      out2 = __SMUADX(coeff, R);
 276:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #else
 277:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      out1 = __SMUADX(R, coeff) >> 16U;
 278:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      out2 = __SMUSD(__QSUB(0, coeff), R);
 279:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #endif /* #ifndef ARM_MATH_BIG_ENDIAN */
 280:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 281:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      write_q15x2_ia (&pSl, (q31_t) ((out2) & 0xFFFF0000) | (out1 & 0x0000FFFF));
 468              		.loc 1 281 28 view .LVU158
 469 001e DFF8A880 		ldr	r8, .L24
 470              	.LVL40:
 471              	.L16:
 261:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 472              		.loc 1 261 6 is_stmt 1 view .LVU159
 473              	.LBB71:
 474              	.LBI71:
 469:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 475              		.loc 3 469 28 view .LVU160
 476              	.LBB72:
 472:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 477              		.loc 3 472 3 view .LVU161
 474:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 478              		.loc 3 474 3 view .LVU162
 479 0022 5EF8043B 		ldr	r3, [lr], #4	@ unaligned
 480              	.LVL41:
 475:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 481              		.loc 3 475 3 view .LVU163
 477:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 482              		.loc 3 477 3 view .LVU164
 477:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 483              		.loc 3 477 3 is_stmt 0 view .LVU165
 484              	.LBE72:
 485              	.LBE71:
 263:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      T = __SHADD16(T, 0); /* this is just a SIMD arithmetic shift right by 1 */
 486              		.loc 1 263 6 is_stmt 1 view .LVU166
 457:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 487              		.loc 3 457 3 view .LVU167
 459:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 488              		.loc 3 459 3 view .LVU168
 461:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 489              		.loc 3 461 3 view .LVU169
 264:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 490              		.loc 1 264 6 view .LVU170
 491              	.LBB73:
 492              	.LBI68:
1735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493              		.loc 2 1735 31 view .LVU171
 494              	.LBB70:
1737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 495              		.loc 2 1737 3 view .LVU172
1739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 61


 496              		.loc 2 1739 3 view .LVU173
 497 0026 D1F80090 		ldr	r9, [r1]	@ unaligned
 498              		.syntax unified
 499              	@ 1739 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 500 002a 99FA2CF9 		shadd16 r9, r9, ip
 501              	@ 0 "" 2
 502              	.LVL42:
1740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 503              		.loc 2 1740 3 view .LVU174
1740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 504              		.loc 2 1740 3 is_stmt 0 view .LVU175
 505              		.thumb
 506              		.syntax unified
 507              	.LBE70:
 508              	.LBE73:
 266:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      S = __SHADD16(S, 0); /* this is just a SIMD arithmetic shift right by 1 */
 509              		.loc 1 266 6 is_stmt 1 view .LVU176
 457:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 510              		.loc 3 457 3 view .LVU177
 459:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 511              		.loc 3 459 3 view .LVU178
 461:.//Libraries/CMSIS/DSP/Include/arm_math.h **** }
 512              		.loc 3 461 3 view .LVU179
 267:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 513              		.loc 1 267 6 view .LVU180
 514              	.LBB74:
 515              	.LBI74:
1735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 516              		.loc 2 1735 31 view .LVU181
 517              	.LBB75:
1737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 518              		.loc 2 1737 3 view .LVU182
1739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 519              		.loc 2 1739 3 view .LVU183
 520 002e D0F800B0 		ldr	fp, [r0]	@ unaligned
 521              		.syntax unified
 522              	@ 1739 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 523 0032 9BFA2CFB 		shadd16 fp, fp, ip
 524              	@ 0 "" 2
 525              	.LVL43:
1740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 526              		.loc 2 1740 3 view .LVU184
1740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 527              		.loc 2 1740 3 is_stmt 0 view .LVU185
 528              		.thumb
 529              		.syntax unified
 530              	.LBE75:
 531              	.LBE74:
 269:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 532              		.loc 1 269 6 is_stmt 1 view .LVU186
 533              	.LBB76:
 534              	.LBI76:
1775:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 535              		.loc 2 1775 31 view .LVU187
 536              	.LBB77:
1777:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537              		.loc 2 1777 3 view .LVU188
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 62


1779:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 538              		.loc 2 1779 3 view .LVU189
 539              		.syntax unified
 540              	@ 1779 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 541 0036 D9FA1BFA 		qsub16 r10, r9, fp
 542              	@ 0 "" 2
 543              	.LVL44:
1780:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 544              		.loc 2 1780 3 view .LVU190
1780:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 545              		.loc 2 1780 3 is_stmt 0 view .LVU191
 546              		.thumb
 547              		.syntax unified
 548              	.LBE77:
 549              	.LBE76:
 271:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 550              		.loc 1 271 6 is_stmt 1 view .LVU192
 551              	.LBB78:
 552              	.LBI78:
1735:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 553              		.loc 2 1735 31 view .LVU193
 554              	.LBB79:
1737:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 555              		.loc 2 1737 3 view .LVU194
1739:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 556              		.loc 2 1739 3 view .LVU195
 557              		.syntax unified
 558              	@ 1739 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 559 003a 99FA2BF9 		shadd16 r9, r9, fp
 560              	@ 0 "" 2
 561              	.LVL45:
1740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562              		.loc 2 1740 3 view .LVU196
1740:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 563              		.loc 2 1740 3 is_stmt 0 view .LVU197
 564              		.thumb
 565              		.syntax unified
 566              	.LBE79:
 567              	.LBE78:
 568              	.LBB80:
 569              	.LBI80:
 502:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15,
 570              		.loc 3 502 27 is_stmt 1 view .LVU198
 571              	.LBB81:
 506:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 572              		.loc 3 506 3 view .LVU199
 508:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 573              		.loc 3 508 3 view .LVU200
 574 003e 41F8049B 		str	r9, [r1], #4	@ unaligned
 575              	.LVL46:
 576              		.loc 3 509 3 view .LVU201
 577              		.loc 3 509 3 is_stmt 0 view .LVU202
 578              	.LBE81:
 579              	.LBE80:
 274:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      out2 = __SMUADX(coeff, R);
 580              		.loc 1 274 6 is_stmt 1 view .LVU203
 581              	.LBB82:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 63


 582              	.LBI82:
2039:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 583              		.loc 2 2039 31 view .LVU204
 584              	.LBB83:
2041:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 585              		.loc 2 2041 3 view .LVU205
2043:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 586              		.loc 2 2043 3 view .LVU206
 587              		.syntax unified
 588              	@ 2043 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 589 0042 43FB0AF9 		smusd r9, r3, r10
 590              	@ 0 "" 2
 591              	.LVL47:
2044:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 592              		.loc 2 2044 3 view .LVU207
2044:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 593              		.loc 2 2044 3 is_stmt 0 view .LVU208
 594              		.thumb
 595              		.syntax unified
 596              	.LBE83:
 597              	.LBE82:
 275:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #else
 598              		.loc 1 275 6 is_stmt 1 view .LVU209
 599              	.LBB84:
 600              	.LBI84:
1981:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 601              		.loc 2 1981 31 view .LVU210
 602              	.LBB85:
1983:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603              		.loc 2 1983 3 view .LVU211
1985:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 604              		.loc 2 1985 3 view .LVU212
 605              		.syntax unified
 606              	@ 1985 ".//Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 607 0046 23FB1AF3 		smuadx r3, r3, r10
 608              	@ 0 "" 2
 609              	.LVL48:
1986:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 610              		.loc 2 1986 3 view .LVU213
1986:.//Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 611              		.loc 2 1986 3 is_stmt 0 view .LVU214
 612              		.thumb
 613              		.syntax unified
 614              	.LBE85:
 615              	.LBE84:
 616              		.loc 1 281 6 is_stmt 1 view .LVU215
 617              	.LBB86:
 618              	.LBI86:
 502:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15,
 619              		.loc 3 502 27 view .LVU216
 620              	.LBB87:
 506:.//Libraries/CMSIS/DSP/Include/arm_math.h **** 
 621              		.loc 3 506 3 view .LVU217
 508:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 622              		.loc 3 508 3 view .LVU218
 623              	.LBE87:
 624              	.LBE86:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 64


 625              		.loc 1 281 28 is_stmt 0 view .LVU219
 626 004a 03EA0803 		and	r3, r3, r8
 627              	.LVL49:
 259:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 628              		.loc 1 259 3 view .LVU220
 629 004e 013A     		subs	r2, r2, #1
 630              	.LVL50:
 631              		.loc 1 281 6 view .LVU221
 632 0050 43EA1943 		orr	r3, r3, r9, lsr #16
 633              	.LBB89:
 634              	.LBB88:
 508:.//Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 635              		.loc 3 508 3 view .LVU222
 636 0054 40F8043B 		str	r3, [r0], #4	@ unaligned
 637              	.LVL51:
 638              		.loc 3 509 3 is_stmt 1 view .LVU223
 639              		.loc 3 509 3 is_stmt 0 view .LVU224
 640              	.LBE88:
 641              	.LBE89:
 259:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 642              		.loc 1 259 23 is_stmt 1 view .LVU225
 259:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 643              		.loc 1 259 16 view .LVU226
 259:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 644              		.loc 1 259 3 is_stmt 0 view .LVU227
 645 0058 E3D1     		bne	.L16
 282:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   }
 283:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 284:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #else /* #if defined (ARM_MATH_DSP) */
 285:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 286:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   for (i = 0; i < n2; i++)
 287:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 288:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      cosVal = pCoef[2 * i];
 289:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      sinVal = pCoef[2 * i + 1];
 290:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 291:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      l = i + n2;
 292:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 293:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      xt =           (pSrc[2 * i] >> 1U) - (pSrc[2 * l] >> 1U);
 294:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      pSrc[2 * i] = ((pSrc[2 * i] >> 1U) + (pSrc[2 * l] >> 1U)) >> 1U;
 295:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 296:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      yt =               (pSrc[2 * i + 1] >> 1U) - (pSrc[2 * l + 1] >> 1U);
 297:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      pSrc[2 * i + 1] = ((pSrc[2 * l + 1] >> 1U) + (pSrc[2 * i + 1] >> 1U)) >> 1U;
 298:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 299:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      pSrc[2 * l]      = (((int16_t) (((q31_t) xt * cosVal) >> 16U)) -
 300:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****                          ((int16_t) (((q31_t) yt * sinVal) >> 16U))  );
 301:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 302:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      pSrc[2 * l + 1] = (((int16_t) (((q31_t) yt * cosVal) >> 16U)) +
 303:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****                         ((int16_t) (((q31_t) xt * sinVal) >> 16U))  );
 304:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   }
 305:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 306:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** #endif /* #if defined (ARM_MATH_DSP) */
 307:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 308:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   /* first col */
 309:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   arm_radix4_butterfly_inverse_q15( pSrc,          n2, (q15_t*)pCoef, 2U);
 646              		.loc 1 309 3 is_stmt 1 view .LVU228
 647 005a 2946     		mov	r1, r5
 648              	.LVL52:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 65


 649              		.loc 1 309 3 is_stmt 0 view .LVU229
 650 005c 0223     		movs	r3, #2
 651 005e 3246     		mov	r2, r6
 652 0060 2046     		mov	r0, r4
 653              	.LVL53:
 654              		.loc 1 309 3 view .LVU230
 655 0062 FFF7FEFF 		bl	arm_radix4_butterfly_inverse_q15
 656              	.LVL54:
 310:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 311:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   /* second col */
 312:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   arm_radix4_butterfly_inverse_q15( pSrc + fftLen, n2, (q15_t*)pCoef, 2U);
 657              		.loc 1 312 3 is_stmt 1 view .LVU231
 658 0066 3846     		mov	r0, r7
 659 0068 2946     		mov	r1, r5
 660 006a 3246     		mov	r2, r6
 661 006c 0223     		movs	r3, #2
 662 006e 04EBC505 		add	r5, r4, r5, lsl #3
 663              	.LVL55:
 664              		.loc 1 312 3 is_stmt 0 view .LVU232
 665 0072 FFF7FEFF 		bl	arm_radix4_butterfly_inverse_q15
 666              	.LVL56:
 313:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 314:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   n2 = fftLen >> 1U;
 667              		.loc 1 314 3 is_stmt 1 view .LVU233
 315:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   for (i = 0; i < n2; i++)
 668              		.loc 1 315 3 view .LVU234
 669              		.loc 1 315 15 view .LVU235
 670 0076 2046     		mov	r0, r4
 671              	.LVL57:
 672              	.L18:
 316:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 317:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p0 = pSrc[4 * i + 0];
 673              		.loc 1 317 6 discriminator 3 view .LVU236
 318:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p1 = pSrc[4 * i + 1];
 674              		.loc 1 318 6 discriminator 3 view .LVU237
 319:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p2 = pSrc[4 * i + 2];
 675              		.loc 1 319 6 discriminator 3 view .LVU238
 320:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p3 = pSrc[4 * i + 3];
 676              		.loc 1 320 6 discriminator 3 view .LVU239
 321:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 322:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p0 <<= 1U;
 677              		.loc 1 322 6 discriminator 3 view .LVU240
 678              		.loc 1 322 9 is_stmt 0 discriminator 3 view .LVU241
 679 0078 B0F90060 		ldrsh	r6, [r0]
 680 007c 0830     		adds	r0, r0, #8
 681              	.LVL58:
 323:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p1 <<= 1U;
 682              		.loc 1 323 9 discriminator 3 view .LVU242
 683 007e 30F9064C 		ldrsh	r4, [r0, #-6]
 324:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p2 <<= 1U;
 684              		.loc 1 324 9 discriminator 3 view .LVU243
 685 0082 30F9042C 		ldrsh	r2, [r0, #-4]
 322:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p1 <<= 1U;
 686              		.loc 1 322 9 discriminator 3 view .LVU244
 687 0086 7600     		lsls	r6, r6, #1
 688              	.LVL59:
 323:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p1 <<= 1U;
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 66


 689              		.loc 1 323 6 is_stmt 1 discriminator 3 view .LVU245
 325:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p3 <<= 1U;
 690              		.loc 1 325 9 is_stmt 0 discriminator 3 view .LVU246
 691 0088 30F9023C 		ldrsh	r3, [r0, #-2]
 323:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p2 <<= 1U;
 692              		.loc 1 323 9 discriminator 3 view .LVU247
 693 008c 6400     		lsls	r4, r4, #1
 694              	.LVL60:
 324:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p3 <<= 1U;
 695              		.loc 1 324 6 is_stmt 1 discriminator 3 view .LVU248
 324:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p3 <<= 1U;
 696              		.loc 1 324 9 is_stmt 0 discriminator 3 view .LVU249
 697 008e 5200     		lsls	r2, r2, #1
 698              	.LVL61:
 699              		.loc 1 325 6 is_stmt 1 discriminator 3 view .LVU250
 322:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p1 <<= 1U;
 700              		.loc 1 322 9 is_stmt 0 discriminator 3 view .LVU251
 701 0090 20F8086C 		strh	r6, [r0, #-8]	@ movhi
 702              		.loc 1 325 9 discriminator 3 view .LVU252
 703 0094 5B00     		lsls	r3, r3, #1
 704              	.LVL62:
 326:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 327:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      pSrc[4 * i + 0] = p0;
 705              		.loc 1 327 6 is_stmt 1 discriminator 3 view .LVU253
 328:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      pSrc[4 * i + 1] = p1;
 706              		.loc 1 328 6 discriminator 3 view .LVU254
 323:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p2 <<= 1U;
 707              		.loc 1 323 9 is_stmt 0 discriminator 3 view .LVU255
 708 0096 20F8064C 		strh	r4, [r0, #-6]	@ movhi
 329:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      pSrc[4 * i + 2] = p2;
 709              		.loc 1 329 6 is_stmt 1 discriminator 3 view .LVU256
 324:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      p3 <<= 1U;
 710              		.loc 1 324 9 is_stmt 0 discriminator 3 view .LVU257
 711 009a 20F8042C 		strh	r2, [r0, #-4]	@ movhi
 330:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      pSrc[4 * i + 3] = p3;
 712              		.loc 1 330 6 is_stmt 1 discriminator 3 view .LVU258
 325:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 713              		.loc 1 325 9 is_stmt 0 discriminator 3 view .LVU259
 714 009e 20F8023C 		strh	r3, [r0, #-2]	@ movhi
 315:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 715              		.loc 1 315 23 is_stmt 1 discriminator 3 view .LVU260
 315:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 716              		.loc 1 315 15 discriminator 3 view .LVU261
 315:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 717              		.loc 1 315 3 is_stmt 0 discriminator 3 view .LVU262
 718 00a2 8542     		cmp	r5, r0
 719 00a4 E8D1     		bne	.L18
 331:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   }
 332:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** }
 720              		.loc 1 332 1 view .LVU263
 721 00a6 01B0     		add	sp, sp, #4
 722              	.LCFI8:
 723              		.cfi_remember_state
 724              		.cfi_def_cfa_offset 36
 725              		@ sp needed
 726 00a8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 727              	.LVL63:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 67


 728              	.L15:
 729              	.LCFI9:
 730              		.cfi_restore_state
 309:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 731              		.loc 1 309 3 is_stmt 1 view .LVU264
 732 00ac 2946     		mov	r1, r5
 733              	.LVL64:
 309:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 734              		.loc 1 309 3 is_stmt 0 view .LVU265
 735 00ae 0223     		movs	r3, #2
 736 00b0 FFF7FEFF 		bl	arm_radix4_butterfly_inverse_q15
 737              	.LVL65:
 312:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 738              		.loc 1 312 3 is_stmt 1 view .LVU266
 739 00b4 3246     		mov	r2, r6
 740 00b6 2946     		mov	r1, r5
 741 00b8 3846     		mov	r0, r7
 742 00ba 0223     		movs	r3, #2
 743              		.loc 1 332 1 is_stmt 0 view .LVU267
 744 00bc 01B0     		add	sp, sp, #4
 745              	.LCFI10:
 746              		.cfi_def_cfa_offset 36
 747              		@ sp needed
 748 00be BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 749              	.LCFI11:
 750              		.cfi_restore 14
 751              		.cfi_restore 11
 752              		.cfi_restore 10
 753              		.cfi_restore 9
 754              		.cfi_restore 8
 755              		.cfi_restore 7
 756              		.cfi_restore 6
 757              		.cfi_restore 5
 758              		.cfi_restore 4
 759              		.cfi_def_cfa_offset 0
 760              	.LVL66:
 312:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 761              		.loc 1 312 3 view .LVU268
 762 00c2 FFF7FEBF 		b	arm_radix4_butterfly_inverse_q15
 763              	.LVL67:
 764              	.L25:
 312:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 765              		.loc 1 312 3 view .LVU269
 766 00c6 00BF     		.align	2
 767              	.L24:
 768 00c8 0000FFFF 		.word	-65536
 769              		.cfi_endproc
 770              	.LFE147:
 772              		.section	.text.arm_cfft_q15,"ax",%progbits
 773              		.align	1
 774              		.p2align 2,,3
 775              		.global	arm_cfft_q15
 776              		.syntax unified
 777              		.thumb
 778              		.thumb_func
 779              		.fpu fpv5-d16
 781              	arm_cfft_q15:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 68


 782              	.LVL68:
 783              	.LFB145:
  85:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   uint32_t L = S->fftLen;
 784              		.loc 1 85 1 is_stmt 1 view -0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 0
 787              		@ frame_needed = 0, uses_anonymous_args = 0
  86:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 788              		.loc 1 86 3 view .LVU271
  88:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 789              		.loc 1 88 6 is_stmt 0 view .LVU272
 790 0000 012A     		cmp	r2, #1
  85:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   uint32_t L = S->fftLen;
 791              		.loc 1 85 1 view .LVU273
 792 0002 E0B5     		push	{r5, r6, r7, lr}
 793              	.LCFI12:
 794              		.cfi_def_cfa_offset 16
 795              		.cfi_offset 5, -16
 796              		.cfi_offset 6, -12
 797              		.cfi_offset 7, -8
 798              		.cfi_offset 14, -4
  85:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   uint32_t L = S->fftLen;
 799              		.loc 1 85 1 view .LVU274
 800 0004 0F46     		mov	r7, r1
 801 0006 0546     		mov	r5, r0
 802 0008 1E46     		mov	r6, r3
  86:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 803              		.loc 1 86 17 view .LVU275
 804 000a 0188     		ldrh	r1, [r0]
 805              	.LVL69:
  88:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 806              		.loc 1 88 3 is_stmt 1 view .LVU276
  88:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****   {
 807              		.loc 1 88 6 is_stmt 0 view .LVU277
 808 000c 2FD0     		beq	.L89
 110:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      {
 809              		.loc 1 110 6 is_stmt 1 view .LVU278
 810 000e B1F5807F 		cmp	r1, #256
 811 0012 26D0     		beq	.L34
 812 0014 08D9     		bls	.L90
 813 0016 B1F5006F 		cmp	r1, #2048
 814 001a 17D0     		beq	.L37
 815 001c 1BD9     		bls	.L91
 816 001e B1F5805F 		cmp	r1, #4096
 817 0022 1ED0     		beq	.L34
 818              	.LVL70:
 819              	.L32:
 129:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****     arm_bitreversal_16 ((uint16_t*) p1, S->bitRevLength, S->pBitRevTable);
 820              		.loc 1 129 3 view .LVU279
 129:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****     arm_bitreversal_16 ((uint16_t*) p1, S->bitRevLength, S->pBitRevTable);
 821              		.loc 1 129 6 is_stmt 0 view .LVU280
 822 0024 3EB9     		cbnz	r6, .L92
 823              	.L26:
 131:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 824              		.loc 1 131 1 view .LVU281
 825 0026 E0BD     		pop	{r5, r6, r7, pc}
 826              	.LVL71:
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 69


 827              	.L90:
 110:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      {
 828              		.loc 1 110 6 view .LVU282
 829 0028 4029     		cmp	r1, #64
 830 002a 1AD0     		beq	.L34
 831 002c 0AD9     		bls	.L93
 832 002e 8029     		cmp	r1, #128
 833 0030 0CD0     		beq	.L37
 129:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****     arm_bitreversal_16 ((uint16_t*) p1, S->bitRevLength, S->pBitRevTable);
 834              		.loc 1 129 3 is_stmt 1 view .LVU283
 129:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****     arm_bitreversal_16 ((uint16_t*) p1, S->bitRevLength, S->pBitRevTable);
 835              		.loc 1 129 6 is_stmt 0 view .LVU284
 836 0032 002E     		cmp	r6, #0
 837 0034 F7D0     		beq	.L26
 838              	.LVL72:
 839              	.L92:
 130:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** }
 840              		.loc 1 130 5 is_stmt 1 view .LVU285
 841 0036 3846     		mov	r0, r7
 842 0038 AA68     		ldr	r2, [r5, #8]
 843 003a A989     		ldrh	r1, [r5, #12]
 131:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 844              		.loc 1 131 1 is_stmt 0 view .LVU286
 845 003c BDE8E040 		pop	{r5, r6, r7, lr}
 846              	.LCFI13:
 847              		.cfi_remember_state
 848              		.cfi_restore 14
 849              		.cfi_restore 7
 850              		.cfi_restore 6
 851              		.cfi_restore 5
 852              		.cfi_def_cfa_offset 0
 853              	.LVL73:
 130:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** }
 854              		.loc 1 130 5 view .LVU287
 855 0040 FFF7FEBF 		b	arm_bitreversal_16
 856              	.LVL74:
 857              	.L93:
 858              	.LCFI14:
 859              		.cfi_restore_state
 110:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      {
 860              		.loc 1 110 6 view .LVU288
 861 0044 1029     		cmp	r1, #16
 862 0046 0CD0     		beq	.L34
 863 0048 2029     		cmp	r1, #32
 864 004a EBD1     		bne	.L32
 865              	.L37:
 124:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 866              		.loc 1 124 8 is_stmt 1 view .LVU289
 867 004c 6A68     		ldr	r2, [r5, #4]
 868              	.LVL75:
 124:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 869              		.loc 1 124 8 is_stmt 0 view .LVU290
 870 004e 3846     		mov	r0, r7
 871              	.LVL76:
 124:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 872              		.loc 1 124 8 view .LVU291
 873 0050 FFF7FEFF 		bl	arm_cfft_radix4by2_q15
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 70


 874              	.LVL77:
 125:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      }
 875              		.loc 1 125 8 is_stmt 1 view .LVU292
 876 0054 E6E7     		b	.L32
 877              	.LVL78:
 878              	.L91:
 110:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      {
 879              		.loc 1 110 6 is_stmt 0 view .LVU293
 880 0056 B1F5007F 		cmp	r1, #512
 881 005a F7D0     		beq	.L37
 882 005c B1F5806F 		cmp	r1, #1024
 883 0060 E0D1     		bne	.L32
 884              	.L34:
 117:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 885              		.loc 1 117 8 is_stmt 1 view .LVU294
 886 0062 0123     		movs	r3, #1
 887              	.LVL79:
 117:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 888              		.loc 1 117 8 is_stmt 0 view .LVU295
 889 0064 6A68     		ldr	r2, [r5, #4]
 890              	.LVL80:
 117:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 891              		.loc 1 117 8 view .LVU296
 892 0066 3846     		mov	r0, r7
 893              	.LVL81:
 117:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 894              		.loc 1 117 8 view .LVU297
 895 0068 FFF7FEFF 		bl	arm_radix4_butterfly_q15
 896              	.LVL82:
 118:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 897              		.loc 1 118 8 is_stmt 1 view .LVU298
 898 006c DAE7     		b	.L32
 899              	.LVL83:
 900              	.L89:
  90:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      {
 901              		.loc 1 90 6 view .LVU299
 902 006e B1F5807F 		cmp	r1, #256
 903 0072 1DD0     		beq	.L28
 904 0074 07D9     		bls	.L94
 905 0076 B1F5006F 		cmp	r1, #2048
 906 007a 0ED0     		beq	.L31
 907 007c 12D9     		bls	.L95
 908 007e B1F5805F 		cmp	r1, #4096
 909 0082 CFD1     		bne	.L32
 910 0084 14E0     		b	.L28
 911              	.L94:
 912 0086 4029     		cmp	r1, #64
 913 0088 12D0     		beq	.L28
 914 008a 02D9     		bls	.L96
 915 008c 8029     		cmp	r1, #128
 916 008e 04D0     		beq	.L31
 917 0090 C8E7     		b	.L32
 918              	.L96:
 919 0092 1029     		cmp	r1, #16
 920 0094 0CD0     		beq	.L28
 921 0096 2029     		cmp	r1, #32
 922 0098 C4D1     		bne	.L32
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 71


 923              	.L31:
 104:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 924              		.loc 1 104 8 view .LVU300
 925 009a 6A68     		ldr	r2, [r5, #4]
 926              	.LVL84:
 104:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 927              		.loc 1 104 8 is_stmt 0 view .LVU301
 928 009c 3846     		mov	r0, r7
 929              	.LVL85:
 104:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 930              		.loc 1 104 8 view .LVU302
 931 009e FFF7FEFF 		bl	arm_cfft_radix4by2_inverse_q15
 932              	.LVL86:
 105:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      }
 933              		.loc 1 105 8 is_stmt 1 view .LVU303
 934 00a2 BFE7     		b	.L32
 935              	.LVL87:
 936              	.L95:
  90:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****      {
 937              		.loc 1 90 6 is_stmt 0 view .LVU304
 938 00a4 B1F5007F 		cmp	r1, #512
 939 00a8 F7D0     		beq	.L31
 940 00aa B1F5806F 		cmp	r1, #1024
 941 00ae B9D1     		bne	.L32
 942              	.L28:
  97:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 943              		.loc 1 97 8 is_stmt 1 view .LVU305
 944 00b0 0123     		movs	r3, #1
 945              	.LVL88:
  97:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 946              		.loc 1 97 8 is_stmt 0 view .LVU306
 947 00b2 6A68     		ldr	r2, [r5, #4]
 948              	.LVL89:
  97:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 949              		.loc 1 97 8 view .LVU307
 950 00b4 3846     		mov	r0, r7
 951              	.LVL90:
  97:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c ****        break;
 952              		.loc 1 97 8 view .LVU308
 953 00b6 FFF7FEFF 		bl	arm_radix4_butterfly_inverse_q15
 954              	.LVL91:
  98:.//Libraries/CMSIS/DSP/Source/TransformFunctions/arm_cfft_q15.c **** 
 955              		.loc 1 98 8 is_stmt 1 view .LVU309
 956 00ba B3E7     		b	.L32
 957              		.cfi_endproc
 958              	.LFE145:
 960              		.text
 961              	.Letext0:
 962              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/
 963              		.file 5 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_std
 964              		.file 6 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock
 965              		.file 7 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_typ
 966              		.file 8 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/in
 967              		.file 9 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reen
 968              		.file 10 "/opt/homebrew/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
ARM GAS  /var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s 			page 72


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_cfft_q15.c
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s:17     .text.arm_cfft_radix4by2_q15:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s:26     .text.arm_cfft_radix4by2_q15:0000000000000000 arm_cfft_radix4by2_q15
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s:392    .text.arm_cfft_radix4by2_q15:00000000000000c8 $d
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s:397    .text.arm_cfft_radix4by2_inverse_q15:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s:405    .text.arm_cfft_radix4by2_inverse_q15:0000000000000000 arm_cfft_radix4by2_inverse_q15
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s:768    .text.arm_cfft_radix4by2_inverse_q15:00000000000000c8 $d
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s:773    .text.arm_cfft_q15:0000000000000000 $t
/var/folders/wl/rshn8xbx1dsfj1zgryf4g1240000gn/T//ccrPmmfv.s:781    .text.arm_cfft_q15:0000000000000000 arm_cfft_q15

UNDEFINED SYMBOLS
arm_radix4_butterfly_q15
arm_radix4_butterfly_inverse_q15
arm_bitreversal_16
