ARM GAS  /tmp/ccZZcBjn.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_mat_cmplx_mult_q31.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_mat_cmplx_mult_q31,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	arm_mat_cmplx_mult_q31
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_mat_cmplx_mult_q31:
  27              	.LVL0:
  28              	.LFB145:
  29              		.file 1 "./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c"
   1:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Title:        arm_mat_cmplx_mult_q31.c
   4:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Description:  Floating-point matrix multiplication
   5:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
   6:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
   9:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /*
  12:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
  14:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
  16:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
  20:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
  22:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  */
  28:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  29:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #include "arm_math.h"
ARM GAS  /tmp/ccZZcBjn.s 			page 2


  30:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  31:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /**
  32:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @ingroup groupMatrix
  33:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  */
  34:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  35:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /**
  36:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @addtogroup CmplxMatrixMult
  37:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  */
  39:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  40:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /**
  41:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @brief         Q31 Complex matrix multiplication.
  42:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @param[in]     pSrcA      points to first input complex matrix structure
  43:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @param[in]     pSrcB      points to second input complex matrix structure
  44:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @param[out]    pDst       points to output complex matrix structure
  45:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @return        execution status
  46:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    - \ref ARM_MATH_SUCCESS       : Operation successful
  47:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    - \ref ARM_MATH_SIZE_MISMATCH : Matrix size check failed
  48:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  49:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @par           Scaling and Overflow Behavior
  50:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    The function is implemented using an internal 64-bit accumulator.
  51:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    The accumulator has a 2.62 format and maintains full precision of the intermedia
  52:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    multiplication results but provides only a single guard bit. There is no saturat
  53:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    on intermediate additions. Thus, if the accumulator overflows it wraps around an
  54:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    distorts the result. The input signals should be scaled down to avoid intermedia
  55:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    overflows. The input is thus scaled down by log2(numColsA) bits
  56:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    to avoid overflows, as a total of numColsA additions are performed internally.
  57:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    The 2.62 accumulator is right shifted by 31 bits and saturated to 1.31 format to
  58:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  */
  59:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  60:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** arm_status arm_mat_cmplx_mult_q31(
  61:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   const arm_matrix_instance_q31 * pSrcA,
  62:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   const arm_matrix_instance_q31 * pSrcB,
  63:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         arm_matrix_instance_q31 * pDst)
  64:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** {
  30              		.loc 1 64 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 48
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  65:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pIn1 = pSrcA->pData;                    /* Input data matrix pointer A */
  34              		.loc 1 65 3 view .LVU1
  66:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pIn2 = pSrcB->pData;                    /* Input data matrix pointer B */
  35              		.loc 1 66 3 view .LVU2
  64:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pIn1 = pSrcA->pData;                    /* Input data matrix pointer A */
  36              		.loc 1 64 1 is_stmt 0 view .LVU3
  37 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 36
  40              		.cfi_offset 4, -36
  41              		.cfi_offset 5, -32
  42              		.cfi_offset 6, -28
  43              		.cfi_offset 7, -24
  44              		.cfi_offset 8, -20
  45              		.cfi_offset 9, -16
  46              		.cfi_offset 10, -12
  47              		.cfi_offset 11, -8
  48              		.cfi_offset 14, -4
ARM GAS  /tmp/ccZZcBjn.s 			page 3


  49 0004 5368     		ldr	r3, [r2, #4]
  50 0006 8DB0     		sub	sp, sp, #52
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 88
  53              		.loc 1 66 10 view .LVU4
  54 0008 4C68     		ldr	r4, [r1, #4]
  55 000a 0893     		str	r3, [sp, #32]
  67:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pInA = pSrcA->pData;                    /* Input data matrix pointer A */
  68:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pOut = pDst->pData;                     /* Output data matrix pointer */
  69:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *px;                                     /* Temporary output data matrix pointer */
  70:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t numRowsA = pSrcA->numRows;            /* Number of rows of input matrix A */
  71:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t numColsB = pSrcB->numCols;            /* Number of columns of input matrix B */
  72:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t numColsA = pSrcA->numCols;            /* Number of columns of input matrix A */
  73:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q63_t sumReal, sumImag;                        /* Accumulator */
  74:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t a1, b1, c1, d1;
  75:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint32_t col, i = 0U, j, row = numRowsA, colCnt; /* loop counters */
  76:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   arm_status status;                             /* status of matrix multiplication */
  77:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  78:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
  79:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t a0, b0, c0, d0;
  80:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #endif
  81:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  82:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #ifdef ARM_MATH_MATRIX_CHECK
  83:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  84:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   /* Check for matrix mismatch condition */
  85:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   if ((pSrcA->numCols != pSrcB->numRows) ||
  86:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       (pSrcA->numRows != pDst->numRows)  ||
  87:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       (pSrcB->numCols != pDst->numCols)    )
  88:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   {
  89:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
  90:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     status = ARM_MATH_SIZE_MISMATCH;
  91:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   }
  92:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   else
  93:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  94:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #endif /* #ifdef ARM_MATH_MATRIX_CHECK */
  95:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  96:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   {
  97:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     /* The following loop performs the dot-product of each row in pSrcA with each column in pSrcB *
  98:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     /* row loop */
  99:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     do
 100:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     {
 101:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* Output pointer is set to starting address of the row being processed */
 102:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       px = pOut + 2 * i;
 103:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 104:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* For every row wise process, the column loop counter is to be initiated */
 105:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       col = numColsB;
  56              		.loc 1 105 11 view .LVU5
  57 000c 4B88     		ldrh	r3, [r1, #2]
 106:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 107:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* For every row wise process, the pIn2 pointer is set
 108:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****        ** to the starting address of the pSrcB data */
 109:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       pIn2 = pSrcB->pData;
 110:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 111:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       j = 0U;
 112:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 113:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* column loop */
 114:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       do
ARM GAS  /tmp/ccZZcBjn.s 			page 4


 115:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       {
 116:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Set the variable sum, that acts as accumulator, to zero */
 117:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         sumReal = 0.0;
 118:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         sumImag = 0.0;
 119:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 120:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Initiate pointer pIn1 to point to starting address of column being processed */
 121:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         pIn1 = pInA;
 122:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 123:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 124:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 125:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
 126:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         colCnt = numColsA >> 2U;
 127:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 128:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* matrix multiplication */
 129:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         while (colCnt > 0U)
 130:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 131:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 132:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Reading real part of complex matrix A */
 133:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a0 = *pIn1;
 134:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 135:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Reading real part of complex matrix B */
 136:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c0 = *pIn2;
 137:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 138:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Reading imaginary part of complex matrix A */
 139:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b0 = *(pIn1 + 1U);
 140:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 141:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Reading imaginary part of complex matrix B */
 142:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d0 = *(pIn2 + 1U);
 143:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 144:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 145:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal += (q63_t) a0 * c0;
 146:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) b0 * c0;
 147:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 148:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 149:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2U;
 150:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 151:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 152:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 153:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal -= (q63_t) b0 * d0;
 154:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) a0 * d0;
 155:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 156:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* c(m,n) = a(1,1) * b(1,1) + a(1,2) * b(2,1) + .... + a(m,p) * b(p,n) */
 157:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 158:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* read real and imag values from pSrcA and pSrcB buffer */
 159:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a1 = *(pIn1     );
 160:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c1 = *(pIn2     );
 161:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b1 = *(pIn1 + 1U);
 162:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d1 = *(pIn2 + 1U);
 163:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 164:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 165:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal += (q63_t) a1 * c1;
 166:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) b1 * c1;
 167:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 168:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 169:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2U;
 170:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 171:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
ARM GAS  /tmp/ccZZcBjn.s 			page 5


 172:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 173:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal -= (q63_t) b1 * d1;
 174:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) a1 * d1;
 175:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 176:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a0 = *(pIn1     );
 177:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c0 = *(pIn2     );
 178:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b0 = *(pIn1 + 1U);
 179:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d0 = *(pIn2 + 1U);
 180:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 181:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 182:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal += (q63_t) a0 * c0;
 183:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) b0 * c0;
 184:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 185:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 186:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2U;
 187:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 188:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 189:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 190:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal -= (q63_t) b0 * d0;
 191:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) a0 * d0;
 192:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 193:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* c(m,n) = a(1,1) * b(1,1) + a(1,2) * b(2,1) + .... + a(m,p) * b(p,n) */
 194:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 195:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a1 = *(pIn1     );
 196:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c1 = *(pIn2     );
 197:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b1 = *(pIn1 + 1U);
 198:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d1 = *(pIn2 + 1U);
 199:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 200:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 201:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal += (q63_t) a1 * c1;
 202:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) b1 * c1;
 203:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 204:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 205:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2U;
 206:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 207:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 208:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 209:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal -= (q63_t) b1 * d1;
 210:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) a1 * d1;
 211:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 212:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Decrement loop count */
 213:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           colCnt--;
 214:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         }
 215:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 216:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* If the columns of pSrcA is not a multiple of 4, compute any remaining MACs here.
 217:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****          ** No loop unrolling is used. */
 218:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         colCnt = numColsA % 0x4U;
 219:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 220:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #else
 221:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 222:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Initialize blkCnt with number of samples */
 223:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         colCnt = numColsA;
  58              		.loc 1 223 16 view .LVU6
  59 000e 4188     		ldrh	r1, [r0, #2]
  60              	.LVL1:
 224:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 225:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
ARM GAS  /tmp/ccZZcBjn.s 			page 6


 226:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 227:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         while (colCnt > 0U)
 228:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 229:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* c(m,n) = a(1,1) * b(1,1) + a(1,2) * b(2,1) + .... + a(m,p) * b(p,n) */
 230:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a1 = *(pIn1     );
 231:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c1 = *(pIn2     );
 232:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b1 = *(pIn1 + 1U);
 233:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d1 = *(pIn2 + 1U);
 234:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 235:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 236:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal += (q63_t) a1 * c1;
 237:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) b1 * c1;
 238:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 239:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 240:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2U;
 241:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
  61              		.loc 1 241 16 view .LVU7
  62 0010 4FEAC30B 		lsl	fp, r3, #3
  63 0014 4268     		ldr	r2, [r0, #4]
  64              	.LVL2:
  65              		.loc 1 241 16 view .LVU8
  66 0016 04EBC303 		add	r3, r4, r3, lsl #3
  66:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pInA = pSrcA->pData;                    /* Input data matrix pointer A */
  67              		.loc 1 66 10 view .LVU9
  68 001a 0B94     		str	r4, [sp, #44]
  69              	.LVL3:
  67:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pOut = pDst->pData;                     /* Output data matrix pointer */
  70              		.loc 1 67 3 is_stmt 1 view .LVU10
  68:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *px;                                     /* Temporary output data matrix pointer */
  71              		.loc 1 68 3 view .LVU11
  69:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t numRowsA = pSrcA->numRows;            /* Number of rows of input matrix A */
  72              		.loc 1 69 3 view .LVU12
  70:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t numColsB = pSrcB->numCols;            /* Number of columns of input matrix B */
  73              		.loc 1 70 3 view .LVU13
  71:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t numColsA = pSrcA->numCols;            /* Number of columns of input matrix A */
  74              		.loc 1 71 3 view .LVU14
  72:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q63_t sumReal, sumImag;                        /* Accumulator */
  75              		.loc 1 72 3 view .LVU15
  73:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t a1, b1, c1, d1;
  76              		.loc 1 73 3 view .LVU16
  74:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint32_t col, i = 0U, j, row = numRowsA, colCnt; /* loop counters */
  77              		.loc 1 74 3 view .LVU17
  75:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   arm_status status;                             /* status of matrix multiplication */
  78              		.loc 1 75 3 view .LVU18
 223:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  79              		.loc 1 223 16 is_stmt 0 view .LVU19
  80 001c 0591     		str	r1, [sp, #20]
  81 001e 0793     		str	r3, [sp, #28]
  75:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   arm_status status;                             /* status of matrix multiplication */
  82              		.loc 1 75 28 view .LVU20
  83 0020 0388     		ldrh	r3, [r0]
  84 0022 0993     		str	r3, [sp, #36]
  85              	.LVL4:
 242:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 243:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 244:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal -= (q63_t) b1 * d1;
 245:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) a1 * d1;
ARM GAS  /tmp/ccZZcBjn.s 			page 7


 246:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 247:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Decrement loop counter */
 248:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           colCnt--;
 249:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         }
 250:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 251:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Store result in destination buffer */
 252:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         *px++ = (q31_t) clip_q63_to_q31(sumReal >> 31);
 253:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         *px++ = (q31_t) clip_q63_to_q31(sumImag >> 31);
 254:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 255:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Update pointer pIn2 to point to starting address of next column */
 256:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         j++;
 257:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         pIn2 = pSrcB->pData + 2U * j;
 258:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 259:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Decrement column loop counter */
 260:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         col--;
 261:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 262:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       } while (col > 0U);
 263:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 264:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* Update pointer pInA to point to starting address of next row */
 265:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       i = i + numColsB;
 266:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       pInA = pInA + 2 * numColsA;
  86              		.loc 1 266 19 view .LVU21
  87 0024 CB00     		lsls	r3, r1, #3
  88              	.LVL5:
  89              		.loc 1 266 19 view .LVU22
  90 0026 0A93     		str	r3, [sp, #40]
  91 0028 02F10803 		add	r3, r2, #8
  92 002c 0693     		str	r3, [sp, #24]
  93              	.LVL6:
  94              	.L8:
  76:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  95              		.loc 1 76 3 is_stmt 1 view .LVU23
  99:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     {
  96              		.loc 1 99 5 view .LVU24
 102:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  97              		.loc 1 102 7 view .LVU25
 105:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  98              		.loc 1 105 7 view .LVU26
 109:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  99              		.loc 1 109 7 view .LVU27
 111:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 100              		.loc 1 111 7 view .LVU28
 111:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 101              		.loc 1 111 7 is_stmt 0 view .LVU29
 102 002e 089B     		ldr	r3, [sp, #32]
 103 0030 0833     		adds	r3, r3, #8
 104 0032 0393     		str	r3, [sp, #12]
 109:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 105              		.loc 1 109 12 view .LVU30
 106 0034 0B9B     		ldr	r3, [sp, #44]
 107 0036 0493     		str	r3, [sp, #16]
 108              	.LVL7:
 109              	.L7:
 114:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       {
 110              		.loc 1 114 7 is_stmt 1 view .LVU31
 117:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         sumImag = 0.0;
 111              		.loc 1 117 9 view .LVU32
ARM GAS  /tmp/ccZZcBjn.s 			page 8


 118:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 112              		.loc 1 118 9 view .LVU33
 121:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 113              		.loc 1 121 9 view .LVU34
 223:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 114              		.loc 1 223 9 view .LVU35
 227:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 115              		.loc 1 227 9 view .LVU36
 227:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 116              		.loc 1 227 15 view .LVU37
 117 0038 059B     		ldr	r3, [sp, #20]
 118 003a 002B     		cmp	r3, #0
 119 003c 5CD0     		beq	.L2
 118:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 120              		.loc 1 118 17 is_stmt 0 view .LVU38
 121 003e 4FF00008 		mov	r8, #0
 122 0042 4FF00009 		mov	r9, #0
 227:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 123              		.loc 1 227 15 view .LVU39
 124 0046 9C46     		mov	ip, r3
 125 0048 069A     		ldr	r2, [sp, #24]
 126 004a 049B     		ldr	r3, [sp, #16]
 117:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         sumImag = 0.0;
 127              		.loc 1 117 17 view .LVU40
 128 004c 4646     		mov	r6, r8
 129 004e 4F46     		mov	r7, r9
 130              	.LVL8:
 131              	.L3:
 230:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c1 = *(pIn2     );
 132              		.loc 1 230 11 is_stmt 1 view .LVU41
 232:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d1 = *(pIn2 + 1U);
 133              		.loc 1 232 14 is_stmt 0 view .LVU42
 134 0050 52F8045C 		ldr	r5, [r2, #-4]
 135 0054 0832     		adds	r2, r2, #8
 136              	.LVL9:
 230:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c1 = *(pIn2     );
 137              		.loc 1 230 14 view .LVU43
 138 0056 52F810AC 		ldr	r10, [r2, #-16]
 139              	.LVL10:
 231:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b1 = *(pIn1 + 1U);
 140              		.loc 1 231 11 is_stmt 1 view .LVU44
 231:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b1 = *(pIn1 + 1U);
 141              		.loc 1 231 14 is_stmt 0 view .LVU45
 142 005a D3E9004E 		ldrd	r4, lr, [r3]
 143              	.LVL11:
 232:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d1 = *(pIn2 + 1U);
 144              		.loc 1 232 11 is_stmt 1 view .LVU46
 233:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 145              		.loc 1 233 11 view .LVU47
 236:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) b1 * c1;
 146              		.loc 1 236 11 view .LVU48
 241:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 147              		.loc 1 241 16 is_stmt 0 view .LVU49
 148 005e 5B44     		add	r3, r3, fp
 149              	.LVL12:
 237:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 150              		.loc 1 237 19 view .LVU50
ARM GAS  /tmp/ccZZcBjn.s 			page 9


 151 0060 C5FB0489 		smlal	r8, r9, r5, r4
 152              	.LVL13:
 244:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) a1 * d1;
 153              		.loc 1 244 33 view .LVU51
 154 0064 85FB0E01 		smull	r0, r1, r5, lr
 237:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 155              		.loc 1 237 19 view .LVU52
 156 0068 CDE90089 		strd	r8, [sp]
 236:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) b1 * c1;
 157              		.loc 1 236 19 view .LVU53
 158 006c B046     		mov	r8, r6
 159 006e B946     		mov	r9, r7
 160 0070 C4FB0A89 		smlal	r8, r9, r4, r10
 244:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) a1 * d1;
 161              		.loc 1 244 19 view .LVU54
 162 0074 B8EB0006 		subs	r6, r8, r0
 163              	.LVL14:
 236:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) b1 * c1;
 164              		.loc 1 236 19 view .LVU55
 165 0078 4D46     		mov	r5, r9
 166              	.LVL15:
 237:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 167              		.loc 1 237 11 is_stmt 1 view .LVU56
 240:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 168              		.loc 1 240 11 view .LVU57
 241:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 169              		.loc 1 241 11 view .LVU58
 244:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) a1 * d1;
 170              		.loc 1 244 11 view .LVU59
 245:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 171              		.loc 1 245 19 is_stmt 0 view .LVU60
 172 007a DDE90089 		ldrd	r8, [sp]
 244:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) a1 * d1;
 173              		.loc 1 244 19 view .LVU61
 174 007e 65EB0107 		sbc	r7, r5, r1
 175              	.LVL16:
 245:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 176              		.loc 1 245 11 is_stmt 1 view .LVU62
 227:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 177              		.loc 1 227 15 is_stmt 0 view .LVU63
 178 0082 BCF1010C 		subs	ip, ip, #1
 179              	.LVL17:
 245:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 180              		.loc 1 245 19 view .LVU64
 181 0086 CEFB0A89 		smlal	r8, r9, lr, r10
 182              	.LVL18:
 248:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         }
 183              		.loc 1 248 11 is_stmt 1 view .LVU65
 227:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 184              		.loc 1 227 15 view .LVU66
 185 008a E1D1     		bne	.L3
 252:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         *px++ = (q31_t) clip_q63_to_q31(sumImag >> 31);
 186              		.loc 1 252 9 view .LVU67
 187              	.LVL19:
 188              	.LBB6:
 189              	.LBI6:
 190              		.file 2 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/ccZZcBjn.s 			page 10


   1:./Libraries/CMSIS/DSP/Include/arm_math.h **** /******************************************************************************
   2:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @file     arm_math.h
   3:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief    Public header file for CMSIS DSP Library
   4:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @version  V1.6.0
   5:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @date     18. March 2019
   6:./Libraries/CMSIS/DSP/Include/arm_math.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/DSP/Include/arm_math.h **** /*
   8:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved.
   9:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  10:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  12:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  16:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  18:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * limitations under the License.
  23:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
  24:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
  25:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
  26:./Libraries/CMSIS/DSP/Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  28:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Introduction
  29:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  30:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  31:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  34:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Basic math functions
  36:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Fast math functions
  37:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Complex math functions
  38:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Filters
  39:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Matrix functions
  40:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Transform functions
  41:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Motor control functions
  42:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Statistical functions
  43:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Support functions
  44:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Interpolation functions
  45:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  46:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  49:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Using the Library
  50:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  51:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  52:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
ARM GAS  /tmp/ccZZcBjn.s 			page 11


  58:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  59:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  61:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  64:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  67:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  70:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  73:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  77:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  78:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Examples
  79:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * --------
  80:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  81:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  82:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  83:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Toolchain Support
  84:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  85:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  86:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  87:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  88:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  89:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Building the Library
  90:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  91:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  92:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  93:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
  94:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  95:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  96:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
  97:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  98:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Preprocessor Macros
  99:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 100:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 101:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Each library project have different preprocessor macros.
 102:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 103:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 104:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 105:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 106:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 107:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 108:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 109:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 110:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 111:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 112:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 113:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 114:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
ARM GAS  /tmp/ccZZcBjn.s 			page 12


 115:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_LOOPUNROLL:
 116:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 117:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_LOOPUNROLL to enable manual loop unrolling in DSP functions
 118:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 119:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON:
 120:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 121:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON to enable Neon versions of the DSP functions.
 122:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * It is not enabled by default when Neon is available because performances are 
 123:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * dependent on the compiler and target architecture.
 124:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 125:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON_EXPERIMENTAL:
 126:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 127:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON_EXPERIMENTAL to enable experimental Neon versions of 
 128:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * of some DSP functions. Experimental Neon versions currently do not have better
 129:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * performances than the scalar versions.
 130:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 131:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 132:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 133:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * -----------------------------
 134:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 135:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 136:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |File/Folder                      |Content                                                    
 137:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |---------------------------------|-----------------------------------------------------------
 138:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP     | This documentation                                        
 139:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\DSP_Lib_TestSuite | DSP_Lib test suite                                        
 140:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Examples          | Example projects demonstrating the usage of the library fu
 141:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Include           | DSP_Lib include files                                     
 142:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Lib               | DSP_Lib binaries                                          
 143:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Projects          | Projects to rebuild DSP_Lib binaries                      
 144:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Source            | DSP_Lib source files                                      
 145:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 146:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 147:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Revision History of CMSIS-DSP
 148:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 149:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 150:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 151:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 152:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 153:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 154:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 155:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 156:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 157:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 158:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 159:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 160:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 161:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * operate on individual values and not arrays.
 162:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 163:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 164:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 165:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 166:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 167:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 168:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 169:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 170:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * (real, imag, real, imag, ...).
 171:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
ARM GAS  /tmp/ccZZcBjn.s 			page 13


 172:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 173:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * real values.
 174:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 175:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 176:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 177:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 178:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 179:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 180:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 181:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 182:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 183:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 184:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 185:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * the type
 186:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 187:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * below:
 188:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 189:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     typedef struct
 190:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     {
 191:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 192:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 193:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 194:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 195:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 196:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 197:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 198:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 199:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 200:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 201:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * matrix element (i, j) is stored at:
 202:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 203:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     pData[i*numCols + j]
 204:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 205:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 206:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Init Functions
 207:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 208:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * data structure.
 209:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 210:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Refer to \ref arm_mat_init_f32(), \ref arm_mat_init_q31() and \ref arm_mat_init_q15()
 211:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * for floating-point, Q31 and Q15 types,  respectively.
 212:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 213:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par
 214:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 215:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 216:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * To place the instance structure in a const data
 217:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 218:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 219:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 220:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 221:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 222:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 223:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 224:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 225:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * data array.
 226:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 227:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Size Checking
 228:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
ARM GAS  /tmp/ccZZcBjn.s 			page 14


 229:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 230:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 231:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * columns. If the size check fails the functions return:
 232:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 233:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 234:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 235:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Otherwise the functions return
 236:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 237:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 238:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 239:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 240:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 241:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 242:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 243:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 244:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 245:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 246:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 247:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 248:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 249:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 250:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 251:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 252:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 253:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 254:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 255:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 256:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupController Controller Functions
 257:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 258:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 259:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 260:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 261:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 262:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 263:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 264:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 265:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 266:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 267:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 268:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 269:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 270:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 271:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 272:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 273:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 274:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 275:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupExamples Examples
 276:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 277:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 278:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 279:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef _ARM_MATH_H
 280:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define _ARM_MATH_H
 281:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 282:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Compiler specific diagnostic adjustment */
 283:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 284:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 285:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
ARM GAS  /tmp/ccZZcBjn.s 			page 15


 286:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 287:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 288:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic push
 289:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wsign-conversion"
 290:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wconversion"
 291:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wunused-parameter"
 292:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 293:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 294:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 295:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 296:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 297:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 298:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 299:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 300:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 301:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( _MSC_VER )
 302:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 303:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 304:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 305:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 306:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 307:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 308:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Included for instrinsics definitions */
 309:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if !defined ( _MSC_VER )
 310:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "cmsis_compiler.h"
 311:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 312:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include <stdint.h>
 313:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __STATIC_FORCEINLINE static __forceinline
 314:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __ALIGNED(x) __declspec(align(x))
 315:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_ENTER
 316:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_EXIT
 317:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_ENTER 
 318:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
 319:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 320:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 321:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "string.h"
 322:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "math.h"
 323:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "float.h"
 324:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 325:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* evaluate ARM DSP feature */
 326:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
 327:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define ARM_MATH_DSP                   1
 328:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 329:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 330:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined(__ARM_NEON)
 331:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include <arm_neon.h>
 332:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 333:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 334:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 335:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifdef   __cplusplus
 336:./Libraries/CMSIS/DSP/Include/arm_math.h **** extern "C"
 337:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 338:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 339:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 340:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 341:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 342:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
ARM GAS  /tmp/ccZZcBjn.s 			page 16


 343:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 344:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 345:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q15          0x5
 347:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef PI
 349:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define PI               3.14159265358979f
 350:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 351:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 352:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 353:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 355:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 356:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 363:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 364:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 366:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 370:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 371:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 372:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 373:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 374:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 375:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef enum
 376:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 377:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SUCCESS        =  0,        /**< No error */
 378:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 379:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR   = -2,        /**< Length of data buffer is incorrect */
 380:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH  = -3,        /**< Size of matrices is not compatible with the operation
 381:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_NANINF         = -4,        /**< Not-a-number (NaN) or infinity is generated */
 382:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SINGULAR       = -5,        /**< Input matrix is singular and cannot be inverted */
 383:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_TEST_FAILURE   = -6         /**< Test Failed */
 384:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_status;
 385:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 386:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 387:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 388:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 389:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int8_t q7_t;
 390:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 391:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 392:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 393:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 394:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int16_t q15_t;
 395:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 396:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 397:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 398:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 399:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int32_t q31_t;
ARM GAS  /tmp/ccZZcBjn.s 			page 17


 400:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 401:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 402:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 403:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 404:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int64_t q63_t;
 405:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 406:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 407:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 408:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 409:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef float float32_t;
 410:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 411:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 412:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 413:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 414:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef double float64_t;
 415:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 416:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 417:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 418:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief definition to read/write two 16 bit values.
 419:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @deprecated
 420:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 421:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 422:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 423:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 424:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 425:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 426:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 427:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 428:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 429:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 430:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 431:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 432:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 433:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 434:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
 435:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined(_MSC_VER )
 436:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 437:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 438:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 439:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 440:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 441:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 442:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
 443:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
 444:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
 445:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 446:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* SIMD replacement */
 447:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 448:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 449:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 450:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer.
 451:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 452:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 453:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 454:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
 455:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15)
 456:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
ARM GAS  /tmp/ccZZcBjn.s 			page 18


 457:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 458:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 459:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, pQ15, 4);
 460:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 461:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 462:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 463:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 464:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 465:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and increment pointer afterwards.
 466:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 467:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 468:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 469:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_ia (
 470:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 471:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 472:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 473:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 475:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 476:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 477:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 478:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 479:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 480:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 481:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and decrement pointer afterwards.
 482:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 483:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 484:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 485:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_da (
 486:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 487:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 488:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 489:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 491:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 492:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 493:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 494:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 495:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 496:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 497:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer and increment pointer afterwards.
 498:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 499:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 500:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 501:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 502:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2_ia (
 503:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15,
 504:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t    value)
 505:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 506:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 507:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 508:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ15, &val, 4);
 509:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 510:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 511:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 512:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 513:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer.
ARM GAS  /tmp/ccZZcBjn.s 			page 19


 514:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 515:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 516:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 517:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 518:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2 (
 519:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15,
 520:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t   value)
 521:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 522:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 523:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 524:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (pQ15, &val, 4);
 525:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 526:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 527:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 528:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 529:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and increment pointer afterwards.
 530:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 531:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 532:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 533:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_ia (
 534:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7)
 535:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 536:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 537:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 538:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ7, 4);
 539:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 += 4;
 540:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 541:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 542:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 543:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 544:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 545:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and decrement pointer afterwards.
 546:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 547:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 548:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 549:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_da (
 550:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7)
 551:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 552:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 553:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 554:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ7, 4);
 555:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 -= 4;
 556:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 557:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 558:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 559:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 560:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 561:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 4 Q7 to Q7 pointer and increment pointer afterwards.
 562:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 563:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 564:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 565:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 566:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q7x4_ia (
 567:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7,
 568:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t   value)
 569:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 570:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
ARM GAS  /tmp/ccZZcBjn.s 			page 20


 571:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 572:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ7, &val, 4);
 573:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 += 4;
 574:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 575:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 576:./Libraries/CMSIS/DSP/Include/arm_math.h **** /*
 577:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 578:./Libraries/CMSIS/DSP/Include/arm_math.h **** Normally those kind of definitions are in a compiler file
 579:./Libraries/CMSIS/DSP/Include/arm_math.h **** in Core or Core_A.
 580:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 581:./Libraries/CMSIS/DSP/Include/arm_math.h **** But for MSVC compiler it is a bit special. The goal is very specific
 582:./Libraries/CMSIS/DSP/Include/arm_math.h **** to CMSIS-DSP and only to allow the use of this library from other
 583:./Libraries/CMSIS/DSP/Include/arm_math.h **** systems like Python or Matlab.
 584:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 585:./Libraries/CMSIS/DSP/Include/arm_math.h **** MSVC is not going to be used to cross-compile to ARM. So, having a MSVC
 586:./Libraries/CMSIS/DSP/Include/arm_math.h **** compiler file in Core or Core_A would not make sense.
 587:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 588:./Libraries/CMSIS/DSP/Include/arm_math.h **** */
 589:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined ( _MSC_VER )
 590:./Libraries/CMSIS/DSP/Include/arm_math.h ****     __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t data)
 591:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 592:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (data == 0U) { return 32U; }
 593:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 594:./Libraries/CMSIS/DSP/Include/arm_math.h ****       uint32_t count = 0U;
 595:./Libraries/CMSIS/DSP/Include/arm_math.h ****       uint32_t mask = 0x80000000U;
 596:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 597:./Libraries/CMSIS/DSP/Include/arm_math.h ****       while ((data & mask) == 0U)
 598:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 599:./Libraries/CMSIS/DSP/Include/arm_math.h ****         count += 1U;
 600:./Libraries/CMSIS/DSP/Include/arm_math.h ****         mask = mask >> 1U;
 601:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 602:./Libraries/CMSIS/DSP/Include/arm_math.h ****       return count;
 603:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 604:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 605:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 606:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 607:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if ((sat >= 1U) && (sat <= 32U))
 608:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 609:./Libraries/CMSIS/DSP/Include/arm_math.h ****       const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 610:./Libraries/CMSIS/DSP/Include/arm_math.h ****       const int32_t min = -1 - max ;
 611:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (val > max)
 612:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 613:./Libraries/CMSIS/DSP/Include/arm_math.h ****         return max;
 614:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 615:./Libraries/CMSIS/DSP/Include/arm_math.h ****       else if (val < min)
 616:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 617:./Libraries/CMSIS/DSP/Include/arm_math.h ****         return min;
 618:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 619:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 620:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return val;
 621:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 622:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 623:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 624:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 625:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if (sat <= 31U)
 626:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 627:./Libraries/CMSIS/DSP/Include/arm_math.h ****       const uint32_t max = ((1U << sat) - 1U);
ARM GAS  /tmp/ccZZcBjn.s 			page 21


 628:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (val > (int32_t)max)
 629:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 630:./Libraries/CMSIS/DSP/Include/arm_math.h ****         return max;
 631:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 632:./Libraries/CMSIS/DSP/Include/arm_math.h ****       else if (val < 0)
 633:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 634:./Libraries/CMSIS/DSP/Include/arm_math.h ****         return 0U;
 635:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 636:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 637:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return (uint32_t)val;
 638:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 639:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 640:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 641:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef ARM_MATH_DSP
 642:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 643:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 644:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 645:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 646:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                       (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 647:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 648:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                       (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 649:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 650:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 651:./Libraries/CMSIS/DSP/Include/arm_math.h ****    /**
 652:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 653:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 654:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 655:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 656:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 657:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 658:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 659:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 660:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 661:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 662:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 663:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 664:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 665:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 666:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 667:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 668:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 669:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 670:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q31_t clip_q63_to_q31(
 191              		.loc 2 670 30 view .LVU68
 192              	.LBB7:
 671:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q63_t x)
 672:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 193              		.loc 2 673 5 view .LVU69
 194              	.LBE7:
 195              	.LBE6:
 252:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         *px++ = (q31_t) clip_q63_to_q31(sumImag >> 31);
 196              		.loc 1 252 25 is_stmt 0 view .LVU70
 197 008c F20F     		lsrs	r2, r6, #31
 198              	.LVL20:
 252:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         *px++ = (q31_t) clip_q63_to_q31(sumImag >> 31);
 199              		.loc 1 252 15 view .LVU71
ARM GAS  /tmp/ccZZcBjn.s 			page 22


 200 008e 039C     		ldr	r4, [sp, #12]
 201              	.LVL21:
 202              	.LBB10:
 203              	.LBB8:
 204              		.loc 2 673 24 view .LVU72
 205 0090 F917     		asrs	r1, r7, #31
 206              	.LBE8:
 207              	.LBE10:
 252:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         *px++ = (q31_t) clip_q63_to_q31(sumImag >> 31);
 208              		.loc 1 252 25 view .LVU73
 209 0092 42EA4702 		orr	r2, r2, r7, lsl #1
 210              	.LBB11:
 211              	.LBB9:
 212              		.loc 2 673 45 view .LVU74
 213 0096 D317     		asrs	r3, r2, #31
 214              	.LVL22:
 674:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 215              		.loc 2 674 44 view .LVU75
 216 0098 B3EBE77F 		cmp	r3, r7, asr #31
 217 009c 4FEAD873 		lsr	r3, r8, #31
 218 00a0 18BF     		it	ne
 219 00a2 6FF00042 		mvnne	r2, #-2147483648
 220 00a6 43EA4903 		orr	r3, r3, r9, lsl #1
 221 00aa 18BF     		it	ne
 222 00ac 4A40     		eorne	r2, r1, r2
 223 00ae 4FEAE971 		asr	r1, r9, #31
 224 00b2 D817     		asrs	r0, r3, #31
 225              	.LVL23:
 226              		.loc 2 674 44 view .LVU76
 227              	.LBE9:
 228              	.LBE11:
 252:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         *px++ = (q31_t) clip_q63_to_q31(sumImag >> 31);
 229              		.loc 1 252 15 view .LVU77
 230 00b4 44F8082C 		str	r2, [r4, #-8]
 253:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 231              		.loc 1 253 9 is_stmt 1 view .LVU78
 232              	.LVL24:
 233              	.LBB12:
 234              	.LBI12:
 670:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q63_t x)
 235              		.loc 2 670 30 view .LVU79
 236              	.LBB13:
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 237              		.loc 2 673 5 view .LVU80
 238              		.loc 2 674 44 is_stmt 0 view .LVU81
 239 00b8 8142     		cmp	r1, r0
 240 00ba 02D0     		beq	.L6
 241 00bc 6FF00043 		mvn	r3, #-2147483648
 242 00c0 4B40     		eors	r3, r3, r1
 243              	.LVL25:
 244              	.L6:
 245              		.loc 2 674 44 view .LVU82
 246              	.LBE13:
 247              	.LBE12:
 253:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 248              		.loc 1 253 15 view .LVU83
 249 00c2 0399     		ldr	r1, [sp, #12]
ARM GAS  /tmp/ccZZcBjn.s 			page 23


 250 00c4 049A     		ldr	r2, [sp, #16]
 251 00c6 41F8043C 		str	r3, [r1, #-4]
 256:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         pIn2 = pSrcB->pData + 2U * j;
 252              		.loc 1 256 9 is_stmt 1 view .LVU84
 257:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 253              		.loc 1 257 9 view .LVU85
 254 00ca 01F10803 		add	r3, r1, #8
 255 00ce 0832     		adds	r2, r2, #8
 256              	.LVL26:
 260:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 257              		.loc 1 260 9 view .LVU86
 262:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 258              		.loc 1 262 15 view .LVU87
 259 00d0 0393     		str	r3, [sp, #12]
 260              	.LVL27:
 262:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 261              		.loc 1 262 7 is_stmt 0 view .LVU88
 262 00d2 079B     		ldr	r3, [sp, #28]
 263 00d4 0492     		str	r2, [sp, #16]
 264 00d6 9A42     		cmp	r2, r3
 265 00d8 AED1     		bne	.L7
 265:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       pInA = pInA + 2 * numColsA;
 266              		.loc 1 265 7 is_stmt 1 view .LVU89
 267              		.loc 1 266 7 view .LVU90
 268              	.LVL28:
 267:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 268:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* Decrement row loop counter */
 269:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       row--;
 269              		.loc 1 269 7 view .LVU91
 270:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 271:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     } while (row > 0U);
 270              		.loc 1 271 13 view .LVU92
 271 00da 089B     		ldr	r3, [sp, #32]
 272 00dc 0A9A     		ldr	r2, [sp, #40]
 273              	.LVL29:
 274              		.loc 1 271 13 is_stmt 0 view .LVU93
 275 00de 5B44     		add	r3, r3, fp
 276 00e0 0893     		str	r3, [sp, #32]
 277 00e2 069B     		ldr	r3, [sp, #24]
 278 00e4 1344     		add	r3, r3, r2
 279 00e6 0693     		str	r3, [sp, #24]
 280              	.LVL30:
 281              		.loc 1 271 5 view .LVU94
 282 00e8 099B     		ldr	r3, [sp, #36]
 283 00ea 013B     		subs	r3, r3, #1
 284              	.LVL31:
 285              		.loc 1 271 5 view .LVU95
 286 00ec 0993     		str	r3, [sp, #36]
 287 00ee 9ED1     		bne	.L8
 272:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 273:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     /* Set status as ARM_MATH_SUCCESS */
 274:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     status = ARM_MATH_SUCCESS;
 275:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   }
 276:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 277:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   /* Return to application */
 278:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   return (status);
 279:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** }
ARM GAS  /tmp/ccZZcBjn.s 			page 24


 288              		.loc 1 279 1 view .LVU96
 289 00f0 0998     		ldr	r0, [sp, #36]
 290 00f2 0DB0     		add	sp, sp, #52
 291              	.LCFI2:
 292              		.cfi_remember_state
 293              		.cfi_def_cfa_offset 36
 294              		@ sp needed
 295 00f4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 296              	.LVL32:
 297              	.L2:
 298              	.LCFI3:
 299              		.cfi_restore_state
 252:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         *px++ = (q31_t) clip_q63_to_q31(sumImag >> 31);
 300              		.loc 1 252 15 view .LVU97
 301 00f8 039B     		ldr	r3, [sp, #12]
 302 00fa 1A46     		mov	r2, r3
 303 00fc 059B     		ldr	r3, [sp, #20]
 304 00fe 42F8083C 		str	r3, [r2, #-8]
 253:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 305              		.loc 1 253 9 is_stmt 1 view .LVU98
 306              	.LVL33:
 307              	.LBB15:
 670:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q63_t x)
 308              		.loc 2 670 30 view .LVU99
 309              	.LBB14:
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 310              		.loc 2 673 5 view .LVU100
 311 0102 DEE7     		b	.L6
 312              	.LBE14:
 313              	.LBE15:
 314              		.cfi_endproc
 315              	.LFE145:
 317              		.text
 318              	.Letext0:
 319              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 320              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 321              		.file 5 "/usr/include/newlib/sys/_types.h"
 322              		.file 6 "/usr/include/newlib/sys/reent.h"
 323              		.file 7 "/usr/include/newlib/sys/lock.h"
 324              		.file 8 "/usr/include/newlib/math.h"
ARM GAS  /tmp/ccZZcBjn.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_mat_cmplx_mult_q31.c
     /tmp/ccZZcBjn.s:17     .text.arm_mat_cmplx_mult_q31:0000000000000000 $t
     /tmp/ccZZcBjn.s:26     .text.arm_mat_cmplx_mult_q31:0000000000000000 arm_mat_cmplx_mult_q31

NO UNDEFINED SYMBOLS
