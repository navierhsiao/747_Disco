ARM GAS  /tmp/ccyVPhJY.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_timebase_tim.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.comm	htim2,76,4
  17              		.section	.text.HAL_InitTick,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_InitTick
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	HAL_InitTick:
  27              	.LFB331:
  28              		.file 1 "./User/code/Src/stm32h7xx_hal_timebase_tim.c"
   1:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** /* USER CODE BEGIN Header */
   2:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** /**
   3:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   ******************************************************************************
   4:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * @file    stm32h7xx_hal_timebase_TIM.c
   5:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM.
   6:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   ******************************************************************************
   7:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * @attention
   8:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   *
   9:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * All rights reserved.</center></h2>
  11:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   *
  12:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * the License. You may obtain a copy of the License at:
  15:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   *                             www.st.com/SLA0044
  16:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   *
  17:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   ******************************************************************************
  18:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   */
  19:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** /* USER CODE END Header */
  20:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** 
  21:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  22:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** #include "stm32h7xx_hal.h"
  23:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** #include "stm32h7xx_hal_tim.h"
  24:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** 
  25:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  26:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  27:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  28:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  29:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim2;
  30:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  /tmp/ccyVPhJY.s 			page 2


  31:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
  32:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** 
  33:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** /**
  34:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM2 as a time base source.
  35:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated
  36:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   *         Tick interrupt priority.
  37:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  38:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  39:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  40:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * @retval HAL status
  41:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   */
  42:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  43:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** {
  29              		.loc 1 43 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 64
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 90B0     		sub	sp, sp, #64
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 72
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
  44:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  45:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   uint32_t              uwTimclock, uwAPB1Prescaler;
  46:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** 
  47:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue;
  48:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  49:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** /*Configure the TIM2 IRQ priority */
  50:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
  45              		.loc 1 50 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 0F2B     		cmp	r3, #15
  48 000c 27D8     		bhi	.L2
  51:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   {
  52:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   HAL_NVIC_SetPriority(TIM2_IRQn, TickPriority ,0U);
  49              		.loc 1 52 3
  50 000e 0022     		movs	r2, #0
  51 0010 7968     		ldr	r1, [r7, #4]
  52 0012 1C20     		movs	r0, #28
  53 0014 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  53:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** 
  54:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   /* Enable the TIM2 global Interrupt */
  55:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
  54              		.loc 1 55 3
  55 0018 1C20     		movs	r0, #28
  56 001a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  56:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****     uwTickPrio = TickPriority;
  57              		.loc 1 56 16
  58 001e 294A     		ldr	r2, .L10
  59 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccyVPhJY.s 			page 3


  60 0022 1360     		str	r3, [r2]
  61              	.LBB2:
  57:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****     }
  58:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   else
  59:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   {
  60:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****     return HAL_ERROR;
  61:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   }
  62:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   /* Enable TIM2 clock */
  63:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   __HAL_RCC_TIM2_CLK_ENABLE();
  62              		.loc 1 63 3
  63 0024 284B     		ldr	r3, .L10+4
  64 0026 D3F8E830 		ldr	r3, [r3, #232]
  65 002a 274A     		ldr	r2, .L10+4
  66 002c 43F00103 		orr	r3, r3, #1
  67 0030 C2F8E830 		str	r3, [r2, #232]
  68 0034 244B     		ldr	r3, .L10+4
  69 0036 D3F8E830 		ldr	r3, [r3, #232]
  70 003a 03F00103 		and	r3, r3, #1
  71 003e FB60     		str	r3, [r7, #12]
  72 0040 FB68     		ldr	r3, [r7, #12]
  73              	.LBE2:
  64:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** 
  65:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   /* Get clock configuration */
  66:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  74              		.loc 1 66 3
  75 0042 07F11002 		add	r2, r7, #16
  76 0046 07F11403 		add	r3, r7, #20
  77 004a 1146     		mov	r1, r2
  78 004c 1846     		mov	r0, r3
  79 004e FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  67:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** 
  68:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   /* Get APB1 prescaler */
  69:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  80              		.loc 1 69 19
  81 0052 BB6A     		ldr	r3, [r7, #40]
  82 0054 BB63     		str	r3, [r7, #56]
  70:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   /* Compute TIM2 clock */
  71:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   if (uwAPB1Prescaler == RCC_HCLK_DIV1)
  83              		.loc 1 71 6
  84 0056 BB6B     		ldr	r3, [r7, #56]
  85 0058 002B     		cmp	r3, #0
  86 005a 06D1     		bne	.L5
  87 005c 01E0     		b	.L9
  88              	.L2:
  60:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   }
  89              		.loc 1 60 12
  90 005e 0123     		movs	r3, #1
  91 0060 2CE0     		b	.L8
  92              	.L9:
  72:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   {
  73:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****     uwTimclock = HAL_RCC_GetPCLK1Freq();
  93              		.loc 1 73 18
  94 0062 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  95 0066 F863     		str	r0, [r7, #60]
  96 0068 04E0     		b	.L6
  97              	.L5:
  74:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   }
ARM GAS  /tmp/ccyVPhJY.s 			page 4


  75:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   else
  76:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   {
  77:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****     uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  98              		.loc 1 77 24
  99 006a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 100 006e 0346     		mov	r3, r0
 101              		.loc 1 77 16
 102 0070 5B00     		lsls	r3, r3, #1
 103 0072 FB63     		str	r3, [r7, #60]
 104              	.L6:
  78:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   }
  79:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** 
  80:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM2 counter clock equal to 1MHz */
  81:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 105              		.loc 1 81 46
 106 0074 FB6B     		ldr	r3, [r7, #60]
 107 0076 154A     		ldr	r2, .L10+8
 108 0078 A2FB0323 		umull	r2, r3, r2, r3
 109 007c 9B0C     		lsrs	r3, r3, #18
 110              		.loc 1 81 20
 111 007e 013B     		subs	r3, r3, #1
 112 0080 7B63     		str	r3, [r7, #52]
  82:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** 
  83:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   /* Initialize TIM2 */
  84:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   htim2.Instance = TIM2;
 113              		.loc 1 84 18
 114 0082 134B     		ldr	r3, .L10+12
 115 0084 4FF08042 		mov	r2, #1073741824
 116 0088 1A60     		str	r2, [r3]
  85:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** 
  86:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  87:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   + Period = [(TIM2CLK/1000) - 1]. to have a (1/1000) s time base.
  88:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  89:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   + ClockDivision = 0
  90:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   + Counter direction = Up
  91:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   */
  92:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   htim2.Init.Period = (1000000U / 1000U) - 1U;
 117              		.loc 1 92 21
 118 008a 114B     		ldr	r3, .L10+12
 119 008c 40F2E732 		movw	r2, #999
 120 0090 DA60     		str	r2, [r3, #12]
  93:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   htim2.Init.Prescaler = uwPrescalerValue;
 121              		.loc 1 93 24
 122 0092 0F4A     		ldr	r2, .L10+12
 123 0094 7B6B     		ldr	r3, [r7, #52]
 124 0096 5360     		str	r3, [r2, #4]
  94:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   htim2.Init.ClockDivision = 0;
 125              		.loc 1 94 28
 126 0098 0D4B     		ldr	r3, .L10+12
 127 009a 0022     		movs	r2, #0
 128 009c 1A61     		str	r2, [r3, #16]
  95:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 129              		.loc 1 95 26
 130 009e 0C4B     		ldr	r3, .L10+12
 131 00a0 0022     		movs	r2, #0
 132 00a2 9A60     		str	r2, [r3, #8]
  96:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   if(HAL_TIM_Base_Init(&htim2) == HAL_OK)
ARM GAS  /tmp/ccyVPhJY.s 			page 5


 133              		.loc 1 96 6
 134 00a4 0A48     		ldr	r0, .L10+12
 135 00a6 FFF7FEFF 		bl	HAL_TIM_Base_Init
 136 00aa 0346     		mov	r3, r0
 137              		.loc 1 96 5
 138 00ac 002B     		cmp	r3, #0
 139 00ae 04D1     		bne	.L7
  97:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   {
  98:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  99:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****     return HAL_TIM_Base_Start_IT(&htim2);
 140              		.loc 1 99 12
 141 00b0 0748     		ldr	r0, .L10+12
 142 00b2 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 143 00b6 0346     		mov	r3, r0
 144 00b8 00E0     		b	.L8
 145              	.L7:
 100:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   }
 101:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** 
 102:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   /* Return function status */
 103:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   return HAL_ERROR;
 146              		.loc 1 103 10
 147 00ba 0123     		movs	r3, #1
 148              	.L8:
 104:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** }
 149              		.loc 1 104 1 discriminator 1
 150 00bc 1846     		mov	r0, r3
 151 00be 4037     		adds	r7, r7, #64
 152              	.LCFI3:
 153              		.cfi_def_cfa_offset 8
 154 00c0 BD46     		mov	sp, r7
 155              	.LCFI4:
 156              		.cfi_def_cfa_register 13
 157              		@ sp needed
 158 00c2 80BD     		pop	{r7, pc}
 159              	.L11:
 160              		.align	2
 161              	.L10:
 162 00c4 00000000 		.word	uwTickPrio
 163 00c8 00440258 		.word	1476543488
 164 00cc 83DE1B43 		.word	1125899907
 165 00d0 00000000 		.word	htim2
 166              		.cfi_endproc
 167              	.LFE331:
 169              		.section	.text.HAL_SuspendTick,"ax",%progbits
 170              		.align	1
 171              		.global	HAL_SuspendTick
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv5-d16
 177              	HAL_SuspendTick:
 178              	.LFB332:
 105:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** 
 106:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** /**
 107:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
 108:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM2 update interrupt.
 109:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * @param  None
ARM GAS  /tmp/ccyVPhJY.s 			page 6


 110:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * @retval None
 111:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   */
 112:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
 113:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** {
 179              		.loc 1 113 1
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 1, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184 0000 80B4     		push	{r7}
 185              	.LCFI5:
 186              		.cfi_def_cfa_offset 4
 187              		.cfi_offset 7, -4
 188 0002 00AF     		add	r7, sp, #0
 189              	.LCFI6:
 190              		.cfi_def_cfa_register 7
 114:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   /* Disable TIM2 update Interrupt */
 115:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim2, TIM_IT_UPDATE);
 191              		.loc 1 115 3
 192 0004 064B     		ldr	r3, .L13
 193 0006 1B68     		ldr	r3, [r3]
 194 0008 DA68     		ldr	r2, [r3, #12]
 195 000a 054B     		ldr	r3, .L13
 196 000c 1B68     		ldr	r3, [r3]
 197 000e 22F00102 		bic	r2, r2, #1
 198 0012 DA60     		str	r2, [r3, #12]
 116:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** }
 199              		.loc 1 116 1
 200 0014 00BF     		nop
 201 0016 BD46     		mov	sp, r7
 202              	.LCFI7:
 203              		.cfi_def_cfa_register 13
 204              		@ sp needed
 205 0018 5DF8047B 		ldr	r7, [sp], #4
 206              	.LCFI8:
 207              		.cfi_restore 7
 208              		.cfi_def_cfa_offset 0
 209 001c 7047     		bx	lr
 210              	.L14:
 211 001e 00BF     		.align	2
 212              	.L13:
 213 0020 00000000 		.word	htim2
 214              		.cfi_endproc
 215              	.LFE332:
 217              		.section	.text.HAL_ResumeTick,"ax",%progbits
 218              		.align	1
 219              		.global	HAL_ResumeTick
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	HAL_ResumeTick:
 226              	.LFB333:
 117:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** 
 118:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** /**
 119:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 120:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM2 update interrupt.
ARM GAS  /tmp/ccyVPhJY.s 			page 7


 121:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * @param  None
 122:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   * @retval None
 123:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   */
 124:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 125:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** {
 227              		.loc 1 125 1
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 232 0000 80B4     		push	{r7}
 233              	.LCFI9:
 234              		.cfi_def_cfa_offset 4
 235              		.cfi_offset 7, -4
 236 0002 00AF     		add	r7, sp, #0
 237              	.LCFI10:
 238              		.cfi_def_cfa_register 7
 126:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   /* Enable TIM2 Update interrupt */
 127:./User/code/Src/stm32h7xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim2, TIM_IT_UPDATE);
 239              		.loc 1 127 3
 240 0004 064B     		ldr	r3, .L16
 241 0006 1B68     		ldr	r3, [r3]
 242 0008 DA68     		ldr	r2, [r3, #12]
 243 000a 054B     		ldr	r3, .L16
 244 000c 1B68     		ldr	r3, [r3]
 245 000e 42F00102 		orr	r2, r2, #1
 246 0012 DA60     		str	r2, [r3, #12]
 128:./User/code/Src/stm32h7xx_hal_timebase_tim.c **** }
 247              		.loc 1 128 1
 248 0014 00BF     		nop
 249 0016 BD46     		mov	sp, r7
 250              	.LCFI11:
 251              		.cfi_def_cfa_register 13
 252              		@ sp needed
 253 0018 5DF8047B 		ldr	r7, [sp], #4
 254              	.LCFI12:
 255              		.cfi_restore 7
 256              		.cfi_def_cfa_offset 0
 257 001c 7047     		bx	lr
 258              	.L17:
 259 001e 00BF     		.align	2
 260              	.L16:
 261 0020 00000000 		.word	htim2
 262              		.cfi_endproc
 263              	.LFE333:
 265              		.text
 266              	.Letext0:
 267              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 268              		.file 3 "./Libraries/CMSIS/Core/Include/core_cm7.h"
 269              		.file 4 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 270              		.file 5 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 271              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 272              		.file 7 "/usr/include/newlib/sys/_types.h"
 273              		.file 8 "/usr/include/newlib/sys/reent.h"
 274              		.file 9 "/usr/include/newlib/sys/lock.h"
 275              		.file 10 "/usr/include/newlib/math.h"
 276              		.file 11 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
ARM GAS  /tmp/ccyVPhJY.s 			page 8


 277              		.file 12 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 278              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 279              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 280              		.file 15 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 281              		.file 16 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 282              		.file 17 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccyVPhJY.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_timebase_tim.c
                            *COM*:000000000000004c htim2
     /tmp/ccyVPhJY.s:18     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccyVPhJY.s:26     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccyVPhJY.s:162    .text.HAL_InitTick:00000000000000c4 $d
     /tmp/ccyVPhJY.s:170    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccyVPhJY.s:177    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccyVPhJY.s:213    .text.HAL_SuspendTick:0000000000000020 $d
     /tmp/ccyVPhJY.s:218    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccyVPhJY.s:225    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccyVPhJY.s:261    .text.HAL_ResumeTick:0000000000000020 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK1Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
uwTickPrio
