ARM GAS  /tmp/ccjfKiuT.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_qspi.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_QSPI_Init,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_QSPI_Init
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_QSPI_Init:
  26              	.LFB331:
  27              		.file 1 "./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c"
   1:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
   2:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   ******************************************************************************
   3:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @file    stm32h7xx_hal_qspi.c
   4:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @author  MCD Application Team
   5:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief   QSPI HAL module driver.
   6:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          This file provides firmware functions to manage the following
   7:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          functionalities of the QuadSPI interface (QSPI).
   8:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *           + Initialization and de-initialization functions
   9:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *           + Indirect functional mode management
  10:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *           + Memory-mapped functional mode management
  11:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *           + Auto-polling functional mode management
  12:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *           + Interrupts and flags management
  13:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *           + MDMA channel configuration for indirect functional mode
  14:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *           + Errors management and abort functionality
  15:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *
  16:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *
  17:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   @verbatim
  18:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****  ===============================================================================
  19:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                         ##### How to use this driver #####
  20:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****  ===============================================================================
  21:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   [..]
  22:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     *** Initialization ***
  23:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     ======================
  24:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     [..]
  25:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) As prerequisite, fill in the HAL_QSPI_MspInit() :
  26:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (++) Enable QuadSPI clock interface with __HAL_RCC_QSPI_CLK_ENABLE().
  27:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (++) Reset QuadSPI Peripheral with __HAL_RCC_QSPI_FORCE_RESET() and __HAL_RCC_QSPI_RELEASE_
  28:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (++) Enable the clocks for the QuadSPI GPIOS with __HAL_RCC_GPIOx_CLK_ENABLE().
  29:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (++) Configure these QuadSPI pins in alternate mode using HAL_GPIO_Init().
  30:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (++) If interrupt mode is used, enable and configure QuadSPI global
  31:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             interrupt with HAL_NVIC_SetPriority() and HAL_NVIC_EnableIRQ().
ARM GAS  /tmp/ccjfKiuT.s 			page 2


  32:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (++) If DMA mode is used, enable the clocks for the QuadSPI MDMA
  33:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             with __HAL_RCC_MDMA_CLK_ENABLE(), configure MDMA with HAL_MDMA_Init(),
  34:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             link it with QuadSPI handle using __HAL_LINKDMA(), enable and configure
  35:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             MDMA global interrupt with HAL_NVIC_SetPriority() and HAL_NVIC_EnableIRQ().
  36:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) Configure the flash size, the clock prescaler, the fifo threshold, the
  37:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           clock mode, the sample shifting and the CS high time using the HAL_QSPI_Init() function.
  38:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
  39:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     *** Indirect functional mode ***
  40:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     ================================
  41:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     [..]
  42:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) Configure the command sequence using the HAL_QSPI_Command() or HAL_QSPI_Command_IT()
  43:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           functions :
  44:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Instruction phase : the mode used and if present the instruction opcode.
  45:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Address phase : the mode used and if present the size and the address value.
  46:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Alternate-bytes phase : the mode used and if present the size and the alternate
  47:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****              bytes values.
  48:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Dummy-cycles phase : the number of dummy cycles (mode used is same as data phase).
  49:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Data phase : the mode used and if present the number of bytes.
  50:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Double Data Rate (DDR) mode : the activation (or not) of this mode and the delay
  51:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****              if activated.
  52:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Sending Instruction Only Once (SIOO) mode : the activation (or not) of this mode.
  53:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) If no data is required for the command, it is sent directly to the memory :
  54:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) In polling mode, the output of the function is done when the transfer is complete.
  55:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) In interrupt mode, HAL_QSPI_CmdCpltCallback() will be called when the transfer is com
  56:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) For the indirect write mode, use HAL_QSPI_Transmit(), HAL_QSPI_Transmit_DMA() or
  57:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           HAL_QSPI_Transmit_IT() after the command configuration :
  58:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) In polling mode, the output of the function is done when the transfer is complete.
  59:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) In interrupt mode, HAL_QSPI_FifoThresholdCallback() will be called when the fifo thre
  60:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****              is reached and HAL_QSPI_TxCpltCallback() will be called when the transfer is complete.
  61:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) In DMA mode,HAL_QSPI_TxCpltCallback() will be called when the transfer is complete.
  62:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) For the indirect read mode, use HAL_QSPI_Receive(), HAL_QSPI_Receive_DMA() or
  63:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           HAL_QSPI_Receive_IT() after the command configuration :
  64:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) In polling mode, the output of the function is done when the transfer is complete.
  65:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) In interrupt mode, HAL_QSPI_FifoThresholdCallback() will be called when the fifo thre
  66:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****              is reached and HAL_QSPI_RxCpltCallback() will be called when the transfer is complete.
  67:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 	     (++) In DMA mode,HAL_QSPI_RxCpltCallback() will be called when the transfer is complete.
  68:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
  69:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     *** Auto-polling functional mode ***
  70:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     ====================================
  71:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     [..]
  72:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) Configure the command sequence and the auto-polling functional mode using the
  73:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           HAL_QSPI_AutoPolling() or HAL_QSPI_AutoPolling_IT() functions :
  74:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Instruction phase : the mode used and if present the instruction opcode.
  75:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Address phase : the mode used and if present the size and the address value.
  76:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Alternate-bytes phase : the mode used and if present the size and the alternate
  77:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****              bytes values.
  78:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Dummy-cycles phase : the number of dummy cycles (mode used is same as data phase).
  79:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Data phase : the mode used.
  80:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Double Data Rate (DDR) mode : the activation (or not) of this mode and the delay
  81:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****              if activated.
  82:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Sending Instruction Only Once (SIOO) mode : the activation (or not) of this mode.
  83:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) The size of the status bytes, the match value, the mask used, the match mode (OR/AND)
  84:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****              the polling interval and the automatic stop activation.
  85:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) After the configuration :
  86:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) In polling mode, the output of the function is done when the status match is reached.
  87:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****              automatic stop is activated to avoid an infinite loop.
  88:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) In interrupt mode, HAL_QSPI_StatusMatchCallback() will be called each time the status
ARM GAS  /tmp/ccjfKiuT.s 			page 3


  89:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
  90:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     *** MDMA functional mode ***
  91:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     ====================================
  92:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     [..]
  93:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) Configure the SourceInc and DestinationInc of MDMA parameters in the HAL_QSPI_MspInit() f
  94:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) MDMA settings for write operation :
  95:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           (+) The DestinationInc should be MDMA_DEST_INC_DISABLE
  96:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           (+) The SourceInc must be a value of @ref MDMA_Source_increment_mode (Except the MDMA_SRC
  97:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           (+) The SourceDataSize must be a value of @ref MDMA Source data size (Except the MDMA_SRC
  98:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****               aligned with @ref MDMA_Source_increment_mode .
  99:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           (+) The DestDataSize must be a value of @ref MDMA Destination data size (Except the MDMA_
 100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) MDMA settings for read operation :
 101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           (+) The SourceInc should be MDMA_SRC_INC_DISABLE
 102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           (+) The DestinationInc must be a value of @ref MDMA_Destination_increment_mode (Except th
 103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           (+) The SourceDataSize must be a value of @ref MDMA Source data size (Except the MDMA_SRC
 104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           (+) The DestDataSize must be a value of @ref MDMA Destination data size (Except the MDMA_
 105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****               aligned with @ref MDMA_Destination_increment_mode.
 106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++)The buffer Transfer Length (BufferTransferLength) = number of bytes in the FIFO (FifoT
 107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#)In case of wrong MDMA setting
 108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (++) For write operation :
 109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (+) If the DestinationInc is different to MDMA_DEST_INC_DISABLE , it will be disabled by t
 110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (++) For read operation :
 111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (+) If the SourceInc is not set to MDMA_SRC_INC_DISABLE , it will be disabled by the HAL_Q
 112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     *** Memory-mapped functional mode ***
 114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     =====================================
 115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     [..]
 116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) Configure the command sequence and the memory-mapped functional mode using the
 117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           HAL_QSPI_MemoryMapped() functions :
 118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Instruction phase : the mode used and if present the instruction opcode.
 119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Address phase : the mode used and the size.
 120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Alternate-bytes phase : the mode used and if present the size and the alternate
 121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****              bytes values.
 122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Dummy-cycles phase : the number of dummy cycles (mode used is same as data phase).
 123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Data phase : the mode used.
 124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Double Data Rate (DDR) mode : the activation (or not) of this mode and the delay
 125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****              if activated.
 126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Sending Instruction Only Once (SIOO) mode : the activation (or not) of this mode.
 127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) The timeout activation and the timeout period.
 128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) After the configuration, the QuadSPI will be used as soon as an access on the AHB is done
 129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           the address range. HAL_QSPI_TimeOutCallback() will be called when the timeout expires.
 130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     *** Errors management and abort functionality ***
 132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     =================================================
 133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     [..]
 134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) HAL_QSPI_GetError() function gives the error raised during the last operation.
 135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) HAL_QSPI_Abort() and HAL_QSPI_AbortIT() functions aborts any on-going operation and
 136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           flushes the fifo :
 137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) In polling mode, the output of the function is done when the transfer
 138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****               complete bit is set and the busy bit cleared.
 139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) In interrupt mode, HAL_QSPI_AbortCpltCallback() will be called when
 140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****               the transfer complete bit is set.
 141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     *** Control functions ***
 143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     =========================
 144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     [..]
 145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) HAL_QSPI_GetState() function gives the current state of the HAL QuadSPI driver.
ARM GAS  /tmp/ccjfKiuT.s 			page 4


 146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) HAL_QSPI_SetTimeout() function configures the timeout value used in the driver.
 147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) HAL_QSPI_SetFifoThreshold() function configures the threshold on the Fifo of the QSPI IP.
 148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) HAL_QSPI_GetFifoThreshold() function gives the current of the Fifo's threshold
 149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) HAL_QSPI_SetFlashID() function configures the index of the flash memory to be accessed.
 150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     *** Callback registration ***
 152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     =============================================
 153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     [..]
 154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       The compilation define  USE_HAL_QSPI_REGISTER_CALLBACKS when set to 1
 155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       allows the user to configure dynamically the driver callbacks.
 156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       Use Functions @ref HAL_QSPI_RegisterCallback() to register a user callback,
 158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       it allows to register following callbacks:
 159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) ErrorCallback : callback when error occurs.
 160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) AbortCpltCallback : callback when abort is completed.
 161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) FifoThresholdCallback : callback when the fifo threshold is reached.
 162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) CmdCpltCallback : callback when a command without data is completed.
 163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) RxCpltCallback : callback when a reception transfer is completed.
 164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) TxCpltCallback : callback when a transmission transfer is completed.
 165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) StatusMatchCallback : callback when a status match occurs.
 166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) TimeOutCallback : callback when the timeout perioed expires.
 167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) MspInitCallback    : QSPI MspInit.
 168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) MspDeInitCallback  : QSPI MspDeInit.
 169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       This function takes as parameters the HAL peripheral handle, the Callback ID
 170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       and a pointer to the user callback function.
 171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       Use function @ref HAL_QSPI_UnRegisterCallback() to reset a callback to the default
 173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       weak (surcharged) function. It allows to reset following callbacks:
 174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) ErrorCallback : callback when error occurs.
 175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) AbortCpltCallback : callback when abort is completed.
 176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) FifoThresholdCallback : callback when the fifo threshold is reached.
 177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) CmdCpltCallback : callback when a command without data is completed.
 178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) RxCpltCallback : callback when a reception transfer is completed.
 179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) TxCpltCallback : callback when a transmission transfer is completed.
 180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) StatusMatchCallback : callback when a status match occurs.
 181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) TimeOutCallback : callback when the timeout perioed expires.
 182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) MspInitCallback    : QSPI MspInit.
 183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         (+) MspDeInitCallback  : QSPI MspDeInit.
 184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       This function) takes as parameters the HAL peripheral handle and the Callback ID.
 185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       By default, after the @ref HAL_QSPI_Init and if the state is HAL_QSPI_STATE_RESET
 187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       all callbacks are reset to the corresponding legacy weak (surcharged) functions.
 188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       Exception done for MspInit and MspDeInit callbacks that are respectively
 189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       reset to the legacy weak (surcharged) functions in the @ref HAL_QSPI_Init
 190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       and @ref  HAL_QSPI_DeInit only when these callbacks are null (not registered beforehand).
 191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       If not, MspInit or MspDeInit are not null, the @ref HAL_QSPI_Init and @ref HAL_QSPI_DeInit
 192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       Callbacks can be registered/unregistered in READY state only.
 195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       Exception done for MspInit/MspDeInit callbacks that can be registered/unregistered
 196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       in READY or RESET state, thus registered (user) MspInit/DeInit callbacks can be used
 197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       during the Init/DeInit.
 198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       In that case first register the MspInit/MspDeInit user callbacks
 199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       using @ref HAL_QSPI_RegisterCallback before calling @ref HAL_QSPI_DeInit
 200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       or @ref HAL_QSPI_Init function.
 201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       When The compilation define USE_HAL_QSPI_REGISTER_CALLBACKS is set to 0 or
ARM GAS  /tmp/ccjfKiuT.s 			page 5


 203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       not defined, the callback registering feature is not available
 204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       and weak (surcharged) callbacks are used.
 205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     *** Workarounds linked to Silicon Limitation ***
 207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     ====================================================
 208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     [..]
 209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (#) Workarounds Implemented inside HAL Driver
 210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          (++) Extra data written in the FIFO at the end of a read transfer
 211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   @endverbatim
 213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   ******************************************************************************
 214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @attention
 215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *
 216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * All rights reserved.</center></h2>
 218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *
 219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * the "License"; You may not use this file except in compliance with the
 221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * License. You may obtain a copy of the License at:
 222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *                       opensource.org/licenses/BSD-3-Clause
 223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *
 224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   ******************************************************************************
 225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /* Includes ------------------------------------------------------------------*/
 228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #include "stm32h7xx_hal.h"
 229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #if defined(QUADSPI)
 231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /** @addtogroup STM32H7xx_HAL_Driver
 233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @{
 234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /** @defgroup QSPI QSPI
 237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief QSPI HAL module driver
 238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @{
 239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #ifdef HAL_QSPI_MODULE_ENABLED
 241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /* Private typedef -----------------------------------------------------------*/
 243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /* Private define ------------------------------------------------------------*/
 245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /** @defgroup QSPI_Private_Constants QSPI Private Constants
 246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @{
 247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #define QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE 0x00000000U                     /*!<Indirect write mode
 249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #define QSPI_FUNCTIONAL_MODE_INDIRECT_READ  ((uint32_t)QUADSPI_CCR_FMODE_0) /*!<Indirect read mode*
 250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #define QSPI_FUNCTIONAL_MODE_AUTO_POLLING   ((uint32_t)QUADSPI_CCR_FMODE_1) /*!<Automatic polling m
 251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #define QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED  ((uint32_t)QUADSPI_CCR_FMODE)   /*!<Memory-mapped mode*
 252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
 253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @}
 254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /* Private macro -------------------------------------------------------------*/
 257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /** @defgroup QSPI_Private_Macros QSPI Private Macros
 258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @{
 259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
ARM GAS  /tmp/ccjfKiuT.s 			page 6


 260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #define IS_QSPI_FUNCTIONAL_MODE(MODE) (((MODE) == QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE) || \
 261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                        ((MODE) == QSPI_FUNCTIONAL_MODE_INDIRECT_READ)  || \
 262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                        ((MODE) == QSPI_FUNCTIONAL_MODE_AUTO_POLLING)   || \
 263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                        ((MODE) == QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
 265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @}
 266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /* Private variables ---------------------------------------------------------*/
 269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /* Private function prototypes -----------------------------------------------*/
 271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** static void QSPI_DMARxCplt(MDMA_HandleTypeDef *hmdma);
 272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** static void QSPI_DMATxCplt(MDMA_HandleTypeDef *hmdma);
 273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** static void QSPI_DMAError(MDMA_HandleTypeDef *hmdma);
 274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** static void QSPI_DMAAbortCplt(MDMA_HandleTypeDef *hmdma);
 275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** static HAL_StatusTypeDef QSPI_WaitFlagStateUntilTimeout(QSPI_HandleTypeDef *hqspi, uint32_t Flag, F
 276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMod
 277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /* Exported functions --------------------------------------------------------*/
 279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /** @defgroup QSPI_Exported_Functions QSPI Exported Functions
 281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @{
 282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /** @defgroup QSPI_Exported_Functions_Group1 Initialization/de-initialization functions
 285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *  @brief    Initialization and Configuration functions
 286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *
 287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** @verbatim
 288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** ===============================================================================
 289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             ##### Initialization and Configuration functions #####
 290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****  ===============================================================================
 291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     [..]
 292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     This subsection provides a set of functions allowing to :
 293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (+) Initialize the QuadSPI.
 294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (+) De-initialize the QuadSPI.
 295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** @endverbatim
 297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @{
 298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
 301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief Initialize the QSPI mode according to the specified parameters
 302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *        in the QSPI_InitTypeDef and initialize the associated handle.
 303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
 304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL status
 305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Init(QSPI_HandleTypeDef *hqspi)
 307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
  28              		.loc 1 307 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
ARM GAS  /tmp/ccjfKiuT.s 			page 7


  37 0002 86B0     		sub	sp, sp, #24
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  40 0004 02AF     		add	r7, sp, #8
  41              	.LCFI2:
  42              		.cfi_def_cfa 7, 24
  43 0006 7860     		str	r0, [r7, #4]
 308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
 309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
  44              		.loc 1 309 24
  45 0008 FFF7FEFF 		bl	HAL_GetTick
  46 000c F860     		str	r0, [r7, #12]
 310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Check the QSPI handle allocation */
 312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi == NULL)
  47              		.loc 1 312 5
  48 000e 7B68     		ldr	r3, [r7, #4]
  49 0010 002B     		cmp	r3, #0
  50 0012 01D1     		bne	.L2
 313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     return HAL_ERROR;
  51              		.loc 1 314 12
  52 0014 0123     		movs	r3, #1
  53 0016 5FE0     		b	.L3
  54              	.L2:
 315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Check the parameters */
 318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_ALL_INSTANCE(hqspi->Instance));
 319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_CLOCK_PRESCALER(hqspi->Init.ClockPrescaler));
 320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_FIFO_THRESHOLD(hqspi->Init.FifoThreshold));
 321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_SSHIFT(hqspi->Init.SampleShifting));
 322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_FLASH_SIZE(hqspi->Init.FlashSize));
 323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_CS_HIGH_TIME(hqspi->Init.ChipSelectHighTime));
 324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_CLOCK_MODE(hqspi->Init.ClockMode));
 325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DUAL_FLASH_MODE(hqspi->Init.DualFlash));
 326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (hqspi->Init.DualFlash != QSPI_DUALFLASH_ENABLE )
 328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     assert_param(IS_QSPI_FLASH_ID(hqspi->Init.FlashID));
 330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_RESET)
  55              		.loc 1 332 11
  56 0018 7B68     		ldr	r3, [r7, #4]
  57 001a 93F84130 		ldrb	r3, [r3, #65]
  58 001e DBB2     		uxtb	r3, r3
  59              		.loc 1 332 5
  60 0020 002B     		cmp	r3, #0
  61 0022 07D1     		bne	.L4
 333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Reset Callback pointers in HAL_QSPI_STATE_RESET only */
 337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCallback         = HAL_QSPI_ErrorCallback;
 338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->AbortCpltCallback     = HAL_QSPI_AbortCpltCallback;
 339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->FifoThresholdCallback = HAL_QSPI_FifoThresholdCallback;
ARM GAS  /tmp/ccjfKiuT.s 			page 8


 340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->CmdCpltCallback       = HAL_QSPI_CmdCpltCallback;
 341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->RxCpltCallback        = HAL_QSPI_RxCpltCallback;
 342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->TxCpltCallback        = HAL_QSPI_TxCpltCallback;
 343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->StatusMatchCallback   = HAL_QSPI_StatusMatchCallback;
 344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->TimeOutCallback       = HAL_QSPI_TimeOutCallback;
 345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if(hqspi->MspInitCallback == NULL)
 347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->MspInitCallback = HAL_QSPI_MspInit;
 349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
 350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Init the low level hardware */
 352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->MspInitCallback(hqspi);
 353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #else
 354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Init the low level hardware : GPIO, CLOCK */
 355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     HAL_QSPI_MspInit(hqspi);
  62              		.loc 1 355 5
  63 0024 7868     		ldr	r0, [r7, #4]
  64 0026 FFF7FEFF 		bl	HAL_QSPI_MspInit
 356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #endif
 357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Configure the default timeout for the QSPI memory access */
 359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     HAL_QSPI_SetTimeout(hqspi, HAL_QSPI_TIMEOUT_DEFAULT_VALUE);
  65              		.loc 1 359 5
  66 002a 41F28831 		movw	r1, #5000
  67 002e 7868     		ldr	r0, [r7, #4]
  68 0030 FFF7FEFF 		bl	HAL_QSPI_SetTimeout
  69              	.L4:
 360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Configure QSPI FIFO Threshold */
 363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
  70              		.loc 1 363 3
  71 0034 7B68     		ldr	r3, [r7, #4]
  72 0036 1B68     		ldr	r3, [r3]
  73 0038 1B68     		ldr	r3, [r3]
  74 003a 23F47061 		bic	r1, r3, #3840
  75 003e 7B68     		ldr	r3, [r7, #4]
  76 0040 9B68     		ldr	r3, [r3, #8]
  77 0042 013B     		subs	r3, r3, #1
  78 0044 1A02     		lsls	r2, r3, #8
  79 0046 7B68     		ldr	r3, [r7, #4]
  80 0048 1B68     		ldr	r3, [r3]
  81 004a 0A43     		orrs	r2, r2, r1
  82 004c 1A60     		str	r2, [r3]
 364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****              ((hqspi->Init.FifoThreshold - 1U) << QUADSPI_CR_FTHRES_Pos));
 365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Wait till BUSY flag reset */
 367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
  83              		.loc 1 367 12
  84 004e 7B68     		ldr	r3, [r7, #4]
  85 0050 9B6C     		ldr	r3, [r3, #72]
  86 0052 0093     		str	r3, [sp]
  87 0054 FB68     		ldr	r3, [r7, #12]
  88 0056 0022     		movs	r2, #0
  89 0058 2021     		movs	r1, #32
  90 005a 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccjfKiuT.s 			page 9


  91 005c FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
  92 0060 0346     		mov	r3, r0
  93 0062 FB72     		strb	r3, [r7, #11]
 368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(status == HAL_OK)
  94              		.loc 1 369 5
  95 0064 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
  96 0066 002B     		cmp	r3, #0
  97 0068 35D1     		bne	.L5
 370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Configure QSPI Clock Prescaler and Sample Shift */
 372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | Q
  98              		.loc 1 372 5
  99 006a 7B68     		ldr	r3, [r7, #4]
 100 006c 1B68     		ldr	r3, [r3]
 101 006e 1A68     		ldr	r2, [r3]
 102 0070 1B4B     		ldr	r3, .L6
 103 0072 1340     		ands	r3, r3, r2
 104 0074 7A68     		ldr	r2, [r7, #4]
 105 0076 5268     		ldr	r2, [r2, #4]
 106 0078 1106     		lsls	r1, r2, #24
 107 007a 7A68     		ldr	r2, [r7, #4]
 108 007c D268     		ldr	r2, [r2, #12]
 109 007e 1143     		orrs	r1, r1, r2
 110 0080 7A68     		ldr	r2, [r7, #4]
 111 0082 D269     		ldr	r2, [r2, #28]
 112 0084 1143     		orrs	r1, r1, r2
 113 0086 7A68     		ldr	r2, [r7, #4]
 114 0088 126A     		ldr	r2, [r2, #32]
 115 008a 1143     		orrs	r1, r1, r2
 116 008c 7A68     		ldr	r2, [r7, #4]
 117 008e 1268     		ldr	r2, [r2]
 118 0090 0B43     		orrs	r3, r3, r1
 119 0092 1360     		str	r3, [r2]
 373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                ((hqspi->Init.ClockPrescaler << QUADSPI_CR_PRESCALER_Pos) |
 374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                 hqspi->Init.SampleShifting  | hqspi->Init.FlashID | hqspi->Init.DualFlash));
 375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Configure QSPI Flash Size, CS High Time and Clock Mode */
 377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 120              		.loc 1 377 5
 121 0094 7B68     		ldr	r3, [r7, #4]
 122 0096 1B68     		ldr	r3, [r3]
 123 0098 5A68     		ldr	r2, [r3, #4]
 124 009a 124B     		ldr	r3, .L6+4
 125 009c 1340     		ands	r3, r3, r2
 126 009e 7A68     		ldr	r2, [r7, #4]
 127 00a0 1269     		ldr	r2, [r2, #16]
 128 00a2 1104     		lsls	r1, r2, #16
 129 00a4 7A68     		ldr	r2, [r7, #4]
 130 00a6 5269     		ldr	r2, [r2, #20]
 131 00a8 1143     		orrs	r1, r1, r2
 132 00aa 7A68     		ldr	r2, [r7, #4]
 133 00ac 9269     		ldr	r2, [r2, #24]
 134 00ae 1143     		orrs	r1, r1, r2
 135 00b0 7A68     		ldr	r2, [r7, #4]
 136 00b2 1268     		ldr	r2, [r2]
 137 00b4 0B43     		orrs	r3, r3, r1
ARM GAS  /tmp/ccjfKiuT.s 			page 10


 138 00b6 5360     		str	r3, [r2, #4]
 378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                ((hqspi->Init.FlashSize << QUADSPI_DCR_FSIZE_Pos) |
 379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                 hqspi->Init.ChipSelectHighTime | hqspi->Init.ClockMode));
 380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Enable the QSPI peripheral */
 382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     __HAL_QSPI_ENABLE(hqspi);
 139              		.loc 1 382 5
 140 00b8 7B68     		ldr	r3, [r7, #4]
 141 00ba 1B68     		ldr	r3, [r3]
 142 00bc 1A68     		ldr	r2, [r3]
 143 00be 7B68     		ldr	r3, [r7, #4]
 144 00c0 1B68     		ldr	r3, [r3]
 145 00c2 42F00102 		orr	r2, r2, #1
 146 00c6 1A60     		str	r2, [r3]
 383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Set QSPI error code to none */
 385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 147              		.loc 1 385 22
 148 00c8 7B68     		ldr	r3, [r7, #4]
 149 00ca 0022     		movs	r2, #0
 150 00cc 5A64     		str	r2, [r3, #68]
 386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Initialize the QSPI state */
 388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->State = HAL_QSPI_STATE_READY;
 151              		.loc 1 388 18
 152 00ce 7B68     		ldr	r3, [r7, #4]
 153 00d0 0122     		movs	r2, #1
 154 00d2 83F84120 		strb	r2, [r3, #65]
 155              	.L5:
 389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Return function status */
 392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
 156              		.loc 1 392 10
 157 00d6 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 158              	.L3:
 393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 159              		.loc 1 393 1
 160 00d8 1846     		mov	r0, r3
 161 00da 1037     		adds	r7, r7, #16
 162              	.LCFI3:
 163              		.cfi_def_cfa_offset 8
 164 00dc BD46     		mov	sp, r7
 165              	.LCFI4:
 166              		.cfi_def_cfa_register 13
 167              		@ sp needed
 168 00de 80BD     		pop	{r7, pc}
 169              	.L7:
 170              		.align	2
 171              	.L6:
 172 00e0 2FFFFF00 		.word	16777007
 173 00e4 FEF8E0FF 		.word	-2033410
 174              		.cfi_endproc
 175              	.LFE331:
 177              		.section	.text.HAL_QSPI_DeInit,"ax",%progbits
 178              		.align	1
 179              		.global	HAL_QSPI_DeInit
ARM GAS  /tmp/ccjfKiuT.s 			page 11


 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu fpv5-d16
 185              	HAL_QSPI_DeInit:
 186              	.LFB332:
 394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
 396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief De-Initialize the QSPI peripheral.
 397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
 398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL status
 399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_DeInit(QSPI_HandleTypeDef *hqspi)
 401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 187              		.loc 1 401 1
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 8
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191 0000 80B5     		push	{r7, lr}
 192              	.LCFI5:
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 82B0     		sub	sp, sp, #8
 197              	.LCFI6:
 198              		.cfi_def_cfa_offset 16
 199 0004 00AF     		add	r7, sp, #0
 200              	.LCFI7:
 201              		.cfi_def_cfa_register 7
 202 0006 7860     		str	r0, [r7, #4]
 402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Check the QSPI handle allocation */
 403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi == NULL)
 203              		.loc 1 403 5
 204 0008 7B68     		ldr	r3, [r7, #4]
 205 000a 002B     		cmp	r3, #0
 206 000c 01D1     		bne	.L9
 404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     return HAL_ERROR;
 207              		.loc 1 405 12
 208 000e 0123     		movs	r3, #1
 209 0010 12E0     		b	.L10
 210              	.L9:
 406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Disable the QSPI Peripheral Clock */
 409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_QSPI_DISABLE(hqspi);
 211              		.loc 1 409 3
 212 0012 7B68     		ldr	r3, [r7, #4]
 213 0014 1B68     		ldr	r3, [r3]
 214 0016 1A68     		ldr	r2, [r3]
 215 0018 7B68     		ldr	r3, [r7, #4]
 216 001a 1B68     		ldr	r3, [r3]
 217 001c 22F00102 		bic	r2, r2, #1
 218 0020 1A60     		str	r2, [r3]
 410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->MspDeInitCallback == NULL)
ARM GAS  /tmp/ccjfKiuT.s 			page 12


 413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->MspDeInitCallback = HAL_QSPI_MspDeInit;
 415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* DeInit the low level hardware */
 418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   hqspi->MspDeInitCallback(hqspi);
 419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #else
 420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_QSPI_MspDeInit(hqspi);
 219              		.loc 1 421 3
 220 0022 7868     		ldr	r0, [r7, #4]
 221 0024 FFF7FEFF 		bl	HAL_QSPI_MspDeInit
 422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #endif
 423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Set QSPI error code to none */
 425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 222              		.loc 1 425 20
 223 0028 7B68     		ldr	r3, [r7, #4]
 224 002a 0022     		movs	r2, #0
 225 002c 5A64     		str	r2, [r3, #68]
 426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Initialize the QSPI state */
 428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   hqspi->State = HAL_QSPI_STATE_RESET;
 226              		.loc 1 428 16
 227 002e 7B68     		ldr	r3, [r7, #4]
 228 0030 0022     		movs	r2, #0
 229 0032 83F84120 		strb	r2, [r3, #65]
 429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return HAL_OK;
 230              		.loc 1 430 10
 231 0036 0023     		movs	r3, #0
 232              	.L10:
 431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 233              		.loc 1 431 1
 234 0038 1846     		mov	r0, r3
 235 003a 0837     		adds	r7, r7, #8
 236              	.LCFI8:
 237              		.cfi_def_cfa_offset 8
 238 003c BD46     		mov	sp, r7
 239              	.LCFI9:
 240              		.cfi_def_cfa_register 13
 241              		@ sp needed
 242 003e 80BD     		pop	{r7, pc}
 243              		.cfi_endproc
 244              	.LFE332:
 246              		.section	.text.HAL_QSPI_MspInit,"ax",%progbits
 247              		.align	1
 248              		.weak	HAL_QSPI_MspInit
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 252              		.fpu fpv5-d16
 254              	HAL_QSPI_MspInit:
 255              	.LFB333:
 432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
 434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief Initialize the QSPI MSP.
ARM GAS  /tmp/ccjfKiuT.s 			page 13


 435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
 436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
 437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** __weak void HAL_QSPI_MspInit(QSPI_HandleTypeDef *hqspi)
 439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 256              		.loc 1 439 1
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 8
 259              		@ frame_needed = 1, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 261 0000 80B4     		push	{r7}
 262              	.LCFI10:
 263              		.cfi_def_cfa_offset 4
 264              		.cfi_offset 7, -4
 265 0002 83B0     		sub	sp, sp, #12
 266              	.LCFI11:
 267              		.cfi_def_cfa_offset 16
 268 0004 00AF     		add	r7, sp, #0
 269              	.LCFI12:
 270              		.cfi_def_cfa_register 7
 271 0006 7860     		str	r0, [r7, #4]
 440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
 441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   UNUSED(hqspi);
 442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             the HAL_QSPI_MspInit can be implemented in the user file
 445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****    */
 446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 272              		.loc 1 446 1
 273 0008 00BF     		nop
 274 000a 0C37     		adds	r7, r7, #12
 275              	.LCFI13:
 276              		.cfi_def_cfa_offset 4
 277 000c BD46     		mov	sp, r7
 278              	.LCFI14:
 279              		.cfi_def_cfa_register 13
 280              		@ sp needed
 281 000e 5DF8047B 		ldr	r7, [sp], #4
 282              	.LCFI15:
 283              		.cfi_restore 7
 284              		.cfi_def_cfa_offset 0
 285 0012 7047     		bx	lr
 286              		.cfi_endproc
 287              	.LFE333:
 289              		.section	.text.HAL_QSPI_MspDeInit,"ax",%progbits
 290              		.align	1
 291              		.weak	HAL_QSPI_MspDeInit
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu fpv5-d16
 297              	HAL_QSPI_MspDeInit:
 298              	.LFB334:
 447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
 449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief DeInitialize the QSPI MSP.
 450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
ARM GAS  /tmp/ccjfKiuT.s 			page 14


 451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
 452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** __weak void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef *hqspi)
 454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 299              		.loc 1 454 1
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 8
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304 0000 80B4     		push	{r7}
 305              	.LCFI16:
 306              		.cfi_def_cfa_offset 4
 307              		.cfi_offset 7, -4
 308 0002 83B0     		sub	sp, sp, #12
 309              	.LCFI17:
 310              		.cfi_def_cfa_offset 16
 311 0004 00AF     		add	r7, sp, #0
 312              	.LCFI18:
 313              		.cfi_def_cfa_register 7
 314 0006 7860     		str	r0, [r7, #4]
 455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
 456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   UNUSED(hqspi);
 457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             the HAL_QSPI_MspDeInit can be implemented in the user file
 460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****    */
 461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 315              		.loc 1 461 1
 316 0008 00BF     		nop
 317 000a 0C37     		adds	r7, r7, #12
 318              	.LCFI19:
 319              		.cfi_def_cfa_offset 4
 320 000c BD46     		mov	sp, r7
 321              	.LCFI20:
 322              		.cfi_def_cfa_register 13
 323              		@ sp needed
 324 000e 5DF8047B 		ldr	r7, [sp], #4
 325              	.LCFI21:
 326              		.cfi_restore 7
 327              		.cfi_def_cfa_offset 0
 328 0012 7047     		bx	lr
 329              		.cfi_endproc
 330              	.LFE334:
 332              		.section	.text.HAL_QSPI_IRQHandler,"ax",%progbits
 333              		.align	1
 334              		.global	HAL_QSPI_IRQHandler
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 338              		.fpu fpv5-d16
 340              	HAL_QSPI_IRQHandler:
 341              	.LFB335:
 462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
 464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @}
 465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
ARM GAS  /tmp/ccjfKiuT.s 			page 15


 467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /** @defgroup QSPI_Exported_Functions_Group2 Input and Output operation functions
 468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *  @brief QSPI Transmit/Receive functions
 469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *
 470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** @verbatim
 471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****  ===============================================================================
 472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                       ##### IO operation functions #####
 473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****  ===============================================================================
 474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     [..]
 475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     This subsection provides a set of functions allowing to :
 476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (+) Handle the interrupts.
 477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (+) Handle the command sequence.
 478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (+) Transmit data in blocking, interrupt or DMA mode.
 479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (+) Receive data in blocking, interrupt or DMA mode.
 480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (+) Manage the auto-polling functional mode.
 481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (+) Manage the memory-mapped functional mode.
 482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** @endverbatim
 484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @{
 485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
 488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief Handle QSPI interrupt request.
 489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
 490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
 491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** void HAL_QSPI_IRQHandler(QSPI_HandleTypeDef *hqspi)
 493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 342              		.loc 1 493 1
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 24
 345              		@ frame_needed = 1, uses_anonymous_args = 0
 346 0000 80B5     		push	{r7, lr}
 347              	.LCFI22:
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 7, -8
 350              		.cfi_offset 14, -4
 351 0002 86B0     		sub	sp, sp, #24
 352              	.LCFI23:
 353              		.cfi_def_cfa_offset 32
 354 0004 00AF     		add	r7, sp, #0
 355              	.LCFI24:
 356              		.cfi_def_cfa_register 7
 357 0006 7860     		str	r0, [r7, #4]
 494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __IO uint32_t *data_reg;
 495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   uint32_t flag = READ_REG(hqspi->Instance->SR);
 358              		.loc 1 495 19
 359 0008 7B68     		ldr	r3, [r7, #4]
 360 000a 1B68     		ldr	r3, [r3]
 361              		.loc 1 495 12
 362 000c 9B68     		ldr	r3, [r3, #8]
 363 000e 7B61     		str	r3, [r7, #20]
 496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   uint32_t itsource = READ_REG(hqspi->Instance->CR);
 364              		.loc 1 496 23
 365 0010 7B68     		ldr	r3, [r7, #4]
 366 0012 1B68     		ldr	r3, [r3]
 367              		.loc 1 496 12
 368 0014 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjfKiuT.s 			page 16


 369 0016 3B61     		str	r3, [r7, #16]
 497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* QSPI Fifo Threshold interrupt occurred ----------------------------------*/
 499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(((flag & QSPI_FLAG_FT) != 0U) && ((itsource & QSPI_IT_FT) != 0U))
 370              		.loc 1 499 13
 371 0018 7B69     		ldr	r3, [r7, #20]
 372 001a 03F00403 		and	r3, r3, #4
 373              		.loc 1 499 5
 374 001e 002B     		cmp	r3, #0
 375 0020 64D0     		beq	.L14
 376              		.loc 1 499 50 discriminator 1
 377 0022 3B69     		ldr	r3, [r7, #16]
 378 0024 03F48023 		and	r3, r3, #262144
 379              		.loc 1 499 36 discriminator 1
 380 0028 002B     		cmp	r3, #0
 381 002a 5FD0     		beq	.L14
 500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     data_reg = &hqspi->Instance->DR;
 382              		.loc 1 501 22
 383 002c 7B68     		ldr	r3, [r7, #4]
 384 002e 1B68     		ldr	r3, [r3]
 385              		.loc 1 501 14
 386 0030 2033     		adds	r3, r3, #32
 387 0032 FB60     		str	r3, [r7, #12]
 502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if(hqspi->State == HAL_QSPI_STATE_BUSY_INDIRECT_TX)
 388              		.loc 1 503 13
 389 0034 7B68     		ldr	r3, [r7, #4]
 390 0036 93F84130 		ldrb	r3, [r3, #65]
 391 003a DBB2     		uxtb	r3, r3
 392              		.loc 1 503 7
 393 003c 122B     		cmp	r3, #18
 394 003e 25D1     		bne	.L15
 504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Transmission process */
 506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       while(__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_FT) != RESET)
 395              		.loc 1 506 12
 396 0040 1CE0     		b	.L16
 397              	.L19:
 507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         if (hqspi->TxXferCount > 0U)
 398              		.loc 1 508 18
 399 0042 7B68     		ldr	r3, [r7, #4]
 400 0044 DB6A     		ldr	r3, [r3, #44]
 401              		.loc 1 508 12
 402 0046 002B     		cmp	r3, #0
 403 0048 0FD0     		beq	.L17
 509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
 510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Fill the FIFO until the threshold is reached */
 511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 404              		.loc 1 511 47
 405 004a 7B68     		ldr	r3, [r7, #4]
 406 004c 5B6A     		ldr	r3, [r3, #36]
 407              		.loc 1 511 41
 408 004e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 409              		.loc 1 511 39
 410 0050 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccjfKiuT.s 			page 17


 411 0052 1A70     		strb	r2, [r3]
 512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           hqspi->pTxBuffPtr++;
 412              		.loc 1 512 16
 413 0054 7B68     		ldr	r3, [r7, #4]
 414 0056 5B6A     		ldr	r3, [r3, #36]
 415              		.loc 1 512 28
 416 0058 5A1C     		adds	r2, r3, #1
 417 005a 7B68     		ldr	r3, [r7, #4]
 418 005c 5A62     		str	r2, [r3, #36]
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           hqspi->TxXferCount--;
 419              		.loc 1 513 16
 420 005e 7B68     		ldr	r3, [r7, #4]
 421 0060 DB6A     		ldr	r3, [r3, #44]
 422              		.loc 1 513 29
 423 0062 5A1E     		subs	r2, r3, #1
 424 0064 7B68     		ldr	r3, [r7, #4]
 425 0066 DA62     		str	r2, [r3, #44]
 426 0068 08E0     		b	.L16
 427              	.L17:
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
 515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         else
 516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
 517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* No more data available for the transfer */
 518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Disable the QSPI FIFO Threshold Interrupt */
 519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           __HAL_QSPI_DISABLE_IT(hqspi, QSPI_IT_FT);
 428              		.loc 1 519 11
 429 006a 7B68     		ldr	r3, [r7, #4]
 430 006c 1B68     		ldr	r3, [r3]
 431 006e 1A68     		ldr	r2, [r3]
 432 0070 7B68     		ldr	r3, [r7, #4]
 433 0072 1B68     		ldr	r3, [r3]
 434 0074 22F48022 		bic	r2, r2, #262144
 435 0078 1A60     		str	r2, [r3]
 520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           break;
 436              		.loc 1 520 11
 437 007a 33E0     		b	.L20
 438              	.L16:
 506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 439              		.loc 1 506 13
 440 007c 7B68     		ldr	r3, [r7, #4]
 441 007e 1B68     		ldr	r3, [r3]
 442 0080 9B68     		ldr	r3, [r3, #8]
 443 0082 03F00403 		and	r3, r3, #4
 506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 444              		.loc 1 506 12
 445 0086 002B     		cmp	r3, #0
 446 0088 DBD1     		bne	.L19
 447 008a 2BE0     		b	.L20
 448              	.L15:
 521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
 522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
 523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
 524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else if(hqspi->State == HAL_QSPI_STATE_BUSY_INDIRECT_RX)
 449              		.loc 1 524 18
 450 008c 7B68     		ldr	r3, [r7, #4]
 451 008e 93F84130 		ldrb	r3, [r3, #65]
 452 0092 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccjfKiuT.s 			page 18


 453              		.loc 1 524 12
 454 0094 222B     		cmp	r3, #34
 455 0096 25D1     		bne	.L20
 525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Receiving Process */
 527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       while(__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_FT) != RESET)
 456              		.loc 1 527 12
 457 0098 1DE0     		b	.L21
 458              	.L24:
 528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         if (hqspi->RxXferCount > 0U)
 459              		.loc 1 529 18
 460 009a 7B68     		ldr	r3, [r7, #4]
 461 009c 9B6B     		ldr	r3, [r3, #56]
 462              		.loc 1 529 12
 463 009e 002B     		cmp	r3, #0
 464 00a0 10D0     		beq	.L22
 530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
 531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Read the FIFO until the threshold is reached */
 532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 465              		.loc 1 532 17
 466 00a2 7B68     		ldr	r3, [r7, #4]
 467 00a4 1B6B     		ldr	r3, [r3, #48]
 468              		.loc 1 532 32
 469 00a6 FA68     		ldr	r2, [r7, #12]
 470 00a8 1278     		ldrb	r2, [r2]
 471 00aa D2B2     		uxtb	r2, r2
 472              		.loc 1 532 30
 473 00ac 1A70     		strb	r2, [r3]
 533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           hqspi->pRxBuffPtr++;
 474              		.loc 1 533 16
 475 00ae 7B68     		ldr	r3, [r7, #4]
 476 00b0 1B6B     		ldr	r3, [r3, #48]
 477              		.loc 1 533 28
 478 00b2 5A1C     		adds	r2, r3, #1
 479 00b4 7B68     		ldr	r3, [r7, #4]
 480 00b6 1A63     		str	r2, [r3, #48]
 534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           hqspi->RxXferCount--;
 481              		.loc 1 534 16
 482 00b8 7B68     		ldr	r3, [r7, #4]
 483 00ba 9B6B     		ldr	r3, [r3, #56]
 484              		.loc 1 534 29
 485 00bc 5A1E     		subs	r2, r3, #1
 486 00be 7B68     		ldr	r3, [r7, #4]
 487 00c0 9A63     		str	r2, [r3, #56]
 488 00c2 08E0     		b	.L21
 489              	.L22:
 535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
 536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         else
 537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
 538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* All data have been received for the transfer */
 539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Disable the QSPI FIFO Threshold Interrupt */
 540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           __HAL_QSPI_DISABLE_IT(hqspi, QSPI_IT_FT);
 490              		.loc 1 540 11
 491 00c4 7B68     		ldr	r3, [r7, #4]
 492 00c6 1B68     		ldr	r3, [r3]
 493 00c8 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccjfKiuT.s 			page 19


 494 00ca 7B68     		ldr	r3, [r7, #4]
 495 00cc 1B68     		ldr	r3, [r3]
 496 00ce 22F48022 		bic	r2, r2, #262144
 497 00d2 1A60     		str	r2, [r3]
 541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           break;
 498              		.loc 1 541 11
 499 00d4 06E0     		b	.L20
 500              	.L21:
 527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 501              		.loc 1 527 13
 502 00d6 7B68     		ldr	r3, [r7, #4]
 503 00d8 1B68     		ldr	r3, [r3]
 504 00da 9B68     		ldr	r3, [r3, #8]
 505 00dc 03F00403 		and	r3, r3, #4
 527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 506              		.loc 1 527 12
 507 00e0 002B     		cmp	r3, #0
 508 00e2 DAD1     		bne	.L24
 509              	.L20:
 542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
 543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
 544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
 545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else
 546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Nothing to do */
 548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
 549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* FIFO Threshold callback */
 551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->FifoThresholdCallback(hqspi);
 553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #else
 554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     HAL_QSPI_FifoThresholdCallback(hqspi);
 510              		.loc 1 554 5
 511 00e4 7868     		ldr	r0, [r7, #4]
 512 00e6 FFF7FEFF 		bl	HAL_QSPI_FifoThresholdCallback
 513 00ea 3CE1     		b	.L25
 514              	.L14:
 555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #endif
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* QSPI Transfer Complete interrupt occurred -------------------------------*/
 559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else if(((flag & QSPI_FLAG_TC) != 0U) && ((itsource & QSPI_IT_TC) != 0U))
 515              		.loc 1 559 18
 516 00ec 7B69     		ldr	r3, [r7, #20]
 517 00ee 03F00203 		and	r3, r3, #2
 518              		.loc 1 559 10
 519 00f2 002B     		cmp	r3, #0
 520 00f4 00F0B080 		beq	.L26
 521              		.loc 1 559 55 discriminator 1
 522 00f8 3B69     		ldr	r3, [r7, #16]
 523 00fa 03F40033 		and	r3, r3, #131072
 524              		.loc 1 559 41 discriminator 1
 525 00fe 002B     		cmp	r3, #0
 526 0100 00F0AA80 		beq	.L26
 560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Clear interrupt */
 562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     WRITE_REG(hqspi->Instance->FCR, QSPI_FLAG_TC);
ARM GAS  /tmp/ccjfKiuT.s 			page 20


 527              		.loc 1 562 5
 528 0104 7B68     		ldr	r3, [r7, #4]
 529 0106 1B68     		ldr	r3, [r3]
 530 0108 0222     		movs	r2, #2
 531 010a DA60     		str	r2, [r3, #12]
 563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Disable the QSPI FIFO Threshold, Transfer Error and Transfer complete Interrupts */
 565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     __HAL_QSPI_DISABLE_IT(hqspi, QSPI_IT_TC | QSPI_IT_TE | QSPI_IT_FT);
 532              		.loc 1 565 5
 533 010c 7B68     		ldr	r3, [r7, #4]
 534 010e 1B68     		ldr	r3, [r3]
 535 0110 1A68     		ldr	r2, [r3]
 536 0112 7B68     		ldr	r3, [r7, #4]
 537 0114 1B68     		ldr	r3, [r3]
 538 0116 22F4E022 		bic	r2, r2, #458752
 539 011a 1A60     		str	r2, [r3]
 566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Transfer complete callback */
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if(hqspi->State == HAL_QSPI_STATE_BUSY_INDIRECT_TX)
 540              		.loc 1 568 13
 541 011c 7B68     		ldr	r3, [r7, #4]
 542 011e 93F84130 		ldrb	r3, [r3, #65]
 543 0122 DBB2     		uxtb	r3, r3
 544              		.loc 1 568 7
 545 0124 122B     		cmp	r3, #18
 546 0126 20D1     		bne	.L27
 569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 547              		.loc 1 570 17
 548 0128 7B68     		ldr	r3, [r7, #4]
 549 012a 1B68     		ldr	r3, [r3]
 550              		.loc 1 570 27
 551 012c 1B68     		ldr	r3, [r3]
 552              		.loc 1 570 32
 553 012e 03F00403 		and	r3, r3, #4
 554              		.loc 1 570 10
 555 0132 002B     		cmp	r3, #0
 556 0134 11D0     		beq	.L28
 571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Disable using MDMA by clearing DMAEN, note that DMAEN bit is "reserved"
 573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****            but no impact on H7 HW and it minimize the cost in the footprint */
 574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 557              		.loc 1 574 9
 558 0136 7B68     		ldr	r3, [r7, #4]
 559 0138 1B68     		ldr	r3, [r3]
 560 013a 1A68     		ldr	r2, [r3]
 561 013c 7B68     		ldr	r3, [r7, #4]
 562 013e 1B68     		ldr	r3, [r3]
 563 0140 22F00402 		bic	r2, r2, #4
 564 0144 1A60     		str	r2, [r3]
 575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Disable the MDMA channel */
 577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         __HAL_MDMA_DISABLE(hqspi->hmdma);
 565              		.loc 1 577 9
 566 0146 7B68     		ldr	r3, [r7, #4]
 567 0148 DB6B     		ldr	r3, [r3, #60]
 568 014a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjfKiuT.s 			page 21


 569 014c DA68     		ldr	r2, [r3, #12]
 570 014e 7B68     		ldr	r3, [r7, #4]
 571 0150 DB6B     		ldr	r3, [r3, #60]
 572 0152 1B68     		ldr	r3, [r3]
 573 0154 22F00102 		bic	r2, r2, #1
 574 0158 DA60     		str	r2, [r3, #12]
 575              	.L28:
 578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
 579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Change state of QSPI */
 582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
 576              		.loc 1 582 20
 577 015a 7B68     		ldr	r3, [r7, #4]
 578 015c 0122     		movs	r2, #1
 579 015e 83F84120 		strb	r2, [r3, #65]
 583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* TX Complete callback */
 585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->TxCpltCallback(hqspi);
 587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #else
 588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       HAL_QSPI_TxCpltCallback(hqspi);
 580              		.loc 1 588 7
 581 0162 7868     		ldr	r0, [r7, #4]
 582 0164 FFF7FEFF 		bl	HAL_QSPI_TxCpltCallback
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 583              		.loc 1 568 7
 584 0168 FAE0     		b	.L44
 585              	.L27:
 589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #endif
 590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
 591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else if(hqspi->State == HAL_QSPI_STATE_BUSY_INDIRECT_RX)
 586              		.loc 1 591 18
 587 016a 7B68     		ldr	r3, [r7, #4]
 588 016c 93F84130 		ldrb	r3, [r3, #65]
 589 0170 DBB2     		uxtb	r3, r3
 590              		.loc 1 591 12
 591 0172 222B     		cmp	r3, #34
 592 0174 43D1     		bne	.L30
 592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 593              		.loc 1 593 17
 594 0176 7B68     		ldr	r3, [r7, #4]
 595 0178 1B68     		ldr	r3, [r3]
 596              		.loc 1 593 27
 597 017a 1B68     		ldr	r3, [r3]
 598              		.loc 1 593 32
 599 017c 03F00403 		and	r3, r3, #4
 600              		.loc 1 593 10
 601 0180 002B     		cmp	r3, #0
 602 0182 12D0     		beq	.L31
 594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Disable using MDMA by clearing DMAEN, note that DMAEN bit is "reserved"
 596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****            but no impact on H7 HW and it minimize the cost in the footprint */
 597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 603              		.loc 1 597 9
 604 0184 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccjfKiuT.s 			page 22


 605 0186 1B68     		ldr	r3, [r3]
 606 0188 1A68     		ldr	r2, [r3]
 607 018a 7B68     		ldr	r3, [r7, #4]
 608 018c 1B68     		ldr	r3, [r3]
 609 018e 22F00402 		bic	r2, r2, #4
 610 0192 1A60     		str	r2, [r3]
 598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Disable the MDMA channel */
 600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         __HAL_MDMA_DISABLE(hqspi->hmdma);
 611              		.loc 1 600 9
 612 0194 7B68     		ldr	r3, [r7, #4]
 613 0196 DB6B     		ldr	r3, [r3, #60]
 614 0198 1B68     		ldr	r3, [r3]
 615 019a DA68     		ldr	r2, [r3, #12]
 616 019c 7B68     		ldr	r3, [r7, #4]
 617 019e DB6B     		ldr	r3, [r3, #60]
 618 01a0 1B68     		ldr	r3, [r3]
 619 01a2 22F00102 		bic	r2, r2, #1
 620 01a6 DA60     		str	r2, [r3, #12]
 621 01a8 21E0     		b	.L32
 622              	.L31:
 601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
 602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       else
 603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         data_reg = &hqspi->Instance->DR;
 623              		.loc 1 604 26
 624 01aa 7B68     		ldr	r3, [r7, #4]
 625 01ac 1B68     		ldr	r3, [r3]
 626              		.loc 1 604 18
 627 01ae 2033     		adds	r3, r3, #32
 628 01b0 FB60     		str	r3, [r7, #12]
 605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         while(READ_BIT(hqspi->Instance->SR, QUADSPI_SR_FLEVEL) != 0U)
 629              		.loc 1 605 14
 630 01b2 13E0     		b	.L33
 631              	.L35:
 606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
 607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           if (hqspi->RxXferCount > 0U)
 632              		.loc 1 607 20
 633 01b4 7B68     		ldr	r3, [r7, #4]
 634 01b6 9B6B     		ldr	r3, [r3, #56]
 635              		.loc 1 607 14
 636 01b8 002B     		cmp	r3, #0
 637 01ba 17D0     		beq	.L43
 608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           {
 609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             /* Read the last data received in the FIFO until it is empty */
 610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 638              		.loc 1 610 19
 639 01bc 7B68     		ldr	r3, [r7, #4]
 640 01be 1B6B     		ldr	r3, [r3, #48]
 641              		.loc 1 610 34
 642 01c0 FA68     		ldr	r2, [r7, #12]
 643 01c2 1278     		ldrb	r2, [r2]
 644 01c4 D2B2     		uxtb	r2, r2
 645              		.loc 1 610 32
 646 01c6 1A70     		strb	r2, [r3]
 611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             hqspi->pRxBuffPtr++;
 647              		.loc 1 611 18
ARM GAS  /tmp/ccjfKiuT.s 			page 23


 648 01c8 7B68     		ldr	r3, [r7, #4]
 649 01ca 1B6B     		ldr	r3, [r3, #48]
 650              		.loc 1 611 30
 651 01cc 5A1C     		adds	r2, r3, #1
 652 01ce 7B68     		ldr	r3, [r7, #4]
 653 01d0 1A63     		str	r2, [r3, #48]
 612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             hqspi->RxXferCount--;
 654              		.loc 1 612 18
 655 01d2 7B68     		ldr	r3, [r7, #4]
 656 01d4 9B6B     		ldr	r3, [r3, #56]
 657              		.loc 1 612 31
 658 01d6 5A1E     		subs	r2, r3, #1
 659 01d8 7B68     		ldr	r3, [r7, #4]
 660 01da 9A63     		str	r2, [r3, #56]
 661              	.L33:
 605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
 662              		.loc 1 605 15
 663 01dc 7B68     		ldr	r3, [r7, #4]
 664 01de 1B68     		ldr	r3, [r3]
 665 01e0 9B68     		ldr	r3, [r3, #8]
 666 01e2 03F47C53 		and	r3, r3, #16128
 605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
 667              		.loc 1 605 14
 668 01e6 002B     		cmp	r3, #0
 669 01e8 E4D1     		bne	.L35
 670 01ea 00E0     		b	.L32
 671              	.L43:
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           }
 614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           else
 615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           {
 616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             /* All data have been received for the transfer */
 617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             break;
 672              		.loc 1 617 13
 673 01ec 00BF     		nop
 674              	.L32:
 618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           }
 619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
 620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
 621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Change state of QSPI */
 624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
 675              		.loc 1 624 20
 676 01ee 7B68     		ldr	r3, [r7, #4]
 677 01f0 0122     		movs	r2, #1
 678 01f2 83F84120 		strb	r2, [r3, #65]
 625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* RX Complete callback */
 627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->RxCpltCallback(hqspi);
 629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #else
 630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       HAL_QSPI_RxCpltCallback(hqspi);
 679              		.loc 1 630 7
 680 01f6 7868     		ldr	r0, [r7, #4]
 681 01f8 FFF7FEFF 		bl	HAL_QSPI_RxCpltCallback
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 682              		.loc 1 568 7
ARM GAS  /tmp/ccjfKiuT.s 			page 24


 683 01fc B0E0     		b	.L44
 684              	.L30:
 631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #endif
 632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
 633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else if(hqspi->State == HAL_QSPI_STATE_BUSY)
 685              		.loc 1 633 18
 686 01fe 7B68     		ldr	r3, [r7, #4]
 687 0200 93F84130 		ldrb	r3, [r3, #65]
 688 0204 DBB2     		uxtb	r3, r3
 689              		.loc 1 633 12
 690 0206 022B     		cmp	r3, #2
 691 0208 07D1     		bne	.L36
 634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Change state of QSPI */
 636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
 692              		.loc 1 636 20
 693 020a 7B68     		ldr	r3, [r7, #4]
 694 020c 0122     		movs	r2, #1
 695 020e 83F84120 		strb	r2, [r3, #65]
 637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Command Complete callback */
 639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->CmdCpltCallback(hqspi);
 641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #else
 642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       HAL_QSPI_CmdCpltCallback(hqspi);
 696              		.loc 1 642 7
 697 0212 7868     		ldr	r0, [r7, #4]
 698 0214 FFF7FEFF 		bl	HAL_QSPI_CmdCpltCallback
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 699              		.loc 1 568 7
 700 0218 A2E0     		b	.L44
 701              	.L36:
 643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #endif
 644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
 645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else if(hqspi->State == HAL_QSPI_STATE_ABORT)
 702              		.loc 1 645 18
 703 021a 7B68     		ldr	r3, [r7, #4]
 704 021c 93F84130 		ldrb	r3, [r3, #65]
 705 0220 DBB2     		uxtb	r3, r3
 706              		.loc 1 645 12
 707 0222 082B     		cmp	r3, #8
 708 0224 40F09C80 		bne	.L44
 646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Reset functional mode configuration to indirect write mode by default */
 648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 709              		.loc 1 648 7
 710 0228 7B68     		ldr	r3, [r7, #4]
 711 022a 1B68     		ldr	r3, [r3]
 712 022c 5A69     		ldr	r2, [r3, #20]
 713 022e 7B68     		ldr	r3, [r7, #4]
 714 0230 1B68     		ldr	r3, [r3]
 715 0232 22F04062 		bic	r2, r2, #201326592
 716 0236 5A61     		str	r2, [r3, #20]
 649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Change state of QSPI */
 651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
 717              		.loc 1 651 20
ARM GAS  /tmp/ccjfKiuT.s 			page 25


 718 0238 7B68     		ldr	r3, [r7, #4]
 719 023a 0122     		movs	r2, #1
 720 023c 83F84120 		strb	r2, [r3, #65]
 652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if (hqspi->ErrorCode == HAL_QSPI_ERROR_NONE)
 721              		.loc 1 653 16
 722 0240 7B68     		ldr	r3, [r7, #4]
 723 0242 5B6C     		ldr	r3, [r3, #68]
 724              		.loc 1 653 10
 725 0244 002B     		cmp	r3, #0
 726 0246 03D1     		bne	.L37
 654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Abort called by the user */
 656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Abort Complete callback */
 658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->AbortCpltCallback(hqspi);
 660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #else
 661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         HAL_QSPI_AbortCpltCallback(hqspi);
 727              		.loc 1 661 9
 728 0248 7868     		ldr	r0, [r7, #4]
 729 024a FFF7FEFF 		bl	HAL_QSPI_AbortCpltCallback
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 730              		.loc 1 568 7
 731 024e 87E0     		b	.L44
 732              	.L37:
 662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #endif
 663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
 664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       else
 665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Abort due to an error (eg :  MDMA error) */
 667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Error callback */
 669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->ErrorCallback(hqspi);
 671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #else
 672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         HAL_QSPI_ErrorCallback(hqspi);
 733              		.loc 1 672 9
 734 0250 7868     		ldr	r0, [r7, #4]
 735 0252 FFF7FEFF 		bl	HAL_QSPI_ErrorCallback
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 736              		.loc 1 568 7
 737 0256 83E0     		b	.L44
 738              	.L26:
 673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #endif
 674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
 675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
 676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else
 677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****      /* Nothing to do */
 679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
 680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* QSPI Status Match interrupt occurred ------------------------------------*/
 683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else if(((flag & QSPI_FLAG_SM) != 0U) && ((itsource & QSPI_IT_SM) != 0U))
 739              		.loc 1 683 18
 740 0258 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccjfKiuT.s 			page 26


 741 025a 03F00803 		and	r3, r3, #8
 742              		.loc 1 683 10
 743 025e 002B     		cmp	r3, #0
 744 0260 1FD0     		beq	.L38
 745              		.loc 1 683 55 discriminator 1
 746 0262 3B69     		ldr	r3, [r7, #16]
 747 0264 03F40023 		and	r3, r3, #524288
 748              		.loc 1 683 41 discriminator 1
 749 0268 002B     		cmp	r3, #0
 750 026a 1AD0     		beq	.L38
 684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Clear interrupt */
 686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     WRITE_REG(hqspi->Instance->FCR, QSPI_FLAG_SM);
 751              		.loc 1 686 5
 752 026c 7B68     		ldr	r3, [r7, #4]
 753 026e 1B68     		ldr	r3, [r3]
 754 0270 0822     		movs	r2, #8
 755 0272 DA60     		str	r2, [r3, #12]
 687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Check if the automatic poll mode stop is activated */
 689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if(READ_BIT(hqspi->Instance->CR, QUADSPI_CR_APMS) != 0U)
 756              		.loc 1 689 8
 757 0274 7B68     		ldr	r3, [r7, #4]
 758 0276 1B68     		ldr	r3, [r3]
 759 0278 1B68     		ldr	r3, [r3]
 760 027a 03F48003 		and	r3, r3, #4194304
 761              		.loc 1 689 7
 762 027e 002B     		cmp	r3, #0
 763 0280 0BD0     		beq	.L39
 690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Disable the QSPI Transfer Error and Status Match Interrupts */
 692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_QSPI_DISABLE_IT(hqspi, (QSPI_IT_SM | QSPI_IT_TE));
 764              		.loc 1 692 7
 765 0282 7B68     		ldr	r3, [r7, #4]
 766 0284 1B68     		ldr	r3, [r3]
 767 0286 1A68     		ldr	r2, [r3]
 768 0288 7B68     		ldr	r3, [r7, #4]
 769 028a 1B68     		ldr	r3, [r3]
 770 028c 22F41022 		bic	r2, r2, #589824
 771 0290 1A60     		str	r2, [r3]
 693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Change state of QSPI */
 695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
 772              		.loc 1 695 20
 773 0292 7B68     		ldr	r3, [r7, #4]
 774 0294 0122     		movs	r2, #1
 775 0296 83F84120 		strb	r2, [r3, #65]
 776              	.L39:
 696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
 697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Status match callback */
 699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->StatusMatchCallback(hqspi);
 701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #else
 702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     HAL_QSPI_StatusMatchCallback(hqspi);
 777              		.loc 1 702 5
 778 029a 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccjfKiuT.s 			page 27


 779 029c FFF7FEFF 		bl	HAL_QSPI_StatusMatchCallback
 780 02a0 61E0     		b	.L25
 781              	.L38:
 703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #endif
 704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* QSPI Transfer Error interrupt occurred ----------------------------------*/
 707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else if(((flag & QSPI_FLAG_TE) != 0U) && ((itsource & QSPI_IT_TE) != 0U))
 782              		.loc 1 707 18
 783 02a2 7B69     		ldr	r3, [r7, #20]
 784 02a4 03F00103 		and	r3, r3, #1
 785              		.loc 1 707 10
 786 02a8 002B     		cmp	r3, #0
 787 02aa 47D0     		beq	.L40
 788              		.loc 1 707 55 discriminator 1
 789 02ac 3B69     		ldr	r3, [r7, #16]
 790 02ae 03F48033 		and	r3, r3, #65536
 791              		.loc 1 707 41 discriminator 1
 792 02b2 002B     		cmp	r3, #0
 793 02b4 42D0     		beq	.L40
 708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Clear interrupt */
 710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     WRITE_REG(hqspi->Instance->FCR, QSPI_FLAG_TE);
 794              		.loc 1 710 5
 795 02b6 7B68     		ldr	r3, [r7, #4]
 796 02b8 1B68     		ldr	r3, [r3]
 797 02ba 0122     		movs	r2, #1
 798 02bc DA60     		str	r2, [r3, #12]
 711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Disable all the QSPI Interrupts */
 713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     __HAL_QSPI_DISABLE_IT(hqspi, QSPI_IT_SM | QSPI_IT_TC | QSPI_IT_TE | QSPI_IT_FT);
 799              		.loc 1 713 5
 800 02be 7B68     		ldr	r3, [r7, #4]
 801 02c0 1B68     		ldr	r3, [r3]
 802 02c2 1A68     		ldr	r2, [r3]
 803 02c4 7B68     		ldr	r3, [r7, #4]
 804 02c6 1B68     		ldr	r3, [r3]
 805 02c8 22F47022 		bic	r2, r2, #983040
 806 02cc 1A60     		str	r2, [r3]
 714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Set error code */
 716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCode |= HAL_QSPI_ERROR_TRANSFER;
 807              		.loc 1 716 22
 808 02ce 7B68     		ldr	r3, [r7, #4]
 809 02d0 5B6C     		ldr	r3, [r3, #68]
 810 02d2 43F00202 		orr	r2, r3, #2
 811 02d6 7B68     		ldr	r3, [r7, #4]
 812 02d8 5A64     		str	r2, [r3, #68]
 717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 813              		.loc 1 718 15
 814 02da 7B68     		ldr	r3, [r7, #4]
 815 02dc 1B68     		ldr	r3, [r3]
 816              		.loc 1 718 25
 817 02de 1B68     		ldr	r3, [r3]
 818              		.loc 1 718 30
 819 02e0 03F00403 		and	r3, r3, #4
ARM GAS  /tmp/ccjfKiuT.s 			page 28


 820              		.loc 1 718 8
 821 02e4 002B     		cmp	r3, #0
 822 02e6 21D0     		beq	.L41
 719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Disable using MDMA by clearing DMAEN, note that DMAEN bit is "reserved"
 721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          but no impact on H7 HW and it minimize the cost in the footprint */
 722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 823              		.loc 1 722 7
 824 02e8 7B68     		ldr	r3, [r7, #4]
 825 02ea 1B68     		ldr	r3, [r3]
 826 02ec 1A68     		ldr	r2, [r3]
 827 02ee 7B68     		ldr	r3, [r7, #4]
 828 02f0 1B68     		ldr	r3, [r3]
 829 02f2 22F00402 		bic	r2, r2, #4
 830 02f6 1A60     		str	r2, [r3]
 723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Disable the MDMA channel */
 725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->hmdma->XferAbortCallback = QSPI_DMAAbortCplt;
 831              		.loc 1 725 12
 832 02f8 7B68     		ldr	r3, [r7, #4]
 833 02fa DB6B     		ldr	r3, [r3, #60]
 834              		.loc 1 725 39
 835 02fc 1C4A     		ldr	r2, .L47
 836 02fe 9A65     		str	r2, [r3, #88]
 726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if (HAL_MDMA_Abort_IT(hqspi->hmdma) != HAL_OK)
 837              		.loc 1 726 11
 838 0300 7B68     		ldr	r3, [r7, #4]
 839 0302 DB6B     		ldr	r3, [r3, #60]
 840 0304 1846     		mov	r0, r3
 841 0306 FFF7FEFF 		bl	HAL_MDMA_Abort_IT
 842 030a 0346     		mov	r3, r0
 843              		.loc 1 726 10
 844 030c 002B     		cmp	r3, #0
 845 030e 29D0     		beq	.L45
 727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Set error code to DMA */
 729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 846              		.loc 1 729 26
 847 0310 7B68     		ldr	r3, [r7, #4]
 848 0312 5B6C     		ldr	r3, [r3, #68]
 849 0314 43F00402 		orr	r2, r3, #4
 850 0318 7B68     		ldr	r3, [r7, #4]
 851 031a 5A64     		str	r2, [r3, #68]
 730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Change state of QSPI */
 732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->State = HAL_QSPI_STATE_READY;
 852              		.loc 1 732 22
 853 031c 7B68     		ldr	r3, [r7, #4]
 854 031e 0122     		movs	r2, #1
 855 0320 83F84120 		strb	r2, [r3, #65]
 733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Error callback */
 735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->ErrorCallback(hqspi);
 737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #else
 738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         HAL_QSPI_ErrorCallback(hqspi);
 856              		.loc 1 738 9
ARM GAS  /tmp/ccjfKiuT.s 			page 29


 857 0324 7868     		ldr	r0, [r7, #4]
 858 0326 FFF7FEFF 		bl	HAL_QSPI_ErrorCallback
 718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 859              		.loc 1 718 8
 860 032a 1BE0     		b	.L45
 861              	.L41:
 739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #endif
 740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
 741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
 742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else
 743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Change state of QSPI */
 745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
 862              		.loc 1 745 20
 863 032c 7B68     		ldr	r3, [r7, #4]
 864 032e 0122     		movs	r2, #1
 865 0330 83F84120 		strb	r2, [r3, #65]
 746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Error callback */
 748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->ErrorCallback(hqspi);
 750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #else
 751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       HAL_QSPI_ErrorCallback(hqspi);
 866              		.loc 1 751 7
 867 0334 7868     		ldr	r0, [r7, #4]
 868 0336 FFF7FEFF 		bl	HAL_QSPI_ErrorCallback
 718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 869              		.loc 1 718 8
 870 033a 13E0     		b	.L45
 871              	.L40:
 752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #endif
 753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
 754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* QSPI Timeout interrupt occurred -----------------------------------------*/
 757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else if(((flag & QSPI_FLAG_TO) != 0U) && ((itsource & QSPI_IT_TO) != 0U))
 872              		.loc 1 757 18
 873 033c 7B69     		ldr	r3, [r7, #20]
 874 033e 03F01003 		and	r3, r3, #16
 875              		.loc 1 757 10
 876 0342 002B     		cmp	r3, #0
 877 0344 0FD0     		beq	.L46
 878              		.loc 1 757 55 discriminator 1
 879 0346 3B69     		ldr	r3, [r7, #16]
 880 0348 03F48013 		and	r3, r3, #1048576
 881              		.loc 1 757 41 discriminator 1
 882 034c 002B     		cmp	r3, #0
 883 034e 0AD0     		beq	.L46
 758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Clear interrupt */
 760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     WRITE_REG(hqspi->Instance->FCR, QSPI_FLAG_TO);
 884              		.loc 1 760 5
 885 0350 7B68     		ldr	r3, [r7, #4]
 886 0352 1B68     		ldr	r3, [r3]
 887 0354 1022     		movs	r2, #16
 888 0356 DA60     		str	r2, [r3, #12]
 761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
ARM GAS  /tmp/ccjfKiuT.s 			page 30


 762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Timeout callback */
 763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
 764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->TimeOutCallback(hqspi);
 765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #else
 766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     HAL_QSPI_TimeOutCallback(hqspi);
 889              		.loc 1 766 5
 890 0358 7868     		ldr	r0, [r7, #4]
 891 035a FFF7FEFF 		bl	HAL_QSPI_TimeOutCallback
 767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #endif
 768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****    else
 771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****    /* Nothing to do */
 773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 892              		.loc 1 774 1
 893 035e 02E0     		b	.L46
 894              	.L44:
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 895              		.loc 1 568 7
 896 0360 00BF     		nop
 897 0362 00E0     		b	.L46
 898              	.L45:
 718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 899              		.loc 1 718 8
 900 0364 00BF     		nop
 901              	.L25:
 902              	.L46:
 903              		.loc 1 774 1
 904 0366 00BF     		nop
 905 0368 1837     		adds	r7, r7, #24
 906              	.LCFI25:
 907              		.cfi_def_cfa_offset 8
 908 036a BD46     		mov	sp, r7
 909              	.LCFI26:
 910              		.cfi_def_cfa_register 13
 911              		@ sp needed
 912 036c 80BD     		pop	{r7, pc}
 913              	.L48:
 914 036e 00BF     		.align	2
 915              	.L47:
 916 0370 00000000 		.word	QSPI_DMAAbortCplt
 917              		.cfi_endproc
 918              	.LFE335:
 920              		.section	.text.HAL_QSPI_Command,"ax",%progbits
 921              		.align	1
 922              		.global	HAL_QSPI_Command
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 926              		.fpu fpv5-d16
 928              	HAL_QSPI_Command:
 929              	.LFB336:
 775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
 777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief Set the command configuration.
ARM GAS  /tmp/ccjfKiuT.s 			page 31


 778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
 779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param cmd : structure that contains the command configuration information
 780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param Timeout : Timeout duration
 781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @note   This function is used only in Indirect Read or Write Modes
 782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL status
 783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Command(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t Ti
 785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 930              		.loc 1 785 1
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 24
 933              		@ frame_needed = 1, uses_anonymous_args = 0
 934 0000 80B5     		push	{r7, lr}
 935              	.LCFI27:
 936              		.cfi_def_cfa_offset 8
 937              		.cfi_offset 7, -8
 938              		.cfi_offset 14, -4
 939 0002 88B0     		sub	sp, sp, #32
 940              	.LCFI28:
 941              		.cfi_def_cfa_offset 40
 942 0004 02AF     		add	r7, sp, #8
 943              	.LCFI29:
 944              		.cfi_def_cfa 7, 32
 945 0006 F860     		str	r0, [r7, #12]
 946 0008 B960     		str	r1, [r7, #8]
 947 000a 7A60     		str	r2, [r7, #4]
 786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
 787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
 948              		.loc 1 787 24
 949 000c FFF7FEFF 		bl	HAL_GetTick
 950 0010 3861     		str	r0, [r7, #16]
 788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Check the parameters */
 790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_INSTRUCTION_MODE(cmd->InstructionMode));
 791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     assert_param(IS_QSPI_INSTRUCTION(cmd->Instruction));
 794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_ADDRESS_MODE(cmd->AddressMode));
 797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     assert_param(IS_QSPI_ADDRESS_SIZE(cmd->AddressSize));
 800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_ALTERNATE_BYTES_MODE(cmd->AlternateByteMode));
 803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     assert_param(IS_QSPI_ALTERNATE_BYTES_SIZE(cmd->AlternateBytesSize));
 806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DUMMY_CYCLES(cmd->DummyCycles));
 809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DATA_MODE(cmd->DataMode));
 810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_MODE(cmd->DdrMode));
 812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_HHC(cmd->DdrHoldHalfCycle));
 813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_SIOO_MODE(cmd->SIOOMode));
ARM GAS  /tmp/ccjfKiuT.s 			page 32


 814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process locked */
 816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
 951              		.loc 1 816 3
 952 0012 FB68     		ldr	r3, [r7, #12]
 953 0014 93F84030 		ldrb	r3, [r3, #64]
 954 0018 DBB2     		uxtb	r3, r3
 955 001a 012B     		cmp	r3, #1
 956 001c 01D1     		bne	.L50
 957              		.loc 1 816 3 is_stmt 0 discriminator 1
 958 001e 0223     		movs	r3, #2
 959 0020 48E0     		b	.L51
 960              	.L50:
 961              		.loc 1 816 3 discriminator 2
 962 0022 FB68     		ldr	r3, [r7, #12]
 963 0024 0122     		movs	r2, #1
 964 0026 83F84020 		strb	r2, [r3, #64]
 817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
 965              		.loc 1 818 11 is_stmt 1 discriminator 2
 966 002a FB68     		ldr	r3, [r7, #12]
 967 002c 93F84130 		ldrb	r3, [r3, #65]
 968 0030 DBB2     		uxtb	r3, r3
 969              		.loc 1 818 5 discriminator 2
 970 0032 012B     		cmp	r3, #1
 971 0034 37D1     		bne	.L52
 819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 972              		.loc 1 820 22
 973 0036 FB68     		ldr	r3, [r7, #12]
 974 0038 0022     		movs	r2, #0
 975 003a 5A64     		str	r2, [r3, #68]
 821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Update QSPI state */
 823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->State = HAL_QSPI_STATE_BUSY;
 976              		.loc 1 823 18
 977 003c FB68     		ldr	r3, [r7, #12]
 978 003e 0222     		movs	r2, #2
 979 0040 83F84120 		strb	r2, [r3, #65]
 824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Wait till BUSY flag reset */
 826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 980              		.loc 1 826 14
 981 0044 7B68     		ldr	r3, [r7, #4]
 982 0046 0093     		str	r3, [sp]
 983 0048 3B69     		ldr	r3, [r7, #16]
 984 004a 0022     		movs	r2, #0
 985 004c 2021     		movs	r1, #32
 986 004e F868     		ldr	r0, [r7, #12]
 987 0050 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 988 0054 0346     		mov	r3, r0
 989 0056 FB75     		strb	r3, [r7, #23]
 827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if (status == HAL_OK)
 990              		.loc 1 828 8
 991 0058 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 992 005a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccjfKiuT.s 			page 33


 993 005c 25D1     		bne	.L53
 829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Call the configuration function */
 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 994              		.loc 1 831 7
 995 005e 0022     		movs	r2, #0
 996 0060 B968     		ldr	r1, [r7, #8]
 997 0062 F868     		ldr	r0, [r7, #12]
 998 0064 FFF7FEFF 		bl	QSPI_Config
 832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if (cmd->DataMode == QSPI_DATA_NONE)
 999              		.loc 1 833 14
 1000 0068 BB68     		ldr	r3, [r7, #8]
 1001 006a 5B6A     		ldr	r3, [r3, #36]
 1002              		.loc 1 833 10
 1003 006c 002B     		cmp	r3, #0
 1004 006e 15D1     		bne	.L54
 834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* When there is no data phase, the transfer start as soon as the configuration is done
 836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         so wait until TC flag is set to go back in idle state */
 837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 1005              		.loc 1 837 18
 1006 0070 7B68     		ldr	r3, [r7, #4]
 1007 0072 0093     		str	r3, [sp]
 1008 0074 3B69     		ldr	r3, [r7, #16]
 1009 0076 0122     		movs	r2, #1
 1010 0078 0221     		movs	r1, #2
 1011 007a F868     		ldr	r0, [r7, #12]
 1012 007c FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 1013 0080 0346     		mov	r3, r0
 1014 0082 FB75     		strb	r3, [r7, #23]
 838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         if (status == HAL_OK)
 1015              		.loc 1 839 12
 1016 0084 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1017 0086 002B     		cmp	r3, #0
 1018 0088 0FD1     		bne	.L53
 840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
 841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 1019              		.loc 1 841 11
 1020 008a FB68     		ldr	r3, [r7, #12]
 1021 008c 1B68     		ldr	r3, [r3]
 1022 008e 0222     		movs	r2, #2
 1023 0090 DA60     		str	r2, [r3, #12]
 842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Update QSPI state */
 844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           hqspi->State = HAL_QSPI_STATE_READY;
 1024              		.loc 1 844 24
 1025 0092 FB68     		ldr	r3, [r7, #12]
 1026 0094 0122     		movs	r2, #1
 1027 0096 83F84120 		strb	r2, [r3, #65]
 1028 009a 06E0     		b	.L53
 1029              	.L54:
 845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
 846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
 847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       else
 848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
ARM GAS  /tmp/ccjfKiuT.s 			page 34


 849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Update QSPI state */
 850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->State = HAL_QSPI_STATE_READY;
 1030              		.loc 1 850 22
 1031 009c FB68     		ldr	r3, [r7, #12]
 1032 009e 0122     		movs	r2, #1
 1033 00a0 83F84120 		strb	r2, [r3, #65]
 1034 00a4 01E0     		b	.L53
 1035              	.L52:
 851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
 852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
 853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
 855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = HAL_BUSY;
 1036              		.loc 1 856 12
 1037 00a6 0223     		movs	r3, #2
 1038 00a8 FB75     		strb	r3, [r7, #23]
 1039              	.L53:
 857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process unlocked */
 860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
 1040              		.loc 1 860 3
 1041 00aa FB68     		ldr	r3, [r7, #12]
 1042 00ac 0022     		movs	r2, #0
 1043 00ae 83F84020 		strb	r2, [r3, #64]
 861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Return function status */
 863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
 1044              		.loc 1 863 10
 1045 00b2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1046              	.L51:
 864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 1047              		.loc 1 864 1
 1048 00b4 1846     		mov	r0, r3
 1049 00b6 1837     		adds	r7, r7, #24
 1050              	.LCFI30:
 1051              		.cfi_def_cfa_offset 8
 1052 00b8 BD46     		mov	sp, r7
 1053              	.LCFI31:
 1054              		.cfi_def_cfa_register 13
 1055              		@ sp needed
 1056 00ba 80BD     		pop	{r7, pc}
 1057              		.cfi_endproc
 1058              	.LFE336:
 1060              		.section	.text.HAL_QSPI_Command_IT,"ax",%progbits
 1061              		.align	1
 1062              		.global	HAL_QSPI_Command_IT
 1063              		.syntax unified
 1064              		.thumb
 1065              		.thumb_func
 1066              		.fpu fpv5-d16
 1068              	HAL_QSPI_Command_IT:
 1069              	.LFB337:
 865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
 867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief Set the command configuration in interrupt mode.
ARM GAS  /tmp/ccjfKiuT.s 			page 35


 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
 869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param cmd : structure that contains the command configuration information
 870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @note   This function is used only in Indirect Read or Write Modes
 871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL status
 872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Command_IT(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd)
 874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 1070              		.loc 1 874 1
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 16
 1073              		@ frame_needed = 1, uses_anonymous_args = 0
 1074 0000 80B5     		push	{r7, lr}
 1075              	.LCFI32:
 1076              		.cfi_def_cfa_offset 8
 1077              		.cfi_offset 7, -8
 1078              		.cfi_offset 14, -4
 1079 0002 86B0     		sub	sp, sp, #24
 1080              	.LCFI33:
 1081              		.cfi_def_cfa_offset 32
 1082 0004 02AF     		add	r7, sp, #8
 1083              	.LCFI34:
 1084              		.cfi_def_cfa 7, 24
 1085 0006 7860     		str	r0, [r7, #4]
 1086 0008 3960     		str	r1, [r7]
 875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
 1087              		.loc 1 876 24
 1088 000a FFF7FEFF 		bl	HAL_GetTick
 1089 000e B860     		str	r0, [r7, #8]
 877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Check the parameters */
 879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_INSTRUCTION_MODE(cmd->InstructionMode));
 880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     assert_param(IS_QSPI_INSTRUCTION(cmd->Instruction));
 883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_ADDRESS_MODE(cmd->AddressMode));
 886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     assert_param(IS_QSPI_ADDRESS_SIZE(cmd->AddressSize));
 889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_ALTERNATE_BYTES_MODE(cmd->AlternateByteMode));
 892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     assert_param(IS_QSPI_ALTERNATE_BYTES_SIZE(cmd->AlternateBytesSize));
 895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DUMMY_CYCLES(cmd->DummyCycles));
 898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DATA_MODE(cmd->DataMode));
 899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_MODE(cmd->DdrMode));
 901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_HHC(cmd->DdrHoldHalfCycle));
 902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_SIOO_MODE(cmd->SIOOMode));
 903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process locked */
ARM GAS  /tmp/ccjfKiuT.s 			page 36


 905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
 1090              		.loc 1 905 3
 1091 0010 7B68     		ldr	r3, [r7, #4]
 1092 0012 93F84030 		ldrb	r3, [r3, #64]
 1093 0016 DBB2     		uxtb	r3, r3
 1094 0018 012B     		cmp	r3, #1
 1095 001a 01D1     		bne	.L56
 1096              		.loc 1 905 3 is_stmt 0 discriminator 1
 1097 001c 0223     		movs	r3, #2
 1098 001e 51E0     		b	.L57
 1099              	.L56:
 1100              		.loc 1 905 3 discriminator 2
 1101 0020 7B68     		ldr	r3, [r7, #4]
 1102 0022 0122     		movs	r2, #1
 1103 0024 83F84020 		strb	r2, [r3, #64]
 906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
 1104              		.loc 1 907 11 is_stmt 1 discriminator 2
 1105 0028 7B68     		ldr	r3, [r7, #4]
 1106 002a 93F84130 		ldrb	r3, [r3, #65]
 1107 002e DBB2     		uxtb	r3, r3
 1108              		.loc 1 907 5 discriminator 2
 1109 0030 012B     		cmp	r3, #1
 1110 0032 40D1     		bne	.L58
 908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 1111              		.loc 1 909 22
 1112 0034 7B68     		ldr	r3, [r7, #4]
 1113 0036 0022     		movs	r2, #0
 1114 0038 5A64     		str	r2, [r3, #68]
 910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Update QSPI state */
 912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->State = HAL_QSPI_STATE_BUSY;
 1115              		.loc 1 912 18
 1116 003a 7B68     		ldr	r3, [r7, #4]
 1117 003c 0222     		movs	r2, #2
 1118 003e 83F84120 		strb	r2, [r3, #65]
 913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Wait till BUSY flag reset */
 915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout
 1119              		.loc 1 915 14
 1120 0042 7B68     		ldr	r3, [r7, #4]
 1121 0044 9B6C     		ldr	r3, [r3, #72]
 1122 0046 0093     		str	r3, [sp]
 1123 0048 BB68     		ldr	r3, [r7, #8]
 1124 004a 0022     		movs	r2, #0
 1125 004c 2021     		movs	r1, #32
 1126 004e 7868     		ldr	r0, [r7, #4]
 1127 0050 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 1128 0054 0346     		mov	r3, r0
 1129 0056 FB73     		strb	r3, [r7, #15]
 916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if (status == HAL_OK)
 1130              		.loc 1 917 8
 1131 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1132 005a 002B     		cmp	r3, #0
 1133 005c 26D1     		bne	.L59
ARM GAS  /tmp/ccjfKiuT.s 			page 37


 918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if (cmd->DataMode == QSPI_DATA_NONE)
 1134              		.loc 1 919 14
 1135 005e 3B68     		ldr	r3, [r7]
 1136 0060 5B6A     		ldr	r3, [r3, #36]
 1137              		.loc 1 919 10
 1138 0062 002B     		cmp	r3, #0
 1139 0064 03D1     		bne	.L60
 920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Clear interrupt */
 922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TE | QSPI_FLAG_TC);
 1140              		.loc 1 922 9
 1141 0066 7B68     		ldr	r3, [r7, #4]
 1142 0068 1B68     		ldr	r3, [r3]
 1143 006a 0322     		movs	r2, #3
 1144 006c DA60     		str	r2, [r3, #12]
 1145              	.L60:
 923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
 924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Call the configuration function */
 926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 1146              		.loc 1 926 7
 1147 006e 0022     		movs	r2, #0
 1148 0070 3968     		ldr	r1, [r7]
 1149 0072 7868     		ldr	r0, [r7, #4]
 1150 0074 FFF7FEFF 		bl	QSPI_Config
 927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if (cmd->DataMode == QSPI_DATA_NONE)
 1151              		.loc 1 928 14
 1152 0078 3B68     		ldr	r3, [r7]
 1153 007a 5B6A     		ldr	r3, [r3, #36]
 1154              		.loc 1 928 10
 1155 007c 002B     		cmp	r3, #0
 1156 007e 0CD1     		bne	.L61
 929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* When there is no data phase, the transfer start as soon as the configuration is done
 931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         so activate TC and TE interrupts */
 932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Process unlocked */
 933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         __HAL_UNLOCK(hqspi);
 1157              		.loc 1 933 9
 1158 0080 7B68     		ldr	r3, [r7, #4]
 1159 0082 0022     		movs	r2, #0
 1160 0084 83F84020 		strb	r2, [r3, #64]
 934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Enable the QSPI Transfer Error Interrupt */
 936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TE | QSPI_IT_TC);
 1161              		.loc 1 936 9
 1162 0088 7B68     		ldr	r3, [r7, #4]
 1163 008a 1B68     		ldr	r3, [r3]
 1164 008c 1A68     		ldr	r2, [r3]
 1165 008e 7B68     		ldr	r3, [r7, #4]
 1166 0090 1B68     		ldr	r3, [r3]
 1167 0092 42F44032 		orr	r2, r2, #196608
 1168 0096 1A60     		str	r2, [r3]
 1169 0098 13E0     		b	.L62
 1170              	.L61:
 937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
ARM GAS  /tmp/ccjfKiuT.s 			page 38


 938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       else
 939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Update QSPI state */
 941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->State = HAL_QSPI_STATE_READY;
 1171              		.loc 1 941 22
 1172 009a 7B68     		ldr	r3, [r7, #4]
 1173 009c 0122     		movs	r2, #1
 1174 009e 83F84120 		strb	r2, [r3, #65]
 942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Process unlocked */
 944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         __HAL_UNLOCK(hqspi);
 1175              		.loc 1 944 9
 1176 00a2 7B68     		ldr	r3, [r7, #4]
 1177 00a4 0022     		movs	r2, #0
 1178 00a6 83F84020 		strb	r2, [r3, #64]
 1179 00aa 0AE0     		b	.L62
 1180              	.L59:
 945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
 946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
 947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else
 948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Process unlocked */
 950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
 1181              		.loc 1 950 7
 1182 00ac 7B68     		ldr	r3, [r7, #4]
 1183 00ae 0022     		movs	r2, #0
 1184 00b0 83F84020 		strb	r2, [r3, #64]
 1185 00b4 05E0     		b	.L62
 1186              	.L58:
 951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
 952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
 954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = HAL_BUSY;
 1187              		.loc 1 955 12
 1188 00b6 0223     		movs	r3, #2
 1189 00b8 FB73     		strb	r3, [r7, #15]
 956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Process unlocked */
 958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     __HAL_UNLOCK(hqspi);
 1190              		.loc 1 958 5
 1191 00ba 7B68     		ldr	r3, [r7, #4]
 1192 00bc 0022     		movs	r2, #0
 1193 00be 83F84020 		strb	r2, [r3, #64]
 1194              	.L62:
 959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
 960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Return function status */
 962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
 1195              		.loc 1 962 10
 1196 00c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1197              	.L57:
 963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 1198              		.loc 1 963 1
 1199 00c4 1846     		mov	r0, r3
 1200 00c6 1037     		adds	r7, r7, #16
 1201              	.LCFI35:
ARM GAS  /tmp/ccjfKiuT.s 			page 39


 1202              		.cfi_def_cfa_offset 8
 1203 00c8 BD46     		mov	sp, r7
 1204              	.LCFI36:
 1205              		.cfi_def_cfa_register 13
 1206              		@ sp needed
 1207 00ca 80BD     		pop	{r7, pc}
 1208              		.cfi_endproc
 1209              	.LFE337:
 1211              		.section	.text.HAL_QSPI_Transmit,"ax",%progbits
 1212              		.align	1
 1213              		.global	HAL_QSPI_Transmit
 1214              		.syntax unified
 1215              		.thumb
 1216              		.thumb_func
 1217              		.fpu fpv5-d16
 1219              	HAL_QSPI_Transmit:
 1220              	.LFB338:
 964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
 966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief Transmit an amount of data in blocking mode.
 967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
 968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param pData : pointer to data buffer
 969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param Timeout : Timeout duration
 970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @note   This function is used only in Indirect Write Mode
 971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   
 972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL status
 973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
 974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Transmit(QSPI_HandleTypeDef *hqspi, uint8_t *pData, uint32_t Timeout)
 975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 1221              		.loc 1 975 1
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 32
 1224              		@ frame_needed = 1, uses_anonymous_args = 0
 1225 0000 80B5     		push	{r7, lr}
 1226              	.LCFI37:
 1227              		.cfi_def_cfa_offset 8
 1228              		.cfi_offset 7, -8
 1229              		.cfi_offset 14, -4
 1230 0002 8AB0     		sub	sp, sp, #40
 1231              	.LCFI38:
 1232              		.cfi_def_cfa_offset 48
 1233 0004 02AF     		add	r7, sp, #8
 1234              	.LCFI39:
 1235              		.cfi_def_cfa 7, 40
 1236 0006 F860     		str	r0, [r7, #12]
 1237 0008 B960     		str	r1, [r7, #8]
 1238 000a 7A60     		str	r2, [r7, #4]
 976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 1239              		.loc 1 976 21
 1240 000c 0023     		movs	r3, #0
 1241 000e FB77     		strb	r3, [r7, #31]
 977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
 1242              		.loc 1 977 24
 1243 0010 FFF7FEFF 		bl	HAL_GetTick
 1244 0014 B861     		str	r0, [r7, #24]
 978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __IO uint32_t *data_reg = &hqspi->Instance->DR;
 1245              		.loc 1 978 35
ARM GAS  /tmp/ccjfKiuT.s 			page 40


 1246 0016 FB68     		ldr	r3, [r7, #12]
 1247 0018 1B68     		ldr	r3, [r3]
 1248              		.loc 1 978 18
 1249 001a 2033     		adds	r3, r3, #32
 1250 001c 7B61     		str	r3, [r7, #20]
 979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process locked */
 981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
 1251              		.loc 1 981 3
 1252 001e FB68     		ldr	r3, [r7, #12]
 1253 0020 93F84030 		ldrb	r3, [r3, #64]
 1254 0024 DBB2     		uxtb	r3, r3
 1255 0026 012B     		cmp	r3, #1
 1256 0028 01D1     		bne	.L64
 1257              		.loc 1 981 3 is_stmt 0 discriminator 1
 1258 002a 0223     		movs	r3, #2
 1259 002c 76E0     		b	.L65
 1260              	.L64:
 1261              		.loc 1 981 3 discriminator 2
 1262 002e FB68     		ldr	r3, [r7, #12]
 1263 0030 0122     		movs	r2, #1
 1264 0032 83F84020 		strb	r2, [r3, #64]
 982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
 1265              		.loc 1 983 11 is_stmt 1 discriminator 2
 1266 0036 FB68     		ldr	r3, [r7, #12]
 1267 0038 93F84130 		ldrb	r3, [r3, #65]
 1268 003c DBB2     		uxtb	r3, r3
 1269              		.loc 1 983 5 discriminator 2
 1270 003e 012B     		cmp	r3, #1
 1271 0040 65D1     		bne	.L66
 984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 1272              		.loc 1 985 22
 1273 0042 FB68     		ldr	r3, [r7, #12]
 1274 0044 0022     		movs	r2, #0
 1275 0046 5A64     		str	r2, [r3, #68]
 986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if(pData != NULL )
 1276              		.loc 1 987 7
 1277 0048 BB68     		ldr	r3, [r7, #8]
 1278 004a 002B     		cmp	r3, #0
 1279 004c 56D0     		beq	.L67
 988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Update state */
 990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 1280              		.loc 1 990 20
 1281 004e FB68     		ldr	r3, [r7, #12]
 1282 0050 1222     		movs	r2, #18
 1283 0052 83F84120 		strb	r2, [r3, #65]
 991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure counters and size of the handle */
 993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 1284              		.loc 1 993 28
 1285 0056 FB68     		ldr	r3, [r7, #12]
 1286 0058 1B68     		ldr	r3, [r3]
 1287 005a 1B69     		ldr	r3, [r3, #16]
ARM GAS  /tmp/ccjfKiuT.s 			page 41


 1288              		.loc 1 993 59
 1289 005c 5A1C     		adds	r2, r3, #1
 1290              		.loc 1 993 26
 1291 005e FB68     		ldr	r3, [r7, #12]
 1292 0060 DA62     		str	r2, [r3, #44]
 994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 1293              		.loc 1 994 27
 1294 0062 FB68     		ldr	r3, [r7, #12]
 1295 0064 1B68     		ldr	r3, [r3]
 1296 0066 1B69     		ldr	r3, [r3, #16]
 1297              		.loc 1 994 58
 1298 0068 5A1C     		adds	r2, r3, #1
 1299              		.loc 1 994 25
 1300 006a FB68     		ldr	r3, [r7, #12]
 1301 006c 9A62     		str	r2, [r3, #40]
 995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->pTxBuffPtr = pData;
 1302              		.loc 1 995 25
 1303 006e FB68     		ldr	r3, [r7, #12]
 1304 0070 BA68     		ldr	r2, [r7, #8]
 1305 0072 5A62     		str	r2, [r3, #36]
 996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure QSPI: CCR register with functional as indirect write */
 998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 1306              		.loc 1 998 7
 1307 0074 FB68     		ldr	r3, [r7, #12]
 1308 0076 1B68     		ldr	r3, [r3]
 1309 0078 5A69     		ldr	r2, [r3, #20]
 1310 007a FB68     		ldr	r3, [r7, #12]
 1311 007c 1B68     		ldr	r3, [r3]
 1312 007e 22F04062 		bic	r2, r2, #201326592
 1313 0082 5A61     		str	r2, [r3, #20]
 999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       while(hqspi->TxXferCount > 0U)
 1314              		.loc 1 1000 12
 1315 0084 1BE0     		b	.L68
 1316              	.L71:
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
1002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Wait until FT flag is set to send data */
1003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 1317              		.loc 1 1003 18
 1318 0086 7B68     		ldr	r3, [r7, #4]
 1319 0088 0093     		str	r3, [sp]
 1320 008a BB69     		ldr	r3, [r7, #24]
 1321 008c 0122     		movs	r2, #1
 1322 008e 0421     		movs	r1, #4
 1323 0090 F868     		ldr	r0, [r7, #12]
 1324 0092 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 1325 0096 0346     		mov	r3, r0
 1326 0098 FB77     		strb	r3, [r7, #31]
1004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         if (status != HAL_OK)
 1327              		.loc 1 1005 12
 1328 009a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1329 009c 002B     		cmp	r3, #0
 1330 009e 13D1     		bne	.L74
1006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
1007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           break;
ARM GAS  /tmp/ccjfKiuT.s 			page 42


1008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
1009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 1331              		.loc 1 1010 45
 1332 00a0 FB68     		ldr	r3, [r7, #12]
 1333 00a2 5B6A     		ldr	r3, [r3, #36]
 1334              		.loc 1 1010 39
 1335 00a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1336              		.loc 1 1010 37
 1337 00a6 7B69     		ldr	r3, [r7, #20]
 1338 00a8 1A70     		strb	r2, [r3]
1011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->pTxBuffPtr++;
 1339              		.loc 1 1011 14
 1340 00aa FB68     		ldr	r3, [r7, #12]
 1341 00ac 5B6A     		ldr	r3, [r3, #36]
 1342              		.loc 1 1011 26
 1343 00ae 5A1C     		adds	r2, r3, #1
 1344 00b0 FB68     		ldr	r3, [r7, #12]
 1345 00b2 5A62     		str	r2, [r3, #36]
1012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->TxXferCount--;
 1346              		.loc 1 1012 14
 1347 00b4 FB68     		ldr	r3, [r7, #12]
 1348 00b6 DB6A     		ldr	r3, [r3, #44]
 1349              		.loc 1 1012 27
 1350 00b8 5A1E     		subs	r2, r3, #1
 1351 00ba FB68     		ldr	r3, [r7, #12]
 1352 00bc DA62     		str	r2, [r3, #44]
 1353              	.L68:
1000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 1354              		.loc 1 1000 18
 1355 00be FB68     		ldr	r3, [r7, #12]
 1356 00c0 DB6A     		ldr	r3, [r3, #44]
1000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 1357              		.loc 1 1000 12
 1358 00c2 002B     		cmp	r3, #0
 1359 00c4 DFD1     		bne	.L71
 1360 00c6 00E0     		b	.L70
 1361              	.L74:
1007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
 1362              		.loc 1 1007 11
 1363 00c8 00BF     		nop
 1364              	.L70:
1013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
1014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if (status == HAL_OK)
 1365              		.loc 1 1015 10
 1366 00ca FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1367 00cc 002B     		cmp	r3, #0
 1368 00ce 10D1     		bne	.L72
1016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
1017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Wait until TC flag is set to go back in idle state */
1018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 1369              		.loc 1 1018 18
 1370 00d0 7B68     		ldr	r3, [r7, #4]
 1371 00d2 0093     		str	r3, [sp]
 1372 00d4 BB69     		ldr	r3, [r7, #24]
 1373 00d6 0122     		movs	r2, #1
ARM GAS  /tmp/ccjfKiuT.s 			page 43


 1374 00d8 0221     		movs	r1, #2
 1375 00da F868     		ldr	r0, [r7, #12]
 1376 00dc FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 1377 00e0 0346     		mov	r3, r0
 1378 00e2 FB77     		strb	r3, [r7, #31]
1019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         if (status == HAL_OK)
 1379              		.loc 1 1020 12
 1380 00e4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1381 00e6 002B     		cmp	r3, #0
 1382 00e8 03D1     		bne	.L72
1021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
1022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Clear Transfer Complete bit */
1023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 1383              		.loc 1 1023 11
 1384 00ea FB68     		ldr	r3, [r7, #12]
 1385 00ec 1B68     		ldr	r3, [r3]
 1386 00ee 0222     		movs	r2, #2
 1387 00f0 DA60     		str	r2, [r3, #12]
 1388              	.L72:
1024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
1026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
1027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Update QSPI state */
1029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
 1389              		.loc 1 1029 20
 1390 00f2 FB68     		ldr	r3, [r7, #12]
 1391 00f4 0122     		movs	r2, #1
 1392 00f6 83F84120 		strb	r2, [r3, #65]
 1393 00fa 0AE0     		b	.L73
 1394              	.L67:
1030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else
1032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
1033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 1395              		.loc 1 1033 24
 1396 00fc FB68     		ldr	r3, [r7, #12]
 1397 00fe 5B6C     		ldr	r3, [r3, #68]
 1398 0100 43F00802 		orr	r2, r3, #8
 1399 0104 FB68     		ldr	r3, [r7, #12]
 1400 0106 5A64     		str	r2, [r3, #68]
1034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       status = HAL_ERROR;
 1401              		.loc 1 1034 14
 1402 0108 0123     		movs	r3, #1
 1403 010a FB77     		strb	r3, [r7, #31]
 1404 010c 01E0     		b	.L73
 1405              	.L66:
1035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
1038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = HAL_BUSY;
 1406              		.loc 1 1039 12
 1407 010e 0223     		movs	r3, #2
 1408 0110 FB77     		strb	r3, [r7, #31]
 1409              	.L73:
ARM GAS  /tmp/ccjfKiuT.s 			page 44


1040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process unlocked */
1043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
 1410              		.loc 1 1043 3
 1411 0112 FB68     		ldr	r3, [r7, #12]
 1412 0114 0022     		movs	r2, #0
 1413 0116 83F84020 		strb	r2, [r3, #64]
1044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
 1414              		.loc 1 1045 10
 1415 011a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1416              	.L65:
1046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 1417              		.loc 1 1046 1
 1418 011c 1846     		mov	r0, r3
 1419 011e 2037     		adds	r7, r7, #32
 1420              	.LCFI40:
 1421              		.cfi_def_cfa_offset 8
 1422 0120 BD46     		mov	sp, r7
 1423              	.LCFI41:
 1424              		.cfi_def_cfa_register 13
 1425              		@ sp needed
 1426 0122 80BD     		pop	{r7, pc}
 1427              		.cfi_endproc
 1428              	.LFE338:
 1430              		.section	.text.HAL_QSPI_Receive,"ax",%progbits
 1431              		.align	1
 1432              		.global	HAL_QSPI_Receive
 1433              		.syntax unified
 1434              		.thumb
 1435              		.thumb_func
 1436              		.fpu fpv5-d16
 1438              	HAL_QSPI_Receive:
 1439              	.LFB339:
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
1050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief Receive an amount of data in blocking mode.
1051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
1052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param pData : pointer to data buffer
1053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param Timeout : Timeout duration
1054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @note   This function is used only in Indirect Read Mode
1055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL status
1056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Receive(QSPI_HandleTypeDef *hqspi, uint8_t *pData, uint32_t Timeout)
1058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 1440              		.loc 1 1058 1
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 32
 1443              		@ frame_needed = 1, uses_anonymous_args = 0
 1444 0000 80B5     		push	{r7, lr}
 1445              	.LCFI42:
 1446              		.cfi_def_cfa_offset 8
 1447              		.cfi_offset 7, -8
 1448              		.cfi_offset 14, -4
 1449 0002 8AB0     		sub	sp, sp, #40
ARM GAS  /tmp/ccjfKiuT.s 			page 45


 1450              	.LCFI43:
 1451              		.cfi_def_cfa_offset 48
 1452 0004 02AF     		add	r7, sp, #8
 1453              	.LCFI44:
 1454              		.cfi_def_cfa 7, 40
 1455 0006 F860     		str	r0, [r7, #12]
 1456 0008 B960     		str	r1, [r7, #8]
 1457 000a 7A60     		str	r2, [r7, #4]
1059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 1458              		.loc 1 1059 21
 1459 000c 0023     		movs	r3, #0
 1460 000e FB77     		strb	r3, [r7, #31]
1060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
 1461              		.loc 1 1060 24
 1462 0010 FFF7FEFF 		bl	HAL_GetTick
 1463 0014 B861     		str	r0, [r7, #24]
1061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 1464              		.loc 1 1061 23
 1465 0016 FB68     		ldr	r3, [r7, #12]
 1466 0018 1B68     		ldr	r3, [r3]
 1467              		.loc 1 1061 12
 1468 001a 9B69     		ldr	r3, [r3, #24]
 1469 001c 7B61     		str	r3, [r7, #20]
1062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __IO uint32_t *data_reg = &hqspi->Instance->DR;
 1470              		.loc 1 1062 35
 1471 001e FB68     		ldr	r3, [r7, #12]
 1472 0020 1B68     		ldr	r3, [r3]
 1473              		.loc 1 1062 18
 1474 0022 2033     		adds	r3, r3, #32
 1475 0024 3B61     		str	r3, [r7, #16]
1063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process locked */
1065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
 1476              		.loc 1 1065 3
 1477 0026 FB68     		ldr	r3, [r7, #12]
 1478 0028 93F84030 		ldrb	r3, [r3, #64]
 1479 002c DBB2     		uxtb	r3, r3
 1480 002e 012B     		cmp	r3, #1
 1481 0030 01D1     		bne	.L76
 1482              		.loc 1 1065 3 is_stmt 0 discriminator 1
 1483 0032 0223     		movs	r3, #2
 1484 0034 7DE0     		b	.L77
 1485              	.L76:
 1486              		.loc 1 1065 3 discriminator 2
 1487 0036 FB68     		ldr	r3, [r7, #12]
 1488 0038 0122     		movs	r2, #1
 1489 003a 83F84020 		strb	r2, [r3, #64]
1066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
 1490              		.loc 1 1067 11 is_stmt 1 discriminator 2
 1491 003e FB68     		ldr	r3, [r7, #12]
 1492 0040 93F84130 		ldrb	r3, [r3, #65]
 1493 0044 DBB2     		uxtb	r3, r3
 1494              		.loc 1 1067 5 discriminator 2
 1495 0046 012B     		cmp	r3, #1
 1496 0048 6CD1     		bne	.L78
1068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
ARM GAS  /tmp/ccjfKiuT.s 			page 46


1069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 1497              		.loc 1 1069 22
 1498 004a FB68     		ldr	r3, [r7, #12]
 1499 004c 0022     		movs	r2, #0
 1500 004e 5A64     		str	r2, [r3, #68]
1070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if(pData != NULL )
 1501              		.loc 1 1071 7
 1502 0050 BB68     		ldr	r3, [r7, #8]
 1503 0052 002B     		cmp	r3, #0
 1504 0054 5DD0     		beq	.L79
1072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
1073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Update state */
1074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 1505              		.loc 1 1074 20
 1506 0056 FB68     		ldr	r3, [r7, #12]
 1507 0058 2222     		movs	r2, #34
 1508 005a 83F84120 		strb	r2, [r3, #65]
1075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure counters and size of the handle */
1077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 1509              		.loc 1 1077 28
 1510 005e FB68     		ldr	r3, [r7, #12]
 1511 0060 1B68     		ldr	r3, [r3]
 1512 0062 1B69     		ldr	r3, [r3, #16]
 1513              		.loc 1 1077 59
 1514 0064 5A1C     		adds	r2, r3, #1
 1515              		.loc 1 1077 26
 1516 0066 FB68     		ldr	r3, [r7, #12]
 1517 0068 9A63     		str	r2, [r3, #56]
1078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 1518              		.loc 1 1078 27
 1519 006a FB68     		ldr	r3, [r7, #12]
 1520 006c 1B68     		ldr	r3, [r3]
 1521 006e 1B69     		ldr	r3, [r3, #16]
 1522              		.loc 1 1078 58
 1523 0070 5A1C     		adds	r2, r3, #1
 1524              		.loc 1 1078 25
 1525 0072 FB68     		ldr	r3, [r7, #12]
 1526 0074 5A63     		str	r2, [r3, #52]
1079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->pRxBuffPtr = pData;
 1527              		.loc 1 1079 25
 1528 0076 FB68     		ldr	r3, [r7, #12]
 1529 0078 BA68     		ldr	r2, [r7, #8]
 1530 007a 1A63     		str	r2, [r3, #48]
1080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure QSPI: CCR register with functional as indirect read */
1082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 1531              		.loc 1 1082 7
 1532 007c FB68     		ldr	r3, [r7, #12]
 1533 007e 1B68     		ldr	r3, [r3]
 1534 0080 5B69     		ldr	r3, [r3, #20]
 1535 0082 23F04062 		bic	r2, r3, #201326592
 1536 0086 FB68     		ldr	r3, [r7, #12]
 1537 0088 1B68     		ldr	r3, [r3]
 1538 008a 42F08062 		orr	r2, r2, #67108864
 1539 008e 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/ccjfKiuT.s 			page 47


1083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Start the transfer by re-writing the address in AR register */
1085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->AR, addr_reg);
 1540              		.loc 1 1085 7
 1541 0090 FB68     		ldr	r3, [r7, #12]
 1542 0092 1B68     		ldr	r3, [r3]
 1543 0094 7A69     		ldr	r2, [r7, #20]
 1544 0096 9A61     		str	r2, [r3, #24]
1086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       while(hqspi->RxXferCount > 0U)
 1545              		.loc 1 1087 12
 1546 0098 1CE0     		b	.L80
 1547              	.L83:
1088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
1089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Wait until FT or TC flag is set to read received data */
1090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstar
 1548              		.loc 1 1090 18
 1549 009a 7B68     		ldr	r3, [r7, #4]
 1550 009c 0093     		str	r3, [sp]
 1551 009e BB69     		ldr	r3, [r7, #24]
 1552 00a0 0122     		movs	r2, #1
 1553 00a2 0621     		movs	r1, #6
 1554 00a4 F868     		ldr	r0, [r7, #12]
 1555 00a6 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 1556 00aa 0346     		mov	r3, r0
 1557 00ac FB77     		strb	r3, [r7, #31]
1091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         if  (status != HAL_OK)
 1558              		.loc 1 1092 13
 1559 00ae FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1560 00b0 002B     		cmp	r3, #0
 1561 00b2 14D1     		bne	.L86
1093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
1094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           break;
1095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
1096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 1562              		.loc 1 1097 15
 1563 00b4 FB68     		ldr	r3, [r7, #12]
 1564 00b6 1B6B     		ldr	r3, [r3, #48]
 1565              		.loc 1 1097 30
 1566 00b8 3A69     		ldr	r2, [r7, #16]
 1567 00ba 1278     		ldrb	r2, [r2]
 1568 00bc D2B2     		uxtb	r2, r2
 1569              		.loc 1 1097 28
 1570 00be 1A70     		strb	r2, [r3]
1098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->pRxBuffPtr++;
 1571              		.loc 1 1098 14
 1572 00c0 FB68     		ldr	r3, [r7, #12]
 1573 00c2 1B6B     		ldr	r3, [r3, #48]
 1574              		.loc 1 1098 26
 1575 00c4 5A1C     		adds	r2, r3, #1
 1576 00c6 FB68     		ldr	r3, [r7, #12]
 1577 00c8 1A63     		str	r2, [r3, #48]
1099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->RxXferCount--;
 1578              		.loc 1 1099 14
 1579 00ca FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccjfKiuT.s 			page 48


 1580 00cc 9B6B     		ldr	r3, [r3, #56]
 1581              		.loc 1 1099 27
 1582 00ce 5A1E     		subs	r2, r3, #1
 1583 00d0 FB68     		ldr	r3, [r7, #12]
 1584 00d2 9A63     		str	r2, [r3, #56]
 1585              	.L80:
1087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 1586              		.loc 1 1087 18
 1587 00d4 FB68     		ldr	r3, [r7, #12]
 1588 00d6 9B6B     		ldr	r3, [r3, #56]
1087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 1589              		.loc 1 1087 12
 1590 00d8 002B     		cmp	r3, #0
 1591 00da DED1     		bne	.L83
 1592 00dc 00E0     		b	.L82
 1593              	.L86:
1094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
 1594              		.loc 1 1094 11
 1595 00de 00BF     		nop
 1596              	.L82:
1100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
1101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if (status == HAL_OK)
 1597              		.loc 1 1102 10
 1598 00e0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1599 00e2 002B     		cmp	r3, #0
 1600 00e4 10D1     		bne	.L84
1103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
1104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Wait until TC flag is set to go back in idle state */
1105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 1601              		.loc 1 1105 18
 1602 00e6 7B68     		ldr	r3, [r7, #4]
 1603 00e8 0093     		str	r3, [sp]
 1604 00ea BB69     		ldr	r3, [r7, #24]
 1605 00ec 0122     		movs	r2, #1
 1606 00ee 0221     		movs	r1, #2
 1607 00f0 F868     		ldr	r0, [r7, #12]
 1608 00f2 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 1609 00f6 0346     		mov	r3, r0
 1610 00f8 FB77     		strb	r3, [r7, #31]
1106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         if  (status == HAL_OK)
 1611              		.loc 1 1107 13
 1612 00fa FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1613 00fc 002B     		cmp	r3, #0
 1614 00fe 03D1     		bne	.L84
1108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
1109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Clear Transfer Complete bit */
1110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 1615              		.loc 1 1110 11
 1616 0100 FB68     		ldr	r3, [r7, #12]
 1617 0102 1B68     		ldr	r3, [r3]
 1618 0104 0222     		movs	r2, #2
 1619 0106 DA60     		str	r2, [r3, #12]
 1620              	.L84:
1111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
ARM GAS  /tmp/ccjfKiuT.s 			page 49


1113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
1114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Update QSPI state */
1116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
 1621              		.loc 1 1116 20
 1622 0108 FB68     		ldr	r3, [r7, #12]
 1623 010a 0122     		movs	r2, #1
 1624 010c 83F84120 		strb	r2, [r3, #65]
 1625 0110 0AE0     		b	.L85
 1626              	.L79:
1117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else
1119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
1120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 1627              		.loc 1 1120 24
 1628 0112 FB68     		ldr	r3, [r7, #12]
 1629 0114 5B6C     		ldr	r3, [r3, #68]
 1630 0116 43F00802 		orr	r2, r3, #8
 1631 011a FB68     		ldr	r3, [r7, #12]
 1632 011c 5A64     		str	r2, [r3, #68]
1121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       status = HAL_ERROR;
 1633              		.loc 1 1121 14
 1634 011e 0123     		movs	r3, #1
 1635 0120 FB77     		strb	r3, [r7, #31]
 1636 0122 01E0     		b	.L85
 1637              	.L78:
1122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
1125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = HAL_BUSY;
 1638              		.loc 1 1126 12
 1639 0124 0223     		movs	r3, #2
 1640 0126 FB77     		strb	r3, [r7, #31]
 1641              	.L85:
1127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process unlocked */
1130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
 1642              		.loc 1 1130 3
 1643 0128 FB68     		ldr	r3, [r7, #12]
 1644 012a 0022     		movs	r2, #0
 1645 012c 83F84020 		strb	r2, [r3, #64]
1131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
 1646              		.loc 1 1132 10
 1647 0130 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1648              	.L77:
1133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 1649              		.loc 1 1133 1
 1650 0132 1846     		mov	r0, r3
 1651 0134 2037     		adds	r7, r7, #32
 1652              	.LCFI45:
 1653              		.cfi_def_cfa_offset 8
 1654 0136 BD46     		mov	sp, r7
 1655              	.LCFI46:
 1656              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccjfKiuT.s 			page 50


 1657              		@ sp needed
 1658 0138 80BD     		pop	{r7, pc}
 1659              		.cfi_endproc
 1660              	.LFE339:
 1662              		.section	.text.HAL_QSPI_Transmit_IT,"ax",%progbits
 1663              		.align	1
 1664              		.global	HAL_QSPI_Transmit_IT
 1665              		.syntax unified
 1666              		.thumb
 1667              		.thumb_func
 1668              		.fpu fpv5-d16
 1670              	HAL_QSPI_Transmit_IT:
 1671              	.LFB340:
1134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
1136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Send an amount of data in non-blocking mode with interrupt.
1137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  pData : pointer to data buffer
1139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @note   This function is used only in Indirect Write Mode
1140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL status
1141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Transmit_IT(QSPI_HandleTypeDef *hqspi, uint8_t *pData)
1143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 1672              		.loc 1 1143 1
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 16
 1675              		@ frame_needed = 1, uses_anonymous_args = 0
 1676              		@ link register save eliminated.
 1677 0000 80B4     		push	{r7}
 1678              	.LCFI47:
 1679              		.cfi_def_cfa_offset 4
 1680              		.cfi_offset 7, -4
 1681 0002 85B0     		sub	sp, sp, #20
 1682              	.LCFI48:
 1683              		.cfi_def_cfa_offset 24
 1684 0004 00AF     		add	r7, sp, #0
 1685              	.LCFI49:
 1686              		.cfi_def_cfa_register 7
 1687 0006 7860     		str	r0, [r7, #4]
 1688 0008 3960     		str	r1, [r7]
1144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 1689              		.loc 1 1144 21
 1690 000a 0023     		movs	r3, #0
 1691 000c FB73     		strb	r3, [r7, #15]
1145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process locked */
1147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
 1692              		.loc 1 1147 3
 1693 000e 7B68     		ldr	r3, [r7, #4]
 1694 0010 93F84030 		ldrb	r3, [r3, #64]
 1695 0014 DBB2     		uxtb	r3, r3
 1696 0016 012B     		cmp	r3, #1
 1697 0018 01D1     		bne	.L88
 1698              		.loc 1 1147 3 is_stmt 0 discriminator 1
 1699 001a 0223     		movs	r3, #2
 1700 001c 4FE0     		b	.L89
 1701              	.L88:
ARM GAS  /tmp/ccjfKiuT.s 			page 51


 1702              		.loc 1 1147 3 discriminator 2
 1703 001e 7B68     		ldr	r3, [r7, #4]
 1704 0020 0122     		movs	r2, #1
 1705 0022 83F84020 		strb	r2, [r3, #64]
1148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
 1706              		.loc 1 1149 11 is_stmt 1 discriminator 2
 1707 0026 7B68     		ldr	r3, [r7, #4]
 1708 0028 93F84130 		ldrb	r3, [r3, #65]
 1709 002c DBB2     		uxtb	r3, r3
 1710              		.loc 1 1149 5 discriminator 2
 1711 002e 012B     		cmp	r3, #1
 1712 0030 3ED1     		bne	.L90
1150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 1713              		.loc 1 1151 22
 1714 0032 7B68     		ldr	r3, [r7, #4]
 1715 0034 0022     		movs	r2, #0
 1716 0036 5A64     		str	r2, [r3, #68]
1152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if(pData != NULL )
 1717              		.loc 1 1153 7
 1718 0038 3B68     		ldr	r3, [r7]
 1719 003a 002B     		cmp	r3, #0
 1720 003c 2BD0     		beq	.L91
1154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
1155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Update state */
1156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 1721              		.loc 1 1156 20
 1722 003e 7B68     		ldr	r3, [r7, #4]
 1723 0040 1222     		movs	r2, #18
 1724 0042 83F84120 		strb	r2, [r3, #65]
1157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure counters and size of the handle */
1159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 1725              		.loc 1 1159 28
 1726 0046 7B68     		ldr	r3, [r7, #4]
 1727 0048 1B68     		ldr	r3, [r3]
 1728 004a 1B69     		ldr	r3, [r3, #16]
 1729              		.loc 1 1159 59
 1730 004c 5A1C     		adds	r2, r3, #1
 1731              		.loc 1 1159 26
 1732 004e 7B68     		ldr	r3, [r7, #4]
 1733 0050 DA62     		str	r2, [r3, #44]
1160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 1734              		.loc 1 1160 27
 1735 0052 7B68     		ldr	r3, [r7, #4]
 1736 0054 1B68     		ldr	r3, [r3]
 1737 0056 1B69     		ldr	r3, [r3, #16]
 1738              		.loc 1 1160 58
 1739 0058 5A1C     		adds	r2, r3, #1
 1740              		.loc 1 1160 25
 1741 005a 7B68     		ldr	r3, [r7, #4]
 1742 005c 9A62     		str	r2, [r3, #40]
1161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->pTxBuffPtr = pData;
 1743              		.loc 1 1161 25
 1744 005e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccjfKiuT.s 			page 52


 1745 0060 3A68     		ldr	r2, [r7]
 1746 0062 5A62     		str	r2, [r3, #36]
1162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Clear interrupt */
1164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TE | QSPI_FLAG_TC);
 1747              		.loc 1 1164 7
 1748 0064 7B68     		ldr	r3, [r7, #4]
 1749 0066 1B68     		ldr	r3, [r3]
 1750 0068 0322     		movs	r2, #3
 1751 006a DA60     		str	r2, [r3, #12]
1165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure QSPI: CCR register with functional as indirect write */
1167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 1752              		.loc 1 1167 7
 1753 006c 7B68     		ldr	r3, [r7, #4]
 1754 006e 1B68     		ldr	r3, [r3]
 1755 0070 5A69     		ldr	r2, [r3, #20]
 1756 0072 7B68     		ldr	r3, [r7, #4]
 1757 0074 1B68     		ldr	r3, [r3]
 1758 0076 22F04062 		bic	r2, r2, #201326592
 1759 007a 5A61     		str	r2, [r3, #20]
1168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Process unlocked */
1170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
 1760              		.loc 1 1170 7
 1761 007c 7B68     		ldr	r3, [r7, #4]
 1762 007e 0022     		movs	r2, #0
 1763 0080 83F84020 		strb	r2, [r3, #64]
1171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Enable the QSPI transfer error, FIFO threshold and transfer complete Interrupts */
1173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TE | QSPI_IT_FT | QSPI_IT_TC);
 1764              		.loc 1 1173 7
 1765 0084 7B68     		ldr	r3, [r7, #4]
 1766 0086 1B68     		ldr	r3, [r3]
 1767 0088 1A68     		ldr	r2, [r3]
 1768 008a 7B68     		ldr	r3, [r7, #4]
 1769 008c 1B68     		ldr	r3, [r3]
 1770 008e 42F4E022 		orr	r2, r2, #458752
 1771 0092 1A60     		str	r2, [r3]
 1772 0094 12E0     		b	.L92
 1773              	.L91:
1174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else
1176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
1177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 1774              		.loc 1 1177 24
 1775 0096 7B68     		ldr	r3, [r7, #4]
 1776 0098 5B6C     		ldr	r3, [r3, #68]
 1777 009a 43F00802 		orr	r2, r3, #8
 1778 009e 7B68     		ldr	r3, [r7, #4]
 1779 00a0 5A64     		str	r2, [r3, #68]
1178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       status = HAL_ERROR;
 1780              		.loc 1 1178 14
 1781 00a2 0123     		movs	r3, #1
 1782 00a4 FB73     		strb	r3, [r7, #15]
1179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Process unlocked */
ARM GAS  /tmp/ccjfKiuT.s 			page 53


1181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
 1783              		.loc 1 1181 7
 1784 00a6 7B68     		ldr	r3, [r7, #4]
 1785 00a8 0022     		movs	r2, #0
 1786 00aa 83F84020 		strb	r2, [r3, #64]
 1787 00ae 05E0     		b	.L92
 1788              	.L90:
1182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
1185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = HAL_BUSY;
 1789              		.loc 1 1186 12
 1790 00b0 0223     		movs	r3, #2
 1791 00b2 FB73     		strb	r3, [r7, #15]
1187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Process unlocked */
1189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     __HAL_UNLOCK(hqspi);
 1792              		.loc 1 1189 5
 1793 00b4 7B68     		ldr	r3, [r7, #4]
 1794 00b6 0022     		movs	r2, #0
 1795 00b8 83F84020 		strb	r2, [r3, #64]
 1796              	.L92:
1190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
 1797              		.loc 1 1192 10
 1798 00bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1799              	.L89:
1193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 1800              		.loc 1 1193 1
 1801 00be 1846     		mov	r0, r3
 1802 00c0 1437     		adds	r7, r7, #20
 1803              	.LCFI50:
 1804              		.cfi_def_cfa_offset 4
 1805 00c2 BD46     		mov	sp, r7
 1806              	.LCFI51:
 1807              		.cfi_def_cfa_register 13
 1808              		@ sp needed
 1809 00c4 5DF8047B 		ldr	r7, [sp], #4
 1810              	.LCFI52:
 1811              		.cfi_restore 7
 1812              		.cfi_def_cfa_offset 0
 1813 00c8 7047     		bx	lr
 1814              		.cfi_endproc
 1815              	.LFE340:
 1817              		.section	.text.HAL_QSPI_Receive_IT,"ax",%progbits
 1818              		.align	1
 1819              		.global	HAL_QSPI_Receive_IT
 1820              		.syntax unified
 1821              		.thumb
 1822              		.thumb_func
 1823              		.fpu fpv5-d16
 1825              	HAL_QSPI_Receive_IT:
 1826              	.LFB341:
1194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
ARM GAS  /tmp/ccjfKiuT.s 			page 54


1196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Receive an amount of data in non-blocking mode with interrupt.
1197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  pData : pointer to data buffer
1199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @note   This function is used only in Indirect Read Mode
1200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL status
1201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Receive_IT(QSPI_HandleTypeDef *hqspi, uint8_t *pData)
1203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 1827              		.loc 1 1203 1
 1828              		.cfi_startproc
 1829              		@ args = 0, pretend = 0, frame = 16
 1830              		@ frame_needed = 1, uses_anonymous_args = 0
 1831              		@ link register save eliminated.
 1832 0000 80B4     		push	{r7}
 1833              	.LCFI53:
 1834              		.cfi_def_cfa_offset 4
 1835              		.cfi_offset 7, -4
 1836 0002 85B0     		sub	sp, sp, #20
 1837              	.LCFI54:
 1838              		.cfi_def_cfa_offset 24
 1839 0004 00AF     		add	r7, sp, #0
 1840              	.LCFI55:
 1841              		.cfi_def_cfa_register 7
 1842 0006 7860     		str	r0, [r7, #4]
 1843 0008 3960     		str	r1, [r7]
1204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 1844              		.loc 1 1204 21
 1845 000a 0023     		movs	r3, #0
 1846 000c FB73     		strb	r3, [r7, #15]
1205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 1847              		.loc 1 1205 23
 1848 000e 7B68     		ldr	r3, [r7, #4]
 1849 0010 1B68     		ldr	r3, [r3]
 1850              		.loc 1 1205 12
 1851 0012 9B69     		ldr	r3, [r3, #24]
 1852 0014 BB60     		str	r3, [r7, #8]
1206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process locked */
1208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
 1853              		.loc 1 1208 3
 1854 0016 7B68     		ldr	r3, [r7, #4]
 1855 0018 93F84030 		ldrb	r3, [r3, #64]
 1856 001c DBB2     		uxtb	r3, r3
 1857 001e 012B     		cmp	r3, #1
 1858 0020 01D1     		bne	.L94
 1859              		.loc 1 1208 3 is_stmt 0 discriminator 1
 1860 0022 0223     		movs	r3, #2
 1861 0024 55E0     		b	.L95
 1862              	.L94:
 1863              		.loc 1 1208 3 discriminator 2
 1864 0026 7B68     		ldr	r3, [r7, #4]
 1865 0028 0122     		movs	r2, #1
 1866 002a 83F84020 		strb	r2, [r3, #64]
1209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
 1867              		.loc 1 1210 11 is_stmt 1 discriminator 2
 1868 002e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccjfKiuT.s 			page 55


 1869 0030 93F84130 		ldrb	r3, [r3, #65]
 1870 0034 DBB2     		uxtb	r3, r3
 1871              		.loc 1 1210 5 discriminator 2
 1872 0036 012B     		cmp	r3, #1
 1873 0038 44D1     		bne	.L96
1211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 1874              		.loc 1 1212 22
 1875 003a 7B68     		ldr	r3, [r7, #4]
 1876 003c 0022     		movs	r2, #0
 1877 003e 5A64     		str	r2, [r3, #68]
1213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if(pData != NULL )
 1878              		.loc 1 1214 7
 1879 0040 3B68     		ldr	r3, [r7]
 1880 0042 002B     		cmp	r3, #0
 1881 0044 31D0     		beq	.L97
1215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
1216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Update state */
1217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 1882              		.loc 1 1217 20
 1883 0046 7B68     		ldr	r3, [r7, #4]
 1884 0048 2222     		movs	r2, #34
 1885 004a 83F84120 		strb	r2, [r3, #65]
1218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure counters and size of the handle */
1220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 1886              		.loc 1 1220 28
 1887 004e 7B68     		ldr	r3, [r7, #4]
 1888 0050 1B68     		ldr	r3, [r3]
 1889 0052 1B69     		ldr	r3, [r3, #16]
 1890              		.loc 1 1220 59
 1891 0054 5A1C     		adds	r2, r3, #1
 1892              		.loc 1 1220 26
 1893 0056 7B68     		ldr	r3, [r7, #4]
 1894 0058 9A63     		str	r2, [r3, #56]
1221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 1895              		.loc 1 1221 27
 1896 005a 7B68     		ldr	r3, [r7, #4]
 1897 005c 1B68     		ldr	r3, [r3]
 1898 005e 1B69     		ldr	r3, [r3, #16]
 1899              		.loc 1 1221 58
 1900 0060 5A1C     		adds	r2, r3, #1
 1901              		.loc 1 1221 25
 1902 0062 7B68     		ldr	r3, [r7, #4]
 1903 0064 5A63     		str	r2, [r3, #52]
1222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->pRxBuffPtr = pData;
 1904              		.loc 1 1222 25
 1905 0066 7B68     		ldr	r3, [r7, #4]
 1906 0068 3A68     		ldr	r2, [r7]
 1907 006a 1A63     		str	r2, [r3, #48]
1223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Clear interrupt */
1225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TE | QSPI_FLAG_TC);
 1908              		.loc 1 1225 7
 1909 006c 7B68     		ldr	r3, [r7, #4]
 1910 006e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjfKiuT.s 			page 56


 1911 0070 0322     		movs	r2, #3
 1912 0072 DA60     		str	r2, [r3, #12]
1226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure QSPI: CCR register with functional as indirect read */
1228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 1913              		.loc 1 1228 7
 1914 0074 7B68     		ldr	r3, [r7, #4]
 1915 0076 1B68     		ldr	r3, [r3]
 1916 0078 5B69     		ldr	r3, [r3, #20]
 1917 007a 23F04062 		bic	r2, r3, #201326592
 1918 007e 7B68     		ldr	r3, [r7, #4]
 1919 0080 1B68     		ldr	r3, [r3]
 1920 0082 42F08062 		orr	r2, r2, #67108864
 1921 0086 5A61     		str	r2, [r3, #20]
1229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Start the transfer by re-writing the address in AR register */
1231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->AR, addr_reg);
 1922              		.loc 1 1231 7
 1923 0088 7B68     		ldr	r3, [r7, #4]
 1924 008a 1B68     		ldr	r3, [r3]
 1925 008c BA68     		ldr	r2, [r7, #8]
 1926 008e 9A61     		str	r2, [r3, #24]
1232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Process unlocked */
1234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
 1927              		.loc 1 1234 7
 1928 0090 7B68     		ldr	r3, [r7, #4]
 1929 0092 0022     		movs	r2, #0
 1930 0094 83F84020 		strb	r2, [r3, #64]
1235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Enable the QSPI transfer error, FIFO threshold and transfer complete Interrupts */
1237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TE | QSPI_IT_FT | QSPI_IT_TC);
 1931              		.loc 1 1237 7
 1932 0098 7B68     		ldr	r3, [r7, #4]
 1933 009a 1B68     		ldr	r3, [r3]
 1934 009c 1A68     		ldr	r2, [r3]
 1935 009e 7B68     		ldr	r3, [r7, #4]
 1936 00a0 1B68     		ldr	r3, [r3]
 1937 00a2 42F4E022 		orr	r2, r2, #458752
 1938 00a6 1A60     		str	r2, [r3]
 1939 00a8 12E0     		b	.L98
 1940              	.L97:
1238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else
1240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
1241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 1941              		.loc 1 1241 24
 1942 00aa 7B68     		ldr	r3, [r7, #4]
 1943 00ac 5B6C     		ldr	r3, [r3, #68]
 1944 00ae 43F00802 		orr	r2, r3, #8
 1945 00b2 7B68     		ldr	r3, [r7, #4]
 1946 00b4 5A64     		str	r2, [r3, #68]
1242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       status = HAL_ERROR;
 1947              		.loc 1 1242 14
 1948 00b6 0123     		movs	r3, #1
 1949 00b8 FB73     		strb	r3, [r7, #15]
1243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
ARM GAS  /tmp/ccjfKiuT.s 			page 57


1244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Process unlocked */
1245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
 1950              		.loc 1 1245 7
 1951 00ba 7B68     		ldr	r3, [r7, #4]
 1952 00bc 0022     		movs	r2, #0
 1953 00be 83F84020 		strb	r2, [r3, #64]
 1954 00c2 05E0     		b	.L98
 1955              	.L96:
1246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
1249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = HAL_BUSY;
 1956              		.loc 1 1250 12
 1957 00c4 0223     		movs	r3, #2
 1958 00c6 FB73     		strb	r3, [r7, #15]
1251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Process unlocked */
1253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     __HAL_UNLOCK(hqspi);
 1959              		.loc 1 1253 5
 1960 00c8 7B68     		ldr	r3, [r7, #4]
 1961 00ca 0022     		movs	r2, #0
 1962 00cc 83F84020 		strb	r2, [r3, #64]
 1963              	.L98:
1254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
 1964              		.loc 1 1256 10
 1965 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1966              	.L95:
1257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 1967              		.loc 1 1257 1
 1968 00d2 1846     		mov	r0, r3
 1969 00d4 1437     		adds	r7, r7, #20
 1970              	.LCFI56:
 1971              		.cfi_def_cfa_offset 4
 1972 00d6 BD46     		mov	sp, r7
 1973              	.LCFI57:
 1974              		.cfi_def_cfa_register 13
 1975              		@ sp needed
 1976 00d8 5DF8047B 		ldr	r7, [sp], #4
 1977              	.LCFI58:
 1978              		.cfi_restore 7
 1979              		.cfi_def_cfa_offset 0
 1980 00dc 7047     		bx	lr
 1981              		.cfi_endproc
 1982              	.LFE341:
 1984              		.section	.text.HAL_QSPI_Transmit_DMA,"ax",%progbits
 1985              		.align	1
 1986              		.global	HAL_QSPI_Transmit_DMA
 1987              		.syntax unified
 1988              		.thumb
 1989              		.thumb_func
 1990              		.fpu fpv5-d16
 1992              	HAL_QSPI_Transmit_DMA:
 1993              	.LFB342:
1258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
ARM GAS  /tmp/ccjfKiuT.s 			page 58


1259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
1260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Send an amount of data in non-blocking mode with DMA.
1261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  pData : pointer to data buffer
1263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @note   This function is used only in Indirect Write Mode
1264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL status
1265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Transmit_DMA(QSPI_HandleTypeDef *hqspi, uint8_t *pData)
1267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 1994              		.loc 1 1267 1
 1995              		.cfi_startproc
 1996              		@ args = 0, pretend = 0, frame = 16
 1997              		@ frame_needed = 1, uses_anonymous_args = 0
 1998 0000 90B5     		push	{r4, r7, lr}
 1999              	.LCFI59:
 2000              		.cfi_def_cfa_offset 12
 2001              		.cfi_offset 4, -12
 2002              		.cfi_offset 7, -8
 2003              		.cfi_offset 14, -4
 2004 0002 87B0     		sub	sp, sp, #28
 2005              	.LCFI60:
 2006              		.cfi_def_cfa_offset 40
 2007 0004 02AF     		add	r7, sp, #8
 2008              	.LCFI61:
 2009              		.cfi_def_cfa 7, 32
 2010 0006 7860     		str	r0, [r7, #4]
 2011 0008 3960     		str	r1, [r7]
1268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 2012              		.loc 1 1268 21
 2013 000a 0023     		movs	r3, #0
 2014 000c FB73     		strb	r3, [r7, #15]
1269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   uint32_t data_size = (READ_REG(hqspi->Instance->DLR) + 1U);
 2015              		.loc 1 1269 25
 2016 000e 7B68     		ldr	r3, [r7, #4]
 2017 0010 1B68     		ldr	r3, [r3]
 2018 0012 1B69     		ldr	r3, [r3, #16]
 2019              		.loc 1 1269 12
 2020 0014 0133     		adds	r3, r3, #1
 2021 0016 BB60     		str	r3, [r7, #8]
1270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process locked */
1272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
 2022              		.loc 1 1272 3
 2023 0018 7B68     		ldr	r3, [r7, #4]
 2024 001a 93F84030 		ldrb	r3, [r3, #64]
 2025 001e DBB2     		uxtb	r3, r3
 2026 0020 012B     		cmp	r3, #1
 2027 0022 01D1     		bne	.L100
 2028              		.loc 1 1272 3 is_stmt 0 discriminator 1
 2029 0024 0223     		movs	r3, #2
 2030 0026 CBE0     		b	.L101
 2031              	.L100:
 2032              		.loc 1 1272 3 discriminator 2
 2033 0028 7B68     		ldr	r3, [r7, #4]
 2034 002a 0122     		movs	r2, #1
 2035 002c 83F84020 		strb	r2, [r3, #64]
1273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
ARM GAS  /tmp/ccjfKiuT.s 			page 59


1274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
 2036              		.loc 1 1274 11 is_stmt 1 discriminator 2
 2037 0030 7B68     		ldr	r3, [r7, #4]
 2038 0032 93F84130 		ldrb	r3, [r3, #65]
 2039 0036 DBB2     		uxtb	r3, r3
 2040              		.loc 1 1274 5 discriminator 2
 2041 0038 012B     		cmp	r3, #1
 2042 003a 40F0BA80 		bne	.L102
1275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Clear the error code */
1277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 2043              		.loc 1 1277 22
 2044 003e 7B68     		ldr	r3, [r7, #4]
 2045 0040 0022     		movs	r2, #0
 2046 0042 5A64     		str	r2, [r3, #68]
1278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if(pData != NULL )
 2047              		.loc 1 1279 7
 2048 0044 3B68     		ldr	r3, [r7]
 2049 0046 002B     		cmp	r3, #0
 2050 0048 00F0A680 		beq	.L103
1280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
1281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure counters of the handle */
1282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->TxXferCount = data_size;
 2051              		.loc 1 1282 26
 2052 004c 7B68     		ldr	r3, [r7, #4]
 2053 004e BA68     		ldr	r2, [r7, #8]
 2054 0050 DA62     		str	r2, [r3, #44]
1283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Update state */
1285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 2055              		.loc 1 1285 22
 2056 0052 7B68     		ldr	r3, [r7, #4]
 2057 0054 1222     		movs	r2, #18
 2058 0056 83F84120 		strb	r2, [r3, #65]
1286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Clear interrupt */
1288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         __HAL_QSPI_CLEAR_FLAG(hqspi, (QSPI_FLAG_TE | QSPI_FLAG_TC));
 2059              		.loc 1 1288 9
 2060 005a 7B68     		ldr	r3, [r7, #4]
 2061 005c 1B68     		ldr	r3, [r3]
 2062 005e 0322     		movs	r2, #3
 2063 0060 DA60     		str	r2, [r3, #12]
1289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Configure size and pointer of the handle */
1291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->TxXferSize = hqspi->TxXferCount;
 2064              		.loc 1 1291 34
 2065 0062 7B68     		ldr	r3, [r7, #4]
 2066 0064 DA6A     		ldr	r2, [r3, #44]
 2067              		.loc 1 1291 27
 2068 0066 7B68     		ldr	r3, [r7, #4]
 2069 0068 9A62     		str	r2, [r3, #40]
1292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->pTxBuffPtr = pData;
 2070              		.loc 1 1292 27
 2071 006a 7B68     		ldr	r3, [r7, #4]
 2072 006c 3A68     		ldr	r2, [r7]
 2073 006e 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/ccjfKiuT.s 			page 60


1293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Configure QSPI: CCR register with functional mode as indirect write */
1295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 2074              		.loc 1 1295 9
 2075 0070 7B68     		ldr	r3, [r7, #4]
 2076 0072 1B68     		ldr	r3, [r3]
 2077 0074 5A69     		ldr	r2, [r3, #20]
 2078 0076 7B68     		ldr	r3, [r7, #4]
 2079 0078 1B68     		ldr	r3, [r3]
 2080 007a 22F04062 		bic	r2, r2, #201326592
 2081 007e 5A61     		str	r2, [r3, #20]
1296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Set the QSPI MDMA transfer complete callback */
1298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->hmdma->XferCpltCallback = QSPI_DMATxCplt;
 2082              		.loc 1 1298 14
 2083 0080 7B68     		ldr	r3, [r7, #4]
 2084 0082 DB6B     		ldr	r3, [r3, #60]
 2085              		.loc 1 1298 40
 2086 0084 504A     		ldr	r2, .L110
 2087 0086 5A64     		str	r2, [r3, #68]
1299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Set the MDMA error callback */
1301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->hmdma->XferErrorCallback = QSPI_DMAError;
 2088              		.loc 1 1301 14
 2089 0088 7B68     		ldr	r3, [r7, #4]
 2090 008a DB6B     		ldr	r3, [r3, #60]
 2091              		.loc 1 1301 41
 2092 008c 4F4A     		ldr	r2, .L110+4
 2093 008e 5A65     		str	r2, [r3, #84]
1302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Clear the MDMA abort callback */
1304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->hmdma->XferAbortCallback = NULL;
 2094              		.loc 1 1304 14
 2095 0090 7B68     		ldr	r3, [r7, #4]
 2096 0092 DB6B     		ldr	r3, [r3, #60]
 2097              		.loc 1 1304 41
 2098 0094 0022     		movs	r2, #0
 2099 0096 9A65     		str	r2, [r3, #88]
1305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* In Transmit mode , the MDMA destination is the QSPI DR register : Force the MDMA Destina
1307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         MODIFY_REG(hqspi->hmdma->Instance->CTCR, (MDMA_CTCR_DINC | MDMA_CTCR_DINCOS) ,MDMA_DEST_INC
 2100              		.loc 1 1307 9
 2101 0098 7B68     		ldr	r3, [r7, #4]
 2102 009a DB6B     		ldr	r3, [r3, #60]
 2103 009c 1B68     		ldr	r3, [r3]
 2104 009e 1969     		ldr	r1, [r3, #16]
 2105 00a0 7B68     		ldr	r3, [r7, #4]
 2106 00a2 DB6B     		ldr	r3, [r3, #60]
 2107 00a4 1A68     		ldr	r2, [r3]
 2108 00a6 4A4B     		ldr	r3, .L110+8
 2109 00a8 0B40     		ands	r3, r3, r1
 2110 00aa 1361     		str	r3, [r2, #16]
1308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Update MDMA configuration with the correct SourceInc field for Write operation */
1310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         if (hqspi->hmdma->Init.SourceDataSize == MDMA_SRC_DATASIZE_BYTE)
 2111              		.loc 1 1310 18
 2112 00ac 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccjfKiuT.s 			page 61


 2113 00ae DB6B     		ldr	r3, [r3, #60]
 2114              		.loc 1 1310 31
 2115 00b0 DB69     		ldr	r3, [r3, #28]
 2116              		.loc 1 1310 12
 2117 00b2 002B     		cmp	r3, #0
 2118 00b4 0CD1     		bne	.L104
1311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
1312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           MODIFY_REG(hqspi->hmdma->Instance->CTCR, (MDMA_CTCR_SINC | MDMA_CTCR_SINCOS) , MDMA_SRC_I
 2119              		.loc 1 1312 11
 2120 00b6 7B68     		ldr	r3, [r7, #4]
 2121 00b8 DB6B     		ldr	r3, [r3, #60]
 2122 00ba 1B68     		ldr	r3, [r3]
 2123 00bc 1A69     		ldr	r2, [r3, #16]
 2124 00be 454B     		ldr	r3, .L110+12
 2125 00c0 1340     		ands	r3, r3, r2
 2126 00c2 7A68     		ldr	r2, [r7, #4]
 2127 00c4 D26B     		ldr	r2, [r2, #60]
 2128 00c6 1268     		ldr	r2, [r2]
 2129 00c8 43F00203 		orr	r3, r3, #2
 2130 00cc 1361     		str	r3, [r2, #16]
 2131 00ce 2CE0     		b	.L105
 2132              	.L104:
1313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
1314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         else if (hqspi->hmdma->Init.SourceDataSize == MDMA_SRC_DATASIZE_HALFWORD)
 2133              		.loc 1 1314 23
 2134 00d0 7B68     		ldr	r3, [r7, #4]
 2135 00d2 DB6B     		ldr	r3, [r3, #60]
 2136              		.loc 1 1314 36
 2137 00d4 DB69     		ldr	r3, [r3, #28]
 2138              		.loc 1 1314 17
 2139 00d6 102B     		cmp	r3, #16
 2140 00d8 0CD1     		bne	.L106
1315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
1316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           MODIFY_REG(hqspi->hmdma->Instance->CTCR, (MDMA_CTCR_SINC | MDMA_CTCR_SINCOS) , MDMA_SRC_I
 2141              		.loc 1 1316 11
 2142 00da 7B68     		ldr	r3, [r7, #4]
 2143 00dc DB6B     		ldr	r3, [r3, #60]
 2144 00de 1B68     		ldr	r3, [r3]
 2145 00e0 1A69     		ldr	r2, [r3, #16]
 2146 00e2 3C4B     		ldr	r3, .L110+12
 2147 00e4 1340     		ands	r3, r3, r2
 2148 00e6 7A68     		ldr	r2, [r7, #4]
 2149 00e8 D26B     		ldr	r2, [r2, #60]
 2150 00ea 1268     		ldr	r2, [r2]
 2151 00ec 43F48173 		orr	r3, r3, #258
 2152 00f0 1361     		str	r3, [r2, #16]
 2153 00f2 1AE0     		b	.L105
 2154              	.L106:
1317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
1318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         else if (hqspi->hmdma->Init.SourceDataSize == MDMA_SRC_DATASIZE_WORD)
 2155              		.loc 1 1318 23
 2156 00f4 7B68     		ldr	r3, [r7, #4]
 2157 00f6 DB6B     		ldr	r3, [r3, #60]
 2158              		.loc 1 1318 36
 2159 00f8 DB69     		ldr	r3, [r3, #28]
 2160              		.loc 1 1318 17
 2161 00fa 202B     		cmp	r3, #32
ARM GAS  /tmp/ccjfKiuT.s 			page 62


 2162 00fc 0DD1     		bne	.L107
1319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
1320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           MODIFY_REG(hqspi->hmdma->Instance->CTCR, (MDMA_CTCR_SINC | MDMA_CTCR_SINCOS) , MDMA_SRC_I
 2163              		.loc 1 1320 11
 2164 00fe 7B68     		ldr	r3, [r7, #4]
 2165 0100 DB6B     		ldr	r3, [r3, #60]
 2166 0102 1B68     		ldr	r3, [r3]
 2167 0104 1B69     		ldr	r3, [r3, #16]
 2168 0106 334A     		ldr	r2, .L110+12
 2169 0108 1A40     		ands	r2, r2, r3
 2170 010a 7B68     		ldr	r3, [r7, #4]
 2171 010c DB6B     		ldr	r3, [r3, #60]
 2172 010e 1968     		ldr	r1, [r3]
 2173 0110 40F20223 		movw	r3, #514
 2174 0114 1343     		orrs	r3, r3, r2
 2175 0116 0B61     		str	r3, [r1, #16]
 2176 0118 07E0     		b	.L105
 2177              	.L107:
1321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
1322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         else
1323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
1324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* in case of incorrect source data size */
1325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 2178              		.loc 1 1325 28
 2179 011a 7B68     		ldr	r3, [r7, #4]
 2180 011c 5B6C     		ldr	r3, [r3, #68]
 2181 011e 43F00402 		orr	r2, r3, #4
 2182 0122 7B68     		ldr	r3, [r7, #4]
 2183 0124 5A64     		str	r2, [r3, #68]
1326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           status = HAL_ERROR;
 2184              		.loc 1 1326 18
 2185 0126 0123     		movs	r3, #1
 2186 0128 FB73     		strb	r3, [r7, #15]
 2187              	.L105:
1327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
1328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Enable the QSPI transmit MDMA */
1330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         if (HAL_MDMA_Start_IT(hqspi->hmdma, (uint32_t)pData, (uint32_t)&hqspi->Instance->DR, hqspi-
 2188              		.loc 1 1330 13
 2189 012a 7B68     		ldr	r3, [r7, #4]
 2190 012c D86B     		ldr	r0, [r3, #60]
 2191 012e 3968     		ldr	r1, [r7]
 2192              		.loc 1 1330 78
 2193 0130 7B68     		ldr	r3, [r7, #4]
 2194 0132 1B68     		ldr	r3, [r3]
 2195              		.loc 1 1330 72
 2196 0134 2033     		adds	r3, r3, #32
 2197              		.loc 1 1330 13
 2198 0136 1C46     		mov	r4, r3
 2199 0138 7B68     		ldr	r3, [r7, #4]
 2200 013a 9B6A     		ldr	r3, [r3, #40]
 2201 013c 0122     		movs	r2, #1
 2202 013e 0092     		str	r2, [sp]
 2203 0140 2246     		mov	r2, r4
 2204 0142 FFF7FEFF 		bl	HAL_MDMA_Start_IT
 2205 0146 0346     		mov	r3, r0
 2206              		.loc 1 1330 12
ARM GAS  /tmp/ccjfKiuT.s 			page 63


 2207 0148 002B     		cmp	r3, #0
 2208 014a 14D1     		bne	.L108
1331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
1332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Process unlocked */
1333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           __HAL_UNLOCK(hqspi);
 2209              		.loc 1 1333 11
 2210 014c 7B68     		ldr	r3, [r7, #4]
 2211 014e 0022     		movs	r2, #0
 2212 0150 83F84020 		strb	r2, [r3, #64]
1334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Enable the QSPI transfer error Interrupt */
1336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TE);
 2213              		.loc 1 1336 11
 2214 0154 7B68     		ldr	r3, [r7, #4]
 2215 0156 1B68     		ldr	r3, [r3]
 2216 0158 1A68     		ldr	r2, [r3]
 2217 015a 7B68     		ldr	r3, [r7, #4]
 2218 015c 1B68     		ldr	r3, [r3]
 2219 015e 42F48032 		orr	r2, r2, #65536
 2220 0162 1A60     		str	r2, [r3]
1337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Enable using MDMA by setting DMAEN, note that DMAEN bit is "reserved"
1339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****              but no impact on H7 HW and it minimize the cost in the footprint */
1340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           SET_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 2221              		.loc 1 1340 11
 2222 0164 7B68     		ldr	r3, [r7, #4]
 2223 0166 1B68     		ldr	r3, [r3]
 2224 0168 1A68     		ldr	r2, [r3]
 2225 016a 7B68     		ldr	r3, [r7, #4]
 2226 016c 1B68     		ldr	r3, [r3]
 2227 016e 42F00402 		orr	r2, r2, #4
 2228 0172 1A60     		str	r2, [r3]
 2229 0174 23E0     		b	.L109
 2230              	.L108:
1341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
1342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         else
1343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
1344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           status = HAL_ERROR;
 2231              		.loc 1 1344 18
 2232 0176 0123     		movs	r3, #1
 2233 0178 FB73     		strb	r3, [r7, #15]
1345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 2234              		.loc 1 1345 28
 2235 017a 7B68     		ldr	r3, [r7, #4]
 2236 017c 5B6C     		ldr	r3, [r3, #68]
 2237 017e 43F00402 		orr	r2, r3, #4
 2238 0182 7B68     		ldr	r3, [r7, #4]
 2239 0184 5A64     		str	r2, [r3, #68]
1346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           hqspi->State = HAL_QSPI_STATE_READY;
 2240              		.loc 1 1346 24
 2241 0186 7B68     		ldr	r3, [r7, #4]
 2242 0188 0122     		movs	r2, #1
 2243 018a 83F84120 		strb	r2, [r3, #65]
1347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Process unlocked */
1349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           __HAL_UNLOCK(hqspi);
 2244              		.loc 1 1349 11
ARM GAS  /tmp/ccjfKiuT.s 			page 64


 2245 018e 7B68     		ldr	r3, [r7, #4]
 2246 0190 0022     		movs	r2, #0
 2247 0192 83F84020 		strb	r2, [r3, #64]
 2248 0196 12E0     		b	.L109
 2249              	.L103:
1350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
1351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else
1353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
1354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 2250              		.loc 1 1354 24
 2251 0198 7B68     		ldr	r3, [r7, #4]
 2252 019a 5B6C     		ldr	r3, [r3, #68]
 2253 019c 43F00802 		orr	r2, r3, #8
 2254 01a0 7B68     		ldr	r3, [r7, #4]
 2255 01a2 5A64     		str	r2, [r3, #68]
1355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       status = HAL_ERROR;
 2256              		.loc 1 1355 14
 2257 01a4 0123     		movs	r3, #1
 2258 01a6 FB73     		strb	r3, [r7, #15]
1356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Process unlocked */
1358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
 2259              		.loc 1 1358 7
 2260 01a8 7B68     		ldr	r3, [r7, #4]
 2261 01aa 0022     		movs	r2, #0
 2262 01ac 83F84020 		strb	r2, [r3, #64]
 2263 01b0 05E0     		b	.L109
 2264              	.L102:
1359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
1362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = HAL_BUSY;
 2265              		.loc 1 1363 12
 2266 01b2 0223     		movs	r3, #2
 2267 01b4 FB73     		strb	r3, [r7, #15]
1364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Process unlocked */
1366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     __HAL_UNLOCK(hqspi);
 2268              		.loc 1 1366 5
 2269 01b6 7B68     		ldr	r3, [r7, #4]
 2270 01b8 0022     		movs	r2, #0
 2271 01ba 83F84020 		strb	r2, [r3, #64]
 2272              	.L109:
1367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
 2273              		.loc 1 1369 10
 2274 01be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2275              	.L101:
1370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 2276              		.loc 1 1370 1
 2277 01c0 1846     		mov	r0, r3
 2278 01c2 1437     		adds	r7, r7, #20
 2279              	.LCFI62:
 2280              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccjfKiuT.s 			page 65


 2281 01c4 BD46     		mov	sp, r7
 2282              	.LCFI63:
 2283              		.cfi_def_cfa_register 13
 2284              		@ sp needed
 2285 01c6 90BD     		pop	{r4, r7, pc}
 2286              	.L111:
 2287              		.align	2
 2288              	.L110:
 2289 01c8 00000000 		.word	QSPI_DMATxCplt
 2290 01cc 00000000 		.word	QSPI_DMAError
 2291 01d0 F3F3FFFF 		.word	-3085
 2292 01d4 FCFCFFFF 		.word	-772
 2293              		.cfi_endproc
 2294              	.LFE342:
 2296              		.section	.text.HAL_QSPI_Receive_DMA,"ax",%progbits
 2297              		.align	1
 2298              		.global	HAL_QSPI_Receive_DMA
 2299              		.syntax unified
 2300              		.thumb
 2301              		.thumb_func
 2302              		.fpu fpv5-d16
 2304              	HAL_QSPI_Receive_DMA:
 2305              	.LFB343:
1371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
1373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  pData : pointer to data buffer.
1376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @note   This function is used only in Indirect Read Mode
1377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL status
1378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Receive_DMA(QSPI_HandleTypeDef *hqspi, uint8_t *pData)
1380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 2306              		.loc 1 1380 1
 2307              		.cfi_startproc
 2308              		@ args = 0, pretend = 0, frame = 24
 2309              		@ frame_needed = 1, uses_anonymous_args = 0
 2310 0000 90B5     		push	{r4, r7, lr}
 2311              	.LCFI64:
 2312              		.cfi_def_cfa_offset 12
 2313              		.cfi_offset 4, -12
 2314              		.cfi_offset 7, -8
 2315              		.cfi_offset 14, -4
 2316 0002 89B0     		sub	sp, sp, #36
 2317              	.LCFI65:
 2318              		.cfi_def_cfa_offset 48
 2319 0004 02AF     		add	r7, sp, #8
 2320              	.LCFI66:
 2321              		.cfi_def_cfa 7, 40
 2322 0006 7860     		str	r0, [r7, #4]
 2323 0008 3960     		str	r1, [r7]
1381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 2324              		.loc 1 1381 21
 2325 000a 0023     		movs	r3, #0
 2326 000c FB75     		strb	r3, [r7, #23]
1382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 2327              		.loc 1 1382 23
ARM GAS  /tmp/ccjfKiuT.s 			page 66


 2328 000e 7B68     		ldr	r3, [r7, #4]
 2329 0010 1B68     		ldr	r3, [r3]
 2330              		.loc 1 1382 12
 2331 0012 9B69     		ldr	r3, [r3, #24]
 2332 0014 3B61     		str	r3, [r7, #16]
1383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   uint32_t data_size = (READ_REG(hqspi->Instance->DLR) + 1U);
 2333              		.loc 1 1383 25
 2334 0016 7B68     		ldr	r3, [r7, #4]
 2335 0018 1B68     		ldr	r3, [r3]
 2336 001a 1B69     		ldr	r3, [r3, #16]
 2337              		.loc 1 1383 12
 2338 001c 0133     		adds	r3, r3, #1
 2339 001e FB60     		str	r3, [r7, #12]
1384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process locked */
1386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
 2340              		.loc 1 1386 3
 2341 0020 7B68     		ldr	r3, [r7, #4]
 2342 0022 93F84030 		ldrb	r3, [r3, #64]
 2343 0026 DBB2     		uxtb	r3, r3
 2344 0028 012B     		cmp	r3, #1
 2345 002a 01D1     		bne	.L113
 2346              		.loc 1 1386 3 is_stmt 0 discriminator 1
 2347 002c 0223     		movs	r3, #2
 2348 002e D1E0     		b	.L114
 2349              	.L113:
 2350              		.loc 1 1386 3 discriminator 2
 2351 0030 7B68     		ldr	r3, [r7, #4]
 2352 0032 0122     		movs	r2, #1
 2353 0034 83F84020 		strb	r2, [r3, #64]
1387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
 2354              		.loc 1 1388 11 is_stmt 1 discriminator 2
 2355 0038 7B68     		ldr	r3, [r7, #4]
 2356 003a 93F84130 		ldrb	r3, [r3, #65]
 2357 003e DBB2     		uxtb	r3, r3
 2358              		.loc 1 1388 5 discriminator 2
 2359 0040 012B     		cmp	r3, #1
 2360 0042 40F0C080 		bne	.L115
1389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Clear the error code */
1391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 2361              		.loc 1 1391 22
 2362 0046 7B68     		ldr	r3, [r7, #4]
 2363 0048 0022     		movs	r2, #0
 2364 004a 5A64     		str	r2, [r3, #68]
1392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if(pData != NULL )
 2365              		.loc 1 1393 7
 2366 004c 3B68     		ldr	r3, [r7]
 2367 004e 002B     		cmp	r3, #0
 2368 0050 00F0AC80 		beq	.L116
1394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
1395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure counters of the handle */
1396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->RxXferCount = data_size;
 2369              		.loc 1 1396 26
 2370 0054 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccjfKiuT.s 			page 67


 2371 0056 FA68     		ldr	r2, [r7, #12]
 2372 0058 9A63     		str	r2, [r3, #56]
1397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Update state */
1398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 2373              		.loc 1 1398 22
 2374 005a 7B68     		ldr	r3, [r7, #4]
 2375 005c 2222     		movs	r2, #34
 2376 005e 83F84120 		strb	r2, [r3, #65]
1399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Clear interrupt */
1401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         __HAL_QSPI_CLEAR_FLAG(hqspi, (QSPI_FLAG_TE | QSPI_FLAG_TC));
 2377              		.loc 1 1401 9
 2378 0062 7B68     		ldr	r3, [r7, #4]
 2379 0064 1B68     		ldr	r3, [r3]
 2380 0066 0322     		movs	r2, #3
 2381 0068 DA60     		str	r2, [r3, #12]
1402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Configure size and pointer of the handle */
1404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->RxXferSize = hqspi->RxXferCount;
 2382              		.loc 1 1404 34
 2383 006a 7B68     		ldr	r3, [r7, #4]
 2384 006c 9A6B     		ldr	r2, [r3, #56]
 2385              		.loc 1 1404 27
 2386 006e 7B68     		ldr	r3, [r7, #4]
 2387 0070 5A63     		str	r2, [r3, #52]
1405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->pRxBuffPtr = pData;
 2388              		.loc 1 1405 27
 2389 0072 7B68     		ldr	r3, [r7, #4]
 2390 0074 3A68     		ldr	r2, [r7]
 2391 0076 1A63     		str	r2, [r3, #48]
1406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Set the QSPI MDMA transfer complete callback */
1408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->hmdma->XferCpltCallback = QSPI_DMARxCplt;
 2392              		.loc 1 1408 14
 2393 0078 7B68     		ldr	r3, [r7, #4]
 2394 007a DB6B     		ldr	r3, [r3, #60]
 2395              		.loc 1 1408 40
 2396 007c 574A     		ldr	r2, .L123
 2397 007e 5A64     		str	r2, [r3, #68]
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Set the MDMA error callback */
1411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->hmdma->XferErrorCallback = QSPI_DMAError;
 2398              		.loc 1 1411 14
 2399 0080 7B68     		ldr	r3, [r7, #4]
 2400 0082 DB6B     		ldr	r3, [r3, #60]
 2401              		.loc 1 1411 41
 2402 0084 564A     		ldr	r2, .L123+4
 2403 0086 5A65     		str	r2, [r3, #84]
1412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Clear the MDMA abort callback */
1414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->hmdma->XferAbortCallback = NULL;
 2404              		.loc 1 1414 14
 2405 0088 7B68     		ldr	r3, [r7, #4]
 2406 008a DB6B     		ldr	r3, [r3, #60]
 2407              		.loc 1 1414 41
 2408 008c 0022     		movs	r2, #0
 2409 008e 9A65     		str	r2, [r3, #88]
ARM GAS  /tmp/ccjfKiuT.s 			page 68


1415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* In Receive mode , the MDMA source is the QSPI DR register : Force the MDMA Source Incremen
1417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       MODIFY_REG(hqspi->hmdma->Instance->CTCR, (MDMA_CTCR_SINC | MDMA_CTCR_SINCOS) , MDMA_SRC_INC_D
 2410              		.loc 1 1417 7
 2411 0090 7B68     		ldr	r3, [r7, #4]
 2412 0092 DB6B     		ldr	r3, [r3, #60]
 2413 0094 1B68     		ldr	r3, [r3]
 2414 0096 1969     		ldr	r1, [r3, #16]
 2415 0098 7B68     		ldr	r3, [r7, #4]
 2416 009a DB6B     		ldr	r3, [r3, #60]
 2417 009c 1A68     		ldr	r2, [r3]
 2418 009e 514B     		ldr	r3, .L123+8
 2419 00a0 0B40     		ands	r3, r3, r1
 2420 00a2 1361     		str	r3, [r2, #16]
1418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Update MDMA configuration with the correct DestinationInc field for read operation */
1420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if (hqspi->hmdma->Init.DestDataSize == MDMA_DEST_DATASIZE_BYTE)
 2421              		.loc 1 1420 16
 2422 00a4 7B68     		ldr	r3, [r7, #4]
 2423 00a6 DB6B     		ldr	r3, [r3, #60]
 2424              		.loc 1 1420 29
 2425 00a8 1B6A     		ldr	r3, [r3, #32]
 2426              		.loc 1 1420 10
 2427 00aa 002B     		cmp	r3, #0
 2428 00ac 0CD1     		bne	.L117
1421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
1422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         MODIFY_REG(hqspi->hmdma->Instance->CTCR, (MDMA_CTCR_DINC | MDMA_CTCR_DINCOS) , MDMA_DEST_IN
 2429              		.loc 1 1422 9
 2430 00ae 7B68     		ldr	r3, [r7, #4]
 2431 00b0 DB6B     		ldr	r3, [r3, #60]
 2432 00b2 1B68     		ldr	r3, [r3]
 2433 00b4 1A69     		ldr	r2, [r3, #16]
 2434 00b6 4C4B     		ldr	r3, .L123+12
 2435 00b8 1340     		ands	r3, r3, r2
 2436 00ba 7A68     		ldr	r2, [r7, #4]
 2437 00bc D26B     		ldr	r2, [r2, #60]
 2438 00be 1268     		ldr	r2, [r2]
 2439 00c0 43F00803 		orr	r3, r3, #8
 2440 00c4 1361     		str	r3, [r2, #16]
 2441 00c6 2CE0     		b	.L118
 2442              	.L117:
1423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
1424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       else if (hqspi->hmdma->Init.DestDataSize == MDMA_DEST_DATASIZE_HALFWORD)
 2443              		.loc 1 1424 21
 2444 00c8 7B68     		ldr	r3, [r7, #4]
 2445 00ca DB6B     		ldr	r3, [r3, #60]
 2446              		.loc 1 1424 34
 2447 00cc 1B6A     		ldr	r3, [r3, #32]
 2448              		.loc 1 1424 15
 2449 00ce 402B     		cmp	r3, #64
 2450 00d0 0CD1     		bne	.L119
1425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
1426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         MODIFY_REG(hqspi->hmdma->Instance->CTCR, (MDMA_CTCR_DINC | MDMA_CTCR_DINCOS) , MDMA_DEST_IN
 2451              		.loc 1 1426 9
 2452 00d2 7B68     		ldr	r3, [r7, #4]
 2453 00d4 DB6B     		ldr	r3, [r3, #60]
 2454 00d6 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjfKiuT.s 			page 69


 2455 00d8 1A69     		ldr	r2, [r3, #16]
 2456 00da 434B     		ldr	r3, .L123+12
 2457 00dc 1340     		ands	r3, r3, r2
 2458 00de 7A68     		ldr	r2, [r7, #4]
 2459 00e0 D26B     		ldr	r2, [r2, #60]
 2460 00e2 1268     		ldr	r2, [r2]
 2461 00e4 43F48163 		orr	r3, r3, #1032
 2462 00e8 1361     		str	r3, [r2, #16]
 2463 00ea 1AE0     		b	.L118
 2464              	.L119:
1427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
1428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       else if (hqspi->hmdma->Init.DestDataSize == MDMA_DEST_DATASIZE_WORD)
 2465              		.loc 1 1428 21
 2466 00ec 7B68     		ldr	r3, [r7, #4]
 2467 00ee DB6B     		ldr	r3, [r3, #60]
 2468              		.loc 1 1428 34
 2469 00f0 1B6A     		ldr	r3, [r3, #32]
 2470              		.loc 1 1428 15
 2471 00f2 802B     		cmp	r3, #128
 2472 00f4 0DD1     		bne	.L120
1429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
1430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         MODIFY_REG(hqspi->hmdma->Instance->CTCR, (MDMA_CTCR_DINC | MDMA_CTCR_DINCOS) , MDMA_DEST_IN
 2473              		.loc 1 1430 9
 2474 00f6 7B68     		ldr	r3, [r7, #4]
 2475 00f8 DB6B     		ldr	r3, [r3, #60]
 2476 00fa 1B68     		ldr	r3, [r3]
 2477 00fc 1B69     		ldr	r3, [r3, #16]
 2478 00fe 3A4A     		ldr	r2, .L123+12
 2479 0100 1A40     		ands	r2, r2, r3
 2480 0102 7B68     		ldr	r3, [r7, #4]
 2481 0104 DB6B     		ldr	r3, [r3, #60]
 2482 0106 1968     		ldr	r1, [r3]
 2483 0108 40F60803 		movw	r3, #2056
 2484 010c 1343     		orrs	r3, r3, r2
 2485 010e 0B61     		str	r3, [r1, #16]
 2486 0110 07E0     		b	.L118
 2487              	.L120:
1431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
1432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       else
1433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
1434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****        /* in case of incorrect destination data size */
1435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 2488              		.loc 1 1435 26
 2489 0112 7B68     		ldr	r3, [r7, #4]
 2490 0114 5B6C     		ldr	r3, [r3, #68]
 2491 0116 43F00402 		orr	r2, r3, #4
 2492 011a 7B68     		ldr	r3, [r7, #4]
 2493 011c 5A64     		str	r2, [r3, #68]
1436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         status = HAL_ERROR;
 2494              		.loc 1 1436 16
 2495 011e 0123     		movs	r3, #1
 2496 0120 FB75     		strb	r3, [r7, #23]
 2497              	.L118:
1437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
1438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Configure QSPI: CCR register with functional as indirect read */
1439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 2498              		.loc 1 1439 11
ARM GAS  /tmp/ccjfKiuT.s 			page 70


 2499 0122 7B68     		ldr	r3, [r7, #4]
 2500 0124 1B68     		ldr	r3, [r3]
 2501 0126 5B69     		ldr	r3, [r3, #20]
 2502 0128 23F04062 		bic	r2, r3, #201326592
 2503 012c 7B68     		ldr	r3, [r7, #4]
 2504 012e 1B68     		ldr	r3, [r3]
 2505 0130 42F08062 		orr	r2, r2, #67108864
 2506 0134 5A61     		str	r2, [r3, #20]
1440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Start the transfer by re-writing the address in AR register */
1442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           WRITE_REG(hqspi->Instance->AR, addr_reg);
 2507              		.loc 1 1442 11
 2508 0136 7B68     		ldr	r3, [r7, #4]
 2509 0138 1B68     		ldr	r3, [r3]
 2510 013a 3A69     		ldr	r2, [r7, #16]
 2511 013c 9A61     		str	r2, [r3, #24]
1443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Enable the MDMA */
1445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         if (HAL_MDMA_Start_IT(hqspi->hmdma, (uint32_t)&hqspi->Instance->DR, (uint32_t)pData, hqspi-
 2512              		.loc 1 1445 13
 2513 013e 7B68     		ldr	r3, [r7, #4]
 2514 0140 D86B     		ldr	r0, [r3, #60]
 2515              		.loc 1 1445 61
 2516 0142 7B68     		ldr	r3, [r7, #4]
 2517 0144 1B68     		ldr	r3, [r3]
 2518              		.loc 1 1445 55
 2519 0146 2033     		adds	r3, r3, #32
 2520              		.loc 1 1445 13
 2521 0148 1C46     		mov	r4, r3
 2522 014a 3A68     		ldr	r2, [r7]
 2523 014c 7B68     		ldr	r3, [r7, #4]
 2524 014e 5B6B     		ldr	r3, [r3, #52]
 2525 0150 0121     		movs	r1, #1
 2526 0152 0091     		str	r1, [sp]
 2527 0154 2146     		mov	r1, r4
 2528 0156 FFF7FEFF 		bl	HAL_MDMA_Start_IT
 2529 015a 0346     		mov	r3, r0
 2530              		.loc 1 1445 12
 2531 015c 002B     		cmp	r3, #0
 2532 015e 14D1     		bne	.L121
1446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
1447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Process unlocked */
1448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           __HAL_UNLOCK(hqspi);
 2533              		.loc 1 1448 11
 2534 0160 7B68     		ldr	r3, [r7, #4]
 2535 0162 0022     		movs	r2, #0
 2536 0164 83F84020 		strb	r2, [r3, #64]
1449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Enable the QSPI transfer error Interrupt */
1451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TE);
 2537              		.loc 1 1451 11
 2538 0168 7B68     		ldr	r3, [r7, #4]
 2539 016a 1B68     		ldr	r3, [r3]
 2540 016c 1A68     		ldr	r2, [r3]
 2541 016e 7B68     		ldr	r3, [r7, #4]
 2542 0170 1B68     		ldr	r3, [r3]
 2543 0172 42F48032 		orr	r2, r2, #65536
ARM GAS  /tmp/ccjfKiuT.s 			page 71


 2544 0176 1A60     		str	r2, [r3]
1452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Enable using MDMA by setting DMAEN, note that DMAEN bit is "reserved"
1454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****              but no impact on H7 HW and it minimize the cost in the footprint */
1455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           SET_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 2545              		.loc 1 1455 11
 2546 0178 7B68     		ldr	r3, [r7, #4]
 2547 017a 1B68     		ldr	r3, [r3]
 2548 017c 1A68     		ldr	r2, [r3]
 2549 017e 7B68     		ldr	r3, [r7, #4]
 2550 0180 1B68     		ldr	r3, [r3]
 2551 0182 42F00402 		orr	r2, r2, #4
 2552 0186 1A60     		str	r2, [r3]
 2553 0188 23E0     		b	.L122
 2554              	.L121:
1456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
1457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         else
1458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
1459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           status = HAL_ERROR;
 2555              		.loc 1 1459 18
 2556 018a 0123     		movs	r3, #1
 2557 018c FB75     		strb	r3, [r7, #23]
1460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 2558              		.loc 1 1460 28
 2559 018e 7B68     		ldr	r3, [r7, #4]
 2560 0190 5B6C     		ldr	r3, [r3, #68]
 2561 0192 43F00402 		orr	r2, r3, #4
 2562 0196 7B68     		ldr	r3, [r7, #4]
 2563 0198 5A64     		str	r2, [r3, #68]
1461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           hqspi->State = HAL_QSPI_STATE_READY;
 2564              		.loc 1 1461 24
 2565 019a 7B68     		ldr	r3, [r7, #4]
 2566 019c 0122     		movs	r2, #1
 2567 019e 83F84120 		strb	r2, [r3, #65]
1462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Process unlocked */
1464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           __HAL_UNLOCK(hqspi);
 2568              		.loc 1 1464 11
 2569 01a2 7B68     		ldr	r3, [r7, #4]
 2570 01a4 0022     		movs	r2, #0
 2571 01a6 83F84020 		strb	r2, [r3, #64]
 2572 01aa 12E0     		b	.L122
 2573              	.L116:
1465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
1466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else
1468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
1469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 2574              		.loc 1 1469 24
 2575 01ac 7B68     		ldr	r3, [r7, #4]
 2576 01ae 5B6C     		ldr	r3, [r3, #68]
 2577 01b0 43F00802 		orr	r2, r3, #8
 2578 01b4 7B68     		ldr	r3, [r7, #4]
 2579 01b6 5A64     		str	r2, [r3, #68]
1470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       status = HAL_ERROR;
 2580              		.loc 1 1470 14
 2581 01b8 0123     		movs	r3, #1
ARM GAS  /tmp/ccjfKiuT.s 			page 72


 2582 01ba FB75     		strb	r3, [r7, #23]
1471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Process unlocked */
1473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
 2583              		.loc 1 1473 7
 2584 01bc 7B68     		ldr	r3, [r7, #4]
 2585 01be 0022     		movs	r2, #0
 2586 01c0 83F84020 		strb	r2, [r3, #64]
 2587 01c4 05E0     		b	.L122
 2588              	.L115:
1474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
1477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = HAL_BUSY;
 2589              		.loc 1 1478 12
 2590 01c6 0223     		movs	r3, #2
 2591 01c8 FB75     		strb	r3, [r7, #23]
1479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Process unlocked */
1481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     __HAL_UNLOCK(hqspi);
 2592              		.loc 1 1481 5
 2593 01ca 7B68     		ldr	r3, [r7, #4]
 2594 01cc 0022     		movs	r2, #0
 2595 01ce 83F84020 		strb	r2, [r3, #64]
 2596              	.L122:
1482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
 2597              		.loc 1 1484 10
 2598 01d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2599              	.L114:
1485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 2600              		.loc 1 1485 1
 2601 01d4 1846     		mov	r0, r3
 2602 01d6 1C37     		adds	r7, r7, #28
 2603              	.LCFI67:
 2604              		.cfi_def_cfa_offset 12
 2605 01d8 BD46     		mov	sp, r7
 2606              	.LCFI68:
 2607              		.cfi_def_cfa_register 13
 2608              		@ sp needed
 2609 01da 90BD     		pop	{r4, r7, pc}
 2610              	.L124:
 2611              		.align	2
 2612              	.L123:
 2613 01dc 00000000 		.word	QSPI_DMARxCplt
 2614 01e0 00000000 		.word	QSPI_DMAError
 2615 01e4 FCFCFFFF 		.word	-772
 2616 01e8 F3F3FFFF 		.word	-3085
 2617              		.cfi_endproc
 2618              	.LFE343:
 2620              		.section	.text.HAL_QSPI_AutoPolling,"ax",%progbits
 2621              		.align	1
 2622              		.global	HAL_QSPI_AutoPolling
 2623              		.syntax unified
 2624              		.thumb
ARM GAS  /tmp/ccjfKiuT.s 			page 73


 2625              		.thumb_func
 2626              		.fpu fpv5-d16
 2628              	HAL_QSPI_AutoPolling:
 2629              	.LFB344:
1486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
1488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Configure the QSPI Automatic Polling Mode in blocking mode.
1489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  cmd : structure that contains the command configuration information.
1491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  cfg : structure that contains the polling configuration information.
1492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  Timeout : Timeout duration
1493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @note   This function is used only in Automatic Polling Mode
1494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL status
1495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_AutoPolling(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, QSPI_Au
1497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 2630              		.loc 1 1497 1
 2631              		.cfi_startproc
 2632              		@ args = 0, pretend = 0, frame = 24
 2633              		@ frame_needed = 1, uses_anonymous_args = 0
 2634 0000 80B5     		push	{r7, lr}
 2635              	.LCFI69:
 2636              		.cfi_def_cfa_offset 8
 2637              		.cfi_offset 7, -8
 2638              		.cfi_offset 14, -4
 2639 0002 88B0     		sub	sp, sp, #32
 2640              	.LCFI70:
 2641              		.cfi_def_cfa_offset 40
 2642 0004 02AF     		add	r7, sp, #8
 2643              	.LCFI71:
 2644              		.cfi_def_cfa 7, 32
 2645 0006 F860     		str	r0, [r7, #12]
 2646 0008 B960     		str	r1, [r7, #8]
 2647 000a 7A60     		str	r2, [r7, #4]
 2648 000c 3B60     		str	r3, [r7]
1498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
1499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
 2649              		.loc 1 1499 24
 2650 000e FFF7FEFF 		bl	HAL_GetTick
 2651 0012 3861     		str	r0, [r7, #16]
1500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Check the parameters */
1502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_INSTRUCTION_MODE(cmd->InstructionMode));
1503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
1504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     assert_param(IS_QSPI_INSTRUCTION(cmd->Instruction));
1506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_ADDRESS_MODE(cmd->AddressMode));
1509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (cmd->AddressMode != QSPI_ADDRESS_NONE)
1510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     assert_param(IS_QSPI_ADDRESS_SIZE(cmd->AddressSize));
1512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_ALTERNATE_BYTES_MODE(cmd->AlternateByteMode));
1515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
1516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
ARM GAS  /tmp/ccjfKiuT.s 			page 74


1517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     assert_param(IS_QSPI_ALTERNATE_BYTES_SIZE(cmd->AlternateBytesSize));
1518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DUMMY_CYCLES(cmd->DummyCycles));
1521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DATA_MODE(cmd->DataMode));
1522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_MODE(cmd->DdrMode));
1524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_HHC(cmd->DdrHoldHalfCycle));
1525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_SIOO_MODE(cmd->SIOOMode));
1526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_INTERVAL(cfg->Interval));
1528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_STATUS_BYTES_SIZE(cfg->StatusBytesSize));
1529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_MATCH_MODE(cfg->MatchMode));
1530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process locked */
1532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
 2652              		.loc 1 1532 3
 2653 0014 FB68     		ldr	r3, [r7, #12]
 2654 0016 93F84030 		ldrb	r3, [r3, #64]
 2655 001a DBB2     		uxtb	r3, r3
 2656 001c 012B     		cmp	r3, #1
 2657 001e 01D1     		bne	.L126
 2658              		.loc 1 1532 3 is_stmt 0 discriminator 1
 2659 0020 0223     		movs	r3, #2
 2660 0022 60E0     		b	.L127
 2661              	.L126:
 2662              		.loc 1 1532 3 discriminator 2
 2663 0024 FB68     		ldr	r3, [r7, #12]
 2664 0026 0122     		movs	r2, #1
 2665 0028 83F84020 		strb	r2, [r3, #64]
1533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
 2666              		.loc 1 1534 11 is_stmt 1 discriminator 2
 2667 002c FB68     		ldr	r3, [r7, #12]
 2668 002e 93F84130 		ldrb	r3, [r3, #65]
 2669 0032 DBB2     		uxtb	r3, r3
 2670              		.loc 1 1534 5 discriminator 2
 2671 0034 012B     		cmp	r3, #1
 2672 0036 4FD1     		bne	.L128
1535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 2673              		.loc 1 1536 22
 2674 0038 FB68     		ldr	r3, [r7, #12]
 2675 003a 0022     		movs	r2, #0
 2676 003c 5A64     		str	r2, [r3, #68]
1537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Update state */
1539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 2677              		.loc 1 1539 18
 2678 003e FB68     		ldr	r3, [r7, #12]
 2679 0040 4222     		movs	r2, #66
 2680 0042 83F84120 		strb	r2, [r3, #65]
1540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Wait till BUSY flag reset */
1542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 2681              		.loc 1 1542 14
 2682 0046 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccjfKiuT.s 			page 75


 2683 0048 0093     		str	r3, [sp]
 2684 004a 3B69     		ldr	r3, [r7, #16]
 2685 004c 0022     		movs	r2, #0
 2686 004e 2021     		movs	r1, #32
 2687 0050 F868     		ldr	r0, [r7, #12]
 2688 0052 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 2689 0056 0346     		mov	r3, r0
 2690 0058 FB75     		strb	r3, [r7, #23]
1543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if (status == HAL_OK)
 2691              		.loc 1 1544 8
 2692 005a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2693 005c 002B     		cmp	r3, #0
 2694 005e 3DD1     		bne	.L129
1545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
1546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure QSPI: PSMAR register with the status match value */
1547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 2695              		.loc 1 1547 7
 2696 0060 FB68     		ldr	r3, [r7, #12]
 2697 0062 1B68     		ldr	r3, [r3]
 2698 0064 7A68     		ldr	r2, [r7, #4]
 2699 0066 1268     		ldr	r2, [r2]
 2700 0068 9A62     		str	r2, [r3, #40]
1548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure QSPI: PSMKR register with the status mask value */
1550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 2701              		.loc 1 1550 7
 2702 006a FB68     		ldr	r3, [r7, #12]
 2703 006c 1B68     		ldr	r3, [r3]
 2704 006e 7A68     		ldr	r2, [r7, #4]
 2705 0070 5268     		ldr	r2, [r2, #4]
 2706 0072 5A62     		str	r2, [r3, #36]
1551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure QSPI: PIR register with the interval value */
1553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 2707              		.loc 1 1553 7
 2708 0074 FB68     		ldr	r3, [r7, #12]
 2709 0076 1B68     		ldr	r3, [r3]
 2710 0078 7A68     		ldr	r2, [r7, #4]
 2711 007a 9268     		ldr	r2, [r2, #8]
 2712 007c DA62     		str	r2, [r3, #44]
1554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure QSPI: CR register with Match mode and Automatic stop enabled
1556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (otherwise there will be an infinite loop in blocking mode) */
1557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 2713              		.loc 1 1557 7
 2714 007e FB68     		ldr	r3, [r7, #12]
 2715 0080 1B68     		ldr	r3, [r3]
 2716 0082 1B68     		ldr	r3, [r3]
 2717 0084 23F44002 		bic	r2, r3, #12582912
 2718 0088 7B68     		ldr	r3, [r7, #4]
 2719 008a 1B69     		ldr	r3, [r3, #16]
 2720 008c 1A43     		orrs	r2, r2, r3
 2721 008e FB68     		ldr	r3, [r7, #12]
 2722 0090 1B68     		ldr	r3, [r3]
 2723 0092 42F48002 		orr	r2, r2, #4194304
 2724 0096 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccjfKiuT.s 			page 76


1558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                (cfg->MatchMode | QSPI_AUTOMATIC_STOP_ENABLE));
1559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Call the configuration function */
1561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       cmd->NbData = cfg->StatusBytesSize;
 2725              		.loc 1 1561 24
 2726 0098 7B68     		ldr	r3, [r7, #4]
 2727 009a DA68     		ldr	r2, [r3, #12]
 2728              		.loc 1 1561 19
 2729 009c BB68     		ldr	r3, [r7, #8]
 2730 009e 9A62     		str	r2, [r3, #40]
1562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 2731              		.loc 1 1562 7
 2732 00a0 4FF00062 		mov	r2, #134217728
 2733 00a4 B968     		ldr	r1, [r7, #8]
 2734 00a6 F868     		ldr	r0, [r7, #12]
 2735 00a8 FFF7FEFF 		bl	QSPI_Config
1563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Wait until SM flag is set to go back in idle state */
1565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 2736              		.loc 1 1565 16
 2737 00ac 3B68     		ldr	r3, [r7]
 2738 00ae 0093     		str	r3, [sp]
 2739 00b0 3B69     		ldr	r3, [r7, #16]
 2740 00b2 0122     		movs	r2, #1
 2741 00b4 0821     		movs	r1, #8
 2742 00b6 F868     		ldr	r0, [r7, #12]
 2743 00b8 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 2744 00bc 0346     		mov	r3, r0
 2745 00be FB75     		strb	r3, [r7, #23]
1566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if (status == HAL_OK)
 2746              		.loc 1 1567 10
 2747 00c0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2748 00c2 002B     		cmp	r3, #0
 2749 00c4 0AD1     		bne	.L129
1568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
1569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 2750              		.loc 1 1569 9
 2751 00c6 FB68     		ldr	r3, [r7, #12]
 2752 00c8 1B68     		ldr	r3, [r3]
 2753 00ca 0822     		movs	r2, #8
 2754 00cc DA60     		str	r2, [r3, #12]
1570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Update state */
1572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->State = HAL_QSPI_STATE_READY;
 2755              		.loc 1 1572 22
 2756 00ce FB68     		ldr	r3, [r7, #12]
 2757 00d0 0122     		movs	r2, #1
 2758 00d2 83F84120 		strb	r2, [r3, #65]
 2759 00d6 01E0     		b	.L129
 2760              	.L128:
1573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
1574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
1577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = HAL_BUSY;
ARM GAS  /tmp/ccjfKiuT.s 			page 77


 2761              		.loc 1 1578 12
 2762 00d8 0223     		movs	r3, #2
 2763 00da FB75     		strb	r3, [r7, #23]
 2764              	.L129:
1579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process unlocked */
1582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
 2765              		.loc 1 1582 3
 2766 00dc FB68     		ldr	r3, [r7, #12]
 2767 00de 0022     		movs	r2, #0
 2768 00e0 83F84020 		strb	r2, [r3, #64]
1583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Return function status */
1585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
 2769              		.loc 1 1585 10
 2770 00e4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2771              	.L127:
1586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 2772              		.loc 1 1586 1
 2773 00e6 1846     		mov	r0, r3
 2774 00e8 1837     		adds	r7, r7, #24
 2775              	.LCFI72:
 2776              		.cfi_def_cfa_offset 8
 2777 00ea BD46     		mov	sp, r7
 2778              	.LCFI73:
 2779              		.cfi_def_cfa_register 13
 2780              		@ sp needed
 2781 00ec 80BD     		pop	{r7, pc}
 2782              		.cfi_endproc
 2783              	.LFE344:
 2785              		.section	.text.HAL_QSPI_AutoPolling_IT,"ax",%progbits
 2786              		.align	1
 2787              		.global	HAL_QSPI_AutoPolling_IT
 2788              		.syntax unified
 2789              		.thumb
 2790              		.thumb_func
 2791              		.fpu fpv5-d16
 2793              	HAL_QSPI_AutoPolling_IT:
 2794              	.LFB345:
1587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
1589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Configure the QSPI Automatic Polling Mode in non-blocking mode.
1590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  cmd : structure that contains the command configuration information.
1592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  cfg : structure that contains the polling configuration information.
1593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @note   This function is used only in Automatic Polling Mode
1594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL status
1595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_AutoPolling_IT(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, QSPI
1597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 2795              		.loc 1 1597 1
 2796              		.cfi_startproc
 2797              		@ args = 0, pretend = 0, frame = 24
 2798              		@ frame_needed = 1, uses_anonymous_args = 0
 2799 0000 80B5     		push	{r7, lr}
 2800              	.LCFI74:
ARM GAS  /tmp/ccjfKiuT.s 			page 78


 2801              		.cfi_def_cfa_offset 8
 2802              		.cfi_offset 7, -8
 2803              		.cfi_offset 14, -4
 2804 0002 88B0     		sub	sp, sp, #32
 2805              	.LCFI75:
 2806              		.cfi_def_cfa_offset 40
 2807 0004 02AF     		add	r7, sp, #8
 2808              	.LCFI76:
 2809              		.cfi_def_cfa 7, 32
 2810 0006 F860     		str	r0, [r7, #12]
 2811 0008 B960     		str	r1, [r7, #8]
 2812 000a 7A60     		str	r2, [r7, #4]
1598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
1599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
 2813              		.loc 1 1599 24
 2814 000c FFF7FEFF 		bl	HAL_GetTick
 2815 0010 3861     		str	r0, [r7, #16]
1600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Check the parameters */
1602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_INSTRUCTION_MODE(cmd->InstructionMode));
1603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
1604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     assert_param(IS_QSPI_INSTRUCTION(cmd->Instruction));
1606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_ADDRESS_MODE(cmd->AddressMode));
1609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (cmd->AddressMode != QSPI_ADDRESS_NONE)
1610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     assert_param(IS_QSPI_ADDRESS_SIZE(cmd->AddressSize));
1612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_ALTERNATE_BYTES_MODE(cmd->AlternateByteMode));
1615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
1616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     assert_param(IS_QSPI_ALTERNATE_BYTES_SIZE(cmd->AlternateBytesSize));
1618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DUMMY_CYCLES(cmd->DummyCycles));
1621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DATA_MODE(cmd->DataMode));
1622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_MODE(cmd->DdrMode));
1624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_HHC(cmd->DdrHoldHalfCycle));
1625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_SIOO_MODE(cmd->SIOOMode));
1626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_INTERVAL(cfg->Interval));
1628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_STATUS_BYTES_SIZE(cfg->StatusBytesSize));
1629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_MATCH_MODE(cfg->MatchMode));
1630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_AUTOMATIC_STOP(cfg->AutomaticStop));
1631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process locked */
1633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
 2816              		.loc 1 1633 3
 2817 0012 FB68     		ldr	r3, [r7, #12]
 2818 0014 93F84030 		ldrb	r3, [r3, #64]
 2819 0018 DBB2     		uxtb	r3, r3
 2820 001a 012B     		cmp	r3, #1
 2821 001c 01D1     		bne	.L131
ARM GAS  /tmp/ccjfKiuT.s 			page 79


 2822              		.loc 1 1633 3 is_stmt 0 discriminator 1
 2823 001e 0223     		movs	r3, #2
 2824 0020 62E0     		b	.L132
 2825              	.L131:
 2826              		.loc 1 1633 3 discriminator 2
 2827 0022 FB68     		ldr	r3, [r7, #12]
 2828 0024 0122     		movs	r2, #1
 2829 0026 83F84020 		strb	r2, [r3, #64]
1634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
 2830              		.loc 1 1635 11 is_stmt 1 discriminator 2
 2831 002a FB68     		ldr	r3, [r7, #12]
 2832 002c 93F84130 		ldrb	r3, [r3, #65]
 2833 0030 DBB2     		uxtb	r3, r3
 2834              		.loc 1 1635 5 discriminator 2
 2835 0032 012B     		cmp	r3, #1
 2836 0034 51D1     		bne	.L133
1636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 2837              		.loc 1 1637 22
 2838 0036 FB68     		ldr	r3, [r7, #12]
 2839 0038 0022     		movs	r2, #0
 2840 003a 5A64     		str	r2, [r3, #68]
1638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Update state */
1640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 2841              		.loc 1 1640 18
 2842 003c FB68     		ldr	r3, [r7, #12]
 2843 003e 4222     		movs	r2, #66
 2844 0040 83F84120 		strb	r2, [r3, #65]
1641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Wait till BUSY flag reset */
1643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout
 2845              		.loc 1 1643 14
 2846 0044 FB68     		ldr	r3, [r7, #12]
 2847 0046 9B6C     		ldr	r3, [r3, #72]
 2848 0048 0093     		str	r3, [sp]
 2849 004a 3B69     		ldr	r3, [r7, #16]
 2850 004c 0022     		movs	r2, #0
 2851 004e 2021     		movs	r1, #32
 2852 0050 F868     		ldr	r0, [r7, #12]
 2853 0052 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 2854 0056 0346     		mov	r3, r0
 2855 0058 FB75     		strb	r3, [r7, #23]
1644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if (status == HAL_OK)
 2856              		.loc 1 1645 8
 2857 005a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2858 005c 002B     		cmp	r3, #0
 2859 005e 37D1     		bne	.L134
1646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
1647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure QSPI: PSMAR register with the status match value */
1648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 2860              		.loc 1 1648 7
 2861 0060 FB68     		ldr	r3, [r7, #12]
 2862 0062 1B68     		ldr	r3, [r3]
 2863 0064 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccjfKiuT.s 			page 80


 2864 0066 1268     		ldr	r2, [r2]
 2865 0068 9A62     		str	r2, [r3, #40]
1649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure QSPI: PSMKR register with the status mask value */
1651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 2866              		.loc 1 1651 7
 2867 006a FB68     		ldr	r3, [r7, #12]
 2868 006c 1B68     		ldr	r3, [r3]
 2869 006e 7A68     		ldr	r2, [r7, #4]
 2870 0070 5268     		ldr	r2, [r2, #4]
 2871 0072 5A62     		str	r2, [r3, #36]
1652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure QSPI: PIR register with the interval value */
1654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 2872              		.loc 1 1654 7
 2873 0074 FB68     		ldr	r3, [r7, #12]
 2874 0076 1B68     		ldr	r3, [r3]
 2875 0078 7A68     		ldr	r2, [r7, #4]
 2876 007a 9268     		ldr	r2, [r2, #8]
 2877 007c DA62     		str	r2, [r3, #44]
1655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure QSPI: CR register with Match mode and Automatic stop mode */
1657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 2878              		.loc 1 1657 7
 2879 007e FB68     		ldr	r3, [r7, #12]
 2880 0080 1B68     		ldr	r3, [r3]
 2881 0082 1B68     		ldr	r3, [r3]
 2882 0084 23F44001 		bic	r1, r3, #12582912
 2883 0088 7B68     		ldr	r3, [r7, #4]
 2884 008a 1A69     		ldr	r2, [r3, #16]
 2885 008c 7B68     		ldr	r3, [r7, #4]
 2886 008e 5B69     		ldr	r3, [r3, #20]
 2887 0090 1A43     		orrs	r2, r2, r3
 2888 0092 FB68     		ldr	r3, [r7, #12]
 2889 0094 1B68     		ldr	r3, [r3]
 2890 0096 0A43     		orrs	r2, r2, r1
 2891 0098 1A60     		str	r2, [r3]
1658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                (cfg->MatchMode | cfg->AutomaticStop));
1659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Clear interrupt */
1661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TE | QSPI_FLAG_SM);
 2892              		.loc 1 1661 7
 2893 009a FB68     		ldr	r3, [r7, #12]
 2894 009c 1B68     		ldr	r3, [r3]
 2895 009e 0922     		movs	r2, #9
 2896 00a0 DA60     		str	r2, [r3, #12]
1662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Call the configuration function */
1664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       cmd->NbData = cfg->StatusBytesSize;
 2897              		.loc 1 1664 24
 2898 00a2 7B68     		ldr	r3, [r7, #4]
 2899 00a4 DA68     		ldr	r2, [r3, #12]
 2900              		.loc 1 1664 19
 2901 00a6 BB68     		ldr	r3, [r7, #8]
 2902 00a8 9A62     		str	r2, [r3, #40]
1665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 2903              		.loc 1 1665 7
ARM GAS  /tmp/ccjfKiuT.s 			page 81


 2904 00aa 4FF00062 		mov	r2, #134217728
 2905 00ae B968     		ldr	r1, [r7, #8]
 2906 00b0 F868     		ldr	r0, [r7, #12]
 2907 00b2 FFF7FEFF 		bl	QSPI_Config
1666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Process unlocked */
1668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
 2908              		.loc 1 1668 7
 2909 00b6 FB68     		ldr	r3, [r7, #12]
 2910 00b8 0022     		movs	r2, #0
 2911 00ba 83F84020 		strb	r2, [r3, #64]
1669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Enable the QSPI Transfer Error and status match Interrupt */
1671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_QSPI_ENABLE_IT(hqspi, (QSPI_IT_SM | QSPI_IT_TE));
 2912              		.loc 1 1671 7
 2913 00be FB68     		ldr	r3, [r7, #12]
 2914 00c0 1B68     		ldr	r3, [r3]
 2915 00c2 1A68     		ldr	r2, [r3]
 2916 00c4 FB68     		ldr	r3, [r7, #12]
 2917 00c6 1B68     		ldr	r3, [r3]
 2918 00c8 42F41022 		orr	r2, r2, #589824
 2919 00cc 1A60     		str	r2, [r3]
 2920 00ce 0AE0     		b	.L135
 2921              	.L134:
1672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else
1675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
1676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Process unlocked */
1677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_UNLOCK(hqspi);
 2922              		.loc 1 1677 7
 2923 00d0 FB68     		ldr	r3, [r7, #12]
 2924 00d2 0022     		movs	r2, #0
 2925 00d4 83F84020 		strb	r2, [r3, #64]
 2926 00d8 05E0     		b	.L135
 2927              	.L133:
1678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
1681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = HAL_BUSY;
 2928              		.loc 1 1682 12
 2929 00da 0223     		movs	r3, #2
 2930 00dc FB75     		strb	r3, [r7, #23]
1683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Process unlocked */
1685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     __HAL_UNLOCK(hqspi);
 2931              		.loc 1 1685 5
 2932 00de FB68     		ldr	r3, [r7, #12]
 2933 00e0 0022     		movs	r2, #0
 2934 00e2 83F84020 		strb	r2, [r3, #64]
 2935              	.L135:
1686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Return function status */
1689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
 2936              		.loc 1 1689 10
ARM GAS  /tmp/ccjfKiuT.s 			page 82


 2937 00e6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2938              	.L132:
1690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 2939              		.loc 1 1690 1
 2940 00e8 1846     		mov	r0, r3
 2941 00ea 1837     		adds	r7, r7, #24
 2942              	.LCFI77:
 2943              		.cfi_def_cfa_offset 8
 2944 00ec BD46     		mov	sp, r7
 2945              	.LCFI78:
 2946              		.cfi_def_cfa_register 13
 2947              		@ sp needed
 2948 00ee 80BD     		pop	{r7, pc}
 2949              		.cfi_endproc
 2950              	.LFE345:
 2952              		.section	.text.HAL_QSPI_MemoryMapped,"ax",%progbits
 2953              		.align	1
 2954              		.global	HAL_QSPI_MemoryMapped
 2955              		.syntax unified
 2956              		.thumb
 2957              		.thumb_func
 2958              		.fpu fpv5-d16
 2960              	HAL_QSPI_MemoryMapped:
 2961              	.LFB346:
1691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
1693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Configure the Memory Mapped mode.
1694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  cmd : structure that contains the command configuration information.
1696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  cfg : structure that contains the memory mapped configuration information.
1697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @note   This function is used only in Memory mapped Mode
1698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL status
1699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_MemoryMapped(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, QSPI_M
1701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 2962              		.loc 1 1701 1
 2963              		.cfi_startproc
 2964              		@ args = 0, pretend = 0, frame = 24
 2965              		@ frame_needed = 1, uses_anonymous_args = 0
 2966 0000 80B5     		push	{r7, lr}
 2967              	.LCFI79:
 2968              		.cfi_def_cfa_offset 8
 2969              		.cfi_offset 7, -8
 2970              		.cfi_offset 14, -4
 2971 0002 88B0     		sub	sp, sp, #32
 2972              	.LCFI80:
 2973              		.cfi_def_cfa_offset 40
 2974 0004 02AF     		add	r7, sp, #8
 2975              	.LCFI81:
 2976              		.cfi_def_cfa 7, 32
 2977 0006 F860     		str	r0, [r7, #12]
 2978 0008 B960     		str	r1, [r7, #8]
 2979 000a 7A60     		str	r2, [r7, #4]
1702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status;
1703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
 2980              		.loc 1 1703 24
 2981 000c FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccjfKiuT.s 			page 83


 2982 0010 3861     		str	r0, [r7, #16]
1704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Check the parameters */
1706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_INSTRUCTION_MODE(cmd->InstructionMode));
1707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
1708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_INSTRUCTION(cmd->Instruction));
1710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_ADDRESS_MODE(cmd->AddressMode));
1713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (cmd->AddressMode != QSPI_ADDRESS_NONE)
1714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     assert_param(IS_QSPI_ADDRESS_SIZE(cmd->AddressSize));
1716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_ALTERNATE_BYTES_MODE(cmd->AlternateByteMode));
1719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
1720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     assert_param(IS_QSPI_ALTERNATE_BYTES_SIZE(cmd->AlternateBytesSize));
1722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DUMMY_CYCLES(cmd->DummyCycles));
1725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DATA_MODE(cmd->DataMode));
1726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_MODE(cmd->DdrMode));
1728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_DDR_HHC(cmd->DdrHoldHalfCycle));
1729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_SIOO_MODE(cmd->SIOOMode));
1730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_TIMEOUT_ACTIVATION(cfg->TimeOutActivation));
1732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process locked */
1734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
 2983              		.loc 1 1734 3
 2984 0012 FB68     		ldr	r3, [r7, #12]
 2985 0014 93F84030 		ldrb	r3, [r3, #64]
 2986 0018 DBB2     		uxtb	r3, r3
 2987 001a 012B     		cmp	r3, #1
 2988 001c 01D1     		bne	.L137
 2989              		.loc 1 1734 3 is_stmt 0 discriminator 1
 2990 001e 0223     		movs	r3, #2
 2991 0020 4CE0     		b	.L138
 2992              	.L137:
 2993              		.loc 1 1734 3 discriminator 2
 2994 0022 FB68     		ldr	r3, [r7, #12]
 2995 0024 0122     		movs	r2, #1
 2996 0026 83F84020 		strb	r2, [r3, #64]
1735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
 2997              		.loc 1 1736 11 is_stmt 1 discriminator 2
 2998 002a FB68     		ldr	r3, [r7, #12]
 2999 002c 93F84130 		ldrb	r3, [r3, #65]
 3000 0030 DBB2     		uxtb	r3, r3
 3001              		.loc 1 1736 5 discriminator 2
 3002 0032 012B     		cmp	r3, #1
 3003 0034 3BD1     		bne	.L139
1737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
ARM GAS  /tmp/ccjfKiuT.s 			page 84


 3004              		.loc 1 1738 22
 3005 0036 FB68     		ldr	r3, [r7, #12]
 3006 0038 0022     		movs	r2, #0
 3007 003a 5A64     		str	r2, [r3, #68]
1739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Update state */
1741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 3008              		.loc 1 1741 18
 3009 003c FB68     		ldr	r3, [r7, #12]
 3010 003e 8222     		movs	r2, #130
 3011 0040 83F84120 		strb	r2, [r3, #65]
1742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Wait till BUSY flag reset */
1744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout
 3012              		.loc 1 1744 14
 3013 0044 FB68     		ldr	r3, [r7, #12]
 3014 0046 9B6C     		ldr	r3, [r3, #72]
 3015 0048 0093     		str	r3, [sp]
 3016 004a 3B69     		ldr	r3, [r7, #16]
 3017 004c 0022     		movs	r2, #0
 3018 004e 2021     		movs	r1, #32
 3019 0050 F868     		ldr	r0, [r7, #12]
 3020 0052 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 3021 0056 0346     		mov	r3, r0
 3022 0058 FB75     		strb	r3, [r7, #23]
1745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if (status == HAL_OK)
 3023              		.loc 1 1746 8
 3024 005a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3025 005c 002B     		cmp	r3, #0
 3026 005e 28D1     		bne	.L140
1747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
1748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure QSPI: CR register with timeout counter enable */
1749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 3027              		.loc 1 1749 5
 3028 0060 FB68     		ldr	r3, [r7, #12]
 3029 0062 1B68     		ldr	r3, [r3]
 3030 0064 1B68     		ldr	r3, [r3]
 3031 0066 23F00801 		bic	r1, r3, #8
 3032 006a 7B68     		ldr	r3, [r7, #4]
 3033 006c 5A68     		ldr	r2, [r3, #4]
 3034 006e FB68     		ldr	r3, [r7, #12]
 3035 0070 1B68     		ldr	r3, [r3]
 3036 0072 0A43     		orrs	r2, r2, r1
 3037 0074 1A60     		str	r2, [r3]
1750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 3038              		.loc 1 1751 12
 3039 0076 7B68     		ldr	r3, [r7, #4]
 3040 0078 5B68     		ldr	r3, [r3, #4]
 3041              		.loc 1 1751 8
 3042 007a 082B     		cmp	r3, #8
 3043 007c 10D1     		bne	.L141
1752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
1753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         assert_param(IS_QSPI_TIMEOUT_PERIOD(cfg->TimeOutPeriod));
1754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Configure QSPI: LPTR register with the low-power timeout value */
ARM GAS  /tmp/ccjfKiuT.s 			page 85


1756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 3044              		.loc 1 1756 9
 3045 007e FB68     		ldr	r3, [r7, #12]
 3046 0080 1B68     		ldr	r3, [r3]
 3047 0082 7A68     		ldr	r2, [r7, #4]
 3048 0084 1268     		ldr	r2, [r2]
 3049 0086 1A63     		str	r2, [r3, #48]
1757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Clear interrupt */
1759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 3050              		.loc 1 1759 9
 3051 0088 FB68     		ldr	r3, [r7, #12]
 3052 008a 1B68     		ldr	r3, [r3]
 3053 008c 1022     		movs	r2, #16
 3054 008e DA60     		str	r2, [r3, #12]
1760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Enable the QSPI TimeOut Interrupt */
1762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 3055              		.loc 1 1762 9
 3056 0090 FB68     		ldr	r3, [r7, #12]
 3057 0092 1B68     		ldr	r3, [r3]
 3058 0094 1A68     		ldr	r2, [r3]
 3059 0096 FB68     		ldr	r3, [r7, #12]
 3060 0098 1B68     		ldr	r3, [r3]
 3061 009a 42F48012 		orr	r2, r2, #1048576
 3062 009e 1A60     		str	r2, [r3]
 3063              	.L141:
1763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
1764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Call the configuration function */
1766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 3064              		.loc 1 1766 7
 3065 00a0 4FF04062 		mov	r2, #201326592
 3066 00a4 B968     		ldr	r1, [r7, #8]
 3067 00a6 F868     		ldr	r0, [r7, #12]
 3068 00a8 FFF7FEFF 		bl	QSPI_Config
 3069 00ac 01E0     		b	.L140
 3070              	.L139:
1767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
1770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = HAL_BUSY;
 3071              		.loc 1 1771 12
 3072 00ae 0223     		movs	r3, #2
 3073 00b0 FB75     		strb	r3, [r7, #23]
 3074              	.L140:
1772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process unlocked */
1775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
 3075              		.loc 1 1775 3
 3076 00b2 FB68     		ldr	r3, [r7, #12]
 3077 00b4 0022     		movs	r2, #0
 3078 00b6 83F84020 		strb	r2, [r3, #64]
1776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Return function status */
ARM GAS  /tmp/ccjfKiuT.s 			page 86


1778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
 3079              		.loc 1 1778 10
 3080 00ba FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3081              	.L138:
1779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 3082              		.loc 1 1779 1
 3083 00bc 1846     		mov	r0, r3
 3084 00be 1837     		adds	r7, r7, #24
 3085              	.LCFI82:
 3086              		.cfi_def_cfa_offset 8
 3087 00c0 BD46     		mov	sp, r7
 3088              	.LCFI83:
 3089              		.cfi_def_cfa_register 13
 3090              		@ sp needed
 3091 00c2 80BD     		pop	{r7, pc}
 3092              		.cfi_endproc
 3093              	.LFE346:
 3095              		.section	.text.HAL_QSPI_ErrorCallback,"ax",%progbits
 3096              		.align	1
 3097              		.weak	HAL_QSPI_ErrorCallback
 3098              		.syntax unified
 3099              		.thumb
 3100              		.thumb_func
 3101              		.fpu fpv5-d16
 3103              	HAL_QSPI_ErrorCallback:
 3104              	.LFB347:
1780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
1782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Transfer Error callback.
1783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
1785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** __weak void HAL_QSPI_ErrorCallback(QSPI_HandleTypeDef *hqspi)
1787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 3105              		.loc 1 1787 1
 3106              		.cfi_startproc
 3107              		@ args = 0, pretend = 0, frame = 8
 3108              		@ frame_needed = 1, uses_anonymous_args = 0
 3109              		@ link register save eliminated.
 3110 0000 80B4     		push	{r7}
 3111              	.LCFI84:
 3112              		.cfi_def_cfa_offset 4
 3113              		.cfi_offset 7, -4
 3114 0002 83B0     		sub	sp, sp, #12
 3115              	.LCFI85:
 3116              		.cfi_def_cfa_offset 16
 3117 0004 00AF     		add	r7, sp, #0
 3118              	.LCFI86:
 3119              		.cfi_def_cfa_register 7
 3120 0006 7860     		str	r0, [r7, #4]
1788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   UNUSED(hqspi);
1790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             the HAL_QSPI_ErrorCallback could be implemented in the user file
1793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****    */
1794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
ARM GAS  /tmp/ccjfKiuT.s 			page 87


 3121              		.loc 1 1794 1
 3122 0008 00BF     		nop
 3123 000a 0C37     		adds	r7, r7, #12
 3124              	.LCFI87:
 3125              		.cfi_def_cfa_offset 4
 3126 000c BD46     		mov	sp, r7
 3127              	.LCFI88:
 3128              		.cfi_def_cfa_register 13
 3129              		@ sp needed
 3130 000e 5DF8047B 		ldr	r7, [sp], #4
 3131              	.LCFI89:
 3132              		.cfi_restore 7
 3133              		.cfi_def_cfa_offset 0
 3134 0012 7047     		bx	lr
 3135              		.cfi_endproc
 3136              	.LFE347:
 3138              		.section	.text.HAL_QSPI_AbortCpltCallback,"ax",%progbits
 3139              		.align	1
 3140              		.weak	HAL_QSPI_AbortCpltCallback
 3141              		.syntax unified
 3142              		.thumb
 3143              		.thumb_func
 3144              		.fpu fpv5-d16
 3146              	HAL_QSPI_AbortCpltCallback:
 3147              	.LFB348:
1795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
1797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Abort completed callback.
1798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
1800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** __weak void HAL_QSPI_AbortCpltCallback(QSPI_HandleTypeDef *hqspi)
1802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 3148              		.loc 1 1802 1
 3149              		.cfi_startproc
 3150              		@ args = 0, pretend = 0, frame = 8
 3151              		@ frame_needed = 1, uses_anonymous_args = 0
 3152              		@ link register save eliminated.
 3153 0000 80B4     		push	{r7}
 3154              	.LCFI90:
 3155              		.cfi_def_cfa_offset 4
 3156              		.cfi_offset 7, -4
 3157 0002 83B0     		sub	sp, sp, #12
 3158              	.LCFI91:
 3159              		.cfi_def_cfa_offset 16
 3160 0004 00AF     		add	r7, sp, #0
 3161              	.LCFI92:
 3162              		.cfi_def_cfa_register 7
 3163 0006 7860     		str	r0, [r7, #4]
1803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   UNUSED(hqspi);
1805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****            the HAL_QSPI_AbortCpltCallback could be implemented in the user file
1808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****    */
1809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 3164              		.loc 1 1809 1
ARM GAS  /tmp/ccjfKiuT.s 			page 88


 3165 0008 00BF     		nop
 3166 000a 0C37     		adds	r7, r7, #12
 3167              	.LCFI93:
 3168              		.cfi_def_cfa_offset 4
 3169 000c BD46     		mov	sp, r7
 3170              	.LCFI94:
 3171              		.cfi_def_cfa_register 13
 3172              		@ sp needed
 3173 000e 5DF8047B 		ldr	r7, [sp], #4
 3174              	.LCFI95:
 3175              		.cfi_restore 7
 3176              		.cfi_def_cfa_offset 0
 3177 0012 7047     		bx	lr
 3178              		.cfi_endproc
 3179              	.LFE348:
 3181              		.section	.text.HAL_QSPI_CmdCpltCallback,"ax",%progbits
 3182              		.align	1
 3183              		.weak	HAL_QSPI_CmdCpltCallback
 3184              		.syntax unified
 3185              		.thumb
 3186              		.thumb_func
 3187              		.fpu fpv5-d16
 3189              	HAL_QSPI_CmdCpltCallback:
 3190              	.LFB349:
1810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
1812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Command completed callback.
1813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
1815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** __weak void HAL_QSPI_CmdCpltCallback(QSPI_HandleTypeDef *hqspi)
1817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 3191              		.loc 1 1817 1
 3192              		.cfi_startproc
 3193              		@ args = 0, pretend = 0, frame = 8
 3194              		@ frame_needed = 1, uses_anonymous_args = 0
 3195              		@ link register save eliminated.
 3196 0000 80B4     		push	{r7}
 3197              	.LCFI96:
 3198              		.cfi_def_cfa_offset 4
 3199              		.cfi_offset 7, -4
 3200 0002 83B0     		sub	sp, sp, #12
 3201              	.LCFI97:
 3202              		.cfi_def_cfa_offset 16
 3203 0004 00AF     		add	r7, sp, #0
 3204              	.LCFI98:
 3205              		.cfi_def_cfa_register 7
 3206 0006 7860     		str	r0, [r7, #4]
1818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   UNUSED(hqspi);
1820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****            the HAL_QSPI_CmdCpltCallback could be implemented in the user file
1823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****    */
1824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 3207              		.loc 1 1824 1
 3208 0008 00BF     		nop
ARM GAS  /tmp/ccjfKiuT.s 			page 89


 3209 000a 0C37     		adds	r7, r7, #12
 3210              	.LCFI99:
 3211              		.cfi_def_cfa_offset 4
 3212 000c BD46     		mov	sp, r7
 3213              	.LCFI100:
 3214              		.cfi_def_cfa_register 13
 3215              		@ sp needed
 3216 000e 5DF8047B 		ldr	r7, [sp], #4
 3217              	.LCFI101:
 3218              		.cfi_restore 7
 3219              		.cfi_def_cfa_offset 0
 3220 0012 7047     		bx	lr
 3221              		.cfi_endproc
 3222              	.LFE349:
 3224              		.section	.text.HAL_QSPI_RxCpltCallback,"ax",%progbits
 3225              		.align	1
 3226              		.weak	HAL_QSPI_RxCpltCallback
 3227              		.syntax unified
 3228              		.thumb
 3229              		.thumb_func
 3230              		.fpu fpv5-d16
 3232              	HAL_QSPI_RxCpltCallback:
 3233              	.LFB350:
1825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
1827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Rx Transfer completed callback.
1828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
1830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** __weak void HAL_QSPI_RxCpltCallback(QSPI_HandleTypeDef *hqspi)
1832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 3234              		.loc 1 1832 1
 3235              		.cfi_startproc
 3236              		@ args = 0, pretend = 0, frame = 8
 3237              		@ frame_needed = 1, uses_anonymous_args = 0
 3238              		@ link register save eliminated.
 3239 0000 80B4     		push	{r7}
 3240              	.LCFI102:
 3241              		.cfi_def_cfa_offset 4
 3242              		.cfi_offset 7, -4
 3243 0002 83B0     		sub	sp, sp, #12
 3244              	.LCFI103:
 3245              		.cfi_def_cfa_offset 16
 3246 0004 00AF     		add	r7, sp, #0
 3247              	.LCFI104:
 3248              		.cfi_def_cfa_register 7
 3249 0006 7860     		str	r0, [r7, #4]
1833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   UNUSED(hqspi);
1835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****            the HAL_QSPI_RxCpltCallback could be implemented in the user file
1838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****    */
1839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 3250              		.loc 1 1839 1
 3251 0008 00BF     		nop
 3252 000a 0C37     		adds	r7, r7, #12
ARM GAS  /tmp/ccjfKiuT.s 			page 90


 3253              	.LCFI105:
 3254              		.cfi_def_cfa_offset 4
 3255 000c BD46     		mov	sp, r7
 3256              	.LCFI106:
 3257              		.cfi_def_cfa_register 13
 3258              		@ sp needed
 3259 000e 5DF8047B 		ldr	r7, [sp], #4
 3260              	.LCFI107:
 3261              		.cfi_restore 7
 3262              		.cfi_def_cfa_offset 0
 3263 0012 7047     		bx	lr
 3264              		.cfi_endproc
 3265              	.LFE350:
 3267              		.section	.text.HAL_QSPI_TxCpltCallback,"ax",%progbits
 3268              		.align	1
 3269              		.weak	HAL_QSPI_TxCpltCallback
 3270              		.syntax unified
 3271              		.thumb
 3272              		.thumb_func
 3273              		.fpu fpv5-d16
 3275              	HAL_QSPI_TxCpltCallback:
 3276              	.LFB351:
1840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
1842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Tx Transfer completed callback.
1843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
1845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** __weak void HAL_QSPI_TxCpltCallback(QSPI_HandleTypeDef *hqspi)
1847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 3277              		.loc 1 1847 1
 3278              		.cfi_startproc
 3279              		@ args = 0, pretend = 0, frame = 8
 3280              		@ frame_needed = 1, uses_anonymous_args = 0
 3281              		@ link register save eliminated.
 3282 0000 80B4     		push	{r7}
 3283              	.LCFI108:
 3284              		.cfi_def_cfa_offset 4
 3285              		.cfi_offset 7, -4
 3286 0002 83B0     		sub	sp, sp, #12
 3287              	.LCFI109:
 3288              		.cfi_def_cfa_offset 16
 3289 0004 00AF     		add	r7, sp, #0
 3290              	.LCFI110:
 3291              		.cfi_def_cfa_register 7
 3292 0006 7860     		str	r0, [r7, #4]
1848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   UNUSED(hqspi);
1850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****            the HAL_QSPI_TxCpltCallback could be implemented in the user file
1853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****    */
1854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 3293              		.loc 1 1854 1
 3294 0008 00BF     		nop
 3295 000a 0C37     		adds	r7, r7, #12
 3296              	.LCFI111:
ARM GAS  /tmp/ccjfKiuT.s 			page 91


 3297              		.cfi_def_cfa_offset 4
 3298 000c BD46     		mov	sp, r7
 3299              	.LCFI112:
 3300              		.cfi_def_cfa_register 13
 3301              		@ sp needed
 3302 000e 5DF8047B 		ldr	r7, [sp], #4
 3303              	.LCFI113:
 3304              		.cfi_restore 7
 3305              		.cfi_def_cfa_offset 0
 3306 0012 7047     		bx	lr
 3307              		.cfi_endproc
 3308              	.LFE351:
 3310              		.section	.text.HAL_QSPI_FifoThresholdCallback,"ax",%progbits
 3311              		.align	1
 3312              		.weak	HAL_QSPI_FifoThresholdCallback
 3313              		.syntax unified
 3314              		.thumb
 3315              		.thumb_func
 3316              		.fpu fpv5-d16
 3318              	HAL_QSPI_FifoThresholdCallback:
 3319              	.LFB352:
1855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
1858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  FIFO Threshold callback.
1859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
1861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** __weak void HAL_QSPI_FifoThresholdCallback(QSPI_HandleTypeDef *hqspi)
1863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 3320              		.loc 1 1863 1
 3321              		.cfi_startproc
 3322              		@ args = 0, pretend = 0, frame = 8
 3323              		@ frame_needed = 1, uses_anonymous_args = 0
 3324              		@ link register save eliminated.
 3325 0000 80B4     		push	{r7}
 3326              	.LCFI114:
 3327              		.cfi_def_cfa_offset 4
 3328              		.cfi_offset 7, -4
 3329 0002 83B0     		sub	sp, sp, #12
 3330              	.LCFI115:
 3331              		.cfi_def_cfa_offset 16
 3332 0004 00AF     		add	r7, sp, #0
 3333              	.LCFI116:
 3334              		.cfi_def_cfa_register 7
 3335 0006 7860     		str	r0, [r7, #4]
1864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   UNUSED(hqspi);
1866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             the HAL_QSPI_FIFOThresholdCallback could be implemented in the user file
1869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****    */
1870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 3336              		.loc 1 1870 1
 3337 0008 00BF     		nop
 3338 000a 0C37     		adds	r7, r7, #12
 3339              	.LCFI117:
ARM GAS  /tmp/ccjfKiuT.s 			page 92


 3340              		.cfi_def_cfa_offset 4
 3341 000c BD46     		mov	sp, r7
 3342              	.LCFI118:
 3343              		.cfi_def_cfa_register 13
 3344              		@ sp needed
 3345 000e 5DF8047B 		ldr	r7, [sp], #4
 3346              	.LCFI119:
 3347              		.cfi_restore 7
 3348              		.cfi_def_cfa_offset 0
 3349 0012 7047     		bx	lr
 3350              		.cfi_endproc
 3351              	.LFE352:
 3353              		.section	.text.HAL_QSPI_StatusMatchCallback,"ax",%progbits
 3354              		.align	1
 3355              		.weak	HAL_QSPI_StatusMatchCallback
 3356              		.syntax unified
 3357              		.thumb
 3358              		.thumb_func
 3359              		.fpu fpv5-d16
 3361              	HAL_QSPI_StatusMatchCallback:
 3362              	.LFB353:
1871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
1873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Status Match callback.
1874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
1876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** __weak void HAL_QSPI_StatusMatchCallback(QSPI_HandleTypeDef *hqspi)
1878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 3363              		.loc 1 1878 1
 3364              		.cfi_startproc
 3365              		@ args = 0, pretend = 0, frame = 8
 3366              		@ frame_needed = 1, uses_anonymous_args = 0
 3367              		@ link register save eliminated.
 3368 0000 80B4     		push	{r7}
 3369              	.LCFI120:
 3370              		.cfi_def_cfa_offset 4
 3371              		.cfi_offset 7, -4
 3372 0002 83B0     		sub	sp, sp, #12
 3373              	.LCFI121:
 3374              		.cfi_def_cfa_offset 16
 3375 0004 00AF     		add	r7, sp, #0
 3376              	.LCFI122:
 3377              		.cfi_def_cfa_register 7
 3378 0006 7860     		str	r0, [r7, #4]
1879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   UNUSED(hqspi);
1881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             the HAL_QSPI_StatusMatchCallback could be implemented in the user file
1884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****    */
1885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 3379              		.loc 1 1885 1
 3380 0008 00BF     		nop
 3381 000a 0C37     		adds	r7, r7, #12
 3382              	.LCFI123:
 3383              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccjfKiuT.s 			page 93


 3384 000c BD46     		mov	sp, r7
 3385              	.LCFI124:
 3386              		.cfi_def_cfa_register 13
 3387              		@ sp needed
 3388 000e 5DF8047B 		ldr	r7, [sp], #4
 3389              	.LCFI125:
 3390              		.cfi_restore 7
 3391              		.cfi_def_cfa_offset 0
 3392 0012 7047     		bx	lr
 3393              		.cfi_endproc
 3394              	.LFE353:
 3396              		.section	.text.HAL_QSPI_TimeOutCallback,"ax",%progbits
 3397              		.align	1
 3398              		.weak	HAL_QSPI_TimeOutCallback
 3399              		.syntax unified
 3400              		.thumb
 3401              		.thumb_func
 3402              		.fpu fpv5-d16
 3404              	HAL_QSPI_TimeOutCallback:
 3405              	.LFB354:
1886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
1888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Timeout callback.
1889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
1890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
1891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** __weak void HAL_QSPI_TimeOutCallback(QSPI_HandleTypeDef *hqspi)
1893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 3406              		.loc 1 1893 1
 3407              		.cfi_startproc
 3408              		@ args = 0, pretend = 0, frame = 8
 3409              		@ frame_needed = 1, uses_anonymous_args = 0
 3410              		@ link register save eliminated.
 3411 0000 80B4     		push	{r7}
 3412              	.LCFI126:
 3413              		.cfi_def_cfa_offset 4
 3414              		.cfi_offset 7, -4
 3415 0002 83B0     		sub	sp, sp, #12
 3416              	.LCFI127:
 3417              		.cfi_def_cfa_offset 16
 3418 0004 00AF     		add	r7, sp, #0
 3419              	.LCFI128:
 3420              		.cfi_def_cfa_register 7
 3421 0006 7860     		str	r0, [r7, #4]
1894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Prevent unused argument(s) compilation warning */
1895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   UNUSED(hqspi);
1896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****             the HAL_QSPI_TimeOutCallback could be implemented in the user file
1899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****    */
1900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 3422              		.loc 1 1900 1
 3423 0008 00BF     		nop
 3424 000a 0C37     		adds	r7, r7, #12
 3425              	.LCFI129:
 3426              		.cfi_def_cfa_offset 4
 3427 000c BD46     		mov	sp, r7
ARM GAS  /tmp/ccjfKiuT.s 			page 94


 3428              	.LCFI130:
 3429              		.cfi_def_cfa_register 13
 3430              		@ sp needed
 3431 000e 5DF8047B 		ldr	r7, [sp], #4
 3432              	.LCFI131:
 3433              		.cfi_restore 7
 3434              		.cfi_def_cfa_offset 0
 3435 0012 7047     		bx	lr
 3436              		.cfi_endproc
 3437              	.LFE354:
 3439              		.section	.text.HAL_QSPI_GetState,"ax",%progbits
 3440              		.align	1
 3441              		.global	HAL_QSPI_GetState
 3442              		.syntax unified
 3443              		.thumb
 3444              		.thumb_func
 3445              		.fpu fpv5-d16
 3447              	HAL_QSPI_GetState:
 3448              	.LFB355:
1901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
1902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
1903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Register a User QSPI Callback
1904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *         To be used instead of the weak (surcharged) predefined callback
1905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
1906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param CallbackId : ID of the callback to be registered
1907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *        This parameter can be one of the following values:
1908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_ERROR_CB_ID          QSPI Error Callback ID
1909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_ABORT_CB_ID          QSPI Abort Callback ID
1910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_FIFO_THRESHOLD_CB_ID QSPI FIFO Threshold Callback ID
1911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_CMD_CPLT_CB_ID       QSPI Command Complete Callback ID
1912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_RX_CPLT_CB_ID        QSPI Rx Complete Callback ID
1913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_TX_CPLT_CB_ID        QSPI Tx Complete Callback ID
1914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_STATUS_MATCH_CB_ID   QSPI Status Match Callback ID
1915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_TIMEOUT_CB_ID        QSPI Timeout Callback ID
1916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_MSP_INIT_CB_ID       QSPI MspInit callback ID
1917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_MSP_DEINIT_CB_ID     QSPI MspDeInit callback ID
1918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param pCallback : pointer to the Callback function
1919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval status
1920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
1921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_RegisterCallback (QSPI_HandleTypeDef *hqspi, HAL_QSPI_CallbackIDTypeDef 
1922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
1923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
1924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(pCallback == NULL)
1926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Update the error code */
1928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_CALLBACK;
1929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     return HAL_ERROR;
1930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process locked */
1933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
1934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
1935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
1936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     switch (CallbackId)
1938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
ARM GAS  /tmp/ccjfKiuT.s 			page 95


1939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case  HAL_QSPI_ERROR_CB_ID :
1940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->ErrorCallback = pCallback;
1941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
1942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_ABORT_CB_ID :
1943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->AbortCpltCallback = pCallback;
1944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
1945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_FIFO_THRESHOLD_CB_ID :
1946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->FifoThresholdCallback = pCallback;
1947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
1948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_CMD_CPLT_CB_ID :
1949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->CmdCpltCallback = pCallback;
1950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
1951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_RX_CPLT_CB_ID :
1952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->RxCpltCallback = pCallback;
1953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
1954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_TX_CPLT_CB_ID :
1955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->TxCpltCallback = pCallback;
1956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
1957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_STATUS_MATCH_CB_ID :
1958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->StatusMatchCallback = pCallback;
1959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
1960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_TIMEOUT_CB_ID :
1961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->TimeOutCallback = pCallback;
1962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
1963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_MSP_INIT_CB_ID :
1964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->MspInitCallback = pCallback;
1965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
1966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_MSP_DEINIT_CB_ID :
1967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->MspDeInitCallback = pCallback;
1968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
1969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     default :
1970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Update the error code */
1971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_CALLBACK;
1972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* update return status */
1973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       status =  HAL_ERROR;
1974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
1975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else if (hqspi->State == HAL_QSPI_STATE_RESET)
1978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     switch (CallbackId)
1980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
1981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_MSP_INIT_CB_ID :
1982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->MspInitCallback = pCallback;
1983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
1984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_MSP_DEINIT_CB_ID :
1985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->MspDeInitCallback = pCallback;
1986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
1987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     default :
1988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Update the error code */
1989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_CALLBACK;
1990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* update return status */
1991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       status =  HAL_ERROR;
1992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
1993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
1994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
1995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
ARM GAS  /tmp/ccjfKiuT.s 			page 96


1996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
1997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Update the error code */
1998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_CALLBACK;
1999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* update return status */
2000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status =  HAL_ERROR;
2001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
2002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Release Lock */
2004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
2005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
2006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
2007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
2009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Unregister a User QSPI Callback
2010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *         QSPI Callback is redirected to the weak (surcharged) predefined callback
2011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param hqspi : QSPI handle
2012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param CallbackId : ID of the callback to be unregistered
2013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *        This parameter can be one of the following values:
2014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_ERROR_CB_ID          QSPI Error Callback ID
2015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_ABORT_CB_ID          QSPI Abort Callback ID
2016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_FIFO_THRESHOLD_CB_ID QSPI FIFO Threshold Callback ID
2017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_CMD_CPLT_CB_ID       QSPI Command Complete Callback ID
2018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_RX_CPLT_CB_ID        QSPI Rx Complete Callback ID
2019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_TX_CPLT_CB_ID        QSPI Tx Complete Callback ID
2020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_STATUS_MATCH_CB_ID   QSPI Status Match Callback ID
2021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_TIMEOUT_CB_ID        QSPI Timeout Callback ID
2022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_MSP_INIT_CB_ID       QSPI MspInit callback ID
2023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *          @arg @ref HAL_QSPI_MSP_DEINIT_CB_ID     QSPI MspDeInit callback ID
2024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval status
2025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
2026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_UnRegisterCallback (QSPI_HandleTypeDef *hqspi, HAL_QSPI_CallbackIDTypeDe
2027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
2028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
2029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process locked */
2031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
2032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
2034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
2035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     switch (CallbackId)
2036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
2037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case  HAL_QSPI_ERROR_CB_ID :
2038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->ErrorCallback = HAL_QSPI_ErrorCallback;
2039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
2040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_ABORT_CB_ID :
2041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->AbortCpltCallback = HAL_QSPI_AbortCpltCallback;
2042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
2043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_FIFO_THRESHOLD_CB_ID :
2044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->FifoThresholdCallback = HAL_QSPI_FifoThresholdCallback;
2045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
2046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_CMD_CPLT_CB_ID :
2047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->CmdCpltCallback = HAL_QSPI_CmdCpltCallback;
2048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
2049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_RX_CPLT_CB_ID :
2050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->RxCpltCallback = HAL_QSPI_RxCpltCallback;
2051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
2052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_TX_CPLT_CB_ID :
ARM GAS  /tmp/ccjfKiuT.s 			page 97


2053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->TxCpltCallback = HAL_QSPI_TxCpltCallback;
2054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
2055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_STATUS_MATCH_CB_ID :
2056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->StatusMatchCallback = HAL_QSPI_StatusMatchCallback;
2057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
2058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_TIMEOUT_CB_ID :
2059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->TimeOutCallback = HAL_QSPI_TimeOutCallback;
2060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
2061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_MSP_INIT_CB_ID :
2062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->MspInitCallback = HAL_QSPI_MspInit;
2063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
2064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_MSP_DEINIT_CB_ID :
2065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->MspDeInitCallback = HAL_QSPI_MspDeInit;
2066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
2067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     default :
2068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Update the error code */
2069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_CALLBACK;
2070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* update return status */
2071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       status =  HAL_ERROR;
2072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
2073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
2074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
2075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else if (hqspi->State == HAL_QSPI_STATE_RESET)
2076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
2077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     switch (CallbackId)
2078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
2079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_MSP_INIT_CB_ID :
2080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->MspInitCallback = HAL_QSPI_MspInit;
2081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
2082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     case HAL_QSPI_MSP_DEINIT_CB_ID :
2083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->MspDeInitCallback = HAL_QSPI_MspDeInit;
2084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
2085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     default :
2086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Update the error code */
2087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_CALLBACK;
2088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* update return status */
2089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       status =  HAL_ERROR;
2090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       break;
2091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
2092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
2093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
2094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
2095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Update the error code */
2096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_CALLBACK;
2097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* update return status */
2098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status =  HAL_ERROR;
2099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
2100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Release Lock */
2102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
2103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
2104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
2105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #endif
2106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
2108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @}
2109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
ARM GAS  /tmp/ccjfKiuT.s 			page 98


2110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /** @defgroup QSPI_Exported_Functions_Group3 Peripheral Control and State functions
2112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *  @brief   QSPI control and State functions
2113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *
2114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** @verbatim
2115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****  ===============================================================================
2116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                   ##### Peripheral Control and State functions #####
2117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****  ===============================================================================
2118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     [..]
2119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     This subsection provides a set of functions allowing to :
2120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (+) Check in run-time the state of the driver.
2121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (+) Check the error code set during last operation.
2122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       (+) Abort any operation.
2123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** @endverbatim
2126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @{
2127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
2128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
2130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Return the QSPI handle state.
2131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
2132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL state
2133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
2134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_QSPI_StateTypeDef HAL_QSPI_GetState(QSPI_HandleTypeDef *hqspi)
2135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 3449              		.loc 1 2135 1
 3450              		.cfi_startproc
 3451              		@ args = 0, pretend = 0, frame = 8
 3452              		@ frame_needed = 1, uses_anonymous_args = 0
 3453              		@ link register save eliminated.
 3454 0000 80B4     		push	{r7}
 3455              	.LCFI132:
 3456              		.cfi_def_cfa_offset 4
 3457              		.cfi_offset 7, -4
 3458 0002 83B0     		sub	sp, sp, #12
 3459              	.LCFI133:
 3460              		.cfi_def_cfa_offset 16
 3461 0004 00AF     		add	r7, sp, #0
 3462              	.LCFI134:
 3463              		.cfi_def_cfa_register 7
 3464 0006 7860     		str	r0, [r7, #4]
2136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Return QSPI handle state */
2137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return hqspi->State;
 3465              		.loc 1 2137 15
 3466 0008 7B68     		ldr	r3, [r7, #4]
 3467 000a 93F84130 		ldrb	r3, [r3, #65]
 3468 000e DBB2     		uxtb	r3, r3
2138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 3469              		.loc 1 2138 1
 3470 0010 1846     		mov	r0, r3
 3471 0012 0C37     		adds	r7, r7, #12
 3472              	.LCFI135:
 3473              		.cfi_def_cfa_offset 4
 3474 0014 BD46     		mov	sp, r7
 3475              	.LCFI136:
 3476              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccjfKiuT.s 			page 99


 3477              		@ sp needed
 3478 0016 5DF8047B 		ldr	r7, [sp], #4
 3479              	.LCFI137:
 3480              		.cfi_restore 7
 3481              		.cfi_def_cfa_offset 0
 3482 001a 7047     		bx	lr
 3483              		.cfi_endproc
 3484              	.LFE355:
 3486              		.section	.text.HAL_QSPI_GetError,"ax",%progbits
 3487              		.align	1
 3488              		.global	HAL_QSPI_GetError
 3489              		.syntax unified
 3490              		.thumb
 3491              		.thumb_func
 3492              		.fpu fpv5-d16
 3494              	HAL_QSPI_GetError:
 3495              	.LFB356:
2139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
2141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** * @brief  Return the QSPI error code.
2142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** * @param  hqspi : QSPI handle
2143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** * @retval QSPI Error Code
2144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** */
2145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** uint32_t HAL_QSPI_GetError(QSPI_HandleTypeDef *hqspi)
2146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 3496              		.loc 1 2146 1
 3497              		.cfi_startproc
 3498              		@ args = 0, pretend = 0, frame = 8
 3499              		@ frame_needed = 1, uses_anonymous_args = 0
 3500              		@ link register save eliminated.
 3501 0000 80B4     		push	{r7}
 3502              	.LCFI138:
 3503              		.cfi_def_cfa_offset 4
 3504              		.cfi_offset 7, -4
 3505 0002 83B0     		sub	sp, sp, #12
 3506              	.LCFI139:
 3507              		.cfi_def_cfa_offset 16
 3508 0004 00AF     		add	r7, sp, #0
 3509              	.LCFI140:
 3510              		.cfi_def_cfa_register 7
 3511 0006 7860     		str	r0, [r7, #4]
2147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return hqspi->ErrorCode;
 3512              		.loc 1 2147 15
 3513 0008 7B68     		ldr	r3, [r7, #4]
 3514 000a 5B6C     		ldr	r3, [r3, #68]
2148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 3515              		.loc 1 2148 1
 3516 000c 1846     		mov	r0, r3
 3517 000e 0C37     		adds	r7, r7, #12
 3518              	.LCFI141:
 3519              		.cfi_def_cfa_offset 4
 3520 0010 BD46     		mov	sp, r7
 3521              	.LCFI142:
 3522              		.cfi_def_cfa_register 13
 3523              		@ sp needed
 3524 0012 5DF8047B 		ldr	r7, [sp], #4
 3525              	.LCFI143:
ARM GAS  /tmp/ccjfKiuT.s 			page 100


 3526              		.cfi_restore 7
 3527              		.cfi_def_cfa_offset 0
 3528 0016 7047     		bx	lr
 3529              		.cfi_endproc
 3530              	.LFE356:
 3532              		.section	.text.HAL_QSPI_Abort,"ax",%progbits
 3533              		.align	1
 3534              		.global	HAL_QSPI_Abort
 3535              		.syntax unified
 3536              		.thumb
 3537              		.thumb_func
 3538              		.fpu fpv5-d16
 3540              	HAL_QSPI_Abort:
 3541              	.LFB357:
2149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
2151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** * @brief  Abort the current transmission.
2152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** * @param  hqspi : QSPI handle
2153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** * @retval HAL status
2154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** */
2155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Abort(QSPI_HandleTypeDef *hqspi)
2156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 3542              		.loc 1 2156 1
 3543              		.cfi_startproc
 3544              		@ args = 0, pretend = 0, frame = 16
 3545              		@ frame_needed = 1, uses_anonymous_args = 0
 3546 0000 80B5     		push	{r7, lr}
 3547              	.LCFI144:
 3548              		.cfi_def_cfa_offset 8
 3549              		.cfi_offset 7, -8
 3550              		.cfi_offset 14, -4
 3551 0002 86B0     		sub	sp, sp, #24
 3552              	.LCFI145:
 3553              		.cfi_def_cfa_offset 32
 3554 0004 02AF     		add	r7, sp, #8
 3555              	.LCFI146:
 3556              		.cfi_def_cfa 7, 24
 3557 0006 7860     		str	r0, [r7, #4]
2157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 3558              		.loc 1 2157 21
 3559 0008 0023     		movs	r3, #0
 3560 000a FB73     		strb	r3, [r7, #15]
2158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   uint32_t tickstart = HAL_GetTick();
 3561              		.loc 1 2158 24
 3562 000c FFF7FEFF 		bl	HAL_GetTick
 3563 0010 B860     		str	r0, [r7, #8]
2159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Check if the state is in one of the busy states */
2161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (((uint32_t)hqspi->State & 0x2U) != 0U)
 3564              		.loc 1 2161 23
 3565 0012 7B68     		ldr	r3, [r7, #4]
 3566 0014 93F84130 		ldrb	r3, [r3, #65]
 3567 0018 DBB2     		uxtb	r3, r3
 3568              		.loc 1 2161 31
 3569 001a 03F00203 		and	r3, r3, #2
 3570              		.loc 1 2161 6
 3571 001e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccjfKiuT.s 			page 101


 3572 0020 56D0     		beq	.L155
2162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
2163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Process unlocked */
2164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     __HAL_UNLOCK(hqspi);
 3573              		.loc 1 2164 5
 3574 0022 7B68     		ldr	r3, [r7, #4]
 3575 0024 0022     		movs	r2, #0
 3576 0026 83F84020 		strb	r2, [r3, #64]
2165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 3577              		.loc 1 2166 15
 3578 002a 7B68     		ldr	r3, [r7, #4]
 3579 002c 1B68     		ldr	r3, [r3]
 3580              		.loc 1 2166 25
 3581 002e 1B68     		ldr	r3, [r3]
 3582              		.loc 1 2166 30
 3583 0030 03F00403 		and	r3, r3, #4
 3584              		.loc 1 2166 8
 3585 0034 002B     		cmp	r3, #0
 3586 0036 17D0     		beq	.L156
2167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
2168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Disable using MDMA by clearing DMAEN, note that DMAEN bit is "reserved"
2169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          but no impact on H7 HW and it minimize the cost in the footprint */
2170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 3587              		.loc 1 2170 7
 3588 0038 7B68     		ldr	r3, [r7, #4]
 3589 003a 1B68     		ldr	r3, [r3]
 3590 003c 1A68     		ldr	r2, [r3]
 3591 003e 7B68     		ldr	r3, [r7, #4]
 3592 0040 1B68     		ldr	r3, [r3]
 3593 0042 22F00402 		bic	r2, r2, #4
 3594 0046 1A60     		str	r2, [r3]
2171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Abort MDMA */
2173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       status = HAL_MDMA_Abort(hqspi->hmdma);
 3595              		.loc 1 2173 16
 3596 0048 7B68     		ldr	r3, [r7, #4]
 3597 004a DB6B     		ldr	r3, [r3, #60]
 3598 004c 1846     		mov	r0, r3
 3599 004e FFF7FEFF 		bl	HAL_MDMA_Abort
 3600 0052 0346     		mov	r3, r0
 3601 0054 FB73     		strb	r3, [r7, #15]
2174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if(status != HAL_OK)
 3602              		.loc 1 2174 9
 3603 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3604 0058 002B     		cmp	r3, #0
 3605 005a 05D0     		beq	.L156
2175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
2176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 3606              		.loc 1 2176 26
 3607 005c 7B68     		ldr	r3, [r7, #4]
 3608 005e 5B6C     		ldr	r3, [r3, #68]
 3609 0060 43F00402 		orr	r2, r3, #4
 3610 0064 7B68     		ldr	r3, [r7, #4]
 3611 0066 5A64     		str	r2, [r3, #68]
 3612              	.L156:
2177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
ARM GAS  /tmp/ccjfKiuT.s 			page 102


2178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
2179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Configure QSPI: CR register with Abort request */
2181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 3613              		.loc 1 2181 5
 3614 0068 7B68     		ldr	r3, [r7, #4]
 3615 006a 1B68     		ldr	r3, [r3]
 3616 006c 1A68     		ldr	r2, [r3]
 3617 006e 7B68     		ldr	r3, [r7, #4]
 3618 0070 1B68     		ldr	r3, [r3]
 3619 0072 42F00202 		orr	r2, r2, #2
 3620 0076 1A60     		str	r2, [r3]
2182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Wait until TC flag is set to go back in idle state */
2184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 3621              		.loc 1 2184 14
 3622 0078 7B68     		ldr	r3, [r7, #4]
 3623 007a 9B6C     		ldr	r3, [r3, #72]
 3624 007c 0093     		str	r3, [sp]
 3625 007e BB68     		ldr	r3, [r7, #8]
 3626 0080 0122     		movs	r2, #1
 3627 0082 0221     		movs	r1, #2
 3628 0084 7868     		ldr	r0, [r7, #4]
 3629 0086 FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 3630 008a 0346     		mov	r3, r0
 3631 008c FB73     		strb	r3, [r7, #15]
2185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if (status == HAL_OK)
 3632              		.loc 1 2186 8
 3633 008e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3634 0090 002B     		cmp	r3, #0
 3635 0092 0ED1     		bne	.L157
2187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
2188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 3636              		.loc 1 2188 7
 3637 0094 7B68     		ldr	r3, [r7, #4]
 3638 0096 1B68     		ldr	r3, [r3]
 3639 0098 0222     		movs	r2, #2
 3640 009a DA60     		str	r2, [r3, #12]
2189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Wait until BUSY flag is reset */
2191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeo
 3641              		.loc 1 2191 16
 3642 009c 7B68     		ldr	r3, [r7, #4]
 3643 009e 9B6C     		ldr	r3, [r3, #72]
 3644 00a0 0093     		str	r3, [sp]
 3645 00a2 BB68     		ldr	r3, [r7, #8]
 3646 00a4 0022     		movs	r2, #0
 3647 00a6 2021     		movs	r1, #32
 3648 00a8 7868     		ldr	r0, [r7, #4]
 3649 00aa FFF7FEFF 		bl	QSPI_WaitFlagStateUntilTimeout
 3650 00ae 0346     		mov	r3, r0
 3651 00b0 FB73     		strb	r3, [r7, #15]
 3652              	.L157:
2192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
2193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if (status == HAL_OK)
ARM GAS  /tmp/ccjfKiuT.s 			page 103


 3653              		.loc 1 2194 8
 3654 00b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3655 00b4 002B     		cmp	r3, #0
 3656 00b6 0BD1     		bne	.L155
2195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
2196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Reset functional mode configuration to indirect write mode by default */
2197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 3657              		.loc 1 2197 7
 3658 00b8 7B68     		ldr	r3, [r7, #4]
 3659 00ba 1B68     		ldr	r3, [r3]
 3660 00bc 5A69     		ldr	r2, [r3, #20]
 3661 00be 7B68     		ldr	r3, [r7, #4]
 3662 00c0 1B68     		ldr	r3, [r3]
 3663 00c2 22F04062 		bic	r2, r2, #201326592
 3664 00c6 5A61     		str	r2, [r3, #20]
2198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Update state */
2200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->State = HAL_QSPI_STATE_READY;
 3665              		.loc 1 2200 20
 3666 00c8 7B68     		ldr	r3, [r7, #4]
 3667 00ca 0122     		movs	r2, #1
 3668 00cc 83F84120 		strb	r2, [r3, #65]
 3669              	.L155:
2201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
2202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
2203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
 3670              		.loc 1 2204 10
 3671 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 3672              		.loc 1 2205 1
 3673 00d2 1846     		mov	r0, r3
 3674 00d4 1037     		adds	r7, r7, #16
 3675              	.LCFI147:
 3676              		.cfi_def_cfa_offset 8
 3677 00d6 BD46     		mov	sp, r7
 3678              	.LCFI148:
 3679              		.cfi_def_cfa_register 13
 3680              		@ sp needed
 3681 00d8 80BD     		pop	{r7, pc}
 3682              		.cfi_endproc
 3683              	.LFE357:
 3685              		.section	.text.HAL_QSPI_Abort_IT,"ax",%progbits
 3686              		.align	1
 3687              		.global	HAL_QSPI_Abort_IT
 3688              		.syntax unified
 3689              		.thumb
 3690              		.thumb_func
 3691              		.fpu fpv5-d16
 3693              	HAL_QSPI_Abort_IT:
 3694              	.LFB358:
2206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
2208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** * @brief  Abort the current transmission (non-blocking function)
2209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** * @param  hqspi : QSPI handle
2210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** * @retval HAL status
2211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** */
ARM GAS  /tmp/ccjfKiuT.s 			page 104


2212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_Abort_IT(QSPI_HandleTypeDef *hqspi)
2213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 3695              		.loc 1 2213 1
 3696              		.cfi_startproc
 3697              		@ args = 0, pretend = 0, frame = 16
 3698              		@ frame_needed = 1, uses_anonymous_args = 0
 3699 0000 80B5     		push	{r7, lr}
 3700              	.LCFI149:
 3701              		.cfi_def_cfa_offset 8
 3702              		.cfi_offset 7, -8
 3703              		.cfi_offset 14, -4
 3704 0002 84B0     		sub	sp, sp, #16
 3705              	.LCFI150:
 3706              		.cfi_def_cfa_offset 24
 3707 0004 00AF     		add	r7, sp, #0
 3708              	.LCFI151:
 3709              		.cfi_def_cfa_register 7
 3710 0006 7860     		str	r0, [r7, #4]
2214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 3711              		.loc 1 2214 21
 3712 0008 0023     		movs	r3, #0
 3713 000a FB73     		strb	r3, [r7, #15]
2215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Check if the state is in one of the busy states */
2217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (((uint32_t)hqspi->State & 0x2U) != 0U)
 3714              		.loc 1 2217 23
 3715 000c 7B68     		ldr	r3, [r7, #4]
 3716 000e 93F84130 		ldrb	r3, [r3, #65]
 3717 0012 DBB2     		uxtb	r3, r3
 3718              		.loc 1 2217 31
 3719 0014 03F00203 		and	r3, r3, #2
 3720              		.loc 1 2217 6
 3721 0018 002B     		cmp	r3, #0
 3722 001a 46D0     		beq	.L160
2218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
2219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Process unlocked */
2220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     __HAL_UNLOCK(hqspi);
 3723              		.loc 1 2220 5
 3724 001c 7B68     		ldr	r3, [r7, #4]
 3725 001e 0022     		movs	r2, #0
 3726 0020 83F84020 		strb	r2, [r3, #64]
2221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Update QSPI state */
2223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->State = HAL_QSPI_STATE_ABORT;
 3727              		.loc 1 2223 18
 3728 0024 7B68     		ldr	r3, [r7, #4]
 3729 0026 0822     		movs	r2, #8
 3730 0028 83F84120 		strb	r2, [r3, #65]
2224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Disable all interrupts */
2226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     __HAL_QSPI_DISABLE_IT(hqspi, (QSPI_IT_TO | QSPI_IT_SM | QSPI_IT_FT | QSPI_IT_TC | QSPI_IT_TE));
 3731              		.loc 1 2226 5
 3732 002c 7B68     		ldr	r3, [r7, #4]
 3733 002e 1B68     		ldr	r3, [r3]
 3734 0030 1A68     		ldr	r2, [r3]
 3735 0032 7B68     		ldr	r3, [r7, #4]
 3736 0034 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjfKiuT.s 			page 105


 3737 0036 22F4F812 		bic	r2, r2, #2031616
 3738 003a 1A60     		str	r2, [r3]
2227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 3739              		.loc 1 2228 15
 3740 003c 7B68     		ldr	r3, [r7, #4]
 3741 003e 1B68     		ldr	r3, [r3]
 3742              		.loc 1 2228 25
 3743 0040 1B68     		ldr	r3, [r3]
 3744              		.loc 1 2228 30
 3745 0042 03F00403 		and	r3, r3, #4
 3746              		.loc 1 2228 8
 3747 0046 002B     		cmp	r3, #0
 3748 0048 1BD0     		beq	.L161
2229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
2230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Disable using MDMA by clearing DMAEN, note that DMAEN bit is "reserved"
2231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****          but no impact on H7 HW and it minimize the cost in the footprint */
2232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 3749              		.loc 1 2232 7
 3750 004a 7B68     		ldr	r3, [r7, #4]
 3751 004c 1B68     		ldr	r3, [r3]
 3752 004e 1A68     		ldr	r2, [r3]
 3753 0050 7B68     		ldr	r3, [r7, #4]
 3754 0052 1B68     		ldr	r3, [r3]
 3755 0054 22F00402 		bic	r2, r2, #4
 3756 0058 1A60     		str	r2, [r3]
2233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Abort MDMA channel */
2235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       hqspi->hmdma->XferAbortCallback = QSPI_DMAAbortCplt;
 3757              		.loc 1 2235 12
 3758 005a 7B68     		ldr	r3, [r7, #4]
 3759 005c DB6B     		ldr	r3, [r3, #60]
 3760              		.loc 1 2235 39
 3761 005e 154A     		ldr	r2, .L163
 3762 0060 9A65     		str	r2, [r3, #88]
2236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if (HAL_MDMA_Abort_IT(hqspi->hmdma) != HAL_OK)
 3763              		.loc 1 2236 11
 3764 0062 7B68     		ldr	r3, [r7, #4]
 3765 0064 DB6B     		ldr	r3, [r3, #60]
 3766 0066 1846     		mov	r0, r3
 3767 0068 FFF7FEFF 		bl	HAL_MDMA_Abort_IT
 3768 006c 0346     		mov	r3, r0
 3769              		.loc 1 2236 10
 3770 006e 002B     		cmp	r3, #0
 3771 0070 1BD0     		beq	.L160
2237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
2238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Change state of QSPI */
2239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->State = HAL_QSPI_STATE_READY;
 3772              		.loc 1 2239 22
 3773 0072 7B68     		ldr	r3, [r7, #4]
 3774 0074 0122     		movs	r2, #1
 3775 0076 83F84120 		strb	r2, [r3, #65]
2240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Abort Complete callback */
2242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
2243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->AbortCpltCallback(hqspi);
2244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #else
ARM GAS  /tmp/ccjfKiuT.s 			page 106


2245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         HAL_QSPI_AbortCpltCallback(hqspi);
 3776              		.loc 1 2245 9
 3777 007a 7868     		ldr	r0, [r7, #4]
 3778 007c FFF7FEFF 		bl	HAL_QSPI_AbortCpltCallback
 3779 0080 13E0     		b	.L160
 3780              	.L161:
2246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #endif
2247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
2248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
2249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else
2250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
2251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Clear interrupt */
2252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 3781              		.loc 1 2252 7
 3782 0082 7B68     		ldr	r3, [r7, #4]
 3783 0084 1B68     		ldr	r3, [r3]
 3784 0086 0222     		movs	r2, #2
 3785 0088 DA60     		str	r2, [r3, #12]
2253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Enable the QSPI Transfer Complete Interrupt */
2255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TC);
 3786              		.loc 1 2255 7
 3787 008a 7B68     		ldr	r3, [r7, #4]
 3788 008c 1B68     		ldr	r3, [r3]
 3789 008e 1A68     		ldr	r2, [r3]
 3790 0090 7B68     		ldr	r3, [r7, #4]
 3791 0092 1B68     		ldr	r3, [r3]
 3792 0094 42F40032 		orr	r2, r2, #131072
 3793 0098 1A60     		str	r2, [r3]
2256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure QSPI: CR register with Abort request */
2258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 3794              		.loc 1 2258 7
 3795 009a 7B68     		ldr	r3, [r7, #4]
 3796 009c 1B68     		ldr	r3, [r3]
 3797 009e 1A68     		ldr	r2, [r3]
 3798 00a0 7B68     		ldr	r3, [r7, #4]
 3799 00a2 1B68     		ldr	r3, [r3]
 3800 00a4 42F00202 		orr	r2, r2, #2
 3801 00a8 1A60     		str	r2, [r3]
 3802              	.L160:
2259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
2260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
2261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
 3803              		.loc 1 2261 10
 3804 00aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 3805              		.loc 1 2262 1
 3806 00ac 1846     		mov	r0, r3
 3807 00ae 1037     		adds	r7, r7, #16
 3808              	.LCFI152:
 3809              		.cfi_def_cfa_offset 8
 3810 00b0 BD46     		mov	sp, r7
 3811              	.LCFI153:
 3812              		.cfi_def_cfa_register 13
 3813              		@ sp needed
 3814 00b2 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccjfKiuT.s 			page 107


 3815              	.L164:
 3816              		.align	2
 3817              	.L163:
 3818 00b4 00000000 		.word	QSPI_DMAAbortCplt
 3819              		.cfi_endproc
 3820              	.LFE358:
 3822              		.section	.text.HAL_QSPI_SetTimeout,"ax",%progbits
 3823              		.align	1
 3824              		.global	HAL_QSPI_SetTimeout
 3825              		.syntax unified
 3826              		.thumb
 3827              		.thumb_func
 3828              		.fpu fpv5-d16
 3830              	HAL_QSPI_SetTimeout:
 3831              	.LFB359:
2263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /** @brief Set QSPI timeout.
2265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle.
2266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  Timeout : Timeout for the QSPI memory access.
2267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
2268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
2269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** void HAL_QSPI_SetTimeout(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
2270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 3832              		.loc 1 2270 1
 3833              		.cfi_startproc
 3834              		@ args = 0, pretend = 0, frame = 8
 3835              		@ frame_needed = 1, uses_anonymous_args = 0
 3836              		@ link register save eliminated.
 3837 0000 80B4     		push	{r7}
 3838              	.LCFI154:
 3839              		.cfi_def_cfa_offset 4
 3840              		.cfi_offset 7, -4
 3841 0002 83B0     		sub	sp, sp, #12
 3842              	.LCFI155:
 3843              		.cfi_def_cfa_offset 16
 3844 0004 00AF     		add	r7, sp, #0
 3845              	.LCFI156:
 3846              		.cfi_def_cfa_register 7
 3847 0006 7860     		str	r0, [r7, #4]
 3848 0008 3960     		str	r1, [r7]
2271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   hqspi->Timeout = Timeout;
 3849              		.loc 1 2271 18
 3850 000a 7B68     		ldr	r3, [r7, #4]
 3851 000c 3A68     		ldr	r2, [r7]
 3852 000e 9A64     		str	r2, [r3, #72]
2272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 3853              		.loc 1 2272 1
 3854 0010 00BF     		nop
 3855 0012 0C37     		adds	r7, r7, #12
 3856              	.LCFI157:
 3857              		.cfi_def_cfa_offset 4
 3858 0014 BD46     		mov	sp, r7
 3859              	.LCFI158:
 3860              		.cfi_def_cfa_register 13
 3861              		@ sp needed
 3862 0016 5DF8047B 		ldr	r7, [sp], #4
 3863              	.LCFI159:
ARM GAS  /tmp/ccjfKiuT.s 			page 108


 3864              		.cfi_restore 7
 3865              		.cfi_def_cfa_offset 0
 3866 001a 7047     		bx	lr
 3867              		.cfi_endproc
 3868              	.LFE359:
 3870              		.section	.text.HAL_QSPI_SetFifoThreshold,"ax",%progbits
 3871              		.align	1
 3872              		.global	HAL_QSPI_SetFifoThreshold
 3873              		.syntax unified
 3874              		.thumb
 3875              		.thumb_func
 3876              		.fpu fpv5-d16
 3878              	HAL_QSPI_SetFifoThreshold:
 3879              	.LFB360:
2273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /** @brief Set QSPI Fifo threshold.
2275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle.
2276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  Threshold : Threshold of the Fifo (value between 1 and 16).
2277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL status
2278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
2279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_SetFifoThreshold(QSPI_HandleTypeDef *hqspi, uint32_t Threshold)
2280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 3880              		.loc 1 2280 1
 3881              		.cfi_startproc
 3882              		@ args = 0, pretend = 0, frame = 16
 3883              		@ frame_needed = 1, uses_anonymous_args = 0
 3884              		@ link register save eliminated.
 3885 0000 80B4     		push	{r7}
 3886              	.LCFI160:
 3887              		.cfi_def_cfa_offset 4
 3888              		.cfi_offset 7, -4
 3889 0002 85B0     		sub	sp, sp, #20
 3890              	.LCFI161:
 3891              		.cfi_def_cfa_offset 24
 3892 0004 00AF     		add	r7, sp, #0
 3893              	.LCFI162:
 3894              		.cfi_def_cfa_register 7
 3895 0006 7860     		str	r0, [r7, #4]
 3896 0008 3960     		str	r1, [r7]
2281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 3897              		.loc 1 2281 21
 3898 000a 0023     		movs	r3, #0
 3899 000c FB73     		strb	r3, [r7, #15]
2282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process locked */
2284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
 3900              		.loc 1 2284 3
 3901 000e 7B68     		ldr	r3, [r7, #4]
 3902 0010 93F84030 		ldrb	r3, [r3, #64]
 3903 0014 DBB2     		uxtb	r3, r3
 3904 0016 012B     		cmp	r3, #1
 3905 0018 01D1     		bne	.L167
 3906              		.loc 1 2284 3 is_stmt 0 discriminator 1
 3907 001a 0223     		movs	r3, #2
 3908 001c 21E0     		b	.L168
 3909              	.L167:
 3910              		.loc 1 2284 3 discriminator 2
ARM GAS  /tmp/ccjfKiuT.s 			page 109


 3911 001e 7B68     		ldr	r3, [r7, #4]
 3912 0020 0122     		movs	r2, #1
 3913 0022 83F84020 		strb	r2, [r3, #64]
2285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
 3914              		.loc 1 2286 11 is_stmt 1 discriminator 2
 3915 0026 7B68     		ldr	r3, [r7, #4]
 3916 0028 93F84130 		ldrb	r3, [r3, #65]
 3917 002c DBB2     		uxtb	r3, r3
 3918              		.loc 1 2286 5 discriminator 2
 3919 002e 012B     		cmp	r3, #1
 3920 0030 10D1     		bne	.L169
2287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
2288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Synchronize init structure with new FIFO threshold value */
2289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->Init.FifoThreshold = Threshold;
 3921              		.loc 1 2289 31
 3922 0032 7B68     		ldr	r3, [r7, #4]
 3923 0034 3A68     		ldr	r2, [r7]
 3924 0036 9A60     		str	r2, [r3, #8]
2290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Configure QSPI FIFO Threshold */
2292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 3925              		.loc 1 2292 5
 3926 0038 7B68     		ldr	r3, [r7, #4]
 3927 003a 1B68     		ldr	r3, [r3]
 3928 003c 1B68     		ldr	r3, [r3]
 3929 003e 23F47061 		bic	r1, r3, #3840
 3930 0042 7B68     		ldr	r3, [r7, #4]
 3931 0044 9B68     		ldr	r3, [r3, #8]
 3932 0046 013B     		subs	r3, r3, #1
 3933 0048 1A02     		lsls	r2, r3, #8
 3934 004a 7B68     		ldr	r3, [r7, #4]
 3935 004c 1B68     		ldr	r3, [r3]
 3936 004e 0A43     		orrs	r2, r2, r1
 3937 0050 1A60     		str	r2, [r3]
 3938 0052 01E0     		b	.L170
 3939              	.L169:
2293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                ((hqspi->Init.FifoThreshold - 1U) << QUADSPI_CR_FTHRES_Pos));
2294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
2295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
2296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
2297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = HAL_BUSY;
 3940              		.loc 1 2297 12
 3941 0054 0223     		movs	r3, #2
 3942 0056 FB73     		strb	r3, [r7, #15]
 3943              	.L170:
2298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
2299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process unlocked */
2301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
 3944              		.loc 1 2301 3
 3945 0058 7B68     		ldr	r3, [r7, #4]
 3946 005a 0022     		movs	r2, #0
 3947 005c 83F84020 		strb	r2, [r3, #64]
2302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Return function status */
2304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
ARM GAS  /tmp/ccjfKiuT.s 			page 110


 3948              		.loc 1 2304 10
 3949 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3950              	.L168:
2305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 3951              		.loc 1 2305 1
 3952 0062 1846     		mov	r0, r3
 3953 0064 1437     		adds	r7, r7, #20
 3954              	.LCFI163:
 3955              		.cfi_def_cfa_offset 4
 3956 0066 BD46     		mov	sp, r7
 3957              	.LCFI164:
 3958              		.cfi_def_cfa_register 13
 3959              		@ sp needed
 3960 0068 5DF8047B 		ldr	r7, [sp], #4
 3961              	.LCFI165:
 3962              		.cfi_restore 7
 3963              		.cfi_def_cfa_offset 0
 3964 006c 7047     		bx	lr
 3965              		.cfi_endproc
 3966              	.LFE360:
 3968              		.section	.text.HAL_QSPI_GetFifoThreshold,"ax",%progbits
 3969              		.align	1
 3970              		.global	HAL_QSPI_GetFifoThreshold
 3971              		.syntax unified
 3972              		.thumb
 3973              		.thumb_func
 3974              		.fpu fpv5-d16
 3976              	HAL_QSPI_GetFifoThreshold:
 3977              	.LFB361:
2306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /** @brief Get QSPI Fifo threshold.
2308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle.
2309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval Fifo threshold (value between 1 and 16)
2310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
2311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** uint32_t HAL_QSPI_GetFifoThreshold(QSPI_HandleTypeDef *hqspi)
2312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 3978              		.loc 1 2312 1
 3979              		.cfi_startproc
 3980              		@ args = 0, pretend = 0, frame = 8
 3981              		@ frame_needed = 1, uses_anonymous_args = 0
 3982              		@ link register save eliminated.
 3983 0000 80B4     		push	{r7}
 3984              	.LCFI166:
 3985              		.cfi_def_cfa_offset 4
 3986              		.cfi_offset 7, -4
 3987 0002 83B0     		sub	sp, sp, #12
 3988              	.LCFI167:
 3989              		.cfi_def_cfa_offset 16
 3990 0004 00AF     		add	r7, sp, #0
 3991              	.LCFI168:
 3992              		.cfi_def_cfa_register 7
 3993 0006 7860     		str	r0, [r7, #4]
2313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return ((READ_BIT(hqspi->Instance->CR, QUADSPI_CR_FTHRES) >> QUADSPI_CR_FTHRES_Pos) + 1U);
 3994              		.loc 1 2313 12
 3995 0008 7B68     		ldr	r3, [r7, #4]
 3996 000a 1B68     		ldr	r3, [r3]
 3997 000c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjfKiuT.s 			page 111


 3998              		.loc 1 2313 61
 3999 000e 1B0A     		lsrs	r3, r3, #8
 4000 0010 03F00F03 		and	r3, r3, #15
 4001              		.loc 1 2313 87
 4002 0014 0133     		adds	r3, r3, #1
2314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 4003              		.loc 1 2314 1
 4004 0016 1846     		mov	r0, r3
 4005 0018 0C37     		adds	r7, r7, #12
 4006              	.LCFI169:
 4007              		.cfi_def_cfa_offset 4
 4008 001a BD46     		mov	sp, r7
 4009              	.LCFI170:
 4010              		.cfi_def_cfa_register 13
 4011              		@ sp needed
 4012 001c 5DF8047B 		ldr	r7, [sp], #4
 4013              	.LCFI171:
 4014              		.cfi_restore 7
 4015              		.cfi_def_cfa_offset 0
 4016 0020 7047     		bx	lr
 4017              		.cfi_endproc
 4018              	.LFE361:
 4020              		.section	.text.HAL_QSPI_SetFlashID,"ax",%progbits
 4021              		.align	1
 4022              		.global	HAL_QSPI_SetFlashID
 4023              		.syntax unified
 4024              		.thumb
 4025              		.thumb_func
 4026              		.fpu fpv5-d16
 4028              	HAL_QSPI_SetFlashID:
 4029              	.LFB362:
2315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /** @brief  Set FlashID.
2317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle.
2318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  FlashID : Index of the flash memory to be accessed.
2319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *                   This parameter can be a value of @ref QSPI_Flash_Select.
2320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @note   The FlashID is ignored when dual flash mode is enabled.
2321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL status
2322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
2323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** HAL_StatusTypeDef HAL_QSPI_SetFlashID(QSPI_HandleTypeDef *hqspi, uint32_t FlashID)
2324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 4030              		.loc 1 2324 1
 4031              		.cfi_startproc
 4032              		@ args = 0, pretend = 0, frame = 16
 4033              		@ frame_needed = 1, uses_anonymous_args = 0
 4034              		@ link register save eliminated.
 4035 0000 80B4     		push	{r7}
 4036              	.LCFI172:
 4037              		.cfi_def_cfa_offset 4
 4038              		.cfi_offset 7, -4
 4039 0002 85B0     		sub	sp, sp, #20
 4040              	.LCFI173:
 4041              		.cfi_def_cfa_offset 24
 4042 0004 00AF     		add	r7, sp, #0
 4043              	.LCFI174:
 4044              		.cfi_def_cfa_register 7
 4045 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccjfKiuT.s 			page 112


 4046 0008 3960     		str	r1, [r7]
2325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   HAL_StatusTypeDef status = HAL_OK;
 4047              		.loc 1 2325 21
 4048 000a 0023     		movs	r3, #0
 4049 000c FB73     		strb	r3, [r7, #15]
2326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Check the parameter */
2328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_FLASH_ID(FlashID));
2329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process locked */
2331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_LOCK(hqspi);
 4050              		.loc 1 2331 3
 4051 000e 7B68     		ldr	r3, [r7, #4]
 4052 0010 93F84030 		ldrb	r3, [r3, #64]
 4053 0014 DBB2     		uxtb	r3, r3
 4054 0016 012B     		cmp	r3, #1
 4055 0018 01D1     		bne	.L174
 4056              		.loc 1 2331 3 is_stmt 0 discriminator 1
 4057 001a 0223     		movs	r3, #2
 4058 001c 1EE0     		b	.L175
 4059              	.L174:
 4060              		.loc 1 2331 3 discriminator 2
 4061 001e 7B68     		ldr	r3, [r7, #4]
 4062 0020 0122     		movs	r2, #1
 4063 0022 83F84020 		strb	r2, [r3, #64]
2332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_READY)
 4064              		.loc 1 2333 11 is_stmt 1 discriminator 2
 4065 0026 7B68     		ldr	r3, [r7, #4]
 4066 0028 93F84130 		ldrb	r3, [r3, #65]
 4067 002c DBB2     		uxtb	r3, r3
 4068              		.loc 1 2333 5 discriminator 2
 4069 002e 012B     		cmp	r3, #1
 4070 0030 0DD1     		bne	.L176
2334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
2335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Synchronize init structure with new FlashID value */
2336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->Init.FlashID = FlashID;
 4071              		.loc 1 2336 25
 4072 0032 7B68     		ldr	r3, [r7, #4]
 4073 0034 3A68     		ldr	r2, [r7]
 4074 0036 DA61     		str	r2, [r3, #28]
2337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Configure QSPI FlashID */
2339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FSEL, FlashID);
 4075              		.loc 1 2339 5
 4076 0038 7B68     		ldr	r3, [r7, #4]
 4077 003a 1B68     		ldr	r3, [r3]
 4078 003c 1B68     		ldr	r3, [r3]
 4079 003e 23F08001 		bic	r1, r3, #128
 4080 0042 7B68     		ldr	r3, [r7, #4]
 4081 0044 1B68     		ldr	r3, [r3]
 4082 0046 3A68     		ldr	r2, [r7]
 4083 0048 0A43     		orrs	r2, r2, r1
 4084 004a 1A60     		str	r2, [r3]
 4085 004c 01E0     		b	.L177
 4086              	.L176:
2340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
ARM GAS  /tmp/ccjfKiuT.s 			page 113


2341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
2342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
2343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     status = HAL_BUSY;
 4087              		.loc 1 2343 12
 4088 004e 0223     		movs	r3, #2
 4089 0050 FB73     		strb	r3, [r7, #15]
 4090              	.L177:
2344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
2345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Process unlocked */
2347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_UNLOCK(hqspi);
 4091              		.loc 1 2347 3
 4092 0052 7B68     		ldr	r3, [r7, #4]
 4093 0054 0022     		movs	r2, #0
 4094 0056 83F84020 		strb	r2, [r3, #64]
2348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Return function status */
2350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return status;
 4095              		.loc 1 2350 10
 4096 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4097              	.L175:
2351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 4098              		.loc 1 2351 1
 4099 005c 1846     		mov	r0, r3
 4100 005e 1437     		adds	r7, r7, #20
 4101              	.LCFI175:
 4102              		.cfi_def_cfa_offset 4
 4103 0060 BD46     		mov	sp, r7
 4104              	.LCFI176:
 4105              		.cfi_def_cfa_register 13
 4106              		@ sp needed
 4107 0062 5DF8047B 		ldr	r7, [sp], #4
 4108              	.LCFI177:
 4109              		.cfi_restore 7
 4110              		.cfi_def_cfa_offset 0
 4111 0066 7047     		bx	lr
 4112              		.cfi_endproc
 4113              	.LFE362:
 4115              		.section	.text.QSPI_DMARxCplt,"ax",%progbits
 4116              		.align	1
 4117              		.syntax unified
 4118              		.thumb
 4119              		.thumb_func
 4120              		.fpu fpv5-d16
 4122              	QSPI_DMARxCplt:
 4123              	.LFB363:
2352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
2354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @}
2355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
2356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
2358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @}
2359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
2360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /** @defgroup QSPI_Private_Functions QSPI Private Functions
2362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @{
ARM GAS  /tmp/ccjfKiuT.s 			page 114


2363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
2364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
2366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  DMA QSPI receive process complete callback.
2367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hmdma : MDMA handle
2368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
2369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
2370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** static void QSPI_DMARxCplt(MDMA_HandleTypeDef *hmdma)
2371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 4124              		.loc 1 2371 1
 4125              		.cfi_startproc
 4126              		@ args = 0, pretend = 0, frame = 16
 4127              		@ frame_needed = 1, uses_anonymous_args = 0
 4128              		@ link register save eliminated.
 4129 0000 80B4     		push	{r7}
 4130              	.LCFI178:
 4131              		.cfi_def_cfa_offset 4
 4132              		.cfi_offset 7, -4
 4133 0002 85B0     		sub	sp, sp, #20
 4134              	.LCFI179:
 4135              		.cfi_def_cfa_offset 24
 4136 0004 00AF     		add	r7, sp, #0
 4137              	.LCFI180:
 4138              		.cfi_def_cfa_register 7
 4139 0006 7860     		str	r0, [r7, #4]
2372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   QSPI_HandleTypeDef* hqspi = (QSPI_HandleTypeDef*)(hmdma->Parent);
 4140              		.loc 1 2372 23
 4141 0008 7B68     		ldr	r3, [r7, #4]
 4142 000a 1B6C     		ldr	r3, [r3, #64]
 4143 000c FB60     		str	r3, [r7, #12]
2373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   hqspi->RxXferCount = 0U;
 4144              		.loc 1 2373 22
 4145 000e FB68     		ldr	r3, [r7, #12]
 4146 0010 0022     		movs	r2, #0
 4147 0012 9A63     		str	r2, [r3, #56]
2374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Enable the QSPI transfer complete Interrupt */
2376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TC);
 4148              		.loc 1 2376 3
 4149 0014 FB68     		ldr	r3, [r7, #12]
 4150 0016 1B68     		ldr	r3, [r3]
 4151 0018 1A68     		ldr	r2, [r3]
 4152 001a FB68     		ldr	r3, [r7, #12]
 4153 001c 1B68     		ldr	r3, [r3]
 4154 001e 42F40032 		orr	r2, r2, #131072
 4155 0022 1A60     		str	r2, [r3]
2377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 4156              		.loc 1 2377 1
 4157 0024 00BF     		nop
 4158 0026 1437     		adds	r7, r7, #20
 4159              	.LCFI181:
 4160              		.cfi_def_cfa_offset 4
 4161 0028 BD46     		mov	sp, r7
 4162              	.LCFI182:
 4163              		.cfi_def_cfa_register 13
 4164              		@ sp needed
 4165 002a 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccjfKiuT.s 			page 115


 4166              	.LCFI183:
 4167              		.cfi_restore 7
 4168              		.cfi_def_cfa_offset 0
 4169 002e 7047     		bx	lr
 4170              		.cfi_endproc
 4171              	.LFE363:
 4173              		.section	.text.QSPI_DMATxCplt,"ax",%progbits
 4174              		.align	1
 4175              		.syntax unified
 4176              		.thumb
 4177              		.thumb_func
 4178              		.fpu fpv5-d16
 4180              	QSPI_DMATxCplt:
 4181              	.LFB364:
2378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
2380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  DMA QSPI transmit process complete callback.
2381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hmdma : MDMA handle
2382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
2383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
2384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** static void QSPI_DMATxCplt(MDMA_HandleTypeDef *hmdma)
2385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 4182              		.loc 1 2385 1
 4183              		.cfi_startproc
 4184              		@ args = 0, pretend = 0, frame = 16
 4185              		@ frame_needed = 1, uses_anonymous_args = 0
 4186              		@ link register save eliminated.
 4187 0000 80B4     		push	{r7}
 4188              	.LCFI184:
 4189              		.cfi_def_cfa_offset 4
 4190              		.cfi_offset 7, -4
 4191 0002 85B0     		sub	sp, sp, #20
 4192              	.LCFI185:
 4193              		.cfi_def_cfa_offset 24
 4194 0004 00AF     		add	r7, sp, #0
 4195              	.LCFI186:
 4196              		.cfi_def_cfa_register 7
 4197 0006 7860     		str	r0, [r7, #4]
2386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   QSPI_HandleTypeDef* hqspi = (QSPI_HandleTypeDef*)(hmdma->Parent);
 4198              		.loc 1 2386 23
 4199 0008 7B68     		ldr	r3, [r7, #4]
 4200 000a 1B6C     		ldr	r3, [r3, #64]
 4201 000c FB60     		str	r3, [r7, #12]
2387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   hqspi->TxXferCount = 0U;
 4202              		.loc 1 2387 22
 4203 000e FB68     		ldr	r3, [r7, #12]
 4204 0010 0022     		movs	r2, #0
 4205 0012 DA62     		str	r2, [r3, #44]
2388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Enable the QSPI transfer complete Interrupt */
2390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TC);
 4206              		.loc 1 2390 3
 4207 0014 FB68     		ldr	r3, [r7, #12]
 4208 0016 1B68     		ldr	r3, [r3]
 4209 0018 1A68     		ldr	r2, [r3]
 4210 001a FB68     		ldr	r3, [r7, #12]
 4211 001c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjfKiuT.s 			page 116


 4212 001e 42F40032 		orr	r2, r2, #131072
 4213 0022 1A60     		str	r2, [r3]
2391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 4214              		.loc 1 2391 1
 4215 0024 00BF     		nop
 4216 0026 1437     		adds	r7, r7, #20
 4217              	.LCFI187:
 4218              		.cfi_def_cfa_offset 4
 4219 0028 BD46     		mov	sp, r7
 4220              	.LCFI188:
 4221              		.cfi_def_cfa_register 13
 4222              		@ sp needed
 4223 002a 5DF8047B 		ldr	r7, [sp], #4
 4224              	.LCFI189:
 4225              		.cfi_restore 7
 4226              		.cfi_def_cfa_offset 0
 4227 002e 7047     		bx	lr
 4228              		.cfi_endproc
 4229              	.LFE364:
 4231              		.section	.text.QSPI_DMAError,"ax",%progbits
 4232              		.align	1
 4233              		.syntax unified
 4234              		.thumb
 4235              		.thumb_func
 4236              		.fpu fpv5-d16
 4238              	QSPI_DMAError:
 4239              	.LFB365:
2392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
2394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  DMA QSPI communication error callback.
2395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hmdma : MDMA handle
2396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
2397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
2398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** static void QSPI_DMAError(MDMA_HandleTypeDef *hmdma)
2399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 4240              		.loc 1 2399 1
 4241              		.cfi_startproc
 4242              		@ args = 0, pretend = 0, frame = 16
 4243              		@ frame_needed = 1, uses_anonymous_args = 0
 4244 0000 80B5     		push	{r7, lr}
 4245              	.LCFI190:
 4246              		.cfi_def_cfa_offset 8
 4247              		.cfi_offset 7, -8
 4248              		.cfi_offset 14, -4
 4249 0002 84B0     		sub	sp, sp, #16
 4250              	.LCFI191:
 4251              		.cfi_def_cfa_offset 24
 4252 0004 00AF     		add	r7, sp, #0
 4253              	.LCFI192:
 4254              		.cfi_def_cfa_register 7
 4255 0006 7860     		str	r0, [r7, #4]
2400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   QSPI_HandleTypeDef* hqspi = ( QSPI_HandleTypeDef* )(hmdma->Parent);
 4256              		.loc 1 2400 23
 4257 0008 7B68     		ldr	r3, [r7, #4]
 4258 000a 1B6C     		ldr	r3, [r3, #64]
 4259 000c FB60     		str	r3, [r7, #12]
2401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
ARM GAS  /tmp/ccjfKiuT.s 			page 117


2402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   hqspi->RxXferCount = 0U;
 4260              		.loc 1 2402 22
 4261 000e FB68     		ldr	r3, [r7, #12]
 4262 0010 0022     		movs	r2, #0
 4263 0012 9A63     		str	r2, [r3, #56]
2403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   hqspi->TxXferCount = 0U;
 4264              		.loc 1 2403 22
 4265 0014 FB68     		ldr	r3, [r7, #12]
 4266 0016 0022     		movs	r2, #0
 4267 0018 DA62     		str	r2, [r3, #44]
2404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   hqspi->ErrorCode   |= HAL_QSPI_ERROR_DMA;
 4268              		.loc 1 2404 22
 4269 001a FB68     		ldr	r3, [r7, #12]
 4270 001c 5B6C     		ldr	r3, [r3, #68]
 4271 001e 43F00402 		orr	r2, r3, #4
 4272 0022 FB68     		ldr	r3, [r7, #12]
 4273 0024 5A64     		str	r2, [r3, #68]
2405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Disable using MDMA by clearing DMAEN, note that DMAEN bit is "reserved"
2407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****      but no impact on H7 HW and it minimize the cost in the footprint */
2408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 4274              		.loc 1 2408 3
 4275 0026 FB68     		ldr	r3, [r7, #12]
 4276 0028 1B68     		ldr	r3, [r3]
 4277 002a 1A68     		ldr	r2, [r3]
 4278 002c FB68     		ldr	r3, [r7, #12]
 4279 002e 1B68     		ldr	r3, [r3]
 4280 0030 22F00402 		bic	r2, r2, #4
 4281 0034 1A60     		str	r2, [r3]
2409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Abort the QSPI */
2411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   (void)HAL_QSPI_Abort_IT(hqspi);
 4282              		.loc 1 2411 9
 4283 0036 F868     		ldr	r0, [r7, #12]
 4284 0038 FFF7FEFF 		bl	HAL_QSPI_Abort_IT
2412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 4285              		.loc 1 2413 1
 4286 003c 00BF     		nop
 4287 003e 1037     		adds	r7, r7, #16
 4288              	.LCFI193:
 4289              		.cfi_def_cfa_offset 8
 4290 0040 BD46     		mov	sp, r7
 4291              	.LCFI194:
 4292              		.cfi_def_cfa_register 13
 4293              		@ sp needed
 4294 0042 80BD     		pop	{r7, pc}
 4295              		.cfi_endproc
 4296              	.LFE365:
 4298              		.section	.text.QSPI_DMAAbortCplt,"ax",%progbits
 4299              		.align	1
 4300              		.syntax unified
 4301              		.thumb
 4302              		.thumb_func
 4303              		.fpu fpv5-d16
 4305              	QSPI_DMAAbortCplt:
 4306              	.LFB366:
ARM GAS  /tmp/ccjfKiuT.s 			page 118


2414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
2416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  MDMA QSPI abort complete callback.
2417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hmdma : MDMA handle
2418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
2419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
2420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** static void QSPI_DMAAbortCplt(MDMA_HandleTypeDef *hmdma)
2421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 4307              		.loc 1 2421 1
 4308              		.cfi_startproc
 4309              		@ args = 0, pretend = 0, frame = 16
 4310              		@ frame_needed = 1, uses_anonymous_args = 0
 4311 0000 80B5     		push	{r7, lr}
 4312              	.LCFI195:
 4313              		.cfi_def_cfa_offset 8
 4314              		.cfi_offset 7, -8
 4315              		.cfi_offset 14, -4
 4316 0002 84B0     		sub	sp, sp, #16
 4317              	.LCFI196:
 4318              		.cfi_def_cfa_offset 24
 4319 0004 00AF     		add	r7, sp, #0
 4320              	.LCFI197:
 4321              		.cfi_def_cfa_register 7
 4322 0006 7860     		str	r0, [r7, #4]
2422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   QSPI_HandleTypeDef* hqspi = ( QSPI_HandleTypeDef* )(hmdma->Parent);
 4323              		.loc 1 2422 23
 4324 0008 7B68     		ldr	r3, [r7, #4]
 4325 000a 1B6C     		ldr	r3, [r3, #64]
 4326 000c FB60     		str	r3, [r7, #12]
2423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   hqspi->RxXferCount = 0U;
 4327              		.loc 1 2424 22
 4328 000e FB68     		ldr	r3, [r7, #12]
 4329 0010 0022     		movs	r2, #0
 4330 0012 9A63     		str	r2, [r3, #56]
2425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   hqspi->TxXferCount = 0U;
 4331              		.loc 1 2425 22
 4332 0014 FB68     		ldr	r3, [r7, #12]
 4333 0016 0022     		movs	r2, #0
 4334 0018 DA62     		str	r2, [r3, #44]
2426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if(hqspi->State == HAL_QSPI_STATE_ABORT)
 4335              		.loc 1 2427 11
 4336 001a FB68     		ldr	r3, [r7, #12]
 4337 001c 93F84130 		ldrb	r3, [r3, #65]
 4338 0020 DBB2     		uxtb	r3, r3
 4339              		.loc 1 2427 5
 4340 0022 082B     		cmp	r3, #8
 4341 0024 14D1     		bne	.L182
2428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
2429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* MDMA Abort called by QSPI abort */
2430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Clear interrupt */
2431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 4342              		.loc 1 2431 5
 4343 0026 FB68     		ldr	r3, [r7, #12]
 4344 0028 1B68     		ldr	r3, [r3]
 4345 002a 0222     		movs	r2, #2
ARM GAS  /tmp/ccjfKiuT.s 			page 119


 4346 002c DA60     		str	r2, [r3, #12]
2432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Enable the QSPI Transfer Complete Interrupt */
2434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TC);
 4347              		.loc 1 2434 5
 4348 002e FB68     		ldr	r3, [r7, #12]
 4349 0030 1B68     		ldr	r3, [r3]
 4350 0032 1A68     		ldr	r2, [r3]
 4351 0034 FB68     		ldr	r3, [r7, #12]
 4352 0036 1B68     		ldr	r3, [r3]
 4353 0038 42F40032 		orr	r2, r2, #131072
 4354 003c 1A60     		str	r2, [r3]
2435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Configure QSPI: CR register with Abort request */
2437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 4355              		.loc 1 2437 5
 4356 003e FB68     		ldr	r3, [r7, #12]
 4357 0040 1B68     		ldr	r3, [r3]
 4358 0042 1A68     		ldr	r2, [r3]
 4359 0044 FB68     		ldr	r3, [r7, #12]
 4360 0046 1B68     		ldr	r3, [r3]
 4361 0048 42F00202 		orr	r2, r2, #2
 4362 004c 1A60     		str	r2, [r3]
2438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
2439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
2440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
2441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* MDMA Abort called due to a transfer error interrupt */
2442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Change state of QSPI */
2443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->State = HAL_QSPI_STATE_READY;
2444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Error callback */
2446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #if (USE_HAL_QSPI_REGISTER_CALLBACKS == 1)
2447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     hqspi->ErrorCallback(hqspi);
2448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #else
2449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     HAL_QSPI_ErrorCallback(hqspi);
2450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #endif
2451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
2452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 4363              		.loc 1 2452 1
 4364 004e 06E0     		b	.L184
 4365              	.L182:
2443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 4366              		.loc 1 2443 18
 4367 0050 FB68     		ldr	r3, [r7, #12]
 4368 0052 0122     		movs	r2, #1
 4369 0054 83F84120 		strb	r2, [r3, #65]
2449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** #endif
 4370              		.loc 1 2449 5
 4371 0058 F868     		ldr	r0, [r7, #12]
 4372 005a FFF7FEFF 		bl	HAL_QSPI_ErrorCallback
 4373              	.L184:
 4374              		.loc 1 2452 1
 4375 005e 00BF     		nop
 4376 0060 1037     		adds	r7, r7, #16
 4377              	.LCFI198:
 4378              		.cfi_def_cfa_offset 8
 4379 0062 BD46     		mov	sp, r7
ARM GAS  /tmp/ccjfKiuT.s 			page 120


 4380              	.LCFI199:
 4381              		.cfi_def_cfa_register 13
 4382              		@ sp needed
 4383 0064 80BD     		pop	{r7, pc}
 4384              		.cfi_endproc
 4385              	.LFE366:
 4387              		.section	.text.QSPI_WaitFlagStateUntilTimeout,"ax",%progbits
 4388              		.align	1
 4389              		.syntax unified
 4390              		.thumb
 4391              		.thumb_func
 4392              		.fpu fpv5-d16
 4394              	QSPI_WaitFlagStateUntilTimeout:
 4395              	.LFB367:
2453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
2455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Wait for a flag state until timeout.
2456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
2457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  Flag : Flag checked
2458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  State : Value of the flag expected
2459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  Tickstart : Tick start value
2460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  Timeout : Duration of the timeout
2461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval HAL status
2462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
2463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** static HAL_StatusTypeDef QSPI_WaitFlagStateUntilTimeout(QSPI_HandleTypeDef *hqspi, uint32_t Flag,
2464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                                         FlagStatus State, uint32_t Tickstart, uint3
2465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 4396              		.loc 1 2465 1
 4397              		.cfi_startproc
 4398              		@ args = 4, pretend = 0, frame = 16
 4399              		@ frame_needed = 1, uses_anonymous_args = 0
 4400 0000 80B5     		push	{r7, lr}
 4401              	.LCFI200:
 4402              		.cfi_def_cfa_offset 8
 4403              		.cfi_offset 7, -8
 4404              		.cfi_offset 14, -4
 4405 0002 84B0     		sub	sp, sp, #16
 4406              	.LCFI201:
 4407              		.cfi_def_cfa_offset 24
 4408 0004 00AF     		add	r7, sp, #0
 4409              	.LCFI202:
 4410              		.cfi_def_cfa_register 7
 4411 0006 F860     		str	r0, [r7, #12]
 4412 0008 B960     		str	r1, [r7, #8]
 4413 000a 3B60     		str	r3, [r7]
 4414 000c 1346     		mov	r3, r2
 4415 000e FB71     		strb	r3, [r7, #7]
2466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   /* Wait until flag is in expected state */
2467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 4416              		.loc 1 2467 8
 4417 0010 1AE0     		b	.L186
 4418              	.L189:
2468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
2469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Check for the Timeout */
2470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if (Timeout != HAL_MAX_DELAY)
 4419              		.loc 1 2470 8
 4420 0012 BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/ccjfKiuT.s 			page 121


 4421 0014 B3F1FF3F 		cmp	r3, #-1
 4422 0018 16D0     		beq	.L186
2471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
2472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 4423              		.loc 1 2472 12
 4424 001a FFF7FEFF 		bl	HAL_GetTick
 4425 001e 0246     		mov	r2, r0
 4426              		.loc 1 2472 26
 4427 0020 3B68     		ldr	r3, [r7]
 4428 0022 D31A     		subs	r3, r2, r3
 4429              		.loc 1 2472 9
 4430 0024 BA69     		ldr	r2, [r7, #24]
 4431 0026 9A42     		cmp	r2, r3
 4432 0028 02D3     		bcc	.L187
 4433              		.loc 1 2472 50 discriminator 1
 4434 002a BB69     		ldr	r3, [r7, #24]
 4435 002c 002B     		cmp	r3, #0
 4436 002e 0BD1     		bne	.L186
 4437              	.L187:
2473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
2474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->State     = HAL_QSPI_STATE_ERROR;
 4438              		.loc 1 2474 26
 4439 0030 FB68     		ldr	r3, [r7, #12]
 4440 0032 0422     		movs	r2, #4
 4441 0034 83F84120 		strb	r2, [r3, #65]
2475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 4442              		.loc 1 2475 26
 4443 0038 FB68     		ldr	r3, [r7, #12]
 4444 003a 5B6C     		ldr	r3, [r3, #68]
 4445 003c 43F00102 		orr	r2, r3, #1
 4446 0040 FB68     		ldr	r3, [r7, #12]
 4447 0042 5A64     		str	r2, [r3, #68]
2476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         return HAL_ERROR;
 4448              		.loc 1 2477 16
 4449 0044 0123     		movs	r3, #1
 4450 0046 0EE0     		b	.L188
 4451              	.L186:
2467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 4452              		.loc 1 2467 10
 4453 0048 FB68     		ldr	r3, [r7, #12]
 4454 004a 1B68     		ldr	r3, [r3]
 4455 004c 9A68     		ldr	r2, [r3, #8]
 4456 004e BB68     		ldr	r3, [r7, #8]
 4457 0050 1340     		ands	r3, r3, r2
 4458 0052 002B     		cmp	r3, #0
 4459 0054 14BF     		ite	ne
 4460 0056 0123     		movne	r3, #1
 4461 0058 0023     		moveq	r3, #0
 4462 005a DBB2     		uxtb	r3, r3
 4463 005c 1A46     		mov	r2, r3
2467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 4464              		.loc 1 2467 44
 4465 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
2467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
 4466              		.loc 1 2467 8
 4467 0060 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccjfKiuT.s 			page 122


 4468 0062 D6D1     		bne	.L189
2478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
2479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
2480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
2481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   return HAL_OK;
 4469              		.loc 1 2481 10
 4470 0064 0023     		movs	r3, #0
 4471              	.L188:
2482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 4472              		.loc 1 2482 1
 4473 0066 1846     		mov	r0, r3
 4474 0068 1037     		adds	r7, r7, #16
 4475              	.LCFI203:
 4476              		.cfi_def_cfa_offset 8
 4477 006a BD46     		mov	sp, r7
 4478              	.LCFI204:
 4479              		.cfi_def_cfa_register 13
 4480              		@ sp needed
 4481 006c 80BD     		pop	{r7, pc}
 4482              		.cfi_endproc
 4483              	.LFE367:
 4485              		.section	.text.QSPI_Config,"ax",%progbits
 4486              		.align	1
 4487              		.syntax unified
 4488              		.thumb
 4489              		.thumb_func
 4490              		.fpu fpv5-d16
 4492              	QSPI_Config:
 4493              	.LFB368:
2483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** /**
2485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @brief  Configure the communication registers.
2486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  hqspi : QSPI handle
2487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  cmd : structure that contains the command configuration information
2488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @param  FunctionalMode : functional mode to configured
2489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *           This parameter can be one of the following values:
2490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *            @arg QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE: Indirect write mode
2491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *            @arg QSPI_FUNCTIONAL_MODE_INDIRECT_READ: Indirect read mode
2492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
2493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
2494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   * @retval None
2495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   */
2496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMod
2497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** {
 4494              		.loc 1 2497 1
 4495              		.cfi_startproc
 4496              		@ args = 0, pretend = 0, frame = 16
 4497              		@ frame_needed = 1, uses_anonymous_args = 0
 4498              		@ link register save eliminated.
 4499 0000 80B4     		push	{r7}
 4500              	.LCFI205:
 4501              		.cfi_def_cfa_offset 4
 4502              		.cfi_offset 7, -4
 4503 0002 85B0     		sub	sp, sp, #20
 4504              	.LCFI206:
 4505              		.cfi_def_cfa_offset 24
 4506 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccjfKiuT.s 			page 123


 4507              	.LCFI207:
 4508              		.cfi_def_cfa_register 7
 4509 0006 F860     		str	r0, [r7, #12]
 4510 0008 B960     		str	r1, [r7, #8]
 4511 000a 7A60     		str	r2, [r7, #4]
2498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));
2499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 4512              		.loc 1 2500 11
 4513 000c BB68     		ldr	r3, [r7, #8]
 4514 000e 5B6A     		ldr	r3, [r3, #36]
 4515              		.loc 1 2500 6
 4516 0010 002B     		cmp	r3, #0
 4517 0012 09D0     		beq	.L191
 4518              		.loc 1 2500 41 discriminator 1
 4519 0014 7B68     		ldr	r3, [r7, #4]
 4520 0016 B3F1406F 		cmp	r3, #201326592
 4521 001a 05D0     		beq	.L191
2501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
2502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     /* Configure QSPI: DLR register with the number of data to read or write */
2503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 4522              		.loc 1 2503 5
 4523 001c BB68     		ldr	r3, [r7, #8]
 4524 001e 9A6A     		ldr	r2, [r3, #40]
 4525 0020 FB68     		ldr	r3, [r7, #12]
 4526 0022 1B68     		ldr	r3, [r3]
 4527 0024 013A     		subs	r2, r2, #1
 4528 0026 1A61     		str	r2, [r3, #16]
 4529              	.L191:
2504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
2505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 4530              		.loc 1 2506 10
 4531 0028 BB68     		ldr	r3, [r7, #8]
 4532 002a 9B69     		ldr	r3, [r3, #24]
 4533              		.loc 1 2506 6
 4534 002c 002B     		cmp	r3, #0
 4535 002e 00F0B980 		beq	.L192
2507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
2508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 4536              		.loc 1 2508 12
 4537 0032 BB68     		ldr	r3, [r7, #8]
 4538 0034 1B6A     		ldr	r3, [r3, #32]
 4539              		.loc 1 2508 8
 4540 0036 002B     		cmp	r3, #0
 4541 0038 5FD0     		beq	.L193
2509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
2510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure QSPI: ABR register with alternate bytes value */
2511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 4542              		.loc 1 2511 7
 4543 003a FB68     		ldr	r3, [r7, #12]
 4544 003c 1B68     		ldr	r3, [r3]
 4545 003e BA68     		ldr	r2, [r7, #8]
 4546 0040 9268     		ldr	r2, [r2, #8]
 4547 0042 DA61     		str	r2, [r3, #28]
2512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if (cmd->AddressMode != QSPI_ADDRESS_NONE)
ARM GAS  /tmp/ccjfKiuT.s 			page 124


 4548              		.loc 1 2513 14
 4549 0044 BB68     		ldr	r3, [r7, #8]
 4550 0046 DB69     		ldr	r3, [r3, #28]
 4551              		.loc 1 2513 10
 4552 0048 002B     		cmp	r3, #0
 4553 004a 31D0     		beq	.L194
2514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
2515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /*---- Command with instruction, address and alternate bytes ----*/
2516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Configure QSPI: CCR register with all communications parameters */
2517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 4554              		.loc 1 2517 9
 4555 004c BB68     		ldr	r3, [r7, #8]
 4556 004e DA6A     		ldr	r2, [r3, #44]
 4557 0050 BB68     		ldr	r3, [r7, #8]
 4558 0052 1B6B     		ldr	r3, [r3, #48]
 4559 0054 1A43     		orrs	r2, r2, r3
 4560 0056 BB68     		ldr	r3, [r7, #8]
 4561 0058 5B6B     		ldr	r3, [r3, #52]
 4562 005a 1A43     		orrs	r2, r2, r3
 4563 005c BB68     		ldr	r3, [r7, #8]
 4564 005e 5B6A     		ldr	r3, [r3, #36]
 4565 0060 1A43     		orrs	r2, r2, r3
 4566 0062 BB68     		ldr	r3, [r7, #8]
 4567 0064 5B69     		ldr	r3, [r3, #20]
 4568 0066 9B04     		lsls	r3, r3, #18
 4569 0068 1A43     		orrs	r2, r2, r3
 4570 006a BB68     		ldr	r3, [r7, #8]
 4571 006c 1B69     		ldr	r3, [r3, #16]
 4572 006e 1A43     		orrs	r2, r2, r3
 4573 0070 BB68     		ldr	r3, [r7, #8]
 4574 0072 1B6A     		ldr	r3, [r3, #32]
 4575 0074 1A43     		orrs	r2, r2, r3
 4576 0076 BB68     		ldr	r3, [r7, #8]
 4577 0078 DB68     		ldr	r3, [r3, #12]
 4578 007a 1A43     		orrs	r2, r2, r3
 4579 007c BB68     		ldr	r3, [r7, #8]
 4580 007e DB69     		ldr	r3, [r3, #28]
 4581 0080 1A43     		orrs	r2, r2, r3
 4582 0082 BB68     		ldr	r3, [r7, #8]
 4583 0084 9B69     		ldr	r3, [r3, #24]
 4584 0086 1A43     		orrs	r2, r2, r3
 4585 0088 BB68     		ldr	r3, [r7, #8]
 4586 008a 1B68     		ldr	r3, [r3]
 4587 008c 42EA0301 		orr	r1, r2, r3
 4588 0090 FB68     		ldr	r3, [r7, #12]
 4589 0092 1B68     		ldr	r3, [r3]
 4590 0094 7A68     		ldr	r2, [r7, #4]
 4591 0096 0A43     		orrs	r2, r2, r1
 4592 0098 5A61     		str	r2, [r3, #20]
2518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
2519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->AlternateBytesSize | cmd->AlternateByteMode |
2520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->AddressSize | cmd->AddressMode | cmd->InstructionMode
2521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->Instruction | FunctionalMode));
2522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 4593              		.loc 1 2523 12
 4594 009a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccjfKiuT.s 			page 125


 4595 009c B3F1406F 		cmp	r3, #201326592
 4596 00a0 00F02E81 		beq	.L200
2524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
2525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Configure QSPI: AR register with address value */
2526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           WRITE_REG(hqspi->Instance->AR, cmd->Address);
 4597              		.loc 1 2526 11
 4598 00a4 FB68     		ldr	r3, [r7, #12]
 4599 00a6 1B68     		ldr	r3, [r3]
 4600 00a8 BA68     		ldr	r2, [r7, #8]
 4601 00aa 5268     		ldr	r2, [r2, #4]
 4602 00ac 9A61     		str	r2, [r3, #24]
2527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
2528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
2529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       else
2530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
2531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /*---- Command with instruction and alternate bytes ----*/
2532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Configure QSPI: CCR register with all communications parameters */
2533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
2534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
2535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->AlternateBytesSize | cmd->AlternateByteMode |
2536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->AddressMode | cmd->InstructionMode |
2537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->Instruction | FunctionalMode));
2538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
2539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
2540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else
2541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
2542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if (cmd->AddressMode != QSPI_ADDRESS_NONE)
2543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
2544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /*---- Command with instruction and address ----*/
2545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Configure QSPI: CCR register with all communications parameters */
2546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
2547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
2548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMo
2549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->InstructionMode | cmd->Instruction | FunctionalMode))
2550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
2552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
2553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Configure QSPI: AR register with address value */
2554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           WRITE_REG(hqspi->Instance->AR, cmd->Address);
2555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
2556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
2557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       else
2558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
2559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /*---- Command with only instruction ----*/
2560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Configure QSPI: CCR register with all communications parameters */
2561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
2562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
2563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->AlternateByteMode | cmd->AddressMode |
2564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->InstructionMode | cmd->Instruction | FunctionalMode))
2565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
2566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
2567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
2568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   else
2569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   {
2570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
2571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
2572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       /* Configure QSPI: ABR register with alternate bytes value */
ARM GAS  /tmp/ccjfKiuT.s 			page 126


2573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
2574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if (cmd->AddressMode != QSPI_ADDRESS_NONE)
2576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
2577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /*---- Command with address and alternate bytes ----*/
2578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Configure QSPI: CCR register with all communications parameters */
2579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
2580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
2581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->AlternateBytesSize | cmd->AlternateByteMode |
2582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->AddressSize | cmd->AddressMode |
2583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->InstructionMode | FunctionalMode));
2584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
2586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
2587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Configure QSPI: AR register with address value */
2588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           WRITE_REG(hqspi->Instance->AR, cmd->Address);
2589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
2590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
2591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       else
2592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
2593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /*---- Command with only alternate bytes ----*/
2594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Configure QSPI: CCR register with all communications parameters */
2595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
2596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
2597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->AlternateBytesSize | cmd->AlternateByteMode |
2598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->AddressMode | cmd->InstructionMode | FunctionalMode))
2599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
2600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
2601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     else
2602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
2603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       if (cmd->AddressMode != QSPI_ADDRESS_NONE)
2604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
2605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /*---- Command with only address ----*/
2606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /* Configure QSPI: CCR register with all communications parameters */
2607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
2608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
2609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->AlternateByteMode | cmd->AddressSize |
2610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->AddressMode | cmd->InstructionMode | FunctionalMode))
2611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
2612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
2613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
2614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Configure QSPI: AR register with address value */
2615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           WRITE_REG(hqspi->Instance->AR, cmd->Address);
2616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
2617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
2618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       else
2619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
2620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         /*---- Command with only data phase ----*/
2621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         if (cmd->DataMode != QSPI_DATA_NONE)
2622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
2623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           /* Configure QSPI: CCR register with all communications parameters */
2624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****           WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
2625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                            cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Po
2626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                            cmd->AlternateByteMode | cmd->AddressMode |
2627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                            cmd->InstructionMode | FunctionalMode));
2628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
2629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       }
ARM GAS  /tmp/ccjfKiuT.s 			page 127


2630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     }
2631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****   }
2632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** }
 4603              		.loc 1 2632 1
 4604 00ae 27E1     		b	.L200
 4605              	.L194:
2533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
 4606              		.loc 1 2533 9
 4607 00b0 BB68     		ldr	r3, [r7, #8]
 4608 00b2 DA6A     		ldr	r2, [r3, #44]
 4609 00b4 BB68     		ldr	r3, [r7, #8]
 4610 00b6 1B6B     		ldr	r3, [r3, #48]
 4611 00b8 1A43     		orrs	r2, r2, r3
 4612 00ba BB68     		ldr	r3, [r7, #8]
 4613 00bc 5B6B     		ldr	r3, [r3, #52]
 4614 00be 1A43     		orrs	r2, r2, r3
 4615 00c0 BB68     		ldr	r3, [r7, #8]
 4616 00c2 5B6A     		ldr	r3, [r3, #36]
 4617 00c4 1A43     		orrs	r2, r2, r3
 4618 00c6 BB68     		ldr	r3, [r7, #8]
 4619 00c8 5B69     		ldr	r3, [r3, #20]
 4620 00ca 9B04     		lsls	r3, r3, #18
 4621 00cc 1A43     		orrs	r2, r2, r3
 4622 00ce BB68     		ldr	r3, [r7, #8]
 4623 00d0 1B69     		ldr	r3, [r3, #16]
 4624 00d2 1A43     		orrs	r2, r2, r3
 4625 00d4 BB68     		ldr	r3, [r7, #8]
 4626 00d6 1B6A     		ldr	r3, [r3, #32]
 4627 00d8 1A43     		orrs	r2, r2, r3
 4628 00da BB68     		ldr	r3, [r7, #8]
 4629 00dc DB69     		ldr	r3, [r3, #28]
 4630 00de 1A43     		orrs	r2, r2, r3
 4631 00e0 BB68     		ldr	r3, [r7, #8]
 4632 00e2 9B69     		ldr	r3, [r3, #24]
 4633 00e4 1A43     		orrs	r2, r2, r3
 4634 00e6 BB68     		ldr	r3, [r7, #8]
 4635 00e8 1B68     		ldr	r3, [r3]
 4636 00ea 42EA0301 		orr	r1, r2, r3
 4637 00ee FB68     		ldr	r3, [r7, #12]
 4638 00f0 1B68     		ldr	r3, [r3]
 4639 00f2 7A68     		ldr	r2, [r7, #4]
 4640 00f4 0A43     		orrs	r2, r2, r1
 4641 00f6 5A61     		str	r2, [r3, #20]
 4642              		.loc 1 2632 1
 4643 00f8 02E1     		b	.L200
 4644              	.L193:
2542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 4645              		.loc 1 2542 14
 4646 00fa BB68     		ldr	r3, [r7, #8]
 4647 00fc DB69     		ldr	r3, [r3, #28]
2542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 4648              		.loc 1 2542 10
 4649 00fe 002B     		cmp	r3, #0
 4650 0100 2ED0     		beq	.L196
2546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
 4651              		.loc 1 2546 9
 4652 0102 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccjfKiuT.s 			page 128


 4653 0104 DA6A     		ldr	r2, [r3, #44]
 4654 0106 BB68     		ldr	r3, [r7, #8]
 4655 0108 1B6B     		ldr	r3, [r3, #48]
 4656 010a 1A43     		orrs	r2, r2, r3
 4657 010c BB68     		ldr	r3, [r7, #8]
 4658 010e 5B6B     		ldr	r3, [r3, #52]
 4659 0110 1A43     		orrs	r2, r2, r3
 4660 0112 BB68     		ldr	r3, [r7, #8]
 4661 0114 5B6A     		ldr	r3, [r3, #36]
 4662 0116 1A43     		orrs	r2, r2, r3
 4663 0118 BB68     		ldr	r3, [r7, #8]
 4664 011a 5B69     		ldr	r3, [r3, #20]
 4665 011c 9B04     		lsls	r3, r3, #18
 4666 011e 1A43     		orrs	r2, r2, r3
 4667 0120 BB68     		ldr	r3, [r7, #8]
 4668 0122 1B6A     		ldr	r3, [r3, #32]
 4669 0124 1A43     		orrs	r2, r2, r3
 4670 0126 BB68     		ldr	r3, [r7, #8]
 4671 0128 DB68     		ldr	r3, [r3, #12]
 4672 012a 1A43     		orrs	r2, r2, r3
 4673 012c BB68     		ldr	r3, [r7, #8]
 4674 012e DB69     		ldr	r3, [r3, #28]
 4675 0130 1A43     		orrs	r2, r2, r3
 4676 0132 BB68     		ldr	r3, [r7, #8]
 4677 0134 9B69     		ldr	r3, [r3, #24]
 4678 0136 1A43     		orrs	r2, r2, r3
 4679 0138 BB68     		ldr	r3, [r7, #8]
 4680 013a 1B68     		ldr	r3, [r3]
 4681 013c 42EA0301 		orr	r1, r2, r3
 4682 0140 FB68     		ldr	r3, [r7, #12]
 4683 0142 1B68     		ldr	r3, [r3]
 4684 0144 7A68     		ldr	r2, [r7, #4]
 4685 0146 0A43     		orrs	r2, r2, r1
 4686 0148 5A61     		str	r2, [r3, #20]
2551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
 4687              		.loc 1 2551 12
 4688 014a 7B68     		ldr	r3, [r7, #4]
 4689 014c B3F1406F 		cmp	r3, #201326592
 4690 0150 00F0D680 		beq	.L200
2554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
 4691              		.loc 1 2554 11
 4692 0154 FB68     		ldr	r3, [r7, #12]
 4693 0156 1B68     		ldr	r3, [r3]
 4694 0158 BA68     		ldr	r2, [r7, #8]
 4695 015a 5268     		ldr	r2, [r2, #4]
 4696 015c 9A61     		str	r2, [r3, #24]
 4697              		.loc 1 2632 1
 4698 015e CFE0     		b	.L200
 4699              	.L196:
2561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
 4700              		.loc 1 2561 9
 4701 0160 BB68     		ldr	r3, [r7, #8]
 4702 0162 DA6A     		ldr	r2, [r3, #44]
 4703 0164 BB68     		ldr	r3, [r7, #8]
 4704 0166 1B6B     		ldr	r3, [r3, #48]
 4705 0168 1A43     		orrs	r2, r2, r3
 4706 016a BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccjfKiuT.s 			page 129


 4707 016c 5B6B     		ldr	r3, [r3, #52]
 4708 016e 1A43     		orrs	r2, r2, r3
 4709 0170 BB68     		ldr	r3, [r7, #8]
 4710 0172 5B6A     		ldr	r3, [r3, #36]
 4711 0174 1A43     		orrs	r2, r2, r3
 4712 0176 BB68     		ldr	r3, [r7, #8]
 4713 0178 5B69     		ldr	r3, [r3, #20]
 4714 017a 9B04     		lsls	r3, r3, #18
 4715 017c 1A43     		orrs	r2, r2, r3
 4716 017e BB68     		ldr	r3, [r7, #8]
 4717 0180 1B6A     		ldr	r3, [r3, #32]
 4718 0182 1A43     		orrs	r2, r2, r3
 4719 0184 BB68     		ldr	r3, [r7, #8]
 4720 0186 DB69     		ldr	r3, [r3, #28]
 4721 0188 1A43     		orrs	r2, r2, r3
 4722 018a BB68     		ldr	r3, [r7, #8]
 4723 018c 9B69     		ldr	r3, [r3, #24]
 4724 018e 1A43     		orrs	r2, r2, r3
 4725 0190 BB68     		ldr	r3, [r7, #8]
 4726 0192 1B68     		ldr	r3, [r3]
 4727 0194 42EA0301 		orr	r1, r2, r3
 4728 0198 FB68     		ldr	r3, [r7, #12]
 4729 019a 1B68     		ldr	r3, [r3]
 4730 019c 7A68     		ldr	r2, [r7, #4]
 4731 019e 0A43     		orrs	r2, r2, r1
 4732 01a0 5A61     		str	r2, [r3, #20]
 4733              		.loc 1 2632 1
 4734 01a2 ADE0     		b	.L200
 4735              	.L192:
2570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 4736              		.loc 1 2570 12
 4737 01a4 BB68     		ldr	r3, [r7, #8]
 4738 01a6 1B6A     		ldr	r3, [r3, #32]
2570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****     {
 4739              		.loc 1 2570 8
 4740 01a8 002B     		cmp	r3, #0
 4741 01aa 58D0     		beq	.L197
2573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c **** 
 4742              		.loc 1 2573 7
 4743 01ac FB68     		ldr	r3, [r7, #12]
 4744 01ae 1B68     		ldr	r3, [r3]
 4745 01b0 BA68     		ldr	r2, [r7, #8]
 4746 01b2 9268     		ldr	r2, [r2, #8]
 4747 01b4 DA61     		str	r2, [r3, #28]
2575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 4748              		.loc 1 2575 14
 4749 01b6 BB68     		ldr	r3, [r7, #8]
 4750 01b8 DB69     		ldr	r3, [r3, #28]
2575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 4751              		.loc 1 2575 10
 4752 01ba 002B     		cmp	r3, #0
 4753 01bc 2DD0     		beq	.L198
2579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
 4754              		.loc 1 2579 9
 4755 01be BB68     		ldr	r3, [r7, #8]
 4756 01c0 DA6A     		ldr	r2, [r3, #44]
 4757 01c2 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccjfKiuT.s 			page 130


 4758 01c4 1B6B     		ldr	r3, [r3, #48]
 4759 01c6 1A43     		orrs	r2, r2, r3
 4760 01c8 BB68     		ldr	r3, [r7, #8]
 4761 01ca 5B6B     		ldr	r3, [r3, #52]
 4762 01cc 1A43     		orrs	r2, r2, r3
 4763 01ce BB68     		ldr	r3, [r7, #8]
 4764 01d0 5B6A     		ldr	r3, [r3, #36]
 4765 01d2 1A43     		orrs	r2, r2, r3
 4766 01d4 BB68     		ldr	r3, [r7, #8]
 4767 01d6 5B69     		ldr	r3, [r3, #20]
 4768 01d8 9B04     		lsls	r3, r3, #18
 4769 01da 1A43     		orrs	r2, r2, r3
 4770 01dc BB68     		ldr	r3, [r7, #8]
 4771 01de 1B69     		ldr	r3, [r3, #16]
 4772 01e0 1A43     		orrs	r2, r2, r3
 4773 01e2 BB68     		ldr	r3, [r7, #8]
 4774 01e4 1B6A     		ldr	r3, [r3, #32]
 4775 01e6 1A43     		orrs	r2, r2, r3
 4776 01e8 BB68     		ldr	r3, [r7, #8]
 4777 01ea DB68     		ldr	r3, [r3, #12]
 4778 01ec 1A43     		orrs	r2, r2, r3
 4779 01ee BB68     		ldr	r3, [r7, #8]
 4780 01f0 DB69     		ldr	r3, [r3, #28]
 4781 01f2 1A43     		orrs	r2, r2, r3
 4782 01f4 BB68     		ldr	r3, [r7, #8]
 4783 01f6 9B69     		ldr	r3, [r3, #24]
 4784 01f8 42EA0301 		orr	r1, r2, r3
 4785 01fc FB68     		ldr	r3, [r7, #12]
 4786 01fe 1B68     		ldr	r3, [r3]
 4787 0200 7A68     		ldr	r2, [r7, #4]
 4788 0202 0A43     		orrs	r2, r2, r1
 4789 0204 5A61     		str	r2, [r3, #20]
2585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
 4790              		.loc 1 2585 12
 4791 0206 7B68     		ldr	r3, [r7, #4]
 4792 0208 B3F1406F 		cmp	r3, #201326592
 4793 020c 78D0     		beq	.L200
2588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
 4794              		.loc 1 2588 11
 4795 020e FB68     		ldr	r3, [r7, #12]
 4796 0210 1B68     		ldr	r3, [r3]
 4797 0212 BA68     		ldr	r2, [r7, #8]
 4798 0214 5268     		ldr	r2, [r2, #4]
 4799 0216 9A61     		str	r2, [r3, #24]
 4800              		.loc 1 2632 1
 4801 0218 72E0     		b	.L200
 4802              	.L198:
2595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
 4803              		.loc 1 2595 9
 4804 021a BB68     		ldr	r3, [r7, #8]
 4805 021c DA6A     		ldr	r2, [r3, #44]
 4806 021e BB68     		ldr	r3, [r7, #8]
 4807 0220 1B6B     		ldr	r3, [r3, #48]
 4808 0222 1A43     		orrs	r2, r2, r3
 4809 0224 BB68     		ldr	r3, [r7, #8]
 4810 0226 5B6B     		ldr	r3, [r3, #52]
 4811 0228 1A43     		orrs	r2, r2, r3
ARM GAS  /tmp/ccjfKiuT.s 			page 131


 4812 022a BB68     		ldr	r3, [r7, #8]
 4813 022c 5B6A     		ldr	r3, [r3, #36]
 4814 022e 1A43     		orrs	r2, r2, r3
 4815 0230 BB68     		ldr	r3, [r7, #8]
 4816 0232 5B69     		ldr	r3, [r3, #20]
 4817 0234 9B04     		lsls	r3, r3, #18
 4818 0236 1A43     		orrs	r2, r2, r3
 4819 0238 BB68     		ldr	r3, [r7, #8]
 4820 023a 1B69     		ldr	r3, [r3, #16]
 4821 023c 1A43     		orrs	r2, r2, r3
 4822 023e BB68     		ldr	r3, [r7, #8]
 4823 0240 1B6A     		ldr	r3, [r3, #32]
 4824 0242 1A43     		orrs	r2, r2, r3
 4825 0244 BB68     		ldr	r3, [r7, #8]
 4826 0246 DB69     		ldr	r3, [r3, #28]
 4827 0248 1A43     		orrs	r2, r2, r3
 4828 024a BB68     		ldr	r3, [r7, #8]
 4829 024c 9B69     		ldr	r3, [r3, #24]
 4830 024e 42EA0301 		orr	r1, r2, r3
 4831 0252 FB68     		ldr	r3, [r7, #12]
 4832 0254 1B68     		ldr	r3, [r3]
 4833 0256 7A68     		ldr	r2, [r7, #4]
 4834 0258 0A43     		orrs	r2, r2, r1
 4835 025a 5A61     		str	r2, [r3, #20]
 4836              		.loc 1 2632 1
 4837 025c 50E0     		b	.L200
 4838              	.L197:
2603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 4839              		.loc 1 2603 14
 4840 025e BB68     		ldr	r3, [r7, #8]
 4841 0260 DB69     		ldr	r3, [r3, #28]
2603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****       {
 4842              		.loc 1 2603 10
 4843 0262 002B     		cmp	r3, #0
 4844 0264 2AD0     		beq	.L199
2607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                          cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos)
 4845              		.loc 1 2607 9
 4846 0266 BB68     		ldr	r3, [r7, #8]
 4847 0268 DA6A     		ldr	r2, [r3, #44]
 4848 026a BB68     		ldr	r3, [r7, #8]
 4849 026c 1B6B     		ldr	r3, [r3, #48]
 4850 026e 1A43     		orrs	r2, r2, r3
 4851 0270 BB68     		ldr	r3, [r7, #8]
 4852 0272 5B6B     		ldr	r3, [r3, #52]
 4853 0274 1A43     		orrs	r2, r2, r3
 4854 0276 BB68     		ldr	r3, [r7, #8]
 4855 0278 5B6A     		ldr	r3, [r3, #36]
 4856 027a 1A43     		orrs	r2, r2, r3
 4857 027c BB68     		ldr	r3, [r7, #8]
 4858 027e 5B69     		ldr	r3, [r3, #20]
 4859 0280 9B04     		lsls	r3, r3, #18
 4860 0282 1A43     		orrs	r2, r2, r3
 4861 0284 BB68     		ldr	r3, [r7, #8]
 4862 0286 1B6A     		ldr	r3, [r3, #32]
 4863 0288 1A43     		orrs	r2, r2, r3
 4864 028a BB68     		ldr	r3, [r7, #8]
 4865 028c DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccjfKiuT.s 			page 132


 4866 028e 1A43     		orrs	r2, r2, r3
 4867 0290 BB68     		ldr	r3, [r7, #8]
 4868 0292 DB69     		ldr	r3, [r3, #28]
 4869 0294 1A43     		orrs	r2, r2, r3
 4870 0296 BB68     		ldr	r3, [r7, #8]
 4871 0298 9B69     		ldr	r3, [r3, #24]
 4872 029a 42EA0301 		orr	r1, r2, r3
 4873 029e FB68     		ldr	r3, [r7, #12]
 4874 02a0 1B68     		ldr	r3, [r3]
 4875 02a2 7A68     		ldr	r2, [r7, #4]
 4876 02a4 0A43     		orrs	r2, r2, r1
 4877 02a6 5A61     		str	r2, [r3, #20]
2612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
 4878              		.loc 1 2612 12
 4879 02a8 7B68     		ldr	r3, [r7, #4]
 4880 02aa B3F1406F 		cmp	r3, #201326592
 4881 02ae 27D0     		beq	.L200
2615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         }
 4882              		.loc 1 2615 11
 4883 02b0 FB68     		ldr	r3, [r7, #12]
 4884 02b2 1B68     		ldr	r3, [r3]
 4885 02b4 BA68     		ldr	r2, [r7, #8]
 4886 02b6 5268     		ldr	r2, [r2, #4]
 4887 02b8 9A61     		str	r2, [r3, #24]
 4888              		.loc 1 2632 1
 4889 02ba 21E0     		b	.L200
 4890              	.L199:
2621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
 4891              		.loc 1 2621 16
 4892 02bc BB68     		ldr	r3, [r7, #8]
 4893 02be 5B6A     		ldr	r3, [r3, #36]
2621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****         {
 4894              		.loc 1 2621 12
 4895 02c0 002B     		cmp	r3, #0
 4896 02c2 1DD0     		beq	.L200
2624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c ****                                            cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Po
 4897              		.loc 1 2624 11
 4898 02c4 BB68     		ldr	r3, [r7, #8]
 4899 02c6 DA6A     		ldr	r2, [r3, #44]
 4900 02c8 BB68     		ldr	r3, [r7, #8]
 4901 02ca 1B6B     		ldr	r3, [r3, #48]
 4902 02cc 1A43     		orrs	r2, r2, r3
 4903 02ce BB68     		ldr	r3, [r7, #8]
 4904 02d0 5B6B     		ldr	r3, [r3, #52]
 4905 02d2 1A43     		orrs	r2, r2, r3
 4906 02d4 BB68     		ldr	r3, [r7, #8]
 4907 02d6 5B6A     		ldr	r3, [r3, #36]
 4908 02d8 1A43     		orrs	r2, r2, r3
 4909 02da BB68     		ldr	r3, [r7, #8]
 4910 02dc 5B69     		ldr	r3, [r3, #20]
 4911 02de 9B04     		lsls	r3, r3, #18
 4912 02e0 1A43     		orrs	r2, r2, r3
 4913 02e2 BB68     		ldr	r3, [r7, #8]
 4914 02e4 1B6A     		ldr	r3, [r3, #32]
 4915 02e6 1A43     		orrs	r2, r2, r3
 4916 02e8 BB68     		ldr	r3, [r7, #8]
 4917 02ea DB69     		ldr	r3, [r3, #28]
ARM GAS  /tmp/ccjfKiuT.s 			page 133


 4918 02ec 1A43     		orrs	r2, r2, r3
 4919 02ee BB68     		ldr	r3, [r7, #8]
 4920 02f0 9B69     		ldr	r3, [r3, #24]
 4921 02f2 42EA0301 		orr	r1, r2, r3
 4922 02f6 FB68     		ldr	r3, [r7, #12]
 4923 02f8 1B68     		ldr	r3, [r3]
 4924 02fa 7A68     		ldr	r2, [r7, #4]
 4925 02fc 0A43     		orrs	r2, r2, r1
 4926 02fe 5A61     		str	r2, [r3, #20]
 4927              	.L200:
 4928              		.loc 1 2632 1
 4929 0300 00BF     		nop
 4930 0302 1437     		adds	r7, r7, #20
 4931              	.LCFI208:
 4932              		.cfi_def_cfa_offset 4
 4933 0304 BD46     		mov	sp, r7
 4934              	.LCFI209:
 4935              		.cfi_def_cfa_register 13
 4936              		@ sp needed
 4937 0306 5DF8047B 		ldr	r7, [sp], #4
 4938              	.LCFI210:
 4939              		.cfi_restore 7
 4940              		.cfi_def_cfa_offset 0
 4941 030a 7047     		bx	lr
 4942              		.cfi_endproc
 4943              	.LFE368:
 4945              		.text
 4946              	.Letext0:
 4947              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 4948              		.file 3 "./Libraries/CMSIS/Core/Include/core_cm7.h"
 4949              		.file 4 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 4950              		.file 5 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 4951              		.file 6 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 4952              		.file 7 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 4953              		.file 8 "/usr/include/newlib/sys/_types.h"
 4954              		.file 9 "/usr/include/newlib/sys/reent.h"
 4955              		.file 10 "/usr/include/newlib/sys/lock.h"
 4956              		.file 11 "/usr/include/newlib/math.h"
 4957              		.file 12 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 4958              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_mdma.h"
 4959              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 4960              		.file 15 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_qspi.h"
 4961              		.file 16 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 4962              		.file 17 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccjfKiuT.s 			page 134


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_qspi.c
     /tmp/ccjfKiuT.s:17     .text.HAL_QSPI_Init:0000000000000000 $t
     /tmp/ccjfKiuT.s:25     .text.HAL_QSPI_Init:0000000000000000 HAL_QSPI_Init
     /tmp/ccjfKiuT.s:254    .text.HAL_QSPI_MspInit:0000000000000000 HAL_QSPI_MspInit
     /tmp/ccjfKiuT.s:3830   .text.HAL_QSPI_SetTimeout:0000000000000000 HAL_QSPI_SetTimeout
     /tmp/ccjfKiuT.s:4394   .text.QSPI_WaitFlagStateUntilTimeout:0000000000000000 QSPI_WaitFlagStateUntilTimeout
     /tmp/ccjfKiuT.s:172    .text.HAL_QSPI_Init:00000000000000e0 $d
     /tmp/ccjfKiuT.s:178    .text.HAL_QSPI_DeInit:0000000000000000 $t
     /tmp/ccjfKiuT.s:185    .text.HAL_QSPI_DeInit:0000000000000000 HAL_QSPI_DeInit
     /tmp/ccjfKiuT.s:297    .text.HAL_QSPI_MspDeInit:0000000000000000 HAL_QSPI_MspDeInit
     /tmp/ccjfKiuT.s:247    .text.HAL_QSPI_MspInit:0000000000000000 $t
     /tmp/ccjfKiuT.s:290    .text.HAL_QSPI_MspDeInit:0000000000000000 $t
     /tmp/ccjfKiuT.s:333    .text.HAL_QSPI_IRQHandler:0000000000000000 $t
     /tmp/ccjfKiuT.s:340    .text.HAL_QSPI_IRQHandler:0000000000000000 HAL_QSPI_IRQHandler
     /tmp/ccjfKiuT.s:3318   .text.HAL_QSPI_FifoThresholdCallback:0000000000000000 HAL_QSPI_FifoThresholdCallback
     /tmp/ccjfKiuT.s:3275   .text.HAL_QSPI_TxCpltCallback:0000000000000000 HAL_QSPI_TxCpltCallback
     /tmp/ccjfKiuT.s:3232   .text.HAL_QSPI_RxCpltCallback:0000000000000000 HAL_QSPI_RxCpltCallback
     /tmp/ccjfKiuT.s:3189   .text.HAL_QSPI_CmdCpltCallback:0000000000000000 HAL_QSPI_CmdCpltCallback
     /tmp/ccjfKiuT.s:3146   .text.HAL_QSPI_AbortCpltCallback:0000000000000000 HAL_QSPI_AbortCpltCallback
     /tmp/ccjfKiuT.s:3103   .text.HAL_QSPI_ErrorCallback:0000000000000000 HAL_QSPI_ErrorCallback
     /tmp/ccjfKiuT.s:3361   .text.HAL_QSPI_StatusMatchCallback:0000000000000000 HAL_QSPI_StatusMatchCallback
     /tmp/ccjfKiuT.s:3404   .text.HAL_QSPI_TimeOutCallback:0000000000000000 HAL_QSPI_TimeOutCallback
     /tmp/ccjfKiuT.s:916    .text.HAL_QSPI_IRQHandler:0000000000000370 $d
     /tmp/ccjfKiuT.s:4305   .text.QSPI_DMAAbortCplt:0000000000000000 QSPI_DMAAbortCplt
     /tmp/ccjfKiuT.s:921    .text.HAL_QSPI_Command:0000000000000000 $t
     /tmp/ccjfKiuT.s:928    .text.HAL_QSPI_Command:0000000000000000 HAL_QSPI_Command
     /tmp/ccjfKiuT.s:4492   .text.QSPI_Config:0000000000000000 QSPI_Config
     /tmp/ccjfKiuT.s:1061   .text.HAL_QSPI_Command_IT:0000000000000000 $t
     /tmp/ccjfKiuT.s:1068   .text.HAL_QSPI_Command_IT:0000000000000000 HAL_QSPI_Command_IT
     /tmp/ccjfKiuT.s:1212   .text.HAL_QSPI_Transmit:0000000000000000 $t
     /tmp/ccjfKiuT.s:1219   .text.HAL_QSPI_Transmit:0000000000000000 HAL_QSPI_Transmit
     /tmp/ccjfKiuT.s:1431   .text.HAL_QSPI_Receive:0000000000000000 $t
     /tmp/ccjfKiuT.s:1438   .text.HAL_QSPI_Receive:0000000000000000 HAL_QSPI_Receive
     /tmp/ccjfKiuT.s:1663   .text.HAL_QSPI_Transmit_IT:0000000000000000 $t
     /tmp/ccjfKiuT.s:1670   .text.HAL_QSPI_Transmit_IT:0000000000000000 HAL_QSPI_Transmit_IT
     /tmp/ccjfKiuT.s:1818   .text.HAL_QSPI_Receive_IT:0000000000000000 $t
     /tmp/ccjfKiuT.s:1825   .text.HAL_QSPI_Receive_IT:0000000000000000 HAL_QSPI_Receive_IT
     /tmp/ccjfKiuT.s:1985   .text.HAL_QSPI_Transmit_DMA:0000000000000000 $t
     /tmp/ccjfKiuT.s:1992   .text.HAL_QSPI_Transmit_DMA:0000000000000000 HAL_QSPI_Transmit_DMA
     /tmp/ccjfKiuT.s:2289   .text.HAL_QSPI_Transmit_DMA:00000000000001c8 $d
     /tmp/ccjfKiuT.s:4180   .text.QSPI_DMATxCplt:0000000000000000 QSPI_DMATxCplt
     /tmp/ccjfKiuT.s:4238   .text.QSPI_DMAError:0000000000000000 QSPI_DMAError
     /tmp/ccjfKiuT.s:2297   .text.HAL_QSPI_Receive_DMA:0000000000000000 $t
     /tmp/ccjfKiuT.s:2304   .text.HAL_QSPI_Receive_DMA:0000000000000000 HAL_QSPI_Receive_DMA
     /tmp/ccjfKiuT.s:2613   .text.HAL_QSPI_Receive_DMA:00000000000001dc $d
     /tmp/ccjfKiuT.s:4122   .text.QSPI_DMARxCplt:0000000000000000 QSPI_DMARxCplt
     /tmp/ccjfKiuT.s:2621   .text.HAL_QSPI_AutoPolling:0000000000000000 $t
     /tmp/ccjfKiuT.s:2628   .text.HAL_QSPI_AutoPolling:0000000000000000 HAL_QSPI_AutoPolling
     /tmp/ccjfKiuT.s:2786   .text.HAL_QSPI_AutoPolling_IT:0000000000000000 $t
     /tmp/ccjfKiuT.s:2793   .text.HAL_QSPI_AutoPolling_IT:0000000000000000 HAL_QSPI_AutoPolling_IT
     /tmp/ccjfKiuT.s:2953   .text.HAL_QSPI_MemoryMapped:0000000000000000 $t
     /tmp/ccjfKiuT.s:2960   .text.HAL_QSPI_MemoryMapped:0000000000000000 HAL_QSPI_MemoryMapped
     /tmp/ccjfKiuT.s:3096   .text.HAL_QSPI_ErrorCallback:0000000000000000 $t
     /tmp/ccjfKiuT.s:3139   .text.HAL_QSPI_AbortCpltCallback:0000000000000000 $t
     /tmp/ccjfKiuT.s:3182   .text.HAL_QSPI_CmdCpltCallback:0000000000000000 $t
     /tmp/ccjfKiuT.s:3225   .text.HAL_QSPI_RxCpltCallback:0000000000000000 $t
ARM GAS  /tmp/ccjfKiuT.s 			page 135


     /tmp/ccjfKiuT.s:3268   .text.HAL_QSPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccjfKiuT.s:3311   .text.HAL_QSPI_FifoThresholdCallback:0000000000000000 $t
     /tmp/ccjfKiuT.s:3354   .text.HAL_QSPI_StatusMatchCallback:0000000000000000 $t
     /tmp/ccjfKiuT.s:3397   .text.HAL_QSPI_TimeOutCallback:0000000000000000 $t
     /tmp/ccjfKiuT.s:3440   .text.HAL_QSPI_GetState:0000000000000000 $t
     /tmp/ccjfKiuT.s:3447   .text.HAL_QSPI_GetState:0000000000000000 HAL_QSPI_GetState
     /tmp/ccjfKiuT.s:3487   .text.HAL_QSPI_GetError:0000000000000000 $t
     /tmp/ccjfKiuT.s:3494   .text.HAL_QSPI_GetError:0000000000000000 HAL_QSPI_GetError
     /tmp/ccjfKiuT.s:3533   .text.HAL_QSPI_Abort:0000000000000000 $t
     /tmp/ccjfKiuT.s:3540   .text.HAL_QSPI_Abort:0000000000000000 HAL_QSPI_Abort
     /tmp/ccjfKiuT.s:3686   .text.HAL_QSPI_Abort_IT:0000000000000000 $t
     /tmp/ccjfKiuT.s:3693   .text.HAL_QSPI_Abort_IT:0000000000000000 HAL_QSPI_Abort_IT
     /tmp/ccjfKiuT.s:3818   .text.HAL_QSPI_Abort_IT:00000000000000b4 $d
     /tmp/ccjfKiuT.s:3823   .text.HAL_QSPI_SetTimeout:0000000000000000 $t
     /tmp/ccjfKiuT.s:3871   .text.HAL_QSPI_SetFifoThreshold:0000000000000000 $t
     /tmp/ccjfKiuT.s:3878   .text.HAL_QSPI_SetFifoThreshold:0000000000000000 HAL_QSPI_SetFifoThreshold
     /tmp/ccjfKiuT.s:3969   .text.HAL_QSPI_GetFifoThreshold:0000000000000000 $t
     /tmp/ccjfKiuT.s:3976   .text.HAL_QSPI_GetFifoThreshold:0000000000000000 HAL_QSPI_GetFifoThreshold
     /tmp/ccjfKiuT.s:4021   .text.HAL_QSPI_SetFlashID:0000000000000000 $t
     /tmp/ccjfKiuT.s:4028   .text.HAL_QSPI_SetFlashID:0000000000000000 HAL_QSPI_SetFlashID
     /tmp/ccjfKiuT.s:4116   .text.QSPI_DMARxCplt:0000000000000000 $t
     /tmp/ccjfKiuT.s:4174   .text.QSPI_DMATxCplt:0000000000000000 $t
     /tmp/ccjfKiuT.s:4232   .text.QSPI_DMAError:0000000000000000 $t
     /tmp/ccjfKiuT.s:4299   .text.QSPI_DMAAbortCplt:0000000000000000 $t
     /tmp/ccjfKiuT.s:4388   .text.QSPI_WaitFlagStateUntilTimeout:0000000000000000 $t
     /tmp/ccjfKiuT.s:4486   .text.QSPI_Config:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_MDMA_Abort_IT
HAL_MDMA_Start_IT
HAL_MDMA_Abort
