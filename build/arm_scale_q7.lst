ARM GAS  /tmp/ccvnmZBL.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_scale_q7.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_scale_q7,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	arm_scale_q7
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_scale_q7:
  27              	.LVL0:
  28              	.LFB145:
  29              		.file 1 "./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c"
   1:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * Title:        arm_scale_q7.c
   4:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * Description:  Multiplies a Q7 vector by a scalar
   5:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  *
   6:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  *
   9:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** /*
  12:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  *
  14:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  *
  16:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  *
  20:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  *
  22:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  */
  28:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
  29:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** #include "arm_math.h"
ARM GAS  /tmp/ccvnmZBL.s 			page 2


  30:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
  31:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** /**
  32:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   @ingroup groupMath
  33:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  */
  34:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
  35:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** /**
  36:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   @addtogroup BasicScale
  37:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  */
  39:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
  40:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** /**
  41:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   @brief         Multiplies a Q7 vector by a scalar.
  42:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   @param[in]     pSrc       points to the input vector
  43:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   @param[in]     scaleFract fractional portion of the scale value
  44:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   @param[in]     shift      number of bits to shift the result by
  45:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   @param[out]    pDst       points to the output vector
  46:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   @param[in]     blockSize  number of samples in each vector
  47:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   @return        none
  48:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
  49:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   @par           Scaling and Overflow Behavior
  50:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****                    The input data <code>*pSrc</code> and <code>scaleFract</code> are in 1.7 format.
  51:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****                    These are multiplied to yield a 2.14 intermediate result and this is shifted wit
  52:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****  */
  53:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
  54:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** void arm_scale_q7(
  55:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   const q7_t * pSrc,
  56:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****         q7_t scaleFract,
  57:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****         int8_t shift,
  58:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****         q7_t * pDst,
  59:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****         uint32_t blockSize)
  60:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** {
  30              		.loc 1 60 1 view -0
  31              		.cfi_startproc
  32              		@ args = 4, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 60 1 is_stmt 0 view .LVU1
  36 0000 30B4     		push	{r4, r5}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 4, -8
  40              		.cfi_offset 5, -4
  41              		.loc 1 60 1 view .LVU2
  42 0002 029D     		ldr	r5, [sp, #8]
  61:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****         uint32_t blkCnt;                               /* Loop counter */
  43              		.loc 1 61 9 is_stmt 1 view .LVU3
  62:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****         int8_t kShift = 7 - shift;                     /* Shift to apply after scaling */
  44              		.loc 1 62 9 view .LVU4
  45              	.LVL1:
  63:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
  64:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** #if defined (ARM_MATH_LOOPUNROLL)
  65:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
  66:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** #if defined (ARM_MATH_DSP)
  67:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   q7_t in1,  in2,  in3,  in4;                    /* Temporary input variables */
  68:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   q7_t out1, out2, out3, out4;                   /* Temporary output variables */
  69:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** #endif
  70:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
ARM GAS  /tmp/ccvnmZBL.s 			page 3


  71:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   /* Loop unrolling: Compute 4 outputs at a time */
  72:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   blkCnt = blockSize >> 2U;
  73:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
  74:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   while (blkCnt > 0U)
  75:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   {
  76:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     /* C = A * scale */
  77:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
  78:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** #if defined (ARM_MATH_DSP)
  79:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     /* Reading 4 inputs from memory */
  80:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     in1 = *pSrc++;
  81:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     in2 = *pSrc++;
  82:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     in3 = *pSrc++;
  83:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     in4 = *pSrc++;
  84:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
  85:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     /* Scale inputs and store result in the temporary variable. */
  86:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     out1 = (q7_t) (__SSAT(((in1) * scaleFract) >> kShift, 8));
  87:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     out2 = (q7_t) (__SSAT(((in2) * scaleFract) >> kShift, 8));
  88:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     out3 = (q7_t) (__SSAT(((in3) * scaleFract) >> kShift, 8));
  89:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     out4 = (q7_t) (__SSAT(((in4) * scaleFract) >> kShift, 8));
  90:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
  91:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     /* Pack and store result in destination buffer (in single write) */
  92:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     write_q7x4_ia (&pDst, __PACKq7(out1, out2, out3, out4));
  93:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** #else
  94:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     *pDst++ = (q7_t) (__SSAT((((q15_t) *pSrc++ * scaleFract) >> kShift), 8));
  95:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     *pDst++ = (q7_t) (__SSAT((((q15_t) *pSrc++ * scaleFract) >> kShift), 8));
  96:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     *pDst++ = (q7_t) (__SSAT((((q15_t) *pSrc++ * scaleFract) >> kShift), 8));
  97:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     *pDst++ = (q7_t) (__SSAT((((q15_t) *pSrc++ * scaleFract) >> kShift), 8));
  98:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** #endif
  99:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
 100:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     /* Decrement loop counter */
 101:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     blkCnt--;
 102:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   }
 103:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
 104:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   /* Loop unrolling: Compute remaining outputs */
 105:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   blkCnt = blockSize % 0x4U;
 106:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
 107:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** #else
 108:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
 109:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   /* Initialize blkCnt with number of samples */
 110:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   blkCnt = blockSize;
  46              		.loc 1 110 3 view .LVU5
 111:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
 112:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 113:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
 114:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   while (blkCnt > 0U)
  47              		.loc 1 114 3 view .LVU6
  48              		.loc 1 114 9 view .LVU7
  49 0004 7DB1     		cbz	r5, .L1
  50 0006 C2F10702 		rsb	r2, r2, #7
  51              	.LVL2:
  52              		.loc 1 114 9 is_stmt 0 view .LVU8
  53 000a 0544     		add	r5, r5, r0
  54              	.LVL3:
  55              		.loc 1 114 9 view .LVU9
  56 000c 54B2     		sxtb	r4, r2
  57              	.L3:
 115:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   {
ARM GAS  /tmp/ccvnmZBL.s 			page 4


 116:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     /* C = A * scale */
 117:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
 118:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     /* Scale input and store result in destination buffer. */
 119:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     *pDst++ = (q7_t) (__SSAT((((q15_t) *pSrc++ * scaleFract) >> kShift), 8));
  58              		.loc 1 119 5 is_stmt 1 view .LVU10
  59              	.LBB2:
  60              		.loc 1 119 23 view .LVU11
  61              	.LVL4:
  62              		.loc 1 119 23 view .LVU12
  63 000e 10F9012B 		ldrsb	r2, [r0], #1
  64              	.LVL5:
  65              		.loc 1 119 23 is_stmt 0 view .LVU13
  66 0012 12FB01F2 		smulbb	r2, r2, r1
  67              	.LBE2:
 114:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   {
  68              		.loc 1 114 9 view .LVU14
  69 0016 A842     		cmp	r0, r5
  70              	.LBB3:
  71              		.loc 1 119 23 view .LVU15
  72 0018 42FA04F2 		asr	r2, r2, r4
  73              		.syntax unified
  74              	@ 119 "./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c" 1
  75 001c 02F30702 		ssat r2, #8, r2
  76              	@ 0 "" 2
  77              	.LVL6:
  78              		.loc 1 119 23 is_stmt 1 view .LVU16
  79              		.loc 1 119 23 is_stmt 0 view .LVU17
  80              		.thumb
  81              		.syntax unified
  82              	.LBE3:
  83              		.loc 1 119 15 view .LVU18
  84 0020 03F8012B 		strb	r2, [r3], #1
  85              	.LVL7:
 120:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
 121:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     /* Decrement loop counter */
 122:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****     blkCnt--;
  86              		.loc 1 122 5 is_stmt 1 view .LVU19
 114:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   {
  87              		.loc 1 114 9 view .LVU20
  88 0024 F3D1     		bne	.L3
  89              	.LVL8:
  90              	.L1:
 123:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c ****   }
 124:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** 
 125:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_scale_q7.c **** }
  91              		.loc 1 125 1 is_stmt 0 view .LVU21
  92 0026 30BC     		pop	{r4, r5}
  93              	.LCFI1:
  94              		.cfi_restore 5
  95              		.cfi_restore 4
  96              		.cfi_def_cfa_offset 0
  97              	.LVL9:
  98              		.loc 1 125 1 view .LVU22
  99 0028 7047     		bx	lr
 100              		.cfi_endproc
 101              	.LFE145:
 103 002a 00BF     		.text
ARM GAS  /tmp/ccvnmZBL.s 			page 5


 104              	.Letext0:
 105              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 106              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 107              		.file 4 "/usr/include/newlib/sys/_types.h"
 108              		.file 5 "/usr/include/newlib/sys/reent.h"
 109              		.file 6 "/usr/include/newlib/sys/lock.h"
 110              		.file 7 "/usr/include/newlib/math.h"
 111              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/ccvnmZBL.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_scale_q7.c
     /tmp/ccvnmZBL.s:17     .text.arm_scale_q7:0000000000000000 $t
     /tmp/ccvnmZBL.s:26     .text.arm_scale_q7:0000000000000000 arm_scale_q7

NO UNDEFINED SYMBOLS
