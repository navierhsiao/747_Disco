ARM GAS  /tmp/cc6JDs4t.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_adc.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	HAL_ADC_MspInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	HAL_ADC_MspInit:
  27              	.LVL0:
  28              	.LFB333:
  29              		.file 1 "./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c"
   1:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
   2:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ******************************************************************************
   3:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @file    stm32h7xx_hal_adc.c
   4:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @author  MCD Application Team
   5:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          peripheral:
   8:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  10:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           + Operation functions
  11:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  12:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  13:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           + Control functions
  14:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *             ++ Channels configuration on regular group
  15:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  16:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           + State functions
  17:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *             ++ ADC state machine management
  18:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *             ++ Interrupts and flags management
  19:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  20:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          "stm32h7xx_hal_adc_ex.c".
  21:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
  22:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   @verbatim
  23:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ==============================================================================
  24:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ##### ADC peripheral features #####
  25:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ==============================================================================
  26:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   [..]
  27:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) 16-bit, 14-bit, 12-bit, 10-bit or 8-bit configurable resolution.
  28:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        Note: On devices STM32H72xx and STM32H73xx, these resolution are applicable to instances ADC
  29:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        ADC3 is featuring resolutions 12-bit, 10-bit, 8-bit, 6-bit.
ARM GAS  /tmp/cc6JDs4t.s 			page 2


  30:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  31:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  32:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       analog watchdog or overrun events.
  33:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  34:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  35:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  36:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  37:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  38:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  39:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  40:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  41:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  42:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  43:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  44:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  45:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  46:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode.
  47:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  48:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC channels selectable single/differential input.
  49:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  50:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC offset shared on 4 offset instances.
  51:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC calibration
  52:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  53:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC conversion of regular group.
  54:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  55:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  56:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  57:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  58:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       Vdda or to an external voltage reference).
  59:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  60:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  61:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ##### How to use this driver #####
  62:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ==============================================================================
  63:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
  64:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  65:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  66:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ============================================================
  67:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
  68:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  69:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Enable the ADC interface
  70:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  71:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  72:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) Two clock settings are mandatory:
  73:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  74:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  75:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  76:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    Two possible clock sources: synchronous clock derived from AHB clock
  77:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    or asynchronous clock derived from system clock, the PLL2 or the PLL3 running up
  78:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  79:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              (+++) Example:
  80:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  81:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    other device clock parameters configuration:
  82:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  83:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  84:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                RCC_ADCCLKSOURCE_PLL2 enable:                   (optional: if asynchronous clock sel
  85:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
  86:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
ARM GAS  /tmp/cc6JDs4t.s 			page 3


  87:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_PLL2;
  88:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  89:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  90:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  91:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  92:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  93:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) ADC pins configuration
  94:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  95:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  96:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  97:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_GPIO_Init()
  98:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  99:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               into the function of corresponding ADC interruption vector
 104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               ADCx_IRQHandler().
 105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_DMA_Init().
 109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ================================================================
 117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         using function HAL_ADC_Init().
 122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         monitored, thresholds, ...)
 129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      *** Execution of ADC conversions ***
 132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ====================================
 133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         conversion accuracy
 137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         transfer by DMA.
 141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) ADC conversion by polling:
 143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
ARM GAS  /tmp/cc6JDs4t.s 			page 4


 144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Start()
 145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Retrieve conversion results
 148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) ADC conversion by interruption:
 153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 (this function must be implemented in user program)
 158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Retrieve conversion results
 159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 (these functions must be implemented in user program)
 169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 destination variable address.
 171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      *** Deinitialization of ADC ***
 183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ============================================================
 184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Disable the ADC interface
 187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              using macro __HAL_RCC_ADCx_FORCE_RESET(), __HAL_RCC_ADCx_RELEASE_RESET().
 190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) ADC clock disable
 191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              (+++) Example:
 193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    other device clock parameters configuration:
 195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_DISABLE();                  (if not used anymore)
 196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                RCC_ADCCLKSOURCE_CLKP restore:                      (optional)
 197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
 198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_CLKP;
 200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
ARM GAS  /tmp/cc6JDs4t.s 			page 5


 201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) ADC pins configuration
 203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Deinitialize the DMA
 212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_DMA_Init().
 213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
 217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     *** Callback registration ***
 219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     =============================================
 220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
 221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Use Functions @ref HAL_ADC_RegisterCallback()
 225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      to register an interrupt callback.
 226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
 227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Function @ref HAL_ADC_RegisterCallback() allows to register following callbacks:
 229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      and a pointer to the user callback function.
 242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
 243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Use function @ref HAL_ADC_UnRegisterCallback to reset a callback to the default
 245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      weak function.
 246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
 247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      @ref HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      and the Callback ID.
 250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      This function allows to reset following callbacks:
 251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
ARM GAS  /tmp/cc6JDs4t.s 			page 6


 258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      By default, after the @ref HAL_ADC_Init() and when the state is @ref HAL_ADC_STATE_RESET
 265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      examples @ref HAL_ADC_ConvCpltCallback(), @ref HAL_ADC_ErrorCallback().
 267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      reset to the legacy weak functions in the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit() only when
 269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
 271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit()
 273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Callbacks can be registered/unregistered in @ref HAL_ADC_STATE_READY state only.
 277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      in @ref HAL_ADC_STATE_READY or @ref HAL_ADC_STATE_RESET state,
 279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
 281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      using @ref HAL_ADC_RegisterCallback() before calling @ref HAL_ADC_DeInit()
 284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      or @ref HAL_ADC_Init() function.
 285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      are set to the corresponding weak functions.
 290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   @endverbatim
 292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ******************************************************************************
 293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @attention
 294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
 295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * All rights reserved.</center></h2>
 297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
 298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * the "License"; You may not use this file except in compliance with the
 300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * License. You may obtain a copy of the License at:
 301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
 302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
 303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ******************************************************************************
 304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #include "stm32h7xx_hal.h"
 308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @addtogroup STM32H7xx_HAL_Driver
 310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
 311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC ADC
 314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief ADC HAL module driver
ARM GAS  /tmp/cc6JDs4t.s 			page 7


 315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
 316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
 325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC_CFGR_FIELDS_1  ((uint32_t)(ADC_CFGR_RES    |\
 327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                        ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                        ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
 329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                        ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL)) /*!< ADC_CFGR fields of 
 330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                                                                   when no regular c
 331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC3_CFGR_FIELDS_1  ((ADC3_CFGR_RES    | ADC3_CFGR_ALIGN   |\
 334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                              ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                              ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
 336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                              ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL))   /*!< ADC_CFGR fields of paramete
 337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                                                         when no regular conversion 
 338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC_CFGR2_FIELDS  ((uint32_t)(ADC_CFGR2_ROVSE | ADC_CFGR2_OVSR  |\
 341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                        ADC_CFGR2_OVSS | ADC_CFGR2_TROVS |\
 342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                        ADC_CFGR2_ROVSM))                     /*!< ADC_CFGR2 fields 
 343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                                                                  (neither regular n
 344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Timeout values for ADC operations (enable settling time,                   */
 346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*   disable settling time, ...).                                             */
 347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*   Values defined to be higher than worst cases: low clock frequency,       */
 348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*   maximum prescalers.                                                      */
 349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)    /*!< ADC enable time-out value  */
 350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)    /*!< ADC disable time-out value */
 351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Timeout to wait for current conversion on going to be completed.           */
 353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Timeout fixed to worst case, for 1 channel.                                */
 354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*   - maximum sampling time (830.5 adc_clk)                                  */
 355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*   - ADC resolution (Tsar 16 bits= 16.5 adc_clk)                            */
 356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*   - ADC clock with prescaler 256                                           */
 357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*     823 * 256 = 210688 clock cycles max                                    */
 358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Unit: cycles of CPU clock.                                                 */
 359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES (210688UL)  /*!< ADC conversion completion time-out valu
 360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
 362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
 363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
ARM GAS  /tmp/cc6JDs4t.s 			page 8


 372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
 377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @verbatim
 378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
 379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
 381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Initialize and configure the ADC.
 383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) De-initialize the ADC.
 384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @endverbatim
 385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
 386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
 389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         in header of this file).
 394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         before HAL_ADC_Init().
 401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Parameters related to common ADC registers (ADC clock mode) are set
 408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         only if all ADCs are disabled.
 409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         If this is not the case, these common parameters setting are
 410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         without  disabling the other ADCs.
 413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
 414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
 415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpCFGR;
 420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check ADC handle */
 426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc == NULL)
 427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     return HAL_ERROR;
ARM GAS  /tmp/cc6JDs4t.s 			page 9


 429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
 432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSIONDATAMGT(hadc->Init.ConversionDataManagement));
 440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* DISCEN and CONT bits cannot be set at the same time */
 457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Init the ADC Callback settings */
 465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;  /* Legacy weak 
 471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Init the low level hardware */
 481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
 483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Init the low level hardware */
 484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
ARM GAS  /tmp/cc6JDs4t.s 			page 10


 486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC error code to none */
 488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Initialize Lock */
 491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
 495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable ADC deep power down mode */
 498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     LL_ADC_DisableDeepPowerDown(hadc->Instance);
 499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* System was in deep power down mode, calibration must
 501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      be relaunched or a previously saved calibration factor
 502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      re-applied once the ADC voltage regulator is enabled */
 503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       wait_loop_index--;
 517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update ADC state machine to error */
 526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      )
ARM GAS  /tmp/cc6JDs4t.s 			page 11


 543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC state */
 545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - clock configuration                                                 */
 554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Reset configuration of ADC common register CCR:                      */
 559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*                                                                      */
 560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*   - ADC clock mode and ACC prescaler (CKMODE and PRESC bits)are set  */
 561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*     according to adc->Init.ClockPrescaler. It selects the clock      */
 562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*    source and sets the clock division factor.                        */
 563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*                                                                      */
 564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Some parameters of this register are not reset, since they are set   */
 565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* by other functions and must be kept in case of usage of this         */
 566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* without needing to reconfigure all other ADC groups/channels         */
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* parameters):                                                         */
 569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*   - when multimode feature is available, multimode-related           */
 570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
 571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
 572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*     (set into HAL_ADC_ConfigChannel() or                             */
 574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - resolution                               Init.Resolution            */
 581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - continuous conversion mode               Init.ContinuousConvMode    */
 584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - overrun                                  Init.Overrun               */
 585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - discontinuous mode                       Init.DiscontinuousConvMode */
 586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - discontinuous mode channel count         Init.NbrOfDiscConversion   */
 587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_3)
 588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)           |
 590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 hadc->Init.Overrun                                                    |
 591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 hadc->Init.Resolution                                                 |
 592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #elif defined(ADC_VER_V5_V90)
 595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Instance == ADC3)
 596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)         |
 598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                     |
 599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.DataAlign                                                   |
ARM GAS  /tmp/cc6JDs4t.s 			page 12


 600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ((__LL_ADC12_RESOLUTION_TO_ADC3(hadc->Init.Resolution)  & (ADC_CFGR_RES_1 | ADC_C
 601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
 604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Resolution                                                 |
 608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
 612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((HAL_GetREVID() > REV_ID_Y) && (ADC_RESOLUTION_8B == hadc->Init.Resolution))
 614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* for STM32H7 silicon rev.B and above , ADC_CFGR_RES value for 8bits resolution is : b111 */
 616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Resolution | (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)                |
 619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
 622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Resolution                                                 |
 627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_3 */
 631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* start.                                                                 */
 639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       software start.                                                  */
 642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                  );
 647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Instance == ADC3)
 652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Update Configuration Register CFGR */
 654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC3_CFGR_FIELDS_1, tmpCFGR);
 655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configuration of sampling mode */
 656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR2, ADC3_CFGR2_BULB | ADC3_CFGR2_SMPTRIG, hadc->Init.SamplingMo
ARM GAS  /tmp/cc6JDs4t.s 			page 13


 657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
 659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Update Configuration Register CFGR */
 661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
 664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update Configuration Register CFGR */
 665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* conversion on going on regular and injected groups:                    */
 671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Conversion data management      Init.ConversionDataManagement       */
 672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
 673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Oversampling parameters         Init.Oversampling                   */
 674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
 679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Instance == ADC3)
 682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpCFGR = (
 684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                     ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                     ADC3_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
 688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpCFGR = (
 690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                     ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                     ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.ConversionDataManagement));
 692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
 694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR = (
 695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.ConversionDataManagement));
 697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (hadc->Instance == ADC3)
 705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           assert_param(IS_ADC_OVERSAMPLING_RATIO_ADC3(hadc->Init.Oversampling.Ratio));
 707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
 709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
 713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
ARM GAS  /tmp/cc6JDs4t.s 			page 14


 714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((hadc->Init.ExternalTrigConv == ADC_SOFTWARE_START)
 720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             || (hadc->Init.ExternalTrigConvEdge == ADC_EXTERNALTRIGCONVEDGE_NONE))
 721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Multi trigger is not applicable to software-triggered conversions */
 723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           assert_param((hadc->Init.Oversampling.TriggeredMode == ADC_TRIGGEREDMODE_SINGLE_TRIGGER))
 724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (hadc->Instance == ADC3)
 728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Configuration of Oversampler:                                      */
 730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Oversampling Ratio                                              */
 731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Right bit shift                                                 */
 732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Triggered mode                                                  */
 733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Oversampling mode (continued/resumed)                           */
 734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->CFGR2,
 735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ADC_CFGR2_OVSR  |
 736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ADC_CFGR2_OVSS  |
 737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ADC_CFGR2_TROVS |
 738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ADC_CFGR2_ROVSM,
 739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ADC_CFGR2_ROVSE                       |
 740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      hadc->Init.Oversampling.Ratio         |
 741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      hadc->Init.Oversampling.RightBitShift |
 742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      hadc->Init.Oversampling.TriggeredMode |
 743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      hadc->Init.Oversampling.OversamplingStopReset
 744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                     );
 745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
 747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Configuration of Oversampler:                                       */
 750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Oversampling Ratio                                               */
 751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Right bit shift                                                  */
 752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Left bit shift                                                   */
 753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Triggered mode                                                   */
 754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Oversampling mode (continued/resumed)                            */
 755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_FIELDS,
 756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ADC_CFGR2_ROVSE                       |
 757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ((hadc->Init.Oversampling.Ratio - 1UL)  << ADC_CFGR2_OVSR_Pos) |
 758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      hadc->Init.Oversampling.RightBitShift |
 759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      hadc->Init.Oversampling.TriggeredMode |
 760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      hadc->Init.Oversampling.OversamplingStopReset);
 761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
 763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Configuration of Oversampler:                                       */
 764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*  - Oversampling Ratio                                               */
 765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*  - Right bit shift                                                  */
 766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*  - Left bit shift                                                   */
 767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*  - Triggered mode                                                   */
 768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*  - Oversampling mode (continued/resumed)                            */
 769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_FIELDS,
 770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_CFGR2_ROVSE                       |
ARM GAS  /tmp/cc6JDs4t.s 			page 15


 771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ((hadc->Init.Oversampling.Ratio - 1UL) << ADC_CFGR2_OVSR_Pos) |
 772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    hadc->Init.Oversampling.RightBitShift |
 773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    hadc->Init.Oversampling.TriggeredMode |
 774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    hadc->Init.Oversampling.OversamplingStopReset);
 775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
 779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Disable ADC oversampling scope on ADC group regular */
 781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set the LeftShift parameter: it is applied to the final result with or without oversamplin
 785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_LSHIFT, hadc->Init.LeftBitShift);
 786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Instance != ADC3)
 788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Configure the BOOST Mode */
 790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         ADC_ConfigureBoostMode(hadc);
 791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
 793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configure the BOOST Mode */
 794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_ConfigureBoostMode(hadc);
 795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set number of ranks in regular group sequencer */
 810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
 813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Initialize the ADC state */
 818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
 819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
 822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update ADC state machine to error */
 824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
ARM GAS  /tmp/cc6JDs4t.s 			page 16


 828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
 830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
 834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         common group is still running.
 845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() set ADC in mode deep power-down:
 846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         this saves more power by reducing leakage currents
 847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         and is particularly interesting before entering MCU low-power modes.
 848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
 849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
 850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check ADC handle */
 856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc == NULL)
 857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     return HAL_ERROR;
 859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
 862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Set ADC state */
 865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Stop potential conversion on going */
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped            */
 871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Flush register JSQR: reset the queue sequencer when injected             */
 872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* queue sequencer is enabled and ADC disabled.                             */
 873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* The software and hardware triggers of the injected sequence are both     */
 874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* internally disabled just after the completion of the last valid          */
 875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* injected sequence.                                                       */
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable the ADC peripheral */
 882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
ARM GAS  /tmp/cc6JDs4t.s 			page 17


 885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Change ADC state */
 888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register IER */
 900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
 901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_JEOS  | ADC_IT_JEOC |
 903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
 905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register ISR */
 907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
 908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_FLAG_JEOS  | ADC_FLAG_JEOC |
 910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register CR */
 914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART,
 915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ADC_CR_ADCAL, ADC_CR_ADDIS and ADC_CR_ADEN are in access mode "read-set":
 916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      no direct reset applicable.
 917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Update CR register to reset value where doable by software */
 918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN | ADC_CR_ADCALDIF);
 919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register CFGR */
 922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_AWD1CH  | ADC_CFGR_JAUTO   | ADC_CFGR_JAWD1EN |
 923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR_AWD1EN  | ADC_CFGR_AWD1SGL | ADC_CFGR_JQM     |
 924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR_JDISCEN | ADC_CFGR_DISCNUM | ADC_CFGR_DISCEN  |
 925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR_AUTDLY  | ADC_CFGR_CONT    | ADC_CFGR_OVRMOD  |
 926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR_EXTEN   | ADC_CFGR_EXTSEL  |
 927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR_RES     | ADC_CFGR_DMNGT);
 928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register CFGR2 */
 931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSM  | ADC_CFGR2_TROVS   | ADC_CFGR2_OVSS |
 932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SMPR1 */
 935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_FIELDS);
 936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SMPR2 */
 938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 |
 939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10);
 941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 18


 942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->Instance == ADC3)
 944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {  
 945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Reset register LTR1 and HTR1 */
 946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->LTR1_TR1, ADC3_TR1_HT1 | ADC3_TR1_LT1);
 947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->HTR1_TR2, ADC3_TR2_HT2 | ADC3_TR2_LT2);
 948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Reset register LTR3 and HTR3 */
 950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->RES1_TR3, ADC3_TR3_HT3 | ADC3_TR3_LT3);
 951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
 953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {  
 954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->LTR1_TR1, ADC_LTR_LT);
 955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->HTR1_TR2, ADC_HTR_HT);
 956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Reset register LTR2 and HTR2*/
 958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->LTR2_DIFSEL, ADC_LTR_LT);
 959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->HTR2_CALFACT, ADC_HTR_HT);
 960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Reset register LTR3 and HTR3 */
 962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->LTR3_RES10, ADC_LTR_LT);
 963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->HTR3_RES11, ADC_HTR_HT);
 964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
 966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register LTR1 and HTR1 */
 967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->LTR1, ADC_LTR_LT);
 968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR1, ADC_HTR_HT);
 969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register LTR2 and HTR2*/
 971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->LTR2, ADC_LTR_LT);
 972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR2, ADC_HTR_HT);
 973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register LTR3 and HTR3 */
 975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->LTR3, ADC_LTR_LT);
 976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR3, ADC_HTR_HT);
 977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SQR1 */
 981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 |
 982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SQR2 */
 985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 |
 986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SQR3 */
 989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 |
 990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SQR4 */
 993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
 994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Register JSQR was reset when the ADC was disabled */
 996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register DR */
 998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
ARM GAS  /tmp/cc6JDs4t.s 			page 19


 999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR1 */
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_SSATE | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
1002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR2 */
1003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_SSATE | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
1004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR3 */
1005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_SSATE | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
1006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR4 */
1007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_SSATE | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
1008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset registers JDR1, JDR2, JDR3, JDR4 */
1010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
1011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register AWD2CR */
1013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
1014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register AWD3CR */
1016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
1017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
1019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->Instance == ADC3)
1020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register DIFSEL */
1022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->LTR2_DIFSEL, ADC_DIFSEL_DIFSEL);
1023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register CALFACT */
1025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR2_CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
1026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Reset register DIFSEL */
1030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->DIFSEL_RES12, ADC_DIFSEL_DIFSEL);
1031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Reset register CALFACT */
1033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CALFACT_RES13, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
1034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
1036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register DIFSEL */
1037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
1038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register CALFACT */
1040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
1041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
1042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Reset common ADC registers ========== */
1044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Software is allowed to change common parameters only when all the other
1046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ADCs are disabled.   */
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
1048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Reset configuration of ADC common register CCR:
1050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       - clock mode: CKMODE, PRESCEN
1051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       - multimode related parameters(when this feature is available): DELAY, DUAL
1052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (set into  HAL_ADCEx_MultiModeConfigChannel() API)
1053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       - internal measurement paths: Vbat, temperature sensor, Vref (set into
1054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
1055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     */
ARM GAS  /tmp/cc6JDs4t.s 			page 20


1056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     ADC_CLEAR_COMMON_CONTROL_REGISTER(hadc);
1057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* ========== Hard reset ADC peripheral ========== */
1059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Performs a global reset of the entire ADC peripherals instances        */
1060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* sharing the same common ADC instance: ADC state is forced to           */
1061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* a similar state as after device power-on.                              */
1062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note: A possible implementation is to add RCC bus reset of ADC         */
1063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* (for example, using macro                                              */
1064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  __HAL_RCC_ADC..._FORCE_RESET()/..._RELEASE_RESET()/..._CLK_DISABLE()) */
1065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* in function "void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)":         */
1066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->MspDeInitCallback == NULL)
1069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
1071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* DeInit the low level hardware: RCC clock, NVIC */
1074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->MspDeInitCallback(hadc);
1075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
1076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* DeInit the low level hardware: RCC clock, NVIC */
1077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
1078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Set ADC error code to none */
1083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
1084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset injected channel configuration parameters */
1086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->InjectionConfig.ContextQueue = 0;
1087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
1088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Set ADC state */
1090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
1091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
1093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
1097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
1101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
1102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
1103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
1105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
  30              		.loc 1 1105 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
1106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
ARM GAS  /tmp/cc6JDs4t.s 			page 21


  35              		.loc 1 1107 3 view .LVU1
1108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
1111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    */
1112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
  36              		.loc 1 1112 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE333:
  41 0002 00BF     		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
  42              		.align	1
  43              		.p2align 2,,3
  44              		.weak	HAL_ADC_MspDeInit
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  48              		.fpu fpv5-d16
  50              	HAL_ADC_MspDeInit:
  51              	.LFB361:
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56 0000 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE361:
  60 0002 00BF     		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
  61              		.align	1
  62              		.p2align 2,,3
  63              		.global	HAL_ADC_PollForConversion
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv5-d16
  69              	HAL_ADC_PollForConversion:
  70              	.LVL1:
  71              	.LFB337:
1113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
1116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
1117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
1118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         the core clock reset all ADC instances).
1119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
1120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
1122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
1125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
1128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    */
1129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/cc6JDs4t.s 			page 22


1132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Register a User ADC Callback
1134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
1135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *                the configuration information for the specified ADC.
1137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
1138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         This parameter can be one of the following values:
1139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
1151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
1152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
1154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (pCallback == NULL)
1158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update the error code */
1160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     return HAL_ERROR;
1163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (CallbackID)
1168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
1171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
1175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
1179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
1183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
1187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 23


1189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = pCallback;
1191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
1195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
1199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
1203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default :
1214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update the error code */
1215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Return error status */
1218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         status = HAL_ERROR;
1219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (CallbackID)
1225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default :
1235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update the error code */
1236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Return error status */
1239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         status = HAL_ERROR;
1240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update the error code */
ARM GAS  /tmp/cc6JDs4t.s 			page 24


1246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Return error status */
1249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     status =  HAL_ERROR;
1250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return status;
1253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *                the configuration information for the specified ADC.
1260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         This parameter can be one of the following values:
1262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
1274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (CallbackID)
1282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
1301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 25


1303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;
1305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default :
1328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update the error code */
1329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Return error status */
1332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         status =  HAL_ERROR;
1333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (CallbackID)
1339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default :
1349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update the error code */
1350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Return error status */
1353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         status =  HAL_ERROR;
1354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update the error code */
ARM GAS  /tmp/cc6JDs4t.s 			page 26


1360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Return error status */
1363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     status =  HAL_ERROR;
1364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return status;
1367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
1373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief    ADC IO operation functions
1377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
1378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @verbatim
1379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
1380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                       ##### IO operation functions #####
1381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
1382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Start conversion of regular group.
1384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Stop conversion of regular group.
1385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Poll for conversion event.
1387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Handle ADC interrupt request
1391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @endverbatim
1394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
1395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           if ADC is Slave, ADC is enabled but conversion is not started,
1402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           if ADC is master, ADC is enabled and multimode conversion is started.
1403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
1404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
1405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
ARM GAS  /tmp/cc6JDs4t.s 			page 27


1417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Process locked */
1419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_LOCK(hadc);
1420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Enable the ADC peripheral */
1422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state                                                        */
1428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
1440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC error code */
1445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Reset all ADC error code fields */
1454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
1462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* trigger event.                                                       */
1470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
ARM GAS  /tmp/cc6JDs4t.s 			page 28


1474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
1479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
1485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Start ADC group regular conversion */
1487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
1488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
1494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            HAL_ADC_STATE_INJ_BUSY bit and in resetting HAL_ADC_STATE_INJ_EOC bit */
1495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
1497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
1500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
1504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
1506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
1516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
1525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
1526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 29


1531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process locked */
1535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_LOCK(hadc);
1536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
1557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
1561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
1578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
1580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
  72              		.loc 1 1582 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
1583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
ARM GAS  /tmp/cc6JDs4t.s 			page 30


  76              		.loc 1 1583 3 view .LVU4
1584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_Flag_End;
  77              		.loc 1 1584 3 view .LVU5
1585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_cfgr;
  78              		.loc 1 1585 3 view .LVU6
1586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
  79              		.loc 1 1586 3 view .LVU7
1587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
  80              		.loc 1 1587 3 view .LVU8
  81              		.loc 1 1587 55 is_stmt 0 view .LVU9
  82 0000 404A     		ldr	r2, .L44
  83 0002 0368     		ldr	r3, [r0]
  84              		.loc 1 1587 35 view .LVU10
  85 0004 9342     		cmp	r3, r2
1582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
  86              		.loc 1 1582 1 view .LVU11
  87 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  88              	.LCFI0:
  89              		.cfi_def_cfa_offset 24
  90              		.cfi_offset 4, -24
  91              		.cfi_offset 5, -20
  92              		.cfi_offset 6, -16
  93              		.cfi_offset 7, -12
  94              		.cfi_offset 8, -8
  95              		.cfi_offset 14, -4
1582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
  96              		.loc 1 1582 1 view .LVU12
  97 000a 0646     		mov	r6, r0
  98 000c 0D46     		mov	r5, r1
  99              		.loc 1 1587 35 view .LVU13
 100 000e 44D0     		beq	.L28
 101              		.loc 1 1587 55 view .LVU14
 102 0010 02F58072 		add	r2, r2, #256
 103              		.loc 1 1587 35 view .LVU15
 104 0014 9342     		cmp	r3, r2
 105 0016 40D0     		beq	.L28
 106 0018 3B4A     		ldr	r2, .L44+4
 107              	.L5:
 108              	.LVL2:
 109              	.LBB280:
 110              	.LBI280:
 111              		.file 2 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h"
   1:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
   2:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ******************************************************************************
   3:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @file    stm32h7xx_ll_adc.h
   4:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @author  MCD Application Team
   5:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ******************************************************************************
   7:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @attention
   8:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
   9:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * All rights reserved.</center></h2>
  11:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
  12:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * the "License"; You may not use this file except in compliance with the
  14:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * License. You may obtain a copy of the License at:
  15:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                        opensource.org/licenses/BSD-3-Clause
ARM GAS  /tmp/cc6JDs4t.s 			page 31


  16:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
  17:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ******************************************************************************
  18:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
  19:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  20:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #ifndef STM32H7xx_LL_ADC_H
  22:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define STM32H7xx_LL_ADC_H
  23:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  24:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #ifdef __cplusplus
  25:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** extern "C" {
  26:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
  27:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  28:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  29:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #include "stm32h7xx.h"
  30:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  31:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @addtogroup STM32H7xx_LL_Driver
  32:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
  33:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
  34:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  35:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3)
  36:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  37:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  38:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
  39:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
  40:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  41:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  42:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  43:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  44:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  45:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  46:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
  47:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
  48:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  49:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC calibration:                                         */
  50:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC calibration factors configuration */
  51:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  52:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literals LL_ADC_CALIB_OFFSET, LL_ADC_CALIB_LINEARITY, ...   */
  53:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* the relevant bits for:                                                     */
  54:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
  55:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - ADC calibration configuration: configuration before calibration start    */
  56:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - ADC calibration factors: register offset                                 */
  57:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_FACTOR_OFFSET_REGOFFSET    (0x00000000UL) /* Register CALFACT defined as referenc
  58:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_FACTOR_LINEARITY_REGOFFSET (0x00000001UL) /* Register CALFACT2 offset vs register
  59:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_FACTOR_REGOFFSET_MASK      (ADC_CALIB_FACTOR_OFFSET_REGOFFSET | ADC_CALIB_FACTOR_
  60:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_MODE_MASK                  (ADC_CR_ADCALLIN)
  61:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_MODE_BINARY_MASK           (ADC_CALIB_FACTOR_REGOFFSET_MASK) /* Mask to get binar
  62:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  63:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  64:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  65:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  66:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - sequencer register offset                                                */
  67:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  68:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  69:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  70:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  71:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  72:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
ARM GAS  /tmp/cc6JDs4t.s 			page 32


  73:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  74:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  75:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  76:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET | ADC_SQR3_REGO
  77:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  78:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  79:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  80:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  81:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  82:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR1_SQ1" po
  83:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR1_SQ2" po
  84:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR1_SQ3" po
  85:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR1_SQ4" po
  86:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_SQR2_SQ5" po
  87:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR2_SQ6" po
  88:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR2_SQ7" po
  89:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR2_SQ8" po
  90:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR2_SQ9" po
  91:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR3_SQ10" p
  92:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR3_SQ11" p
  93:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (12UL) /* Value equivalent to bitfield "ADC_SQR3_SQ12" p
  94:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (18UL) /* Value equivalent to bitfield "ADC_SQR3_SQ13" p
  95:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (24UL) /* Value equivalent to bitfield "ADC_SQR3_SQ14" p
  96:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR4_SQ15" p
  97:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR4_SQ16" p
  98:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  99:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 100:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 101:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
 102:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
 103:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - data register offset                                                     */
 104:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
 105:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 106:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
 107:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 108:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
 109:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
 110:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
 111:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
 112:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 113:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET | ADC_JDR3_REGO
 114:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 115:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 116:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 117:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 118:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 119:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ1_Pos)
 120:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ2_Pos)
 121:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ3_Pos)
 122:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ4_Pos)
 123:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 124:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 125:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 126:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 127:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 128:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - regular trigger source                                                   */
 129:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - regular trigger edge                                                     */
ARM GAS  /tmp/cc6JDs4t.s 			page 33


 130:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 131:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 132:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 133:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 134:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 135:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 136:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 137:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 138:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 139:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 140:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 141:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 142:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 143:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 144:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 145:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 146:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 147:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 148:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 149:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_CFGR_EXTSEL"
 150:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CFGR_EXTEN" 
 151:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 152:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 153:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 154:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 155:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 156:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - injected trigger source                                                  */
 157:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - injected trigger edge                                                    */
 158:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 159:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 160:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 161:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 162:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 163:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL) << (4U 
 164:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 165:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 166:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 167:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 168:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 169:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 170:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 171:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 172:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 173:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 174:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 175:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 176:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 177:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  ( 2UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTSEL
 178:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   ( 6UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTEN"
 179:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 180:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 181:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 182:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 183:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 184:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 185:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 186:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
ARM GAS  /tmp/cc6JDs4t.s 			page 34


 187:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 188:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 189:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 190:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 191:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 192:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 193:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 194:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 195:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Value equivalent to bitfield "ADC_CHANNEL_ID_N
 196:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 197:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 198:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 199:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 200:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 201:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 202:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
 203:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 204:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 205:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 206:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 207:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 208:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 209:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 210:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 211:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 212:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 213:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 214:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 215:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* channels literals definition.                                              */
 216:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 217:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
 218:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                       
 219:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                       
 220:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                        ADC_CFGR_AWD1CH
 221:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                        ADC_CFGR_AWD1CH
 222:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                        ADC_CFGR_AWD1CH
 223:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                        ADC_CFGR_AWD1CH
 224:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 225:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 226:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 227:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 228:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 229:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 230:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 231:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 232:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 233:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 234:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 235:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_19_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 236:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 237:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 238:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* channels literals definition.                                              */
 239:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 240:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 241:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 242:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 243:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
ARM GAS  /tmp/cc6JDs4t.s 			page 35


 244:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 245:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 246:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 247:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 248:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 249:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 250:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 251:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 252:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 253:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 254:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 255:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 256:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 257:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 258:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_19_BITFIELD            (ADC_AWD2CR_AWD2CH_19)
 259:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 260:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 261:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* channels literals definition.                                              */
 262:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 263:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 264:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 265:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 266:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 267:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 268:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 269:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 270:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 271:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 272:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 273:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 274:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 275:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 276:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 277:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 278:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 279:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 280:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 281:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_19_SMP                 (ADC_SMPR2_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 282:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 283:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 284:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 285:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 286:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* the relevant bits for:                                                     */
 287:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 288:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 289:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 291:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 292:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 293:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 294:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 295:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 296:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 297:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 298:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 299:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 300:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
ARM GAS  /tmp/cc6JDs4t.s 			page 36


 301:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 302:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 303:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 304:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 305:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*   selection on groups.                                                     */
 306:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 307:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 308:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 309:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 310:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 311:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 312:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 313:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 314:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 315:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 316:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 317:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 318:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 319:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 320:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 321:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 322:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 323:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 324:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 325:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 326:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 327:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 328:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 329:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 330:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 331:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 332:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 333:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 334:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 335:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
 336:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 337:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 thresholds registers */
 338:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (Set separately as ADC_AWD_TRX_REGOFFSET to spare 32 bits space */
 339:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 340:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR12_REGOFFSETGAP_VAL      (0x00000022UL)
 341:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 342:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Legacy literals */
 343:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD1_TR                      LL_ADC_AWD1
 344:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD2_TR                      LL_ADC_AWD2
 345:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD3_TR                      LL_ADC_AWD3
 346:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 347:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 348:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 349:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 350:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 351:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 352:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 353:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET | ADC_OFR3_REGO
 354:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 355:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 356:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* ADC registers bits positions */
 357:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         (ADC_CFGR_RES_Pos)
ARM GAS  /tmp/cc6JDs4t.s 			page 37


 358:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (ADC_CFGR_AWD1SGL_Pos)
 359:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (ADC_CFGR_AWD1EN_Pos)
 360:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (ADC_CFGR_JAWD1EN_Pos)
 361:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 362:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS_ADC3    (ADC3_CFGR_RES_Pos)
 363:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 364:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 365:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 366:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* ADC registers bits groups */
 367:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 368:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 369:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 370:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* ADC internal channels related definitions */
 371:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 372:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_3)
 373:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x8fff810UL))  /* Internal voltage referen
 374:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                         /* Address related to STM32
 375:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* ADC_VER_V5_90 || ADC_VER_V5_X */
 376:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FF1E860UL)) /* Internal voltage referen
 377:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_3 */
 378:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3300UL)                     /* Analog voltage reference
 379:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Temperature sensor */
 380:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_3)
 381:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x8fff814UL))  /* Internal temperature sen
 382:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x8fff818UL))  /* Internal temperature sen
 383:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                         /* Addresses related to STM
 384:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* ADC_VER_V5_90 || ADC_VER_V5_X */
 385:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FF1E820UL)) /* Internal temperature sen
 386:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FF1E840UL)) /* Internal temperature sen
 387:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_3 */
 388:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 389:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30L)                        /* Internal temperature sen
 390:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Internal temperature sen
 391:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3300UL)                     /* Analog voltage reference
 392:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 393:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Registers addresses with ADC linearity calibration content (programmed during device production,
 394:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_1_ADDR ((uint32_t*) (0x1FF1EC00UL))
 395:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_2_ADDR ((uint32_t*) (0x1FF1EC04UL))
 396:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_3_ADDR ((uint32_t*) (0x1FF1EC08UL))
 397:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_4_ADDR ((uint32_t*) (0x1FF1EC0CUL))
 398:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_5_ADDR ((uint32_t*) (0x1FF1EC10UL))
 399:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_6_ADDR ((uint32_t*) (0x1FF1EC14UL))
 400:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_COUNT  (6UL)
 401:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 402:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 403:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 404:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 405:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 406:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 407:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 408:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 409:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 410:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 411:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 412:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 413:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a register from a register basis from which an offset
 414:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is applied.
ARM GAS  /tmp/cc6JDs4t.s 			page 38


 415:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 417:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Pointer to register address
 418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 419:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 420:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****  ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 421:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 422:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 423:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 424:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 425:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 426:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 427:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 428:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 429:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 430:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 431:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 432:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 433:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 434:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 435:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and multimode
 436:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 437:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 438:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 439:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sharing the same ADC common instance):
 440:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 441:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         disabled.
 442:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 443:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** typedef struct
 444:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 445:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 446:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 447:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 448:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 449:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 450:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 451:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 452:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 453:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 454:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 455:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 456:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 457:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 458:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC dual ADC mode DMA transfer data format: Each D
 459:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 460:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 461:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 462:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 463:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 464:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 465:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 466:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 467:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 468:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 469:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 470:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 471:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
ARM GAS  /tmp/cc6JDs4t.s 			page 39


 472:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 473:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 474:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 475:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 476:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 477:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 478:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is conditioned to ADC state:
 479:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance must be disabled.
 480:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 481:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 482:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 483:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 484:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 485:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 486:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 487:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         refer to description of each function for setting
 488:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         conditioned to ADC state.
 489:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 490:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** typedef struct
 491:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 492:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 493:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 494:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 495:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 496:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 497:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t LeftBitShift;                /*!< Configures the left shifting applied to the final resu
 498:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LEFT_B
 499:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 500:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 501:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 502:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 503:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 504:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 505:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 506:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 507:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 508:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 509:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 510:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 511:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 512:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (functions with prefix "REG").
 513:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 514:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is conditioned to ADC state:
 515:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance must be disabled.
 516:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 517:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 518:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 519:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 520:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 521:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 522:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 523:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         refer to description of each function for setting
 524:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         conditioned to ADC state.
 525:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 526:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** typedef struct
 527:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 528:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
ARM GAS  /tmp/cc6JDs4t.s 			page 40


 529:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 530:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 531:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 532:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 533:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 534:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 535:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 536:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 537:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 538:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 539:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 540:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 541:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 542:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 543:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 544:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 545:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 546:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 547:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 548:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 549:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 550:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 551:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 552:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 553:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 554:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t DataTransferMode;            /*!< Set ADC group regular conversion data transfer mode: n
 555:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DA
 556:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 557:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 558:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 559:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 560:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              data preserved or overwritten.
 561:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 562:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 563:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 564:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 565:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 566:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 567:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 568:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 569:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 570:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 571:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 572:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (functions with prefix "INJ").
 573:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 574:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is conditioned to ADC state:
 575:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance must be disabled.
 576:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 577:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 578:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 579:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 580:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 581:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 582:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 583:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         refer to description of each function for setting
 584:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         conditioned to ADC state.
 585:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  /tmp/cc6JDs4t.s 			page 41


 586:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** typedef struct
 587:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 588:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 589:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 590:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 591:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 592:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 593:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 594:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 595:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 596:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 597:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 598:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 599:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 600:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 601:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 602:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 603:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 604:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 605:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 606:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 607:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 608:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 609:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 610:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 611:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 612:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 613:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 614:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 615:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 616:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 617:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 618:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 619:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 620:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 621:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 622:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 623:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 624:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 625:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 626:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 627:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 628:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 629:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 630:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 631:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 632:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 633:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 634:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 635:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 636:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 637:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 638:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 639:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 640:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 641:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 642:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
ARM GAS  /tmp/cc6JDs4t.s 			page 42


 643:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 644:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 645:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 646:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 648:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 649:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 650:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 651:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 652:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 654:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 655:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 657:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 658:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 660:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 661:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 662:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 663:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 664:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 665:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 666:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 667:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 668:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 669:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 670:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 671:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 672:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 673:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 674:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 675:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 676:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 677:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 678:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 679:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 680:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 681:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 682:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 683:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 684:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 685:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 686:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 687:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 688:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 689:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 690:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* DMA transfer.                                                              */
 691:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 692:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 693:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    (0x00000001UL) /* ADC group regular conversion data re
 694:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 695:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 696:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 697:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 698:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 699:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
ARM GAS  /tmp/cc6JDs4t.s 			page 43


 700:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 701:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 702:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 703:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 704:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 705:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 706:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 707:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 708:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 709:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 710:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 711:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 712:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 713:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 714:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 715:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 718:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 719:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 720:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 721:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 722:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 723:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 724:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 725:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 726:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 727:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 728:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 729:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 730:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 731:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 732:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 733:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 734:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 735:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 736:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_BOOST_MODE ADC instance - Boost mode
 737:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 739:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_6MHZ25   (0x00000000UL)                                            /*!< B
 740:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_12MHZ5   (                                        ADC_CR_BOOST_0)  /*!< B
 741:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_20MHZ    (                       ADC_CR_BOOST_1                 )  /*!< B
 742:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_25MHZ    ((ADC_CR_BOOST_0 <<2) | ADC_CR_BOOST_1                 )  /*!< B
 743:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_50MHZ    ((ADC_CR_BOOST_0 <<2) | ADC_CR_BOOST_1 | ADC_CR_BOOST_0)  /*!< B
 744:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 745:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 746:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 747:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 748:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CALIBRATION_OFFSET_LINEARITY  ADC instance - Calibration mode for offset an
 749:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 750:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 751:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_OFFSET                (ADC_CALIB_FACTOR_OFFSET_REGOFFSET)                     
 752:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY             (ADC_CALIB_FACTOR_LINEARITY_REGOFFSET)                  
 753:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_OFFSET_LINEARITY      (ADC_CALIB_FACTOR_LINEARITY_REGOFFSET | ADC_CR_ADCALLIN)
 754:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 755:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  /tmp/cc6JDs4t.s 			page 44


 757:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CALIBRATION_LINEARITY_WORD  ADC instance - Calibration linearity words
 759:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 760:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 761:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD1       (ADC_CR_LINCALRDYW1)    /*!< ADC calibration linearity w
 762:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD2       (ADC_CR_LINCALRDYW2)    /*!< ADC calibration linearity w
 763:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD3       (ADC_CR_LINCALRDYW3)    /*!< ADC calibration linearity w
 764:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD4       (ADC_CR_LINCALRDYW4)    /*!< ADC calibration linearity w
 765:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD5       (ADC_CR_LINCALRDYW5)    /*!< ADC calibration linearity w
 766:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD6       (ADC_CR_LINCALRDYW6)    /*!< ADC calibration linearity w
 767:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 768:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 770:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 771:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 772:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 773:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 774:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_16B              (0x00000000UL)                                      /*!<
 775:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_14B              (                                  ADC_CFGR_RES_0)  /*!<
 776:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (                 ADC_CFGR_RES_1                 )  /*!<
 777:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_1 | ADC_CFGR_RES_0)  /*!<
 778:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 779:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (ADC_VER_V5_X)
 780:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_14B_OPT          (ADC_CFGR_RES_2 |                  ADC_CFGR_RES_0)  /*!<
 781:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B_OPT          (ADC_CFGR_RES_2 | ADC_CFGR_RES_1                 )  /*!<
 782:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 783:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 784:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (ADC_VER_V5_3) || defined(ADC_VER_V5_V90)
 785:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_2|ADC_CFGR_RES_1 | ADC_CFGR_RES_0) /*!< AD
 786:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 787:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_2                                ) /*!< AD
 788:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                             /*!< Th
 789:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                                    
 790:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                                    
 791:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 792:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 793:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC3_CFGR_RES_1 | ADC3_CFGR_RES_0)   /*!< ADC resolutio
 794:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
 795:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 796:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 797:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 798:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 799:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 800:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 801:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 802:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 804:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC3_CFGR_ALIGN)       /*!< ADC conversion data alignme
 805:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 806:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 807:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 808:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 809:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
 810:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 811:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LEFT_BIT_SHIFT   ADC left Shift
 812:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 813:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  /tmp/cc6JDs4t.s 			page 45


 814:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_NONE  (0x00000000UL)                                                 
 815:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_1     (ADC_CFGR2_LSHIFT_0)                                           
 816:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_2     (ADC_CFGR2_LSHIFT_1)                                           
 817:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_3     (ADC_CFGR2_LSHIFT_1 | ADC_CFGR2_LSHIFT_0)                      
 818:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_4     (ADC_CFGR2_LSHIFT_2)                                           
 819:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_5     (ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_0)                      
 820:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_6     (ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_1)                      
 821:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_7     (ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_1 | ADC_CFGR2_LSHIFT_0) 
 822:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_8     (ADC_CFGR2_LSHIFT_3)                                           
 823:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_9     (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_0)                      
 824:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_10    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_1)                      
 825:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_11    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_1 | ADC_CFGR2_LSHIFT_0) 
 826:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_12    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_2)                      
 827:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_13    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_0) 
 828:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_14    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_1) 
 829:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_15    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_1 |
 830:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 831:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 832:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 833:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 834:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 835:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 836:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 837:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 838:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 839:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 840:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 841:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 842:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 843:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 844:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 845:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 846:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 847:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 848:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 849:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 850:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 851:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 852:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 853:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 854:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SIGNED_SATURATION ADC instance - Offset signed saturation mode
 855:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 856:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 857:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE   (0x00000000UL)   /*!< ADC offset signed saturatio
 858:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE    (ADC_OFR1_SSATE) /*!< ADC offset signed saturatio
 859:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 860:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 861:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 862:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 863:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_RSHIFT ADC instance - Offset right shift
 864:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 865:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 866:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_RSHIFT_DISABLE   (0x00000000UL)      /*!< ADC offset right shift is disabled 
 867:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_RSHIFT_ENABLE    (ADC_CFGR2_RSHIFT1) /*!< ADC offset right shift is enabled (
 868:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 869:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 870:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  /tmp/cc6JDs4t.s 			page 46


 871:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 872:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SATURATION ADC instance - Offset saturation mode
 873:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 874:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 875:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_DISABLE   (0x00000000UL)           /*!< ADC offset saturation is d
 876:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_ENABLE    (ADC3_OFR1_SATEN)        /*!< ADC offset saturation is e
 877:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 878:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 879:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 880:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 881:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 882:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 883:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 884:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 885:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC3_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among A
 886:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 887:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 889:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SIGN ADC instance - Offset sign
 891:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 892:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 893:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_NEGATIVE        (0x00000000UL)        /*!< ADC offset is negative (among
 894:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_POSITIVE        (ADC3_OFR1_OFFSETPOS) /*!< ADC offset is positive (among
 895:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 896:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 897:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 898:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 899:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 900:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 901:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 902:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 903:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 904:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 905:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 906:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 907:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 908:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 909:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 910:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 911:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 912:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 913:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 914:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 915:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 916:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 917:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 918:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 919:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 920:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 921:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 922:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 923:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 924:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 925:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 926:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 927:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
ARM GAS  /tmp/cc6JDs4t.s 			page 47


 928:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 929:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 930:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 931:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 932:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 933:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 934:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_19                  (ADC_CHANNEL_19_NUMBER | ADC_CHANNEL_19_SMP | ADC_CHANNE
 935:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC3)
 936:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 937:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 938:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 939:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 940:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 941:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_19 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 942:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 943:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 944:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 945:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 946:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*!< Specific define for STM32H7A3xx and STM32HB3xx varieties of STM32H7XXX */
 947:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_19 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 948:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 949:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 950:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 951:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC2        (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 952:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC2        (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 953:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(DAC2)
 954:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*!< Specific define for STM32H7A3xx and STM32HB3xx varieties of STM32H7XXX */
 955:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC2CH1_ADC2        (LL_ADC_CHANNEL_15 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 956:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 957:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 958:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 959:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 960:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 961:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 962:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 963:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 964:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE          (0x00000000UL)                                           
 965:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1      (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                          
 966:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2      (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 967:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3      (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 968:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2      (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT
 969:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO     (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 970:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT
 971:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11   (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT
 972:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO     (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_
 973:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2    (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 974:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT
 975:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2    (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT
 976:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_
 977:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT
 978:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 979:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO    (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 980:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 981:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG1    (ADC_CFGR_EXTSEL_4 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 982:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG3    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT
 983:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM1_OUT    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT
 984:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM2_OUT    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_
ARM GAS  /tmp/cc6JDs4t.s 			page 48


 985:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM3_OUT    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT
 986:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (TIM23)
 987:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM23_TRGO    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 988:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* TIM23 */
 989:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (TIM24)
 990:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM24_TRGO    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 991:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* TIM24 */
 992:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 993:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 994:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 995:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 996:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 997:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 998:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 999:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
1000:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
1001:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
1002:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1003:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1004:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1005:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1006:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****  /** @defgroup ADC_LL_EC_REG_SAMPLING_MODE  ADC group regular - Sampling mode
1007:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1008:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1009:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_NORMAL               (0x00000000UL)        /*!< ADC conversions sa
1010:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_BULB                 (ADC3_CFGR2_BULB)     /*!< ADC conversions sa
1011:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                  Note: First conver
1012:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED    (ADC3_CFGR2_SMPTRIG)  /*!< ADC conversions sa
1013:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                  Trigger rising edg
1014:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                  Trigger falling ed
1015:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1016:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1017:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */ 
1018:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
1019:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1020:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
1021:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @{
1022:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
1023:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
1024:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
1025:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1026:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1027:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1028:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1029:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DATA_TRANSFER_MODE  ADC group regular - Data transfer mode of ADC conve
1030:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1031:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1032:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_DR_TRANSFER             (0x00000000UL)                        /*!< ADC conversio
1033:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                   ADC_CFGR_DMNGT_0) /*!< ADC conversio
1034:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMNGT_1 | ADC_CFGR_DMNGT_0) /*!< ADC conversio
1035:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER          (ADC_CFGR_DMNGT_1                   ) /*!< ADC conversio
1036:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1037:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1038:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1039:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1040:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1041:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
ARM GAS  /tmp/cc6JDs4t.s 			page 49


1042:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1043:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1044:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1045:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC3_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversi
1046:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC3_REG_DMA_TRANSFER_LIMITED    (                  ADC3_CFGR_DMAEN)    /*!< ADC convers
1047:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC3_REG_DMA_TRANSFER_UNLIMITED  (ADC3_CFGR_DMACFG | ADC3_CFGR_DMAEN)    /*!< ADC conver
1048:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1049:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1050:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1051:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
1052:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1053:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
1054:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @{
1055:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
1056:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
1057:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
1058:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1059:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1060:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1061:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1062:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
1063:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1064:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1065:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
1066:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
1067:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
1068:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
1069:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
1070:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
1071:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
1072:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1073:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
1074:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
1075:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
1076:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
1077:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
1078:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
1079:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
1080:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1081:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1082:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1083:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1084:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
1086:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1087:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1088:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
1089:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
1090:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
1091:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
1092:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1093:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
1094:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
1095:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
1096:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1097:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1098:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cc6JDs4t.s 			page 50


1099:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1100:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1101:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
1102:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1103:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1104:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
1105:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
1106:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
1107:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
1108:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
1109:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
1110:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
1111:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
1112:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
1113:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
1114:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
1115:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
1116:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
1117:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
1118:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
1119:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
1120:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1121:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1122:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1123:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1124:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
1125:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1126:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1127:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
1128:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
1129:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1130:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1131:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1132:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1133:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1134:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1135:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1136:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1137:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1138:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1139:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1140:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
1141:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1142:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1143:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1144:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2     (ADC_JSQR_JEXTSEL_4 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1145:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1146:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM1_OUT     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1147:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM2_OUT     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1148:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM3_OUT     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
1149:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM23_TRGO     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1150:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM24_TRGO     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1151:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1152:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1153:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1154:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1155:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
ARM GAS  /tmp/cc6JDs4t.s 			page 51


1156:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1157:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1158:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
1159:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
1160:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
1161:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1162:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1163:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1164:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1165:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
1166:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @{
1167:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
1168:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
1169:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
1170:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1171:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1172:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1173:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1174:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
1175:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1176:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1177:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
1178:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
1179:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
1180:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1181:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1182:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1183:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1184:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1185:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1186:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1187:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1188:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1189:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1190:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1191:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1192:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1193:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1194:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1195:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1196:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1197:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1198:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1199:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1200:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1201:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1202:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1203:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1204:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1205:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1206:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1207:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1208:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1209:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1210:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1211:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1212:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cc6JDs4t.s 			page 52


1213:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1214:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1215:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1216:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1217:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1218:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)                                          
1219:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (                                        ADC_SMPR2_SMP10
1220:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_8CYCLES_5      (                    ADC_SMPR2_SMP10_1                  
1221:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_16CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1222:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_32CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1223:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_64CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1224:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_387CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1225:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_810CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1226:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1227:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1228:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1229:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1230:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1231:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1232:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1233:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_2CYCLES_5      (0x00000000UL)                                     
1234:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_6CYCLES_5      (                                        ADC_SMPR2_
1235:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_12CYCLES_5     (                    ADC_SMPR2_SMP10_1             
1236:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_
1237:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_47CYCLES_5     (ADC_SMPR2_SMP10_2                                 
1238:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_
1239:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1             
1240:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_
1241:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1242:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1243:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1244:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
1245:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1246:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1247:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1248:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1249:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1250:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1251:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1252:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1253:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1254:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1255:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1256:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1257:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1258:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1259:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1260:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1261:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1262:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1263:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1264:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1265:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1266:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1267:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1268:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1269:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
ARM GAS  /tmp/cc6JDs4t.s 			page 53


1270:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1271:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1272:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1273:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1274:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1275:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1276:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1277:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1278:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1279:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1280:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1281:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1282:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1283:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1284:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1285:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1286:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1287:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1288:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1289:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1291:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1292:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1293:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1294:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1295:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1296:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1297:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1298:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1299:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1300:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1301:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1302:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1303:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1304:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1305:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1306:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1307:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1308:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1309:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1310:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1311:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1312:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1313:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1314:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1315:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1316:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1317:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1318:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1319:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1320:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1321:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1322:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1323:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1324:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1325:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1326:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
ARM GAS  /tmp/cc6JDs4t.s 			page 54


1327:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1328:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1329:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1330:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_REG          ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK)              
1331:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_INJ          ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1332:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_REG_INJ      ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1333:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1334:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1335:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1336:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK)   
1337:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1338:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1339:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1340:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1341:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1342:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK)   
1343:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1344:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1345:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK)   
1346:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1347:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1348:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1349:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1350:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1351:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1352:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1353:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1354:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1355:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (0x1UL)                     /*!< ADC analog watchdog thr
1356:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (0x0UL)                     /*!< ADC analog watchdog thr
1357:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1358:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1359:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1360:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1361:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_FILTERING_CONFIG  Analog watchdog - filtering config
1362:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1363:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1364:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_NONE          (0x00000000UL)                                          
1365:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_2SAMPLES      (                                          ADC3_TR1_AWDF
1366:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_3SAMPLES      (                     ADC3_TR1_AWDFILT_1                
1367:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_4SAMPLES      (                     ADC3_TR1_AWDFILT_1 | ADC3_TR1_AWDF
1368:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_5SAMPLES      (ADC3_TR1_AWDFILT_2                                     
1369:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_6SAMPLES      (ADC3_TR1_AWDFILT_2 |                      ADC3_TR1_AWDF
1370:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_7SAMPLES      (ADC3_TR1_AWDFILT_2 | ADC3_TR1_AWDFILT_1                
1371:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_8SAMPLES      (ADC3_TR1_AWDFILT_2 | ADC3_TR1_AWDFILT_1 | ADC3_TR1_AWDF
1372:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1373:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1374:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1375:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
1376:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1377:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1378:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1379:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1380:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1381:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1382:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1383:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
ARM GAS  /tmp/cc6JDs4t.s 			page 55


1384:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1385:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1386:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1387:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1388:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1389:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1390:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1391:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1392:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1393:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1394:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1395:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1396:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1397:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1398:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1399:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1400:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1401:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1402:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                        ADC3_CFGR2_OVSR
1403:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                    ADC3_CFGR2_OVSR_1                  
1404:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                    ADC3_CFGR2_OVSR_1 | ADC3_CFGR2_OVSR
1405:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC3_CFGR2_OVSR_2                                      
1406:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC3_CFGR2_OVSR_2                     | ADC3_CFGR2_OVSR
1407:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC3_CFGR2_OVSR_2 | ADC3_CFGR2_OVSR_1                  
1408:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC3_CFGR2_OVSR_2 | ADC3_CFGR2_OVSR_1 | ADC3_CFGR2_OVSR
1409:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1410:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1411:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1412:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
1413:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1414:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1415:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1417:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1419:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1420:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1421:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1422:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1423:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1424:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1425:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1426:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_9           (ADC_CFGR2_OVSS_3                                       
1427:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_10          (ADC_CFGR2_OVSS_3                    | ADC_CFGR2_OVSS_1 
1428:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_11          (ADC_CFGR2_OVSS_3                    | ADC_CFGR2_OVSS_1 
1429:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1430:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1431:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1432:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1433:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1434:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1435:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1436:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                                          
1437:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1       
1438:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 | ADC_
1439:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (                 ADC_CCR_DUAL_2                  | ADC_
1440:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3                                   | ADC_
ARM GAS  /tmp/cc6JDs4t.s 			page 56


1441:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (                                                   ADC_
1442:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (                                  ADC_CCR_DUAL_1       
1443:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (                                  ADC_CCR_DUAL_1 | ADC_
1444:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1445:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1446:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1447:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1448:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1449:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1450:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1451:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                      /*!< ADC multimode
1452:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_RES_32_10B      (ADC_CCR_DAMDF_1                  ) /*!< ADC multimode
1453:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_RES_8B          (ADC_CCR_DAMDF_1 | ADC_CCR_DAMDF_0) /*!< ADC multimode
1454:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1455:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1456:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1457:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1458:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1459:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1460:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1461:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE_5           (0x00000000UL)                                
1462:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES_5          (                                             
1463:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES_5          (                                    ADC_CCR_D
1464:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5          (                                    ADC_CCR_D
1465:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5_8_BITS   (                  ADC_CCR_DELAY_2 | ADC_CCR_D
1466:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5          (                  ADC_CCR_DELAY_2            
1467:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5_10_BITS  (                  ADC_CCR_DELAY_2 | ADC_CCR_D
1468:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES            (ADC_CCR_DELAY_3                              
1469:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5          (                  ADC_CCR_DELAY_2            
1470:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5_12_BITS  (                  ADC_CCR_DELAY_2 | ADC_CCR_D
1471:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES_5          (                  ADC_CCR_DELAY_2 | ADC_CCR_D
1472:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES            (ADC_CCR_DELAY_3                              
1473:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES            (ADC_CCR_DELAY_3                              
1474:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1475:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1476:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1477:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1478:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1479:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1480:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1481:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                    ADC_CDR_RDATA_MST) /*!< In multimod
1482:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV                    ) /*!< In multimod
1483:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV | ADC_CDR_RDATA_MST) /*!< In multimod
1484:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1485:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1486:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1487:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1488:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1489:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1490:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1491:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1492:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         not timeout values.
1493:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1494:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         above each literal definition.
1495:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1496:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1497:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 57


1498:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1499:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       not timeout values.                                                  */
1500:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1501:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1502:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1503:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1504:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       STM32 series:                                                         */
1505:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 16384/fADC.                   */
1506:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1507:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1508:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1509:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1510:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1511:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         cycles                                                             */
1512:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1513:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         configuration.                                                     */
1514:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1515:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1516:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1517:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1518:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1519:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Unit: us                                                                   */
1520:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 10UL)  /*!< Delay for ADC stabilization time (ADC vol
1521:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1522:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1523:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1524:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* parameter "ts_vrefint").                                                   */
1525:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Unit: us                                                                   */
1526:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US       (5UL)  /*!< Delay for internal voltage reference stabili
1527:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1528:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1529:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1530:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* parameter "tSTART_RUN").                                                   */
1531:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Unit: us                                                                   */
1532:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US    ( 26UL)  /*!< Delay for temperature sensor stabilization
1533:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1534:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1535:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles            */
1536:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1537:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1538:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1539:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1540:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1541:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES (  4UL)  /*!< Delay required between ADC end of calibr
1542:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1543:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Fixed timeout value for ADC linearity word bit set/clear delay.                         */
1544:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Values defined to be higher than worst cases: low clock frequency,                      */
1545:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* maximum prescalers.                                                                     */
1546:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Ex of profile low frequency : f_ADC at 4,577 Khz (minimum value                         */
1547:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* according to Data sheet), linearity set/clear bit delay MAX = 6 / f_ADC + 3 cycles AHB  */
1548:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*           6 / 4577 = 1,311ms                                                            */
1549:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* At maximum CPU speed (400 MHz), this means                                              */
1550:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*    3.58 * 400 MHz = 524400 CPU cycles                                                   */
1551:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEARITY_BIT_TOGGLE_TIMEOUT         (524400UL)      /*!< ADC linearity set/clear bit d
1552:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1553:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1554:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cc6JDs4t.s 			page 58


1555:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1556:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1557:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1558:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1559:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1560:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1561:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1562:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1563:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1564:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1565:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1566:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1567:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1568:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1569:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1570:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1571:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1572:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Write a value in ADC register
1573:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1574:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __REG__ Register to be written
1575:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1576:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
1577:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1578:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1579:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1580:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1581:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Read a value in ADC register
1582:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1583:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __REG__ Register to be read
1584:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Register value
1585:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1586:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1587:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1588:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1589:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1590:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1591:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1592:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1593:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1594:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1595:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1596:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1597:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to convert the resolution defines to STM32H73x/2x ADC3 registers values
1598:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         value corresponding to the ADC3 resolution according to the STM32H73x/2x RefMan.
1599:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The input can be a value from ADC3 resolution (12b, 10b, 8b,6b)
1600:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1601:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1602:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1603:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1604:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1605:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1606:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg 0x00000000UL (value correspodning to ADC3 12 bits)
1607:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg ADC_CFGR_RES_0 = 0x00000004  (value corresponding to ADC3 10 bits)
1608:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg ADC_CFGR_RES_1 = 0x00000008 (value corresponding to ADC3 8 bits)
1609:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg 0x0000001C (value corresponding to ADC3 6 bits)
1610:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This helper macro is applicable for STM32H73x/2x devices only
1611:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  /tmp/cc6JDs4t.s 			page 59


1612:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC12_RESOLUTION_TO_ADC3(__ADC_RESOLUTION__)                      \
1613:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          (                                                                     \
1614:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            ((__ADC_RESOLUTION__) == LL_ADC_RESOLUTION_12B)                     \
1615:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             ?(0x00000000UL)                                                    \
1616:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              :                                                                 \
1617:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ((__ADC_RESOLUTION__) == LL_ADC_RESOLUTION_10B)                   \
1618:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ?(ADC_CFGR_RES_0)                                               \
1619:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                 :                                                              \
1620:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                 ((__ADC_RESOLUTION__) == LL_ADC_RESOLUTION_8B)                 \
1621:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                   ?(ADC_CFGR_RES_1)                                            \
1622:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    :                                                           \
1623:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    ((__ADC_RESOLUTION__) == LL_ADC_RESOLUTION_6B)              \
1624:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                      ?((ADC_CFGR_RES_2|ADC_CFGR_RES_1 | ADC_CFGR_RES_0))       \
1625:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                        :(0x00000000UL)                                         \
1626:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          )
1627:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1628:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
1629:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1630:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1631:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1632:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1633:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Example:
1634:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1635:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           will return decimal number "4".
1636:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1637:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number is returned, either defined with number
1638:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1639:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1640:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1641:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1642:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1643:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1644:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1645:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1646:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1648:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1649:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1650:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1651:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1652:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1654:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1655:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1657:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1658:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1660:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1661:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1662:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1663:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1664:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1665:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1666:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1667:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1668:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
ARM GAS  /tmp/cc6JDs4t.s 			page 60


1669:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
1670:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1671:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1672:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1673:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL)                                 \
1674:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (                                                                                    \
1675:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1676:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                                    \
1677:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                                    \
1678:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       (                                                                                    \
1679:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1680:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                                    \
1681:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
1682:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1683:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1684:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1685:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from number in decimal format.
1686:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Example:
1687:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1688:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1689:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1690:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1691:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1692:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1693:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1694:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1695:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1696:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1697:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1698:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1699:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1700:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1701:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1702:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1703:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1704:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1705:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1706:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1707:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1708:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1709:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1710:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1711:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1712:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1713:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1714:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1715:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1718:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1719:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1720:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
1721:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
1722:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
1723:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1724:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1725:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
ARM GAS  /tmp/cc6JDs4t.s 			page 61


1726:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL)                                                                       
1727:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (                                                                                            
1728:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1729:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1730:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1731:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                                            
1732:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                                            
1733:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       (                                                                                            
1734:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1735:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1736:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1737:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                                            
1738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
1739:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1740:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1741:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1742:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1743:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1744:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC internal channel:
1745:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1746:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1747:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1748:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1749:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1750:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1751:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1752:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1753:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         returned from ADC registers,
1754:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         because internal and external channels share the same channel
1755:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         parameters definitions of driver.
1757:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1759:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1760:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1761:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1762:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1763:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1764:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1765:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1766:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1767:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1768:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1770:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1771:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1772:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1773:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1774:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1775:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1776:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1777:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1778:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1779:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1780:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1781:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1782:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
ARM GAS  /tmp/cc6JDs4t.s 			page 62


1783:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1784:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1785:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1786:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1787:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
1788:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1789:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1790:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1791:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1792:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1793:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1794:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1795:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1796:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1797:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1798:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1799:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1800:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1801:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1802:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a value defined from parameter definition of
1804:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1805:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1806:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from ADC registers.
1807:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1808:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1809:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1810:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1811:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1812:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1813:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1814:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1815:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1816:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1817:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1818:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1819:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1820:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1821:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1822:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1823:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1824:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1825:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1826:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1827:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1828:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1829:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1830:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1831:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1832:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1833:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1834:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1835:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1836:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1837:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
1838:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1839:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
ARM GAS  /tmp/cc6JDs4t.s 			page 63


1840:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1841:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1842:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1843:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1844:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1845:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1846:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1847:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1848:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1849:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1850:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1851:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1852:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1853:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1854:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1855:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1856:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1857:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1858:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1859:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1860:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1861:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1862:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1863:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1864:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1865:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1866:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1867:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1868:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1869:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1870:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1871:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or a value from functions where a channel number is
1872:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         returned from ADC registers,
1873:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         because internal and external channels share the same channel
1874:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1875:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         parameters definitions of driver.
1876:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1877:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1878:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1879:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1880:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1881:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1882:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1883:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1884:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1885:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.
1886:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1887:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1889:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC3)
1890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1891:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC2)                                               \
1892:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     &&(                                                                        \
1893:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                       \
1894:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                          \
1895:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
1896:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                           \
ARM GAS  /tmp/cc6JDs4t.s 			page 64


1897:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    ||                                                                          \
1898:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
1899:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     &&(                                                                        \
1900:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                       \
1901:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                       \
1902:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1903:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
1904:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                           \
1905:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
1906:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
1907:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1908:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC2)                                               \
1909:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     &&(                                                                        \
1910:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                       \
1911:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2) ||                       \
1912:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                       \
1913:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                       \
1914:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1915:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
1916:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                           \
1917:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
1918:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
1919:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1920:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1921:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1922:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1923:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1924:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1925:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example:
1926:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1927:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1928:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1929:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1930:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1931:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1932:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1933:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1934:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1935:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1936:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1937:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1938:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1939:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1940:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1941:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1942:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1943:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1944:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1945:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1946:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1947:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1948:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1949:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1950:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1951:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1952:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1953:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
ARM GAS  /tmp/cc6JDs4t.s 			page 65


1954:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1955:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1956:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1957:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1958:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1959:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
1960:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
1961:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
1962:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1963:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1964:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1965:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
1966:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
1967:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1968:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1969:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1970:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
1971:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
1972:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1973:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
1974:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
1975:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1976:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
1977:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
1978:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1979:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
1980:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
1981:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1982:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
1983:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
1984:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1985:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
1986:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
1987:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1988:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
1989:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
1990:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
1991:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
1992:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
1993:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
1994:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
1995:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
1996:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
1997:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
1998:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
1999:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
2000:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
2001:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
2002:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
2003:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
2004:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
2005:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
2006:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
2007:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
2008:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
2009:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
2010:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
ARM GAS  /tmp/cc6JDs4t.s 			page 66


2011:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
2012:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
2013:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
2014:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
2015:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
2016:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
2017:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
2018:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
2019:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
2020:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
2021:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
2022:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
2023:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
2024:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
2025:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
2026:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
2027:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
2028:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
2029:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
2030:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
2031:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
2032:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
2033:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
2034:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
2035:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(1)
2036:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
2037:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
2038:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(1)
2039:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(1)
2040:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (1)
2041:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)
2042:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)
2043:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)
2044:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)
2045:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)
2046:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)
2047:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
2048:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (0) On STM32H7, parameter available only on analog watchdog number: AWD1.\n
2049:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
2050:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.
2051:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2052:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
2053:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
2054:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                 
2055:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                                            
2056:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                       
2057:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)             
2058:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          :                                                                                         
2059:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD
2060:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2061:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2062:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2063:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
2064:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2065:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         different of 16 bits.
2066:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDThresholds().
2067:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
ARM GAS  /tmp/cc6JDs4t.s 			page 67


2068:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog threshold high (on 18 bits):
2069:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
2070:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            (< ADCx param >,
2071:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_1
2072:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            );
2073:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2074:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2075:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2076:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2077:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2078:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2079:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000000 and Max_Data=0xFFFFFF
2080:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000000 and Max_Data=0xFFFFFF
2081:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2082:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
2083:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2084:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2086:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
2087:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2088:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         different of 16 bits.
2089:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2090:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
2091:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog threshold high (on 18 bits):
2092:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           < threshold_value_18_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
2093:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
2094:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
2095:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            );
2096:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2097:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2098:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2099:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2100:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2101:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2102:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_16_BITS__ Value between Min_Data=0x000000 and Max_Data=0xFFFFFF
2103:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000000 and Max_Data=0xFFFFFF
2104:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2105:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_16_BITS__) \
2106:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((__AWD_THRESHOLD_16_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2107:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2108:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2109:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
2110:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
2111:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationOffsetFactor().
2112:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
2113:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and differential ended to 0x2A:
2114:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_SetCalibrationOffsetFactor(
2115:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC1,
2116:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
2117:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
2118:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
2119:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2120:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2121:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2122:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2123:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2124:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  /tmp/cc6JDs4t.s 			page 68


2125:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2126:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2127:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2128:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2129:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2130:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2131:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2132:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2133:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2134:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2135:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2136:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2137:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2138:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2139:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2140:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2141:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2142:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2143:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC common instance).
2144:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2145:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2146:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2147:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         considered as master instances (do not depend to
2148:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         any other ADC instance).
2149:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2150:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2151:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2152:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2153:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
2154:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     )?                                                                         \
2155:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      (ADC1)                                                                    \
2156:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      :                                                                         \
2157:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      (__ADCx__)                                                                \
2158:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2159:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2160:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2161:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2162:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2163:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2164:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2165:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2166:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2167:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2168:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC common register instance
2169:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2170:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC3_COMMON)
2171:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2172:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((((__ADCx__) == ADC1) || ((__ADCx__) == ADC2))                              \
2173:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (                                                                        \
2174:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC12_COMMON)                                                          \
2175:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2176:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                        \
2177:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       (                                                                        \
2178:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC3_COMMON)                                                           \
2179:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2180:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2181:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
ARM GAS  /tmp/cc6JDs4t.s 			page 69


2182:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)   (ADC12_COMMON)
2183:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2184:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2185:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2186:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2187:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC common instance are disabled.
2188:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2189:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2190:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2191:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2192:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2193:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2194:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2195:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2196:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2197:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2198:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         are disabled.
2199:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2200:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled.
2201:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2202:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC3_COMMON)
2203:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2204:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__ADCXY_COMMON__) == ADC12_COMMON)                                        \
2205:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (                                                                        \
2206:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC1) |                                               \
2207:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC2)  )                                              \
2208:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2209:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                        \
2210:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       (                                                                        \
2211:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC3))                                                \
2212:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2213:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2214:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2215:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2216:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                         (LL_ADC_IsEnabled(ADC1) | LL_ADC_IsEnabled(ADC2))
2217:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2218:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2219:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2220:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2221:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2222:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2223:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2224:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (refer to reference manual).
2225:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2226:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2227:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2228:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2229:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2230:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2231:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2232:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2233:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2234:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (0xFFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2235:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2236:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2237:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2238:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
ARM GAS  /tmp/cc6JDs4t.s 			page 70


2239:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2240:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2241:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2242:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (refer to reference manual).
2243:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2244:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2245:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2246:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2247:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2248:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: digital value of ADC conversion bit
2249:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2250:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC3_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2251:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS_ADC3 - 1UL)))
2252:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
2253:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2254:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2255:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a resolution to another resolution.
2256:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2257:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2258:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This parameter can be one of the following values:
2259:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2260:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2261:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2262:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2263:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2264:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2265:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This parameter can be one of the following values:
2266:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2267:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2268:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2269:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2270:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2271:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2272:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2273:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_X) || defined(ADC_VER_V5_V90)
2274:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2275:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2276:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__) \
2277:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** ( (__ADC_RESOLUTION_CURRENT__ == LL_ADC_RESOLUTION_8B)                                             
2278:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ?(                                                                                               
2279:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ((__DATA__)                                                                                    
2280:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << (((__ADC_RESOLUTION_CURRENT__) & ~(ADC_CFGR_RES_1 | ADC_CFGR_RES_0) ) >> (ADC_CFGR_RES_BITOF
2281:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))                          
2282:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                                               
2283:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   :                                                                                                
2284:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    (                                                                                               
2285:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      (__ADC_RESOLUTION_TARGET__ == LL_ADC_RESOLUTION_8B) \
2286:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ? ( \
2287:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            ((__DATA__)                                                                             
2288:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))               
2289:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            >> (((__ADC_RESOLUTION_TARGET__) & ~(ADC_CFGR_RES_1 | ADC_CFGR_RES_0) ) >> (ADC_CFGR_RES
2290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            )                                                                                       
2291:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          :\
2292:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****           (\
2293:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ((__DATA__)                                                                                    
2294:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))                       
2295:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))                         
ARM GAS  /tmp/cc6JDs4t.s 			page 71


2296:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      )                                                                                             
2297:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )\
2298:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****  )
2299:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2300:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2301:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* defined(ADC_VER_V5_3) */
2302:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2303:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2304:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__) \
2305:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** ( (__ADC_RESOLUTION_CURRENT__ == LL_ADC_RESOLUTION_8B)                                             
2306:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ?(                                                                                               
2307:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ((__DATA__)                                                                                    
2308:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << (((__ADC_RESOLUTION_CURRENT__) & ~(ADC_CFGR_RES_1 | ADC_CFGR_RES_0) ) >> (ADC_CFGR_RES_BITOF
2309:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))                          
2310:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                                               
2311:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   :                                                                                                
2312:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    (                                                                                               
2313:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      (__ADC_RESOLUTION_TARGET__ == LL_ADC_RESOLUTION_8B) \
2314:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ? ( \
2315:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            ((__DATA__)                                                                             
2316:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))               
2317:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            >> (((__ADC_RESOLUTION_TARGET__) & ~(ADC_CFGR_RES_1 | ADC_CFGR_RES_0) ) >> (ADC_CFGR_RES
2318:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            )                                                                                       
2319:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          :\
2320:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****           (\
2321:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ((__DATA__)                                                                                    
2322:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))                       
2323:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))                         
2324:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      )                                                                                             
2325:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )\
2326:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****  )
2327:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2328:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2329:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2330:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2331:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2332:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @brief  Helper macro to convert the ADC conversion data from
2333:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         a resolution to another resolution.
2334:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @param  __DATA__ ADC conversion data to be converted
2335:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2336:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         This parameter can be one of the following values:
2337:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_12B
2338:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_10B
2339:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_8B
2340:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_6B
2341:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2342:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         This parameter can be one of the following values:
2343:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_12B
2344:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_10B
2345:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_8B
2346:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_6B
2347:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @retval ADC conversion data to the requested resolution
2348:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
2349:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION_ADC3(__DATA__,\
2350:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2351:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)            \
2352:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__DATA__)                                                                 \
ARM GAS  /tmp/cc6JDs4t.s 			page 72


2353:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS_ADC3 - 1UL)))  \
2354:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS_ADC3 - 1UL))     \
2355:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2356:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
2357:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2358:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2359:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2360:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2361:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2362:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2363:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2364:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 16 bits)
2365:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                       (unit: digital value).
2366:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2367:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2368:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2369:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2370:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2371:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2372:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2373:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2374:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2375:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                       __ADC_DATA__,\
2376:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
2377:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2378:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2379:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2380:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2381:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2382:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2383:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2384:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         reference VrefInt.
2385:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2386:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         stored in system memory for each device during production.
2387:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2388:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         connected to pin Vref+.
2389:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2390:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2391:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2392:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 16 bits,
2393:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2394:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2395:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2396:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion data to 16 bits.
2397:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 16 bits)
2398:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2399:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2400:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2401:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2402:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2403:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2404:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2405:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2406:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2407:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2408:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                   \
2409:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
ARM GAS  /tmp/cc6JDs4t.s 			page 73


2410:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                 \
2411:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                        (__ADC_RESOLUTION__),                   \
2412:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                        LL_ADC_RESOLUTION_16B)                  \
2413:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2414:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2415:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2417:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2419:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         stored in system memory for each device during production.
2420:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calculation formula:
2421:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2422:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2423:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2424:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2425:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2426:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2427:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2428:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2429:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2430:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2431:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2432:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  parameters are correct (address and data).
2433:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2434:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2435:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  less accurate than calibrated values),
2436:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2437:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2438:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2439:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2440:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2441:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2442:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2443:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         corresponds to a resolution of 16 bits,
2444:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2445:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temperature sensor.
2446:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2447:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion data to 16 bits.
2448:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2449:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2450:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2451:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2452:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2453:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This parameter can be one of the following values:
2454:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2455:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2456:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2457:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2458:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2459:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2460:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2461:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2462:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2463:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                              \
2464:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2465:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
2466:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_16B)         \
ARM GAS  /tmp/cc6JDs4t.s 			page 74


2467:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
2468:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
2469:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2470:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2471:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2472:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
2473:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2474:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2475:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2476:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2477:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2478:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2479:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (refer to device datasheet).
2480:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calculation formula:
2481:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2482:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2483:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2484:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                   (unit: digital value)
2485:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2486:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2487:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2488:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2489:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2490:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2491:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  datasheet typical values.
2492:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2493:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2494:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2495:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2496:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2497:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2498:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2499:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2500:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2501:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 16 bits
2502:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2503:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 16 bits.
2504:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2505:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                       On STM32H7, refer to device datasheet parameter "Avg_Slop
2506:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2507:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                       On STM32H7, refer to device datasheet parameter "V30" (co
2508:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2509:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2510:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2511:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2512:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This parameter can be one of the following values:
2513:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2514:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2515:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2516:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2517:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2518:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2519:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2520:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2521:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2522:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2523:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
ARM GAS  /tmp/cc6JDs4t.s 			page 75


2524:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2525:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
2526:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((( (                                                                        \
2527:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2528:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2529:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                  * 1000UL)                                                     \
2530:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        -                                                                       \
2531:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2532:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                  * 1000UL)                                                     \
2533:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2534:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                 \
2535:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                     \
2536:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2537:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2538:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2539:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
2540:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2541:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2542:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2543:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
2544:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2545:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2546:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2547:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2548:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2549:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
2550:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2551:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2552:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2553:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
2554:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2555:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2556:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2557:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2558:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2559:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2560:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   These ADC registers are data registers:
2561:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2562:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2563:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2564:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2565:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example:
2566:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2567:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2568:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2569:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2570:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2571:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2572:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2573:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2574:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2575:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
2576:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
2577:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
2578:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2579:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2580:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
ARM GAS  /tmp/cc6JDs4t.s 			page 76


2581:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
2582:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
2583:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
2584:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC register address
2585:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2586:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2587:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2588:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t data_reg_addr;
2589:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2590:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
2591:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2592:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Retrieve address of register DR */
2593:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     data_reg_addr = (uint32_t) & (ADCx->DR);
2594:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2595:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
2596:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2597:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Retrieve address of register CDR */
2598:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     data_reg_addr = (uint32_t) & ((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
2599:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2600:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2601:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return data_reg_addr;
2602:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2603:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2604:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2605:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
2606:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2607:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2608:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2609:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
2610:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2611:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2612:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2613:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2614:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
2615:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2616:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         must be respected.
2617:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual.
2618:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2619:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2620:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2621:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2622:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2623:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2624:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2625:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2626:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2627:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2628:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2629:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2630:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2631:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2632:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2633:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2634:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2635:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2636:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2637:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
ARM GAS  /tmp/cc6JDs4t.s 			page 77


2638:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2639:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2640:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2641:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2642:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2643:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2644:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2645:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2646:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2648:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2649:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2650:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2651:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2652:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2654:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2655:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2657:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2658:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2660:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2661:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2662:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2663:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2664:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2665:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2666:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2667:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2668:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2669:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2670:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2671:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2672:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2673:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2674:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
2675:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2676:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2677:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2678:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2679:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2680:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to internal
2681:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2682:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
2683:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2684:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2685:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2686:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2687:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2688:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temperature sensor stabilization time.
2689:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
2690:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2691:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2692:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2693:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2694:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a sampling time minimum value is required.
ARM GAS  /tmp/cc6JDs4t.s 			page 78


2695:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
2696:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2697:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2698:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2699:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2700:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2701:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2702:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2703:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2704:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2705:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2706:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2707:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2708:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2709:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2710:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2711:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2712:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2713:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2714:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2715:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
2717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2718:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2719:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2720:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2721:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2722:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
2723:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2724:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2725:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2726:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2727:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2728:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2729:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2730:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2731:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2732:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2733:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2734:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2735:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2736:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2737:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
2739:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2740:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2741:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2742:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
2743:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2744:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2745:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2746:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
2747:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2748:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2749:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2750:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2751:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
ARM GAS  /tmp/cc6JDs4t.s 			page 79


2752:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2753:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without having to perform a new calibration using
2754:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2755:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with differential mode available:
2756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2757:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
2758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2759:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2760:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         requires their calibration).
2761:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of linearity is common to both
2762:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
2763:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (calibration factor can be specified only once).
2764:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2765:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2766:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         both calibration factors must be concatenated.
2767:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         To perform this processing, use helper macro
2768:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2770:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2771:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2772:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on group regular.
2773:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationOffsetFactor\n
2774:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationOffsetFactor
2775:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2776:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2777:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2778:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2779:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
2780:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2781:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2782:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2783:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationOffsetFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint
2784:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2785:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)  
2786:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT_RES13,
2787:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2788:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2789:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2790:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2791:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2792:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2793:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2794:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2795:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2796:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2797:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2798:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2799:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2800:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2801:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with differential mode available:
2802:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
2804:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of linearity is common to both
2805:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
2806:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationOffsetFactor\n
2807:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationOffsetFactor
2808:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/cc6JDs4t.s 			page 80


2809:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2810:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2811:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2812:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2813:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2814:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationOffsetFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff)
2815:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2816:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2817:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* "SingleDiff".                                                            */
2818:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2819:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2820:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2821:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT_RES13, (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) 
2822:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2823:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((S
2824:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2825:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2826:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2827:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2828:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC Linear calibration factor in the mode single-ended.
2829:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function is intended to set linear calibration parameters
2830:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without having to perform a new calibration using
2831:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2832:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2833:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2834:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2835:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on group regular.
2836:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CALFACT2  LINCALFACT      LL_ADC_SetCalibrationLinearFactor\n
2837:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CALFACT2  LINCALFACT      LL_ADC_SetCalibrationLinearFactor
2838:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2839:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  LinearityWord This parameter can be one of the following values:
2840:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD1
2841:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD2
2842:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD3
2843:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD4
2844:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD5
2845:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD6
2846:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x3FFFFFFF
2847:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2848:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2849:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationLinearFactor(ADC_TypeDef *ADCx, uint32_t LinearityWord, u
2850:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2851:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2852:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx != ADC3)
2853:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2854:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     uint32_t timeout_cpu_cycles = ADC_LINEARITY_BIT_TOGGLE_TIMEOUT;
2855:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CALFACT2_RES14, ADC_CALFACT2_LINCALFACT, CalibrationFactor);
2856:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_ADCALLIN, LinearityWord);
2857:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     while ((READ_BIT(ADCx->CR, LinearityWord) == 0UL) && (timeout_cpu_cycles > 0UL))
2858:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
2859:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       timeout_cpu_cycles--;
2860:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
2861:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2862:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* ADC_VER_V5_V90 */
2863:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t timeout_cpu_cycles = ADC_LINEARITY_BIT_TOGGLE_TIMEOUT;
2864:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT2, ADC_CALFACT2_LINCALFACT, CalibrationFactor);
2865:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR, ADC_CR_ADCALLIN, LinearityWord);
ARM GAS  /tmp/cc6JDs4t.s 			page 81


2866:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   while ((READ_BIT(ADCx->CR, LinearityWord) == 0UL) && (timeout_cpu_cycles > 0UL))
2867:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2868:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     timeout_cpu_cycles--;
2869:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2870:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2871:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2872:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2873:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2874:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC Linear calibration factor in the mode single-ended.
2875:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2876:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2877:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CALFACT2  LINCALFACT      LL_ADC_GetCalibrationLinearFactor\n
2878:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CALFACT2  LINCALFACT      LL_ADC_GetCalibrationLinearFactor
2879:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2880:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  LinearityWord This parameter can be one of the following values:
2881:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD1
2882:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD2
2883:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD3
2884:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD4
2885:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD5
2886:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD6
2887:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3FFFFFFF
2888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2889:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationLinearFactor(ADC_TypeDef *ADCx, uint32_t LinearityWor
2890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2891:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t timeout_cpu_cycles = ADC_LINEARITY_BIT_TOGGLE_TIMEOUT;
2892:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, LinearityWord);
2893:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   while ((READ_BIT(ADCx->CR, LinearityWord) != 0UL) && (timeout_cpu_cycles > 0UL))
2894:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2895:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     timeout_cpu_cycles--;
2896:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2897:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2898:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT2_RES14, ADC_CALFACT2_LINCALFACT));
2899:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2900:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT2, ADC_CALFACT2_LINCALFACT));
2901:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2902:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2903:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2904:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC resolution.
2905:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2906:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2907:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2908:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2909:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2910:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
2911:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2912:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2913:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2914:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2915:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2916:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2917:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2918:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2919:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2920:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2921:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2922:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/cc6JDs4t.s 			page 82


2923:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_3)
2924:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2925:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2926:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2927:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #elif defined(ADC_VER_V5_V90)
2928:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
2929:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2930:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR, ADC3_CFGR_RES, (((Resolution & 0x10UL) | 0x08UL | (Resolution & 0x04UL))
2931:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2932:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
2933:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2934:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Rev.Y */
2935:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
2936:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2937:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
2938:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else /* Rev.V */
2939:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
2940:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       if (LL_ADC_RESOLUTION_8B == Resolution)
2941:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
2942:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution | 0x0000000CUL);
2943:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
2944:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       else
2945:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
2946:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2947:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
2948:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
2949:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2950:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* ADC_VER_V5_V90 */
2951:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Rev.Y */
2952:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2953:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2954:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2955:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* Rev.V */
2956:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2957:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if (LL_ADC_RESOLUTION_8B == Resolution)
2958:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
2959:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution | 0x0000000CUL);
2960:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
2961:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
2962:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
2963:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2964:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
2965:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2966:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2967:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_X*/
2968:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2969:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2970:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2971:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC resolution.
2972:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2973:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2974:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
2975:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2976:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2977:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2978:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2979:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
ARM GAS  /tmp/cc6JDs4t.s 			page 83


2980:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2981:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2982:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    *         @arg @ref LL_ADC_RESOLUTION_6B   **Value available for ADC3 on STM32H72x/3x devices on
2983:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2984:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
2985:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2986:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (ADC_VER_V5_3)
2987:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2988:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
2989:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2990:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #elif defined(ADC_VER_V5_V90)
2991:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
2992:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2993:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->CFGR, ADC3_CFGR_RES));
2994:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2995:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
2996:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2997:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if ((uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES)) == 0x0000001CUL)
2998:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
2999:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       return (LL_ADC_RESOLUTION_8B);
3000:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3001:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
3002:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3003:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3004:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3005:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3006:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3007:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else  /* ADC_VER_V5_V90 */
3008:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Rev.Y */
3009:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3010:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3011:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3012:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* Rev.V */
3013:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3014:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if ((uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES)) == 0x0000001CUL)
3015:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3016:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       return (LL_ADC_RESOLUTION_8B);
3017:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3018:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
3019:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3020:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3021:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3022:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3023:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3024:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_X */
3025:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3026:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3027:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3028:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC low power mode.
3029:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3030:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3031:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3032:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           in order to reduce power consumption.
3033:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3034:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3035:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3036:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           has been retrieved by user software.
ARM GAS  /tmp/cc6JDs4t.s 			page 84


3037:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3038:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           other conversion.
3039:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3040:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3041:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3042:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           applications.
3043:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           How to use this low power mode:
3044:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3045:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3046:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3047:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3048:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3049:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3050:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3051:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3052:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3053:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3054:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC conversion start.
3055:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
3056:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
3057:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
3058:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
3059:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
3060:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
3061:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3062:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3063:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of delay during which ADC was idle.
3064:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3065:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3066:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC channel.
3067:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3068:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3069:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3070:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3071:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
3072:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3073:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
3074:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3075:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3076:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3077:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3078:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
3079:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3080:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
3081:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3082:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3083:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3084:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC low power mode:
3085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3086:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3087:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3088:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           in order to reduce power consumption.
3089:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3090:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3091:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3092:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           has been retrieved by user software.
3093:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
ARM GAS  /tmp/cc6JDs4t.s 			page 85


3094:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           other conversion.
3095:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3096:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3097:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3098:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           applications.
3099:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           How to use this low power mode:
3100:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3101:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3102:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3103:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3104:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3105:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3106:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3107:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3108:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3109:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3110:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC conversion start.
3111:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
3112:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
3113:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
3114:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
3115:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
3116:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
3117:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3118:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3119:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of delay during which ADC was idle.
3120:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3121:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3122:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC channel.
3123:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
3124:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3125:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3126:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3127:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3128:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3129:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
3130:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3131:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
3132:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3133:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3134:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3135:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC selected Channel.
3136:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function set the pre-selection of channel configuration.
3137:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Caution: Channel selections is dependent to ADC instance and IP version:
3138:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For STM32H72x/3x This is applicable only for ADC1/ADC2
3139:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For Rest of STM32H7xxx This is applicable only all the ADCs instances.
3140:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * 
3141:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3142:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3143:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           
3144:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           
3145:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           
3146:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           
3147:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           
3148:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           
3149:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3150:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
ARM GAS  /tmp/cc6JDs4t.s 			page 86


3151:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3152:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3153:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3154:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3155:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3156:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3157:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3158:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3159:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3160:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3161:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3162:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3163:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3164:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3165:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelPreSelection(ADC_TypeDef *ADCx, uint32_t Channel)
3166:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3167:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3168:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if (ADCx != ADC3)
3169:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3170:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       /* ADC channels preselection */
3171:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       ADCx->PCSEL_RES0 |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(Channel) & 0x1FUL));
3172:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3173:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
3174:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* ADC channels preselection */
3175:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ADCx->PCSEL |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(Channel) & 0x1FUL));
3176:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
3177:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3178:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3179:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3180:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
3181:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
3182:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
3183:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
3184:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           or group injected)
3185:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
3186:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           converted data).
3187:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3188:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3189:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         are set to 0.
3190:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
3191:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
3192:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
3193:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
3194:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3195:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3196:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3197:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3198:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some fast channels are available: fast analog inputs
3199:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
3200:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
3201:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
3202:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
3203:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
3204:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
3205:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
3206:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
3207:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
ARM GAS  /tmp/cc6JDs4t.s 			page 87


3208:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
3209:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
3210:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
3211:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
3212:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3213:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3214:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3215:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3216:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3217:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3218:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3219:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
3220:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
3221:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
3222:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
3223:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
3224:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
3225:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3226:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3227:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3228:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3229:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3230:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3231:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3232:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3233:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3234:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3235:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3236:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3237:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3238:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3239:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3240:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
3241:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
3242:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
3243:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
3244:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
3245:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
3246:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
3247:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
3248:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
3249:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0x1FFFFFF
3250:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3251:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3252:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
3253:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3254:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3255:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3256:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3257:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3258:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3259:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3260:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3261:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3262:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3263:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
3264:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
ARM GAS  /tmp/cc6JDs4t.s 			page 88


3265:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3266:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3267:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3268:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3269:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3270:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3271:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3272:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3273:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
3274:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
3275:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or group injected)
3276:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3277:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3278:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3279:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3280:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3281:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3282:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3283:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           as parameter for another function.
3284:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3285:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           process the returned value with the helper macro
3286:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3287:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some fast channels are available: fast analog inputs
3288:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
3289:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
3290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
3291:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
3292:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
3293:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3294:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3295:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3296:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3297:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3298:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3299:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3300:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
3301:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
3302:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
3303:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
3304:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
3305:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
3306:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3307:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3308:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3309:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3310:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3311:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3312:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3313:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3314:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3315:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3316:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3317:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3318:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3319:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3320:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3321:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
ARM GAS  /tmp/cc6JDs4t.s 			page 89


3322:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
3323:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
3324:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
3325:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
3326:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
3327:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
3328:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
3329:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
3330:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
3331:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
3332:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3333:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3334:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
3335:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3336:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3337:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3338:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3339:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3340:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3341:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3342:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3343:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3344:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         converted data).
3345:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3346:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3347:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         are set to 0.
3348:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3349:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3350:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3351:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3352:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3353:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3354:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3355:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3356:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3357:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3358:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x1FFFFFF
3359:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3360:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(ADC_TypeDef *ADCx, uint32_t Offsety)
3361:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3362:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3363:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3364:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3365:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3366:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3367:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3368:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3369:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set data right shift for the ADC selected offset number 1, 2, 3 or 4:
3370:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         signed offset saturation if enabled or disabled.
3371:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    RSHIFT          LL_ADC_SetDataRightShift\n
3372:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3373:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3374:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3375:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3376:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3377:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3378:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  RigthShift This parameter can be one of the following values:
ARM GAS  /tmp/cc6JDs4t.s 			page 90


3379:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_RSHIFT_ENABLE
3380:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_RSHIFT_DISABLE
3381:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned None
3382:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3383:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataRightShift(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t RigthSh
3384:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3385:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_RSHIFT1 | ADC_CFGR2_RSHIFT2 | ADC_CFGR2_RSHIFT3 | ADC_CFGR2_RS
3386:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3387:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3388:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3389:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get data right shift for the ADC selected offset number 1, 2, 3 or 4:
3390:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         signed offset saturation if enabled or disabled.
3391:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    RSHIFT          LL_ADC_GetDataRightShift\n
3392:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3393:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3394:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3395:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3396:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3397:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3398:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3399:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_RSHIFT_ENABLE
3400:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_RSHIFT_DISABLE
3401:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3402:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataRightShift(ADC_TypeDef *ADCx, uint32_t Offsety)
3403:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3404:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->CFGR2, (ADC_CFGR2_RSHIFT1 << (Offsety & 0x1FUL)))) >> (Offsety 
3405:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3406:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3407:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3408:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set signed saturation for the ADC selected offset number 1, 2, 3 or 4:
3409:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         signed offset saturation if enabled or disabled.
3410:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     SSATE          LL_ADC_SetOffsetSignedSaturation\n
3411:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     SSATE          LL_ADC_SetOffsetSignedSaturation\n
3412:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     SSATE          LL_ADC_SetOffsetSignedSaturation\n
3413:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     SSATE          LL_ADC_SetOffsetSignedSaturation
3414:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3415:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3417:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3419:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3420:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetSignedSaturation This parameter can be one of the following values:
3421:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE
3422:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE
3423:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned None
3424:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3425:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSignedSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t
3426:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3427:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3428:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3429:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3430:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Function not available on this instance */
3431:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3432:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3433:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
3434:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3435:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
ARM GAS  /tmp/cc6JDs4t.s 			page 91


3436:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
3437:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3438:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3439:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3440:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3441:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get signed saturation for the ADC selected offset number 1, 2, 3 or 4:
3442:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         signed offset saturation if enabled or disabled.
3443:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     SSATE          LL_ADC_GetOffsetSignedSaturation\n
3444:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     SSATE          LL_ADC_GetOffsetSignedSaturation\n
3445:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     SSATE          LL_ADC_GetOffsetSignedSaturation\n
3446:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     SSATE          LL_ADC_GetOffsetSignedSaturation
3447:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3448:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3449:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3450:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3451:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3452:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3453:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3454:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE
3455:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE
3456:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3457:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSignedSaturation(ADC_TypeDef *ADCx, uint32_t Offsety)
3458:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3459:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3460:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3461:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3462:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Function not available on this instance */
3463:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
3464:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3465:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3466:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
3467:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3468:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3469:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC_OFR1_SSATE);
3470:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3471:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3472:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3473:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3474:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3475:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3476:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         choose offset saturation mode.
3477:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3478:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3479:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3480:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3481:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_SetOffsetSaturation\n
3482:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_SetOffsetSaturation\n
3483:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_SetOffsetSaturation\n
3484:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_SetOffsetSaturation
3485:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3486:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3487:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3488:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3489:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3490:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3491:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetSaturation This parameter can be one of the following values:
3492:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
ARM GAS  /tmp/cc6JDs4t.s 			page 92


3493:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3494:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3495:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3496:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Offse
3497:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3498:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3499:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3500:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3501:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3502:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3503:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_SATEN,
3504:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                OffsetSaturation);
3505:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3506:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3507:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3508:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3509:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3510:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset saturation if enabled or disabled.
3511:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_GetOffsetSaturation\n
3512:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_GetOffsetSaturation\n
3513:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_GetOffsetSaturation\n
3514:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_GetOffsetSaturation
3515:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3516:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3517:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3518:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3519:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3520:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3521:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3522:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3523:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3524:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3525:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety)
3526:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3527:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3528:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3529:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3530:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3531:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC3_OFR1_SATEN);
3532:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }else
3533:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3534:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
3535:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3536:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3537:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3538:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3539:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3540:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         choose offset sign.
3541:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3542:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3543:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3544:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3545:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_SetOffsetSign\n
3546:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_SetOffsetSign\n
3547:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_SetOffsetSign\n
3548:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_SetOffsetSign
3549:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/cc6JDs4t.s 			page 93


3550:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3551:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3552:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3553:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3554:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3555:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetSign This parameter can be one of the following values:
3556:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3557:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3558:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3559:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3560:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSign)
3561:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3562:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3563:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3564:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3565:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3566:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3567:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSETPOS,
3568:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                OffsetSign);
3569:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3570:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3571:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3572:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3573:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3574:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset sign if positive or negative.
3575:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_GetOffsetSign\n
3576:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_GetOffsetSign\n
3577:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_GetOffsetSign\n
3578:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_GetOffsetSign
3579:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3580:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3581:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3582:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3583:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3584:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3585:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3586:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3587:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3588:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3589:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety)
3590:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3591:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3592:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3593:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3594:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3595:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC3_OFR1_OFFSETPOS);
3596:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3597:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3598:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   { 
3599:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
3600:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3601:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3602:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3603:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3604:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3605:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         force offset state disable or enable
3606:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without modifying offset channel or offset value.
ARM GAS  /tmp/cc6JDs4t.s 			page 94


3607:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3608:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3609:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3610:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3611:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3612:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3613:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3614:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3615:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3616:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3617:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3618:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3619:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3620:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3621:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3622:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3623:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3624:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3625:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3626:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3627:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3628:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3629:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3630:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3631:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3632:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3633:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3634:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3635:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN,
3636:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                OffsetState);
3637:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3638:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3639:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3640:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3641:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_SSATE,
3642:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                OffsetState);
3643:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3644:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3645:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3646:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3648:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset state disabled or enabled.
3649:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3650:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3651:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3652:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3654:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3655:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3657:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3658:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3660:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3661:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3662:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3663:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety)
ARM GAS  /tmp/cc6JDs4t.s 			page 95


3664:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3665:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3666:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3667:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3668:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC3_OFR1_OFFSET1_EN);
3669:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3670:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3671:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3672:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC_OFR1_SSATE);
3673:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3674:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3675:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3676:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
3677:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3678:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3679:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
3680:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3681:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3682:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3683:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
3684:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3685:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3686:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3687:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3688:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3689:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external interrupt line).
3690:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3691:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3692:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3693:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3694:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3695:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3696:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3697:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3698:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3699:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3700:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3701:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
3702:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3703:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3704:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3705:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3706:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3707:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3708:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3709:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3710:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3711:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3712:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3713:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3714:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3715:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3718:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3719:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3720:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
ARM GAS  /tmp/cc6JDs4t.s 			page 96


3721:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3722:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3723:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
3724:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
3725:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM1_OUT
3726:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM2_OUT
3727:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM3_OUT
3728:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3729:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3730:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3731:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3732:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3733:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3734:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3735:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3736:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3737:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external interrupt line).
3739:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3740:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3741:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3742:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (equivalent to
3743:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3744:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3745:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3746:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3747:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3748:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3749:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3750:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3751:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3752:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3753:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3754:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3755:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3757:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3759:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3760:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3761:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3762:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3763:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3764:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3765:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3766:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3767:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3768:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
3769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
3770:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM1_OUT
3771:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM2_OUT
3772:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM3_OUT
3773:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3774:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
3775:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3776:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3777:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 97


3778:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3779:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3780:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2U
3781:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3782:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3783:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3784:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((TriggerSource
3785:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3786:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3787:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          );
3788:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3789:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3790:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3791:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3792:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or external.
3793:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3794:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3795:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3796:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3797:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3798:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3799:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3800:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3801:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3802:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3804:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3805:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3806:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3807:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3808:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3809:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3810:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3811:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3812:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
3813:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3814:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3815:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3816:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3817:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3818:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3819:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3820:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3821:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3822:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3823:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3824:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3825:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3826:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3827:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3828:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3829:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3830:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3831:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3832:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3833:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3834:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
ARM GAS  /tmp/cc6JDs4t.s 			page 98


3835:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3836:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
3837:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3838:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3839:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3840:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3841:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3842:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3843:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC sampling mode.
3844:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function set the ADC conversion sampling mode
3845:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This mode applies to regular group only.
3846:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Set sampling mode is applied to all conversion of regular group.
3847:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3848:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3849:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3850:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
3851:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_SetSamplingMode\n
3852:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_SetSamplingMode
3853:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3854:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SamplingMode This parameter can be one of the following values:
3855:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
3856:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
3857:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
3858:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3859:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3860:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSamplingMode(ADC_TypeDef *ADCx, uint32_t SamplingMode)
3861:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3862:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx != ADC3)
3863:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3864:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Function not available on this instance */
3865:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3866:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3867:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3868:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR2, ADC3_CFGR2_BULB | ADC3_CFGR2_SMPTRIG, SamplingMode);
3869:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3870:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3871:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
3872:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3873:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3874:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3875:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3876:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3877:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3878:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3879:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are configurable.
3880:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This function performs configuration of:
3881:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3882:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3883:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3884:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Sequencer ranks are selected using
3885:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3886:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3887:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3889:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are defined by channel number.
3890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This function performs configuration of:
3891:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
ARM GAS  /tmp/cc6JDs4t.s 			page 99


3892:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3893:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3894:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3895:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3896:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3897:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             highest channel number).
3898:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Sequencer ranks are selected using
3899:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3900:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3901:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3902:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3903:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3904:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3905:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
3906:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
3907:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3908:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3909:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3910:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3911:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3912:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3913:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3914:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3915:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3916:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3917:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3918:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3919:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3920:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3921:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3922:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3923:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3924:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3925:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3926:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3927:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3928:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3929:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
3930:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3931:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3932:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3933:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
3934:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3935:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3936:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3937:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3938:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are configurable.
3939:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This function retrieves:
3940:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3941:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3942:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3943:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Sequencer ranks are selected using
3944:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3945:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3946:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3947:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3948:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are defined by channel number.
ARM GAS  /tmp/cc6JDs4t.s 			page 100


3949:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This function retrieves:
3950:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3951:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3952:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3953:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3954:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3955:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3956:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             highest channel number).
3957:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Sequencer ranks are selected using
3958:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3959:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3960:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3961:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
3962:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3963:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3964:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3965:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3966:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3967:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3968:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3969:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3970:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3971:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3972:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3973:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3974:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3975:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3976:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3977:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3978:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3979:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3980:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3981:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
3982:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3983:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
3984:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3985:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3986:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3987:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
3988:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3989:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number of ranks.
3990:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3991:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3992:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
3993:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
3994:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3995:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3996:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3997:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
3998:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
3999:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
4000:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4001:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4002:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4003:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4004:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4005:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
ARM GAS  /tmp/cc6JDs4t.s 			page 101


4006:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4007:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4008:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4009:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4010:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4011:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4012:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4013:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4014:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4015:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
4016:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4017:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4018:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4019:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
4020:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4021:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number of ranks.
4022:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
4023:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
4024:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4025:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4026:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4027:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4028:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4029:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4030:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4031:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4032:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4033:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4034:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4035:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4036:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
4037:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4038:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
4039:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4040:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4041:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4042:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
4043:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         scan sequence rank.
4044:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function performs configuration of:
4045:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4046:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
4047:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4048:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4049:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         affectation to a channel are configurable.
4050:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4051:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4052:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4053:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4054:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4055:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         enabled separately.
4056:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4057:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4058:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4059:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4060:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4061:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
4062:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
ARM GAS  /tmp/cc6JDs4t.s 			page 102


4063:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
4064:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
4065:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
4066:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
4067:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
4068:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
4069:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
4070:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
4071:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
4072:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
4073:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
4074:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
4075:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
4076:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
4077:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4078:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4079:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4080:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4081:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4082:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4083:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4084:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4086:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4087:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4088:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4089:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4090:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4091:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4092:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4093:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4094:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4095:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4096:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4097:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4098:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4099:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4100:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4101:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4102:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4103:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4104:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4105:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4106:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4107:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4108:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4109:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4110:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4111:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4112:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4113:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4114:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4115:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4116:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4117:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4118:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
4119:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
ARM GAS  /tmp/cc6JDs4t.s 			page 103


4120:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
4121:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
4122:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
4123:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
4124:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
4125:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
4126:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4127:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4128:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4129:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4130:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4131:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
4132:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4133:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4134:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> A
4135:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4136:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(*preg,
4137:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
4138:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4139:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4140:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4141:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4142:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
4143:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         scan sequence rank.
4144:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4145:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4146:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         affectation to a channel are configurable.
4147:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4148:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4149:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4150:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4151:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4152:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4153:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4154:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4155:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4156:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4157:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           as parameter for another function.
4158:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4159:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           process the returned value with the helper macro
4160:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4161:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
4162:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
4163:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
4164:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
4165:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
4166:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
4167:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
4168:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
4169:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
4170:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
4171:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
4172:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
4173:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
4174:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
4175:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
4176:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
ARM GAS  /tmp/cc6JDs4t.s 			page 104


4177:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4178:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4179:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4180:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4181:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4182:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4183:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4184:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4185:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4186:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4187:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4188:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4189:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4190:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4191:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4192:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4193:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4194:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4195:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4196:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4197:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4198:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4199:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4200:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4201:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4202:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4203:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4204:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4205:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4206:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4207:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4208:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4209:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4210:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4211:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4212:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4213:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4214:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4215:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4216:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4217:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4218:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
4219:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
4220:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
4221:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
4222:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
4223:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
4224:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
4225:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
4226:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
4227:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
4228:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4229:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4230:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4231:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4232:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK
4233:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 105


4234:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
4235:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
4236:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4237:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
4238:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4239:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4240:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4241:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
4242:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4243:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4244:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4245:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           conversions launched successively automatically.
4246:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4247:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4248:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4249:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4250:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4251:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4252:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
4253:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4254:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
4255:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4256:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4257:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4258:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4259:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
4260:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4261:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
4262:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4263:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4264:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4265:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
4266:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4267:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4268:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4269:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           conversions launched successively automatically.
4270:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
4271:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4272:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4273:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4274:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4275:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4276:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
4277:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4278:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
4279:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4280:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4281:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC data transfer mode
4282:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Conversion data can be either:
4283:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Available in Data Register
4284:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred by DMA in one shot mode
4285:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred by DMA in circular mode
4286:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred to DFSDM data register
4287:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMNGT           LL_ADC_REG_SetDataTransferMode
4288:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4289:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  DataTransferMode Select Data Management configuration
4290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/cc6JDs4t.s 			page 106


4291:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4292:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDataTransferMode(ADC_TypeDef *ADCx, uint32_t DataTransferMode)
4293:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4294:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMNGT, DataTransferMode);
4295:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4296:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4297:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
4298:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4299:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable DMA requests for ADC3.
4300:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
4301:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4302:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4303:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4304:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDMAReq (ADC_TypeDef *ADCx)
4305:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4306:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->CFGR, ADC3_CFGR_DMAEN);
4307:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4308:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4309:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDMAReq(ADC_TypeDef *ADCx)
4310:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4311:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT (ADCx->CFGR, ADC3_CFGR_DMAEN);
4312:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4313:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4314:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabledDMAReq (ADC_TypeDef *ADCx)
4315:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4316:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC3_CFGR_DMAEN) == (ADC3_CFGR_DMAEN)) ? 1UL : 0UL);
4317:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4318:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4319:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
4320:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4321:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4322:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode:
4323:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4324:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4325:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions) is reached.
4326:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4327:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4328:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4329:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions).
4330:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4331:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4332:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode non-circular:
4333:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4334:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4335:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
4336:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4337:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
4338:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4339:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4340:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4341:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4342:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4343:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
4344:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransferMode\n
4345:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransferMode
4346:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4347:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
ARM GAS  /tmp/cc6JDs4t.s 			page 107


4348:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_NONE
4349:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_LIMITED
4350:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_UNLIMITED
4351:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4352:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4353:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransferMode(ADC_TypeDef *ADCx, uint32_t DMATransfer)
4354:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4355:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
4356:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
4357:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR, ADC3_CFGR_DMAEN | ADC3_CFGR_DMACFG, DMATransfer);
4358:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
4359:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4360:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4361:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4362:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
4363:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4364:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4365:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode:
4366:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4367:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4368:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions) is reached.
4369:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4370:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4371:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4372:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions).
4373:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4374:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4375:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode non-circular:
4376:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4377:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4378:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
4379:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4380:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
4381:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4382:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4383:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
4384:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
4385:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4386:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4387:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_NONE
4388:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_LIMITED
4389:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_UNLIMITED
4390:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4391:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransferMode(ADC_TypeDef *ADCx)
4392:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4393:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
4394:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
4395:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->CFGR, ADC3_CFGR_DMAEN | ADC3_CFGR_DMACFG));
4396:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
4397:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    else
4398:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   { 
4399:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
4400:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
4401:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4402:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4403:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
4404:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 108


4405:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4406:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC data transfer mode
4407:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Conversion data can be either:
4408:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Available in Data Register
4409:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred by DMA in one shot mode
4410:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred by DMA in circular mode
4411:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred to DFSDM data register
4412:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMNGT           LL_ADC_REG_GetDataTransferMode
4413:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4414:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4415:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DR_TRANSFER
4416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4417:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER
4419:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4420:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDataTransferMode(ADC_TypeDef *ADCx)
4421:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4422:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMNGT));
4423:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4424:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4425:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4426:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4427:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
4428:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         data preserved or overwritten.
4429:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
4430:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         other devices without this feature have a behavior
4431:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         equivalent to data overwritten.
4432:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
4433:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
4434:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         overrun should be set to data overwritten.
4435:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4436:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4437:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4438:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4439:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
4440:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4441:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
4442:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4443:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4444:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4445:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4446:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
4447:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4448:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
4449:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4450:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4451:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4452:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
4453:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         data preserved or overwritten.
4454:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
4455:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4456:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4457:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4458:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4459:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4460:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
4461:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/cc6JDs4t.s 			page 109


4462:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
4463:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4464:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4465:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4466:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
4467:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4468:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4469:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
4470:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
4471:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4472:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4473:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4474:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
4475:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4476:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external interrupt line).
4477:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
4478:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         also set trigger polarity to rising edge
4479:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
4480:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
4481:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
4482:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
4483:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4484:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4485:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4486:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4487:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4488:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4489:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
4490:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
4491:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4492:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4493:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4494:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4495:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4496:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4497:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4498:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4499:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4500:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4501:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4502:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4503:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4504:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4505:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4506:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4507:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4508:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4509:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4510:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4511:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4512:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_OUT
4513:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_OUT
4514:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM3_OUT
4515:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4516:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4517:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4518:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/cc6JDs4t.s 			page 110


4519:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
4520:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4521:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4522:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4523:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
4524:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4525:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external interrupt line).
4526:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
4527:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or external, without detail
4528:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4529:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (equivalent to
4530:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
4531:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
4532:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4533:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4534:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
4535:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
4536:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4537:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4538:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4539:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4540:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4541:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4542:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4543:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4544:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4545:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4546:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4547:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4548:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4549:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4550:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4551:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4552:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4553:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4554:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4555:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4556:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4557:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_OUT
4558:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_OUT
4559:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM3_OUT
4560:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4561:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
4562:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4563:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
4564:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4565:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4566:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
4567:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS - 
4568:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4569:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
4570:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4571:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((TriggerSource
4572:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
4573:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
4574:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          );
4575:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc6JDs4t.s 			page 111


4576:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4577:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4578:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
4579:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             or external
4580:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
4581:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4582:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
4583:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
4584:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4585:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4586:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4587:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4588:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
4589:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4590:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
4591:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4592:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4593:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4594:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
4595:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4596:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4597:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4598:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4599:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4600:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
4601:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4602:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4603:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4604:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4605:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4606:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4607:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4608:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4609:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4610:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
4611:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4612:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4613:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4614:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4615:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4616:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4617:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4618:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4619:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4620:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4621:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4622:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4623:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef *ADCx)
4624:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4625:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4626:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4627:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4628:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4629:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4630:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function performs configuration of:
4631:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4632:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
ARM GAS  /tmp/cc6JDs4t.s 			page 112


4633:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4634:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4635:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4636:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4637:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4638:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4639:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4640:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4641:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4642:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4643:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4644:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4645:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4646:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4648:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4649:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4650:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4651:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4652:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4654:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4655:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function retrieves:
4657:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4658:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4660:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4661:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4662:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4663:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4664:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4665:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4666:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4667:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4668:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4669:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4670:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
4671:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4672:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4673:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4674:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4675:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4676:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4677:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4678:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number of ranks.
4679:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4680:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4681:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4682:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4683:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4684:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4685:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4686:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4687:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4688:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4689:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/cc6JDs4t.s 			page 113


4690:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4691:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4692:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4693:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4694:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4695:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4696:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number of ranks.
4697:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4698:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4699:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4700:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4701:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4702:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4703:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
4704:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4705:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4706:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4707:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4708:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4709:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4710:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence rank.
4711:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4712:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4713:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4714:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4715:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         enabled separately.
4716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some fast channels are available: fast analog inputs
4718:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
4719:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4720:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4721:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4722:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4723:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4724:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4725:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4726:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4727:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4728:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4729:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4730:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4731:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4732:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4733:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4734:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4735:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4736:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4737:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4739:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4740:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4741:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4742:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4743:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4744:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4745:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4746:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
ARM GAS  /tmp/cc6JDs4t.s 			page 114


4747:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4748:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4749:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4750:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4751:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4752:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4753:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4754:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4755:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
4757:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
4758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
4759:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
4760:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
4761:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
4762:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
4763:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
4764:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4765:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4766:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4767:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4768:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4770:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4771:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4772:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4773:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4774:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4775:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4776:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4777:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4778:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4779:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence rank.
4780:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4781:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4782:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4783:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4784:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4785:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4786:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4787:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4788:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4789:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           as parameter for another function.
4790:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4791:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           process the returned value with the helper macro
4792:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4793:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4794:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4795:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4796:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4797:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4798:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4799:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4800:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4801:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4802:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /tmp/cc6JDs4t.s 			page 115


4804:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4805:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4806:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4807:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4808:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4809:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4810:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4811:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4812:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4813:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4814:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4815:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4816:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4817:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4818:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4819:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4820:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4821:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4822:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4823:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4824:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4825:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4826:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
4827:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
4828:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
4829:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
4830:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
4831:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
4832:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
4833:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
4834:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
4835:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
4836:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4837:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4838:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4839:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4840:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4841:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <<
4842:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                     >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4843:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
4844:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4845:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4846:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4847:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4848:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         independent or from ADC group regular.
4849:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4850:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4851:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4852:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4853:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4854:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on ADC group injected.
4855:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4856:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4857:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         independent trigger.
4858:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4859:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4860:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
ARM GAS  /tmp/cc6JDs4t.s 			page 116


4861:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4862:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from ADC group regular.
4863:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4864:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4865:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4866:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4867:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4868:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
4869:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4870:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4871:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4872:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4873:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4874:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4875:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4876:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4877:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4878:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4879:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4880:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4881:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4882:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
4883:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         independent or from ADC group regular.
4884:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
4885:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4886:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4887:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4889:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
4891:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4892:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
4893:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4894:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4895:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4896:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
4897:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4898:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - group injected trigger
4899:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - sequencer length
4900:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - sequencer ranks
4901:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If contexts queue is disabled:
4902:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - only 1 sequence can be configured
4903:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           and is active perpetually.
4904:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If contexts queue is enabled:
4905:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - up to 2 contexts can be queued
4906:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
4907:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
4908:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
4909:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
4910:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
4911:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
4912:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
4913:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
4914:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
4915:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           into the queue).
4916:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
4917:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
ARM GAS  /tmp/cc6JDs4t.s 			page 117


4918:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
4919:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
4920:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
4921:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
4922:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
4923:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4924:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4925:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4926:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
4927:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
4928:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
4929:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4930:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
4931:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4932:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4933:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4934:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4935:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4936:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
4937:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4938:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
4939:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4940:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4941:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4942:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
4943:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
4944:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
4945:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4946:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4947:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4948:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4949:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4950:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4951:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(ADC_TypeDef *ADCx)
4952:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4953:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
4954:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4955:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4956:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4957:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
4958:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         contexts queue.
4959:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4960:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - group injected trigger
4961:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - sequencer length
4962:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - sequencer ranks
4963:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
4964:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
4965:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
4966:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         cannot be used):
4967:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
4968:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
4969:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
4970:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
4971:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
4972:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
4973:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4974:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
ARM GAS  /tmp/cc6JDs4t.s 			page 118


4975:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         enabled separately.
4976:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4977:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some fast channels are available: fast analog inputs
4978:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
4979:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4980:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4981:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4982:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4983:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
4984:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
4985:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
4986:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
4987:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
4988:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
4989:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
4990:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4991:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4992:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4993:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4994:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4995:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4996:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4997:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4998:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4999:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
5000:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
5001:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
5002:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
5003:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
5004:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
5005:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
5006:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
5007:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
5008:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
5009:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
5010:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
5011:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_OUT
5012:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_OUT
5013:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM3_OUT
5014:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
5015:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5016:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5017:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
5018:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5019:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
5020:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
5021:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
5022:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5023:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5024:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5025:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5026:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
5027:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5028:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5029:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5030:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5031:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
ARM GAS  /tmp/cc6JDs4t.s 			page 119


5032:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5033:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5034:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5035:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5036:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5037:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5038:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5039:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5040:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5041:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5042:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5043:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5044:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5045:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5046:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5047:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5048:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5049:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5050:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5051:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5052:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5053:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5054:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5055:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5056:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5057:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
5058:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5059:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5060:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5061:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5062:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5063:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5064:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5065:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5066:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5067:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5068:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5069:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5070:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5071:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5072:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5073:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5074:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5075:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5076:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5077:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5078:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5079:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5080:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5081:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5082:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5083:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5084:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5086:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5087:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5088:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
ARM GAS  /tmp/cc6JDs4t.s 			page 120


5089:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5090:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5091:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5092:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5093:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5094:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5095:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5096:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5097:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5098:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5099:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5100:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5101:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5102:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5103:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5104:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5105:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5106:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5107:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5108:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5109:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5110:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5111:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5112:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5113:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5114:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5115:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5116:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5117:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5118:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5119:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
5120:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5121:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5122:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5123:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5124:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5125:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5126:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5127:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5128:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5129:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5130:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5131:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5132:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5133:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5134:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5135:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5136:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5137:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5138:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5139:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5140:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5141:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5142:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5143:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5144:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5145:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
ARM GAS  /tmp/cc6JDs4t.s 			page 121


5146:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5147:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5148:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5149:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5150:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5151:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5152:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
5153:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t TriggerSource,
5154:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
5155:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
5156:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
5157:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
5158:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
5159:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
5160:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5161:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
5162:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
5163:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
5164:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
5165:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
5166:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
5167:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
5168:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
5169:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
5170:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
5171:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
5172:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
5173:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
5174:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
5175:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JL,
5176:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)        |
5177:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
5178:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5179:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5180:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5181:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5182:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SequencerNbRanks
5183:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             );
5184:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5185:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5186:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5187:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
5188:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5189:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5190:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
5191:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
5192:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5193:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5194:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5195:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5196:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5197:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5198:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5199:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5200:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         converted:
5201:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5202:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
ARM GAS  /tmp/cc6JDs4t.s 			page 122


5203:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         setting).
5204:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5205:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TS_temp, ...).
5206:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5207:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5208:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5209:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5210:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5211:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5212:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5213:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5214:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is required.
5215:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
5216:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5217:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5218:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5219:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
5220:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5221:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5222:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
5223:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5224:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5225:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5226:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5227:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5228:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5229:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5230:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5231:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5232:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5233:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
5234:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5235:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5236:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5237:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5238:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5239:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5240:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5241:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5242:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5243:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5244:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5245:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5246:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5247:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5248:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5249:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5250:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5251:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5252:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5253:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5254:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5255:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5256:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5257:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5258:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5259:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
ARM GAS  /tmp/cc6JDs4t.s 			page 123


5260:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5261:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5262:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5263:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5264:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5265:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5266:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5267:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5268:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5269:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5270:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5271:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
5272:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
5273:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5
5274:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_8CYCLES_5
5275:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_16CYCLES_5
5276:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_32CYCLES_5
5277:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_64CYCLES_5
5278:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_387CYCLES_5
5279:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_810CYCLES_5
5280:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5281:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5282:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
5283:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5284:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
5285:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
5286:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5287:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5288:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_M
5289:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(*preg,
5291:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5292:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5293:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5294:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5295:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5296:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5297:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5298:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5299:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5300:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5301:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5302:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5303:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5304:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5305:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5306:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5307:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5308:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5309:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5310:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
5311:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5312:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5313:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5314:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5315:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5316:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
ARM GAS  /tmp/cc6JDs4t.s 			page 124


5317:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5318:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5319:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5320:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5321:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5322:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5323:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5324:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5325:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5326:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5327:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5328:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5329:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5330:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5331:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5332:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5333:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5334:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5335:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5336:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5337:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5338:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5339:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5340:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5341:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5342:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5343:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5344:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5345:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5346:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5347:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5348:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5349:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5350:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5351:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5352:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5353:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5354:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5355:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5356:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5357:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5358:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
5359:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5
5360:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_8CYCLES_5
5361:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_16CYCLES_5
5362:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_32CYCLES_5
5363:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_64CYCLES_5
5364:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_387CYCLES_5
5365:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_810CYCLES_5
5366:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5367:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
5368:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5369:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
5370:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5371:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5372:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
5373:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
ARM GAS  /tmp/cc6JDs4t.s 			page 125


5374:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
5375:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5376:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5377:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5378:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
5379:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC channel.
5380:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
5381:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on ADC group regular or injected.
5382:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
5383:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
5384:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
5385:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
5386:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5387:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         available in differential mode.
5388:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5389:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         not available in differential mode.
5390:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5391:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5392:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some channels are internally fixed to single-ended inputs
5393:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         configuration:
5394:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC1: Channels 0, 6, 7, 8, 9, 13, 14, 15, 17, and 19
5395:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC2: Channels 0, 6, 7, 8, 9, 13, 14, 15 and 19
5396:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC3: Channels 0, 6, 7, 8, 9, 12, 16, 17, and 19
5397:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
5398:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
5399:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
5400:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5401:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5402:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
5403:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
5404:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5405:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
5406:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5407:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5408:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5409:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5410:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5411:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5412:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5413:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5414:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5415:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5417:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5419:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5420:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5421:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5422:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5423:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
5424:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
5425:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
5426:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5427:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5428:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
5429:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5430:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
ARM GAS  /tmp/cc6JDs4t.s 			page 126


5431:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5432:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5433:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5434:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
5435:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
5436:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->LTR2_DIFSEL,
5437:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5438:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SI
5439:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
5440:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
5441:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
5442:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->DIFSEL_RES12,
5443:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5444:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SI
5445:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
5446:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else  /* ADC_VER_V5_V90 */
5447:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5448:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5449:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5450:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
5451:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5452:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
5453:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
5454:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5455:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5456:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5457:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
5458:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC channel.
5459:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5460:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5461:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
5462:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
5463:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
5464:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
5465:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5466:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         available in differential mode.
5467:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5468:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         not available in differential mode.
5469:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5470:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5471:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some channels are internally fixed to single-ended inputs
5472:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         configuration:
5473:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC1: Channels 0, 6, 7, 8, 9, 13, 14, 15, 17, and 19
5474:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC2: Channels 0, 6, 7, 8, 9, 13, 14, 15 and 19
5475:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC3: Channels 0, 6, 7, 8, 9, 12, 16, 17, and 19
5476:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
5477:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
5478:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5479:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
5480:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5481:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
5482:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5483:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5484:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5485:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5486:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5487:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
ARM GAS  /tmp/cc6JDs4t.s 			page 127


5488:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5489:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5490:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5491:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5492:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5493:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5494:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5495:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5496:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5497:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
5498:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5499:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel)
5500:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5501:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)  
5502:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL_RES12, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5503:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else  
5504:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5505:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
5506:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5507:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5508:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5509:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
5510:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5511:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5512:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
5513:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
5514:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5515:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5516:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5517:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
5518:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
5519:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
5520:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
5521:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled.
5522:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
5523:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
5524:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
5525:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5526:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         instance:
5527:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5528:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5529:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5530:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5531:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC resolution configured).
5532:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5533:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5534:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5535:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5536:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             be selected. For example:
5537:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5538:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5539:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             groups regular and injected).
5540:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5541:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5542:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5543:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5544:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
ARM GAS  /tmp/cc6JDs4t.s 			page 128


5545:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             the 2 LSB are ignored.
5546:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5547:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5548:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5549:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
5550:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
5551:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
5552:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
5553:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
5554:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
5555:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
5556:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5557:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5558:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5559:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5560:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5561:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
5562:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5563:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5564:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5565:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5566:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5567:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5568:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5569:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5570:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5571:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5572:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5573:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5574:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5575:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5576:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5577:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5578:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5579:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5580:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5581:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5582:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5583:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5584:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5585:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5586:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5587:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5588:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5589:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5590:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5591:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5592:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5593:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5594:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5595:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5596:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5597:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5598:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5599:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5600:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5601:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
ARM GAS  /tmp/cc6JDs4t.s 			page 129


5602:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5603:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5604:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5605:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5606:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5607:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5608:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5609:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5610:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5611:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5612:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5613:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5614:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5615:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5616:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5617:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5618:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5619:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5620:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5621:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5622:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5623:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
5624:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
5625:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
5626:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
5627:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5628:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5629:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(1)
5630:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
5631:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
5632:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(1)
5633:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(1)
5634:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (1)
5635:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)
5636:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)
5637:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)
5638:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)
5639:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)
5640:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)
5641:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5642:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (0) On STM32H7, parameter available only on analog watchdog number: AWD1.\n
5643:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5644:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.
5645:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5646:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5648:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5649:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5650:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5651:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5652:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> AD
5654:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
5655:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(*preg,
5657:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5658:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              AWDChannelGroup & AWDy);
ARM GAS  /tmp/cc6JDs4t.s 			page 130


5659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5660:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5661:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5662:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5663:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5664:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5665:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5666:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5667:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5668:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5669:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5670:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           as parameter for another function.
5671:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5672:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           process the returned value with the helper macro
5673:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5674:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5675:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           one channel.
5676:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5677:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         instance:
5678:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5679:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5680:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5681:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5682:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC resolution configured).
5683:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5684:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5685:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5686:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5687:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             be selected. For example:
5688:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5689:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5690:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             groups regular and injected).
5691:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5692:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5693:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5694:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5695:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5696:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             the 2 LSB are ignored.
5697:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5698:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5699:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5700:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
5701:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5702:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5703:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5704:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5705:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5706:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5707:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5708:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5709:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5710:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5711:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5712:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5713:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5714:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5715:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
ARM GAS  /tmp/cc6JDs4t.s 			page 131


5716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             by bitfield.
5718:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5719:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5720:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5721:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5722:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5723:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5724:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5725:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5726:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5727:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5728:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5729:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5730:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5731:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5732:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5733:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5734:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5735:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5736:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5737:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5739:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5740:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5741:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5742:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5743:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5744:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5745:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5746:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5747:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5748:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5749:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5750:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5751:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5752:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5753:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5754:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5755:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5757:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5759:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5760:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5761:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5762:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5763:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5764:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5765:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5766:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5767:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5768:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5770:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5771:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5772:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
ARM GAS  /tmp/cc6JDs4t.s 			page 132


5773:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5774:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5775:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5776:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5777:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5778:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5779:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5780:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
5781:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
5782:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
5783:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5784:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (0) On STM32H7, parameter available only on analog watchdog number: AWD1.
5785:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5786:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
5787:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5788:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)
5789:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                             + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MA
5790:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5791:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
5792:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5793:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
5794:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5795:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5796:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* or a single channel.                                                     */
5797:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
5798:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
5799:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5800:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
5801:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
5802:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
5803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5804:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
5805:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
5806:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  )
5807:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
5808:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                 );
5809:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
5810:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       else
5811:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
5812:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a single channel */
5813:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5814:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
5815:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                 );
5816:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
5817:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
5818:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
5819:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
5820:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
5821:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
5822:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5823:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
5824:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
5825:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                 );
5826:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
5827:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       else
5828:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
5829:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a single channel */
ARM GAS  /tmp/cc6JDs4t.s 			page 133


5830:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5831:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5832:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
5833:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
5834:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                 );
5835:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
5836:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
5837:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
5838:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5839:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return AnalogWDMonitChannels;
5840:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5841:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5842:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5843:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
5844:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         high or low.
5845:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5846:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5847:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5848:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5849:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         instance:
5850:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5851:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5852:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5853:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5854:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC resolution configured).
5855:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5856:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5857:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5858:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5859:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             be selected. For example:
5860:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5861:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5862:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             groups regular and injected).
5863:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5864:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5865:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5866:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5867:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5868:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             the 2 LSB are ignored.
5869:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5870:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done
5871:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on oversampling intermediate computation (after ratio, before shift
5872:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         application): intermediate register bitfield [32:7]
5873:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (26 most significant bits).
5874:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5875:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5876:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5877:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either ADC groups regular or injected.
5878:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
5879:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
5880:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
5881:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
5882:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
5883:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
5884:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5885:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5886:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
ARM GAS  /tmp/cc6JDs4t.s 			page 134


5887:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5889:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5891:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5892:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
5893:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5894:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5895:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
5896:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5897:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
5898:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
5899:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
5900:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Set bits with content of parameter "AWDThresholdValue" with bits         */
5901:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* position in register and register position depending on parameters       */
5902:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* "AWDThresholdsHighLow" and "AWDy".                                       */
5903:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
5904:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* containing other bits reserved for other purpose.                        */
5905:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK)
5906:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5907:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
5908:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                AWDThresholdsHighLow,
5909:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_
5910:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
5911:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
5912:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
5913:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Set bits with content of parameter "AWDThresholdValue" with bits         */
5914:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* position in register and register position depending on parameters       */
5915:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* "AWDThresholdsHighLow" and "AWDy".                                       */
5916:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
5917:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* containing other bits reserved for other purpose.                        */
5918:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK
5919:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                         + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MASK) 
5920:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                         + (AWDThresholdsHighLow));
5921:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5922:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_LTR_LT, AWDThresholdValue);
5923:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
5924:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
5925:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
5926:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
5927:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
5928:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
5929:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5930:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> A
5931:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MASK) * 
5932:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + (AWDThresholdsHighLow));
5933:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5934:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(*preg, ADC_LTR_LT, AWDThresholdValue);
5935:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
5936:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5937:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5938:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5939:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
5940:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
5941:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         concatenated.
5942:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5943:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
ARM GAS  /tmp/cc6JDs4t.s 			page 135


5944:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
5945:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
5946:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
5947:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
5948:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
5949:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
5950:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
5951:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5952:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5953:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5954:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5955:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5956:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5957:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5958:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5959:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FFFFFF
5960:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
5961:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
5962:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5963:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
5964:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_
5965:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                             + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MA
5966:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                             + (AWDThresholdsHighLow));
5967:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5968:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg, ADC_LTR_LT));
5969:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
5970:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MAS
5971:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                    + ((AWDy & ADC_AWD_TR12_REGOFFSE
5972:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                    + (AWDThresholdsHighLow));
5973:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5974:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg, ADC_LTR_LT));
5975:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
5976:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5977:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5978:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
5979:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5980:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5981:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
5982:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         high and low. Applicable for devices STM32H72xx and STM32H73xx.
5983:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
5984:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
5985:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5986:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5987:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5988:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5989:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         instance:
5990:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5991:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5992:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5993:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5994:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC resolution configured).
5995:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5996:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5997:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5998:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5999:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             be selected. For example:
6000:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
ARM GAS  /tmp/cc6JDs4t.s 			page 136


6001:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6002:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             groups regular and injected).
6003:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6004:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6005:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6006:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6007:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6008:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             the 2 LSB are ignored.
6009:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
6010:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
6011:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
6012:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
6013:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
6014:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
6015:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6016:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6017:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6018:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6019:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6020:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
6021:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
6022:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6023:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6024:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
6025:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6026:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
6027:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
6028:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* "AWDy".                                                                  */
6029:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
6030:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6031:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
6032:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6033:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     uint32_t __IO *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK)
6034:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6035:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
6036:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_TR1_HT1 | ADC3_TR1_LT1,
6037:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                (AWDThresholdHighValue << ADC3_TR1_HT1_Pos) | AWDThresholdLowValue);
6038:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6039:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
6040:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6041:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK
6042:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                         + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MASK) 
6043:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                         + (LL_ADC_AWD_THRESHOLD_LOW));
6044:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg2 = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MAS
6045:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                          + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MASK)
6046:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                          + (LL_ADC_AWD_THRESHOLD_HIGH));
6047:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6048:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_LTR_LT, AWDThresholdLowValue);
6049:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg2, ADC_HTR_HT, AWDThresholdHighValue);
6050:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6051:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6052:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6053:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6054:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6055:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC analog watchdog filtering configuration
6056:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6057:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/cc6JDs4t.s 			page 137


6058:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6059:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
6060:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Applicable on ADC3 of devices STM32H72xx and STM32H73xx.
6061:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *  @note  On this STM32 series, this feature is only available on first
6062:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog (AWD1)
6063:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_SetAWDFilteringConfiguration
6064:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6065:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6066:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6067:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  FilteringConfig This parameter can be one of the following values:
6068:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6069:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6070:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6071:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6072:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6073:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6074:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6075:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6076:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6077:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6078:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t
6079:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6080:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
6081:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6082:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Prevent unused argument(s) compilation warning */
6083:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     (void)(AWDy);
6084:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->LTR1_TR1, ADC3_TR1_AWDFILT, FilteringConfig);
6085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6086:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6087:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6088:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6089:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC analog watchdog filtering configuration
6090:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *  @note  On this STM32 series, this feature is only available on first
6091:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog (AWD1)
6092:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Applicable on ADC3 of devices STM32H72xx and STM32H73xx.
6093:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_GetAWDFilteringConfiguration
6094:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6095:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6096:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6097:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be:
6098:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6099:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6100:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6101:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6102:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6103:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6104:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6105:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6106:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6107:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy)
6108:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6109:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
6110:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6111:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Prevent unused argument(s) compilation warning */
6112:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     (void)(AWDy);
6113:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->LTR1_TR1, ADC3_TR1_AWDFILT));
6114:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
ARM GAS  /tmp/cc6JDs4t.s 			page 138


6115:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
6116:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6117:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Function not available on this instance, return 0 */
6118:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
6119:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6120:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6121:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
6122:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6123:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
6124:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6125:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6126:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
6127:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
6128:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6129:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6130:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6131:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
6132:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6133:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6134:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6135:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6136:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6137:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6138:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (oversampler buffer reset).
6139:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6140:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6141:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6142:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
6143:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
6144:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
6145:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
6146:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6147:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
6148:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6149:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6150:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6151:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6152:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6153:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6154:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6155:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
6156:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6157:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
6158:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6159:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6160:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6161:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
6162:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6163:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6164:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6165:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6166:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6167:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6168:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (oversampler buffer reset).
6169:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
6170:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
6171:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
ARM GAS  /tmp/cc6JDs4t.s 			page 139


6172:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6173:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6174:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6175:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6176:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6177:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6178:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6179:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6180:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
6181:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6182:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
6183:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6184:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6185:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6186:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
6187:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on the selected ADC group.
6188:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6189:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6190:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are done from 1 trigger)
6191:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6192:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           needs a trigger)
6193:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6194:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6195:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6196:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
6197:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
6198:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
6199:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
6200:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
6201:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6202:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
6203:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6204:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6205:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6206:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6207:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
6208:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6209:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
6210:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6211:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6212:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6213:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
6214:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on the selected ADC group.
6215:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6216:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6217:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are done from 1 trigger)
6218:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6219:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           needs a trigger)
6220:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
6221:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6222:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6223:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6224:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6225:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6226:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
6227:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6228:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
ARM GAS  /tmp/cc6JDs4t.s 			page 140


6229:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6230:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6231:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6232:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC oversampling
6233:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
6234:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
6235:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ratio
6236:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - shift
6237:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6238:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6239:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6240:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
6241:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
6242:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
6243:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6244:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Ratio This parameter can be in the range from 1 to 1024.
6245:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
6246:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6247:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6248:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6249:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6250:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6251:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6252:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6253:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6254:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6255:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_9
6256:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_10
6257:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_11
6258:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6259:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6260:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
6261:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6262:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | (((Ratio - 1UL) << ADC_CFGR2_
6263:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6264:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6265:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6266:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
6267:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6268:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
6269:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6270:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Ratio This parameter can be in the from 1 to 1024.
6271:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
6272:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
6273:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6274:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (((uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR)) + (1UL << ADC_CFGR2_OVSR_Pos)) >> ADC_
6275:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6276:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6277:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6278:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
6279:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6280:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
6281:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6282:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
6283:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6284:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6285:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
ARM GAS  /tmp/cc6JDs4t.s 			page 141


6286:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6287:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6288:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6289:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6291:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6292:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_9
6293:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_10
6294:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_11
6295:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
6296:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
6297:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6298:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
6299:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6300:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6301:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6302:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
6303:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6304:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6305:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
6306:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
6307:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6308:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6309:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC boost mode.
6310:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6311:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6312:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC boost must be configured, without calibration on going, without conversion
6313:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on group regular.
6314:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR  BOOST      LL_ADC_SetBoostMode
6315:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6316:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  BoostMode This parameter can be one of the following values:
6317:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_6MHZ25
6318:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_12MHZ5
6319:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_20MHZ
6320:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_25MHZ
6321:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_50MHZ
6322:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6323:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6324:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetBoostMode(ADC_TypeDef *ADCx, uint32_t BoostMode)
6325:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6326:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
6327:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx != ADC3)
6328:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6329:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_BOOST, (BoostMode & ADC_CR_BOOST));
6330:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6331:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else   /* ADC_VER_V5_V90 */
6332:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Cut 1.x */
6333:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6334:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_BOOST_0, (BoostMode >> 2UL));
6335:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6336:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* Cut 2.x */
6337:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6338:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_BOOST, (BoostMode & ADC_CR_BOOST));
6339:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6340:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
6341:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6342:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 142


6343:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6344:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6345:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC boost mode.
6346:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6347:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6348:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC boost must be configured, without calibration on going, without conversion
6349:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on group regular.
6350:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR  BOOST      LL_ADC_GetBoostMode
6351:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6352:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: Boost disabled 1: Boost enabled
6353:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6354:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetBoostMode(ADC_TypeDef *ADCx)
6355:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6356:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Cut 1.x */
6357:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6358:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)READ_BIT(ADCx->CR, ADC_CR_BOOST_0);
6359:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6360:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* Cut 2.x */
6361:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6362:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return ((READ_BIT(ADCx->CR, ADC_CR_BOOST) == (ADC_CR_BOOST)) ? 1UL : 0UL);
6363:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6364:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6365:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6366:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6367:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
6368:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6369:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6370:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         either master or slave depending on hardware.
6371:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual.
6372:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6373:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6374:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6375:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6376:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance or by using helper macro
6377:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6378:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
6379:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6380:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6381:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
6382:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6383:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6384:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6385:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6386:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6387:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6388:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6389:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6390:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6391:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6392:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
6393:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6394:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
6395:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6396:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6397:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6398:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
6399:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
ARM GAS  /tmp/cc6JDs4t.s 			page 143


6400:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6401:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         either master or slave depending on hardware.
6402:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual.
6403:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
6404:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6405:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6406:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6407:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6408:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6409:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6410:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6411:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6412:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6413:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6414:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6415:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
 112              		.loc 2 6416 26 is_stmt 1 discriminator 4 view .LVU16
 113              	.LBB281:
6417:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
 114              		.loc 2 6418 3 discriminator 4 view .LVU17
 115              	.LBE281:
 116              	.LBE280:
1588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 117              		.loc 1 1593 17 is_stmt 0 discriminator 4 view .LVU18
 118 001a 3469     		ldr	r4, [r6, #16]
 119              	.LBB284:
 120              	.LBB282:
 121              		.loc 2 6418 21 discriminator 4 view .LVU19
 122 001c 9768     		ldr	r7, [r2, #8]
 123              	.LBE282:
 124              	.LBE284:
 125              		.loc 1 1593 6 discriminator 4 view .LVU20
 126 001e 082C     		cmp	r4, #8
 127              	.LBB285:
 128              	.LBB283:
 129              		.loc 2 6418 10 discriminator 4 view .LVU21
 130 0020 07F01F07 		and	r7, r7, #31
 131              	.LVL3:
 132              		.loc 2 6418 10 discriminator 4 view .LVU22
 133              	.LBE283:
 134              	.LBE285:
1590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 135              		.loc 1 1590 3 is_stmt 1 discriminator 4 view .LVU23
 136              		.loc 1 1593 3 discriminator 4 view .LVU24
 137              		.loc 1 1593 6 is_stmt 0 discriminator 4 view .LVU25
 138 0024 0AD0     		beq	.L7
1594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_Flag_End = ADC_FLAG_EOS;
1596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
ARM GAS  /tmp/cc6JDs4t.s 			page 144


1598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* each conversion:                                                       */
1602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 139              		.loc 1 1606 5 is_stmt 1 view .LVU26
 140              		.loc 1 1606 31 is_stmt 0 view .LVU27
 141 0026 092F     		cmp	r7, #9
 142 0028 4DD8     		bhi	.L8
 143 002a 40F22121 		movw	r1, #545
 144              	.LVL4:
 145              		.loc 1 1606 31 view .LVU28
 146 002e F940     		lsrs	r1, r1, r7
1607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 147              		.loc 1 1608 9 view .LVU29
 148 0030 C907     		lsls	r1, r1, #31
 149 0032 48D5     		bpl	.L8
1609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
1610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Check DMNGT bit in handle ADC CFGR register */
1612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMNGT_0) != 0UL)
 150              		.loc 1 1612 7 is_stmt 1 view .LVU30
 151              		.loc 1 1612 11 is_stmt 0 view .LVU31
 152 0034 DB68     		ldr	r3, [r3, #12]
 153              		.loc 1 1612 10 view .LVU32
 154 0036 DA07     		lsls	r2, r3, #31
 155 0038 49D4     		bmi	.L40
 156              	.L26:
1613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_ERROR;
1616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
 157              		.loc 1 1619 22 view .LVU33
 158 003a 0424     		movs	r4, #4
 159              	.L7:
 160              	.LVL5:
1620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
1623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Check ADC DMA mode in multimode on ADC group regular */
1625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_REG_
1626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_ERROR;
1629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
ARM GAS  /tmp/cc6JDs4t.s 			page 145


1633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Get tick count */
1638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tickstart = HAL_GetTick();
 161              		.loc 1 1638 3 is_stmt 1 view .LVU34
 162              		.loc 1 1638 15 is_stmt 0 view .LVU35
 163 003c FFF7FEFF 		bl	HAL_GetTick
 164              	.LVL6:
 165              		.loc 1 1638 15 view .LVU36
 166 0040 3268     		ldr	r2, [r6]
 167 0042 8046     		mov	r8, r0
 168              	.LVL7:
1639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 169              		.loc 1 1641 3 is_stmt 1 view .LVU37
 170              		.loc 1 1641 9 is_stmt 0 view .LVU38
 171 0044 01E0     		b	.L11
 172              	.LVL8:
 173              	.L15:
1642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 174              		.loc 1 1644 8 view .LVU39
 175 0046 6B1C     		adds	r3, r5, #1
 176 0048 29D1     		bne	.L41
 177              	.L11:
 178              		.loc 1 1644 5 is_stmt 1 view .LVU40
1641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 179              		.loc 1 1641 9 view .LVU41
1641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 180              		.loc 1 1641 25 is_stmt 0 view .LVU42
 181 004a 1368     		ldr	r3, [r2]
1641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 182              		.loc 1 1641 9 view .LVU43
 183 004c 2342     		tst	r3, r4
 184 004e FAD0     		beq	.L15
1645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
1647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
1650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Process unlocked */
1655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
1656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           return HAL_TIMEOUT;
1658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
1659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 146


1663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Update ADC state machine */
1664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 185              		.loc 1 1664 3 is_stmt 1 view .LVU44
 186 0050 736D     		ldr	r3, [r6, #84]
 187 0052 43F40073 		orr	r3, r3, #512
 188 0056 7365     		str	r3, [r6, #84]
1665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
 189              		.loc 1 1668 3 view .LVU45
 190              	.LVL9:
 191              	.LBB286:
 192              	.LBI286:
3801:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 193              		.loc 2 3801 26 view .LVU46
 194              	.LBB287:
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 195              		.loc 2 3803 3 view .LVU47
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 196              		.loc 2 3803 12 is_stmt 0 view .LVU48
 197 0058 D368     		ldr	r3, [r2, #12]
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 198              		.loc 2 3803 103 view .LVU49
 199 005a 13F4406F 		tst	r3, #3072
 200 005e 0FD1     		bne	.L17
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 201              		.loc 2 3803 103 view .LVU50
 202              	.LBE287:
 203              	.LBE286:
1669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
 204              		.loc 1 1669 7 view .LVU51
 205 0060 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
 206 0062 6BB9     		cbnz	r3, .L17
1670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      )
1671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check whether end of sequence is reached */
1673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
 207              		.loc 1 1673 5 is_stmt 1 view .LVU52
 208              		.loc 1 1673 9 is_stmt 0 view .LVU53
 209 0064 1368     		ldr	r3, [r2]
 210              		.loc 1 1673 8 view .LVU54
 211 0066 1807     		lsls	r0, r3, #28
 212 0068 0AD5     		bpl	.L17
1674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 213              		.loc 1 1676 7 is_stmt 1 view .LVU55
 214 006a 736D     		ldr	r3, [r6, #84]
 215 006c 23F48073 		bic	r3, r3, #256
 216 0070 7365     		str	r3, [r6, #84]
1677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 217              		.loc 1 1678 7 view .LVU56
 218              		.loc 1 1678 16 is_stmt 0 view .LVU57
 219 0072 736D     		ldr	r3, [r6, #84]
 220              		.loc 1 1678 10 view .LVU58
ARM GAS  /tmp/cc6JDs4t.s 			page 147


 221 0074 D904     		lsls	r1, r3, #19
 222 0076 03D4     		bmi	.L17
1679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 223              		.loc 1 1680 9 is_stmt 1 view .LVU59
 224 0078 736D     		ldr	r3, [r6, #84]
 225 007a 43F00103 		orr	r3, r3, #1
 226 007e 7365     		str	r3, [r6, #84]
 227              	.L17:
1681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave        */
1686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* in function of multimode state (for devices with multimode               */
1687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* available).                                                              */
1688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 228              		.loc 1 1688 3 view .LVU60
 229              		.loc 1 1688 8 is_stmt 0 view .LVU61
 230 0080 224B     		ldr	r3, .L44+8
 231 0082 9A42     		cmp	r2, r3
 232 0084 2ED0     		beq	.L19
 233              	.LVL10:
 234              	.L23:
1689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      )
1693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Retrieve handle ADC CFGR register */
1695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 235              		.loc 1 1695 5 is_stmt 1 view .LVU62
 236              		.loc 1 1695 14 is_stmt 0 view .LVU63
 237 0086 D068     		ldr	r0, [r2, #12]
 238              	.LVL11:
 239              	.L20:
1696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Retrieve Master ADC CFGR register */
1700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
1702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Clear polled flag */
1705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (tmp_Flag_End == ADC_FLAG_EOS)
 240              		.loc 1 1705 3 is_stmt 1 view .LVU64
 241              		.loc 1 1705 6 is_stmt 0 view .LVU65
 242 0088 082C     		cmp	r4, #8
 243 008a 27D0     		beq	.L42
1706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS);
1708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear end of conversion EOC flag of regular group if low power feature */
1712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature    */
ARM GAS  /tmp/cc6JDs4t.s 			page 148


1713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* until data register is read using function HAL_ADC_GetValue().         */
1714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
 244              		.loc 1 1714 5 is_stmt 1 view .LVU66
 245              		.loc 1 1714 8 is_stmt 0 view .LVU67
 246 008c 10F48040 		ands	r0, r0, #16384
 247              	.LVL12:
 248              		.loc 1 1714 8 view .LVU68
 249 0090 34D1     		bne	.L27
1715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 250              		.loc 1 1716 7 is_stmt 1 view .LVU69
 251 0092 0C23     		movs	r3, #12
 252 0094 1360     		str	r3, [r2]
 253              	.L38:
1717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return HAL_OK;
1722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 254              		.loc 1 1722 1 is_stmt 0 view .LVU70
 255 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 256              	.LVL13:
 257              	.L28:
1587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 258              		.loc 1 1587 35 view .LVU71
 259 009a 1D4A     		ldr	r2, .L44+12
 260 009c BDE7     		b	.L5
 261              	.LVL14:
 262              	.L41:
1646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 263              		.loc 1 1646 7 is_stmt 1 view .LVU72
1646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 264              		.loc 1 1646 13 is_stmt 0 view .LVU73
 265 009e FFF7FEFF 		bl	HAL_GetTick
 266              	.LVL15:
1649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 267              		.loc 1 1649 9 is_stmt 1 view .LVU74
1646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 268              		.loc 1 1646 27 is_stmt 0 view .LVU75
 269 00a2 A0EB0800 		sub	r0, r0, r8
 270 00a6 3268     		ldr	r2, [r6]
1646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 271              		.loc 1 1646 51 view .LVU76
 272 00a8 A842     		cmp	r0, r5
 273 00aa 01D8     		bhi	.L29
 274 00ac 002D     		cmp	r5, #0
 275 00ae CCD1     		bne	.L11
 276              	.L29:
1649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 277              		.loc 1 1649 27 view .LVU77
 278 00b0 1368     		ldr	r3, [r2]
1649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 279              		.loc 1 1649 11 view .LVU78
 280 00b2 2340     		ands	r3, r3, r4
 281 00b4 C9D1     		bne	.L11
1652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 149


 282              		.loc 1 1652 11 is_stmt 1 view .LVU79
 283 00b6 726D     		ldr	r2, [r6, #84]
1657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 284              		.loc 1 1657 18 is_stmt 0 view .LVU80
 285 00b8 0320     		movs	r0, #3
1655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 286              		.loc 1 1655 11 view .LVU81
 287 00ba 86F85030 		strb	r3, [r6, #80]
1652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 288              		.loc 1 1652 11 view .LVU82
 289 00be 42F00402 		orr	r2, r2, #4
 290 00c2 7265     		str	r2, [r6, #84]
1655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 291              		.loc 1 1655 11 is_stmt 1 view .LVU83
1655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 292              		.loc 1 1655 11 view .LVU84
1655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 293              		.loc 1 1655 11 view .LVU85
1657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 294              		.loc 1 1657 11 view .LVU86
1657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 295              		.loc 1 1657 18 is_stmt 0 view .LVU87
 296 00c4 E7E7     		b	.L38
 297              	.LVL16:
 298              	.L8:
1625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 299              		.loc 1 1625 7 is_stmt 1 discriminator 4 view .LVU88
 300              	.LBB288:
 301              	.LBI288:
6419:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6420:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6421:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6422:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
6423:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or transfer by DMA.
6424:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6425:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6426:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         DMA transfer settings.
6427:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6428:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6429:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6430:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6431:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6432:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions) is reached.
6433:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6434:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6435:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6436:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions).
6437:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6438:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6439:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode non-circular:
6440:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6441:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6442:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6443:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6444:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6445:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6446:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
ARM GAS  /tmp/cc6JDs4t.s 			page 150


6447:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6448:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6449:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6450:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6451:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6452:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6453:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
6454:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
6455:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DAMDF          LL_ADC_GetMultiDMATransfer\n
6456:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6457:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6458:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
6459:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6460:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_32_10B
6461:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_8B
6462:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6463:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6464:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
6465:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6466:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DAMDF, MultiDMATransfer);
6467:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6468:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6469:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6470:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
6471:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or transfer by DMA.
6472:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6473:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6474:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         DMA transfer settings.
6475:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6476:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6477:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6478:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6479:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6480:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions) is reached.
6481:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6482:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6483:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6484:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions).
6485:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6486:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6487:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode non-circular:
6488:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6489:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6490:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6491:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6492:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6493:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6494:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6495:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6496:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6497:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6498:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6499:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DAMDF          LL_ADC_GetMultiDMATransfer\n
6500:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6501:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6502:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6503:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
ARM GAS  /tmp/cc6JDs4t.s 			page 151


6504:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_32_10B
6505:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_8B
6506:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6507:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON)
 302              		.loc 2 6507 26 discriminator 4 view .LVU89
 303              	.LBB289:
6508:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6509:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DAMDF));
 304              		.loc 2 6509 3 discriminator 4 view .LVU90
 305              		.loc 2 6509 21 is_stmt 0 discriminator 4 view .LVU91
 306 00c6 9368     		ldr	r3, [r2, #8]
 307              	.LVL17:
 308              		.loc 2 6509 21 discriminator 4 view .LVU92
 309              	.LBE289:
 310              	.LBE288:
1625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 311              		.loc 1 1625 10 discriminator 4 view .LVU93
 312 00c8 13F4404F 		tst	r3, #49152
 313 00cc B5D0     		beq	.L26
 314              	.L40:
1627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_ERROR;
 315              		.loc 1 1627 9 is_stmt 1 view .LVU94
 316 00ce 736D     		ldr	r3, [r6, #84]
1628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 317              		.loc 1 1628 16 is_stmt 0 view .LVU95
 318 00d0 0120     		movs	r0, #1
 319              	.LVL18:
1627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_ERROR;
 320              		.loc 1 1627 9 view .LVU96
 321 00d2 43F02003 		orr	r3, r3, #32
 322 00d6 7365     		str	r3, [r6, #84]
1628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 323              		.loc 1 1628 9 is_stmt 1 view .LVU97
 324              		.loc 1 1722 1 is_stmt 0 view .LVU98
 325 00d8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 326              	.LVL19:
 327              	.L42:
1707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 328              		.loc 1 1707 5 is_stmt 1 view .LVU99
1721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 329              		.loc 1 1721 10 is_stmt 0 view .LVU100
 330 00dc 0020     		movs	r0, #0
 331              	.LVL20:
1707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 332              		.loc 1 1707 5 view .LVU101
 333 00de 1460     		str	r4, [r2]
 334              		.loc 1 1722 1 view .LVU102
 335 00e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 336              	.LVL21:
 337              	.L19:
1689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 338              		.loc 1 1689 32 view .LVU103
 339 00e4 092F     		cmp	r7, #9
 340 00e6 02D9     		bls	.L43
 341              	.LVL22:
 342              	.L22:
1700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
ARM GAS  /tmp/cc6JDs4t.s 			page 152


 343              		.loc 1 1700 5 is_stmt 1 discriminator 4 view .LVU104
1701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 344              		.loc 1 1701 5 discriminator 4 view .LVU105
1701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 345              		.loc 1 1701 14 is_stmt 0 discriminator 4 view .LVU106
 346 00e8 064B     		ldr	r3, .L44
 347 00ea D868     		ldr	r0, [r3, #12]
 348              	.LVL23:
1701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 349              		.loc 1 1701 14 discriminator 4 view .LVU107
 350 00ec CCE7     		b	.L20
 351              	.LVL24:
 352              	.L43:
1689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 353              		.loc 1 1689 32 view .LVU108
 354 00ee 40F22123 		movw	r3, #545
 355 00f2 23FA07F7 		lsr	r7, r3, r7
 356              	.LVL25:
1691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      )
 357              		.loc 1 1691 7 view .LVU109
 358 00f6 FB07     		lsls	r3, r7, #31
 359 00f8 C5D4     		bmi	.L23
 360 00fa F5E7     		b	.L22
 361              	.L27:
1721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 362              		.loc 1 1721 10 view .LVU110
 363 00fc 0020     		movs	r0, #0
 364              		.loc 1 1722 1 view .LVU111
 365 00fe BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 366              	.LVL26:
 367              	.L45:
 368              		.loc 1 1722 1 view .LVU112
 369 0102 00BF     		.align	2
 370              	.L44:
 371 0104 00200240 		.word	1073881088
 372 0108 00630258 		.word	1476551424
 373 010c 00210240 		.word	1073881344
 374 0110 00230240 		.word	1073881856
 375              		.cfi_endproc
 376              	.LFE337:
 378              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 379              		.align	1
 380              		.p2align 2,,3
 381              		.global	HAL_ADC_PollForEvent
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu fpv5-d16
 387              	HAL_ADC_PollForEvent:
 388              	.LVL27:
 389              	.LFB338:
1723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Poll for ADC event.
1726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
1727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param EventType the ADC event type.
1728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/cc6JDs4t.s 			page 153


1729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_JQOVF_EVENT  ADC Injected context queue overflow event
1735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
1743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 390              		.loc 1 1745 1 is_stmt 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
1746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 394              		.loc 1 1746 3 view .LVU114
1747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 395              		.loc 1 1749 3 view .LVU115
1750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 396              		.loc 1 1750 3 view .LVU116
1751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Get tick count */
1753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tickstart = HAL_GetTick();
 397              		.loc 1 1753 3 view .LVU117
1745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 398              		.loc 1 1745 1 is_stmt 0 view .LVU118
 399 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 400              	.LCFI1:
 401              		.cfi_def_cfa_offset 24
 402              		.cfi_offset 3, -24
 403              		.cfi_offset 4, -20
 404              		.cfi_offset 5, -16
 405              		.cfi_offset 6, -12
 406              		.cfi_offset 7, -8
 407              		.cfi_offset 14, -4
1745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 408              		.loc 1 1745 1 view .LVU119
 409 0002 0646     		mov	r6, r0
 410 0004 1546     		mov	r5, r2
 411 0006 0C46     		mov	r4, r1
 412              		.loc 1 1753 15 view .LVU120
 413 0008 FFF7FEFF 		bl	HAL_GetTick
 414              	.LVL28:
 415              		.loc 1 1753 15 view .LVU121
 416 000c 3268     		ldr	r2, [r6]
 417 000e 0746     		mov	r7, r0
 418              	.LVL29:
1754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 154


1755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check selected event flag */
1756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 419              		.loc 1 1756 3 is_stmt 1 view .LVU122
 420              		.loc 1 1756 9 is_stmt 0 view .LVU123
 421 0010 01E0     		b	.L48
 422              	.LVL30:
 423              	.L53:
1757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 424              		.loc 1 1759 8 view .LVU124
 425 0012 6B1C     		adds	r3, r5, #1
 426 0014 23D1     		bne	.L66
 427              	.L48:
 428              		.loc 1 1759 5 is_stmt 1 view .LVU125
1756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 429              		.loc 1 1756 9 view .LVU126
1756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 430              		.loc 1 1756 10 is_stmt 0 view .LVU127
 431 0016 1368     		ldr	r3, [r2]
1756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 432              		.loc 1 1756 9 view .LVU128
 433 0018 34EA0303 		bics	r3, r4, r3
 434 001c F9D1     		bne	.L53
1760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
1762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if(__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
1765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Process unlocked */
1770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
1771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           return HAL_TIMEOUT;
1773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
1774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   switch (EventType)
 435              		.loc 1 1778 3 is_stmt 1 view .LVU129
 436 001e B4F5807F 		cmp	r4, #256
 437 0022 31D0     		beq	.L54
 438 0024 10D9     		bls	.L67
 439 0026 B4F5007F 		cmp	r4, #512
 440 002a 34D0     		beq	.L59
 441 002c B4F5806F 		cmp	r4, #1024
 442 0030 38D1     		bne	.L58
1779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* End Of Sampling event */
1781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 155


1785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
1789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* For example:                                                             */
1795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     case ADC_AWD_EVENT:
1801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
1806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
1808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     case ADC_AWD2_EVENT:
1811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
1818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     case ADC_AWD3_EVENT:
1821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
1828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Injected context queue overflow event */
1830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     case ADC_JQOVF_EVENT:
1831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 443              		.loc 1 1832 7 view .LVU130
 444 0032 736D     		ldr	r3, [r6, #84]
1833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC error code to Injected context queue overflow */
1835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
1836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear ADC Injected context queue overflow flag */
1838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
1839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 156


1840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
1841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Overrun event */
1843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* considered as an error.                                                */
1846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* overrun ")                                                             */
1848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC state */
1851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC error code to overrun */
1854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
1860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            as OVR is cleared. */
1861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
1864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return HAL_OK;
 445              		.loc 1 1867 10 is_stmt 0 view .LVU131
 446 0034 0020     		movs	r0, #0
1832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 447              		.loc 1 1832 7 view .LVU132
 448 0036 43F48043 		orr	r3, r3, #16384
 449 003a 7365     		str	r3, [r6, #84]
1835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 450              		.loc 1 1835 7 is_stmt 1 view .LVU133
 451 003c B36D     		ldr	r3, [r6, #88]
 452 003e 43F00803 		orr	r3, r3, #8
 453 0042 B365     		str	r3, [r6, #88]
1838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 454              		.loc 1 1838 7 view .LVU134
 455 0044 1460     		str	r4, [r2]
1840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 456              		.loc 1 1840 7 view .LVU135
1868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 457              		.loc 1 1868 1 is_stmt 0 view .LVU136
 458 0046 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 459              	.LVL31:
 460              	.L67:
1778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 461              		.loc 1 1778 3 view .LVU137
 462 0048 022C     		cmp	r4, #2
 463 004a 36D0     		beq	.L56
 464 004c 802C     		cmp	r4, #128
 465 004e 29D1     		bne	.L58
1802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 466              		.loc 1 1802 7 is_stmt 1 view .LVU138
ARM GAS  /tmp/cc6JDs4t.s 			page 157


 467 0050 736D     		ldr	r3, [r6, #84]
1867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 468              		.loc 1 1867 10 is_stmt 0 view .LVU139
 469 0052 0020     		movs	r0, #0
1802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 470              		.loc 1 1802 7 view .LVU140
 471 0054 43F48033 		orr	r3, r3, #65536
 472 0058 7365     		str	r3, [r6, #84]
1805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 473              		.loc 1 1805 7 is_stmt 1 view .LVU141
 474 005a 1460     		str	r4, [r2]
1807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 475              		.loc 1 1807 7 view .LVU142
 476              		.loc 1 1868 1 is_stmt 0 view .LVU143
 477 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 478              	.LVL32:
 479              	.L66:
1761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 480              		.loc 1 1761 7 is_stmt 1 view .LVU144
1761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 481              		.loc 1 1761 13 is_stmt 0 view .LVU145
 482 005e FFF7FEFF 		bl	HAL_GetTick
 483              	.LVL33:
1764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 484              		.loc 1 1764 9 is_stmt 1 view .LVU146
1761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 485              		.loc 1 1761 27 is_stmt 0 view .LVU147
 486 0062 C01B     		subs	r0, r0, r7
 487 0064 3268     		ldr	r2, [r6]
1761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 488              		.loc 1 1761 51 view .LVU148
 489 0066 A842     		cmp	r0, r5
 490 0068 01D8     		bhi	.L62
 491 006a 002D     		cmp	r5, #0
 492 006c D3D1     		bne	.L48
 493              	.L62:
1764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 494              		.loc 1 1764 12 view .LVU149
 495 006e 1368     		ldr	r3, [r2]
1764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 496              		.loc 1 1764 11 view .LVU150
 497 0070 34EA0303 		bics	r3, r4, r3
 498 0074 CFD0     		beq	.L48
1767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 499              		.loc 1 1767 11 is_stmt 1 view .LVU151
 500 0076 736D     		ldr	r3, [r6, #84]
1770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 501              		.loc 1 1770 11 is_stmt 0 view .LVU152
 502 0078 0022     		movs	r2, #0
1772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 503              		.loc 1 1772 18 view .LVU153
 504 007a 0320     		movs	r0, #3
1767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 505              		.loc 1 1767 11 view .LVU154
 506 007c 43F00403 		orr	r3, r3, #4
1770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 507              		.loc 1 1770 11 view .LVU155
ARM GAS  /tmp/cc6JDs4t.s 			page 158


 508 0080 86F85020 		strb	r2, [r6, #80]
1767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 509              		.loc 1 1767 11 view .LVU156
 510 0084 7365     		str	r3, [r6, #84]
1770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 511              		.loc 1 1770 11 is_stmt 1 view .LVU157
1770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 512              		.loc 1 1770 11 view .LVU158
1770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 513              		.loc 1 1770 11 view .LVU159
1772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 514              		.loc 1 1772 11 view .LVU160
 515              		.loc 1 1868 1 is_stmt 0 view .LVU161
 516 0086 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 517              	.LVL34:
 518              	.L54:
1812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 519              		.loc 1 1812 7 is_stmt 1 view .LVU162
 520 0088 736D     		ldr	r3, [r6, #84]
1867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 521              		.loc 1 1867 10 is_stmt 0 view .LVU163
 522 008a 0020     		movs	r0, #0
1812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 523              		.loc 1 1812 7 view .LVU164
 524 008c 43F40033 		orr	r3, r3, #131072
 525 0090 7365     		str	r3, [r6, #84]
1815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 526              		.loc 1 1815 7 is_stmt 1 view .LVU165
 527 0092 1460     		str	r4, [r2]
1817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 528              		.loc 1 1817 7 view .LVU166
 529              		.loc 1 1868 1 is_stmt 0 view .LVU167
 530 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 531              	.LVL35:
 532              	.L59:
1822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 533              		.loc 1 1822 7 is_stmt 1 view .LVU168
 534 0096 736D     		ldr	r3, [r6, #84]
1867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 535              		.loc 1 1867 10 is_stmt 0 view .LVU169
 536 0098 0020     		movs	r0, #0
1822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 537              		.loc 1 1822 7 view .LVU170
 538 009a 43F48023 		orr	r3, r3, #262144
 539 009e 7365     		str	r3, [r6, #84]
1825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 540              		.loc 1 1825 7 is_stmt 1 view .LVU171
 541 00a0 1460     		str	r4, [r2]
1827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 542              		.loc 1 1827 7 view .LVU172
 543              		.loc 1 1868 1 is_stmt 0 view .LVU173
 544 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 545              	.LVL36:
 546              	.L58:
1848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 547              		.loc 1 1848 7 is_stmt 1 view .LVU174
1848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
ARM GAS  /tmp/cc6JDs4t.s 			page 159


 548              		.loc 1 1848 10 is_stmt 0 view .LVU175
 549 00a4 306B     		ldr	r0, [r6, #48]
 550 00a6 78B9     		cbnz	r0, .L61
1851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 551              		.loc 1 1851 9 is_stmt 1 view .LVU176
 552 00a8 736D     		ldr	r3, [r6, #84]
 553 00aa 43F48063 		orr	r3, r3, #1024
 554 00ae 7365     		str	r3, [r6, #84]
1854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 555              		.loc 1 1854 9 view .LVU177
 556 00b0 B36D     		ldr	r3, [r6, #88]
 557 00b2 43F00203 		orr	r3, r3, #2
 558 00b6 B365     		str	r3, [r6, #88]
 559              		.loc 1 1868 1 is_stmt 0 view .LVU178
 560 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 561              	.LVL37:
 562              	.L56:
1783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 563              		.loc 1 1783 7 is_stmt 1 view .LVU179
 564 00ba 736D     		ldr	r3, [r6, #84]
1867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 565              		.loc 1 1867 10 is_stmt 0 view .LVU180
 566 00bc 0020     		movs	r0, #0
1783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 567              		.loc 1 1783 7 view .LVU181
 568 00be 43F40063 		orr	r3, r3, #2048
 569 00c2 7365     		str	r3, [r6, #84]
1786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 570              		.loc 1 1786 7 is_stmt 1 view .LVU182
 571 00c4 1460     		str	r4, [r2]
1788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 572              		.loc 1 1788 7 view .LVU183
 573              		.loc 1 1868 1 is_stmt 0 view .LVU184
 574 00c6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 575              	.LVL38:
 576              	.L61:
1861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 577              		.loc 1 1861 9 is_stmt 1 view .LVU185
 578 00c8 1023     		movs	r3, #16
1867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 579              		.loc 1 1867 10 is_stmt 0 view .LVU186
 580 00ca 0020     		movs	r0, #0
1861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 581              		.loc 1 1861 9 view .LVU187
 582 00cc 1360     		str	r3, [r2]
 583              		.loc 1 1868 1 view .LVU188
 584 00ce F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 585              		.loc 1 1868 1 view .LVU189
 586              		.cfi_endproc
 587              	.LFE338:
 589              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 590              		.align	1
 591              		.p2align 2,,3
 592              		.global	HAL_ADC_GetValue
 593              		.syntax unified
 594              		.thumb
 595              		.thumb_func
ARM GAS  /tmp/cc6JDs4t.s 			page 160


 596              		.fpu fpv5-d16
 598              	HAL_ADC_GetValue:
 599              	.LVL39:
 600              	.LFB343:
1869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         OVR overrun.
1875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         HAL_ADC_Start_IT() must be called for ADC Slave first, then for
1878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         ADC Master.
1879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For ADC Slave, ADC is enabled only (conversion is not started).
1880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For ADC Master, ADC is enabled and multimode conversion is started.
1881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         mode), the user must:
1887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
1891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
1892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Process locked */
1906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_LOCK(hadc);
1907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Enable the ADC peripheral */
1909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state                                                        */
1915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
ARM GAS  /tmp/cc6JDs4t.s 			page 161


1922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
1927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC error code */
1932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
1934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Reset all ADC error code fields */
1941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
1949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
1958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
1962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         default:
1964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
1966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
ARM GAS  /tmp/cc6JDs4t.s 			page 162


1979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* trigger event.                                                       */
1981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
1990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Enable as well injected interruptions in case
1997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            allows to start regular and injected conversions when JAUTO is
1999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            set with a single call to HAL_ADC_Start_IT() */
2000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
2001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
2003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
2004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
2005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
2006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
2007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             default:
2008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
2009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
2010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
2011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Start ADC group regular conversion */
2015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
2016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
2020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
2022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            are enabled nevertheless (for same reason as above) */
2023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
2025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* First, update Slave State in setting HAL_ADC_STATE_INJ_BUSY bit
2027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              and in resetting HAL_ADC_STATE_INJ_EOC bit */
2028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
2029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
2030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
2031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
2033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
2034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
2035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
ARM GAS  /tmp/cc6JDs4t.s 			page 163


2036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
2037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             default:
2038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
2039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
2040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
2041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
2046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
2048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
2049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
2053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
2055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
2058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
2059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
2064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
2065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
2067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
2069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process locked */
2076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_LOCK(hadc);
2077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
2079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
2083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
2085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
2086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
2087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
2090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
ARM GAS  /tmp/cc6JDs4t.s 			page 164


2093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
2095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
2102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
2105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
2106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
2110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
2111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
2112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
2113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available): HAL_ADC_Start_DMA()
2114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         is designed for single-ADC mode only. For multimode, the dedicated
2115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         HAL_ADCEx_MultiModeStart_DMA() function must be used.
2116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param pData Destination Buffer address.
2118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
2119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
2120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
2122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
2125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
2130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Process locked */
2133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_LOCK(hadc);
2134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Ensure that multimode regular conversions are not enabled.   */
2136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Otherwise, dedicated API HAL_ADCEx_MultiModeStart_DMA() must be used.  */
2137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
2141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Enable the ADC peripheral */
2143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
2144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Start conversion if ADC is effectively enabled */
2146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (tmp_hal_status == HAL_OK)
2147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC state                                                        */
2149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* - Clear state bitfield related to regular group conversion results   */
ARM GAS  /tmp/cc6JDs4t.s 			page 165


2150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* - Set state bitfield related to regular operation                    */
2151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
2152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
2153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY);
2154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
2156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           - if ADC instance is master or if multimode feature is not available
2157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           - if multimode setting is disabled (ADC instance slave in independent mode) */
2158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            )
2161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Check if a conversion is on going on ADC group injected */
2166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
2167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Reset ADC error code fields related to regular conversions only */
2169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
2170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
2172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Reset all ADC error code fields */
2174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ADC_CLEAR_ERRORCODE(hadc);
2175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set the DMA transfer complete callback */
2178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
2179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set the DMA half transfer complete callback */
2181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
2182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set the DMA error callback */
2184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
2185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start,     */
2188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* ADC start (in case of SW start):                                   */
2189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Clear regular group conversion flag and overrun flag               */
2191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* (To ensure of no unknown state from potential previous ADC         */
2192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* operations)                                                        */
2193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
2194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Process unlocked */
2196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Unlock before starting ADC conversions: in case of potential         */
2197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
2198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* With DMA, overrun event is always considered as an error even if
2201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            hadc->Init.Overrun is set to ADC_OVR_DATA_OVERWRITTEN. Therefore,
2202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            ADC_IT_OVR is enabled. */
2203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
2204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Enable ADC DMA  mode*/
2206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
ARM GAS  /tmp/cc6JDs4t.s 			page 166


2207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (hadc->Instance == ADC3)
2208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_REG_SetDMATransferMode(hadc->Instance, ADC3_CFGR_DMACONTREQ((uint32_t)hadc->Init.D
2210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_EnableDMAReq(hadc->Instance);
2211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
2213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_REG_SetDataTransferMode(hadc->Instance, ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.C
2215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_REG_SetDataTransferMode(hadc->Instance, (uint32_t)hadc->Init.ConversionDataManagemen
2219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
2220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Start the DMA channel */
2223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_
2224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Enable conversion of regular group.                                  */
2226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
2227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* If external trigger has been selected, conversion will start at next */
2228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* trigger event.                                                       */
2229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Start ADC group regular conversion */
2230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
2231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Process unlocked */
2235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
2240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
2242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
2243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
2244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
2247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
2249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
2252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
2253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
2258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         ADC peripheral.
2259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
2260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         conversion on ADC group injected. If ADC group injected is under use, it
2261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
2262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
2263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         HAL_ADC_Stop_DMA() function is dedicated to single-ADC mode only.
ARM GAS  /tmp/cc6JDs4t.s 			page 167


2264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For multimode, the dedicated HAL_ADCEx_MultiModeStop_DMA() API must be used.
2265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
2267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
2269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process locked */
2276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_LOCK(hadc);
2277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
2279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
2283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
2285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_DMNGT_0 | ADC_CFGR_DMNGT_1, 0UL);
2286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
2288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
2289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
2290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
2292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
2294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
2295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update ADC state machine to error */
2297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
2298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
2302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
2303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
2306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
2307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
2310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
2312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (void)ADC_Disable(hadc);
2314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
2320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
ARM GAS  /tmp/cc6JDs4t.s 			page 168


2321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
2328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
2331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
2332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
2336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
2338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
2339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
2340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
2341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            to flag EOC.
2343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
2344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
2346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         To clear this flag, either use function:
2347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
2349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval ADC group regular conversion data
2352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
2354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 601              		.loc 1 2354 1 is_stmt 1 view -0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              		@ link register save eliminated.
2355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 606              		.loc 1 2356 3 view .LVU191
2357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
2359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
2360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return ADC converted value */
2362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return hadc->Instance->DR;
 607              		.loc 1 2362 3 view .LVU192
 608              		.loc 1 2362 14 is_stmt 0 view .LVU193
 609 0000 0368     		ldr	r3, [r0]
 610              		.loc 1 2362 24 view .LVU194
 611 0002 186C     		ldr	r0, [r3, #64]
 612              	.LVL40:
2363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 613              		.loc 1 2363 1 view .LVU195
 614 0004 7047     		bx	lr
ARM GAS  /tmp/cc6JDs4t.s 			page 169


 615              		.cfi_endproc
 616              	.LFE343:
 618 0006 00BF     		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 619              		.align	1
 620              		.p2align 2,,3
 621              		.weak	HAL_ADC_ConvCpltCallback
 622              		.syntax unified
 623              		.thumb
 624              		.thumb_func
 625              		.fpu fpv5-d16
 627              	HAL_ADC_ConvCpltCallback:
 628              	.LFB363:
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 633 0000 7047     		bx	lr
 634              		.cfi_endproc
 635              	.LFE363:
 637 0002 00BF     		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 638              		.align	1
 639              		.p2align 2,,3
 640              		.weak	HAL_ADC_ConvHalfCpltCallback
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 644              		.fpu fpv5-d16
 646              	HAL_ADC_ConvHalfCpltCallback:
 647              	.LFB365:
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 651              		@ link register save eliminated.
 652 0000 7047     		bx	lr
 653              		.cfi_endproc
 654              	.LFE365:
 656 0002 00BF     		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 657              		.align	1
 658              		.p2align 2,,3
 659              		.global	ADC_DMAHalfConvCplt
 660              		.syntax unified
 661              		.thumb
 662              		.thumb_func
 663              		.fpu fpv5-d16
 665              	ADC_DMAHalfConvCplt:
 666              	.LVL41:
 667              	.LFB357:
2364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
2367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
2369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
2371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
2373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
ARM GAS  /tmp/cc6JDs4t.s 			page 170


2374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
2375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
2376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
2377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_cfgr;
2378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
2379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
2380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
2384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
2386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
2387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
2389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
2392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
2393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* End Of Sampling callback */
2396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
2398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
2400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear regular group conversion flag */
2403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
2404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
2407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
2408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
2409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
2414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* to disable interruption.                                               */
2420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Get relevant register CFGR in ADC instance of ADC master or slave    */
2423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* in function of multimode state (for devices with multimode           */
2424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* available).                                                          */
2425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
2430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
ARM GAS  /tmp/cc6JDs4t.s 			page 171


2431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* check CONT bit directly in handle ADC CFGR register */
2432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* else need to check Master ADC CONT bit */
2437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Carry on if continuous mode is disabled */
2442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) != ADC_CFGR_CONT)
2443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
2446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit         */
2448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* ADSTART==0 (no conversion on going)                              */
2449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt */
2452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Note: Overrun interrupt was enabled with EOC interrupt in      */
2453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* HAL_Start_IT(), but is not disabled here because can be used   */
2454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* by overrun IRQ process below.                                  */
2455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Set ADC state */
2458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
2459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
2461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
2462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
2464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else
2466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Change ADC state to error state */
2468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Conversion complete callback */
2478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
2479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
2480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       possibility to use:                                              */
2481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*        " if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "                */
2482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 172


2488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear regular group conversion flag */
2489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
2490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
2491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
2492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
2493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
2494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ====== Check ADC group injected end of unitary conversion sequence conversions ===== */
2497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC) && ((tmp_ier & ADC_IT_JEOC) == ADC_IT_JEOC)) ||
2498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
2499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
2504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
2505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Retrieve ADC configuration */
2508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
2509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
2510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
2511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* in function of multimode state (for devices with multimode         */
2512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* available).                                                        */
2513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
2516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
2517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
2518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
2522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable interruption if no further conversion upcoming by injected     */
2528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* external trigger or by automatic injected conversion with regular      */
2529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* group having no further conversion upcoming (same conditions as        */
2530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* regular group interruption disabling above),                           */
2531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* and if injected scan sequence is completed.                            */
2532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((tmp_adc_inj_is_trigger_source_sw_start != 0UL)            ||
2533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
2534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          ((tmp_adc_reg_is_trigger_source_sw_start != 0UL)  &&
2535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
2536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
2538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
2539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Particular case if injected contexts queue is enabled:             */
2541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* when the last context has been fully processed, JSQR is reset      */
2542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* by the hardware. Even if no injected conversion is planned to come */
2543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* (queue empty, triggers are ignored), it can start again            */
2544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* immediately after setting a new context (JADSTART is still set).   */
ARM GAS  /tmp/cc6JDs4t.s 			page 173


2545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Therefore, state of HAL ADC injected group is kept to busy.        */
2546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
2547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
2549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* JADSTART==0 (no conversion on going)                             */
2550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
2551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt  */
2553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
2554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Set ADC state */
2556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
2557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
2559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
2560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
2562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else
2564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Update ADC state machine to error */
2566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Injected Conversion complete callback */
2576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note:  HAL_ADCEx_InjectedConvCpltCallback can resort to
2577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) or
2578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOC)) to determine whether
2579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               interruption has been triggered by end of conversion or end of
2580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               sequence.    */
2581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->InjectedConvCpltCallback(hadc);
2583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
2585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear injected group conversion flag */
2588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
2589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
2592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
2593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC state */
2595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Level out of window 1 callback */
2598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
2600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
ARM GAS  /tmp/cc6JDs4t.s 			page 174


2602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
2606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
2609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
2610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC state */
2612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Level out of window 2 callback */
2615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
2617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
2619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
2623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
2627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC state */
2629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Level out of window 3 callback */
2632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
2634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
2644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* overrun ")                                                             */
2649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* error.                                                                 */
2651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       overrun_error = 1UL;
2654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
2656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Check DMA configuration */
2658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (tmp_multimode_config != LL_ADC_MULTI_INDEPENDENT)
ARM GAS  /tmp/cc6JDs4t.s 			page 175


2659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Multimode (when feature is available) is enabled,
2661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            Common Control Register MDMA bits must be checked. */
2662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_RE
2663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           overrun_error = 1UL;
2665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Multimode not set or feature not available or ADC independent */
2670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((hadc->Instance->CFGR & ADC_CFGR_DMNGT) != 0UL)
2671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           overrun_error = 1UL;
2673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (overrun_error == 1UL)
2678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Change ADC state to error state */
2680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC error code to overrun */
2683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Error callback */
2686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear ADC overrun flag */
2698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check Injected context queue overflow flag ========== */
2702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_JQOVF) == ADC_FLAG_JQOVF) && ((tmp_ier & ADC_IT_JQOVF) == ADC_IT_JQOVF))
2703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Change ADC state to overrun state */
2705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
2706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC error code to Injected context queue overflow */
2708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
2709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear the Injected context queue overflow flag */
2711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
2712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Injected context queue overflow callback */
2714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback(hadc);
ARM GAS  /tmp/cc6JDs4t.s 			page 176


2716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
2718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
2727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
2732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    */
2736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
2742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
2747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
2757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
2762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
ARM GAS  /tmp/cc6JDs4t.s 			page 177


2773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
2779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
2784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
2792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief    Peripheral Control functions
2796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
2797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @verbatim
2798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
2799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              ##### Peripheral Control functions #####
2800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
2801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]  This section provides functions allowing to:
2802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Configure channels on regular group
2803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Configure the analog watchdog
2804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @endverbatim
2806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
2807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         These internal paths can be disabled using function
2814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         without resetting the ADC.
2820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param sConfig Structure of ADC channel assigned to ADC group regular.
2824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
2825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
2827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
ARM GAS  /tmp/cc6JDs4t.s 			page 178


2830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
2832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
2839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
2840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
2841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check offset range according to oversampling setting */
2842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
2843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset / (hadc->Init.Oversampling.
2845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
2847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
2849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Instance == ADC3)
2850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC3_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
2852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
2854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
2855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
2857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
2861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ignored (considered as reset) */
2862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENAB
2863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Verification of channel number */
2865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(sConfig->Channel));
2868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
2870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Instance == ADC1)
2872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC1_DIFF_CHANNEL(sConfig->Channel));
2874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Instance == ADC2)
2876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC2_DIFF_CHANNEL(sConfig->Channel));
2878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC3)
2880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* ADC3 is not available on some STM32H7 products */
2881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Instance == ADC3)
2882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC3_DIFF_CHANNEL(sConfig->Channel));
2884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
2886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
ARM GAS  /tmp/cc6JDs4t.s 			page 179


2887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process locked */
2889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_LOCK(hadc);
2890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*  - Channel number                                                        */
2895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*  - Channel rank                                                          */
2896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
2900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Instance != ADC3)
2901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* ADC channels preselection */
2903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       hadc->Instance->PCSEL_RES0 |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Chan
2904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* ADC channels preselection */
2907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->Instance->PCSEL |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) & 
2908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
2909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC group regular sequence: channel on the selected scan sequence rank */
2911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
2912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without   */
2915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* conversion on going on regular group:                                    */
2916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Channel sampling time                                                 */
2917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Channel offset                                                        */
2918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
2919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
2920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
2921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
2922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
2923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
2925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configure the offset: offset enable/disable, channel, offset value */
2928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Shift the offset with respect to the selected ADC resolution. */
2930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
2931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
2932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Instance == ADC3)
2933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpOffsetShifted = ADC3_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
2935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
2938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
2940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       
2942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
2943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
ARM GAS  /tmp/cc6JDs4t.s 			page 180


2944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC selected offset number */
2945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted)
2946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
2948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (hadc->Instance == ADC3)
2949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           assert_param(IS_ADC3_OFFSET_SIGN(sConfig->OffsetSign));
2951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSaturation));
2952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC selected offset sign & saturation */
2953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetOffsetSign(hadc->Instance, sConfig->OffsetNumber, sConfig->OffsetSign);
2954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetOffsetSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSaturat
2955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
2957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
2958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSignedSaturation));
2960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC selected offset signed saturation */
2961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetOffsetSignedSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetS
2962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetRightShift));
2964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC selected offset right shift */
2965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetDataRightShift(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetRightShif
2966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Scan OFR1, OFR2, OFR3, OFR4 to check if the selected channel is enabled.
2972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           If this is the case, offset OFRx is disabled since
2973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           sConfig->OffsetNumber = ADC_OFFSET_NONE. */
2974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
2975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (hadc->Instance == ADC3)
2976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_
2978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
2980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_
2982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
2984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_
2986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
2988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_
2990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
2992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
2995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
2996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (((hadc->Instance->OFR1) & ADC_OFR1_OFFSET1_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
2998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_SSATE);
3000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
ARM GAS  /tmp/cc6JDs4t.s 			page 181


3001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (((hadc->Instance->OFR2) & ADC_OFR2_OFFSET2_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
3002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_SSATE);
3004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (((hadc->Instance->OFR3) & ADC_OFR3_OFFSET3_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
3006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_SSATE);
3008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (((hadc->Instance->OFR4) & ADC_OFR4_OFFSET4_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
3010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_SSATE);
3012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         
3015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      }
3016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
3019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:                */
3020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Single or differential mode                                           */
3021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
3022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set mode single-ended or differential input of the selected ADC channel */
3025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
3026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configuration of differential mode */
3028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
3029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
3031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits r
3032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance,
3033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
3034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
3035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
3038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If internal channel selected, enable dedicated internal buffers and    */
3039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* paths.                                                                 */
3040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Note: these internal measurement paths can be disabled using           */
3041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* HAL_ADC_DeInit().                                                      */
3042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
3044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Configuration of common ADC parameters                                 */
3046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
3048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Software is allowed to change common parameters only when all ADCs   */
3050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* of the common group are disabled.                                    */
3051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0U
3052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* If the requested internal measurement path has already been enabled, */
3054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* bypass the configuration processing.                                 */
3055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_channel & LL_AD
3056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
ARM GAS  /tmp/cc6JDs4t.s 			page 182


3058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
3059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_
3060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               /* Delay for temperature sensor stabilization time */
3062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               /* Wait loop initialization and execution */
3063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               /* Note: Variable divided by 2 to compensate partially              */
3064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               /*       CPU processing cycles, scaling in us split to not          */
3065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               /*       exceed 32 bits register capacity and handle low frequency. */
3066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (10
3067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               while (wait_loop_index != 0UL)
3068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               {
3069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 wait_loop_index--;
3070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               }
3071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
3072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC
3074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
3076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
3077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_
3078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
3079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else if ((sConfig->Channel == ADC_CHANNEL_VREFINT) && ((tmp_config_internal_channel & LL_
3081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             if (ADC_VREFINT_INSTANCE(hadc))
3083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
3084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_
3085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
3086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else
3088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* nothing to do */
3090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* If the requested internal measurement path has already been          */
3093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* enabled and other ADC of the common group are enabled, internal      */
3094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* measurement paths cannot be enabled.                                 */
3095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
3096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Update ADC state machine to error */
3098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           tmp_hal_status = HAL_ERROR;
3101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
3107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
3108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* parameters.                                                              */
3109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
3110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update ADC state machine to error */
3112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
ARM GAS  /tmp/cc6JDs4t.s 			page 183


3115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
3118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
3119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
3121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
3122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
3126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
3127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
3128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
3129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
3130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         the ADC.
3131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
3132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
3133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
3134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   On this STM32 series, analog watchdog thresholds cannot be modified
3135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         while ADC conversion is on going.
3136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
3137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param AnalogWDGConfig Structure of ADC analog watchdog configuration
3138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
3139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, ADC_AnalogWDGConfTypeDef *Analog
3141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
3144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
3145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
3149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
3151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
3152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
3153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
3155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
3156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC))
3157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
3159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
3162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->Instance == ADC3)
3164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Verify thresholds range */
3166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.OversamplingMode == ENABLE)
3167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Case of oversampling enabled: thresholds are compared to oversampling
3169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          intermediate computation (after ratio, before shift application) */
3170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC3_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold / (hadc->
3171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC3_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold / (hadc->I
ARM GAS  /tmp/cc6JDs4t.s 			page 184


3172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
3174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Verify if thresholds are within the selected ADC resolution */
3176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC3_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
3177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC3_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
3178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
3181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
3182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Verify thresholds range */
3184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.OversamplingMode == ENABLE)
3185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Case of oversampling enabled: thresholds are compared to oversampling
3187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          intermediate computation (after ratio, before shift application) */
3188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold / (hadc->I
3189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold / (hadc->In
3190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
3192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Verify if thresholds are within the selected ADC resolution */
3194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
3195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
3196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process locked */
3200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_LOCK(hadc);
3201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
3203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
3204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* conversion on going on ADC groups regular and injected:                  */
3205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
3206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*  - Analog watchdog thresholds                                            */
3207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
3210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
3211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      )
3212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Analog watchdog configuration */
3214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
3215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
3217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
3218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*    channels, on groups regular and-or injected.                      */
3219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
3224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
ARM GAS  /tmp/cc6JDs4t.s 			page 185


3229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
3234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
3238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_INJ)
3242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG_
3246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
3250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Shift the offset in function of the selected ADC resolution:         */
3254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
3255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* are set to 0                                                         */
3256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighTh
3257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
3258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set the high and low thresholds */
3260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
3261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Instance == ADC3)
3262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->LTR1_TR1,
3264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC3_TR1_AWDFILT,
3265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    AnalogWDGConfig->FilteringConfig);
3266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->LTR1_TR1,  ADC3_TR1_LT1, tmpAWDLowThresholdShifted);
3267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->LTR1_TR1,  ADC3_TR1_HT1, (tmpAWDHighThresholdShifted << ADC3_TR1
3268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
3270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->LTR1_TR1,  ADC_LTR_LT, tmpAWDLowThresholdShifted);
3273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR1_TR2,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
3274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
3276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->LTR1,  ADC_LTR_LT, tmpAWDLowThresholdShifted);
3277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->HTR1,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
3278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
3279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
3281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
3282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
3284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
ARM GAS  /tmp/cc6JDs4t.s 			page 186


3286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
3287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
3288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
3290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (AnalogWDGConfig->ITMode == ENABLE)
3291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
3293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
3295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
3297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
3300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
3301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
3308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* several channels by successive calls of this function.           */
3309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else
3314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
3324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (hadc->Instance == ADC3)
3325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC
3328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else
3331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif  /*ADC_VER_V5_V90*/
3333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Update AWD by bitfield to keep the possibility to monitor        */
3334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* several channels by successive calls of this function.           */
3335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
3337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               SET_BIT(hadc->Instance->AWD2CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConf
3338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
3339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             else
3340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
3341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               SET_BIT(hadc->Instance->AWD3CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConf
3342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
ARM GAS  /tmp/cc6JDs4t.s 			page 187


3343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
3344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif  /*ADC_VER_V5_V90*/
3346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Shift the thresholds in function of the selected ADC resolution      */
3354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* have to be left-aligned on bit 15, the LSB (right bits) are set to 0 */
3355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighT
3356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
3357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
3359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Instance == ADC3)
3360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Analog watchdog thresholds configuration */
3363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (AnalogWDGConfig->WatchdogNumber != ADC_ANALOGWATCHDOG_1)
3364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Shift the offset with respect to the selected ADC resolution:        */
3366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Thresholds have to be left-aligned on bit 7, the LSB (right bits)    */
3367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* are set to 0.                                                        */
3368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->H
3369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->L
3370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHigh
3374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
3378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->LTR2_DIFSEL,  ADC_LTR_LT, tmpAWDLowThresholdShifted);
3384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->HTR2_CALFACT,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
3385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
3387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->LTR3_RES10,  ADC_LTR_LT, tmpAWDLowThresholdShifted);
3390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->HTR3_RES11,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
3391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
3394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->LTR2,  ADC_LTR_LT, tmpAWDLowThresholdShifted);
3398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR2,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
3399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
ARM GAS  /tmp/cc6JDs4t.s 			page 188


3400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
3401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->LTR3,  ADC_LTR_LT, tmpAWDLowThresholdShifted);
3404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR3,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
3405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
3408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
3411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
3412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
3418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
3423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
3425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
3427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
3430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
3431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
3433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
3434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
3440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
3445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
3447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
3449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* If a conversion is on going on ADC group regular or injected, no update  */
3455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* could be done on neither of the AWD configuration structure parameters.  */
3456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
ARM GAS  /tmp/cc6JDs4t.s 			page 189


3457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update ADC state machine to error */
3459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
3462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
3464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
3465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
3467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
3468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
3473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
3476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
3477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
3478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @verbatim
3479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
3480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
3481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
3482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
3483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
3484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     peripheral.
3485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Check the ADC state
3486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Check the ADC error code
3487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @endverbatim
3489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
3490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Return the ADC handle state.
3494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
3495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         compared with states bits.
3496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For example:
3497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
3498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
3499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
3500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
3501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef *hadc)
3503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
3505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return ADC handle state */
3508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return hadc->State;
3509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Return the ADC error code.
3513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
ARM GAS  /tmp/cc6JDs4t.s 			page 190


3514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
3515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
3517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
3519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return hadc->ErrorCode;
3522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
3526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
3530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
3533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
3534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Stop ADC conversion.
3538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
3539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param ConversionGroup ADC group regular and/or injected.
3540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          This parameter can be one of the following values:
3541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_GROUP           ADC regular conversion type.
3542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_INJECTED_GROUP          ADC injected conversion type.
3543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_INJECTED_GROUP  ADC regular and injected conversion type.
3544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
3545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc, uint32_t ConversionGroup)
3547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
3549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
3550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
3551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
3552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
3556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
3558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
3560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* groups) to bypass this function if not needed.                           */
3561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
3564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
3565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      )
3566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Particular case of continuous auto-injection mode combined with        */
3568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* auto-delay mode.                                                       */
3569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
3570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
ARM GAS  /tmp/cc6JDs4t.s 			page 191


3571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Procedure to be followed: Wait until JEOS=1, clear JEOS, set ADSTP=1   */
3572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* (see reference manual).                                                */
3573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (((hadc->Instance->CFGR & ADC_CFGR_JAUTO) != 0UL)
3574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
3575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (hadc->Init.LowPowerAutoWait == ENABLE)
3576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
3577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Use stop of regular group */
3579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       conversion_group_reassigned = ADC_REGULAR_GROUP;
3580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
3582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == 0UL)
3583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES * 4UL))
3585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Update ADC state machine to error */
3587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           return HAL_ERROR;
3593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         Conversion_Timeout_CPU_cycles ++;
3595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear JEOS */
3598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
3599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group regular */
3602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_INJECTED_GROUP)
3603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
3605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
3606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Stop ADC group regular conversion */
3610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_REG_StopConversion(hadc->Instance);
3611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group injected */
3616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_REGULAR_GROUP)
3617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0 */
3619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
3620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Stop ADC group injected conversion */
3624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_INJ_StopConversion(hadc->Instance);
3625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
ARM GAS  /tmp/cc6JDs4t.s 			page 192


3628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Selection of start and stop bits with respect to the regular or injected group */
3630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (conversion_group_reassigned)
3631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_REGULAR_INJECTED_GROUP:
3633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
3634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_INJECTED_GROUP:
3636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
3637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Case ADC_REGULAR_GROUP only*/
3639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default:
3640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
3641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
3645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tickstart = HAL_GetTick();
3646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
3650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Update ADC state machine to error */
3655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           return HAL_ERROR;
3661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return HAL status */
3668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return HAL_OK;
3669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Enable the selected ADC.
3675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
3676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
3677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
3678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
3679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
3681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
3683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
ARM GAS  /tmp/cc6JDs4t.s 			page 193


3685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
3686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
3687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
3688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
3691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JADSTART | ADC_
3692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Update ADC state machine to error */
3694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       return HAL_ERROR;
3700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Enable the ADC peripheral */
3703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
3704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
3706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tickstart = HAL_GetTick();
3707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Poll for ADC ready flag raised except case of multimode enabled
3709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        and ADC slave selected. */
3710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
3711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
3712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
3713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
3714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
3716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
3718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             has been cleared (after a calibration), ADEN bit is reset by the
3719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             calibration logic.
3720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             The workaround is to continue setting ADEN until ADRDY is becomes 1.
3721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
3722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             4 ADC clock cycle duration */
3723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Note: Test of ADC enabled required due to hardware constraint to     */
3724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*       not enable ADC if already enabled.                             */
3725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_Enable(hadc->Instance);
3728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
3731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* New check to avoid false timeout detection in case of preemption */
3733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
3734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Update ADC state machine to error */
3736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
3739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             return HAL_ERROR;
ARM GAS  /tmp/cc6JDs4t.s 			page 194


3742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return HAL status */
3749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return HAL_OK;
3750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Disable the selected ADC.
3754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
3755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         stopped.
3756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
3757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
3758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
3760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
3762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
3763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
3765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
3766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*       disabled.                                                          */
3767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
3768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
3769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      )
3770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
3772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_JADSTART | ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
3773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Disable the ADC peripheral */
3775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
3776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
3777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
3779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Update ADC state machine to error */
3781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       return HAL_ERROR;
3787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
3790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Get tick count */
3791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tickstart = HAL_GetTick();
3792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
3796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
ARM GAS  /tmp/cc6JDs4t.s 			page 195


3799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Update ADC state machine to error */
3801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           return HAL_ERROR;
3807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return HAL status */
3813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return HAL_OK;
3814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  DMA transfer complete callback.
3818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
3820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
3822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
3827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
3828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC state */
3830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
3831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
3833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
3834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* to disable interruption.                                               */
3835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Is it the end of the regular sequence ? */
3836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((hadc->Instance->ISR & ADC_FLAG_EOS) != 0UL)
3837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Are conversions software-triggered ? */
3839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
3840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Is CONT bit set ? */
3842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_CONT) == 0UL)
3843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* CONT bit is not set, no more conversions expected */
3845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
3854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* DMA End of Transfer interrupt was triggered but conversions sequence
ARM GAS  /tmp/cc6JDs4t.s 			page 196


3856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          is not over. If DMACFG is set to 0, conversions are stopped. */
3857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMNGT) == 0UL)
3858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* DMACFG bit is not set, conversions are stopped. */
3860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Conversion complete callback */
3869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
3871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
3872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
3873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
3876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
3878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
3880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
3882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
3883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
3884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
3887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Call ADC DMA error callback */
3889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
3890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
3896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
3898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
3900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 668              		.loc 1 3900 1 is_stmt 1 view -0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
3901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 672              		.loc 1 3902 3 view .LVU197
3903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Half conversion callback */
3905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
3907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
ARM GAS  /tmp/cc6JDs4t.s 			page 197


3908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 673              		.loc 1 3908 3 view .LVU198
 674 0000 806B     		ldr	r0, [r0, #56]
 675              	.LVL42:
3900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 676              		.loc 1 3900 1 is_stmt 0 view .LVU199
 677 0002 08B5     		push	{r3, lr}
 678              	.LCFI2:
 679              		.cfi_def_cfa_offset 8
 680              		.cfi_offset 3, -8
 681              		.cfi_offset 14, -4
 682              		.loc 1 3908 3 view .LVU200
 683 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 684              	.LVL43:
3909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 685              		.loc 1 3910 1 view .LVU201
 686 0008 08BD     		pop	{r3, pc}
 687              		.cfi_endproc
 688              	.LFE357:
 690 000a 00BF     		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 691              		.align	1
 692              		.p2align 2,,3
 693              		.weak	HAL_ADC_LevelOutOfWindowCallback
 694              		.syntax unified
 695              		.thumb
 696              		.thumb_func
 697              		.fpu fpv5-d16
 699              	HAL_ADC_LevelOutOfWindowCallback:
 700              	.LFB367:
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		@ link register save eliminated.
 705 0000 7047     		bx	lr
 706              		.cfi_endproc
 707              	.LFE367:
 709 0002 00BF     		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 710              		.align	1
 711              		.p2align 2,,3
 712              		.weak	HAL_ADC_ErrorCallback
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 716              		.fpu fpv5-d16
 718              	HAL_ADC_ErrorCallback:
 719              	.LFB369:
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              		@ link register save eliminated.
 724 0000 7047     		bx	lr
 725              		.cfi_endproc
 726              	.LFE369:
 728 0002 00BF     		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 729              		.align	1
 730              		.p2align 2,,3
ARM GAS  /tmp/cc6JDs4t.s 			page 198


 731              		.global	HAL_ADC_IRQHandler
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 735              		.fpu fpv5-d16
 737              	HAL_ADC_IRQHandler:
 738              	.LVL44:
 739              	.LFB344:
2371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 740              		.loc 1 2371 1 is_stmt 1 view -0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
2372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 744              		.loc 1 2372 3 view .LVU203
2373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 745              		.loc 1 2373 3 view .LVU204
2371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 746              		.loc 1 2371 1 is_stmt 0 view .LVU205
 747 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 748              	.LCFI3:
 749              		.cfi_def_cfa_offset 24
 750              		.cfi_offset 3, -24
 751              		.cfi_offset 4, -20
 752              		.cfi_offset 5, -16
 753              		.cfi_offset 6, -12
 754              		.cfi_offset 7, -8
 755              		.cfi_offset 14, -4
2379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 756              		.loc 1 2379 55 view .LVU206
 757 0002 994A     		ldr	r2, .L201
2371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 758              		.loc 1 2371 1 view .LVU207
 759 0004 0446     		mov	r4, r0
2373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 760              		.loc 1 2373 26 view .LVU208
 761 0006 0368     		ldr	r3, [r0]
2379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 762              		.loc 1 2379 35 view .LVU209
 763 0008 9342     		cmp	r3, r2
2373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 764              		.loc 1 2373 12 view .LVU210
 765 000a 1D68     		ldr	r5, [r3]
 766              	.LVL45:
2374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 767              		.loc 1 2374 3 is_stmt 1 view .LVU211
2374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 768              		.loc 1 2374 12 is_stmt 0 view .LVU212
 769 000c 5E68     		ldr	r6, [r3, #4]
 770              	.LVL46:
2375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
 771              		.loc 1 2375 3 is_stmt 1 view .LVU213
2376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_cfgr;
 772              		.loc 1 2376 3 view .LVU214
2377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
 773              		.loc 1 2377 3 view .LVU215
2378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
ARM GAS  /tmp/cc6JDs4t.s 			page 199


 774              		.loc 1 2378 3 view .LVU216
2379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 775              		.loc 1 2379 3 view .LVU217
2379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 776              		.loc 1 2379 35 is_stmt 0 view .LVU218
 777 000e 00F09B80 		beq	.L115
2379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 778              		.loc 1 2379 55 view .LVU219
 779 0012 02F58072 		add	r2, r2, #256
2379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 780              		.loc 1 2379 35 view .LVU220
 781 0016 9342     		cmp	r3, r2
 782 0018 00F09680 		beq	.L115
 783 001c 02F1C052 		add	r2, r2, #402653184
 784 0020 02F58442 		add	r2, r2, #16896
 785              	.L76:
 786              	.LVL47:
 787              	.LBB290:
 788              	.LBI290:
6416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 789              		.loc 2 6416 26 is_stmt 1 discriminator 4 view .LVU221
 790              	.LBB291:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 791              		.loc 2 6418 3 discriminator 4 view .LVU222
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 792              		.loc 2 6418 21 is_stmt 0 discriminator 4 view .LVU223
 793 0024 9768     		ldr	r7, [r2, #8]
 794              	.LBE291:
 795              	.LBE290:
2386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 796              		.loc 1 2386 6 discriminator 4 view .LVU224
 797 0026 A907     		lsls	r1, r5, #30
 798              	.LBB293:
 799              	.LBB292:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 800              		.loc 2 6418 10 discriminator 4 view .LVU225
 801 0028 07F01F07 		and	r7, r7, #31
 802              	.LVL48:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 803              		.loc 2 6418 10 discriminator 4 view .LVU226
 804              	.LBE292:
 805              	.LBE293:
2382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 806              		.loc 1 2382 3 is_stmt 1 discriminator 4 view .LVU227
2383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 807              		.loc 1 2383 3 discriminator 4 view .LVU228
2386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 808              		.loc 1 2386 3 discriminator 4 view .LVU229
2386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 809              		.loc 1 2386 6 is_stmt 0 discriminator 4 view .LVU230
 810 002c 02D5     		bpl	.L77
2386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 811              		.loc 1 2386 54 discriminator 1 view .LVU231
 812 002e B207     		lsls	r2, r6, #30
 813 0030 00F1AC80 		bmi	.L193
 814              	.LVL49:
 815              	.L77:
ARM GAS  /tmp/cc6JDs4t.s 			page 200


2407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 816              		.loc 1 2407 3 is_stmt 1 view .LVU232
2407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 817              		.loc 1 2407 6 is_stmt 0 view .LVU233
 818 0034 6907     		lsls	r1, r5, #29
 819 0036 7CD5     		bpl	.L79
2407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 820              		.loc 1 2407 51 discriminator 1 view .LVU234
 821 0038 7207     		lsls	r2, r6, #29
 822 003a 7AD5     		bpl	.L79
 823              	.L80:
2411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 824              		.loc 1 2411 5 is_stmt 1 view .LVU235
2411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 825              		.loc 1 2411 14 is_stmt 0 view .LVU236
 826 003c 626D     		ldr	r2, [r4, #84]
2411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 827              		.loc 1 2411 8 view .LVU237
 828 003e D206     		lsls	r2, r2, #27
 829 0040 03D4     		bmi	.L82
2414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 830              		.loc 1 2414 7 is_stmt 1 view .LVU238
 831 0042 626D     		ldr	r2, [r4, #84]
 832 0044 42F40072 		orr	r2, r2, #512
 833 0048 6265     		str	r2, [r4, #84]
 834              	.L82:
2420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 835              		.loc 1 2420 5 view .LVU239
 836              	.LVL50:
 837              	.LBB294:
 838              	.LBI294:
3801:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 839              		.loc 2 3801 26 view .LVU240
 840              	.LBB295:
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 841              		.loc 2 3803 3 view .LVU241
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 842              		.loc 2 3803 12 is_stmt 0 view .LVU242
 843 004a DA68     		ldr	r2, [r3, #12]
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 844              		.loc 2 3803 103 view .LVU243
 845 004c 12F4406F 		tst	r2, #3072
 846 0050 1CD1     		bne	.L84
 847              	.LVL51:
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 848              		.loc 2 3803 103 view .LVU244
 849              	.LBE295:
 850              	.LBE294:
2425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 851              		.loc 1 2425 7 is_stmt 1 view .LVU245
2425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 852              		.loc 1 2425 12 is_stmt 0 view .LVU246
 853 0052 864A     		ldr	r2, .L201+4
 854 0054 9342     		cmp	r3, r2
 855 0056 00F0E280 		beq	.L85
 856              	.L114:
2432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
ARM GAS  /tmp/cc6JDs4t.s 			page 201


 857              		.loc 1 2432 9 is_stmt 1 view .LVU247
2432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 858              		.loc 1 2432 18 is_stmt 0 view .LVU248
 859 005a DA68     		ldr	r2, [r3, #12]
 860              	.LVL52:
 861              	.L86:
2442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 862              		.loc 1 2442 7 is_stmt 1 view .LVU249
2442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 863              		.loc 1 2442 10 is_stmt 0 view .LVU250
 864 005c 9004     		lsls	r0, r2, #18
 865 005e 15D4     		bmi	.L84
2445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 866              		.loc 1 2445 9 is_stmt 1 view .LVU251
2445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 867              		.loc 1 2445 13 is_stmt 0 view .LVU252
 868 0060 1A68     		ldr	r2, [r3]
 869              	.LVL53:
2445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 870              		.loc 1 2445 12 view .LVU253
 871 0062 1107     		lsls	r1, r2, #28
 872 0064 12D5     		bpl	.L84
2449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 873              		.loc 1 2449 11 is_stmt 1 view .LVU254
 874              	.LVL54:
 875              	.LBB296:
 876              	.LBI296:
6510:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6511:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6512:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6513:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
6514:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
6515:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
6516:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
6517:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
6518:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
6519:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6520:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6521:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6522:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6523:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
6524:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6525:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
6526:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6527:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6528:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
6529:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE_5
6530:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES_5
6531:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES_5
6532:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5 (1)
6533:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5_8_BITS
6534:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5 (2)
6535:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5_10_BITS
6536:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (3)
6537:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5 (4)
6538:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5_12_BITS
6539:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES_5 (5)
ARM GAS  /tmp/cc6JDs4t.s 			page 202


6540:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (6)
6541:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (7)
6542:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
6543:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 16, 14, 12 or 10 bits.
6544:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 16, 14 or 12  bits.
6545:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 10 or 8 bits.
6546:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (4) Parameter available only if ADC resolution is 16 or 14 bits.
6547:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (5) Parameter available only if ADC resolution is 16 bits.
6548:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (6) Parameter available only if ADC resolution is 12 bits.
6549:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (7) Parameter available only if ADC resolution is 16 or 14 bits.
6550:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6551:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6552:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
6553:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6554:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
6555:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6556:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6557:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6558:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
6559:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
6560:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6561:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6562:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6563:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE_5
6564:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES_5
6565:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES_5
6566:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5 (1)
6567:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5_8_BITS
6568:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5 (2)
6569:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5_10_BITS
6570:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (3)
6571:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5 (4)
6572:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5_12_BITS
6573:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES_5 (5)
6574:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (6)
6575:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (7)
6576:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
6577:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 16, 14, 12 or 10 bits.
6578:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 16, 14 or 12  bits.
6579:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 10 or 8 bits.
6580:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (4) Parameter available only if ADC resolution is 16 or 14 bits.
6581:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (5) Parameter available only if ADC resolution is 16 bits.
6582:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (6) Parameter available only if ADC resolution is 12 bits.
6583:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (7) Parameter available only if ADC resolution is 16 or 14 bits.
6584:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6585:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON)
6586:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6587:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
6588:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6589:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6590:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6591:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
6592:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6593:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
6594:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
6595:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6596:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 203


6597:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6598:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
6599:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6600:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6601:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6602:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6603:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6604:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6605:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6606:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
6607:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6608:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6609:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6610:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
6611:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6612:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6613:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6614:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6615:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6616:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6617:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_DEEPPWD);
6618:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6619:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6620:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6621:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
6622:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6623:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6624:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6625:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6626:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6627:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6628:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6629:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
6630:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6631:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6632:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6633:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
6634:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6635:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6636:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6637:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6638:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
6639:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6640:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6641:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6642:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
6643:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
6644:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6645:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
6646:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
6648:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6649:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
6650:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6651:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6652:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
ARM GAS  /tmp/cc6JDs4t.s 			page 204


6654:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
6655:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
6656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
6657:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
6658:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
6659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6660:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6661:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6662:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
6663:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6664:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6665:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6666:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
6667:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6668:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6669:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6670:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6671:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6672:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6673:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADVREGEN);
6674:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6675:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6676:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6677:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
6678:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6679:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6680:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6681:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
6682:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6683:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6684:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6685:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
6686:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6687:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
6688:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6689:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6690:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6691:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
6692:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
6693:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6694:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
6695:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6696:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
6697:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6698:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
6699:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6700:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6701:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6702:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
6703:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
6704:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
6705:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion start.
6706:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
6707:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6708:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6709:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6710:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  /tmp/cc6JDs4t.s 			page 205


6711:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6712:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6713:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6714:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6715:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6718:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6719:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6720:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6721:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6722:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6723:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6724:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADEN);
6725:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6726:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6727:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6728:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6729:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6730:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6731:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6732:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
6733:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6734:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6735:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6736:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6737:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6739:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6740:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6741:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6742:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6743:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6744:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADDIS);
6745:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6746:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6747:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6748:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6749:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6750:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6751:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6752:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6753:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6754:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6755:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
6757:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
6759:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6760:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6761:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6762:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6763:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6764:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6765:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6766:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6767:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
ARM GAS  /tmp/cc6JDs4t.s 			page 206


6768:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6770:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6771:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6772:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6773:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6774:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6775:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6776:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6777:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6778:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calibration duration:
6779:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Calibration of offset: 520 ADC clock cycles
6780:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Calibration of linearity: 131072 ADC clock cycles
6781:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with differential mode available:
6782:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6783:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
6784:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6785:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6786:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         requires their calibration).
6787:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of linearity is common to both
6788:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
6789:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (calibration run can be performed only once).
6790:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6791:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6792:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6793:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6794:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration\n
6795:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CR       ADCALLIN       LL_ADC_StartCalibration
6796:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6797:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  CalibrationMode This parameter can be one of the following values:
6798:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_OFFSET
6799:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_OFFSET_LINEARITY
6800:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6801:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6802:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6804:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6805:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t CalibrationMode, uint32_t 
6806:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6807:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6808:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6809:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6810:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6811:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADCALLIN | ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6812:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADCAL | (CalibrationMode & ADC_CALIB_MODE_MASK) | (SingleDiff & ADC_SINGLEDIFF_
6813:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6814:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6815:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6816:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6817:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6818:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6819:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6820:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6821:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
6822:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6823:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
6824:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc6JDs4t.s 			page 207


6825:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6826:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6827:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
6828:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6829:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6830:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6831:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
6832:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6833:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6834:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6835:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6836:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6837:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6838:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6839:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           starts immediately.
6840:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6841:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6842:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           following the ADC start conversion command.
6843:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6844:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6845:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6846:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6847:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without ADC disable command on going.
6848:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6849:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6850:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6851:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6852:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6853:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6854:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6855:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6856:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6857:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6858:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6859:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADSTART);
6860:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6861:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6862:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6863:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6864:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6865:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6866:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6867:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without ADC disable command on going.
6868:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6869:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6870:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6871:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6872:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6873:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6874:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6875:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6876:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6877:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6878:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6879:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADSTP);
6880:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6881:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 208


6882:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6883:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6884:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6885:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6886:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6887:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
 877              		.loc 2 6888 26 view .LVU255
 878              	.LBB297:
6889:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 879              		.loc 2 6890 3 view .LVU256
 880              		.loc 2 6890 12 is_stmt 0 view .LVU257
 881 0066 9A68     		ldr	r2, [r3, #8]
 882              		.loc 2 6890 74 view .LVU258
 883 0068 5207     		lsls	r2, r2, #29
 884 006a 00F1F180 		bmi	.L88
 885              	.LVL55:
 886              		.loc 2 6890 74 view .LVU259
 887              	.LBE297:
 888              	.LBE296:
2455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 889              		.loc 1 2455 13 is_stmt 1 view .LVU260
 890 006e 5A68     		ldr	r2, [r3, #4]
 891 0070 22F00C02 		bic	r2, r2, #12
 892 0074 5A60     		str	r2, [r3, #4]
2458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 893              		.loc 1 2458 13 view .LVU261
 894 0076 636D     		ldr	r3, [r4, #84]
 895 0078 23F48073 		bic	r3, r3, #256
 896 007c 6365     		str	r3, [r4, #84]
2460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 897              		.loc 1 2460 13 view .LVU262
2460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 898              		.loc 1 2460 22 is_stmt 0 view .LVU263
 899 007e 636D     		ldr	r3, [r4, #84]
2460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 900              		.loc 1 2460 16 view .LVU264
 901 0080 DB04     		lsls	r3, r3, #19
 902 0082 03D4     		bmi	.L84
2462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 903              		.loc 1 2462 15 is_stmt 1 view .LVU265
 904 0084 636D     		ldr	r3, [r4, #84]
 905 0086 43F00103 		orr	r3, r3, #1
 906 008a 6365     		str	r3, [r4, #84]
 907              	.L84:
2485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 908              		.loc 1 2485 5 view .LVU266
 909 008c 2046     		mov	r0, r4
 910 008e FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 911              	.LVL56:
2493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 912              		.loc 1 2493 5 view .LVU267
 913 0092 2368     		ldr	r3, [r4]
 914 0094 0C22     		movs	r2, #12
 915 0096 1A60     		str	r2, [r3]
 916              	.L81:
ARM GAS  /tmp/cc6JDs4t.s 			page 209


2497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 917              		.loc 1 2497 3 view .LVU268
2497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 918              		.loc 1 2497 6 is_stmt 0 view .LVU269
 919 0098 A806     		lsls	r0, r5, #26
 920 009a 50D5     		bpl	.L90
 921              	.L199:
2497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 922              		.loc 1 2497 53 discriminator 1 view .LVU270
 923 009c B106     		lsls	r1, r6, #26
 924 009e 4ED5     		bpl	.L90
 925              	.L91:
2501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 926              		.loc 1 2501 5 is_stmt 1 view .LVU271
2501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 927              		.loc 1 2501 14 is_stmt 0 view .LVU272
 928 00a0 626D     		ldr	r2, [r4, #84]
2501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 929              		.loc 1 2501 8 view .LVU273
 930 00a2 D106     		lsls	r1, r2, #27
 931 00a4 03D4     		bmi	.L93
2504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 932              		.loc 1 2504 7 is_stmt 1 view .LVU274
 933 00a6 626D     		ldr	r2, [r4, #84]
 934 00a8 42F40052 		orr	r2, r2, #8192
 935 00ac 6265     		str	r2, [r4, #84]
 936              	.L93:
2508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 937              		.loc 1 2508 5 view .LVU275
 938              	.LVL57:
 939              	.LBB298:
 940              	.LBI298:
4588:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 941              		.loc 2 4588 26 view .LVU276
 942              	.LBB299:
4590:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 943              		.loc 2 4590 3 view .LVU277
 944              	.LBE299:
 945              	.LBE298:
2513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 946              		.loc 1 2513 10 is_stmt 0 view .LVU278
 947 00ae 6F48     		ldr	r0, .L201+4
 948              	.LBB302:
 949              	.LBB300:
4590:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 950              		.loc 2 4590 12 view .LVU279
 951 00b0 DA6C     		ldr	r2, [r3, #76]
 952              	.LBE300:
 953              	.LBE302:
2513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 954              		.loc 1 2513 10 view .LVU280
 955 00b2 8342     		cmp	r3, r0
 956              	.LBB303:
 957              	.LBB304:
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 958              		.loc 2 3803 12 view .LVU281
 959 00b4 D968     		ldr	r1, [r3, #12]
ARM GAS  /tmp/cc6JDs4t.s 			page 210


 960              	.LBE304:
 961              	.LBE303:
 962              	.LBB307:
 963              	.LBB301:
4590:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 964              		.loc 2 4590 12 view .LVU282
 965 00b6 02F4C072 		and	r2, r2, #384
 966              	.LVL58:
4590:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 967              		.loc 2 4590 12 view .LVU283
 968              	.LBE301:
 969              	.LBE307:
2509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
 970              		.loc 1 2509 5 is_stmt 1 view .LVU284
 971              	.LBB308:
 972              	.LBI303:
3801:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 973              		.loc 2 3801 26 view .LVU285
 974              	.LBB305:
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 975              		.loc 2 3803 3 view .LVU286
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 976              		.loc 2 3803 3 is_stmt 0 view .LVU287
 977              	.LBE305:
 978              	.LBE308:
2513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 979              		.loc 1 2513 5 is_stmt 1 view .LVU288
2513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 980              		.loc 1 2513 10 is_stmt 0 view .LVU289
 981 00ba 75D0     		beq	.L94
 982              	.L111:
2519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 983              		.loc 1 2519 7 is_stmt 1 view .LVU290
2519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 984              		.loc 1 2519 16 is_stmt 0 view .LVU291
 985 00bc D868     		ldr	r0, [r3, #12]
 986              	.LVL59:
 987              	.L95:
2532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 988              		.loc 1 2532 5 is_stmt 1 view .LVU292
2532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 989              		.loc 1 2532 8 is_stmt 0 view .LVU293
 990 00be 2AB1     		cbz	r2, .L96
2534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
 991              		.loc 1 2534 60 discriminator 1 view .LVU294
 992 00c0 6B4A     		ldr	r2, .L201+8
 993              	.LVL60:
 994              	.LBB309:
 995              	.LBB306:
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 996              		.loc 2 3803 12 discriminator 1 view .LVU295
 997 00c2 01F44061 		and	r1, r1, #3072
 998              	.LVL61:
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 999              		.loc 2 3803 12 discriminator 1 view .LVU296
 1000              	.LBE306:
 1001              	.LBE309:
ARM GAS  /tmp/cc6JDs4t.s 			page 211


2534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
 1002              		.loc 1 2534 60 discriminator 1 view .LVU297
 1003 00c6 0240     		ands	r2, r2, r0
 1004 00c8 0A43     		orrs	r2, r1, r2
 1005 00ca 17D1     		bne	.L97
 1006              	.L96:
2538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1007              		.loc 1 2538 7 is_stmt 1 view .LVU298
2538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1008              		.loc 1 2538 11 is_stmt 0 view .LVU299
 1009 00cc 1A68     		ldr	r2, [r3]
2538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1010              		.loc 1 2538 10 view .LVU300
 1011 00ce 5206     		lsls	r2, r2, #25
 1012 00d0 14D5     		bpl	.L97
2546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1013              		.loc 1 2546 9 is_stmt 1 view .LVU301
2546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1014              		.loc 1 2546 12 is_stmt 0 view .LVU302
 1015 00d2 8102     		lsls	r1, r0, #10
 1016 00d4 12D4     		bmi	.L97
2550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 1017              		.loc 1 2550 11 is_stmt 1 view .LVU303
 1018              	.LVL62:
 1019              	.LBB310:
 1020              	.LBI310:
6891:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6892:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6893:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6894:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6895:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6896:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6897:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6898:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6899:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6900:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6901:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6902:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6903:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6904:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6905:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6906:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6907:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6908:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with feature oversampling).
6909:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6910:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6911:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6912:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6913:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
6914:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6915:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6916:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6917:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6918:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6919:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6920:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 16 bits.
6921:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
ARM GAS  /tmp/cc6JDs4t.s 			page 212


6922:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
6923:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6924:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData16
6925:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6926:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFF
6927:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6928:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData16(ADC_TypeDef *ADCx)
6929:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6930:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6931:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6932:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6933:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6934:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6935:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 14 bits.
6936:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6937:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
6938:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6939:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData14
6940:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6941:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3FF
6942:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6943:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData14(ADC_TypeDef *ADCx)
6944:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6945:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6946:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6947:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6948:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6949:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6950:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 12 bits.
6951:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6952:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
6953:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6954:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
6955:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6956:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6957:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6958:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
6959:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6960:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6961:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6962:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6963:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6964:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6965:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 10 bits.
6966:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6967:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
6968:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6969:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
6970:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6971:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6972:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6973:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
6974:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6975:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6976:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6977:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6978:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  /tmp/cc6JDs4t.s 			page 213


6979:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6980:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 8 bits.
6981:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6982:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
6983:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6984:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
6985:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6986:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6987:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6988:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
6989:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6990:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6991:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6992:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6993:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
6994:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
6995:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
6996:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a macro is available to get the conversion data of
6997:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6998:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6999:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
7000:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
7001:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
7002:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         separately).
7003:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
7004:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
7005:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7006:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7007:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
7008:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
7009:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
7010:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
7011:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7012:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7013:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(ADC_Common_TypeDef *ADCxy_COMMON, uin
7014:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7015:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
7016:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ConversionData)
7017:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
7018:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
7019:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7020:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7021:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7022:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
7023:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7024:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7025:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
7026:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
7027:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7028:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7029:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7030:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
7031:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
7032:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
7033:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
7034:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           starts immediately.
7035:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
ARM GAS  /tmp/cc6JDs4t.s 			page 214


7036:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
7037:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           following the ADC start conversion command.
7038:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7039:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
7040:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
7041:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
7042:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without ADC disable command on going.
7043:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
7044:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7045:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7046:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7047:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
7048:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7049:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7050:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7051:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7052:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7053:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7054:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_JADSTART);
7055:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7056:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7057:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7058:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
7059:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7060:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
7061:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
7062:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without ADC disable command on going.
7063:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
7064:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7065:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7066:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7067:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
7068:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7069:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7070:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7071:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7072:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7073:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7074:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_JADSTP);
7075:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7076:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7077:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7078:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
7079:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
7080:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7081:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
7082:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7083:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
 1021              		.loc 2 7083 26 view .LVU304
 1022              	.LBB311:
7084:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 1023              		.loc 2 7085 3 view .LVU305
 1024              		.loc 2 7085 12 is_stmt 0 view .LVU306
 1025 00d6 9A68     		ldr	r2, [r3, #8]
 1026              		.loc 2 7085 76 view .LVU307
 1027 00d8 1207     		lsls	r2, r2, #28
ARM GAS  /tmp/cc6JDs4t.s 			page 215


 1028 00da 00F1B080 		bmi	.L99
 1029              	.LVL63:
 1030              		.loc 2 7085 76 view .LVU308
 1031              	.LBE311:
 1032              	.LBE310:
2553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1033              		.loc 1 2553 13 is_stmt 1 view .LVU309
 1034 00de 5A68     		ldr	r2, [r3, #4]
 1035 00e0 22F06002 		bic	r2, r2, #96
 1036 00e4 5A60     		str	r2, [r3, #4]
2556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1037              		.loc 1 2556 13 view .LVU310
 1038 00e6 636D     		ldr	r3, [r4, #84]
 1039 00e8 23F48053 		bic	r3, r3, #4096
 1040 00ec 6365     		str	r3, [r4, #84]
2558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 1041              		.loc 1 2558 13 view .LVU311
2558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 1042              		.loc 1 2558 22 is_stmt 0 view .LVU312
 1043 00ee 636D     		ldr	r3, [r4, #84]
2558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 1044              		.loc 1 2558 16 view .LVU313
 1045 00f0 D805     		lsls	r0, r3, #23
 1046              	.LVL64:
2558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 1047              		.loc 1 2558 16 view .LVU314
 1048 00f2 03D4     		bmi	.L97
2560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 1049              		.loc 1 2560 15 is_stmt 1 view .LVU315
 1050 00f4 636D     		ldr	r3, [r4, #84]
 1051 00f6 43F00103 		orr	r3, r3, #1
 1052 00fa 6365     		str	r3, [r4, #84]
 1053              	.L97:
2584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1054              		.loc 1 2584 5 view .LVU316
 1055 00fc 2046     		mov	r0, r4
 1056 00fe FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 1057              	.LVL65:
2588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1058              		.loc 1 2588 5 view .LVU317
 1059 0102 2368     		ldr	r3, [r4]
 1060 0104 6022     		movs	r2, #96
 1061 0106 1A60     		str	r2, [r3]
 1062              	.L92:
2592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1063              		.loc 1 2592 3 view .LVU318
2592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1064              		.loc 1 2592 6 is_stmt 0 view .LVU319
 1065 0108 2906     		lsls	r1, r5, #24
 1066 010a 01D5     		bpl	.L101
2592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1067              		.loc 1 2592 52 discriminator 1 view .LVU320
 1068 010c 3206     		lsls	r2, r6, #24
 1069 010e 5FD4     		bmi	.L194
 1070              	.L101:
2609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1071              		.loc 1 2609 3 is_stmt 1 view .LVU321
ARM GAS  /tmp/cc6JDs4t.s 			page 216


2609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1072              		.loc 1 2609 6 is_stmt 0 view .LVU322
 1073 0110 E805     		lsls	r0, r5, #23
 1074 0112 01D5     		bpl	.L102
2609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1075              		.loc 1 2609 52 discriminator 1 view .LVU323
 1076 0114 F105     		lsls	r1, r6, #23
 1077 0116 66D4     		bmi	.L195
 1078              	.L102:
2626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1079              		.loc 1 2626 3 is_stmt 1 view .LVU324
2626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1080              		.loc 1 2626 6 is_stmt 0 view .LVU325
 1081 0118 AA05     		lsls	r2, r5, #22
 1082 011a 01D5     		bpl	.L103
2626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1083              		.loc 1 2626 52 discriminator 1 view .LVU326
 1084 011c B005     		lsls	r0, r6, #22
 1085 011e 4BD4     		bmi	.L196
 1086              	.L103:
2643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1087              		.loc 1 2643 3 is_stmt 1 view .LVU327
2643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1088              		.loc 1 2643 6 is_stmt 0 view .LVU328
 1089 0120 E906     		lsls	r1, r5, #27
 1090 0122 01D5     		bpl	.L104
2643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1091              		.loc 1 2643 50 discriminator 1 view .LVU329
 1092 0124 F206     		lsls	r2, r6, #27
 1093 0126 11D4     		bmi	.L197
 1094              	.LVL66:
 1095              	.L104:
2702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1096              		.loc 1 2702 3 is_stmt 1 view .LVU330
2702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1097              		.loc 1 2702 6 is_stmt 0 view .LVU331
 1098 0128 6805     		lsls	r0, r5, #21
 1099 012a 01D5     		bpl	.L75
2702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1100              		.loc 1 2702 54 discriminator 1 view .LVU332
 1101 012c 7105     		lsls	r1, r6, #21
 1102 012e 66D4     		bmi	.L198
 1103              	.L75:
2721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1104              		.loc 1 2721 1 view .LVU333
 1105 0130 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1106              	.LVL67:
 1107              	.L79:
2407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1108              		.loc 1 2407 94 discriminator 3 view .LVU334
 1109 0132 2807     		lsls	r0, r5, #28
 1110 0134 B0D5     		bpl	.L81
2408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1111              		.loc 1 2408 51 view .LVU335
 1112 0136 3107     		lsls	r1, r6, #28
 1113 0138 80D4     		bmi	.L80
2497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
ARM GAS  /tmp/cc6JDs4t.s 			page 217


 1114              		.loc 1 2497 3 is_stmt 1 view .LVU336
2497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1115              		.loc 1 2497 6 is_stmt 0 view .LVU337
 1116 013a A806     		lsls	r0, r5, #26
 1117 013c AED4     		bmi	.L199
 1118              	.L90:
2497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1119              		.loc 1 2497 98 discriminator 3 view .LVU338
 1120 013e 6A06     		lsls	r2, r5, #25
 1121 0140 E2D5     		bpl	.L92
2498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1122              		.loc 1 2498 53 view .LVU339
 1123 0142 7006     		lsls	r0, r6, #25
 1124 0144 E0D5     		bpl	.L92
 1125 0146 ABE7     		b	.L91
 1126              	.LVL68:
 1127              	.L115:
2379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1128              		.loc 1 2379 35 view .LVU340
 1129 0148 4A4A     		ldr	r2, .L201+12
 1130 014a 6BE7     		b	.L76
 1131              	.LVL69:
 1132              	.L197:
2651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1133              		.loc 1 2651 5 is_stmt 1 view .LVU341
2651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1134              		.loc 1 2651 8 is_stmt 0 view .LVU342
 1135 014c 226B     		ldr	r2, [r4, #48]
 1136 014e 72B1     		cbz	r2, .L105
2658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1137              		.loc 1 2658 7 is_stmt 1 view .LVU343
2658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1138              		.loc 1 2658 10 is_stmt 0 view .LVU344
 1139 0150 002F     		cmp	r7, #0
 1140 0152 69D0     		beq	.L106
2662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1141              		.loc 1 2662 9 is_stmt 1 view .LVU345
2662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1142              		.loc 1 2662 40 is_stmt 0 view .LVU346
 1143 0154 444A     		ldr	r2, .L201
2662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1144              		.loc 1 2662 13 view .LVU347
 1145 0156 9342     		cmp	r3, r2
 1146 0158 00F08380 		beq	.L117
2662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1147              		.loc 1 2662 40 view .LVU348
 1148 015c 02F58072 		add	r2, r2, #256
2662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1149              		.loc 1 2662 13 view .LVU349
 1150 0160 9342     		cmp	r3, r2
 1151 0162 7ED0     		beq	.L117
 1152 0164 444A     		ldr	r2, .L201+16
 1153              	.L107:
 1154              	.LVL70:
 1155              	.LBB312:
 1156              	.LBI312:
6507:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/cc6JDs4t.s 			page 218


 1157              		.loc 2 6507 26 is_stmt 1 discriminator 4 view .LVU350
 1158              	.LBB313:
6509:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1159              		.loc 2 6509 3 discriminator 4 view .LVU351
6509:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1160              		.loc 2 6509 21 is_stmt 0 discriminator 4 view .LVU352
 1161 0166 9268     		ldr	r2, [r2, #8]
 1162              	.LVL71:
6509:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1163              		.loc 2 6509 21 discriminator 4 view .LVU353
 1164              	.LBE313:
 1165              	.LBE312:
2662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1166              		.loc 1 2662 12 discriminator 4 view .LVU354
 1167 0168 12F4404F 		tst	r2, #49152
 1168 016c 0BD0     		beq	.L109
 1169              	.LVL72:
 1170              	.L105:
2680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1171              		.loc 1 2680 7 is_stmt 1 view .LVU355
 1172 016e 636D     		ldr	r3, [r4, #84]
2693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1173              		.loc 1 2693 7 is_stmt 0 view .LVU356
 1174 0170 2046     		mov	r0, r4
2680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1175              		.loc 1 2680 7 view .LVU357
 1176 0172 43F48063 		orr	r3, r3, #1024
 1177 0176 6365     		str	r3, [r4, #84]
2683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1178              		.loc 1 2683 7 is_stmt 1 view .LVU358
 1179 0178 A36D     		ldr	r3, [r4, #88]
 1180 017a 43F00203 		orr	r3, r3, #2
 1181 017e A365     		str	r3, [r4, #88]
2693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1182              		.loc 1 2693 7 view .LVU359
 1183 0180 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1184              	.LVL73:
 1185 0184 2368     		ldr	r3, [r4]
 1186              	.L109:
2698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1187              		.loc 1 2698 5 view .LVU360
 1188 0186 1022     		movs	r2, #16
 1189 0188 1A60     		str	r2, [r3]
 1190 018a CDE7     		b	.L104
 1191              	.LVL74:
 1192              	.L193:
2389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1193              		.loc 1 2389 5 view .LVU361
2389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1194              		.loc 1 2389 14 is_stmt 0 view .LVU362
 1195 018c 636D     		ldr	r3, [r4, #84]
2389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1196              		.loc 1 2389 8 view .LVU363
 1197 018e D806     		lsls	r0, r3, #27
 1198              	.LVL75:
2389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1199              		.loc 1 2389 8 view .LVU364
ARM GAS  /tmp/cc6JDs4t.s 			page 219


 1200 0190 03D4     		bmi	.L78
2392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1201              		.loc 1 2392 7 is_stmt 1 view .LVU365
 1202 0192 636D     		ldr	r3, [r4, #84]
 1203 0194 43F40063 		orr	r3, r3, #2048
 1204 0198 6365     		str	r3, [r4, #84]
 1205              	.L78:
2399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1206              		.loc 1 2399 5 view .LVU366
 1207 019a 2046     		mov	r0, r4
 1208 019c FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1209              	.LVL76:
2403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1210              		.loc 1 2403 5 view .LVU367
 1211 01a0 2368     		ldr	r3, [r4]
 1212 01a2 0222     		movs	r2, #2
 1213 01a4 1A60     		str	r2, [r3]
 1214 01a6 45E7     		b	.L77
 1215              	.LVL77:
 1216              	.L94:
2515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 1217              		.loc 1 2515 34 is_stmt 0 view .LVU368
 1218 01a8 B81F     		subs	r0, r7, #6
2516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
 1219              		.loc 1 2516 9 view .LVU369
 1220 01aa 0128     		cmp	r0, #1
 1221 01ac 86D9     		bls	.L111
 1222 01ae 002F     		cmp	r7, #0
 1223 01b0 84D0     		beq	.L111
2523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 1224              		.loc 1 2523 7 is_stmt 1 discriminator 4 view .LVU370
 1225              	.LVL78:
2524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1226              		.loc 1 2524 7 discriminator 4 view .LVU371
2524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1227              		.loc 1 2524 16 is_stmt 0 discriminator 4 view .LVU372
 1228 01b2 2D48     		ldr	r0, .L201
 1229 01b4 C068     		ldr	r0, [r0, #12]
 1230              	.LVL79:
2524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1231              		.loc 1 2524 16 discriminator 4 view .LVU373
 1232 01b6 82E7     		b	.L95
 1233              	.LVL80:
 1234              	.L196:
2629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1235              		.loc 1 2629 5 is_stmt 1 view .LVU374
 1236 01b8 636D     		ldr	r3, [r4, #84]
2635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1237              		.loc 1 2635 5 is_stmt 0 view .LVU375
 1238 01ba 2046     		mov	r0, r4
2629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1239              		.loc 1 2629 5 view .LVU376
 1240 01bc 43F48023 		orr	r3, r3, #262144
 1241 01c0 6365     		str	r3, [r4, #84]
2635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1242              		.loc 1 2635 5 is_stmt 1 view .LVU377
 1243 01c2 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
ARM GAS  /tmp/cc6JDs4t.s 			page 220


 1244              	.LVL81:
2639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1245              		.loc 1 2639 5 view .LVU378
 1246 01c6 2368     		ldr	r3, [r4]
 1247 01c8 4FF40072 		mov	r2, #512
 1248 01cc 1A60     		str	r2, [r3]
 1249 01ce A7E7     		b	.L103
 1250              	.L194:
2595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1251              		.loc 1 2595 5 view .LVU379
 1252 01d0 636D     		ldr	r3, [r4, #84]
2601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1253              		.loc 1 2601 5 is_stmt 0 view .LVU380
 1254 01d2 2046     		mov	r0, r4
2595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1255              		.loc 1 2595 5 view .LVU381
 1256 01d4 43F48033 		orr	r3, r3, #65536
 1257 01d8 6365     		str	r3, [r4, #84]
2601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1258              		.loc 1 2601 5 is_stmt 1 view .LVU382
 1259 01da FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1260              	.LVL82:
2605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1261              		.loc 1 2605 5 view .LVU383
 1262 01de 2368     		ldr	r3, [r4]
 1263 01e0 8022     		movs	r2, #128
 1264 01e2 1A60     		str	r2, [r3]
 1265 01e4 94E7     		b	.L101
 1266              	.L195:
2612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1267              		.loc 1 2612 5 view .LVU384
 1268 01e6 636D     		ldr	r3, [r4, #84]
2618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1269              		.loc 1 2618 5 is_stmt 0 view .LVU385
 1270 01e8 2046     		mov	r0, r4
2612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1271              		.loc 1 2612 5 view .LVU386
 1272 01ea 43F40033 		orr	r3, r3, #131072
 1273 01ee 6365     		str	r3, [r4, #84]
2618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1274              		.loc 1 2618 5 is_stmt 1 view .LVU387
 1275 01f0 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1276              	.LVL83:
2622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1277              		.loc 1 2622 5 view .LVU388
 1278 01f4 2368     		ldr	r3, [r4]
 1279 01f6 4FF48072 		mov	r2, #256
 1280 01fa 1A60     		str	r2, [r3]
 1281 01fc 8CE7     		b	.L102
 1282              	.LVL84:
 1283              	.L198:
2705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1284              		.loc 1 2705 5 view .LVU389
 1285 01fe 626D     		ldr	r2, [r4, #84]
2711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1286              		.loc 1 2711 5 is_stmt 0 view .LVU390
 1287 0200 4FF48061 		mov	r1, #1024
ARM GAS  /tmp/cc6JDs4t.s 			page 221


2717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1288              		.loc 1 2717 5 view .LVU391
 1289 0204 2046     		mov	r0, r4
2705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1290              		.loc 1 2705 5 view .LVU392
 1291 0206 42F48042 		orr	r2, r2, #16384
 1292 020a 6265     		str	r2, [r4, #84]
2708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1293              		.loc 1 2708 5 is_stmt 1 view .LVU393
 1294 020c A26D     		ldr	r2, [r4, #88]
 1295 020e 42F00802 		orr	r2, r2, #8
 1296 0212 A265     		str	r2, [r4, #88]
2711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1297              		.loc 1 2711 5 view .LVU394
 1298 0214 1960     		str	r1, [r3]
2717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1299              		.loc 1 2717 5 view .LVU395
2721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1300              		.loc 1 2721 1 is_stmt 0 view .LVU396
 1301 0216 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 1302              	.LCFI4:
 1303              		.cfi_remember_state
 1304              		.cfi_restore 14
 1305              		.cfi_restore 7
 1306              		.cfi_restore 6
 1307              		.cfi_restore 5
 1308              		.cfi_restore 4
 1309              		.cfi_restore 3
 1310              		.cfi_def_cfa_offset 0
 1311              	.LVL85:
2717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1312              		.loc 1 2717 5 view .LVU397
 1313 021a FFF7FEBF 		b	HAL_ADCEx_InjectedQueueOverflowCallback
 1314              	.LVL86:
 1315              	.L85:
 1316              	.LCFI5:
 1317              		.cfi_restore_state
2426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 1318              		.loc 1 2426 36 view .LVU398
 1319 021e 092F     		cmp	r7, #9
 1320 0220 06D9     		bls	.L200
 1321              	.L113:
2437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 1322              		.loc 1 2437 9 is_stmt 1 discriminator 4 view .LVU399
 1323              	.LVL87:
2438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1324              		.loc 1 2438 9 discriminator 4 view .LVU400
2438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1325              		.loc 1 2438 18 is_stmt 0 discriminator 4 view .LVU401
 1326 0222 114A     		ldr	r2, .L201
 1327 0224 D268     		ldr	r2, [r2, #12]
 1328              	.LVL88:
2438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1329              		.loc 1 2438 18 discriminator 4 view .LVU402
 1330 0226 19E7     		b	.L86
 1331              	.LVL89:
 1332              	.L106:
ARM GAS  /tmp/cc6JDs4t.s 			page 222


2670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1333              		.loc 1 2670 9 is_stmt 1 view .LVU403
2670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1334              		.loc 1 2670 28 is_stmt 0 view .LVU404
 1335 0228 DA68     		ldr	r2, [r3, #12]
2670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1336              		.loc 1 2670 12 view .LVU405
 1337 022a 9707     		lsls	r7, r2, #30
 1338              	.LVL90:
2670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1339              		.loc 1 2670 12 view .LVU406
 1340 022c ABD0     		beq	.L109
 1341 022e 9EE7     		b	.L105
 1342              	.LVL91:
 1343              	.L200:
2426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 1344              		.loc 1 2426 36 view .LVU407
 1345 0230 40F22122 		movw	r2, #545
 1346 0234 FA40     		lsrs	r2, r2, r7
2428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
 1347              		.loc 1 2428 11 view .LVU408
 1348 0236 D207     		lsls	r2, r2, #31
 1349 0238 3FF50FAF 		bmi	.L114
 1350 023c F1E7     		b	.L113
 1351              	.LVL92:
 1352              	.L99:
2566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1353              		.loc 1 2566 13 is_stmt 1 view .LVU409
 1354 023e 636D     		ldr	r3, [r4, #84]
 1355 0240 43F01003 		orr	r3, r3, #16
 1356 0244 6365     		str	r3, [r4, #84]
2569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 1357              		.loc 1 2569 13 view .LVU410
 1358 0246 A36D     		ldr	r3, [r4, #88]
 1359 0248 43F00103 		orr	r3, r3, #1
 1360 024c A365     		str	r3, [r4, #88]
 1361 024e 55E7     		b	.L97
 1362              	.LVL93:
 1363              	.L88:
2468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1364              		.loc 1 2468 13 view .LVU411
 1365 0250 636D     		ldr	r3, [r4, #84]
 1366 0252 43F01003 		orr	r3, r3, #16
 1367 0256 6365     		str	r3, [r4, #84]
2471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 1368              		.loc 1 2471 13 view .LVU412
 1369 0258 A36D     		ldr	r3, [r4, #88]
 1370 025a 43F00103 		orr	r3, r3, #1
 1371 025e A365     		str	r3, [r4, #88]
 1372 0260 14E7     		b	.L84
 1373              	.L117:
2662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1374              		.loc 1 2662 13 is_stmt 0 view .LVU413
 1375 0262 044A     		ldr	r2, .L201+12
 1376 0264 7FE7     		b	.L107
 1377              	.L202:
 1378 0266 00BF     		.align	2
ARM GAS  /tmp/cc6JDs4t.s 			page 223


 1379              	.L201:
 1380 0268 00200240 		.word	1073881088
 1381 026c 00210240 		.word	1073881344
 1382 0270 00200002 		.word	33562624
 1383 0274 00230240 		.word	1073881856
 1384 0278 00630258 		.word	1476551424
 1385              		.cfi_endproc
 1386              	.LFE344:
 1388              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1389              		.align	1
 1390              		.p2align 2,,3
 1391              		.global	ADC_DMAConvCplt
 1392              		.syntax unified
 1393              		.thumb
 1394              		.thumb_func
 1395              		.fpu fpv5-d16
 1397              	ADC_DMAConvCplt:
 1398              	.LVL94:
 1399              	.LFB356:
3822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1400              		.loc 1 3822 1 is_stmt 1 view -0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
3824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1404              		.loc 1 3824 3 view .LVU415
3824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1405              		.loc 1 3824 22 is_stmt 0 view .LVU416
 1406 0000 836B     		ldr	r3, [r0, #56]
 1407              	.LVL95:
3827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1408              		.loc 1 3827 3 is_stmt 1 view .LVU417
3827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1409              		.loc 1 3827 12 is_stmt 0 view .LVU418
 1410 0002 5A6D     		ldr	r2, [r3, #84]
3827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1411              		.loc 1 3827 6 view .LVU419
 1412 0004 12F0500F 		tst	r2, #80
3830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1413              		.loc 1 3830 5 view .LVU420
 1414 0008 5A6D     		ldr	r2, [r3, #84]
3822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1415              		.loc 1 3822 1 view .LVU421
 1416 000a 10B5     		push	{r4, lr}
 1417              	.LCFI6:
 1418              		.cfi_def_cfa_offset 8
 1419              		.cfi_offset 4, -8
 1420              		.cfi_offset 14, -4
3827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1421              		.loc 1 3827 6 view .LVU422
 1422 000c 1DD1     		bne	.L204
3830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1423              		.loc 1 3830 5 is_stmt 1 view .LVU423
3836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1424              		.loc 1 3836 14 is_stmt 0 view .LVU424
 1425 000e 1968     		ldr	r1, [r3]
3830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 224


 1426              		.loc 1 3830 5 view .LVU425
 1427 0010 42F40072 		orr	r2, r2, #512
 1428 0014 5A65     		str	r2, [r3, #84]
3836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1429              		.loc 1 3836 5 is_stmt 1 view .LVU426
3836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1430              		.loc 1 3836 24 is_stmt 0 view .LVU427
 1431 0016 0A68     		ldr	r2, [r1]
3836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1432              		.loc 1 3836 8 view .LVU428
 1433 0018 12F0080F 		tst	r2, #8
 1434              	.LBB314:
 1435              	.LBB315:
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1436              		.loc 2 3803 12 view .LVU429
 1437 001c CA68     		ldr	r2, [r1, #12]
 1438              	.LBE315:
 1439              	.LBE314:
3836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1440              		.loc 1 3836 8 view .LVU430
 1441 001e 1BD0     		beq	.L205
3839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1442              		.loc 1 3839 7 is_stmt 1 view .LVU431
 1443              	.LVL96:
 1444              	.LBB317:
 1445              	.LBI314:
3801:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1446              		.loc 2 3801 26 view .LVU432
 1447              	.LBB316:
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1448              		.loc 2 3803 3 view .LVU433
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1449              		.loc 2 3803 103 is_stmt 0 view .LVU434
 1450 0020 12F4406F 		tst	r2, #3072
 1451 0024 0DD1     		bne	.L207
 1452              	.LVL97:
3803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1453              		.loc 2 3803 103 view .LVU435
 1454              	.LBE316:
 1455              	.LBE317:
3842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1456              		.loc 1 3842 9 is_stmt 1 view .LVU436
3842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1457              		.loc 1 3842 13 is_stmt 0 view .LVU437
 1458 0026 CA68     		ldr	r2, [r1, #12]
3842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1459              		.loc 1 3842 12 view .LVU438
 1460 0028 9404     		lsls	r4, r2, #18
 1461 002a 0AD4     		bmi	.L207
 1462              	.LVL98:
 1463              	.L214:
3860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 1464              		.loc 1 3860 9 is_stmt 1 view .LVU439
 1465 002c 5A6D     		ldr	r2, [r3, #84]
 1466 002e 22F48072 		bic	r2, r2, #256
 1467 0032 5A65     		str	r2, [r3, #84]
3861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
ARM GAS  /tmp/cc6JDs4t.s 			page 225


 1468              		.loc 1 3861 9 view .LVU440
3861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1469              		.loc 1 3861 18 is_stmt 0 view .LVU441
 1470 0034 5A6D     		ldr	r2, [r3, #84]
3861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1471              		.loc 1 3861 12 view .LVU442
 1472 0036 D104     		lsls	r1, r2, #19
 1473 0038 03D4     		bmi	.L207
3863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 1474              		.loc 1 3863 11 is_stmt 1 view .LVU443
 1475 003a 5A6D     		ldr	r2, [r3, #84]
 1476 003c 42F00102 		orr	r2, r2, #1
 1477 0040 5A65     		str	r2, [r3, #84]
 1478              	.L207:
3872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1479              		.loc 1 3872 5 view .LVU444
 1480 0042 1846     		mov	r0, r3
 1481 0044 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1482              	.LVL99:
 1483              	.L203:
3892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1484              		.loc 1 3892 1 is_stmt 0 view .LVU445
 1485 0048 10BD     		pop	{r4, pc}
 1486              	.LVL100:
 1487              	.L204:
3877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1488              		.loc 1 3877 5 is_stmt 1 view .LVU446
3877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1489              		.loc 1 3877 8 is_stmt 0 view .LVU447
 1490 004a D206     		lsls	r2, r2, #27
 1491 004c 0AD4     		bmi	.L216
3889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1492              		.loc 1 3889 7 is_stmt 1 view .LVU448
3889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1493              		.loc 1 3889 23 is_stmt 0 view .LVU449
 1494 004e DB6C     		ldr	r3, [r3, #76]
 1495              	.LVL101:
3892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1496              		.loc 1 3892 1 view .LVU450
 1497 0050 BDE81040 		pop	{r4, lr}
 1498              	.LCFI7:
 1499              		.cfi_remember_state
 1500              		.cfi_restore 14
 1501              		.cfi_restore 4
 1502              		.cfi_def_cfa_offset 0
3889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1503              		.loc 1 3889 7 view .LVU451
 1504 0054 DB6C     		ldr	r3, [r3, #76]
 1505 0056 1847     		bx	r3	@ indirect register sibling call
 1506              	.LVL102:
 1507              	.L205:
 1508              	.LCFI8:
 1509              		.cfi_restore_state
3857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1510              		.loc 1 3857 7 is_stmt 1 view .LVU452
3857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1511              		.loc 1 3857 10 is_stmt 0 view .LVU453
ARM GAS  /tmp/cc6JDs4t.s 			page 226


 1512 0058 9007     		lsls	r0, r2, #30
 1513              	.LVL103:
3857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1514              		.loc 1 3857 10 view .LVU454
 1515 005a E7D0     		beq	.L214
3872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1516              		.loc 1 3872 5 is_stmt 1 view .LVU455
 1517 005c 1846     		mov	r0, r3
 1518 005e FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1519              	.LVL104:
3872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1520              		.loc 1 3872 5 is_stmt 0 view .LVU456
 1521 0062 F1E7     		b	.L203
 1522              	.LVL105:
 1523              	.L216:
3883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1524              		.loc 1 3883 7 is_stmt 1 view .LVU457
 1525 0064 1846     		mov	r0, r3
 1526              	.LVL106:
3883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1527              		.loc 1 3883 7 is_stmt 0 view .LVU458
 1528 0066 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1529              	.LVL107:
3892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1530              		.loc 1 3892 1 view .LVU459
 1531 006a 10BD     		pop	{r4, pc}
 1532              		.cfi_endproc
 1533              	.LFE356:
 1535              		.section	.text.ADC_DMAError,"ax",%progbits
 1536              		.align	1
 1537              		.p2align 2,,3
 1538              		.global	ADC_DMAError
 1539              		.syntax unified
 1540              		.thumb
 1541              		.thumb_func
 1542              		.fpu fpv5-d16
 1544              	ADC_DMAError:
 1545              	.LVL108:
 1546              	.LFB358:
3911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  DMA error callback.
3914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
3916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)
3918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 1547              		.loc 1 3918 1 is_stmt 1 view -0
 1548              		.cfi_startproc
 1549              		@ args = 0, pretend = 0, frame = 0
 1550              		@ frame_needed = 0, uses_anonymous_args = 0
3919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1551              		.loc 1 3920 3 view .LVU461
 1552              		.loc 1 3920 22 is_stmt 0 view .LVU462
 1553 0000 806B     		ldr	r0, [r0, #56]
 1554              	.LVL109:
ARM GAS  /tmp/cc6JDs4t.s 			page 227


3921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Set ADC state */
3923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 1555              		.loc 1 3923 3 is_stmt 1 view .LVU463
3918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1556              		.loc 1 3918 1 is_stmt 0 view .LVU464
 1557 0002 08B5     		push	{r3, lr}
 1558              	.LCFI9:
 1559              		.cfi_def_cfa_offset 8
 1560              		.cfi_offset 3, -8
 1561              		.cfi_offset 14, -4
 1562              		.loc 1 3923 3 view .LVU465
 1563 0004 436D     		ldr	r3, [r0, #84]
 1564 0006 43F04003 		orr	r3, r3, #64
 1565 000a 4365     		str	r3, [r0, #84]
3924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Set ADC error code to DMA error */
3926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 1566              		.loc 1 3926 3 is_stmt 1 view .LVU466
 1567 000c 836D     		ldr	r3, [r0, #88]
 1568 000e 43F00403 		orr	r3, r3, #4
 1569 0012 8365     		str	r3, [r0, #88]
3927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Error callback */
3929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
3931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
3932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 1570              		.loc 1 3932 3 view .LVU467
 1571 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1572              	.LVL110:
3933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1573              		.loc 1 3934 1 is_stmt 0 view .LVU468
 1574 0018 08BD     		pop	{r3, pc}
 1575              		.cfi_endproc
 1576              	.LFE358:
 1578 001a 00BF     		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 1579              		.align	1
 1580              		.p2align 2,,3
 1581              		.global	HAL_ADC_ConfigChannel
 1582              		.syntax unified
 1583              		.thumb
 1584              		.thumb_func
 1585              		.fpu fpv5-d16
 1587              	HAL_ADC_ConfigChannel:
 1588              	.LVL111:
 1589              	.LFB349:
2827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1590              		.loc 1 2827 1 is_stmt 1 view -0
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 8
 1593              		@ frame_needed = 0, uses_anonymous_args = 0
2828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 1594              		.loc 1 2828 3 view .LVU470
2829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 1595              		.loc 1 2829 3 view .LVU471
ARM GAS  /tmp/cc6JDs4t.s 			page 228


2830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
 1596              		.loc 1 2830 3 view .LVU472
2831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 1597              		.loc 1 2831 3 view .LVU473
2827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1598              		.loc 1 2827 1 is_stmt 0 view .LVU474
 1599 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1600              	.LCFI10:
 1601              		.cfi_def_cfa_offset 20
 1602              		.cfi_offset 4, -20
 1603              		.cfi_offset 5, -16
 1604              		.cfi_offset 6, -12
 1605              		.cfi_offset 7, -8
 1606              		.cfi_offset 14, -4
2831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 1607              		.loc 1 2831 17 view .LVU475
 1608 0002 0022     		movs	r2, #0
2827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1609              		.loc 1 2827 1 view .LVU476
 1610 0004 83B0     		sub	sp, sp, #12
 1611              	.LCFI11:
 1612              		.cfi_def_cfa_offset 32
2831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 1613              		.loc 1 2831 17 view .LVU477
 1614 0006 0192     		str	r2, [sp, #4]
2832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 1615              		.loc 1 2832 3 is_stmt 1 view .LVU478
2833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1616              		.loc 1 2833 3 view .LVU479
2836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
 1617              		.loc 1 2836 3 view .LVU480
2837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 1618              		.loc 1 2837 3 view .LVU481
2838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
 1619              		.loc 1 2838 3 view .LVU482
2839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
 1620              		.loc 1 2839 3 view .LVU483
2840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check offset range according to oversampling setting */
 1621              		.loc 1 2840 3 view .LVU484
2842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1622              		.loc 1 2842 3 view .LVU485
2856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1623              		.loc 1 2856 7 view .LVU486
2862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1624              		.loc 1 2862 3 view .LVU487
2865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1625              		.loc 1 2865 3 view .LVU488
2883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1626              		.loc 1 2883 7 view .LVU489
2889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1627              		.loc 1 2889 3 view .LVU490
2889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1628              		.loc 1 2889 3 view .LVU491
 1629 0008 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
 1630 000c 012A     		cmp	r2, #1
 1631 000e 00F03A81 		beq	.L263
2889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 229


 1632              		.loc 1 2889 3 discriminator 2 view .LVU492
 1633 0012 0346     		mov	r3, r0
 1634 0014 0120     		movs	r0, #1
 1635              	.LVL112:
2896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1636              		.loc 1 2896 7 is_stmt 0 discriminator 2 view .LVU493
 1637 0016 1A68     		ldr	r2, [r3]
2889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1638              		.loc 1 2889 3 discriminator 2 view .LVU494
 1639 0018 83F85000 		strb	r0, [r3, #80]
2889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1640              		.loc 1 2889 3 is_stmt 1 discriminator 2 view .LVU495
2896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1641              		.loc 1 2896 3 discriminator 2 view .LVU496
 1642              	.LVL113:
 1643              	.LBB318:
 1644              	.LBI318:
6888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1645              		.loc 2 6888 26 discriminator 2 view .LVU497
 1646              	.LBB319:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1647              		.loc 2 6890 3 discriminator 2 view .LVU498
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1648              		.loc 2 6890 12 is_stmt 0 discriminator 2 view .LVU499
 1649 001c 9468     		ldr	r4, [r2, #8]
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1650              		.loc 2 6890 74 discriminator 2 view .LVU500
 1651 001e 6607     		lsls	r6, r4, #29
 1652 0020 00F19980 		bmi	.L290
 1653              	.LVL114:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1654              		.loc 2 6890 74 discriminator 2 view .LVU501
 1655              	.LBE319:
 1656              	.LBE318:
2907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1657              		.loc 1 2907 5 is_stmt 1 view .LVU502
2907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1658              		.loc 1 2907 39 is_stmt 0 view .LVU503
 1659 0024 0C68     		ldr	r4, [r1]
 1660 0026 C4F31305 		ubfx	r5, r4, #0, #20
2907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1661              		.loc 1 2907 35 view .LVU504
 1662 002a 002D     		cmp	r5, #0
 1663 002c 40F09E80 		bne	.L223
2907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1664              		.loc 1 2907 39 discriminator 1 view .LVU505
 1665 0030 C4F3846C 		ubfx	ip, r4, #26, #5
2907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1666              		.loc 1 2907 35 discriminator 1 view .LVU506
 1667 0034 00FA0CF0 		lsl	r0, r0, ip
 1668              	.L224:
2911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1669              		.loc 1 2911 5 discriminator 4 view .LVU507
 1670 0038 4C68     		ldr	r4, [r1, #4]
 1671              	.LBB320:
 1672              	.LBB321:
4136:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
ARM GAS  /tmp/cc6JDs4t.s 			page 230


 1673              		.loc 2 4136 3 discriminator 4 view .LVU508
 1674 003a 1F26     		movs	r6, #31
 1675              	.LBE321:
 1676              	.LBE320:
2907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1677              		.loc 1 2907 27 discriminator 4 view .LVU509
 1678 003c D569     		ldr	r5, [r2, #28]
 1679              	.LBB325:
 1680              	.LBB322:
4134:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 1681              		.loc 2 4134 25 discriminator 4 view .LVU510
 1682 003e A709     		lsrs	r7, r4, #6
4136:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1683              		.loc 2 4136 3 discriminator 4 view .LVU511
 1684 0040 3440     		ands	r4, r4, r6
 1685              	.LBE322:
 1686              	.LBE325:
2907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1687              		.loc 1 2907 27 discriminator 4 view .LVU512
 1688 0042 2843     		orrs	r0, r0, r5
 1689              	.LBB326:
 1690              	.LBB323:
4134:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 1691              		.loc 2 4134 25 discriminator 4 view .LVU513
 1692 0044 02F13005 		add	r5, r2, #48
 1693 0048 07F00C07 		and	r7, r7, #12
4136:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1694              		.loc 2 4136 3 discriminator 4 view .LVU514
 1695 004c A640     		lsls	r6, r6, r4
 1696              	.LBE323:
 1697              	.LBE326:
2907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1698              		.loc 1 2907 27 discriminator 4 view .LVU515
 1699 004e D061     		str	r0, [r2, #28]
2911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1700              		.loc 1 2911 5 is_stmt 1 discriminator 4 view .LVU516
 1701              	.LVL115:
 1702              	.LBB327:
 1703              	.LBI320:
4128:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1704              		.loc 2 4128 22 discriminator 4 view .LVU517
 1705              	.LBB324:
4134:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 1706              		.loc 2 4134 3 discriminator 4 view .LVU518
4136:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1707              		.loc 2 4136 3 discriminator 4 view .LVU519
 1708 0050 0CFA04F4 		lsl	r4, ip, r4
 1709 0054 7859     		ldr	r0, [r7, r5]
 1710 0056 20EA0600 		bic	r0, r0, r6
 1711 005a 2043     		orrs	r0, r0, r4
 1712 005c 7851     		str	r0, [r7, r5]
 1713              	.LVL116:
4136:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1714              		.loc 2 4136 3 is_stmt 0 discriminator 4 view .LVU520
 1715              	.LBE324:
 1716              	.LBE327:
2918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
ARM GAS  /tmp/cc6JDs4t.s 			page 231


 1717              		.loc 1 2918 5 is_stmt 1 discriminator 4 view .LVU521
 1718              	.LBB328:
 1719              	.LBI328:
6888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1720              		.loc 2 6888 26 discriminator 4 view .LVU522
 1721              	.LBB329:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1722              		.loc 2 6890 3 discriminator 4 view .LVU523
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1723              		.loc 2 6890 12 is_stmt 0 discriminator 4 view .LVU524
 1724 005e 9068     		ldr	r0, [r2, #8]
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1725              		.loc 2 6890 74 discriminator 4 view .LVU525
 1726 0060 4507     		lsls	r5, r0, #29
 1727 0062 00F18180 		bmi	.L226
 1728              	.LVL117:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1729              		.loc 2 6890 74 discriminator 4 view .LVU526
 1730              	.LBE329:
 1731              	.LBE328:
2919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 1732              		.loc 1 2919 5 is_stmt 1 view .LVU527
 1733              	.LBB330:
 1734              	.LBI330:
7083:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1735              		.loc 2 7083 26 view .LVU528
 1736              	.LBB331:
 1737              		.loc 2 7085 3 view .LVU529
 1738              		.loc 2 7085 12 is_stmt 0 view .LVU530
 1739 0066 9568     		ldr	r5, [r2, #8]
 1740              		.loc 2 7085 76 view .LVU531
 1741 0068 15F00805 		ands	r5, r5, #8
 1742 006c 57D1     		bne	.L228
 1743              	.LVL118:
 1744              		.loc 2 7085 76 view .LVU532
 1745              	.LBE331:
 1746              	.LBE330:
2920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 1747              		.loc 1 2920 5 is_stmt 1 view .LVU533
2925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1748              		.loc 1 2925 7 view .LVU534
 1749 006e 0C68     		ldr	r4, [r1]
 1750              	.LVL119:
 1751              	.LBB333:
 1752              	.LBI333:
5282:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1753              		.loc 2 5282 22 view .LVU535
 1754              	.LBB334:
5288:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 1755              		.loc 2 5288 3 view .LVU536
5288:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 1756              		.loc 2 5288 25 is_stmt 0 view .LVU537
 1757 0070 02F11406 		add	r6, r2, #20
5290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 1758              		.loc 2 5290 3 view .LVU538
 1759 0074 0720     		movs	r0, #7
 1760 0076 8F68     		ldr	r7, [r1, #8]
ARM GAS  /tmp/cc6JDs4t.s 			page 232


5288:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 1761              		.loc 2 5288 25 view .LVU539
 1762 0078 4FEAD45C 		lsr	ip, r4, #23
5290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 1763              		.loc 2 5290 3 view .LVU540
 1764 007c C4F30454 		ubfx	r4, r4, #20, #5
 1765              	.LVL120:
5288:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 1766              		.loc 2 5288 25 view .LVU541
 1767 0080 0CF0040C 		and	ip, ip, #4
 1768              	.LVL121:
5290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 1769              		.loc 2 5290 3 is_stmt 1 view .LVU542
 1770 0084 00FA04FE 		lsl	lr, r0, r4
 1771 0088 07FA04F4 		lsl	r4, r7, r4
 1772              	.LBE334:
 1773              	.LBE333:
2939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1774              		.loc 1 2939 28 is_stmt 0 view .LVU543
 1775 008c C34F     		ldr	r7, .L301
 1776              	.LBB336:
 1777              	.LBB335:
5290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 1778              		.loc 2 5290 3 view .LVU544
 1779 008e 5CF80600 		ldr	r0, [ip, r6]
 1780 0092 20EA0E00 		bic	r0, r0, lr
 1781 0096 2043     		orrs	r0, r0, r4
 1782 0098 4CF80600 		str	r0, [ip, r6]
 1783              	.LVL122:
5290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 1784              		.loc 2 5290 3 view .LVU545
 1785              	.LBE335:
 1786              	.LBE336:
2939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1787              		.loc 1 2939 9 is_stmt 1 view .LVU546
2939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1788              		.loc 1 2939 28 is_stmt 0 view .LVU547
 1789 009c 3868     		ldr	r0, [r7]
 1790 009e 00F07040 		and	r0, r0, #-268435456
 1791 00a2 B0F1805F 		cmp	r0, #268435456
 1792 00a6 00F09880 		beq	.L291
2939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1793              		.loc 1 2939 28 discriminator 2 view .LVU548
 1794 00aa D068     		ldr	r0, [r2, #12]
 1795 00ac D668     		ldr	r6, [r2, #12]
 1796 00ae 10F0100F 		tst	r0, #16
 1797 00b2 4869     		ldr	r0, [r1, #20]
 1798 00b4 40F00781 		bne	.L231
2939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1799              		.loc 1 2939 28 discriminator 4 view .LVU549
 1800 00b8 C6F38206 		ubfx	r6, r6, #2, #3
 1801 00bc 7600     		lsls	r6, r6, #1
 1802 00be 00FA06F6 		lsl	r6, r0, r6
 1803              	.L230:
 1804              	.LVL123:
2942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1805              		.loc 1 2942 7 is_stmt 1 discriminator 8 view .LVU550
ARM GAS  /tmp/cc6JDs4t.s 			page 233


2942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1806              		.loc 1 2942 18 is_stmt 0 discriminator 8 view .LVU551
 1807 00c2 0F69     		ldr	r7, [r1, #16]
2942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1808              		.loc 1 2942 10 discriminator 8 view .LVU552
 1809 00c4 042F     		cmp	r7, #4
 1810 00c6 00F0E180 		beq	.L232
2945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1811              		.loc 1 2945 9 is_stmt 1 view .LVU553
 1812              	.LVL124:
 1813              	.LBB337:
 1814              	.LBI337:
3252:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1815              		.loc 2 3252 22 view .LVU554
 1816              	.LBB338:
3254:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 1817              		.loc 2 3254 3 view .LVU555
3254:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 1818              		.loc 2 3254 25 is_stmt 0 view .LVU556
 1819 00ca 02F16004 		add	r4, r2, #96
 1820              	.LVL125:
3265:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 1821              		.loc 2 3265 5 is_stmt 1 view .LVU557
 1822 00ce 0868     		ldr	r0, [r1]
 1823 00d0 54F827C0 		ldr	ip, [r4, r7, lsl #2]
 1824 00d4 00F0F840 		and	r0, r0, #2080374784
 1825 00d8 0CF0004C 		and	ip, ip, #-2147483648
 1826 00dc 40EA0C00 		orr	r0, r0, ip
 1827 00e0 3043     		orrs	r0, r0, r6
 1828 00e2 44F82700 		str	r0, [r4, r7, lsl #2]
 1829              	.LVL126:
3265:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 1830              		.loc 2 3265 5 is_stmt 0 view .LVU558
 1831              	.LBE338:
 1832              	.LBE337:
2959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC selected offset signed saturation */
 1833              		.loc 1 2959 11 is_stmt 1 view .LVU559
2961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1834              		.loc 1 2961 11 view .LVU560
 1835 00e6 4F7E     		ldrb	r7, [r1, #25]	@ zero_extendqisi2
 1836 00e8 0E69     		ldr	r6, [r1, #16]
 1837              	.LVL127:
2961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1838              		.loc 1 2961 11 is_stmt 0 view .LVU561
 1839 00ea 012F     		cmp	r7, #1
 1840              	.LBB339:
 1841              	.LBB340:
3436:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
 1842              		.loc 2 3436 5 view .LVU562
 1843 00ec 54F82600 		ldr	r0, [r4, r6, lsl #2]
 1844              	.LBE340:
 1845              	.LBE339:
2961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1846              		.loc 1 2961 11 view .LVU563
 1847 00f0 0CBF     		ite	eq
 1848 00f2 4FF00047 		moveq	r7, #-2147483648
 1849 00f6 0027     		movne	r7, #0
ARM GAS  /tmp/cc6JDs4t.s 			page 234


 1850              	.LVL128:
 1851              	.LBB342:
 1852              	.LBI339:
3425:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1853              		.loc 2 3425 22 is_stmt 1 view .LVU564
 1854              	.LBB341:
3435:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
 1855              		.loc 2 3435 5 view .LVU565
3436:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
 1856              		.loc 2 3436 5 view .LVU566
 1857 00f8 20F00040 		bic	r0, r0, #-2147483648
 1858 00fc 3843     		orrs	r0, r0, r7
 1859 00fe 44F82600 		str	r0, [r4, r6, lsl #2]
 1860              	.LVL129:
3436:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
 1861              		.loc 2 3436 5 is_stmt 0 view .LVU567
 1862              	.LBE341:
 1863              	.LBE342:
2963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC selected offset right shift */
 1864              		.loc 1 2963 11 is_stmt 1 view .LVU568
2965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 1865              		.loc 1 2965 11 view .LVU569
 1866 0102 0C7E     		ldrb	r4, [r1, #24]	@ zero_extendqisi2
 1867 0104 0869     		ldr	r0, [r1, #16]
 1868 0106 012C     		cmp	r4, #1
 1869 0108 04D1     		bne	.L234
 1870 010a 00F01F00 		and	r0, r0, #31
 1871 010e 4FF40065 		mov	r5, #2048
 1872 0112 8540     		lsls	r5, r5, r0
 1873              	.L234:
 1874              	.LVL130:
 1875              	.LBB343:
 1876              	.LBI343:
3383:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1877              		.loc 2 3383 22 discriminator 4 view .LVU570
 1878              	.LBB344:
3385:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1879              		.loc 2 3385 3 discriminator 4 view .LVU571
 1880 0114 1069     		ldr	r0, [r2, #16]
 1881 0116 20F4F040 		bic	r0, r0, #30720
 1882 011a 0543     		orrs	r5, r5, r0
 1883 011c 1561     		str	r5, [r2, #16]
 1884              	.LVL131:
 1885              	.L228:
3385:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1886              		.loc 2 3385 3 is_stmt 0 discriminator 4 view .LVU572
 1887              	.LBE344:
 1888              	.LBE343:
3022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1889              		.loc 1 3022 5 is_stmt 1 view .LVU573
 1890              	.LBB345:
 1891              	.LBI345:
6756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1892              		.loc 2 6756 26 view .LVU574
 1893              	.LBB346:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1894              		.loc 2 6758 3 view .LVU575
ARM GAS  /tmp/cc6JDs4t.s 			page 235


6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1895              		.loc 2 6758 12 is_stmt 0 view .LVU576
 1896 011e 9068     		ldr	r0, [r2, #8]
 1897              	.LVL132:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1898              		.loc 2 6758 12 view .LVU577
 1899              	.LBE346:
 1900              	.LBE345:
3022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1901              		.loc 1 3022 8 view .LVU578
 1902 0120 C407     		lsls	r4, r0, #31
 1903 0122 16D4     		bmi	.L255
3025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1904              		.loc 1 3025 7 is_stmt 1 view .LVU579
 1905 0124 CE68     		ldr	r6, [r1, #12]
 1906              	.LVL133:
3025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1907              		.loc 1 3025 7 is_stmt 0 view .LVU580
 1908 0126 0868     		ldr	r0, [r1]
 1909              	.LVL134:
 1910              	.LBB347:
 1911              	.LBI347:
5428:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1912              		.loc 2 5428 22 is_stmt 1 view .LVU581
 1913              	.LBB348:
5450:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 1914              		.loc 2 5450 3 view .LVU582
 1915 0128 06F01807 		and	r7, r6, #24
 1916 012c 9C4C     		ldr	r4, .L301+4
 1917 012e D2F8C050 		ldr	r5, [r2, #192]
 1918 0132 FC40     		lsrs	r4, r4, r7
 1919 0134 C0F31307 		ubfx	r7, r0, #0, #20
 1920              	.LBE348:
 1921              	.LBE347:
3028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1922              		.loc 1 3028 10 is_stmt 0 view .LVU583
 1923 0138 DFF888C2 		ldr	ip, .L301+40
 1924              	.LBB351:
 1925              	.LBB349:
5450:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 1926              		.loc 2 5450 3 view .LVU584
 1927 013c 0440     		ands	r4, r4, r0
 1928 013e 25EA0705 		bic	r5, r5, r7
 1929              	.LBE349:
 1930              	.LBE351:
3028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1931              		.loc 1 3028 10 view .LVU585
 1932 0142 6645     		cmp	r6, ip
 1933              	.LBB352:
 1934              	.LBB350:
5450:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 1935              		.loc 2 5450 3 view .LVU586
 1936 0144 44EA0504 		orr	r4, r4, r5
 1937 0148 C2F8C040 		str	r4, [r2, #192]
 1938              	.LVL135:
5450:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 1939              		.loc 2 5450 3 view .LVU587
ARM GAS  /tmp/cc6JDs4t.s 			page 236


 1940              	.LBE350:
 1941              	.LBE352:
3028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1942              		.loc 1 3028 7 is_stmt 1 view .LVU588
3028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1943              		.loc 1 3028 10 is_stmt 0 view .LVU589
 1944 014c 4DD0     		beq	.L292
 1945              	.L240:
3043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1946              		.loc 1 3043 7 is_stmt 1 view .LVU590
3043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1947              		.loc 1 3043 10 is_stmt 0 view .LVU591
 1948 014e 0028     		cmp	r0, #0
 1949 0150 15DB     		blt	.L293
 1950              	.LVL136:
 1951              	.L255:
2828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 1952              		.loc 1 2828 21 view .LVU592
 1953 0152 0020     		movs	r0, #0
 1954 0154 03E0     		b	.L222
 1955              	.LVL137:
 1956              	.L290:
3112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1957              		.loc 1 3112 5 is_stmt 1 view .LVU593
 1958 0156 5A6D     		ldr	r2, [r3, #84]
 1959 0158 42F02002 		orr	r2, r2, #32
 1960 015c 5A65     		str	r2, [r3, #84]
3114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1961              		.loc 1 3114 5 view .LVU594
 1962              	.LVL138:
 1963              	.L222:
3118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1964              		.loc 1 3118 3 view .LVU595
3118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1965              		.loc 1 3118 3 view .LVU596
 1966 015e 0022     		movs	r2, #0
 1967 0160 83F85020 		strb	r2, [r3, #80]
3118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1968              		.loc 1 3118 3 view .LVU597
3121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1969              		.loc 1 3121 3 view .LVU598
3122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1970              		.loc 1 3122 1 is_stmt 0 view .LVU599
 1971 0164 03B0     		add	sp, sp, #12
 1972              	.LCFI12:
 1973              		.cfi_remember_state
 1974              		.cfi_def_cfa_offset 20
 1975              		@ sp needed
 1976 0166 F0BD     		pop	{r4, r5, r6, r7, pc}
 1977              	.LVL139:
 1978              	.L226:
 1979              	.LCFI13:
 1980              		.cfi_restore_state
2919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 1981              		.loc 1 2919 5 is_stmt 1 view .LVU600
 1982              	.LBB353:
7083:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/cc6JDs4t.s 			page 237


 1983              		.loc 2 7083 26 view .LVU601
 1984              	.LBB332:
 1985              		.loc 2 7085 3 view .LVU602
 1986              		.loc 2 7085 12 is_stmt 0 view .LVU603
 1987 0168 9068     		ldr	r0, [r2, #8]
 1988 016a D8E7     		b	.L228
 1989              	.LVL140:
 1990              	.L223:
 1991              		.loc 2 7085 12 view .LVU604
 1992              	.LBE332:
 1993              	.LBE353:
 1994              	.LBB354:
 1995              	.LBI354:
 1996              		.file 3 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
ARM GAS  /tmp/cc6JDs4t.s 			page 238


  44:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
ARM GAS  /tmp/cc6JDs4t.s 			page 239


 101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
ARM GAS  /tmp/cc6JDs4t.s 			page 240


 158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
ARM GAS  /tmp/cc6JDs4t.s 			page 241


 215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc6JDs4t.s 			page 242


 272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc6JDs4t.s 			page 243


 329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/cc6JDs4t.s 			page 244


 386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 245


 443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  /tmp/cc6JDs4t.s 			page 246


 500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
ARM GAS  /tmp/cc6JDs4t.s 			page 247


 557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
ARM GAS  /tmp/cc6JDs4t.s 			page 248


 614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc6JDs4t.s 			page 249


 671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
ARM GAS  /tmp/cc6JDs4t.s 			page 250


 728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
ARM GAS  /tmp/cc6JDs4t.s 			page 251


 785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
ARM GAS  /tmp/cc6JDs4t.s 			page 252


 842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 253


 899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 948:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 949:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 950:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 951:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 955:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
ARM GAS  /tmp/cc6JDs4t.s 			page 254


 956:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 960:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 966:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 967:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 969:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 972:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 973:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 974:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 976:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 977:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 980:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 981:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 985:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 989:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 990:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 992:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 996:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1000:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1006:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
1007:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1008:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1010:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1011:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1012:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 255


1013:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1015:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1020:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1021:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1023:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1026:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
1027:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1030:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1032:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1033:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1039:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1041:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1042:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1043:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1047:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 1997              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU605
 1998              	.LBB355:
1049:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 1999              		.loc 3 1050 3 discriminator 2 view .LVU606
1051:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1052:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2000              		.loc 3 1055 4 discriminator 2 view .LVU607
 2001              		.syntax unified
 2002              	@ 1055 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2003 016c 94FAA4F5 		rbit r5, r4
 2004              	@ 0 "" 2
 2005              	.LVL141:
1056:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1057:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
ARM GAS  /tmp/cc6JDs4t.s 			page 256


1061:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1062:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
1063:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
1065:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1066:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 2006              		.loc 3 1068 3 discriminator 2 view .LVU608
 2007              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU609
 2008              		.thumb
 2009              		.syntax unified
 2010              	.LBE355:
 2011              	.LBE354:
 2012              	.LBB356:
 2013              	.LBI356:
1069:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1070:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1071:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1072:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1073:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 2014              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU610
 2015              	.LBB357:
1079:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1080:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
1086:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    */
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
 2016              		.loc 3 1089 3 discriminator 2 view .LVU611
 2017              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU612
 2018 0170 15B1     		cbz	r5, .L225
1090:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1091:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
1092:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1093:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 2019              		.loc 3 1093 3 is_stmt 1 view .LVU613
 2020              		.loc 3 1093 10 is_stmt 0 view .LVU614
 2021 0172 B5FA85F5 		clz	r5, r5
 2022              	.LVL142:
 2023              		.loc 3 1093 10 view .LVU615
 2024 0176 A840     		lsls	r0, r0, r5
 2025              	.L225:
 2026              		.loc 3 1093 10 view .LVU616
 2027 0178 C4F3846C 		ubfx	ip, r4, #26, #5
 2028 017c 5CE7     		b	.L224
 2029              	.L293:
ARM GAS  /tmp/cc6JDs4t.s 			page 257


 2030              		.loc 3 1093 10 view .LVU617
 2031              	.LBE357:
 2032              	.LBE356:
3047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2033              		.loc 1 3047 9 is_stmt 1 view .LVU618
3047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2034              		.loc 1 3047 70 is_stmt 0 view .LVU619
 2035 017e 8949     		ldr	r1, .L301+8
 2036              	.LVL143:
3047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2037              		.loc 1 3047 39 view .LVU620
 2038 0180 8A42     		cmp	r2, r1
 2039 0182 00F0C680 		beq	.L256
3047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2040              		.loc 1 3047 70 view .LVU621
 2041 0186 01F58071 		add	r1, r1, #256
3047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2042              		.loc 1 3047 39 view .LVU622
 2043 018a 8A42     		cmp	r2, r1
 2044 018c 00F0C180 		beq	.L256
 2045              	.LVL144:
 2046              	.LBB358:
 2047              	.LBI358:
2736:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2048              		.loc 2 2736 26 is_stmt 1 view .LVU623
 2049              	.LBB359:
2738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2050              		.loc 2 2738 3 view .LVU624
 2051              	.LBE359:
 2052              	.LBE358:
 2053              	.LBB365:
 2054              	.LBB366:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2055              		.loc 2 6758 12 is_stmt 0 view .LVU625
 2056 0190 854E     		ldr	r6, .L301+12
 2057              	.LBE366:
 2058              	.LBE365:
 2059              	.LBB369:
 2060              	.LBB360:
2738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2061              		.loc 2 2738 21 view .LVU626
 2062 0192 864D     		ldr	r5, .L301+16
 2063 0194 A968     		ldr	r1, [r5, #8]
 2064              	.LBE360:
 2065              	.LBE369:
 2066              	.LBB370:
 2067              	.LBB367:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2068              		.loc 2 6758 12 view .LVU627
 2069 0196 B468     		ldr	r4, [r6, #8]
 2070              	.LBE367:
 2071              	.LBE370:
 2072              	.LBB371:
 2073              	.LBB361:
2738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2074              		.loc 2 2738 10 view .LVU628
 2075 0198 01F0E076 		and	r6, r1, #29360128
ARM GAS  /tmp/cc6JDs4t.s 			page 258


 2076              	.LVL145:
2738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2077              		.loc 2 2738 10 view .LVU629
 2078              	.LBE361:
 2079              	.LBE371:
3051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 2080              		.loc 1 3051 9 is_stmt 1 view .LVU630
 2081              	.LBB372:
 2082              	.LBI365:
6756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2083              		.loc 2 6756 26 view .LVU631
 2084              	.LBB368:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2085              		.loc 2 6758 3 view .LVU632
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2086              		.loc 2 6758 3 is_stmt 0 view .LVU633
 2087              	.LBE368:
 2088              	.LBE372:
3051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 2089              		.loc 1 3051 95 view .LVU634
 2090 019c E443     		mvns	r4, r4
 2091 019e 04F00104 		and	r4, r4, #1
 2092              	.L262:
3051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 2093              		.loc 1 3051 12 discriminator 4 view .LVU635
 2094 01a2 002C     		cmp	r4, #0
 2095 01a4 00F0C380 		beq	.L258
3055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2096              		.loc 1 3055 11 is_stmt 1 view .LVU636
3055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2097              		.loc 1 3055 14 is_stmt 0 view .LVU637
 2098 01a8 814C     		ldr	r4, .L301+20
 2099 01aa A042     		cmp	r0, r4
 2100 01ac 00F00C81 		beq	.L294
3073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2101              		.loc 1 3073 16 is_stmt 1 view .LVU638
3073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2102              		.loc 1 3073 19 is_stmt 0 view .LVU639
 2103 01b0 804C     		ldr	r4, .L301+24
 2104 01b2 A042     		cmp	r0, r4
 2105 01b4 00F02B81 		beq	.L295
3080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2106              		.loc 1 3080 16 is_stmt 1 view .LVU640
3080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2107              		.loc 1 3080 19 is_stmt 0 view .LVU641
 2108 01b8 7F4C     		ldr	r4, .L301+28
 2109 01ba A042     		cmp	r0, r4
 2110 01bc C9D1     		bne	.L255
3082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 2111              		.loc 1 3082 13 is_stmt 1 discriminator 1 view .LVU642
3082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 2112              		.loc 1 3082 16 is_stmt 0 discriminator 1 view .LVU643
 2113 01be 4902     		lsls	r1, r1, #9
 2114 01c0 C7D4     		bmi	.L255
 2115 01c2 7949     		ldr	r1, .L301+12
 2116 01c4 8A42     		cmp	r2, r1
 2117 01c6 C4D1     		bne	.L255
ARM GAS  /tmp/cc6JDs4t.s 			page 259


3084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 2118              		.loc 1 3084 15 is_stmt 1 discriminator 4 view .LVU644
 2119              	.LVL146:
 2120              	.LBB373:
 2121              	.LBI373:
2714:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2122              		.loc 2 2714 22 discriminator 4 view .LVU645
 2123              	.LBB374:
2716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2124              		.loc 2 2716 3 discriminator 4 view .LVU646
 2125 01c8 AA68     		ldr	r2, [r5, #8]
 2126              	.LBE374:
 2127              	.LBE373:
2828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2128              		.loc 1 2828 21 is_stmt 0 discriminator 4 view .LVU647
 2129 01ca 0020     		movs	r0, #0
 2130              	.LBB376:
 2131              	.LBB375:
2716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2132              		.loc 2 2716 3 discriminator 4 view .LVU648
 2133 01cc 22F0E072 		bic	r2, r2, #29360128
 2134 01d0 3243     		orrs	r2, r2, r6
 2135 01d2 42F48002 		orr	r2, r2, #4194304
 2136 01d6 AA60     		str	r2, [r5, #8]
2717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2137              		.loc 2 2717 1 discriminator 4 view .LVU649
 2138 01d8 C1E7     		b	.L222
 2139              	.LVL147:
 2140              	.L291:
2717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2141              		.loc 2 2717 1 discriminator 4 view .LVU650
 2142              	.LBE375:
 2143              	.LBE376:
2939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 2144              		.loc 1 2939 28 discriminator 1 view .LVU651
 2145 01da D668     		ldr	r6, [r2, #12]
 2146 01dc 4869     		ldr	r0, [r1, #20]
 2147 01de C6F38206 		ubfx	r6, r6, #2, #3
 2148 01e2 7600     		lsls	r6, r6, #1
 2149 01e4 00FA06F6 		lsl	r6, r0, r6
 2150 01e8 6BE7     		b	.L230
 2151              	.LVL148:
 2152              	.L292:
3032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2153              		.loc 1 3032 9 is_stmt 1 view .LVU652
3033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2154              		.loc 1 3033 50 is_stmt 0 view .LVU653
 2155 01ea 002F     		cmp	r7, #0
 2156 01ec 71D0     		beq	.L296
 2157              	.LVL149:
 2158              	.LBB377:
 2159              	.LBI377:
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 2160              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU654
 2161              	.LBB378:
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 2162              		.loc 3 1050 3 discriminator 2 view .LVU655
ARM GAS  /tmp/cc6JDs4t.s 			page 260


1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 2163              		.loc 3 1055 4 discriminator 2 view .LVU656
 2164              		.syntax unified
 2165              	@ 1055 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2166 01ee 90FAA0F4 		rbit r4, r0
 2167              	@ 0 "" 2
 2168              	.LVL150:
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2169              		.loc 3 1068 3 discriminator 2 view .LVU657
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2170              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU658
 2171              		.thumb
 2172              		.syntax unified
 2173              	.LBE378:
 2174              	.LBE377:
 2175              	.LBB379:
 2176              	.LBI379:
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 2177              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU659
 2178              	.LBB380:
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 2179              		.loc 3 1089 3 discriminator 2 view .LVU660
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 2180              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU661
 2181 01f2 002C     		cmp	r4, #0
 2182 01f4 00F0AF80 		beq	.L244
 2183              		.loc 3 1093 3 is_stmt 1 view .LVU662
 2184              		.loc 3 1093 10 is_stmt 0 view .LVU663
 2185 01f8 B4FA84F4 		clz	r4, r4
 2186              	.LVL151:
 2187              		.loc 3 1093 10 view .LVU664
 2188              	.LBE380:
 2189              	.LBE379:
3033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2190              		.loc 1 3033 50 view .LVU665
 2191 01fc 0134     		adds	r4, r4, #1
 2192 01fe 04F01F04 		and	r4, r4, #31
3032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2193              		.loc 1 3032 9 view .LVU666
 2194 0202 092C     		cmp	r4, #9
 2195 0204 40F2A780 		bls	.L244
 2196              	.LVL152:
 2197              	.LBB381:
 2198              	.LBI381:
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 2199              		.loc 3 1048 31 is_stmt 1 discriminator 14 view .LVU667
 2200              	.LBB382:
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 2201              		.loc 3 1050 3 discriminator 14 view .LVU668
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 2202              		.loc 3 1055 4 discriminator 14 view .LVU669
 2203              		.syntax unified
 2204              	@ 1055 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2205 0208 90FAA0F5 		rbit r5, r0
 2206              	@ 0 "" 2
 2207              	.LVL153:
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc6JDs4t.s 			page 261


 2208              		.loc 3 1068 3 discriminator 14 view .LVU670
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2209              		.loc 3 1068 3 is_stmt 0 discriminator 14 view .LVU671
 2210              		.thumb
 2211              		.syntax unified
 2212              	.LBE382:
 2213              	.LBE381:
 2214              	.LBB383:
 2215              	.LBI383:
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 2216              		.loc 3 1078 30 is_stmt 1 discriminator 14 view .LVU672
 2217              	.LBB384:
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 2218              		.loc 3 1089 3 discriminator 14 view .LVU673
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 2219              		.loc 3 1089 6 is_stmt 0 discriminator 14 view .LVU674
 2220 020c 002D     		cmp	r5, #0
 2221 020e 00F01281 		beq	.L269
 2222              		.loc 3 1093 3 is_stmt 1 view .LVU675
 2223              		.loc 3 1093 10 is_stmt 0 view .LVU676
 2224 0212 B5FA85F5 		clz	r5, r5
 2225              	.LVL154:
 2226              		.loc 3 1093 10 view .LVU677
 2227 0216 0135     		adds	r5, r5, #1
 2228 0218 AD06     		lsls	r5, r5, #26
 2229 021a 05F0F845 		and	r5, r5, #2080374784
 2230              	.L252:
 2231              	.LVL155:
 2232              		.loc 3 1093 10 view .LVU678
 2233              	.LBE384:
 2234              	.LBE383:
 2235              	.LBB386:
 2236              	.LBI386:
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 2237              		.loc 3 1048 31 is_stmt 1 view .LVU679
 2238              	.LBB387:
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 2239              		.loc 3 1050 3 view .LVU680
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 2240              		.loc 3 1055 4 view .LVU681
 2241              		.syntax unified
 2242              	@ 1055 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2243 021e 90FAA0F4 		rbit r4, r0
 2244              	@ 0 "" 2
 2245              	.LVL156:
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2246              		.loc 3 1068 3 view .LVU682
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2247              		.loc 3 1068 3 is_stmt 0 view .LVU683
 2248              		.thumb
 2249              		.syntax unified
 2250              	.LBE387:
 2251              	.LBE386:
 2252              	.LBB388:
 2253              	.LBI388:
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 2254              		.loc 3 1078 30 is_stmt 1 view .LVU684
ARM GAS  /tmp/cc6JDs4t.s 			page 262


 2255              	.LBB389:
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 2256              		.loc 3 1089 3 view .LVU685
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 2257              		.loc 3 1089 6 is_stmt 0 view .LVU686
 2258 0222 002C     		cmp	r4, #0
 2259 0224 00F00581 		beq	.L270
 2260              		.loc 3 1093 3 is_stmt 1 view .LVU687
 2261 0228 0126     		movs	r6, #1
 2262              		.loc 3 1093 10 is_stmt 0 view .LVU688
 2263 022a B4FA84F4 		clz	r4, r4
 2264              	.LVL157:
 2265              		.loc 3 1093 10 view .LVU689
 2266 022e 3444     		add	r4, r4, r6
 2267 0230 04F01F04 		and	r4, r4, #31
 2268 0234 06FA04F4 		lsl	r4, r6, r4
 2269              	.L253:
 2270              		.loc 3 1093 10 view .LVU690
 2271              	.LBE389:
 2272              	.LBE388:
3033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2273              		.loc 1 3033 50 view .LVU691
 2274 0238 2543     		orrs	r5, r5, r4
 2275              	.LVL158:
 2276              	.LBB391:
 2277              	.LBI391:
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 2278              		.loc 3 1048 31 is_stmt 1 view .LVU692
 2279              	.LBB392:
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 2280              		.loc 3 1050 3 view .LVU693
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 2281              		.loc 3 1055 4 view .LVU694
 2282              		.syntax unified
 2283              	@ 1055 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2284 023a 90FAA0F0 		rbit r0, r0
 2285              	@ 0 "" 2
 2286              	.LVL159:
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2287              		.loc 3 1068 3 view .LVU695
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2288              		.loc 3 1068 3 is_stmt 0 view .LVU696
 2289              		.thumb
 2290              		.syntax unified
 2291              	.LBE392:
 2292              	.LBE391:
 2293              	.LBB393:
 2294              	.LBI393:
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 2295              		.loc 3 1078 30 is_stmt 1 view .LVU697
 2296              	.LBB394:
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 2297              		.loc 3 1089 3 view .LVU698
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 2298              		.loc 3 1089 6 is_stmt 0 view .LVU699
 2299 023e 0028     		cmp	r0, #0
 2300 0240 00F0F580 		beq	.L271
ARM GAS  /tmp/cc6JDs4t.s 			page 263


 2301              		.loc 3 1093 3 is_stmt 1 view .LVU700
 2302              		.loc 3 1093 10 is_stmt 0 view .LVU701
 2303 0244 B0FA80F4 		clz	r4, r0
 2304 0248 0134     		adds	r4, r4, #1
 2305 024a 04F01F04 		and	r4, r4, #31
 2306 024e 04EB4404 		add	r4, r4, r4, lsl #1
 2307 0252 A4F11E00 		sub	r0, r4, #30
 2308              	.LVL160:
 2309              		.loc 3 1093 10 view .LVU702
 2310 0256 0005     		lsls	r0, r0, #20
 2311 0258 40F00070 		orr	r0, r0, #33554432
 2312              	.L251:
 2313              	.LVL161:
 2314              		.loc 3 1093 10 view .LVU703
 2315              	.LBE394:
 2316              	.LBE393:
3032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2317              		.loc 1 3032 9 discriminator 2 view .LVU704
 2318 025c 2843     		orrs	r0, r0, r5
 2319              	.LVL162:
 2320              	.LBB396:
 2321              	.LBI396:
5282:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2322              		.loc 2 5282 22 is_stmt 1 discriminator 2 view .LVU705
 2323              	.LBB397:
5288:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2324              		.loc 2 5288 3 discriminator 2 view .LVU706
5290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2325              		.loc 2 5290 3 is_stmt 0 discriminator 2 view .LVU707
 2326 025e 4FF0070C 		mov	ip, #7
5288:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2327              		.loc 2 5288 25 discriminator 2 view .LVU708
 2328 0262 02F11405 		add	r5, r2, #20
5290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2329              		.loc 2 5290 3 discriminator 2 view .LVU709
 2330 0266 8E68     		ldr	r6, [r1, #8]
5288:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2331              		.loc 2 5288 25 discriminator 2 view .LVU710
 2332 0268 C70D     		lsrs	r7, r0, #23
5290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2333              		.loc 2 5290 3 discriminator 2 view .LVU711
 2334 026a C0F30450 		ubfx	r0, r0, #20, #5
 2335              	.LVL163:
5288:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2336              		.loc 2 5288 25 discriminator 2 view .LVU712
 2337 026e 07F00407 		and	r7, r7, #4
 2338              	.LVL164:
5290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2339              		.loc 2 5290 3 is_stmt 1 discriminator 2 view .LVU713
 2340 0272 0CFA00FC 		lsl	ip, ip, r0
 2341 0276 8640     		lsls	r6, r6, r0
 2342 0278 7C59     		ldr	r4, [r7, r5]
 2343 027a 24EA0C00 		bic	r0, r4, ip
 2344 027e 3043     		orrs	r0, r0, r6
 2345 0280 7851     		str	r0, [r7, r5]
 2346              	.LVL165:
5290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
ARM GAS  /tmp/cc6JDs4t.s 			page 264


 2347              		.loc 2 5290 3 is_stmt 0 discriminator 2 view .LVU714
 2348 0282 0868     		ldr	r0, [r1]
5293:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2349              		.loc 2 5293 1 discriminator 2 view .LVU715
 2350 0284 63E7     		b	.L240
 2351              	.LVL166:
 2352              	.L263:
5293:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2353              		.loc 2 5293 1 discriminator 2 view .LVU716
 2354              	.LBE397:
 2355              	.LBE396:
2889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2356              		.loc 1 2889 3 view .LVU717
 2357 0286 0220     		movs	r0, #2
 2358              	.LVL167:
3122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2359              		.loc 1 3122 1 view .LVU718
 2360 0288 03B0     		add	sp, sp, #12
 2361              	.LCFI14:
 2362              		.cfi_remember_state
 2363              		.cfi_def_cfa_offset 20
 2364              		@ sp needed
 2365 028a F0BD     		pop	{r4, r5, r6, r7, pc}
 2366              	.LVL168:
 2367              	.L232:
 2368              	.LCFI15:
 2369              		.cfi_restore_state
2997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2370              		.loc 1 2997 11 is_stmt 1 view .LVU719
2997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2371              		.loc 1 2997 31 is_stmt 0 view .LVU720
 2372 028c 106E     		ldr	r0, [r2, #96]
2997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2373              		.loc 1 2997 65 view .LVU721
 2374 028e 0D68     		ldr	r5, [r1]
2997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2375              		.loc 1 2997 39 view .LVU722
 2376 0290 00F0F840 		and	r0, r0, #2080374784
2997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2377              		.loc 1 2997 65 view .LVU723
 2378 0294 AC06     		lsls	r4, r5, #26
2997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2379              		.loc 1 2997 14 view .LVU724
 2380 0296 B0EB856F 		cmp	r0, r5, lsl #26
 2381 029a 30D0     		beq	.L297
 2382              	.L235:
3001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2383              		.loc 1 3001 11 is_stmt 1 view .LVU725
3001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2384              		.loc 1 3001 31 is_stmt 0 view .LVU726
 2385 029c 506E     		ldr	r0, [r2, #100]
3001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2386              		.loc 1 3001 39 view .LVU727
 2387 029e 00F0F840 		and	r0, r0, #2080374784
3001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2388              		.loc 1 3001 14 view .LVU728
 2389 02a2 8442     		cmp	r4, r0
ARM GAS  /tmp/cc6JDs4t.s 			page 265


 2390 02a4 26D0     		beq	.L298
 2391              	.L236:
3005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2392              		.loc 1 3005 11 is_stmt 1 view .LVU729
3005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2393              		.loc 1 3005 31 is_stmt 0 view .LVU730
 2394 02a6 906E     		ldr	r0, [r2, #104]
3005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2395              		.loc 1 3005 39 view .LVU731
 2396 02a8 00F0F840 		and	r0, r0, #2080374784
3005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2397              		.loc 1 3005 14 view .LVU732
 2398 02ac 8442     		cmp	r4, r0
 2399 02ae 2BD0     		beq	.L299
 2400              	.L237:
3009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2401              		.loc 1 3009 11 is_stmt 1 view .LVU733
3009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2402              		.loc 1 3009 31 is_stmt 0 view .LVU734
 2403 02b0 D06E     		ldr	r0, [r2, #108]
3009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2404              		.loc 1 3009 39 view .LVU735
 2405 02b2 00F0F840 		and	r0, r0, #2080374784
3009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2406              		.loc 1 3009 14 view .LVU736
 2407 02b6 8442     		cmp	r4, r0
 2408 02b8 7FF431AF 		bne	.L228
3011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 2409              		.loc 1 3011 13 is_stmt 1 view .LVU737
 2410 02bc D06E     		ldr	r0, [r2, #108]
 2411 02be 20F00040 		bic	r0, r0, #-2147483648
 2412 02c2 D066     		str	r0, [r2, #108]
 2413 02c4 2BE7     		b	.L228
 2414              	.LVL169:
 2415              	.L231:
2939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 2416              		.loc 1 2939 28 is_stmt 0 discriminator 5 view .LVU738
 2417 02c6 7608     		lsrs	r6, r6, #1
 2418 02c8 06F00806 		and	r6, r6, #8
 2419 02cc 00FA06F6 		lsl	r6, r0, r6
 2420 02d0 F7E6     		b	.L230
 2421              	.LVL170:
 2422              	.L296:
3033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2423              		.loc 1 3033 50 discriminator 1 view .LVU739
 2424 02d2 800E     		lsrs	r0, r0, #26
 2425 02d4 441C     		adds	r4, r0, #1
 2426 02d6 04F01F06 		and	r6, r4, #31
3032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2427              		.loc 1 3032 9 discriminator 1 view .LVU740
 2428 02da 092E     		cmp	r6, #9
 2429 02dc 2DD8     		bhi	.L300
3033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2430              		.loc 1 3033 50 discriminator 3 view .LVU741
 2431 02de A506     		lsls	r5, r4, #26
 2432 02e0 0124     		movs	r4, #1
 2433 02e2 06EB4600 		add	r0, r6, r6, lsl #1
ARM GAS  /tmp/cc6JDs4t.s 			page 266


 2434 02e6 05F0F845 		and	r5, r5, #2080374784
 2435 02ea 04FA06F6 		lsl	r6, r4, r6
 2436 02ee 0005     		lsls	r0, r0, #20
 2437 02f0 3543     		orrs	r5, r5, r6
 2438 02f2 B3E7     		b	.L251
 2439              	.LVL171:
 2440              	.L298:
3003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 2441              		.loc 1 3003 13 is_stmt 1 view .LVU742
 2442 02f4 506E     		ldr	r0, [r2, #100]
 2443 02f6 20F00040 		bic	r0, r0, #-2147483648
 2444 02fa 5066     		str	r0, [r2, #100]
 2445 02fc D3E7     		b	.L236
 2446              	.L297:
2999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 2447              		.loc 1 2999 13 view .LVU743
 2448 02fe 106E     		ldr	r0, [r2, #96]
 2449 0300 20F00040 		bic	r0, r0, #-2147483648
 2450 0304 1066     		str	r0, [r2, #96]
 2451 0306 C9E7     		b	.L235
 2452              	.L299:
3007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 2453              		.loc 1 3007 13 view .LVU744
 2454 0308 906E     		ldr	r0, [r2, #104]
 2455 030a 20F00040 		bic	r0, r0, #-2147483648
 2456 030e 9066     		str	r0, [r2, #104]
 2457 0310 CEE7     		b	.L237
 2458              	.LVL172:
 2459              	.L256:
 2460              	.LBB398:
2736:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2461              		.loc 2 2736 26 view .LVU745
 2462              	.LBB362:
2738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2463              		.loc 2 2738 3 view .LVU746
2738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2464              		.loc 2 2738 21 is_stmt 0 view .LVU747
 2465 0312 2A49     		ldr	r1, .L301+32
 2466              	.LBE362:
 2467              	.LBE398:
 2468              	.LBB399:
 2469              	.LBB400:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2470              		.loc 2 6758 12 view .LVU748
 2471 0314 234E     		ldr	r6, .L301+8
 2472              	.LBE400:
 2473              	.LBE399:
 2474              	.LBB403:
 2475              	.LBB404:
 2476 0316 2A4C     		ldr	r4, .L301+36
 2477              	.LBE404:
 2478              	.LBE403:
3047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2479              		.loc 1 3047 39 view .LVU749
 2480 0318 0D46     		mov	r5, r1
 2481              	.LBB407:
 2482              	.LBB363:
ARM GAS  /tmp/cc6JDs4t.s 			page 267


2738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2483              		.loc 2 2738 21 view .LVU750
 2484 031a 8968     		ldr	r1, [r1, #8]
 2485              	.LBE363:
 2486              	.LBE407:
 2487              	.LBB408:
 2488              	.LBB401:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2489              		.loc 2 6758 12 view .LVU751
 2490 031c B768     		ldr	r7, [r6, #8]
 2491              	.LBE401:
 2492              	.LBE408:
 2493              	.LBB409:
 2494              	.LBB405:
 2495 031e A468     		ldr	r4, [r4, #8]
 2496              	.LBE405:
 2497              	.LBE409:
 2498              	.LBB410:
 2499              	.LBB364:
2738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2500              		.loc 2 2738 10 view .LVU752
 2501 0320 01F0E076 		and	r6, r1, #29360128
 2502              	.LVL173:
2738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2503              		.loc 2 2738 10 view .LVU753
 2504              	.LBE364:
 2505              	.LBE410:
3051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 2506              		.loc 1 3051 9 is_stmt 1 view .LVU754
 2507              	.LBB411:
 2508              	.LBI399:
6756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2509              		.loc 2 6756 26 view .LVU755
 2510              	.LBB402:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2511              		.loc 2 6758 3 view .LVU756
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2512              		.loc 2 6758 3 is_stmt 0 view .LVU757
 2513              	.LBE402:
 2514              	.LBE411:
 2515              	.LBB412:
 2516              	.LBI403:
6756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2517              		.loc 2 6756 26 is_stmt 1 view .LVU758
 2518              	.LBB406:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2519              		.loc 2 6758 3 view .LVU759
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2520              		.loc 2 6758 3 is_stmt 0 view .LVU760
 2521              	.LBE406:
 2522              	.LBE412:
3051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 2523              		.loc 1 3051 95 view .LVU761
 2524 0324 3C43     		orrs	r4, r4, r7
 2525 0326 E443     		mvns	r4, r4
 2526 0328 04F00104 		and	r4, r4, #1
 2527 032c 39E7     		b	.L262
ARM GAS  /tmp/cc6JDs4t.s 			page 268


 2528              	.L258:
3098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2529              		.loc 1 3098 11 is_stmt 1 view .LVU762
 2530 032e 5A6D     		ldr	r2, [r3, #84]
3100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 2531              		.loc 1 3100 26 is_stmt 0 view .LVU763
 2532 0330 0120     		movs	r0, #1
3098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2533              		.loc 1 3098 11 view .LVU764
 2534 0332 42F02002 		orr	r2, r2, #32
 2535 0336 5A65     		str	r2, [r3, #84]
3100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 2536              		.loc 1 3100 11 is_stmt 1 view .LVU765
 2537              	.LVL174:
3100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 2538              		.loc 1 3100 11 is_stmt 0 view .LVU766
 2539 0338 11E7     		b	.L222
 2540              	.LVL175:
 2541              	.L300:
3033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2542              		.loc 1 3033 50 discriminator 13 view .LVU767
 2543 033a 06EB4600 		add	r0, r6, r6, lsl #1
 2544 033e 0127     		movs	r7, #1
 2545 0340 A506     		lsls	r5, r4, #26
 2546 0342 1E38     		subs	r0, r0, #30
 2547 0344 07FA06F6 		lsl	r6, r7, r6
 2548 0348 05F0F845 		and	r5, r5, #2080374784
 2549 034c 0005     		lsls	r0, r0, #20
 2550 034e 3543     		orrs	r5, r5, r6
 2551 0350 40F00070 		orr	r0, r0, #33554432
 2552 0354 82E7     		b	.L251
 2553              	.L244:
 2554              	.LVL176:
 2555              	.LBB413:
 2556              	.LBI413:
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 2557              		.loc 3 1048 31 is_stmt 1 discriminator 4 view .LVU768
 2558              	.LBB414:
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 2559              		.loc 3 1050 3 discriminator 4 view .LVU769
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 2560              		.loc 3 1055 4 discriminator 4 view .LVU770
 2561              		.syntax unified
 2562              	@ 1055 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2563 0356 90FAA0F4 		rbit r4, r0
 2564              	@ 0 "" 2
 2565              	.LVL177:
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2566              		.loc 3 1068 3 discriminator 4 view .LVU771
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2567              		.loc 3 1068 3 is_stmt 0 discriminator 4 view .LVU772
 2568              		.thumb
 2569              		.syntax unified
 2570              	.LBE414:
 2571              	.LBE413:
 2572              	.LBB415:
 2573              	.LBI415:
ARM GAS  /tmp/cc6JDs4t.s 			page 269


1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 2574              		.loc 3 1078 30 is_stmt 1 discriminator 4 view .LVU773
 2575              	.LBB416:
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 2576              		.loc 3 1089 3 discriminator 4 view .LVU774
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 2577              		.loc 3 1089 6 is_stmt 0 discriminator 4 view .LVU775
 2578 035a 002C     		cmp	r4, #0
 2579 035c 73D0     		beq	.L266
 2580              		.loc 3 1093 3 is_stmt 1 view .LVU776
 2581              		.loc 3 1093 10 is_stmt 0 view .LVU777
 2582 035e B4FA84F4 		clz	r4, r4
 2583              	.LVL178:
 2584              		.loc 3 1093 10 view .LVU778
 2585 0362 0134     		adds	r4, r4, #1
 2586 0364 A406     		lsls	r4, r4, #26
 2587 0366 04F0F844 		and	r4, r4, #2080374784
 2588              	.L247:
 2589              	.LVL179:
 2590              		.loc 3 1093 10 view .LVU779
 2591              	.LBE416:
 2592              	.LBE415:
 2593              	.LBB418:
 2594              	.LBI418:
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 2595              		.loc 3 1048 31 is_stmt 1 view .LVU780
 2596              	.LBB419:
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 2597              		.loc 3 1050 3 view .LVU781
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 2598              		.loc 3 1055 4 view .LVU782
 2599              		.syntax unified
 2600              	@ 1055 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2601 036a 90FAA0F6 		rbit r6, r0
 2602              	@ 0 "" 2
 2603              	.LVL180:
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2604              		.loc 3 1068 3 view .LVU783
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2605              		.loc 3 1068 3 is_stmt 0 view .LVU784
 2606              		.thumb
 2607              		.syntax unified
 2608              	.LBE419:
 2609              	.LBE418:
 2610              	.LBB420:
 2611              	.LBI420:
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 2612              		.loc 3 1078 30 is_stmt 1 view .LVU785
 2613              	.LBB421:
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 2614              		.loc 3 1089 3 view .LVU786
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 2615              		.loc 3 1089 6 is_stmt 0 view .LVU787
 2616 036e 002E     		cmp	r6, #0
 2617 0370 67D0     		beq	.L267
 2618              		.loc 3 1093 3 is_stmt 1 view .LVU788
 2619 0372 0125     		movs	r5, #1
ARM GAS  /tmp/cc6JDs4t.s 			page 270


 2620              		.loc 3 1093 10 is_stmt 0 view .LVU789
 2621 0374 B6FA86F6 		clz	r6, r6
 2622              	.LVL181:
 2623              		.loc 3 1093 10 view .LVU790
 2624 0378 2E44     		add	r6, r6, r5
 2625 037a 06F01F06 		and	r6, r6, #31
 2626 037e B540     		lsls	r5, r5, r6
 2627              	.L248:
 2628              		.loc 3 1093 10 view .LVU791
 2629              	.LBE421:
 2630              	.LBE420:
3033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2631              		.loc 1 3033 50 view .LVU792
 2632 0380 2543     		orrs	r5, r5, r4
 2633              	.LVL182:
 2634              	.LBB423:
 2635              	.LBI423:
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 2636              		.loc 3 1048 31 is_stmt 1 view .LVU793
 2637              	.LBB424:
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 2638              		.loc 3 1050 3 view .LVU794
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 2639              		.loc 3 1055 4 view .LVU795
 2640              		.syntax unified
 2641              	@ 1055 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2642 0382 90FAA0F0 		rbit r0, r0
 2643              	@ 0 "" 2
 2644              	.LVL183:
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2645              		.loc 3 1068 3 view .LVU796
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2646              		.loc 3 1068 3 is_stmt 0 view .LVU797
 2647              		.thumb
 2648              		.syntax unified
 2649              	.LBE424:
 2650              	.LBE423:
 2651              	.LBB425:
 2652              	.LBI425:
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 2653              		.loc 3 1078 30 is_stmt 1 view .LVU798
 2654              	.LBB426:
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 2655              		.loc 3 1089 3 view .LVU799
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 2656              		.loc 3 1089 6 is_stmt 0 view .LVU800
 2657 0386 0028     		cmp	r0, #0
 2658 0388 58D0     		beq	.L268
 2659              		.loc 3 1093 3 is_stmt 1 view .LVU801
 2660              		.loc 3 1093 10 is_stmt 0 view .LVU802
 2661 038a B0FA80F4 		clz	r4, r0
 2662 038e 0134     		adds	r4, r4, #1
 2663 0390 04F01F04 		and	r4, r4, #31
 2664 0394 04EB4404 		add	r4, r4, r4, lsl #1
 2665 0398 2005     		lsls	r0, r4, #20
 2666              	.LVL184:
 2667              		.loc 3 1093 10 view .LVU803
ARM GAS  /tmp/cc6JDs4t.s 			page 271


 2668 039a 5FE7     		b	.L251
 2669              	.L302:
 2670              		.align	2
 2671              	.L301:
 2672 039c 0010005C 		.word	1543507968
 2673 03a0 FFFF0F00 		.word	1048575
 2674 03a4 00200240 		.word	1073881088
 2675 03a8 00600258 		.word	1476550656
 2676 03ac 00630258 		.word	1476551424
 2677 03b0 000084CB 		.word	-880541696
 2678 03b4 000052C7 		.word	-950927360
 2679 03b8 0000B8CF 		.word	-810024960
 2680 03bc 00230240 		.word	1073881856
 2681 03c0 00210240 		.word	1073881344
 2682 03c4 0000FF47 		.word	1207894016
 2683              	.LVL185:
 2684              	.L294:
 2685              		.loc 3 1093 10 view .LVU804
 2686              	.LBE426:
 2687              	.LBE425:
3055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2688              		.loc 1 3055 60 discriminator 1 view .LVU805
 2689 03c8 0802     		lsls	r0, r1, #8
 2690 03ca 3FF5C2AE 		bmi	.L255
3057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 2691              		.loc 1 3057 13 is_stmt 1 view .LVU806
3057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 2692              		.loc 1 3057 16 is_stmt 0 view .LVU807
 2693 03ce 1F49     		ldr	r1, .L303
 2694 03d0 8A42     		cmp	r2, r1
 2695 03d2 7FF4BEAE 		bne	.L255
3059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2696              		.loc 1 3059 15 is_stmt 1 discriminator 4 view .LVU808
 2697              	.LVL186:
 2698              	.LBB428:
 2699              	.LBI428:
2714:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2700              		.loc 2 2714 22 discriminator 4 view .LVU809
 2701              	.LBB429:
2716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2702              		.loc 2 2716 3 discriminator 4 view .LVU810
 2703              	.LBE429:
 2704              	.LBE428:
3066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               while (wait_loop_index != 0UL)
 2705              		.loc 1 3066 95 is_stmt 0 discriminator 4 view .LVU811
 2706 03d6 1E4A     		ldr	r2, .L303+4
 2707 03d8 1E48     		ldr	r0, .L303+8
 2708 03da 1268     		ldr	r2, [r2]
 2709              	.LBB435:
 2710              	.LBB430:
2716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2711              		.loc 2 2716 3 discriminator 4 view .LVU812
 2712 03dc A968     		ldr	r1, [r5, #8]
 2713              	.LBE430:
 2714              	.LBE435:
3066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               while (wait_loop_index != 0UL)
 2715              		.loc 1 3066 95 discriminator 4 view .LVU813
ARM GAS  /tmp/cc6JDs4t.s 			page 272


 2716 03de 9209     		lsrs	r2, r2, #6
 2717              	.LBB436:
 2718              	.LBB431:
2716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2719              		.loc 2 2716 3 discriminator 4 view .LVU814
 2720 03e0 21F0E071 		bic	r1, r1, #29360128
 2721              	.LBE431:
 2722              	.LBE436:
3066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               while (wait_loop_index != 0UL)
 2723              		.loc 1 3066 95 discriminator 4 view .LVU815
 2724 03e4 A0FB0202 		umull	r0, r2, r0, r2
 2725              	.LBB437:
 2726              	.LBB432:
2716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2727              		.loc 2 2716 3 discriminator 4 view .LVU816
 2728 03e8 3143     		orrs	r1, r1, r6
 2729              	.LBE432:
 2730              	.LBE437:
3066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               while (wait_loop_index != 0UL)
 2731              		.loc 1 3066 95 discriminator 4 view .LVU817
 2732 03ea 9209     		lsrs	r2, r2, #6
 2733              	.LBB438:
 2734              	.LBB433:
2716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2735              		.loc 2 2716 3 discriminator 4 view .LVU818
 2736 03ec 41F40001 		orr	r1, r1, #8388608
 2737              	.LBE433:
 2738              	.LBE438:
3066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               while (wait_loop_index != 0UL)
 2739              		.loc 1 3066 115 discriminator 4 view .LVU819
 2740 03f0 0132     		adds	r2, r2, #1
 2741              	.LBB439:
 2742              	.LBB434:
2716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2743              		.loc 2 2716 3 discriminator 4 view .LVU820
 2744 03f2 A960     		str	r1, [r5, #8]
 2745              	.LVL187:
2716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2746              		.loc 2 2716 3 discriminator 4 view .LVU821
 2747              	.LBE434:
 2748              	.LBE439:
3066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               while (wait_loop_index != 0UL)
 2749              		.loc 1 3066 15 is_stmt 1 discriminator 4 view .LVU822
3066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               while (wait_loop_index != 0UL)
 2750              		.loc 1 3066 75 is_stmt 0 discriminator 4 view .LVU823
 2751 03f4 5200     		lsls	r2, r2, #1
3066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               while (wait_loop_index != 0UL)
 2752              		.loc 1 3066 31 discriminator 4 view .LVU824
 2753 03f6 0192     		str	r2, [sp, #4]
3067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               {
 2754              		.loc 1 3067 15 is_stmt 1 discriminator 4 view .LVU825
3067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               {
 2755              		.loc 1 3067 21 discriminator 4 view .LVU826
3067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               {
 2756              		.loc 1 3067 38 is_stmt 0 discriminator 4 view .LVU827
 2757 03f8 019A     		ldr	r2, [sp, #4]
3067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               {
ARM GAS  /tmp/cc6JDs4t.s 			page 273


 2758              		.loc 1 3067 21 discriminator 4 view .LVU828
 2759 03fa 002A     		cmp	r2, #0
 2760 03fc 3FF4A9AE 		beq	.L255
 2761              	.L260:
3069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               }
 2762              		.loc 1 3069 17 is_stmt 1 view .LVU829
3069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               }
 2763              		.loc 1 3069 32 is_stmt 0 view .LVU830
 2764 0400 019A     		ldr	r2, [sp, #4]
 2765 0402 013A     		subs	r2, r2, #1
 2766 0404 0192     		str	r2, [sp, #4]
3067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               {
 2767              		.loc 1 3067 21 is_stmt 1 view .LVU831
3067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               {
 2768              		.loc 1 3067 38 is_stmt 0 view .LVU832
 2769 0406 019A     		ldr	r2, [sp, #4]
3067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               {
 2770              		.loc 1 3067 21 view .LVU833
 2771 0408 002A     		cmp	r2, #0
 2772 040a F9D1     		bne	.L260
 2773 040c A1E6     		b	.L255
 2774              	.L295:
3073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2775              		.loc 1 3073 59 discriminator 1 view .LVU834
 2776 040e 11F08070 		ands	r0, r1, #16777216
 2777 0412 7FF49EAE 		bne	.L255
3075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 2778              		.loc 1 3075 13 is_stmt 1 view .LVU835
3075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 2779              		.loc 1 3075 16 is_stmt 0 view .LVU836
 2780 0416 0D49     		ldr	r1, .L303
 2781 0418 8A42     		cmp	r2, r1
 2782 041a 7FF49AAE 		bne	.L255
3077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 2783              		.loc 1 3077 15 is_stmt 1 discriminator 4 view .LVU837
 2784              	.LVL188:
 2785              	.LBB440:
 2786              	.LBI440:
2714:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2787              		.loc 2 2714 22 discriminator 4 view .LVU838
 2788              	.LBB441:
2716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2789              		.loc 2 2716 3 discriminator 4 view .LVU839
 2790 041e AA68     		ldr	r2, [r5, #8]
 2791 0420 22F0E072 		bic	r2, r2, #29360128
 2792 0424 3243     		orrs	r2, r2, r6
 2793 0426 42F08072 		orr	r2, r2, #16777216
 2794 042a AA60     		str	r2, [r5, #8]
2717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2795              		.loc 2 2717 1 is_stmt 0 discriminator 4 view .LVU840
 2796 042c 97E6     		b	.L222
 2797              	.LVL189:
 2798              	.L271:
2717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2799              		.loc 2 2717 1 discriminator 4 view .LVU841
 2800              	.LBE441:
 2801              	.LBE440:
ARM GAS  /tmp/cc6JDs4t.s 			page 274


 2802              	.LBB442:
 2803              	.LBB395:
 2804 042e 0A48     		ldr	r0, .L303+12
 2805              	.LVL190:
2717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2806              		.loc 2 2717 1 discriminator 4 view .LVU842
 2807 0430 14E7     		b	.L251
 2808              	.LVL191:
 2809              	.L270:
2717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2810              		.loc 2 2717 1 discriminator 4 view .LVU843
 2811              	.LBE395:
 2812              	.LBE442:
 2813              	.LBB443:
 2814              	.LBB390:
 2815 0432 0224     		movs	r4, #2
 2816              	.LVL192:
2717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2817              		.loc 2 2717 1 discriminator 4 view .LVU844
 2818 0434 00E7     		b	.L253
 2819              	.LVL193:
 2820              	.L269:
2717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2821              		.loc 2 2717 1 discriminator 4 view .LVU845
 2822              	.LBE390:
 2823              	.LBE443:
 2824              	.LBB444:
 2825              	.LBB385:
 2826 0436 4FF08065 		mov	r5, #67108864
 2827              	.LVL194:
2717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2828              		.loc 2 2717 1 discriminator 4 view .LVU846
 2829 043a F0E6     		b	.L252
 2830              	.LVL195:
 2831              	.L268:
2717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2832              		.loc 2 2717 1 discriminator 4 view .LVU847
 2833              	.LBE385:
 2834              	.LBE444:
 2835              	.LBB445:
 2836              	.LBB427:
 2837 043c 4FF44010 		mov	r0, #3145728
 2838              	.LVL196:
2717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2839              		.loc 2 2717 1 discriminator 4 view .LVU848
 2840 0440 0CE7     		b	.L251
 2841              	.LVL197:
 2842              	.L267:
2717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2843              		.loc 2 2717 1 discriminator 4 view .LVU849
 2844              	.LBE427:
 2845              	.LBE445:
 2846              	.LBB446:
 2847              	.LBB422:
 2848 0442 0225     		movs	r5, #2
 2849 0444 9CE7     		b	.L248
 2850              	.LVL198:
ARM GAS  /tmp/cc6JDs4t.s 			page 275


 2851              	.L266:
2717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2852              		.loc 2 2717 1 discriminator 4 view .LVU850
 2853              	.LBE422:
 2854              	.LBE446:
 2855              	.LBB447:
 2856              	.LBB417:
 2857 0446 4FF08064 		mov	r4, #67108864
 2858              	.LVL199:
2717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2859              		.loc 2 2717 1 discriminator 4 view .LVU851
 2860 044a 8EE7     		b	.L247
 2861              	.L304:
 2862              		.align	2
 2863              	.L303:
 2864 044c 00600258 		.word	1476550656
 2865 0450 00000000 		.word	SystemCoreClock
 2866 0454 632D3E05 		.word	87960931
 2867 0458 000050FE 		.word	-28311552
 2868              	.LBE417:
 2869              	.LBE447:
 2870              		.cfi_endproc
 2871              	.LFE349:
 2873              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 2874              		.align	1
 2875              		.p2align 2,,3
 2876              		.global	HAL_ADC_AnalogWDGConfig
 2877              		.syntax unified
 2878              		.thumb
 2879              		.thumb_func
 2880              		.fpu fpv5-d16
 2882              	HAL_ADC_AnalogWDGConfig:
 2883              	.LVL200:
 2884              	.LFB350:
3141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2885              		.loc 1 3141 1 is_stmt 1 view -0
 2886              		.cfi_startproc
 2887              		@ args = 0, pretend = 0, frame = 0
 2888              		@ frame_needed = 0, uses_anonymous_args = 0
 2889              		@ link register save eliminated.
3142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 2890              		.loc 1 3142 3 view .LVU853
3143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
 2891              		.loc 1 3143 3 view .LVU854
3144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 2892              		.loc 1 3144 3 view .LVU855
3145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 2893              		.loc 1 3145 3 view .LVU856
3146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2894              		.loc 1 3146 3 view .LVU857
3149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
 2895              		.loc 1 3149 3 view .LVU858
3150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
 2896              		.loc 1 3150 3 view .LVU859
3151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 2897              		.loc 1 3151 3 view .LVU860
3152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 276


 2898              		.loc 1 3152 3 view .LVU861
3154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 2899              		.loc 1 3154 3 view .LVU862
3200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2900              		.loc 1 3200 3 is_stmt 0 view .LVU863
 2901 0000 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
3141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2902              		.loc 1 3141 1 view .LVU864
 2903 0004 0346     		mov	r3, r0
3154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 2904              		.loc 1 3154 23 view .LVU865
 2905 0006 4868     		ldr	r0, [r1, #4]
 2906              	.LVL201:
3158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 2907              		.loc 1 3158 5 is_stmt 1 view .LVU866
3184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2908              		.loc 1 3184 5 view .LVU867
3194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
 2909              		.loc 1 3194 7 view .LVU868
3195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 2910              		.loc 1 3195 7 view .LVU869
3200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2911              		.loc 1 3200 3 view .LVU870
3200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2912              		.loc 1 3200 3 view .LVU871
 2913 0008 012A     		cmp	r2, #1
 2914 000a 00F0E880 		beq	.L357
3200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2915              		.loc 1 3200 3 discriminator 2 view .LVU872
3207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 2916              		.loc 1 3207 44 is_stmt 0 discriminator 2 view .LVU873
 2917 000e 1A68     		ldr	r2, [r3]
3141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2918              		.loc 1 3141 1 discriminator 2 view .LVU874
 2919 0010 F0B4     		push	{r4, r5, r6, r7}
 2920              	.LCFI16:
 2921              		.cfi_def_cfa_offset 16
 2922              		.cfi_offset 4, -16
 2923              		.cfi_offset 5, -12
 2924              		.cfi_offset 6, -8
 2925              		.cfi_offset 7, -4
3200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2926              		.loc 1 3200 3 discriminator 2 view .LVU875
 2927 0012 0124     		movs	r4, #1
 2928 0014 83F85040 		strb	r4, [r3, #80]
3200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2929              		.loc 1 3200 3 is_stmt 1 discriminator 2 view .LVU876
3207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 2930              		.loc 1 3207 3 discriminator 2 view .LVU877
 2931              	.LVL202:
 2932              	.LBB448:
 2933              	.LBI448:
6888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2934              		.loc 2 6888 26 discriminator 2 view .LVU878
 2935              	.LBB449:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2936              		.loc 2 6890 3 discriminator 2 view .LVU879
ARM GAS  /tmp/cc6JDs4t.s 			page 277


6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2937              		.loc 2 6890 12 is_stmt 0 discriminator 2 view .LVU880
 2938 0018 9468     		ldr	r4, [r2, #8]
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2939              		.loc 2 6890 74 discriminator 2 view .LVU881
 2940 001a 6507     		lsls	r5, r4, #29
 2941 001c 2AD4     		bmi	.L307
 2942              	.LVL203:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2943              		.loc 2 6890 74 discriminator 2 view .LVU882
 2944              	.LBE449:
 2945              	.LBE448:
3208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 2946              		.loc 1 3208 3 is_stmt 1 view .LVU883
 2947              	.LBB450:
 2948              	.LBI450:
7083:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2949              		.loc 2 7083 26 view .LVU884
 2950              	.LBB451:
 2951              		.loc 2 7085 3 view .LVU885
 2952              		.loc 2 7085 12 is_stmt 0 view .LVU886
 2953 001e 9468     		ldr	r4, [r2, #8]
 2954              		.loc 2 7085 76 view .LVU887
 2955 0020 2407     		lsls	r4, r4, #28
 2956 0022 28D4     		bmi	.L308
 2957              	.LVL204:
 2958              		.loc 2 7085 76 view .LVU888
 2959              	.LBE451:
 2960              	.LBE450:
3209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2961              		.loc 1 3209 3 is_stmt 1 view .LVU889
3214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2962              		.loc 1 3214 5 view .LVU890
3214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2963              		.loc 1 3214 24 is_stmt 0 view .LVU891
 2964 0024 0C68     		ldr	r4, [r1]
3214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 2965              		.loc 1 3214 8 view .LVU892
 2966 0026 C54D     		ldr	r5, .L405
 2967 0028 AC42     		cmp	r4, r5
 2968 002a 00F09480 		beq	.L394
3302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2969              		.loc 1 3302 7 is_stmt 1 view .LVU893
 2970 002e B0F1A07F 		cmp	r0, #20971520
 2971 0032 30D0     		beq	.L329
 2972 0034 29D8     		bhi	.L328
 2973 0036 B0F5400F 		cmp	r0, #12582912
 2974 003a 2CD0     		beq	.L329
 2975 003c B0F1807F 		cmp	r0, #16777216
 2976 0040 29D0     		beq	.L329
 2977 0042 B0F5000F 		cmp	r0, #8388608
 2978 0046 26D0     		beq	.L329
 2979              	.L330:
3349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 2980              		.loc 1 3349 11 view .LVU894
 2981              	.LVL205:
 2982              	.LBB453:
ARM GAS  /tmp/cc6JDs4t.s 			page 278


 2983              	.LBI453:
5647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2984              		.loc 2 5647 22 view .LVU895
 2985              	.LBB454:
5653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 2986              		.loc 2 5653 3 view .LVU896
5653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 2987              		.loc 2 5653 25 is_stmt 0 view .LVU897
 2988 0048 04F0010C 		and	ip, r4, #1
5656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2989              		.loc 2 5656 3 view .LVU898
 2990 004c BC4E     		ldr	r6, .L405+4
5653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 2991              		.loc 2 5653 25 view .LVU899
 2992 004e C4F30155 		ubfx	r5, r4, #20, #2
 2993 0052 02F10C00 		add	r0, r2, #12
 2994 0056 4FEACC07 		lsl	r7, ip, #3
5656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2995              		.loc 2 5656 3 view .LVU900
 2996 005a 2640     		ands	r6, r6, r4
5653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 2997              		.loc 2 5653 25 view .LVU901
 2998 005c 07EB0C04 		add	r4, r7, ip
 2999              	.LVL206:
5653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3000              		.loc 2 5653 25 view .LVU902
 3001 0060 05EB8404 		add	r4, r5, r4, lsl #2
 3002              	.LVL207:
5656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3003              		.loc 2 5656 3 is_stmt 1 view .LVU903
 3004 0064 50F82450 		ldr	r5, [r0, r4, lsl #2]
 3005 0068 25EA0605 		bic	r5, r5, r6
 3006 006c 40F82450 		str	r5, [r0, r4, lsl #2]
 3007              	.LVL208:
5656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3008              		.loc 2 5656 3 is_stmt 0 view .LVU904
 3009 0070 0C68     		ldr	r4, [r1]
5659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3010              		.loc 2 5659 1 view .LVU905
 3011 0072 23E0     		b	.L335
 3012              	.LVL209:
 3013              	.L307:
5659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3014              		.loc 2 5659 1 view .LVU906
 3015              	.LBE454:
 3016              	.LBE453:
3208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 3017              		.loc 1 3208 3 is_stmt 1 view .LVU907
 3018              	.LBB455:
7083:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3019              		.loc 2 7083 26 view .LVU908
 3020              	.LBB452:
 3021              		.loc 2 7085 3 view .LVU909
 3022              		.loc 2 7085 12 is_stmt 0 view .LVU910
 3023 0074 9268     		ldr	r2, [r2, #8]
 3024              	.LVL210:
 3025              	.L308:
ARM GAS  /tmp/cc6JDs4t.s 			page 279


 3026              		.loc 2 7085 12 view .LVU911
 3027              	.LBE452:
 3028              	.LBE455:
3459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3029              		.loc 1 3459 5 is_stmt 1 view .LVU912
 3030 0076 5A6D     		ldr	r2, [r3, #84]
3461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 3031              		.loc 1 3461 20 is_stmt 0 view .LVU913
 3032 0078 0120     		movs	r0, #1
3459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3033              		.loc 1 3459 5 view .LVU914
 3034 007a 42F02002 		orr	r2, r2, #32
 3035 007e 5A65     		str	r2, [r3, #84]
3461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 3036              		.loc 1 3461 5 is_stmt 1 view .LVU915
 3037              	.LVL211:
 3038              	.L326:
3464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3039              		.loc 1 3464 3 view .LVU916
3464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3040              		.loc 1 3464 3 view .LVU917
 3041 0080 0022     		movs	r2, #0
 3042 0082 83F85020 		strb	r2, [r3, #80]
3464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3043              		.loc 1 3464 3 view .LVU918
3467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 3044              		.loc 1 3467 3 view .LVU919
3468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3045              		.loc 1 3468 1 is_stmt 0 view .LVU920
 3046 0086 F0BC     		pop	{r4, r5, r6, r7}
 3047              	.LCFI17:
 3048              		.cfi_remember_state
 3049              		.cfi_restore 7
 3050              		.cfi_restore 6
 3051              		.cfi_restore 5
 3052              		.cfi_restore 4
 3053              		.cfi_def_cfa_offset 0
 3054 0088 7047     		bx	lr
 3055              	.LVL212:
 3056              	.L328:
 3057              	.LCFI18:
 3058              		.cfi_restore_state
3302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3059              		.loc 1 3302 7 view .LVU921
 3060 008a B0F1C07F 		cmp	r0, #25165824
 3061 008e 02D0     		beq	.L329
 3062 0090 B0F1E07F 		cmp	r0, #29360128
 3063 0094 D8D1     		bne	.L330
 3064              	.L329:
3335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 3065              		.loc 1 3335 13 is_stmt 1 view .LVU922
3335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 3066              		.loc 1 3335 16 is_stmt 0 view .LVU923
 3067 0096 AB48     		ldr	r0, .L405+8
 3068 0098 8442     		cmp	r4, r0
3337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3069              		.loc 1 3337 15 view .LVU924
ARM GAS  /tmp/cc6JDs4t.s 			page 280


 3070 009a 8868     		ldr	r0, [r1, #8]
 3071 009c C0F31305 		ubfx	r5, r0, #0, #20
3335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 3072              		.loc 1 3335 16 view .LVU925
 3073 00a0 00F0D780 		beq	.L395
3341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3074              		.loc 1 3341 15 is_stmt 1 view .LVU926
 3075 00a4 002D     		cmp	r5, #0
 3076 00a6 40F0EB80 		bne	.L343
3341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3077              		.loc 1 3341 15 is_stmt 0 discriminator 1 view .LVU927
 3078 00aa C0F38460 		ubfx	r0, r0, #26, #5
 3079 00ae 0125     		movs	r5, #1
 3080 00b0 8540     		lsls	r5, r5, r0
 3081              	.L344:
3341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3082              		.loc 1 3341 15 discriminator 4 view .LVU928
 3083 00b2 D2F8A400 		ldr	r0, [r2, #164]
 3084 00b6 2843     		orrs	r0, r0, r5
 3085 00b8 C2F8A400 		str	r0, [r2, #164]
 3086              	.L335:
3355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3087              		.loc 1 3355 7 is_stmt 1 view .LVU929
3355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3088              		.loc 1 3355 36 is_stmt 0 view .LVU930
 3089 00bc A248     		ldr	r0, .L405+12
 3090 00be 0068     		ldr	r0, [r0]
 3091 00c0 00F07040 		and	r0, r0, #-268435456
 3092 00c4 B0F1805F 		cmp	r0, #268435456
 3093 00c8 D068     		ldr	r0, [r2, #12]
 3094 00ca 00F0B080 		beq	.L396
3355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3095              		.loc 1 3355 36 discriminator 2 view .LVU931
 3096 00ce 10F0100F 		tst	r0, #16
 3097 00d2 0D69     		ldr	r5, [r1, #16]
 3098 00d4 D068     		ldr	r0, [r2, #12]
 3099 00d6 40F0B180 		bne	.L348
3355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3100              		.loc 1 3355 36 discriminator 4 view .LVU932
 3101 00da C0F38200 		ubfx	r0, r0, #2, #3
 3102 00de 4000     		lsls	r0, r0, #1
 3103 00e0 05FA00F0 		lsl	r0, r5, r0
 3104              	.L347:
 3105              	.LVL213:
3356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3106              		.loc 1 3356 7 is_stmt 1 discriminator 8 view .LVU933
3356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3107              		.loc 1 3356 36 is_stmt 0 discriminator 8 view .LVU934
 3108 00e4 984D     		ldr	r5, .L405+12
 3109 00e6 2D68     		ldr	r5, [r5]
 3110 00e8 05F07045 		and	r5, r5, #-268435456
 3111 00ec B5F1805F 		cmp	r5, #268435456
 3112 00f0 00F09680 		beq	.L397
3356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3113              		.loc 1 3356 36 discriminator 2 view .LVU935
 3114 00f4 D568     		ldr	r5, [r2, #12]
 3115 00f6 D668     		ldr	r6, [r2, #12]
ARM GAS  /tmp/cc6JDs4t.s 			page 281


 3116 00f8 15F0100F 		tst	r5, #16
 3117 00fc 4D69     		ldr	r5, [r1, #20]
 3118 00fe 40F0A380 		bne	.L351
3356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3119              		.loc 1 3356 36 discriminator 4 view .LVU936
 3120 0102 C6F38206 		ubfx	r6, r6, #2, #3
 3121 0106 7600     		lsls	r6, r6, #1
 3122 0108 B540     		lsls	r5, r5, r6
 3123              	.L350:
 3124              	.LVL214:
3394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3125              		.loc 1 3394 7 is_stmt 1 discriminator 8 view .LVU937
3394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3126              		.loc 1 3394 10 is_stmt 0 discriminator 8 view .LVU938
 3127 010a 8E4E     		ldr	r6, .L405+8
 3128 010c B442     		cmp	r4, r6
 3129 010e 68D0     		beq	.L398
3403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR3,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
 3130              		.loc 1 3403 9 is_stmt 1 view .LVU939
 3131 0110 D2F8B840 		ldr	r4, [r2, #184]
 3132              	.LBB456:
 3133              	.LBB457:
7086:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7087:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7088:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7089:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected command of conversion stop state
7090:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_IsStopConversionOngoing
7091:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7092:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group injected.
7093:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7094:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsStopConversionOngoing(ADC_TypeDef *ADCx)
7095:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7096:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTP) == (ADC_CR_JADSTP)) ? 1UL : 0UL);
7097:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7098:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7099:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7100:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7101:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
7102:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         all oversampling increased data width (for devices
7103:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with feature oversampling).
7104:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData32\n
7105:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData32\n
7106:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData32\n
7107:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData32
7108:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7109:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7110:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7111:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7112:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7113:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7114:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7115:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7116:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_ReadConversionData32(ADC_TypeDef *ADCx, uint32_t Rank)
7117:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7118:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7119:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7120:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
ARM GAS  /tmp/cc6JDs4t.s 			page 282


7121:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7122:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
7123:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7124:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7125:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7126:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7127:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 16 bits.
7128:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7129:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7130:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7131:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData16\n
7132:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData16\n
7133:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData16\n
7134:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData16
7135:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7136:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7137:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7138:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7139:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7140:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7141:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFFF
7142:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7143:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData16(ADC_TypeDef *ADCx, uint32_t Rank)
7144:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7145:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7146:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7147:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7148:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7149:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
7150:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7151:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7152:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7153:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7154:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 14 bits.
7155:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7156:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7157:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7158:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData14\n
7159:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData14\n
7160:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData14\n
7161:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData14
7162:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7163:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7164:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7165:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7166:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7167:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7168:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FFF
7169:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7170:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData14(ADC_TypeDef *ADCx, uint32_t Rank)
7171:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7172:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7173:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7174:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7175:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7176:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
7177:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc6JDs4t.s 			page 283


7178:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7179:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7180:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7181:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 12 bits.
7182:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7183:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7184:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7185:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData12\n
7186:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData12\n
7187:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData12\n
7188:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData12
7189:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7190:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7191:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7192:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7193:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7194:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7195:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
7196:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7197:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData12(ADC_TypeDef *ADCx, uint32_t Rank)
7198:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7199:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7200:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7201:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7202:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7203:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
7204:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7205:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7206:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7207:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7208:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 10 bits.
7209:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7210:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7211:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7212:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData10\n
7213:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData10\n
7214:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData10\n
7215:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData10
7216:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7217:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7218:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7219:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7220:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7221:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7222:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7223:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7224:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData10(ADC_TypeDef *ADCx, uint32_t Rank)
7225:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7226:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7227:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7228:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7229:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7230:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
7231:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7232:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7233:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7234:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
ARM GAS  /tmp/cc6JDs4t.s 			page 284


7235:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 8 bits.
7236:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7237:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7238:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7239:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData8\n
7240:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData8\n
7241:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData8\n
7242:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData8
7243:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7244:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7245:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7246:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7247:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7248:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7249:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7250:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7251:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData8(ADC_TypeDef *ADCx, uint32_t Rank)
7252:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7253:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7254:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7255:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
7256:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                             ADC_JDR1_JDATA)
7257:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                   );
7258:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7259:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7260:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7261:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
7262:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7263:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7264:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
7265:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
7266:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7267:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7268:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7269:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC ready.
7270:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7271:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7272:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7273:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
7274:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7275:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7276:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7277:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
7278:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7279:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
7280:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7281:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7282:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7283:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
7284:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
7285:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7286:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7287:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7288:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
7289:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7290:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
7291:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc6JDs4t.s 			page 285


7292:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7293:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7294:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
7295:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
7296:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7297:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7298:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7299:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
7300:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7301:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
7302:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7303:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7304:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7305:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
7306:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
7307:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7308:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7309:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7310:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
7311:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7312:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
7313:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7314:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7315:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7316:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
7317:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
7318:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7319:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7320:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7321:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
7322:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7323:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
7324:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7325:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7326:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7327:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of unitary conversion.
7328:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_IsActiveFlag_JEOC
7329:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7330:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7331:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7332:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOC(ADC_TypeDef *ADCx)
7333:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7334:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOC) == (LL_ADC_FLAG_JEOC)) ? 1UL : 0UL);
7335:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7336:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7337:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7338:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of sequence conversions.
7339:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_IsActiveFlag_JEOS
7340:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7341:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7342:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7343:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOS(ADC_TypeDef *ADCx)
7344:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7345:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOS) == (LL_ADC_FLAG_JEOS)) ? 1UL : 0UL);
7346:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7347:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7348:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  /tmp/cc6JDs4t.s 			page 286


7349:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC group injected contexts queue overflow.
7350:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_IsActiveFlag_JQOVF
7351:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7352:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7353:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7354:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JQOVF(ADC_TypeDef *ADCx)
7355:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7356:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JQOVF) == (LL_ADC_FLAG_JQOVF)) ? 1UL : 0UL);
7357:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7358:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7359:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7360:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
7361:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
7362:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7363:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7364:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7365:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
7366:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7367:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
7368:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7369:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7370:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7371:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
7372:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
7373:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7374:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7375:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7376:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(ADC_TypeDef *ADCx)
7377:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7378:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
7379:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7380:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7381:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7382:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
7383:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
7384:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7385:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7386:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7387:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(ADC_TypeDef *ADCx)
7388:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7389:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
7390:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7391:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7392:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7393:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
7394:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7395:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7396:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7397:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
7398:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7399:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7400:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7401:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
7402:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7403:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
7404:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7405:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 287


7406:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7407:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
7408:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
7409:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7410:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7411:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7412:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
7413:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7414:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
7415:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7417:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
7419:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
7420:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7421:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7422:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7423:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
7424:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7425:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
7426:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7427:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7428:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7429:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
7430:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
7431:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7432:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7433:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7434:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
7435:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7436:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
7437:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7438:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7439:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7440:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
7441:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
7442:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7443:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7444:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7445:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
7446:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7447:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
7448:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7449:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7450:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7451:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of unitary conversion.
7452:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_ClearFlag_JEOC
7453:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7454:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7455:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7456:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOC(ADC_TypeDef *ADCx)
7457:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7458:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOC);
7459:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7460:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7461:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7462:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of sequence conversions.
ARM GAS  /tmp/cc6JDs4t.s 			page 288


7463:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_ClearFlag_JEOS
7464:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7465:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7466:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7467:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOS(ADC_TypeDef *ADCx)
7468:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7469:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOS);
7470:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7471:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7472:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7473:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC group injected contexts queue overflow.
7474:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_ClearFlag_JQOVF
7475:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7476:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7477:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7478:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JQOVF(ADC_TypeDef *ADCx)
7479:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7480:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JQOVF);
7481:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7482:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7483:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7484:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
7485:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
7486:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7487:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7488:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7489:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
7490:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7491:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
7492:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7493:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7494:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7495:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
7496:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
7497:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7498:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7499:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7500:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
7501:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7502:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
7503:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7504:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7505:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7506:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
7507:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
7508:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7509:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7510:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7511:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
7512:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7513:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
 3134              		.loc 2 7513 3 is_stmt 0 view .LVU940
 3135 0114 4FF40076 		mov	r6, #512
 3136              	.LBE457:
 3137              	.LBE456:
3403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR3,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
 3138              		.loc 1 3403 9 view .LVU941
ARM GAS  /tmp/cc6JDs4t.s 			page 289


 3139 0118 04F07C44 		and	r4, r4, #-67108864
 3140 011c 2543     		orrs	r5, r5, r4
 3141              	.LVL215:
3403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR3,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
 3142              		.loc 1 3403 9 view .LVU942
 3143 011e C2F8B850 		str	r5, [r2, #184]
3404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3144              		.loc 1 3404 9 is_stmt 1 view .LVU943
 3145 0122 D2F8BC40 		ldr	r4, [r2, #188]
 3146 0126 04F07C44 		and	r4, r4, #-67108864
 3147 012a 2043     		orrs	r0, r0, r4
 3148              	.LVL216:
3404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3149              		.loc 1 3404 9 is_stmt 0 view .LVU944
 3150 012c C2F8BC00 		str	r0, [r2, #188]
3408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3151              		.loc 1 3408 7 is_stmt 1 view .LVU945
3433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3152              		.loc 1 3433 9 view .LVU946
 3153 0130 586D     		ldr	r0, [r3, #84]
 3154 0132 20F48020 		bic	r0, r0, #262144
 3155 0136 5865     		str	r0, [r3, #84]
3439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3156              		.loc 1 3439 9 view .LVU947
 3157              	.LVL217:
 3158              	.LBB459:
 3159              	.LBI456:
7511:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3160              		.loc 2 7511 22 view .LVU948
 3161              	.LBB458:
 3162              		.loc 2 7513 3 view .LVU949
 3163 0138 1660     		str	r6, [r2]
 3164              	.LVL218:
 3165              		.loc 2 7513 3 is_stmt 0 view .LVU950
 3166              	.LBE458:
 3167              	.LBE459:
3442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3168              		.loc 1 3442 9 is_stmt 1 view .LVU951
3442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3169              		.loc 1 3442 12 is_stmt 0 view .LVU952
 3170 013a 097B     		ldrb	r1, [r1, #12]	@ zero_extendqisi2
 3171              	.LVL219:
3442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3172              		.loc 1 3442 12 view .LVU953
 3173 013c 0129     		cmp	r1, #1
 3174 013e 00F09980 		beq	.L399
3448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 3175              		.loc 1 3448 11 is_stmt 1 view .LVU954
 3176              	.LVL220:
 3177              	.LBB460:
 3178              	.LBI460:
7514:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7515:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7516:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7517:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC master.
7518:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_MST      LL_ADC_IsActiveFlag_MST_ADRDY
7519:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
ARM GAS  /tmp/cc6JDs4t.s 			page 290


7520:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7521:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7522:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7523:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
7524:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7525:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_MST) == (LL_ADC_FLAG_ADRDY_MST)) ? 1UL : 0
7526:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7527:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7528:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7529:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC slave.
7530:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_SLV      LL_ADC_IsActiveFlag_SLV_ADRDY
7531:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7532:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7533:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7534:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7535:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
7536:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7537:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_SLV) == (LL_ADC_FLAG_ADRDY_SLV)) ? 1UL : 0
7538:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7539:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7540:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7541:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC master.
7542:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      EOC_MST        LL_ADC_IsActiveFlag_MST_EOC
7543:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7544:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7545:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7546:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7547:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
7548:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7549:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
7550:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7551:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7552:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7553:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC slave.
7554:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      EOC_SLV        LL_ADC_IsActiveFlag_SLV_EOC
7555:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7556:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7557:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7558:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7559:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
7560:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7561:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
7562:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7563:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7564:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7565:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC master.
7566:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      EOS_MST        LL_ADC_IsActiveFlag_MST_EOS
7567:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7568:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7569:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7570:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7571:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
7572:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7573:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_MST) == (LL_ADC_FLAG_EOS_MST)) ? 1UL : 0UL);
7574:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7575:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7576:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  /tmp/cc6JDs4t.s 			page 291


7577:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC slave.
7578:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      EOS_SLV        LL_ADC_IsActiveFlag_SLV_EOS
7579:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7580:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7581:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7582:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7583:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
7584:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7585:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_SLV) == (LL_ADC_FLAG_EOS_SLV)) ? 1UL : 0UL);
7586:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7587:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7588:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7589:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC master.
7590:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      OVR_MST        LL_ADC_IsActiveFlag_MST_OVR
7591:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7592:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7593:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7594:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7595:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
7596:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7597:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_MST) == (LL_ADC_FLAG_OVR_MST)) ? 1UL : 0UL);
7598:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7599:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7600:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7601:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC slave.
7602:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      OVR_SLV        LL_ADC_IsActiveFlag_SLV_OVR
7603:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7604:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7605:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7606:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7607:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
7608:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7609:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_SLV) == (LL_ADC_FLAG_OVR_SLV)) ? 1UL : 0UL);
7610:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7611:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7612:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7613:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC master.
7614:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_MST      LL_ADC_IsActiveFlag_MST_EOSMP
7615:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7616:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7617:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7618:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7619:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
7620:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7621:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_MST) == (LL_ADC_FLAG_EOSMP_MST)) ? 1UL : 0
7622:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7623:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7624:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7625:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC slave.
7626:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_SLV      LL_ADC_IsActiveFlag_SLV_EOSMP
7627:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7628:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7629:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7630:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7631:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
7632:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7633:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_SLV) == (LL_ADC_FLAG_EOSMP_SLV)) ? 1UL : 0
ARM GAS  /tmp/cc6JDs4t.s 			page 292


7634:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7635:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7636:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7637:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC master.
7638:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      JEOC_MST       LL_ADC_IsActiveFlag_MST_JEOC
7639:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7640:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7641:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7642:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7643:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
7644:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7645:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_MST) == (LL_ADC_FLAG_JEOC_MST)) ? 1UL : 0UL
7646:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7648:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7649:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC slave.
7650:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      JEOC_SLV       LL_ADC_IsActiveFlag_SLV_JEOC
7651:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7652:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7654:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7655:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
7656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7657:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_SLV) == (LL_ADC_FLAG_JEOC_SLV)) ? 1UL : 0UL
7658:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7660:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7661:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC master.
7662:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      JEOS_MST       LL_ADC_IsActiveFlag_MST_JEOS
7663:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7664:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7665:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7666:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7667:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
7668:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7669:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_MST) == (LL_ADC_FLAG_JEOS_MST)) ? 1UL : 0UL
7670:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7671:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7672:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7673:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC slave.
7674:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      JEOS_SLV       LL_ADC_IsActiveFlag_SLV_JEOS
7675:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7676:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7677:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7678:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7679:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
7680:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7681:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_SLV) == (LL_ADC_FLAG_JEOS_SLV)) ? 1UL : 0UL
7682:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7683:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7684:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7685:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC master.
7686:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_MST      LL_ADC_IsActiveFlag_MST_JQOVF
7687:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7688:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7689:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7690:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  /tmp/cc6JDs4t.s 			page 293


7691:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
7692:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7693:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_MST) == (LL_ADC_FLAG_JQOVF_MST)) ? 1UL : 0
7694:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7695:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7696:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7697:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC slave.
7698:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_SLV      LL_ADC_IsActiveFlag_SLV_JQOVF
7699:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7700:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7701:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7702:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7703:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
7704:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7705:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_SLV) == (LL_ADC_FLAG_JQOVF_SLV)) ? 1UL : 0
7706:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7707:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7708:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7709:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 1 of the ADC master.
7710:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      AWD1_MST       LL_ADC_IsActiveFlag_MST_AWD1
7711:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7712:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7713:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7714:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7715:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
7716:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_MST) == (LL_ADC_FLAG_AWD1_MST)) ? 1UL : 0UL
7718:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7719:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7720:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7721:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode analog watchdog 1 of the ADC slave.
7722:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      AWD1_SLV       LL_ADC_IsActiveFlag_SLV_AWD1
7723:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7724:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7725:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7726:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7727:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
7728:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7729:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_SLV) == (LL_ADC_FLAG_AWD1_SLV)) ? 1UL : 0UL
7730:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7731:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7732:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7733:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC master.
7734:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      AWD2_MST       LL_ADC_IsActiveFlag_MST_AWD2
7735:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7736:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7737:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7738:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7739:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
7740:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7741:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_MST) == (LL_ADC_FLAG_AWD2_MST)) ? 1UL : 0UL
7742:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7743:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7744:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7745:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC slave.
7746:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      AWD2_SLV       LL_ADC_IsActiveFlag_SLV_AWD2
7747:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
ARM GAS  /tmp/cc6JDs4t.s 			page 294


7748:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7749:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7750:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7751:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
7752:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7753:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_SLV) == (LL_ADC_FLAG_AWD2_SLV)) ? 1UL : 0UL
7754:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7755:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7757:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC master.
7758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      AWD3_MST       LL_ADC_IsActiveFlag_MST_AWD3
7759:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7760:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7761:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7762:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7763:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
7764:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7765:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_MST) == (LL_ADC_FLAG_AWD3_MST)) ? 1UL : 0UL
7766:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7767:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7768:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC slave.
7770:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      AWD3_SLV       LL_ADC_IsActiveFlag_SLV_AWD3
7771:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7772:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7773:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7774:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7775:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
7776:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7777:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_SLV) == (LL_ADC_FLAG_AWD3_SLV)) ? 1UL : 0UL
7778:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7779:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7780:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7781:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
7782:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7783:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7784:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
7785:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
7786:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7787:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7788:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7789:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable ADC ready.
7790:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
7791:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7792:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7793:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7794:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
7795:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7796:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7797:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7798:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7799:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7800:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
7801:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
7802:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7803:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7804:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  /tmp/cc6JDs4t.s 			page 295


7805:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
7806:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7807:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
7808:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7809:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7810:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7811:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
7812:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
7813:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7814:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7815:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7816:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
7817:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7818:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
7819:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7820:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7821:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7822:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
7823:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
7824:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7825:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7826:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7827:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
7828:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7829:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
7830:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7831:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7832:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7833:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
7834:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
7835:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7836:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7837:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7838:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
7839:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7840:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7841:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7842:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7843:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7844:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of unitary conversion.
7845:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_EnableIT_JEOC
7846:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7847:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7848:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7849:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOC(ADC_TypeDef *ADCx)
7850:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7851:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7852:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7853:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7854:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7855:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of sequence conversions.
7856:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_EnableIT_JEOS
7857:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7858:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7859:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7860:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOS(ADC_TypeDef *ADCx)
7861:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/cc6JDs4t.s 			page 296


7862:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7863:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7864:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7865:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7866:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected context queue overflow.
7867:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_EnableIT_JQOVF
7868:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7869:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7870:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7871:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JQOVF(ADC_TypeDef *ADCx)
7872:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7873:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7874:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7875:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7876:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7877:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
7878:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
7879:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7880:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7881:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7882:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
7883:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7884:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
7885:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7886:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7887:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
7889:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
7890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7891:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7892:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7893:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
7894:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7895:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7896:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7897:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7898:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7899:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
7900:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
7901:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7902:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7903:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7904:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
7905:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7906:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
7907:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7908:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7909:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7910:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
7911:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
7912:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7913:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7914:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7915:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
7916:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7917:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7918:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc6JDs4t.s 			page 297


7919:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7920:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7921:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7922:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
7923:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7924:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7925:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7926:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
7927:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7928:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
7929:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7930:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7931:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7932:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
7933:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
7934:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7935:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7936:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7937:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
7938:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7939:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
7940:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7941:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7942:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7943:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
7944:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
7945:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7946:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7947:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7948:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
7949:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7950:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
7951:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7952:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7953:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7954:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
7955:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
7956:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7957:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7958:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7959:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
7960:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7961:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7962:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7963:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7964:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7965:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7966:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_DisableIT_JEOC
7967:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7968:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7969:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7970:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOC(ADC_TypeDef *ADCx)
7971:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7972:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7973:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7974:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7975:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  /tmp/cc6JDs4t.s 			page 298


7976:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected end of sequence conversions.
7977:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_DisableIT_JEOS
7978:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7979:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7980:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7981:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOS(ADC_TypeDef *ADCx)
7982:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7983:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7984:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7985:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7986:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7987:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected context queue overflow.
7988:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_DisableIT_JQOVF
7989:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7990:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7991:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7992:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JQOVF(ADC_TypeDef *ADCx)
7993:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7994:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7995:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7996:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7997:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7998:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
7999:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
8000:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
8001:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
8002:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
8003:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
8004:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
8005:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
8006:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
8007:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
8008:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
8009:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
8010:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
8011:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
8012:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
8013:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
8014:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
8015:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
8016:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
8017:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
8018:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
8019:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
8020:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
8021:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
8022:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
8023:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
8024:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
8025:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
 3179              		.loc 2 8025 22 view .LVU955
 3180              	.LBB461:
8026:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
8027:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 3181              		.loc 2 8027 3 view .LVU956
 3182 0142 5168     		ldr	r1, [r2, #4]
 3183              	.LBE461:
ARM GAS  /tmp/cc6JDs4t.s 			page 299


 3184              	.LBE460:
3142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3185              		.loc 1 3142 21 is_stmt 0 view .LVU957
 3186 0144 0020     		movs	r0, #0
 3187              	.LBB463:
 3188              	.LBB462:
 3189              		.loc 2 8027 3 view .LVU958
 3190 0146 21F40071 		bic	r1, r1, #512
 3191 014a 5160     		str	r1, [r2, #4]
 3192              	.LVL221:
 3193              		.loc 2 8027 3 view .LVU959
 3194              	.LBE462:
 3195              	.LBE463:
3464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3196              		.loc 1 3464 3 is_stmt 1 view .LVU960
3464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3197              		.loc 1 3464 3 view .LVU961
 3198 014c 0022     		movs	r2, #0
 3199 014e 83F85020 		strb	r2, [r3, #80]
3464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3200              		.loc 1 3464 3 view .LVU962
3467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 3201              		.loc 1 3467 3 view .LVU963
3468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3202              		.loc 1 3468 1 is_stmt 0 view .LVU964
 3203 0152 F0BC     		pop	{r4, r5, r6, r7}
 3204              	.LCFI19:
 3205              		.cfi_remember_state
 3206              		.cfi_restore 7
 3207              		.cfi_restore 6
 3208              		.cfi_restore 5
 3209              		.cfi_restore 4
 3210              		.cfi_def_cfa_offset 0
 3211 0154 7047     		bx	lr
 3212              	.LVL222:
 3213              	.L394:
 3214              	.LCFI20:
 3215              		.cfi_restore_state
3219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3216              		.loc 1 3219 7 is_stmt 1 view .LVU965
 3217 0156 B0F1A07F 		cmp	r0, #20971520
 3218 015a 00F00981 		beq	.L310
 3219 015e 2BD8     		bhi	.L311
 3220 0160 B0F5400F 		cmp	r0, #12582912
 3221 0164 00F0F980 		beq	.L312
 3222 0168 B0F1807F 		cmp	r0, #16777216
 3223 016c 19D1     		bne	.L400
3241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 3224              		.loc 1 3241 11 view .LVU966
 3225              	.LVL223:
 3226              	.LBB464:
 3227              	.LBI464:
5647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3228              		.loc 2 5647 22 view .LVU967
 3229              	.LBB465:
5653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3230              		.loc 2 5653 3 view .LVU968
ARM GAS  /tmp/cc6JDs4t.s 			page 300


5656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3231              		.loc 2 5656 3 view .LVU969
 3232 016e D468     		ldr	r4, [r2, #12]
 3233 0170 7648     		ldr	r0, .L405+16
 3234 0172 2040     		ands	r0, r0, r4
 3235 0174 40F08070 		orr	r0, r0, #16777216
 3236 0178 D060     		str	r0, [r2, #12]
 3237              	.LVL224:
 3238              	.L318:
5656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3239              		.loc 2 5656 3 is_stmt 0 view .LVU970
 3240              	.LBE465:
 3241              	.LBE464:
3256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3242              		.loc 1 3256 7 is_stmt 1 view .LVU971
3256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3243              		.loc 1 3256 36 is_stmt 0 view .LVU972
 3244 017a 7348     		ldr	r0, .L405+12
 3245 017c 0068     		ldr	r0, [r0]
 3246 017e 00F07040 		and	r0, r0, #-268435456
 3247 0182 B0F1805F 		cmp	r0, #268435456
 3248 0186 D068     		ldr	r0, [r2, #12]
 3249 0188 00F08380 		beq	.L401
3256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3250              		.loc 1 3256 36 discriminator 2 view .LVU973
 3251 018c 10F0100F 		tst	r0, #16
 3252 0190 0D69     		ldr	r5, [r1, #16]
 3253 0192 D068     		ldr	r0, [r2, #12]
 3254 0194 40F0B980 		bne	.L321
3256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3255              		.loc 1 3256 36 discriminator 4 view .LVU974
 3256 0198 C0F38200 		ubfx	r0, r0, #2, #3
 3257 019c 4000     		lsls	r0, r0, #1
 3258 019e 8540     		lsls	r5, r5, r0
 3259 01a0 7CE0     		b	.L320
 3260              	.L400:
3219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3261              		.loc 1 3219 7 view .LVU975
 3262 01a2 B0F5000F 		cmp	r0, #8388608
 3263 01a6 40F0D380 		bne	.L315
3237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 3264              		.loc 1 3237 11 is_stmt 1 view .LVU976
 3265              	.LVL225:
 3266              	.LBB466:
 3267              	.LBI466:
5647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3268              		.loc 2 5647 22 view .LVU977
 3269              	.LBB467:
5653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3270              		.loc 2 5653 3 view .LVU978
5656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3271              		.loc 2 5656 3 view .LVU979
 3272 01aa D468     		ldr	r4, [r2, #12]
 3273 01ac 6748     		ldr	r0, .L405+16
 3274 01ae 2040     		ands	r0, r0, r4
 3275 01b0 40F40000 		orr	r0, r0, #8388608
 3276 01b4 D060     		str	r0, [r2, #12]
ARM GAS  /tmp/cc6JDs4t.s 			page 301


5659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3277              		.loc 2 5659 1 is_stmt 0 view .LVU980
 3278 01b6 E0E7     		b	.L318
 3279              	.LVL226:
 3280              	.L311:
5659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3281              		.loc 2 5659 1 view .LVU981
 3282              	.LBE467:
 3283              	.LBE466:
3219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3284              		.loc 1 3219 7 view .LVU982
 3285 01b8 B0F1C07F 		cmp	r0, #25165824
 3286 01bc 00F0E380 		beq	.L316
 3287 01c0 B0F1E07F 		cmp	r0, #29360128
 3288 01c4 40F0C480 		bne	.L315
3232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 3289              		.loc 1 3232 11 is_stmt 1 view .LVU983
 3290              	.LVL227:
 3291              	.LBB468:
 3292              	.LBI468:
5647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3293              		.loc 2 5647 22 view .LVU984
 3294              	.LBB469:
5653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3295              		.loc 2 5653 3 view .LVU985
5656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3296              		.loc 2 5656 3 view .LVU986
 3297 01c8 D568     		ldr	r5, [r2, #12]
 3298 01ca 8868     		ldr	r0, [r1, #8]
 3299 01cc 5F4C     		ldr	r4, .L405+16
 3300 01ce 00F0F840 		and	r0, r0, #2080374784
 3301 01d2 2C40     		ands	r4, r4, r5
 3302 01d4 2043     		orrs	r0, r0, r4
 3303 01d6 40F0E070 		orr	r0, r0, #29360128
 3304 01da D060     		str	r0, [r2, #12]
 3305              	.LVL228:
5659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3306              		.loc 2 5659 1 is_stmt 0 view .LVU987
 3307 01dc CDE7     		b	.L318
 3308              	.LVL229:
 3309              	.L357:
 3310              	.LCFI21:
 3311              		.cfi_def_cfa_offset 0
 3312              		.cfi_restore 4
 3313              		.cfi_restore 5
 3314              		.cfi_restore 6
 3315              		.cfi_restore 7
5659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3316              		.loc 2 5659 1 view .LVU988
 3317              	.LBE469:
 3318              	.LBE468:
3200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3319              		.loc 1 3200 3 view .LVU989
 3320 01de 0220     		movs	r0, #2
3468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3321              		.loc 1 3468 1 view .LVU990
 3322 01e0 7047     		bx	lr
ARM GAS  /tmp/cc6JDs4t.s 			page 302


 3323              	.LVL230:
 3324              	.L398:
 3325              	.LCFI22:
 3326              		.cfi_def_cfa_offset 16
 3327              		.cfi_offset 4, -16
 3328              		.cfi_offset 5, -12
 3329              		.cfi_offset 6, -8
 3330              		.cfi_offset 7, -4
3397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR2,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
 3331              		.loc 1 3397 9 is_stmt 1 view .LVU991
 3332 01e2 D2F8B040 		ldr	r4, [r2, #176]
 3333              	.LBB470:
 3334              	.LBB471:
7502:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3335              		.loc 2 7502 3 is_stmt 0 view .LVU992
 3336 01e6 4FF48076 		mov	r6, #256
 3337              	.LBE471:
 3338              	.LBE470:
3397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR2,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
 3339              		.loc 1 3397 9 view .LVU993
 3340 01ea 04F07C44 		and	r4, r4, #-67108864
 3341 01ee 2543     		orrs	r5, r5, r4
 3342              	.LVL231:
3397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR2,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
 3343              		.loc 1 3397 9 view .LVU994
 3344 01f0 C2F8B050 		str	r5, [r2, #176]
3398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3345              		.loc 1 3398 9 is_stmt 1 view .LVU995
 3346 01f4 D2F8B440 		ldr	r4, [r2, #180]
 3347 01f8 04F07C44 		and	r4, r4, #-67108864
 3348 01fc 2043     		orrs	r0, r0, r4
 3349              	.LVL232:
3398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3350              		.loc 1 3398 9 is_stmt 0 view .LVU996
 3351 01fe C2F8B400 		str	r0, [r2, #180]
3408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3352              		.loc 1 3408 7 is_stmt 1 view .LVU997
3411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3353              		.loc 1 3411 9 view .LVU998
 3354 0202 586D     		ldr	r0, [r3, #84]
 3355 0204 20F40030 		bic	r0, r0, #131072
 3356 0208 5865     		str	r0, [r3, #84]
3417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3357              		.loc 1 3417 9 view .LVU999
 3358              	.LVL233:
 3359              	.LBB473:
 3360              	.LBI470:
7500:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3361              		.loc 2 7500 22 view .LVU1000
 3362              	.LBB472:
7502:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3363              		.loc 2 7502 3 view .LVU1001
 3364 020a 1660     		str	r6, [r2]
 3365              	.LVL234:
7502:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3366              		.loc 2 7502 3 is_stmt 0 view .LVU1002
 3367              	.LBE472:
ARM GAS  /tmp/cc6JDs4t.s 			page 303


 3368              	.LBE473:
3420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3369              		.loc 1 3420 9 is_stmt 1 view .LVU1003
3420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3370              		.loc 1 3420 12 is_stmt 0 view .LVU1004
 3371 020c 097B     		ldrb	r1, [r1, #12]	@ zero_extendqisi2
 3372              	.LVL235:
3420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3373              		.loc 1 3420 12 view .LVU1005
 3374 020e 0129     		cmp	r1, #1
 3375 0210 00F08D80 		beq	.L402
3426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 3376              		.loc 1 3426 11 is_stmt 1 view .LVU1006
 3377              	.LVL236:
 3378              	.LBB474:
 3379              	.LBI474:
8014:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3380              		.loc 2 8014 22 view .LVU1007
 3381              	.LBB475:
8016:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3382              		.loc 2 8016 3 view .LVU1008
 3383 0214 5168     		ldr	r1, [r2, #4]
 3384              	.LBE475:
 3385              	.LBE474:
3142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3386              		.loc 1 3142 21 is_stmt 0 view .LVU1009
 3387 0216 0020     		movs	r0, #0
 3388              	.LBB477:
 3389              	.LBB476:
8016:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3390              		.loc 2 8016 3 view .LVU1010
 3391 0218 21F48071 		bic	r1, r1, #256
 3392 021c 5160     		str	r1, [r2, #4]
8017:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3393              		.loc 2 8017 1 view .LVU1011
 3394 021e 2FE7     		b	.L326
 3395              	.LVL237:
 3396              	.L397:
8017:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3397              		.loc 2 8017 1 view .LVU1012
 3398              	.LBE476:
 3399              	.LBE477:
3356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3400              		.loc 1 3356 36 discriminator 1 view .LVU1013
 3401 0220 D668     		ldr	r6, [r2, #12]
 3402 0222 4D69     		ldr	r5, [r1, #20]
 3403 0224 C6F38206 		ubfx	r6, r6, #2, #3
 3404 0228 7600     		lsls	r6, r6, #1
 3405 022a B540     		lsls	r5, r5, r6
 3406 022c 6DE7     		b	.L350
 3407              	.LVL238:
 3408              	.L396:
3355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3409              		.loc 1 3355 36 discriminator 1 view .LVU1014
 3410 022e C0F38200 		ubfx	r0, r0, #2, #3
 3411 0232 0D69     		ldr	r5, [r1, #16]
 3412 0234 4000     		lsls	r0, r0, #1
ARM GAS  /tmp/cc6JDs4t.s 			page 304


 3413 0236 05FA00F0 		lsl	r0, r5, r0
 3414 023a 53E7     		b	.L347
 3415              	.L348:
3355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3416              		.loc 1 3355 36 discriminator 5 view .LVU1015
 3417 023c 4008     		lsrs	r0, r0, #1
 3418 023e 00F00800 		and	r0, r0, #8
 3419 0242 05FA00F0 		lsl	r0, r5, r0
 3420 0246 4DE7     		b	.L347
 3421              	.LVL239:
 3422              	.L351:
3356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3423              		.loc 1 3356 36 discriminator 5 view .LVU1016
 3424 0248 7608     		lsrs	r6, r6, #1
 3425 024a 06F00806 		and	r6, r6, #8
 3426 024e B540     		lsls	r5, r5, r6
 3427 0250 5BE7     		b	.L350
 3428              	.LVL240:
 3429              	.L395:
3337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3430              		.loc 1 3337 15 is_stmt 1 view .LVU1017
 3431 0252 002D     		cmp	r5, #0
 3432 0254 64D0     		beq	.L403
 3433              	.LVL241:
 3434              	.LBB478:
 3435              	.LBI478:
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 3436              		.loc 3 1048 31 discriminator 2 view .LVU1018
 3437              	.LBB479:
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 3438              		.loc 3 1050 3 discriminator 2 view .LVU1019
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 3439              		.loc 3 1055 4 discriminator 2 view .LVU1020
 3440              		.syntax unified
 3441              	@ 1055 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3442 0256 90FAA0F0 		rbit r0, r0
 3443              	@ 0 "" 2
 3444              	.LVL242:
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3445              		.loc 3 1068 3 discriminator 2 view .LVU1021
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3446              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU1022
 3447              		.thumb
 3448              		.syntax unified
 3449              	.LBE479:
 3450              	.LBE478:
 3451              	.LBB480:
 3452              	.LBI480:
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 3453              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU1023
 3454              	.LBB481:
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 3455              		.loc 3 1089 3 discriminator 2 view .LVU1024
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 3456              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU1025
 3457 025a 0028     		cmp	r0, #0
 3458 025c 00F09A80 		beq	.L360
ARM GAS  /tmp/cc6JDs4t.s 			page 305


 3459              		.loc 3 1093 3 is_stmt 1 view .LVU1026
 3460              		.loc 3 1093 10 is_stmt 0 view .LVU1027
 3461 0260 B0FA80F0 		clz	r0, r0
 3462              	.LVL243:
 3463              		.loc 3 1093 10 view .LVU1028
 3464 0264 0125     		movs	r5, #1
 3465 0266 8540     		lsls	r5, r5, r0
 3466              	.L341:
 3467              		.loc 3 1093 10 view .LVU1029
 3468              	.LBE481:
 3469              	.LBE480:
3337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3470              		.loc 1 3337 15 discriminator 4 view .LVU1030
 3471 0268 D2F8A000 		ldr	r0, [r2, #160]
 3472 026c 2843     		orrs	r0, r0, r5
 3473 026e C2F8A000 		str	r0, [r2, #160]
 3474 0272 23E7     		b	.L335
 3475              	.LVL244:
 3476              	.L399:
3444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 3477              		.loc 1 3444 11 is_stmt 1 view .LVU1031
 3478              	.LBB483:
 3479              	.LBI483:
7904:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3480              		.loc 2 7904 22 view .LVU1032
 3481              	.LBB484:
7906:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3482              		.loc 2 7906 3 view .LVU1033
 3483 0274 5168     		ldr	r1, [r2, #4]
 3484              	.LBE484:
 3485              	.LBE483:
3142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3486              		.loc 1 3142 21 is_stmt 0 view .LVU1034
 3487 0276 0020     		movs	r0, #0
 3488              	.LBB486:
 3489              	.LBB485:
7906:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3490              		.loc 2 7906 3 view .LVU1035
 3491 0278 41F40071 		orr	r1, r1, #512
 3492 027c 5160     		str	r1, [r2, #4]
7907:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3493              		.loc 2 7907 1 view .LVU1036
 3494 027e FFE6     		b	.L326
 3495              	.LVL245:
 3496              	.L343:
7907:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3497              		.loc 2 7907 1 view .LVU1037
 3498              	.LBE485:
 3499              	.LBE486:
 3500              	.LBB487:
 3501              	.LBI487:
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 3502              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU1038
 3503              	.LBB488:
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 3504              		.loc 3 1050 3 discriminator 2 view .LVU1039
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/cc6JDs4t.s 			page 306


 3505              		.loc 3 1055 4 discriminator 2 view .LVU1040
 3506              		.syntax unified
 3507              	@ 1055 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3508 0280 90FAA0F0 		rbit r0, r0
 3509              	@ 0 "" 2
 3510              	.LVL246:
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3511              		.loc 3 1068 3 discriminator 2 view .LVU1041
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3512              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU1042
 3513              		.thumb
 3514              		.syntax unified
 3515              	.LBE488:
 3516              	.LBE487:
 3517              	.LBB489:
 3518              	.LBI489:
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 3519              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU1043
 3520              	.LBB490:
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 3521              		.loc 3 1089 3 discriminator 2 view .LVU1044
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 3522              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU1045
 3523 0284 0028     		cmp	r0, #0
 3524 0286 50D0     		beq	.L361
 3525              		.loc 3 1093 3 is_stmt 1 view .LVU1046
 3526              		.loc 3 1093 10 is_stmt 0 view .LVU1047
 3527 0288 B0FA80F0 		clz	r0, r0
 3528              	.LVL247:
 3529              		.loc 3 1093 10 view .LVU1048
 3530 028c 0125     		movs	r5, #1
 3531 028e 8540     		lsls	r5, r5, r0
 3532 0290 0FE7     		b	.L344
 3533              	.L401:
 3534              		.loc 3 1093 10 view .LVU1049
 3535              	.LBE490:
 3536              	.LBE489:
3256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3537              		.loc 1 3256 36 discriminator 1 view .LVU1050
 3538 0292 C0F38200 		ubfx	r0, r0, #2, #3
 3539 0296 0D69     		ldr	r5, [r1, #16]
 3540 0298 4000     		lsls	r0, r0, #1
 3541 029a 8540     		lsls	r5, r5, r0
 3542              	.L320:
 3543              	.LVL248:
3257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3544              		.loc 1 3257 7 is_stmt 1 discriminator 8 view .LVU1051
3257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3545              		.loc 1 3257 36 is_stmt 0 discriminator 8 view .LVU1052
 3546 029c 2A48     		ldr	r0, .L405+12
 3547 029e 0068     		ldr	r0, [r0]
 3548 02a0 00F07040 		and	r0, r0, #-268435456
 3549 02a4 B0F1805F 		cmp	r0, #268435456
 3550 02a8 D068     		ldr	r0, [r2, #12]
 3551 02aa 0AD0     		beq	.L404
3257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3552              		.loc 1 3257 36 discriminator 2 view .LVU1053
ARM GAS  /tmp/cc6JDs4t.s 			page 307


 3553 02ac 10F0100F 		tst	r0, #16
 3554 02b0 4C69     		ldr	r4, [r1, #20]
 3555 02b2 D068     		ldr	r0, [r2, #12]
 3556 02b4 2ED1     		bne	.L324
3257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3557              		.loc 1 3257 36 discriminator 4 view .LVU1054
 3558 02b6 C0F38200 		ubfx	r0, r0, #2, #3
 3559 02ba 4000     		lsls	r0, r0, #1
 3560 02bc 04FA00F0 		lsl	r0, r4, r0
 3561 02c0 05E0     		b	.L323
 3562              	.L404:
3257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3563              		.loc 1 3257 36 discriminator 1 view .LVU1055
 3564 02c2 C0F38200 		ubfx	r0, r0, #2, #3
 3565 02c6 4C69     		ldr	r4, [r1, #20]
 3566 02c8 4000     		lsls	r0, r0, #1
 3567 02ca 04FA00F0 		lsl	r0, r4, r0
 3568              	.L323:
 3569              	.LVL249:
3276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->HTR1,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
 3570              		.loc 1 3276 7 is_stmt 1 discriminator 8 view .LVU1056
 3571 02ce 146A     		ldr	r4, [r2, #32]
 3572              	.LBB492:
 3573              	.LBB493:
7491:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3574              		.loc 2 7491 3 is_stmt 0 discriminator 8 view .LVU1057
 3575 02d0 8026     		movs	r6, #128
 3576              	.LBE493:
 3577              	.LBE492:
3276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->HTR1,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
 3578              		.loc 1 3276 7 discriminator 8 view .LVU1058
 3579 02d2 04F07C44 		and	r4, r4, #-67108864
 3580 02d6 0443     		orrs	r4, r4, r0
 3581 02d8 1462     		str	r4, [r2, #32]
3277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 3582              		.loc 1 3277 7 is_stmt 1 discriminator 8 view .LVU1059
 3583 02da 506A     		ldr	r0, [r2, #36]
 3584              	.LVL250:
3277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 3585              		.loc 1 3277 7 is_stmt 0 discriminator 8 view .LVU1060
 3586 02dc 00F07C40 		and	r0, r0, #-67108864
 3587 02e0 2843     		orrs	r0, r0, r5
 3588 02e2 5062     		str	r0, [r2, #36]
3281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3589              		.loc 1 3281 7 is_stmt 1 discriminator 8 view .LVU1061
 3590 02e4 586D     		ldr	r0, [r3, #84]
 3591 02e6 20F48030 		bic	r0, r0, #65536
 3592 02ea 5865     		str	r0, [r3, #84]
3287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3593              		.loc 1 3287 7 discriminator 8 view .LVU1062
 3594              	.LVL251:
 3595              	.LBB496:
 3596              	.LBI492:
7489:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3597              		.loc 2 7489 22 discriminator 8 view .LVU1063
 3598              	.LBB494:
7491:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc6JDs4t.s 			page 308


 3599              		.loc 2 7491 3 discriminator 8 view .LVU1064
 3600              	.LBE494:
 3601              	.LBE496:
3142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3602              		.loc 1 3142 21 is_stmt 0 discriminator 8 view .LVU1065
 3603 02ec 0020     		movs	r0, #0
 3604              	.LBB497:
 3605              	.LBB495:
7491:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3606              		.loc 2 7491 3 discriminator 8 view .LVU1066
 3607 02ee 1660     		str	r6, [r2]
 3608              	.LVL252:
7491:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3609              		.loc 2 7491 3 discriminator 8 view .LVU1067
 3610              	.LBE495:
 3611              	.LBE497:
3290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3612              		.loc 1 3290 7 is_stmt 1 discriminator 8 view .LVU1068
3292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3613              		.loc 1 3292 9 discriminator 8 view .LVU1069
 3614              	.LBB498:
 3615              	.LBI498:
7882:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3616              		.loc 2 7882 22 discriminator 8 view .LVU1070
 3617              	.LBB499:
7884:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3618              		.loc 2 7884 3 discriminator 8 view .LVU1071
 3619              	.LBE499:
 3620              	.LBE498:
3290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3621              		.loc 1 3290 10 is_stmt 0 discriminator 8 view .LVU1072
 3622 02f0 097B     		ldrb	r1, [r1, #12]	@ zero_extendqisi2
 3623              	.LVL253:
3290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3624              		.loc 1 3290 10 discriminator 8 view .LVU1073
 3625 02f2 0129     		cmp	r1, #1
 3626              	.LBB501:
 3627              	.LBB500:
7884:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3628              		.loc 2 7884 3 discriminator 8 view .LVU1074
 3629 02f4 5168     		ldr	r1, [r2, #4]
 3630 02f6 0CBF     		ite	eq
 3631 02f8 3143     		orreq	r1, r1, r6
 3632              	.LBE500:
 3633              	.LBE501:
3296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3634              		.loc 1 3296 9 is_stmt 1 discriminator 8 view .LVU1075
 3635              	.LVL254:
 3636              	.LBB502:
 3637              	.LBI502:
8003:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3638              		.loc 2 8003 22 discriminator 8 view .LVU1076
 3639              	.LBB503:
8005:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3640              		.loc 2 8005 3 discriminator 8 view .LVU1077
 3641 02fa 21F08001 		bicne	r1, r1, #128
 3642 02fe 5160     		str	r1, [r2, #4]
ARM GAS  /tmp/cc6JDs4t.s 			page 309


 3643              	.LVL255:
8005:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3644              		.loc 2 8005 3 is_stmt 0 discriminator 8 view .LVU1078
 3645              	.LBE503:
 3646              	.LBE502:
3464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3647              		.loc 1 3464 3 is_stmt 1 discriminator 8 view .LVU1079
3464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3648              		.loc 1 3464 3 discriminator 8 view .LVU1080
 3649 0300 0022     		movs	r2, #0
 3650 0302 83F85020 		strb	r2, [r3, #80]
3464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3651              		.loc 1 3464 3 discriminator 8 view .LVU1081
3467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 3652              		.loc 1 3467 3 discriminator 8 view .LVU1082
3468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3653              		.loc 1 3468 1 is_stmt 0 discriminator 8 view .LVU1083
 3654 0306 F0BC     		pop	{r4, r5, r6, r7}
 3655              	.LCFI23:
 3656              		.cfi_remember_state
 3657              		.cfi_restore 7
 3658              		.cfi_restore 6
 3659              		.cfi_restore 5
 3660              		.cfi_restore 4
 3661              		.cfi_def_cfa_offset 0
 3662              	.LVL256:
3468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3663              		.loc 1 3468 1 discriminator 8 view .LVU1084
 3664 0308 7047     		bx	lr
 3665              	.LVL257:
 3666              	.L321:
 3667              	.LCFI24:
 3668              		.cfi_restore_state
3256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3669              		.loc 1 3256 36 discriminator 5 view .LVU1085
 3670 030a 4008     		lsrs	r0, r0, #1
 3671 030c 00F00800 		and	r0, r0, #8
 3672 0310 8540     		lsls	r5, r5, r0
 3673 0312 C3E7     		b	.L320
 3674              	.LVL258:
 3675              	.L324:
3257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3676              		.loc 1 3257 36 discriminator 5 view .LVU1086
 3677 0314 4008     		lsrs	r0, r0, #1
 3678 0316 00F00800 		and	r0, r0, #8
 3679 031a 04FA00F0 		lsl	r0, r4, r0
 3680 031e D6E7     		b	.L323
 3681              	.LVL259:
 3682              	.L403:
3337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3683              		.loc 1 3337 15 discriminator 1 view .LVU1087
 3684 0320 C0F38460 		ubfx	r0, r0, #26, #5
 3685 0324 0125     		movs	r5, #1
 3686 0326 8540     		lsls	r5, r5, r0
 3687 0328 9EE7     		b	.L341
 3688              	.LVL260:
 3689              	.L361:
ARM GAS  /tmp/cc6JDs4t.s 			page 310


 3690              	.LBB504:
 3691              	.LBB491:
3337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3692              		.loc 1 3337 15 discriminator 1 view .LVU1088
 3693 032a 0125     		movs	r5, #1
 3694              	.LVL261:
3337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3695              		.loc 1 3337 15 discriminator 1 view .LVU1089
 3696 032c C1E6     		b	.L344
 3697              	.LVL262:
 3698              	.L402:
3337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3699              		.loc 1 3337 15 discriminator 1 view .LVU1090
 3700              	.LBE491:
 3701              	.LBE504:
3422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 3702              		.loc 1 3422 11 is_stmt 1 view .LVU1091
 3703              	.LBB505:
 3704              	.LBI505:
7893:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3705              		.loc 2 7893 22 view .LVU1092
 3706              	.LBB506:
7895:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3707              		.loc 2 7895 3 view .LVU1093
 3708 032e 5168     		ldr	r1, [r2, #4]
 3709              	.LBE506:
 3710              	.LBE505:
3142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3711              		.loc 1 3142 21 is_stmt 0 view .LVU1094
 3712 0330 0020     		movs	r0, #0
 3713              	.LBB508:
 3714              	.LBB507:
7895:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3715              		.loc 2 7895 3 view .LVU1095
 3716 0332 41F48071 		orr	r1, r1, #256
 3717 0336 5160     		str	r1, [r2, #4]
7896:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3718              		.loc 2 7896 1 view .LVU1096
 3719 0338 A2E6     		b	.L326
 3720              	.L406:
 3721 033a 00BF     		.align	2
 3722              	.L405:
 3723 033c 0000C07D 		.word	2109734912
 3724 0340 FFFFCF7D 		.word	2110783487
 3725 0344 FFFF1F00 		.word	2097151
 3726 0348 0010005C 		.word	1543507968
 3727 034c FFFF3F82 		.word	-2109734913
 3728              	.LVL263:
 3729              	.L315:
7896:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3730              		.loc 2 7896 1 view .LVU1097
 3731              	.LBE507:
 3732              	.LBE508:
3249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 3733              		.loc 1 3249 11 is_stmt 1 view .LVU1098
 3734              	.LBB509:
 3735              	.LBI509:
ARM GAS  /tmp/cc6JDs4t.s 			page 311


5647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3736              		.loc 2 5647 22 view .LVU1099
 3737              	.LBB510:
5653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3738              		.loc 2 5653 3 view .LVU1100
5656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3739              		.loc 2 5656 3 view .LVU1101
 3740 0350 D468     		ldr	r4, [r2, #12]
 3741 0352 1148     		ldr	r0, .L407
 3742 0354 2040     		ands	r0, r0, r4
 3743 0356 D060     		str	r0, [r2, #12]
5659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3744              		.loc 2 5659 1 is_stmt 0 view .LVU1102
 3745 0358 0FE7     		b	.L318
 3746              	.LVL264:
 3747              	.L312:
5659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3748              		.loc 2 5659 1 view .LVU1103
 3749              	.LBE510:
 3750              	.LBE509:
3222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 3751              		.loc 1 3222 11 is_stmt 1 view .LVU1104
 3752              	.LBB511:
 3753              	.LBI511:
5647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3754              		.loc 2 5647 22 view .LVU1105
 3755              	.LBB512:
5653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3756              		.loc 2 5653 3 view .LVU1106
5656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3757              		.loc 2 5656 3 view .LVU1107
 3758 035a D568     		ldr	r5, [r2, #12]
 3759 035c 8868     		ldr	r0, [r1, #8]
 3760 035e 0E4C     		ldr	r4, .L407
 3761 0360 00F0F840 		and	r0, r0, #2080374784
 3762 0364 2C40     		ands	r4, r4, r5
 3763 0366 2043     		orrs	r0, r0, r4
 3764 0368 40F44000 		orr	r0, r0, #12582912
 3765 036c D060     		str	r0, [r2, #12]
 3766              	.LVL265:
5659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3767              		.loc 2 5659 1 is_stmt 0 view .LVU1108
 3768 036e 04E7     		b	.L318
 3769              	.LVL266:
 3770              	.L310:
5659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3771              		.loc 2 5659 1 view .LVU1109
 3772              	.LBE512:
 3773              	.LBE511:
3227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
 3774              		.loc 1 3227 11 is_stmt 1 view .LVU1110
 3775              	.LBB513:
 3776              	.LBI513:
5647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3777              		.loc 2 5647 22 view .LVU1111
 3778              	.LBB514:
5653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
ARM GAS  /tmp/cc6JDs4t.s 			page 312


 3779              		.loc 2 5653 3 view .LVU1112
5656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3780              		.loc 2 5656 3 view .LVU1113
 3781 0370 D568     		ldr	r5, [r2, #12]
 3782 0372 8868     		ldr	r0, [r1, #8]
 3783 0374 084C     		ldr	r4, .L407
 3784 0376 00F0F840 		and	r0, r0, #2080374784
 3785 037a 2C40     		ands	r4, r4, r5
 3786 037c 2043     		orrs	r0, r0, r4
 3787 037e 40F0A070 		orr	r0, r0, #20971520
 3788 0382 D060     		str	r0, [r2, #12]
 3789              	.LVL267:
5659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3790              		.loc 2 5659 1 is_stmt 0 view .LVU1114
 3791 0384 F9E6     		b	.L318
 3792              	.LVL268:
 3793              	.L316:
5659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3794              		.loc 2 5659 1 view .LVU1115
 3795              	.LBE514:
 3796              	.LBE513:
3245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 3797              		.loc 1 3245 11 is_stmt 1 view .LVU1116
 3798              	.LBB515:
 3799              	.LBI515:
5647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3800              		.loc 2 5647 22 view .LVU1117
 3801              	.LBB516:
5653:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3802              		.loc 2 5653 3 view .LVU1118
5656:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3803              		.loc 2 5656 3 view .LVU1119
 3804 0386 D468     		ldr	r4, [r2, #12]
 3805 0388 0348     		ldr	r0, .L407
 3806 038a 2040     		ands	r0, r0, r4
 3807 038c 40F0C070 		orr	r0, r0, #25165824
 3808 0390 D060     		str	r0, [r2, #12]
5659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3809              		.loc 2 5659 1 is_stmt 0 view .LVU1120
 3810 0392 F2E6     		b	.L318
 3811              	.LVL269:
 3812              	.L360:
5659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3813              		.loc 2 5659 1 view .LVU1121
 3814              	.LBE516:
 3815              	.LBE515:
 3816              	.LBB517:
 3817              	.LBB482:
 3818 0394 0125     		movs	r5, #1
 3819              	.LVL270:
5659:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3820              		.loc 2 5659 1 view .LVU1122
 3821 0396 67E7     		b	.L341
 3822              	.L408:
 3823              		.align	2
 3824              	.L407:
 3825 0398 FFFF3F82 		.word	-2109734913
ARM GAS  /tmp/cc6JDs4t.s 			page 313


 3826              	.LBE482:
 3827              	.LBE517:
 3828              		.cfi_endproc
 3829              	.LFE350:
 3831              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 3832              		.align	1
 3833              		.p2align 2,,3
 3834              		.global	HAL_ADC_GetState
 3835              		.syntax unified
 3836              		.thumb
 3837              		.thumb_func
 3838              		.fpu fpv5-d16
 3840              	HAL_ADC_GetState:
 3841              	.LVL271:
 3842              	.LFB351:
3503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
 3843              		.loc 1 3503 1 is_stmt 1 view -0
 3844              		.cfi_startproc
 3845              		@ args = 0, pretend = 0, frame = 0
 3846              		@ frame_needed = 0, uses_anonymous_args = 0
 3847              		@ link register save eliminated.
3505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3848              		.loc 1 3505 3 view .LVU1124
3508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 3849              		.loc 1 3508 3 view .LVU1125
3508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 3850              		.loc 1 3508 14 is_stmt 0 view .LVU1126
 3851 0000 406D     		ldr	r0, [r0, #84]
 3852              	.LVL272:
3509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3853              		.loc 1 3509 1 view .LVU1127
 3854 0002 7047     		bx	lr
 3855              		.cfi_endproc
 3856              	.LFE351:
 3858              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 3859              		.align	1
 3860              		.p2align 2,,3
 3861              		.global	HAL_ADC_GetError
 3862              		.syntax unified
 3863              		.thumb
 3864              		.thumb_func
 3865              		.fpu fpv5-d16
 3867              	HAL_ADC_GetError:
 3868              	.LVL273:
 3869              	.LFB352:
3517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
 3870              		.loc 1 3517 1 is_stmt 1 view -0
 3871              		.cfi_startproc
 3872              		@ args = 0, pretend = 0, frame = 0
 3873              		@ frame_needed = 0, uses_anonymous_args = 0
 3874              		@ link register save eliminated.
3519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3875              		.loc 1 3519 3 view .LVU1129
3521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 3876              		.loc 1 3521 3 view .LVU1130
3521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 3877              		.loc 1 3521 14 is_stmt 0 view .LVU1131
ARM GAS  /tmp/cc6JDs4t.s 			page 314


 3878 0000 806D     		ldr	r0, [r0, #88]
 3879              	.LVL274:
3522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3880              		.loc 1 3522 1 view .LVU1132
 3881 0002 7047     		bx	lr
 3882              		.cfi_endproc
 3883              	.LFE352:
 3885              		.section	.text.ADC_ConversionStop,"ax",%progbits
 3886              		.align	1
 3887              		.p2align 2,,3
 3888              		.global	ADC_ConversionStop
 3889              		.syntax unified
 3890              		.thumb
 3891              		.thumb_func
 3892              		.fpu fpv5-d16
 3894              	ADC_ConversionStop:
 3895              	.LVL275:
 3896              	.LFB353:
3547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 3897              		.loc 1 3547 1 is_stmt 1 view -0
 3898              		.cfi_startproc
 3899              		@ args = 0, pretend = 0, frame = 0
 3900              		@ frame_needed = 0, uses_anonymous_args = 0
3548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
 3901              		.loc 1 3548 3 view .LVU1134
3549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 3902              		.loc 1 3549 3 view .LVU1135
3550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
 3903              		.loc 1 3550 3 view .LVU1136
3561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3904              		.loc 1 3561 44 is_stmt 0 view .LVU1137
 3905 0000 0368     		ldr	r3, [r0]
 3906              	.LBB518:
 3907              	.LBB519:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3908              		.loc 2 6890 12 view .LVU1138
 3909 0002 9A68     		ldr	r2, [r3, #8]
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3910              		.loc 2 6890 74 view .LVU1139
 3911 0004 12F0040F 		tst	r2, #4
 3912              	.LBE519:
 3913              	.LBE518:
 3914              	.LBB521:
 3915              	.LBB522:
7085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3916              		.loc 2 7085 12 view .LVU1140
 3917 0008 9A68     		ldr	r2, [r3, #8]
 3918              	.LBE522:
 3919              	.LBE521:
3547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 3920              		.loc 1 3547 1 view .LVU1141
 3921 000a 70B5     		push	{r4, r5, r6, lr}
 3922              	.LCFI25:
 3923              		.cfi_def_cfa_offset 16
 3924              		.cfi_offset 4, -16
 3925              		.cfi_offset 5, -12
 3926              		.cfi_offset 6, -8
ARM GAS  /tmp/cc6JDs4t.s 			page 315


 3927              		.cfi_offset 14, -4
3547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 3928              		.loc 1 3547 1 view .LVU1142
 3929 000c 0446     		mov	r4, r0
 3930              	.LVL276:
3551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 3931              		.loc 1 3551 3 is_stmt 1 view .LVU1143
3552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3932              		.loc 1 3552 3 view .LVU1144
3553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3933              		.loc 1 3553 3 view .LVU1145
3556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
 3934              		.loc 1 3556 3 view .LVU1146
3557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3935              		.loc 1 3557 3 view .LVU1147
3561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3936              		.loc 1 3561 3 view .LVU1148
 3937              	.LBB524:
 3938              	.LBI518:
6888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3939              		.loc 2 6888 26 view .LVU1149
 3940              	.LBB520:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3941              		.loc 2 6890 3 view .LVU1150
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3942              		.loc 2 6890 74 is_stmt 0 view .LVU1151
 3943 000e 03D1     		bne	.L413
 3944              	.LVL277:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3945              		.loc 2 6890 74 view .LVU1152
 3946              	.LBE520:
 3947              	.LBE524:
3562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
 3948              		.loc 1 3562 3 is_stmt 1 view .LVU1153
 3949              	.LBB525:
 3950              	.LBI521:
7083:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3951              		.loc 2 7083 26 view .LVU1154
 3952              	.LBB523:
7085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3953              		.loc 2 7085 3 view .LVU1155
7085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3954              		.loc 2 7085 76 is_stmt 0 view .LVU1156
 3955 0010 1207     		lsls	r2, r2, #28
 3956 0012 01D4     		bmi	.L413
 3957              	.LVL278:
 3958              	.L425:
7085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3959              		.loc 2 7085 76 view .LVU1157
 3960              	.LBE523:
 3961              	.LBE525:
3668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 3962              		.loc 1 3668 10 view .LVU1158
 3963 0014 0020     		movs	r0, #0
3669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3964              		.loc 1 3669 1 view .LVU1159
 3965 0016 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/cc6JDs4t.s 			page 316


 3966              	.LVL279:
 3967              	.L413:
3573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 3968              		.loc 1 3573 5 is_stmt 1 view .LVU1160
3573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 3969              		.loc 1 3573 25 is_stmt 0 view .LVU1161
 3970 0018 DA68     		ldr	r2, [r3, #12]
3573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 3971              		.loc 1 3573 8 view .LVU1162
 3972 001a 9601     		lsls	r6, r2, #6
 3973 001c 1AD4     		bmi	.L457
 3974              	.LVL280:
 3975              	.L415:
3602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3976              		.loc 1 3602 5 is_stmt 1 view .LVU1163
3602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3977              		.loc 1 3602 8 is_stmt 0 view .LVU1164
 3978 001e 0229     		cmp	r1, #2
 3979              	.LBB526:
 3980              	.LBB527:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3981              		.loc 2 6890 12 view .LVU1165
 3982 0020 9A68     		ldr	r2, [r3, #8]
 3983              	.LBE527:
 3984              	.LBE526:
3602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3985              		.loc 1 3602 8 view .LVU1166
 3986 0022 45D0     		beq	.L421
3605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3987              		.loc 1 3605 7 is_stmt 1 view .LVU1167
 3988              	.LVL281:
 3989              	.LBB530:
 3990              	.LBI526:
6888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3991              		.loc 2 6888 26 view .LVU1168
 3992              	.LBB528:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3993              		.loc 2 6890 3 view .LVU1169
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3994              		.loc 2 6890 74 is_stmt 0 view .LVU1170
 3995 0024 5607     		lsls	r6, r2, #29
 3996 0026 08D5     		bpl	.L422
 3997              	.LVL282:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3998              		.loc 2 6890 74 view .LVU1171
 3999              	.LBE528:
 4000              	.LBE530:
3607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4001              		.loc 1 3607 9 is_stmt 1 view .LVU1172
 4002              	.LBB531:
 4003              	.LBI531:
6767:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4004              		.loc 2 6767 26 view .LVU1173
 4005              	.LBB532:
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4006              		.loc 2 6769 3 view .LVU1174
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc6JDs4t.s 			page 317


 4007              		.loc 2 6769 12 is_stmt 0 view .LVU1175
 4008 0028 9A68     		ldr	r2, [r3, #8]
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4009              		.loc 2 6769 70 view .LVU1176
 4010 002a 9007     		lsls	r0, r2, #30
 4011 002c 05D4     		bmi	.L422
 4012              	.LVL283:
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4013              		.loc 2 6769 70 view .LVU1177
 4014              	.LBE532:
 4015              	.LBE531:
3610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4016              		.loc 1 3610 11 is_stmt 1 view .LVU1178
 4017              	.LBB534:
 4018              	.LBI534:
6872:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4019              		.loc 2 6872 22 view .LVU1179
 4020              	.LBB535:
6877:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4021              		.loc 2 6877 3 view .LVU1180
 4022 002e 9868     		ldr	r0, [r3, #8]
 4023 0030 2F4A     		ldr	r2, .L460
 4024 0032 0240     		ands	r2, r2, r0
 4025 0034 42F01002 		orr	r2, r2, #16
 4026 0038 9A60     		str	r2, [r3, #8]
 4027              	.LVL284:
 4028              	.L422:
6877:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4029              		.loc 2 6877 3 is_stmt 0 view .LVU1181
 4030              	.LBE535:
 4031              	.LBE534:
3616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4032              		.loc 1 3616 5 is_stmt 1 view .LVU1182
3616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4033              		.loc 1 3616 8 is_stmt 0 view .LVU1183
 4034 003a 0129     		cmp	r1, #1
 4035 003c 1ED0     		beq	.L423
3619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4036              		.loc 1 3619 7 is_stmt 1 view .LVU1184
 4037              	.LVL285:
 4038              	.LBB538:
 4039              	.LBI538:
7083:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4040              		.loc 2 7083 26 view .LVU1185
 4041              	.LBB539:
7085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4042              		.loc 2 7085 3 view .LVU1186
7085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4043              		.loc 2 7085 12 is_stmt 0 view .LVU1187
 4044 003e 9A68     		ldr	r2, [r3, #8]
7085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4045              		.loc 2 7085 76 view .LVU1188
 4046 0040 1207     		lsls	r2, r2, #28
 4047 0042 02D5     		bpl	.L431
 4048              	.LVL286:
7085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4049              		.loc 2 7085 76 view .LVU1189
ARM GAS  /tmp/cc6JDs4t.s 			page 318


 4050              	.LBE539:
 4051              	.LBE538:
3621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4052              		.loc 1 3621 9 is_stmt 1 view .LVU1190
 4053              	.LBB541:
 4054              	.LBI541:
6767:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4055              		.loc 2 6767 26 view .LVU1191
 4056              	.LBB542:
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4057              		.loc 2 6769 3 view .LVU1192
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4058              		.loc 2 6769 12 is_stmt 0 view .LVU1193
 4059 0044 9A68     		ldr	r2, [r3, #8]
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4060              		.loc 2 6769 70 view .LVU1194
 4061 0046 9007     		lsls	r0, r2, #30
 4062 0048 39D5     		bpl	.L458
 4063              	.LVL287:
 4064              	.L431:
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4065              		.loc 2 6769 70 view .LVU1195
 4066              	.LBE542:
 4067              	.LBE541:
3633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 4068              		.loc 1 3633 37 view .LVU1196
 4069 004a 0329     		cmp	r1, #3
 4070 004c 14BF     		ite	ne
 4071 004e 0425     		movne	r5, #4
 4072 0050 0C25     		moveq	r5, #12
 4073 0052 14E0     		b	.L420
 4074              	.LVL288:
 4075              	.L457:
3575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
 4076              		.loc 1 3575 9 view .LVU1197
 4077 0054 A08A     		ldrh	r0, [r4, #20]
 4078              	.LVL289:
3575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
 4079              		.loc 1 3575 9 view .LVU1198
 4080 0056 40F20112 		movw	r2, #257
 4081 005a 9042     		cmp	r0, r2
 4082 005c DFD1     		bne	.L415
 4083              	.LVL290:
3582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4084              		.loc 1 3582 13 is_stmt 1 view .LVU1199
3582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4085              		.loc 1 3582 14 is_stmt 0 view .LVU1200
 4086 005e 1A68     		ldr	r2, [r3]
3582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4087              		.loc 1 3582 13 view .LVU1201
 4088 0060 5006     		lsls	r0, r2, #25
 4089 0062 06D4     		bmi	.L417
 4090 0064 234A     		ldr	r2, .L460+4
 4091 0066 01E0     		b	.L416
 4092              	.LVL291:
 4093              	.L418:
3584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
ARM GAS  /tmp/cc6JDs4t.s 			page 319


 4094              		.loc 1 3584 12 view .LVU1202
 4095 0068 013A     		subs	r2, r2, #1
 4096              	.LVL292:
3584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4097              		.loc 1 3584 12 view .LVU1203
 4098 006a 18D0     		beq	.L456
 4099              	.LVL293:
 4100              	.L416:
3584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4101              		.loc 1 3584 9 is_stmt 1 view .LVU1204
3594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4102              		.loc 1 3594 9 view .LVU1205
3582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4103              		.loc 1 3582 13 view .LVU1206
3582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4104              		.loc 1 3582 14 is_stmt 0 view .LVU1207
 4105 006c 1968     		ldr	r1, [r3]
3582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4106              		.loc 1 3582 13 view .LVU1208
 4107 006e 4906     		lsls	r1, r1, #25
 4108 0070 FAD5     		bpl	.L418
 4109              	.LVL294:
 4110              	.L417:
3598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4111              		.loc 1 3598 7 is_stmt 1 view .LVU1209
 4112 0072 4022     		movs	r2, #64
 4113 0074 1A60     		str	r2, [r3]
 4114              	.LVL295:
3602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4115              		.loc 1 3602 5 view .LVU1210
3605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4116              		.loc 1 3605 7 view .LVU1211
 4117              	.LBB544:
6888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4118              		.loc 2 6888 26 view .LVU1212
 4119              	.LBB529:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4120              		.loc 2 6890 3 view .LVU1213
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4121              		.loc 2 6890 12 is_stmt 0 view .LVU1214
 4122 0076 9A68     		ldr	r2, [r3, #8]
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4123              		.loc 2 6890 74 view .LVU1215
 4124 0078 5207     		lsls	r2, r2, #29
 4125 007a 27D4     		bmi	.L419
 4126              	.LVL296:
 4127              	.L423:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4128              		.loc 2 6890 74 view .LVU1216
 4129              	.LBE529:
 4130              	.LBE544:
3640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 4131              		.loc 1 3640 37 view .LVU1217
 4132 007c 0425     		movs	r5, #4
 4133              	.L420:
 4134              	.LVL297:
3645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 320


 4135              		.loc 1 3645 5 is_stmt 1 view .LVU1218
3645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4136              		.loc 1 3645 17 is_stmt 0 view .LVU1219
 4137 007e FFF7FEFF 		bl	HAL_GetTick
 4138              	.LVL298:
3647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4139              		.loc 1 3647 17 view .LVU1220
 4140 0082 2368     		ldr	r3, [r4]
3645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4141              		.loc 1 3645 17 view .LVU1221
 4142 0084 0646     		mov	r6, r0
 4143              	.L455:
 4144              	.LVL299:
3647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4145              		.loc 1 3647 5 is_stmt 1 view .LVU1222
3647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4146              		.loc 1 3647 11 view .LVU1223
3647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4147              		.loc 1 3647 27 is_stmt 0 view .LVU1224
 4148 0086 9B68     		ldr	r3, [r3, #8]
3647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4149              		.loc 1 3647 11 view .LVU1225
 4150 0088 1D42     		tst	r5, r3
 4151 008a C3D0     		beq	.L425
3649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4152              		.loc 1 3649 7 is_stmt 1 view .LVU1226
3649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4153              		.loc 1 3649 12 is_stmt 0 view .LVU1227
 4154 008c FFF7FEFF 		bl	HAL_GetTick
 4155              	.LVL300:
3652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4156              		.loc 1 3652 9 is_stmt 1 view .LVU1228
3647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4157              		.loc 1 3647 11 view .LVU1229
3649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4158              		.loc 1 3649 26 is_stmt 0 view .LVU1230
 4159 0090 831B     		subs	r3, r0, r6
3649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4160              		.loc 1 3649 10 view .LVU1231
 4161 0092 052B     		cmp	r3, #5
3652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4162              		.loc 1 3652 17 view .LVU1232
 4163 0094 2368     		ldr	r3, [r4]
3649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4164              		.loc 1 3649 10 view .LVU1233
 4165 0096 F6D9     		bls	.L455
3652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4166              		.loc 1 3652 27 view .LVU1234
 4167 0098 9A68     		ldr	r2, [r3, #8]
3652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4168              		.loc 1 3652 11 view .LVU1235
 4169 009a 2A42     		tst	r2, r5
 4170 009c F3D0     		beq	.L455
 4171              	.LVL301:
 4172              	.L456:
3655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4173              		.loc 1 3655 11 is_stmt 1 view .LVU1236
ARM GAS  /tmp/cc6JDs4t.s 			page 321


 4174 009e 636D     		ldr	r3, [r4, #84]
3660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4175              		.loc 1 3660 18 is_stmt 0 view .LVU1237
 4176 00a0 0120     		movs	r0, #1
3655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4177              		.loc 1 3655 11 view .LVU1238
 4178 00a2 43F01003 		orr	r3, r3, #16
 4179 00a6 6365     		str	r3, [r4, #84]
3658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4180              		.loc 1 3658 11 is_stmt 1 view .LVU1239
 4181 00a8 A36D     		ldr	r3, [r4, #88]
 4182 00aa 0343     		orrs	r3, r3, r0
 4183 00ac A365     		str	r3, [r4, #88]
3660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4184              		.loc 1 3660 11 view .LVU1240
3669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4185              		.loc 1 3669 1 is_stmt 0 view .LVU1241
 4186 00ae 70BD     		pop	{r4, r5, r6, pc}
 4187              	.LVL302:
 4188              	.L421:
3619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4189              		.loc 1 3619 7 is_stmt 1 view .LVU1242
 4190              	.LBB545:
7083:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4191              		.loc 2 7083 26 view .LVU1243
 4192              	.LBB540:
7085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4193              		.loc 2 7085 3 view .LVU1244
7085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4194              		.loc 2 7085 76 is_stmt 0 view .LVU1245
 4195 00b0 1507     		lsls	r5, r2, #28
 4196 00b2 02D5     		bpl	.L430
 4197              	.LVL303:
7085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4198              		.loc 2 7085 76 view .LVU1246
 4199              	.LBE540:
 4200              	.LBE545:
3621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4201              		.loc 1 3621 9 is_stmt 1 view .LVU1247
 4202              	.LBB546:
6767:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4203              		.loc 2 6767 26 view .LVU1248
 4204              	.LBB543:
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4205              		.loc 2 6769 3 view .LVU1249
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4206              		.loc 2 6769 12 is_stmt 0 view .LVU1250
 4207 00b4 9A68     		ldr	r2, [r3, #8]
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4208              		.loc 2 6769 70 view .LVU1251
 4209 00b6 9207     		lsls	r2, r2, #30
 4210 00b8 13D5     		bpl	.L459
 4211              	.LVL304:
 4212              	.L430:
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4213              		.loc 2 6769 70 view .LVU1252
 4214              	.LBE543:
ARM GAS  /tmp/cc6JDs4t.s 			page 322


 4215              	.LBE546:
3636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 4216              		.loc 1 3636 9 is_stmt 1 view .LVU1253
3637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Case ADC_REGULAR_GROUP only*/
 4217              		.loc 1 3637 9 view .LVU1254
3636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 4218              		.loc 1 3636 37 is_stmt 0 view .LVU1255
 4219 00ba 0825     		movs	r5, #8
3637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Case ADC_REGULAR_GROUP only*/
 4220              		.loc 1 3637 9 view .LVU1256
 4221 00bc DFE7     		b	.L420
 4222              	.LVL305:
 4223              	.L458:
3624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4224              		.loc 1 3624 11 is_stmt 1 view .LVU1257
 4225              	.LBB547:
 4226              	.LBI547:
7067:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4227              		.loc 2 7067 22 view .LVU1258
 4228              	.LBB548:
7072:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4229              		.loc 2 7072 3 view .LVU1259
 4230 00be 9868     		ldr	r0, [r3, #8]
 4231 00c0 0B4A     		ldr	r2, .L460
 4232 00c2 0240     		ands	r2, r2, r0
 4233 00c4 42F02002 		orr	r2, r2, #32
 4234 00c8 9A60     		str	r2, [r3, #8]
 4235              	.LVL306:
7072:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4236              		.loc 2 7072 3 is_stmt 0 view .LVU1260
 4237              	.LBE548:
 4238              	.LBE547:
3630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4239              		.loc 1 3630 5 is_stmt 1 view .LVU1261
 4240 00ca BEE7     		b	.L431
 4241              	.LVL307:
 4242              	.L419:
3607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4243              		.loc 1 3607 9 view .LVU1262
 4244              	.LBB550:
6767:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4245              		.loc 2 6767 26 view .LVU1263
 4246              	.LBB533:
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4247              		.loc 2 6769 3 view .LVU1264
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4248              		.loc 2 6769 12 is_stmt 0 view .LVU1265
 4249 00cc 9A68     		ldr	r2, [r3, #8]
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4250              		.loc 2 6769 70 view .LVU1266
 4251 00ce 9607     		lsls	r6, r2, #30
 4252 00d0 D4D4     		bmi	.L423
 4253              	.LVL308:
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4254              		.loc 2 6769 70 view .LVU1267
 4255              	.LBE533:
 4256              	.LBE550:
ARM GAS  /tmp/cc6JDs4t.s 			page 323


3610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4257              		.loc 1 3610 11 is_stmt 1 view .LVU1268
 4258              	.LBB551:
6872:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4259              		.loc 2 6872 22 view .LVU1269
 4260              	.LBB536:
6877:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4261              		.loc 2 6877 3 view .LVU1270
 4262 00d2 9968     		ldr	r1, [r3, #8]
 4263              	.LBE536:
 4264              	.LBE551:
3640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 4265              		.loc 1 3640 37 is_stmt 0 view .LVU1271
 4266 00d4 0425     		movs	r5, #4
 4267              	.LBB552:
 4268              	.LBB537:
6877:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4269              		.loc 2 6877 3 view .LVU1272
 4270 00d6 064A     		ldr	r2, .L460
 4271 00d8 0A40     		ands	r2, r2, r1
 4272 00da 42F01002 		orr	r2, r2, #16
 4273 00de 9A60     		str	r2, [r3, #8]
 4274              	.LVL309:
6877:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4275              		.loc 2 6877 3 view .LVU1273
 4276              	.LBE537:
 4277              	.LBE552:
3616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4278              		.loc 1 3616 5 is_stmt 1 view .LVU1274
 4279 00e0 CDE7     		b	.L420
 4280              	.LVL310:
 4281              	.L459:
3624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4282              		.loc 1 3624 11 view .LVU1275
 4283              	.LBB553:
7067:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4284              		.loc 2 7067 22 view .LVU1276
 4285              	.LBB549:
7072:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4286              		.loc 2 7072 3 view .LVU1277
 4287 00e2 9968     		ldr	r1, [r3, #8]
 4288              	.LVL311:
7072:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4289              		.loc 2 7072 3 is_stmt 0 view .LVU1278
 4290 00e4 024A     		ldr	r2, .L460
 4291 00e6 0A40     		ands	r2, r2, r1
 4292 00e8 42F02002 		orr	r2, r2, #32
 4293 00ec 9A60     		str	r2, [r3, #8]
 4294              	.LVL312:
7072:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4295              		.loc 2 7072 3 view .LVU1279
 4296              	.LBE549:
 4297              	.LBE553:
3630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4298              		.loc 1 3630 5 is_stmt 1 view .LVU1280
 4299 00ee E4E7     		b	.L430
 4300              	.L461:
ARM GAS  /tmp/cc6JDs4t.s 			page 324


 4301              		.align	2
 4302              	.L460:
 4303 00f0 C0FFFF7F 		.word	2147483584
 4304 00f4 00DC0C00 		.word	842752
 4305              		.cfi_endproc
 4306              	.LFE353:
 4308              		.section	.text.ADC_Enable,"ax",%progbits
 4309              		.align	1
 4310              		.p2align 2,,3
 4311              		.global	ADC_Enable
 4312              		.syntax unified
 4313              		.thumb
 4314              		.thumb_func
 4315              		.fpu fpv5-d16
 4317              	ADC_Enable:
 4318              	.LVL313:
 4319              	.LFB354:
3681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 4320              		.loc 1 3681 1 view -0
 4321              		.cfi_startproc
 4322              		@ args = 0, pretend = 0, frame = 0
 4323              		@ frame_needed = 0, uses_anonymous_args = 0
3682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4324              		.loc 1 3682 3 view .LVU1282
3688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4325              		.loc 1 3688 3 view .LVU1283
3688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4326              		.loc 1 3688 7 is_stmt 0 view .LVU1284
 4327 0000 0368     		ldr	r3, [r0]
 4328              	.LVL314:
 4329              	.LBB554:
 4330              	.LBI554:
6756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4331              		.loc 2 6756 26 is_stmt 1 view .LVU1285
 4332              	.LBB555:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4333              		.loc 2 6758 3 view .LVU1286
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4334              		.loc 2 6758 12 is_stmt 0 view .LVU1287
 4335 0002 9A68     		ldr	r2, [r3, #8]
 4336              	.LVL315:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4337              		.loc 2 6758 12 view .LVU1288
 4338              	.LBE555:
 4339              	.LBE554:
3688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4340              		.loc 1 3688 6 view .LVU1289
 4341 0004 D107     		lsls	r1, r2, #31
 4342 0006 01D5     		bpl	.L463
3749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4343              		.loc 1 3749 10 view .LVU1290
 4344 0008 0020     		movs	r0, #0
 4345              	.LVL316:
3750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4346              		.loc 1 3750 1 view .LVU1291
 4347 000a 7047     		bx	lr
 4348              	.LVL317:
ARM GAS  /tmp/cc6JDs4t.s 			page 325


 4349              	.L463:
 4350              	.LBB556:
3691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4351              		.loc 1 3691 5 is_stmt 1 view .LVU1292
3691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4352              		.loc 1 3691 24 is_stmt 0 view .LVU1293
 4353 000c 9968     		ldr	r1, [r3, #8]
3691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4354              		.loc 1 3691 29 view .LVU1294
 4355 000e 214A     		ldr	r2, .L486
3691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4356              		.loc 1 3691 8 view .LVU1295
 4357 0010 1142     		tst	r1, r2
 4358              	.LBE556:
3681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 4359              		.loc 1 3681 1 view .LVU1296
 4360 0012 70B5     		push	{r4, r5, r6, lr}
 4361              	.LCFI26:
 4362              		.cfi_def_cfa_offset 16
 4363              		.cfi_offset 4, -16
 4364              		.cfi_offset 5, -12
 4365              		.cfi_offset 6, -8
 4366              		.cfi_offset 14, -4
 4367 0014 0446     		mov	r4, r0
 4368              	.LBB573:
3691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4369              		.loc 1 3691 8 view .LVU1297
 4370 0016 08D0     		beq	.L465
 4371              	.LVL318:
 4372              	.L485:
3736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4373              		.loc 1 3736 13 is_stmt 1 view .LVU1298
 4374 0018 636D     		ldr	r3, [r4, #84]
3741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 4375              		.loc 1 3741 20 is_stmt 0 view .LVU1299
 4376 001a 0120     		movs	r0, #1
3736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4377              		.loc 1 3736 13 view .LVU1300
 4378 001c 43F01003 		orr	r3, r3, #16
 4379 0020 6365     		str	r3, [r4, #84]
3739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4380              		.loc 1 3739 13 is_stmt 1 view .LVU1301
 4381 0022 A36D     		ldr	r3, [r4, #88]
 4382 0024 0343     		orrs	r3, r3, r0
 4383 0026 A365     		str	r3, [r4, #88]
3741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 4384              		.loc 1 3741 13 view .LVU1302
 4385              	.LBE573:
3750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4386              		.loc 1 3750 1 is_stmt 0 view .LVU1303
 4387 0028 70BD     		pop	{r4, r5, r6, pc}
 4388              	.LVL319:
 4389              	.L465:
 4390              	.LBB574:
3703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4391              		.loc 1 3703 5 is_stmt 1 view .LVU1304
 4392              	.LBB557:
ARM GAS  /tmp/cc6JDs4t.s 			page 326


 4393              	.LBI557:
6717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4394              		.loc 2 6717 22 view .LVU1305
 4395              	.LBB558:
6722:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4396              		.loc 2 6722 3 view .LVU1306
 4397 002a 9968     		ldr	r1, [r3, #8]
 4398 002c 1A4A     		ldr	r2, .L486+4
 4399 002e 0A40     		ands	r2, r2, r1
 4400 0030 42F00102 		orr	r2, r2, #1
 4401 0034 9A60     		str	r2, [r3, #8]
 4402              	.LVL320:
6722:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4403              		.loc 2 6722 3 is_stmt 0 view .LVU1307
 4404              	.LBE558:
 4405              	.LBE557:
3706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4406              		.loc 1 3706 5 is_stmt 1 view .LVU1308
3706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4407              		.loc 1 3706 17 is_stmt 0 view .LVU1309
 4408 0036 FFF7FEFF 		bl	HAL_GetTick
 4409              	.LVL321:
3710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 4410              		.loc 1 3710 57 view .LVU1310
 4411 003a 2368     		ldr	r3, [r4]
 4412 003c 174A     		ldr	r2, .L486+8
3706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4413              		.loc 1 3706 17 view .LVU1311
 4414 003e 0546     		mov	r5, r0
 4415              	.LVL322:
3710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 4416              		.loc 1 3710 5 is_stmt 1 view .LVU1312
3710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 4417              		.loc 1 3710 37 is_stmt 0 view .LVU1313
 4418 0040 9342     		cmp	r3, r2
 4419 0042 1FD0     		beq	.L475
3710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 4420              		.loc 1 3710 57 view .LVU1314
 4421 0044 02F58072 		add	r2, r2, #256
3710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 4422              		.loc 1 3710 37 view .LVU1315
 4423 0048 9342     		cmp	r3, r2
 4424 004a 1BD0     		beq	.L475
 4425              	.LVL323:
 4426              	.LBB559:
 4427              	.LBI559:
6416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4428              		.loc 2 6416 26 is_stmt 1 view .LVU1316
 4429              	.LBB560:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4430              		.loc 2 6418 3 view .LVU1317
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4431              		.loc 2 6418 21 is_stmt 0 view .LVU1318
 4432 004c 144A     		ldr	r2, .L486+12
 4433 004e 9268     		ldr	r2, [r2, #8]
 4434              	.LVL324:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc6JDs4t.s 			page 327


 4435              		.loc 2 6418 21 view .LVU1319
 4436              	.LBE560:
 4437              	.LBE559:
3711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4438              		.loc 1 3711 5 is_stmt 1 view .LVU1320
 4439              	.L474:
3715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4440              		.loc 1 3715 13 view .LVU1321
3715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4441              		.loc 1 3715 14 is_stmt 0 view .LVU1322
 4442 0050 1A68     		ldr	r2, [r3]
3715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4443              		.loc 1 3715 13 view .LVU1323
 4444 0052 D607     		lsls	r6, r2, #31
 4445 0054 14D4     		bmi	.L468
 4446              	.LBB562:
 4447              	.LBB563:
6722:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4448              		.loc 2 6722 3 view .LVU1324
 4449 0056 104E     		ldr	r6, .L486+4
 4450              	.LVL325:
 4451              	.L473:
6722:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4452              		.loc 2 6722 3 view .LVU1325
 4453              	.LBE563:
 4454              	.LBE562:
3725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4455              		.loc 1 3725 9 is_stmt 1 view .LVU1326
 4456              	.LBB566:
 4457              	.LBI566:
6756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4458              		.loc 2 6756 26 view .LVU1327
 4459              	.LBB567:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4460              		.loc 2 6758 3 view .LVU1328
 4461              	.LBE567:
 4462              	.LBE566:
3727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4463              		.loc 1 3727 11 view .LVU1329
 4464              	.LBB569:
 4465              	.LBI562:
6717:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4466              		.loc 2 6717 22 view .LVU1330
 4467              	.LBB564:
6722:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4468              		.loc 2 6722 3 view .LVU1331
6722:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4469              		.loc 2 6722 3 is_stmt 0 view .LVU1332
 4470              	.LBE564:
 4471              	.LBE569:
3730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4472              		.loc 1 3730 9 is_stmt 1 view .LVU1333
 4473              	.LBB570:
 4474              	.LBB568:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4475              		.loc 2 6758 12 is_stmt 0 view .LVU1334
 4476 0058 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/cc6JDs4t.s 			page 328


 4477              	.LVL326:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4478              		.loc 2 6758 12 view .LVU1335
 4479              	.LBE568:
 4480              	.LBE570:
3725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4481              		.loc 1 3725 12 view .LVU1336
 4482 005a D007     		lsls	r0, r2, #31
 4483 005c 04D4     		bmi	.L470
 4484              	.LBB571:
 4485              	.LBB565:
6722:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4486              		.loc 2 6722 3 view .LVU1337
 4487 005e 9A68     		ldr	r2, [r3, #8]
 4488 0060 3240     		ands	r2, r2, r6
 4489 0062 42F00102 		orr	r2, r2, #1
 4490 0066 9A60     		str	r2, [r3, #8]
 4491              	.L470:
 4492              	.LBE565:
 4493              	.LBE571:
3730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4494              		.loc 1 3730 14 view .LVU1338
 4495 0068 FFF7FEFF 		bl	HAL_GetTick
 4496              	.LVL327:
3733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 4497              		.loc 1 3733 11 is_stmt 1 view .LVU1339
3715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4498              		.loc 1 3715 13 view .LVU1340
3730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4499              		.loc 1 3730 28 is_stmt 0 view .LVU1341
 4500 006c 431B     		subs	r3, r0, r5
3730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4501              		.loc 1 3730 12 view .LVU1342
 4502 006e 022B     		cmp	r3, #2
3733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 4503              		.loc 1 3733 15 view .LVU1343
 4504 0070 2368     		ldr	r3, [r4]
3730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4505              		.loc 1 3730 12 view .LVU1344
 4506 0072 02D9     		bls	.L472
3733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 4507              		.loc 1 3733 15 view .LVU1345
 4508 0074 1A68     		ldr	r2, [r3]
3733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 4509              		.loc 1 3733 14 view .LVU1346
 4510 0076 D107     		lsls	r1, r2, #31
 4511 0078 CED5     		bpl	.L485
 4512              	.L472:
3715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4513              		.loc 1 3715 14 view .LVU1347
 4514 007a 1A68     		ldr	r2, [r3]
3715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4515              		.loc 1 3715 13 view .LVU1348
 4516 007c D207     		lsls	r2, r2, #31
 4517 007e EBD5     		bpl	.L473
 4518              	.L468:
3715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
ARM GAS  /tmp/cc6JDs4t.s 			page 329


 4519              		.loc 1 3715 13 view .LVU1349
 4520              	.LBE574:
3749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4521              		.loc 1 3749 10 view .LVU1350
 4522 0080 0020     		movs	r0, #0
3750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4523              		.loc 1 3750 1 view .LVU1351
 4524 0082 70BD     		pop	{r4, r5, r6, pc}
 4525              	.LVL328:
 4526              	.L475:
 4527              	.LBB575:
 4528              	.LBB572:
6416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4529              		.loc 2 6416 26 is_stmt 1 discriminator 4 view .LVU1352
 4530              	.LBB561:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4531              		.loc 2 6418 3 discriminator 4 view .LVU1353
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4532              		.loc 2 6418 21 is_stmt 0 discriminator 4 view .LVU1354
 4533 0084 074A     		ldr	r2, .L486+16
 4534 0086 9268     		ldr	r2, [r2, #8]
 4535              	.LVL329:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4536              		.loc 2 6418 21 discriminator 4 view .LVU1355
 4537              	.LBE561:
 4538              	.LBE572:
3711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4539              		.loc 1 3711 5 is_stmt 1 discriminator 4 view .LVU1356
3712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
 4540              		.loc 1 3712 9 is_stmt 0 discriminator 4 view .LVU1357
 4541 0088 D206     		lsls	r2, r2, #27
 4542              	.LVL330:
3712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
 4543              		.loc 1 3712 9 discriminator 4 view .LVU1358
 4544 008a E1D0     		beq	.L474
3711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4545              		.loc 1 3711 10 discriminator 4 view .LVU1359
 4546 008c 064A     		ldr	r2, .L486+20
3712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
 4547              		.loc 1 3712 9 discriminator 4 view .LVU1360
 4548 008e 9342     		cmp	r3, r2
 4549 0090 DED1     		bne	.L474
 4550 0092 F5E7     		b	.L468
 4551              	.L487:
 4552              		.align	2
 4553              	.L486:
 4554 0094 3F000080 		.word	-2147483585
 4555 0098 C0FFFF7F 		.word	2147483584
 4556 009c 00200240 		.word	1073881088
 4557 00a0 00630258 		.word	1476551424
 4558 00a4 00230240 		.word	1073881856
 4559 00a8 00210240 		.word	1073881344
 4560              	.LBE575:
 4561              		.cfi_endproc
 4562              	.LFE354:
 4564              		.section	.text.HAL_ADC_Start,"ax",%progbits
 4565              		.align	1
ARM GAS  /tmp/cc6JDs4t.s 			page 330


 4566              		.p2align 2,,3
 4567              		.global	HAL_ADC_Start
 4568              		.syntax unified
 4569              		.thumb
 4570              		.thumb_func
 4571              		.fpu fpv5-d16
 4573              	HAL_ADC_Start:
 4574              	.LVL331:
 4575              	.LFB335:
1407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4576              		.loc 1 1407 1 is_stmt 1 view -0
 4577              		.cfi_startproc
 4578              		@ args = 0, pretend = 0, frame = 0
 4579              		@ frame_needed = 0, uses_anonymous_args = 0
1408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
 4580              		.loc 1 1408 3 view .LVU1362
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 4581              		.loc 1 1409 3 view .LVU1363
1410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4582              		.loc 1 1410 3 view .LVU1364
1410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4583              		.loc 1 1410 55 is_stmt 0 view .LVU1365
 4584 0000 394A     		ldr	r2, .L516
 4585 0002 0368     		ldr	r3, [r0]
1410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4586              		.loc 1 1410 35 view .LVU1366
 4587 0004 9342     		cmp	r3, r2
1407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4588              		.loc 1 1407 1 view .LVU1367
 4589 0006 70B5     		push	{r4, r5, r6, lr}
 4590              	.LCFI27:
 4591              		.cfi_def_cfa_offset 16
 4592              		.cfi_offset 4, -16
 4593              		.cfi_offset 5, -12
 4594              		.cfi_offset 6, -8
 4595              		.cfi_offset 14, -4
1407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4596              		.loc 1 1407 1 view .LVU1368
 4597 0008 0446     		mov	r4, r0
1410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4598              		.loc 1 1410 35 view .LVU1369
 4599 000a 45D0     		beq	.L505
1410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4600              		.loc 1 1410 55 view .LVU1370
 4601 000c 02F58072 		add	r2, r2, #256
1410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4602              		.loc 1 1410 35 view .LVU1371
 4603 0010 9342     		cmp	r3, r2
 4604 0012 41D0     		beq	.L505
 4605 0014 354A     		ldr	r2, .L516+4
 4606              	.LVL332:
 4607              	.LBB576:
 4608              	.LBI576:
6416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4609              		.loc 2 6416 26 is_stmt 1 view .LVU1372
 4610              	.LBB577:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc6JDs4t.s 			page 331


 4611              		.loc 2 6418 3 view .LVU1373
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4612              		.loc 2 6418 21 is_stmt 0 view .LVU1374
 4613 0016 9668     		ldr	r6, [r2, #8]
 4614              	.LVL333:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4615              		.loc 2 6418 21 view .LVU1375
 4616              	.LBE577:
 4617              	.LBE576:
1413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4618              		.loc 1 1413 3 is_stmt 1 view .LVU1376
1416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4619              		.loc 1 1416 3 view .LVU1377
 4620              	.LBB580:
 4621              	.LBI580:
6888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4622              		.loc 2 6888 26 view .LVU1378
 4623              	.LBB581:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4624              		.loc 2 6890 3 view .LVU1379
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4625              		.loc 2 6890 12 is_stmt 0 view .LVU1380
 4626 0018 9D68     		ldr	r5, [r3, #8]
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4627              		.loc 2 6890 74 view .LVU1381
 4628 001a 15F00405 		ands	r5, r5, #4
 4629 001e 41D1     		bne	.L503
 4630              	.LVL334:
 4631              	.L515:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4632              		.loc 2 6890 74 view .LVU1382
 4633              	.LBE581:
 4634              	.LBE580:
1419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4635              		.loc 1 1419 5 is_stmt 1 view .LVU1383
1419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4636              		.loc 1 1419 5 view .LVU1384
 4637 0020 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 4638 0024 012B     		cmp	r3, #1
 4639 0026 3DD0     		beq	.L503
1419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4640              		.loc 1 1419 5 discriminator 2 view .LVU1385
 4641 0028 0123     		movs	r3, #1
1422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4642              		.loc 1 1422 22 is_stmt 0 discriminator 2 view .LVU1386
 4643 002a 2046     		mov	r0, r4
 4644              	.LVL335:
1419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4645              		.loc 1 1419 5 discriminator 2 view .LVU1387
 4646 002c 84F85030 		strb	r3, [r4, #80]
1419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4647              		.loc 1 1419 5 is_stmt 1 discriminator 2 view .LVU1388
1422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4648              		.loc 1 1422 5 discriminator 2 view .LVU1389
1422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4649              		.loc 1 1422 22 is_stmt 0 discriminator 2 view .LVU1390
 4650 0030 FFF7FEFF 		bl	ADC_Enable
ARM GAS  /tmp/cc6JDs4t.s 			page 332


 4651              	.LVL336:
1425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4652              		.loc 1 1425 5 is_stmt 1 discriminator 2 view .LVU1391
1425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4653              		.loc 1 1425 8 is_stmt 0 discriminator 2 view .LVU1392
 4654 0034 0028     		cmp	r0, #0
 4655 0036 37D1     		bne	.L492
1430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4656              		.loc 1 1430 7 view .LVU1393
 4657 0038 616D     		ldr	r1, [r4, #84]
 4658              	.LBB583:
 4659              	.LBB578:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4660              		.loc 2 6418 10 view .LVU1394
 4661 003a 06F01F06 		and	r6, r6, #31
 4662              	.LBE578:
 4663              	.LBE583:
1430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4664              		.loc 1 1430 7 is_stmt 1 view .LVU1395
 4665 003e 2C4A     		ldr	r2, .L516+8
1437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4666              		.loc 1 1437 12 is_stmt 0 view .LVU1396
 4667 0040 2368     		ldr	r3, [r4]
1430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4668              		.loc 1 1430 7 view .LVU1397
 4669 0042 0A40     		ands	r2, r2, r1
1437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4670              		.loc 1 1437 12 view .LVU1398
 4671 0044 2B49     		ldr	r1, .L516+12
1430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4672              		.loc 1 1430 7 view .LVU1399
 4673 0046 42F48072 		orr	r2, r2, #256
1437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4674              		.loc 1 1437 12 view .LVU1400
 4675 004a 8B42     		cmp	r3, r1
1430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4676              		.loc 1 1430 7 view .LVU1401
 4677 004c 6265     		str	r2, [r4, #84]
1437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4678              		.loc 1 1437 7 is_stmt 1 view .LVU1402
1437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4679              		.loc 1 1437 12 is_stmt 0 view .LVU1403
 4680 004e 44D0     		beq	.L493
 4681 0050 1946     		mov	r1, r3
 4682              	.L499:
1441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4683              		.loc 1 1441 9 is_stmt 1 view .LVU1404
 4684 0052 626D     		ldr	r2, [r4, #84]
 4685 0054 22F48012 		bic	r2, r2, #1048576
 4686 0058 6265     		str	r2, [r4, #84]
 4687              	.L500:
1446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4688              		.loc 1 1446 7 view .LVU1405
1446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4689              		.loc 1 1446 11 is_stmt 0 view .LVU1406
 4690 005a 626D     		ldr	r2, [r4, #84]
1446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
ARM GAS  /tmp/cc6JDs4t.s 			page 333


 4691              		.loc 1 1446 10 view .LVU1407
 4692 005c 12F48052 		ands	r2, r2, #4096
 4693 0060 3FD0     		beq	.L494
1449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4694              		.loc 1 1449 9 is_stmt 1 view .LVU1408
 4695 0062 A26D     		ldr	r2, [r4, #88]
 4696 0064 22F00602 		bic	r2, r2, #6
 4697 0068 A265     		str	r2, [r4, #88]
 4698              	.L495:
1459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4699              		.loc 1 1459 7 view .LVU1409
 4700 006a 1C25     		movs	r5, #28
1464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4701              		.loc 1 1464 7 is_stmt 0 view .LVU1410
 4702 006c 0022     		movs	r2, #0
1474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4703              		.loc 1 1474 10 view .LVU1411
 4704 006e 8B42     		cmp	r3, r1
1459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4705              		.loc 1 1459 7 view .LVU1412
 4706 0070 1D60     		str	r5, [r3]
1464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4707              		.loc 1 1464 7 is_stmt 1 view .LVU1413
1464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4708              		.loc 1 1464 7 view .LVU1414
 4709 0072 84F85020 		strb	r2, [r4, #80]
1464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4710              		.loc 1 1464 7 view .LVU1415
1474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4711              		.loc 1 1474 7 view .LVU1416
1474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4712              		.loc 1 1474 10 is_stmt 0 view .LVU1417
 4713 0076 20D0     		beq	.L496
1475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 4714              		.loc 1 1475 36 view .LVU1418
 4715 0078 092E     		cmp	r6, #9
 4716 007a 18D9     		bls	.L514
 4717              	.L497:
1492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
 4718              		.loc 1 1492 9 is_stmt 1 view .LVU1419
 4719 007c 636D     		ldr	r3, [r4, #84]
 4720 007e 43F48013 		orr	r3, r3, #1048576
 4721 0082 6365     		str	r3, [r4, #84]
1495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
 4722              		.loc 1 1495 9 view .LVU1420
 4723              	.LVL337:
1496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4724              		.loc 1 1496 9 view .LVU1421
1496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4725              		.loc 1 1496 13 is_stmt 0 view .LVU1422
 4726 0084 CB68     		ldr	r3, [r1, #12]
1496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4727              		.loc 1 1496 12 view .LVU1423
 4728 0086 9B01     		lsls	r3, r3, #6
 4729 0088 05D5     		bpl	.L506
1498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4730              		.loc 1 1498 11 is_stmt 1 view .LVU1424
ARM GAS  /tmp/cc6JDs4t.s 			page 334


 4731 008a 636D     		ldr	r3, [r4, #84]
 4732 008c 23F44053 		bic	r3, r3, #12288
 4733 0090 43F48053 		orr	r3, r3, #4096
 4734 0094 6365     		str	r3, [r4, #84]
 4735              	.L506:
1516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4736              		.loc 1 1516 1 is_stmt 0 view .LVU1425
 4737 0096 70BD     		pop	{r4, r5, r6, pc}
 4738              	.LVL338:
 4739              	.L505:
1410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4740              		.loc 1 1410 35 view .LVU1426
 4741 0098 174A     		ldr	r2, .L516+16
 4742              	.LVL339:
 4743              	.LBB584:
6416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4744              		.loc 2 6416 26 is_stmt 1 view .LVU1427
 4745              	.LBB579:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4746              		.loc 2 6418 3 view .LVU1428
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4747              		.loc 2 6418 21 is_stmt 0 view .LVU1429
 4748 009a 9668     		ldr	r6, [r2, #8]
 4749              	.LVL340:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4750              		.loc 2 6418 21 view .LVU1430
 4751              	.LBE579:
 4752              	.LBE584:
1413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4753              		.loc 1 1413 3 is_stmt 1 view .LVU1431
1416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4754              		.loc 1 1416 3 view .LVU1432
 4755              	.LBB585:
6888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4756              		.loc 2 6888 26 view .LVU1433
 4757              	.LBB582:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4758              		.loc 2 6890 3 view .LVU1434
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4759              		.loc 2 6890 12 is_stmt 0 view .LVU1435
 4760 009c 9D68     		ldr	r5, [r3, #8]
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4761              		.loc 2 6890 74 view .LVU1436
 4762 009e 15F00405 		ands	r5, r5, #4
 4763 00a2 BDD0     		beq	.L515
 4764              	.LVL341:
 4765              	.L503:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4766              		.loc 2 6890 74 view .LVU1437
 4767              	.LBE582:
 4768              	.LBE585:
1511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 4769              		.loc 1 1511 20 view .LVU1438
 4770 00a4 0220     		movs	r0, #2
 4771              	.LVL342:
1516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4772              		.loc 1 1516 1 view .LVU1439
ARM GAS  /tmp/cc6JDs4t.s 			page 335


 4773 00a6 70BD     		pop	{r4, r5, r6, pc}
 4774              	.LVL343:
 4775              	.L492:
1506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4776              		.loc 1 1506 7 is_stmt 1 discriminator 1 view .LVU1440
1506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4777              		.loc 1 1506 7 discriminator 1 view .LVU1441
 4778 00a8 84F85050 		strb	r5, [r4, #80]
1516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4779              		.loc 1 1516 1 is_stmt 0 discriminator 1 view .LVU1442
 4780 00ac 70BD     		pop	{r4, r5, r6, pc}
 4781              	.LVL344:
 4782              	.L514:
1475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 4783              		.loc 1 1475 36 view .LVU1443
 4784 00ae 40F22122 		movw	r2, #545
 4785 00b2 22FA06F6 		lsr	r6, r2, r6
1477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
 4786              		.loc 1 1477 11 view .LVU1444
 4787 00b6 F507     		lsls	r5, r6, #31
 4788 00b8 E0D5     		bpl	.L497
 4789              	.L496:
1481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4790              		.loc 1 1481 9 is_stmt 1 view .LVU1445
1481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4791              		.loc 1 1481 13 is_stmt 0 view .LVU1446
 4792 00ba DA68     		ldr	r2, [r3, #12]
1481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4793              		.loc 1 1481 12 view .LVU1447
 4794 00bc 9201     		lsls	r2, r2, #6
 4795 00be 05D5     		bpl	.L498
1483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4796              		.loc 1 1483 11 is_stmt 1 view .LVU1448
 4797 00c0 626D     		ldr	r2, [r4, #84]
 4798 00c2 22F44052 		bic	r2, r2, #12288
 4799 00c6 42F48052 		orr	r2, r2, #4096
 4800 00ca 6265     		str	r2, [r4, #84]
 4801              	.L498:
1487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4802              		.loc 1 1487 9 view .LVU1449
 4803              	.LVL345:
 4804              	.LBB586:
 4805              	.LBI586:
6852:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4806              		.loc 2 6852 22 view .LVU1450
 4807              	.LBB587:
6857:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4808              		.loc 2 6857 3 view .LVU1451
 4809 00cc 9968     		ldr	r1, [r3, #8]
 4810 00ce 0B4A     		ldr	r2, .L516+20
 4811 00d0 0A40     		ands	r2, r2, r1
 4812 00d2 42F00402 		orr	r2, r2, #4
 4813 00d6 9A60     		str	r2, [r3, #8]
 4814              	.LBE587:
 4815              	.LBE586:
1516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4816              		.loc 1 1516 1 is_stmt 0 view .LVU1452
ARM GAS  /tmp/cc6JDs4t.s 			page 336


 4817 00d8 70BD     		pop	{r4, r5, r6, pc}
 4818              	.LVL346:
 4819              	.L493:
1437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4820              		.loc 1 1437 12 view .LVU1453
 4821 00da 0349     		ldr	r1, .L516
1438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
 4822              		.loc 1 1438 11 view .LVU1454
 4823 00dc 002E     		cmp	r6, #0
 4824 00de B8D0     		beq	.L499
 4825 00e0 BBE7     		b	.L500
 4826              	.L494:
1454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4827              		.loc 1 1454 9 is_stmt 1 view .LVU1455
 4828 00e2 A265     		str	r2, [r4, #88]
 4829 00e4 C1E7     		b	.L495
 4830              	.L517:
 4831 00e6 00BF     		.align	2
 4832              	.L516:
 4833 00e8 00200240 		.word	1073881088
 4834 00ec 00630258 		.word	1476551424
 4835 00f0 FEF0FFFF 		.word	-3842
 4836 00f4 00210240 		.word	1073881344
 4837 00f8 00230240 		.word	1073881856
 4838 00fc C0FFFF7F 		.word	2147483584
 4839              		.cfi_endproc
 4840              	.LFE335:
 4842              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 4843              		.align	1
 4844              		.p2align 2,,3
 4845              		.global	HAL_ADC_Start_IT
 4846              		.syntax unified
 4847              		.thumb
 4848              		.thumb_func
 4849              		.fpu fpv5-d16
 4851              	HAL_ADC_Start_IT:
 4852              	.LVL347:
 4853              	.LFB339:
1894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4854              		.loc 1 1894 1 view -0
 4855              		.cfi_startproc
 4856              		@ args = 0, pretend = 0, frame = 0
 4857              		@ frame_needed = 0, uses_anonymous_args = 0
1895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
 4858              		.loc 1 1895 3 view .LVU1457
1896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 4859              		.loc 1 1896 3 view .LVU1458
1897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4860              		.loc 1 1897 3 view .LVU1459
1897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4861              		.loc 1 1897 55 is_stmt 0 view .LVU1460
 4862 0000 544A     		ldr	r2, .L553
 4863 0002 0368     		ldr	r3, [r0]
1897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4864              		.loc 1 1897 35 view .LVU1461
 4865 0004 9342     		cmp	r3, r2
1894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
ARM GAS  /tmp/cc6JDs4t.s 			page 337


 4866              		.loc 1 1894 1 view .LVU1462
 4867 0006 70B5     		push	{r4, r5, r6, lr}
 4868              	.LCFI28:
 4869              		.cfi_def_cfa_offset 16
 4870              		.cfi_offset 4, -16
 4871              		.cfi_offset 5, -12
 4872              		.cfi_offset 6, -8
 4873              		.cfi_offset 14, -4
1894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4874              		.loc 1 1894 1 view .LVU1463
 4875 0008 0446     		mov	r4, r0
1897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4876              		.loc 1 1897 35 view .LVU1464
 4877 000a 62D0     		beq	.L540
1897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4878              		.loc 1 1897 55 view .LVU1465
 4879 000c 02F58072 		add	r2, r2, #256
1897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4880              		.loc 1 1897 35 view .LVU1466
 4881 0010 9342     		cmp	r3, r2
 4882 0012 5ED0     		beq	.L540
 4883 0014 504A     		ldr	r2, .L553+4
 4884              	.LVL348:
 4885              	.LBB588:
 4886              	.LBI588:
6416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4887              		.loc 2 6416 26 is_stmt 1 view .LVU1467
 4888              	.LBB589:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4889              		.loc 2 6418 3 view .LVU1468
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4890              		.loc 2 6418 21 is_stmt 0 view .LVU1469
 4891 0016 9668     		ldr	r6, [r2, #8]
 4892              	.LVL349:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4893              		.loc 2 6418 21 view .LVU1470
 4894              	.LBE589:
 4895              	.LBE588:
1900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4896              		.loc 1 1900 3 is_stmt 1 view .LVU1471
1903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4897              		.loc 1 1903 3 view .LVU1472
 4898              	.LBB592:
 4899              	.LBI592:
6888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4900              		.loc 2 6888 26 view .LVU1473
 4901              	.LBB593:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4902              		.loc 2 6890 3 view .LVU1474
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4903              		.loc 2 6890 12 is_stmt 0 view .LVU1475
 4904 0018 9D68     		ldr	r5, [r3, #8]
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4905              		.loc 2 6890 74 view .LVU1476
 4906 001a 15F00405 		ands	r5, r5, #4
 4907 001e 5ED1     		bne	.L538
 4908              	.LVL350:
ARM GAS  /tmp/cc6JDs4t.s 			page 338


 4909              	.L551:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4910              		.loc 2 6890 74 view .LVU1477
 4911              	.LBE593:
 4912              	.LBE592:
1906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4913              		.loc 1 1906 5 is_stmt 1 view .LVU1478
1906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4914              		.loc 1 1906 5 view .LVU1479
 4915 0020 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 4916 0024 012B     		cmp	r3, #1
 4917 0026 5AD0     		beq	.L538
1906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4918              		.loc 1 1906 5 discriminator 2 view .LVU1480
 4919 0028 0123     		movs	r3, #1
1909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4920              		.loc 1 1909 22 is_stmt 0 discriminator 2 view .LVU1481
 4921 002a 2046     		mov	r0, r4
 4922              	.LVL351:
1906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4923              		.loc 1 1906 5 discriminator 2 view .LVU1482
 4924 002c 84F85030 		strb	r3, [r4, #80]
1906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4925              		.loc 1 1906 5 is_stmt 1 discriminator 2 view .LVU1483
1909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4926              		.loc 1 1909 5 discriminator 2 view .LVU1484
1909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4927              		.loc 1 1909 22 is_stmt 0 discriminator 2 view .LVU1485
 4928 0030 FFF7FEFF 		bl	ADC_Enable
 4929              	.LVL352:
1912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4930              		.loc 1 1912 5 is_stmt 1 discriminator 2 view .LVU1486
1912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4931              		.loc 1 1912 8 is_stmt 0 discriminator 2 view .LVU1487
 4932 0034 0028     		cmp	r0, #0
 4933 0036 54D1     		bne	.L522
1917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4934              		.loc 1 1917 7 view .LVU1488
 4935 0038 616D     		ldr	r1, [r4, #84]
 4936              	.LBB595:
 4937              	.LBB590:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4938              		.loc 2 6418 10 view .LVU1489
 4939 003a 06F01F06 		and	r6, r6, #31
 4940              	.LBE590:
 4941              	.LBE595:
1917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4942              		.loc 1 1917 7 is_stmt 1 view .LVU1490
 4943 003e 474A     		ldr	r2, .L553+8
1924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4944              		.loc 1 1924 12 is_stmt 0 view .LVU1491
 4945 0040 2368     		ldr	r3, [r4]
1917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4946              		.loc 1 1917 7 view .LVU1492
 4947 0042 0A40     		ands	r2, r2, r1
1924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4948              		.loc 1 1924 12 view .LVU1493
ARM GAS  /tmp/cc6JDs4t.s 			page 339


 4949 0044 4649     		ldr	r1, .L553+12
1917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4950              		.loc 1 1917 7 view .LVU1494
 4951 0046 42F48072 		orr	r2, r2, #256
1924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4952              		.loc 1 1924 12 view .LVU1495
 4953 004a 8B42     		cmp	r3, r1
1917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4954              		.loc 1 1917 7 view .LVU1496
 4955 004c 6265     		str	r2, [r4, #84]
1924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4956              		.loc 1 1924 7 is_stmt 1 view .LVU1497
1924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4957              		.loc 1 1924 12 is_stmt 0 view .LVU1498
 4958 004e 6BD0     		beq	.L523
 4959 0050 1946     		mov	r1, r3
 4960              	.L534:
1928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4961              		.loc 1 1928 9 is_stmt 1 view .LVU1499
 4962 0052 626D     		ldr	r2, [r4, #84]
 4963 0054 22F48012 		bic	r2, r2, #1048576
 4964 0058 6265     		str	r2, [r4, #84]
 4965              	.L535:
1933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4966              		.loc 1 1933 7 view .LVU1500
1933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4967              		.loc 1 1933 16 is_stmt 0 view .LVU1501
 4968 005a 626D     		ldr	r2, [r4, #84]
1933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4969              		.loc 1 1933 10 view .LVU1502
 4970 005c 12F48052 		ands	r2, r2, #4096
 4971 0060 66D0     		beq	.L524
1936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4972              		.loc 1 1936 9 is_stmt 1 view .LVU1503
 4973 0062 A26D     		ldr	r2, [r4, #88]
 4974 0064 22F00602 		bic	r2, r2, #6
 4975 0068 A265     		str	r2, [r4, #88]
 4976              	.L525:
1946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4977              		.loc 1 1946 7 view .LVU1504
 4978 006a 1C25     		movs	r5, #28
1951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4979              		.loc 1 1951 7 is_stmt 0 view .LVU1505
 4980 006c 0022     		movs	r2, #0
1946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4981              		.loc 1 1946 7 view .LVU1506
 4982 006e 1D60     		str	r5, [r3]
1951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4983              		.loc 1 1951 7 is_stmt 1 view .LVU1507
1951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4984              		.loc 1 1951 7 view .LVU1508
 4985 0070 84F85020 		strb	r2, [r4, #80]
1951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4986              		.loc 1 1951 7 view .LVU1509
1954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4987              		.loc 1 1954 7 view .LVU1510
 4988 0074 5A68     		ldr	r2, [r3, #4]
ARM GAS  /tmp/cc6JDs4t.s 			page 340


1957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4989              		.loc 1 1957 25 is_stmt 0 view .LVU1511
 4990 0076 2569     		ldr	r5, [r4, #16]
1954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4991              		.loc 1 1954 7 view .LVU1512
 4992 0078 22F01C02 		bic	r2, r2, #28
1957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4993              		.loc 1 1957 7 view .LVU1513
 4994 007c 082D     		cmp	r5, #8
1954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4995              		.loc 1 1954 7 view .LVU1514
 4996 007e 5A60     		str	r2, [r3, #4]
1957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4997              		.loc 1 1957 7 is_stmt 1 view .LVU1515
1960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 4998              		.loc 1 1960 11 view .LVU1516
1964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 4999              		.loc 1 1964 11 is_stmt 0 view .LVU1517
 5000 0080 5A68     		ldr	r2, [r3, #4]
1960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 5001              		.loc 1 1960 11 view .LVU1518
 5002 0082 0CBF     		ite	eq
 5003 0084 42F00802 		orreq	r2, r2, #8
1964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 5004              		.loc 1 1964 11 is_stmt 1 view .LVU1519
 5005 0088 42F00402 		orrne	r2, r2, #4
 5006 008c 5A60     		str	r2, [r3, #4]
1965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5007              		.loc 1 1965 11 view .LVU1520
1972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5008              		.loc 1 1972 7 view .LVU1521
1972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5009              		.loc 1 1972 10 is_stmt 0 view .LVU1522
 5010 008e 226B     		ldr	r2, [r4, #48]
 5011 0090 1AB9     		cbnz	r2, .L528
1974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5012              		.loc 1 1974 9 is_stmt 1 view .LVU1523
 5013 0092 5A68     		ldr	r2, [r3, #4]
 5014 0094 42F01002 		orr	r2, r2, #16
 5015 0098 5A60     		str	r2, [r3, #4]
 5016              	.L528:
1985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5017              		.loc 1 1985 7 view .LVU1524
1985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5018              		.loc 1 1985 10 is_stmt 0 view .LVU1525
 5019 009a 8B42     		cmp	r3, r1
 5020 009c 2AD0     		beq	.L529
1986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 5021              		.loc 1 1986 36 view .LVU1526
 5022 009e 092E     		cmp	r6, #9
 5023 00a0 22D9     		bls	.L549
 5024              	.L530:
2020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
 5025              		.loc 1 2020 9 is_stmt 1 view .LVU1527
 5026 00a2 626D     		ldr	r2, [r4, #84]
 5027 00a4 42F48012 		orr	r2, r2, #1048576
 5028 00a8 6265     		str	r2, [r4, #84]
ARM GAS  /tmp/cc6JDs4t.s 			page 341


2023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
 5029              		.loc 1 2023 9 view .LVU1528
 5030              	.LVL353:
2024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5031              		.loc 1 2024 9 view .LVU1529
2024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5032              		.loc 1 2024 13 is_stmt 0 view .LVU1530
 5033 00aa CA68     		ldr	r2, [r1, #12]
2024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5034              		.loc 1 2024 12 view .LVU1531
 5035 00ac 9201     		lsls	r2, r2, #6
 5036 00ae 0FD5     		bpl	.L541
2028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
 5037              		.loc 1 2028 11 is_stmt 1 view .LVU1532
 5038 00b0 626D     		ldr	r2, [r4, #84]
2030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 5039              		.loc 1 2030 11 is_stmt 0 view .LVU1533
 5040 00b2 082D     		cmp	r5, #8
2028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
 5041              		.loc 1 2028 11 view .LVU1534
 5042 00b4 22F44052 		bic	r2, r2, #12288
 5043 00b8 42F48052 		orr	r2, r2, #4096
 5044 00bc 6265     		str	r2, [r4, #84]
2030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 5045              		.loc 1 2030 11 is_stmt 1 view .LVU1535
2038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 5046              		.loc 1 2038 15 is_stmt 0 view .LVU1536
 5047 00be 5A68     		ldr	r2, [r3, #4]
2030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 5048              		.loc 1 2030 11 view .LVU1537
 5049 00c0 40D0     		beq	.L550
2038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 5050              		.loc 1 2038 15 is_stmt 1 view .LVU1538
 5051 00c2 22F04002 		bic	r2, r2, #64
 5052 00c6 5A60     		str	r2, [r3, #4]
2039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
 5053              		.loc 1 2039 15 view .LVU1539
 5054 00c8 5A68     		ldr	r2, [r3, #4]
 5055 00ca 42F02002 		orr	r2, r2, #32
 5056 00ce 5A60     		str	r2, [r3, #4]
2040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 5057              		.loc 1 2040 15 view .LVU1540
 5058              	.L541:
2059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5059              		.loc 1 2059 1 is_stmt 0 view .LVU1541
 5060 00d0 70BD     		pop	{r4, r5, r6, pc}
 5061              	.LVL354:
 5062              	.L540:
1897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5063              		.loc 1 1897 35 view .LVU1542
 5064 00d2 244A     		ldr	r2, .L553+16
 5065              	.LVL355:
 5066              	.LBB596:
6416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5067              		.loc 2 6416 26 is_stmt 1 view .LVU1543
 5068              	.LBB591:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc6JDs4t.s 			page 342


 5069              		.loc 2 6418 3 view .LVU1544
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5070              		.loc 2 6418 21 is_stmt 0 view .LVU1545
 5071 00d4 9668     		ldr	r6, [r2, #8]
 5072              	.LVL356:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5073              		.loc 2 6418 21 view .LVU1546
 5074              	.LBE591:
 5075              	.LBE596:
1900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5076              		.loc 1 1900 3 is_stmt 1 view .LVU1547
1903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5077              		.loc 1 1903 3 view .LVU1548
 5078              	.LBB597:
6888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5079              		.loc 2 6888 26 view .LVU1549
 5080              	.LBB594:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5081              		.loc 2 6890 3 view .LVU1550
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5082              		.loc 2 6890 12 is_stmt 0 view .LVU1551
 5083 00d6 9D68     		ldr	r5, [r3, #8]
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5084              		.loc 2 6890 74 view .LVU1552
 5085 00d8 15F00405 		ands	r5, r5, #4
 5086 00dc A0D0     		beq	.L551
 5087              	.LVL357:
 5088              	.L538:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5089              		.loc 2 6890 74 view .LVU1553
 5090              	.LBE594:
 5091              	.LBE597:
2054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 5092              		.loc 1 2054 20 view .LVU1554
 5093 00de 0220     		movs	r0, #2
 5094              	.LVL358:
2059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5095              		.loc 1 2059 1 view .LVU1555
 5096 00e0 70BD     		pop	{r4, r5, r6, pc}
 5097              	.LVL359:
 5098              	.L522:
2048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5099              		.loc 1 2048 7 is_stmt 1 view .LVU1556
2048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5100              		.loc 1 2048 7 view .LVU1557
 5101 00e2 84F85050 		strb	r5, [r4, #80]
2059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5102              		.loc 1 2059 1 is_stmt 0 view .LVU1558
 5103 00e6 70BD     		pop	{r4, r5, r6, pc}
 5104              	.LVL360:
 5105              	.L549:
1986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 5106              		.loc 1 1986 36 view .LVU1559
 5107 00e8 40F22122 		movw	r2, #545
 5108 00ec 22FA06F6 		lsr	r6, r2, r6
1988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
 5109              		.loc 1 1988 11 view .LVU1560
ARM GAS  /tmp/cc6JDs4t.s 			page 343


 5110 00f0 F607     		lsls	r6, r6, #31
 5111 00f2 D6D5     		bpl	.L530
 5112              	.L529:
1992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5113              		.loc 1 1992 9 is_stmt 1 view .LVU1561
1992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5114              		.loc 1 1992 13 is_stmt 0 view .LVU1562
 5115 00f4 DA68     		ldr	r2, [r3, #12]
1992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5116              		.loc 1 1992 12 view .LVU1563
 5117 00f6 9101     		lsls	r1, r2, #6
 5118 00f8 0FD5     		bpl	.L531
1994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5119              		.loc 1 1994 11 is_stmt 1 view .LVU1564
 5120 00fa 626D     		ldr	r2, [r4, #84]
2000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 5121              		.loc 1 2000 11 is_stmt 0 view .LVU1565
 5122 00fc 082D     		cmp	r5, #8
1994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5123              		.loc 1 1994 11 view .LVU1566
 5124 00fe 22F44052 		bic	r2, r2, #12288
 5125 0102 42F48052 		orr	r2, r2, #4096
 5126 0106 6265     		str	r2, [r4, #84]
2000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 5127              		.loc 1 2000 11 is_stmt 1 view .LVU1567
2008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 5128              		.loc 1 2008 15 is_stmt 0 view .LVU1568
 5129 0108 5A68     		ldr	r2, [r3, #4]
2000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 5130              		.loc 1 2000 11 view .LVU1569
 5131 010a 13D0     		beq	.L552
2008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 5132              		.loc 1 2008 15 is_stmt 1 view .LVU1570
 5133 010c 22F04002 		bic	r2, r2, #64
 5134 0110 5A60     		str	r2, [r3, #4]
2009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
 5135              		.loc 1 2009 15 view .LVU1571
 5136 0112 5A68     		ldr	r2, [r3, #4]
 5137 0114 42F02002 		orr	r2, r2, #32
 5138 0118 5A60     		str	r2, [r3, #4]
2010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 5139              		.loc 1 2010 15 view .LVU1572
 5140              	.L531:
2015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5141              		.loc 1 2015 9 view .LVU1573
 5142              	.LVL361:
 5143              	.LBB598:
 5144              	.LBI598:
6852:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5145              		.loc 2 6852 22 view .LVU1574
 5146              	.LBB599:
6857:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5147              		.loc 2 6857 3 view .LVU1575
 5148 011a 9968     		ldr	r1, [r3, #8]
 5149 011c 124A     		ldr	r2, .L553+20
 5150 011e 0A40     		ands	r2, r2, r1
 5151 0120 42F00402 		orr	r2, r2, #4
ARM GAS  /tmp/cc6JDs4t.s 			page 344


 5152 0124 9A60     		str	r2, [r3, #8]
 5153              	.LBE599:
 5154              	.LBE598:
2059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5155              		.loc 1 2059 1 is_stmt 0 view .LVU1576
 5156 0126 70BD     		pop	{r4, r5, r6, pc}
 5157              	.LVL362:
 5158              	.L523:
1924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5159              		.loc 1 1924 12 view .LVU1577
 5160 0128 0A49     		ldr	r1, .L553
1925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
 5161              		.loc 1 1925 11 view .LVU1578
 5162 012a 002E     		cmp	r6, #0
 5163 012c 91D0     		beq	.L534
 5164 012e 94E7     		b	.L535
 5165              	.L524:
1941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5166              		.loc 1 1941 9 is_stmt 1 view .LVU1579
 5167 0130 A265     		str	r2, [r4, #88]
 5168 0132 9AE7     		b	.L525
 5169              	.L552:
2003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 5170              		.loc 1 2003 15 view .LVU1580
 5171 0134 22F02002 		bic	r2, r2, #32
 5172 0138 5A60     		str	r2, [r3, #4]
2004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
 5173              		.loc 1 2004 15 view .LVU1581
 5174 013a 5A68     		ldr	r2, [r3, #4]
 5175 013c 42F04002 		orr	r2, r2, #64
 5176 0140 5A60     		str	r2, [r3, #4]
2005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
 5177              		.loc 1 2005 15 view .LVU1582
 5178 0142 EAE7     		b	.L531
 5179              	.LVL363:
 5180              	.L550:
2033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 5181              		.loc 1 2033 15 view .LVU1583
 5182 0144 22F02002 		bic	r2, r2, #32
 5183 0148 5A60     		str	r2, [r3, #4]
2034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
 5184              		.loc 1 2034 15 view .LVU1584
 5185 014a 5A68     		ldr	r2, [r3, #4]
 5186 014c 42F04002 		orr	r2, r2, #64
 5187 0150 5A60     		str	r2, [r3, #4]
2035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
 5188              		.loc 1 2035 15 view .LVU1585
2059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5189              		.loc 1 2059 1 is_stmt 0 view .LVU1586
 5190 0152 70BD     		pop	{r4, r5, r6, pc}
 5191              	.LVL364:
 5192              	.L554:
2059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5193              		.loc 1 2059 1 view .LVU1587
 5194              		.align	2
 5195              	.L553:
 5196 0154 00200240 		.word	1073881088
ARM GAS  /tmp/cc6JDs4t.s 			page 345


 5197 0158 00630258 		.word	1476551424
 5198 015c FEF0FFFF 		.word	-3842
 5199 0160 00210240 		.word	1073881344
 5200 0164 00230240 		.word	1073881856
 5201 0168 C0FFFF7F 		.word	2147483584
 5202              		.cfi_endproc
 5203              	.LFE339:
 5205              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 5206              		.align	1
 5207              		.p2align 2,,3
 5208              		.global	HAL_ADC_Start_DMA
 5209              		.syntax unified
 5210              		.thumb
 5211              		.thumb_func
 5212              		.fpu fpv5-d16
 5214              	HAL_ADC_Start_DMA:
 5215              	.LVL365:
 5216              	.LFB341:
2122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5217              		.loc 1 2122 1 is_stmt 1 view -0
 5218              		.cfi_startproc
 5219              		@ args = 0, pretend = 0, frame = 0
 5220              		@ frame_needed = 0, uses_anonymous_args = 0
2123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 5221              		.loc 1 2123 3 view .LVU1589
2124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5222              		.loc 1 2124 3 view .LVU1590
2122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5223              		.loc 1 2122 1 is_stmt 0 view .LVU1591
 5224 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5225              	.LCFI29:
 5226              		.cfi_def_cfa_offset 24
 5227              		.cfi_offset 4, -24
 5228              		.cfi_offset 5, -20
 5229              		.cfi_offset 6, -16
 5230              		.cfi_offset 7, -12
 5231              		.cfi_offset 8, -8
 5232              		.cfi_offset 14, -4
2124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5233              		.loc 1 2124 55 view .LVU1592
 5234 0004 3F4D     		ldr	r5, .L576
2122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5235              		.loc 1 2122 1 view .LVU1593
 5236 0006 0446     		mov	r4, r0
2124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5237              		.loc 1 2124 55 view .LVU1594
 5238 0008 0068     		ldr	r0, [r0]
 5239              	.LVL366:
2122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5240              		.loc 1 2122 1 view .LVU1595
 5241 000a 0F46     		mov	r7, r1
 5242 000c 1646     		mov	r6, r2
2124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5243              		.loc 1 2124 35 view .LVU1596
 5244 000e A842     		cmp	r0, r5
 5245 0010 19D0     		beq	.L568
2124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 346


 5246              		.loc 1 2124 55 view .LVU1597
 5247 0012 3D4B     		ldr	r3, .L576+4
2124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5248              		.loc 1 2124 35 view .LVU1598
 5249 0014 9842     		cmp	r0, r3
 5250 0016 16D0     		beq	.L568
 5251 0018 3C4D     		ldr	r5, .L576+8
 5252              	.LVL367:
 5253              	.LBB600:
 5254              	.LBI600:
6416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5255              		.loc 2 6416 26 is_stmt 1 view .LVU1599
 5256              	.LBB601:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5257              		.loc 2 6418 3 view .LVU1600
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5258              		.loc 2 6418 21 is_stmt 0 view .LVU1601
 5259 001a AB68     		ldr	r3, [r5, #8]
 5260              	.LVL368:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5261              		.loc 2 6418 21 view .LVU1602
 5262              	.LBE601:
 5263              	.LBE600:
2127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5264              		.loc 1 2127 3 is_stmt 1 view .LVU1603
2130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5265              		.loc 1 2130 3 view .LVU1604
 5266              	.LBB604:
 5267              	.LBI604:
6888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5268              		.loc 2 6888 26 view .LVU1605
 5269              	.LBB605:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5270              		.loc 2 6890 3 view .LVU1606
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5271              		.loc 2 6890 12 is_stmt 0 view .LVU1607
 5272 001c 8068     		ldr	r0, [r0, #8]
 5273              	.LVL369:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5274              		.loc 2 6890 74 view .LVU1608
 5275 001e 4207     		lsls	r2, r0, #29
 5276              	.LVL370:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5277              		.loc 2 6890 74 view .LVU1609
 5278 0020 16D4     		bmi	.L567
 5279              	.LVL371:
 5280              	.L575:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5281              		.loc 2 6890 74 view .LVU1610
 5282              	.LBE605:
 5283              	.LBE604:
2133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5284              		.loc 1 2133 5 is_stmt 1 view .LVU1611
2133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5285              		.loc 1 2133 5 view .LVU1612
 5286 0022 94F85020 		ldrb	r2, [r4, #80]	@ zero_extendqisi2
 5287 0026 012A     		cmp	r2, #1
ARM GAS  /tmp/cc6JDs4t.s 			page 347


 5288 0028 12D0     		beq	.L567
 5289              	.LBB607:
 5290              	.LBB602:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5291              		.loc 2 6418 10 is_stmt 0 discriminator 2 view .LVU1613
 5292 002a 03F01F08 		and	r8, r3, #31
 5293              	.LBE602:
 5294              	.LBE607:
2133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5295              		.loc 1 2133 5 is_stmt 1 discriminator 2 view .LVU1614
 5296 002e 0123     		movs	r3, #1
2137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 5297              		.loc 1 2137 31 is_stmt 0 discriminator 2 view .LVU1615
 5298 0030 B8F1090F 		cmp	r8, #9
2133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5299              		.loc 1 2133 5 discriminator 2 view .LVU1616
 5300 0034 84F85030 		strb	r3, [r4, #80]
2133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5301              		.loc 1 2133 5 is_stmt 1 discriminator 2 view .LVU1617
2137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 5302              		.loc 1 2137 5 discriminator 2 view .LVU1618
2137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 5303              		.loc 1 2137 31 is_stmt 0 discriminator 2 view .LVU1619
 5304 0038 0DD9     		bls	.L574
 5305              	.L559:
2241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
 5306              		.loc 1 2241 7 is_stmt 1 discriminator 1 view .LVU1620
 5307              	.LVL372:
2243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5308              		.loc 1 2243 7 discriminator 1 view .LVU1621
2243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5309              		.loc 1 2243 7 discriminator 1 view .LVU1622
 5310 003a 0023     		movs	r3, #0
2241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
 5311              		.loc 1 2241 22 is_stmt 0 discriminator 1 view .LVU1623
 5312 003c 0120     		movs	r0, #1
2243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5313              		.loc 1 2243 7 discriminator 1 view .LVU1624
 5314 003e 84F85030 		strb	r3, [r4, #80]
 5315              	.LVL373:
2253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5316              		.loc 1 2253 1 discriminator 1 view .LVU1625
 5317 0042 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5318              	.LVL374:
 5319              	.L568:
2124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5320              		.loc 1 2124 35 view .LVU1626
 5321 0046 324D     		ldr	r5, .L576+12
 5322              	.LVL375:
 5323              	.LBB608:
6416:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5324              		.loc 2 6416 26 is_stmt 1 view .LVU1627
 5325              	.LBB603:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5326              		.loc 2 6418 3 view .LVU1628
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5327              		.loc 2 6418 21 is_stmt 0 view .LVU1629
ARM GAS  /tmp/cc6JDs4t.s 			page 348


 5328 0048 AB68     		ldr	r3, [r5, #8]
 5329              	.LVL376:
6418:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5330              		.loc 2 6418 21 view .LVU1630
 5331              	.LBE603:
 5332              	.LBE608:
2127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5333              		.loc 1 2127 3 is_stmt 1 view .LVU1631
2130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5334              		.loc 1 2130 3 view .LVU1632
 5335              	.LBB609:
6888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5336              		.loc 2 6888 26 view .LVU1633
 5337              	.LBB606:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5338              		.loc 2 6890 3 view .LVU1634
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5339              		.loc 2 6890 12 is_stmt 0 view .LVU1635
 5340 004a 8068     		ldr	r0, [r0, #8]
 5341              	.LVL377:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5342              		.loc 2 6890 74 view .LVU1636
 5343 004c 4207     		lsls	r2, r0, #29
 5344              	.LVL378:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5345              		.loc 2 6890 74 view .LVU1637
 5346 004e E8D5     		bpl	.L575
 5347              	.LVL379:
 5348              	.L567:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5349              		.loc 2 6890 74 view .LVU1638
 5350              	.LBE606:
 5351              	.LBE609:
2248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 5352              		.loc 1 2248 20 view .LVU1639
 5353 0050 0220     		movs	r0, #2
2253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5354              		.loc 1 2253 1 view .LVU1640
 5355 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5356              	.LVL380:
 5357              	.L574:
2137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 5358              		.loc 1 2137 31 discriminator 2 view .LVU1641
 5359 0056 40F22123 		movw	r3, #545
 5360 005a 23FA08F3 		lsr	r3, r3, r8
 5361 005e DB43     		mvns	r3, r3
2139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
 5362              		.loc 1 2139 9 discriminator 2 view .LVU1642
 5363 0060 13F00105 		ands	r5, r3, #1
 5364 0064 E9D1     		bne	.L559
2143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5365              		.loc 1 2143 7 is_stmt 1 view .LVU1643
2143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5366              		.loc 1 2143 24 is_stmt 0 view .LVU1644
 5367 0066 2046     		mov	r0, r4
 5368 0068 FFF7FEFF 		bl	ADC_Enable
 5369              	.LVL381:
ARM GAS  /tmp/cc6JDs4t.s 			page 349


2146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5370              		.loc 1 2146 7 is_stmt 1 view .LVU1645
2146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5371              		.loc 1 2146 10 is_stmt 0 view .LVU1646
 5372 006c 0028     		cmp	r0, #0
 5373 006e 42D1     		bne	.L560
2151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
 5374              		.loc 1 2151 9 is_stmt 1 view .LVU1647
 5375 0070 626D     		ldr	r2, [r4, #84]
 5376 0072 284B     		ldr	r3, .L576+16
2158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5377              		.loc 1 2158 14 is_stmt 0 view .LVU1648
 5378 0074 2568     		ldr	r5, [r4]
2151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
 5379              		.loc 1 2151 9 view .LVU1649
 5380 0076 1340     		ands	r3, r3, r2
 5381 0078 43F48073 		orr	r3, r3, #256
 5382 007c 6365     		str	r3, [r4, #84]
2158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5383              		.loc 1 2158 9 is_stmt 1 view .LVU1650
2159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            )
 5384              		.loc 1 2159 13 is_stmt 0 view .LVU1651
 5385 007e B8F1000F 		cmp	r8, #0
 5386 0082 02D0     		beq	.L569
2158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5387              		.loc 1 2158 14 view .LVU1652
 5388 0084 204B     		ldr	r3, .L576+4
2159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            )
 5389              		.loc 1 2159 13 view .LVU1653
 5390 0086 9D42     		cmp	r5, r3
 5391 0088 03D0     		beq	.L561
 5392              	.L569:
2162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 5393              		.loc 1 2162 11 is_stmt 1 view .LVU1654
 5394 008a 636D     		ldr	r3, [r4, #84]
 5395 008c 23F48013 		bic	r3, r3, #1048576
 5396 0090 6365     		str	r3, [r4, #84]
 5397              	.L561:
2166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5398              		.loc 1 2166 9 view .LVU1655
2166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5399              		.loc 1 2166 18 is_stmt 0 view .LVU1656
 5400 0092 636D     		ldr	r3, [r4, #84]
2166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5401              		.loc 1 2166 12 view .LVU1657
 5402 0094 13F48053 		ands	r3, r3, #4096
 5403 0098 31D0     		beq	.L563
2169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 5404              		.loc 1 2169 11 is_stmt 1 view .LVU1658
 5405 009a A36D     		ldr	r3, [r4, #88]
 5406 009c 23F00603 		bic	r3, r3, #6
 5407 00a0 A365     		str	r3, [r4, #88]
 5408              	.L564:
2178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5409              		.loc 1 2178 9 view .LVU1659
2178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5410              		.loc 1 2178 13 is_stmt 0 view .LVU1660
ARM GAS  /tmp/cc6JDs4t.s 			page 350


 5411 00a2 E06C     		ldr	r0, [r4, #76]
 5412              	.LVL382:
2193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5413              		.loc 1 2193 9 view .LVU1661
 5414 00a4 4FF01C0E 		mov	lr, #28
2181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5415              		.loc 1 2181 48 view .LVU1662
 5416 00a8 1B49     		ldr	r1, .L576+20
2198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5417              		.loc 1 2198 9 view .LVU1663
 5418 00aa 4FF0000C 		mov	ip, #0
2178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5419              		.loc 1 2178 44 view .LVU1664
 5420 00ae 1B4A     		ldr	r2, .L576+24
2223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5421              		.loc 1 2223 26 view .LVU1665
 5422 00b0 3346     		mov	r3, r6
2181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5423              		.loc 1 2181 48 view .LVU1666
 5424 00b2 0164     		str	r1, [r0, #64]
2184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5425              		.loc 1 2184 45 view .LVU1667
 5426 00b4 1A49     		ldr	r1, .L576+28
2178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5427              		.loc 1 2178 44 view .LVU1668
 5428 00b6 C263     		str	r2, [r0, #60]
2181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5429              		.loc 1 2181 9 is_stmt 1 view .LVU1669
2184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5430              		.loc 1 2184 9 view .LVU1670
2223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5431              		.loc 1 2223 26 is_stmt 0 view .LVU1671
 5432 00b8 3A46     		mov	r2, r7
2184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5433              		.loc 1 2184 45 view .LVU1672
 5434 00ba C164     		str	r1, [r0, #76]
2193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5435              		.loc 1 2193 9 is_stmt 1 view .LVU1673
2223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5436              		.loc 1 2223 26 is_stmt 0 view .LVU1674
 5437 00bc 05F14001 		add	r1, r5, #64
2193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5438              		.loc 1 2193 9 view .LVU1675
 5439 00c0 C5F800E0 		str	lr, [r5]
2198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5440              		.loc 1 2198 9 is_stmt 1 view .LVU1676
2198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5441              		.loc 1 2198 9 view .LVU1677
 5442 00c4 84F850C0 		strb	ip, [r4, #80]
2198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5443              		.loc 1 2198 9 view .LVU1678
2203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5444              		.loc 1 2203 9 view .LVU1679
 5445 00c8 6F68     		ldr	r7, [r5, #4]
 5446              	.LVL383:
 5447              	.LBB610:
 5448              	.LBB611:
ARM GAS  /tmp/cc6JDs4t.s 			page 351


4294:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5449              		.loc 2 4294 3 is_stmt 0 view .LVU1680
 5450 00ca D4F82CC0 		ldr	ip, [r4, #44]
 5451              	.LBE611:
 5452              	.LBE610:
2203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5453              		.loc 1 2203 9 view .LVU1681
 5454 00ce 47F01007 		orr	r7, r7, #16
 5455 00d2 6F60     		str	r7, [r5, #4]
2218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 5456              		.loc 1 2218 9 is_stmt 1 view .LVU1682
 5457              	.LVL384:
 5458              	.LBB613:
 5459              	.LBI610:
4292:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5460              		.loc 2 4292 22 view .LVU1683
 5461              	.LBB612:
4294:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5462              		.loc 2 4294 3 view .LVU1684
 5463 00d4 EE68     		ldr	r6, [r5, #12]
 5464              	.LVL385:
4294:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5465              		.loc 2 4294 3 is_stmt 0 view .LVU1685
 5466 00d6 26F00306 		bic	r6, r6, #3
 5467 00da 46EA0C06 		orr	r6, r6, ip
 5468 00de EE60     		str	r6, [r5, #12]
 5469              	.LVL386:
4294:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5470              		.loc 2 4294 3 view .LVU1686
 5471              	.LBE612:
 5472              	.LBE613:
2223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5473              		.loc 1 2223 9 is_stmt 1 view .LVU1687
2223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5474              		.loc 1 2223 26 is_stmt 0 view .LVU1688
 5475 00e0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5476              	.LVL387:
2230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5477              		.loc 1 2230 9 view .LVU1689
 5478 00e4 2268     		ldr	r2, [r4]
 5479              	.LBB614:
 5480              	.LBB615:
6857:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5481              		.loc 2 6857 3 view .LVU1690
 5482 00e6 0F4B     		ldr	r3, .L576+32
 5483              	.LVL388:
6857:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5484              		.loc 2 6857 3 view .LVU1691
 5485              	.LBE615:
 5486              	.LBE614:
2230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5487              		.loc 1 2230 9 is_stmt 1 view .LVU1692
 5488              	.LBB617:
 5489              	.LBI614:
6852:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5490              		.loc 2 6852 22 view .LVU1693
 5491              	.LBB616:
ARM GAS  /tmp/cc6JDs4t.s 			page 352


6857:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5492              		.loc 2 6857 3 view .LVU1694
 5493 00e8 9168     		ldr	r1, [r2, #8]
 5494 00ea 0B40     		ands	r3, r3, r1
 5495 00ec 43F00403 		orr	r3, r3, #4
 5496 00f0 9360     		str	r3, [r2, #8]
 5497              	.LVL389:
6857:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5498              		.loc 2 6857 3 is_stmt 0 view .LVU1695
 5499              	.LBE616:
 5500              	.LBE617:
2253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5501              		.loc 1 2253 1 view .LVU1696
 5502 00f2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5503              	.LVL390:
 5504              	.L560:
2235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5505              		.loc 1 2235 9 is_stmt 1 view .LVU1697
2235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5506              		.loc 1 2235 9 view .LVU1698
 5507 00f6 84F85050 		strb	r5, [r4, #80]
 5508              	.LVL391:
2253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5509              		.loc 1 2253 1 is_stmt 0 view .LVU1699
 5510 00fa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5511              	.LVL392:
 5512              	.L563:
2174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 5513              		.loc 1 2174 11 is_stmt 1 view .LVU1700
 5514 00fe A365     		str	r3, [r4, #88]
 5515 0100 CFE7     		b	.L564
 5516              	.L577:
 5517 0102 00BF     		.align	2
 5518              	.L576:
 5519 0104 00200240 		.word	1073881088
 5520 0108 00210240 		.word	1073881344
 5521 010c 00630258 		.word	1476551424
 5522 0110 00230240 		.word	1073881856
 5523 0114 FEF0FFFF 		.word	-3842
 5524 0118 00000000 		.word	ADC_DMAHalfConvCplt
 5525 011c 00000000 		.word	ADC_DMAConvCplt
 5526 0120 00000000 		.word	ADC_DMAError
 5527 0124 C0FFFF7F 		.word	2147483584
 5528              		.cfi_endproc
 5529              	.LFE341:
 5531              		.section	.text.ADC_Disable,"ax",%progbits
 5532              		.align	1
 5533              		.p2align 2,,3
 5534              		.global	ADC_Disable
 5535              		.syntax unified
 5536              		.thumb
 5537              		.thumb_func
 5538              		.fpu fpv5-d16
 5540              	ADC_Disable:
 5541              	.LVL393:
 5542              	.LFB355:
3760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
ARM GAS  /tmp/cc6JDs4t.s 			page 353


 5543              		.loc 1 3760 1 view -0
 5544              		.cfi_startproc
 5545              		@ args = 0, pretend = 0, frame = 0
 5546              		@ frame_needed = 0, uses_anonymous_args = 0
3761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
 5547              		.loc 1 3761 3 view .LVU1702
3762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5548              		.loc 1 3762 3 view .LVU1703
3760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 5549              		.loc 1 3760 1 is_stmt 0 view .LVU1704
 5550 0000 38B5     		push	{r3, r4, r5, lr}
 5551              	.LCFI30:
 5552              		.cfi_def_cfa_offset 16
 5553              		.cfi_offset 3, -16
 5554              		.cfi_offset 4, -12
 5555              		.cfi_offset 5, -8
 5556              		.cfi_offset 14, -4
3762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5557              		.loc 1 3762 48 view .LVU1705
 5558 0002 0368     		ldr	r3, [r0]
 5559              	.LVL394:
 5560              	.LBB618:
 5561              	.LBI618:
6767:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5562              		.loc 2 6767 26 is_stmt 1 view .LVU1706
 5563              	.LBB619:
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5564              		.loc 2 6769 3 view .LVU1707
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5565              		.loc 2 6769 12 is_stmt 0 view .LVU1708
 5566 0004 9A68     		ldr	r2, [r3, #8]
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5567              		.loc 2 6769 70 view .LVU1709
 5568 0006 9507     		lsls	r5, r2, #30
 5569 0008 02D5     		bpl	.L579
 5570              	.LVL395:
6769:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5571              		.loc 2 6769 70 view .LVU1710
 5572              	.LBE619:
 5573              	.LBE618:
3767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 5574              		.loc 1 3767 3 is_stmt 1 view .LVU1711
 5575              	.LBB620:
 5576              	.LBI620:
6756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5577              		.loc 2 6756 26 view .LVU1712
 5578              	.LBB621:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5579              		.loc 2 6758 3 view .LVU1713
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5580              		.loc 2 6758 12 is_stmt 0 view .LVU1714
 5581 000a 9B68     		ldr	r3, [r3, #8]
 5582              	.LVL396:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5583              		.loc 2 6758 12 view .LVU1715
 5584              	.LBE621:
 5585              	.LBE620:
ARM GAS  /tmp/cc6JDs4t.s 			page 354


3813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 5586              		.loc 1 3813 10 view .LVU1716
 5587 000c 0020     		movs	r0, #0
 5588              	.LVL397:
3814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5589              		.loc 1 3814 1 view .LVU1717
 5590 000e 38BD     		pop	{r3, r4, r5, pc}
 5591              	.LVL398:
 5592              	.L579:
3767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 5593              		.loc 1 3767 3 is_stmt 1 view .LVU1718
 5594              	.LBB623:
6756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5595              		.loc 2 6756 26 view .LVU1719
 5596              	.LBB622:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5597              		.loc 2 6758 3 view .LVU1720
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5598              		.loc 2 6758 12 is_stmt 0 view .LVU1721
 5599 0010 9A68     		ldr	r2, [r3, #8]
 5600              	.LVL399:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5601              		.loc 2 6758 12 view .LVU1722
 5602              	.LBE622:
 5603              	.LBE623:
3767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 5604              		.loc 1 3767 6 view .LVU1723
 5605 0012 D407     		lsls	r4, r2, #31
 5606 0014 29D5     		bpl	.L584
3772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5607              		.loc 1 3772 24 view .LVU1724
 5608 0016 9A68     		ldr	r2, [r3, #8]
 5609 0018 0446     		mov	r4, r0
3772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5610              		.loc 1 3772 5 is_stmt 1 view .LVU1725
3772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5611              		.loc 1 3772 29 is_stmt 0 view .LVU1726
 5612 001a 02F00D02 		and	r2, r2, #13
3772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5613              		.loc 1 3772 8 view .LVU1727
 5614 001e 012A     		cmp	r2, #1
 5615 0020 08D0     		beq	.L594
 5616              	.LVL400:
 5617              	.L593:
3801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5618              		.loc 1 3801 11 is_stmt 1 view .LVU1728
 5619 0022 636D     		ldr	r3, [r4, #84]
3806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 5620              		.loc 1 3806 18 is_stmt 0 view .LVU1729
 5621 0024 0120     		movs	r0, #1
3801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5622              		.loc 1 3801 11 view .LVU1730
 5623 0026 43F01003 		orr	r3, r3, #16
 5624 002a 6365     		str	r3, [r4, #84]
3804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5625              		.loc 1 3804 11 is_stmt 1 view .LVU1731
 5626 002c A36D     		ldr	r3, [r4, #88]
ARM GAS  /tmp/cc6JDs4t.s 			page 355


 5627 002e 0343     		orrs	r3, r3, r0
 5628 0030 A365     		str	r3, [r4, #88]
3806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 5629              		.loc 1 3806 11 view .LVU1732
3814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5630              		.loc 1 3814 1 is_stmt 0 view .LVU1733
 5631 0032 38BD     		pop	{r3, r4, r5, pc}
 5632              	.LVL401:
 5633              	.L594:
3775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 5634              		.loc 1 3775 7 is_stmt 1 view .LVU1734
 5635              	.LBB624:
 5636              	.LBI624:
6737:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5637              		.loc 2 6737 22 view .LVU1735
 5638              	.LBB625:
6742:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5639              		.loc 2 6742 3 view .LVU1736
 5640 0034 9868     		ldr	r0, [r3, #8]
 5641              	.LVL402:
6742:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5642              		.loc 2 6742 3 is_stmt 0 view .LVU1737
 5643              	.LBE625:
 5644              	.LBE624:
3776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5645              		.loc 1 3776 7 view .LVU1738
 5646 0036 0321     		movs	r1, #3
 5647              	.LBB627:
 5648              	.LBB626:
6742:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5649              		.loc 2 6742 3 view .LVU1739
 5650 0038 0D4A     		ldr	r2, .L595
 5651 003a 0240     		ands	r2, r2, r0
 5652 003c 42F00202 		orr	r2, r2, #2
 5653 0040 9A60     		str	r2, [r3, #8]
 5654              	.LVL403:
6742:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5655              		.loc 2 6742 3 view .LVU1740
 5656              	.LBE626:
 5657              	.LBE627:
3776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5658              		.loc 1 3776 7 is_stmt 1 view .LVU1741
 5659 0042 1960     		str	r1, [r3]
3791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5660              		.loc 1 3791 5 view .LVU1742
3791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5661              		.loc 1 3791 17 is_stmt 0 view .LVU1743
 5662 0044 FFF7FEFF 		bl	HAL_GetTick
 5663              	.LVL404:
3793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5664              		.loc 1 3793 17 view .LVU1744
 5665 0048 2368     		ldr	r3, [r4]
3791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5666              		.loc 1 3791 17 view .LVU1745
 5667 004a 0546     		mov	r5, r0
 5668              	.LVL405:
3793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
ARM GAS  /tmp/cc6JDs4t.s 			page 356


 5669              		.loc 1 3793 5 is_stmt 1 view .LVU1746
3793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5670              		.loc 1 3793 11 view .LVU1747
3793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5671              		.loc 1 3793 27 is_stmt 0 view .LVU1748
 5672 004c 9B68     		ldr	r3, [r3, #8]
3793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5673              		.loc 1 3793 11 view .LVU1749
 5674 004e D907     		lsls	r1, r3, #31
 5675 0050 0BD5     		bpl	.L584
 5676              	.LVL406:
 5677              	.L583:
3795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5678              		.loc 1 3795 7 is_stmt 1 view .LVU1750
3795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5679              		.loc 1 3795 12 is_stmt 0 view .LVU1751
 5680 0052 FFF7FEFF 		bl	HAL_GetTick
 5681              	.LVL407:
3798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5682              		.loc 1 3798 9 is_stmt 1 view .LVU1752
3793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5683              		.loc 1 3793 11 view .LVU1753
3795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5684              		.loc 1 3795 26 is_stmt 0 view .LVU1754
 5685 0056 401B     		subs	r0, r0, r5
3798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5686              		.loc 1 3798 18 view .LVU1755
 5687 0058 2368     		ldr	r3, [r4]
3795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5688              		.loc 1 3795 10 view .LVU1756
 5689 005a 0228     		cmp	r0, #2
 5690 005c 02D9     		bls	.L586
3798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5691              		.loc 1 3798 28 view .LVU1757
 5692 005e 9A68     		ldr	r2, [r3, #8]
3798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5693              		.loc 1 3798 12 view .LVU1758
 5694 0060 D207     		lsls	r2, r2, #31
 5695 0062 DED4     		bmi	.L593
 5696              	.L586:
3793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5697              		.loc 1 3793 27 view .LVU1759
 5698 0064 9B68     		ldr	r3, [r3, #8]
3793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5699              		.loc 1 3793 11 view .LVU1760
 5700 0066 DB07     		lsls	r3, r3, #31
 5701 0068 F3D4     		bmi	.L583
 5702              	.LVL408:
 5703              	.L584:
3813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 5704              		.loc 1 3813 10 view .LVU1761
 5705 006a 0020     		movs	r0, #0
3814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5706              		.loc 1 3814 1 view .LVU1762
 5707 006c 38BD     		pop	{r3, r4, r5, pc}
 5708              	.L596:
 5709 006e 00BF     		.align	2
ARM GAS  /tmp/cc6JDs4t.s 			page 357


 5710              	.L595:
 5711 0070 C0FFFF7F 		.word	2147483584
 5712              		.cfi_endproc
 5713              	.LFE355:
 5715              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 5716              		.align	1
 5717              		.p2align 2,,3
 5718              		.global	HAL_ADC_DeInit
 5719              		.syntax unified
 5720              		.thumb
 5721              		.thumb_func
 5722              		.fpu fpv5-d16
 5724              	HAL_ADC_DeInit:
 5725              	.LVL409:
 5726              	.LFB332:
 852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5727              		.loc 1 852 1 is_stmt 1 view -0
 5728              		.cfi_startproc
 5729              		@ args = 0, pretend = 0, frame = 0
 5730              		@ frame_needed = 0, uses_anonymous_args = 0
 853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5731              		.loc 1 853 3 view .LVU1764
 856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5732              		.loc 1 856 3 view .LVU1765
 852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5733              		.loc 1 852 1 is_stmt 0 view .LVU1766
 5734 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5735              	.LCFI31:
 5736              		.cfi_def_cfa_offset 24
 5737              		.cfi_offset 3, -24
 5738              		.cfi_offset 4, -20
 5739              		.cfi_offset 5, -16
 5740              		.cfi_offset 6, -12
 5741              		.cfi_offset 7, -8
 5742              		.cfi_offset 14, -4
 856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5743              		.loc 1 856 6 view .LVU1767
 5744 0002 0028     		cmp	r0, #0
 5745 0004 00F0B180 		beq	.L605
 862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5746              		.loc 1 862 3 is_stmt 1 view .LVU1768
 865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5747              		.loc 1 865 3 view .LVU1769
 5748 0008 436D     		ldr	r3, [r0, #84]
 5749 000a 0446     		mov	r4, r0
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5750              		.loc 1 868 20 is_stmt 0 view .LVU1770
 5751 000c 0321     		movs	r1, #3
 865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5752              		.loc 1 865 3 view .LVU1771
 5753 000e 43F00203 		orr	r3, r3, #2
 5754 0012 4365     		str	r3, [r0, #84]
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5755              		.loc 1 868 3 is_stmt 1 view .LVU1772
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5756              		.loc 1 868 20 is_stmt 0 view .LVU1773
 5757 0014 FFF7FEFF 		bl	ADC_ConversionStop
ARM GAS  /tmp/cc6JDs4t.s 			page 358


 5758              	.LVL410:
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5759              		.loc 1 876 3 is_stmt 1 view .LVU1774
 5760 0018 2368     		ldr	r3, [r4]
 879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5761              		.loc 1 879 6 is_stmt 0 view .LVU1775
 5762 001a 0546     		mov	r5, r0
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5763              		.loc 1 876 3 view .LVU1776
 5764 001c DA68     		ldr	r2, [r3, #12]
 5765 001e 42F40012 		orr	r2, r2, #2097152
 5766 0022 DA60     		str	r2, [r3, #12]
 879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5767              		.loc 1 879 3 is_stmt 1 view .LVU1777
 879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5768              		.loc 1 879 6 is_stmt 0 view .LVU1778
 5769 0024 0028     		cmp	r0, #0
 5770 0026 00F08780 		beq	.L612
 5771              	.L599:
 5772              	.LVL411:
 900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 5773              		.loc 1 900 3 is_stmt 1 view .LVU1779
 5774 002a 5868     		ldr	r0, [r3, #4]
 907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 5775              		.loc 1 907 3 is_stmt 0 view .LVU1780
 5776 002c 40F2FF76 		movw	r6, #2047
 900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 5777              		.loc 1 900 3 view .LVU1781
 5778 0030 5149     		ldr	r1, .L615
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR2 */
 5779              		.loc 1 1001 3 view .LVU1782
 5780 0032 0022     		movs	r2, #0
 985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 5781              		.loc 1 985 3 view .LVU1783
 5782 0034 514F     		ldr	r7, .L615+4
 900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 5783              		.loc 1 900 3 view .LVU1784
 5784 0036 0140     		ands	r1, r1, r0
 931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 5785              		.loc 1 931 3 view .LVU1785
 5786 0038 5148     		ldr	r0, .L615+8
 900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 5787              		.loc 1 900 3 view .LVU1786
 5788 003a 5960     		str	r1, [r3, #4]
 907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 5789              		.loc 1 907 3 is_stmt 1 view .LVU1787
 5790 003c 1E60     		str	r6, [r3]
 918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 5791              		.loc 1 918 3 view .LVU1788
 5792 003e 9E68     		ldr	r6, [r3, #8]
 981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 5793              		.loc 1 981 3 is_stmt 0 view .LVU1789
 5794 0040 5049     		ldr	r1, .L615+12
 918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 5795              		.loc 1 918 3 view .LVU1790
 5796 0042 26F0A046 		bic	r6, r6, #1342177280
 5797 0046 9E60     		str	r6, [r3, #8]
ARM GAS  /tmp/cc6JDs4t.s 			page 359


 919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5798              		.loc 1 919 3 is_stmt 1 view .LVU1791
 5799 0048 9E68     		ldr	r6, [r3, #8]
 5800 004a 46F00056 		orr	r6, r6, #536870912
 5801 004e 9E60     		str	r6, [r3, #8]
 922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR_AWD1EN  | ADC_CFGR_AWD1SGL | ADC_CFGR_JQM     |
 5802              		.loc 1 922 3 view .LVU1792
 5803 0050 DE68     		ldr	r6, [r3, #12]
 5804 0052 06F08026 		and	r6, r6, #-2147450880
 5805 0056 DE60     		str	r6, [r3, #12]
 928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5806              		.loc 1 928 3 view .LVU1793
 5807 0058 DE68     		ldr	r6, [r3, #12]
 5808 005a 46F00046 		orr	r6, r6, #-2147483648
 5809 005e DE60     		str	r6, [r3, #12]
 931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 5810              		.loc 1 931 3 view .LVU1794
 5811 0060 1E69     		ldr	r6, [r3, #16]
 5812 0062 3040     		ands	r0, r0, r6
 5813 0064 1861     		str	r0, [r3, #16]
 935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5814              		.loc 1 935 3 view .LVU1795
 5815 0066 5869     		ldr	r0, [r3, #20]
 5816 0068 00F04040 		and	r0, r0, #-1073741824
 5817 006c 5861     		str	r0, [r3, #20]
 938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 5818              		.loc 1 938 3 view .LVU1796
 5819 006e 9869     		ldr	r0, [r3, #24]
 5820 0070 00F07840 		and	r0, r0, #-134217728
 5821 0074 9861     		str	r0, [r3, #24]
 967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR1, ADC_HTR_HT);
 5822              		.loc 1 967 3 view .LVU1797
 5823 0076 186A     		ldr	r0, [r3, #32]
 5824 0078 00F07C40 		and	r0, r0, #-67108864
 5825 007c 1862     		str	r0, [r3, #32]
 968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5826              		.loc 1 968 3 view .LVU1798
 5827 007e 586A     		ldr	r0, [r3, #36]
 5828 0080 00F07C40 		and	r0, r0, #-67108864
 5829 0084 5862     		str	r0, [r3, #36]
 971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR2, ADC_HTR_HT);
 5830              		.loc 1 971 3 view .LVU1799
 5831 0086 D3F8B000 		ldr	r0, [r3, #176]
 5832 008a 00F07C40 		and	r0, r0, #-67108864
 5833 008e C3F8B000 		str	r0, [r3, #176]
 972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5834              		.loc 1 972 3 view .LVU1800
 5835 0092 D3F8B400 		ldr	r0, [r3, #180]
 5836 0096 00F07C40 		and	r0, r0, #-67108864
 5837 009a C3F8B400 		str	r0, [r3, #180]
 975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR3, ADC_HTR_HT);
 5838              		.loc 1 975 3 view .LVU1801
 5839 009e D3F8B860 		ldr	r6, [r3, #184]
 5840 00a2 06F07C46 		and	r6, r6, #-67108864
 5841 00a6 C3F8B860 		str	r6, [r3, #184]
 976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 5842              		.loc 1 976 3 view .LVU1802
ARM GAS  /tmp/cc6JDs4t.s 			page 360


 5843 00aa D3F8BC60 		ldr	r6, [r3, #188]
 5844 00ae 06F07C46 		and	r6, r6, #-67108864
 5845 00b2 C3F8BC60 		str	r6, [r3, #188]
 981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 5846              		.loc 1 981 3 view .LVU1803
 5847 00b6 186B     		ldr	r0, [r3, #48]
 993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5848              		.loc 1 993 3 is_stmt 0 view .LVU1804
 5849 00b8 334E     		ldr	r6, .L615+16
 981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 5850              		.loc 1 981 3 view .LVU1805
 5851 00ba 0140     		ands	r1, r1, r0
 5852 00bc 1963     		str	r1, [r3, #48]
 985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 5853              		.loc 1 985 3 is_stmt 1 view .LVU1806
 5854 00be 596B     		ldr	r1, [r3, #52]
 5855 00c0 3940     		ands	r1, r1, r7
 5856 00c2 5963     		str	r1, [r3, #52]
 989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 5857              		.loc 1 989 3 view .LVU1807
 5858 00c4 986B     		ldr	r0, [r3, #56]
1013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5859              		.loc 1 1013 3 is_stmt 0 view .LVU1808
 5860 00c6 3149     		ldr	r1, .L615+20
 989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 5861              		.loc 1 989 3 view .LVU1809
 5862 00c8 3840     		ands	r0, r0, r7
 5863 00ca 9863     		str	r0, [r3, #56]
 993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5864              		.loc 1 993 3 is_stmt 1 view .LVU1810
 5865 00cc D86B     		ldr	r0, [r3, #60]
 5866 00ce 0640     		ands	r6, r6, r0
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5867              		.loc 1 1047 7 is_stmt 0 view .LVU1811
 5868 00d0 2F48     		ldr	r0, .L615+24
 993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5869              		.loc 1 993 3 view .LVU1812
 5870 00d2 DE63     		str	r6, [r3, #60]
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR2 */
 5871              		.loc 1 1001 3 is_stmt 1 view .LVU1813
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5872              		.loc 1 1047 89 is_stmt 0 view .LVU1814
 5873 00d4 8342     		cmp	r3, r0
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR2 */
 5874              		.loc 1 1001 3 view .LVU1815
 5875 00d6 1E6E     		ldr	r6, [r3, #96]
 5876 00d8 1A66     		str	r2, [r3, #96]
1003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR3 */
 5877              		.loc 1 1003 3 is_stmt 1 view .LVU1816
 5878 00da 5E6E     		ldr	r6, [r3, #100]
 5879 00dc 5A66     		str	r2, [r3, #100]
1005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR4 */
 5880              		.loc 1 1005 3 view .LVU1817
 5881 00de 9E6E     		ldr	r6, [r3, #104]
 5882 00e0 9A66     		str	r2, [r3, #104]
1007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5883              		.loc 1 1007 3 view .LVU1818
ARM GAS  /tmp/cc6JDs4t.s 			page 361


 5884 00e2 DE6E     		ldr	r6, [r3, #108]
 5885 00e4 DA66     		str	r2, [r3, #108]
1013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5886              		.loc 1 1013 3 view .LVU1819
 5887 00e6 D3F8A020 		ldr	r2, [r3, #160]
 5888 00ea 02EA0102 		and	r2, r2, r1
 5889 00ee C3F8A020 		str	r2, [r3, #160]
1016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5890              		.loc 1 1016 3 view .LVU1820
 5891 00f2 D3F8A420 		ldr	r2, [r3, #164]
 5892 00f6 02EA0102 		and	r2, r2, r1
 5893 00fa C3F8A420 		str	r2, [r3, #164]
1037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5894              		.loc 1 1037 3 view .LVU1821
 5895 00fe D3F8C020 		ldr	r2, [r3, #192]
 5896 0102 02EA0102 		and	r2, r2, r1
 5897 0106 C3F8C020 		str	r2, [r3, #192]
1040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 5898              		.loc 1 1040 3 view .LVU1822
 5899 010a D3F8C420 		ldr	r2, [r3, #196]
 5900 010e 02F0F822 		and	r2, r2, #-134154240
 5901 0112 C3F8C420 		str	r2, [r3, #196]
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5902              		.loc 1 1047 3 view .LVU1823
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5903              		.loc 1 1047 89 is_stmt 0 view .LVU1824
 5904 0116 18D0     		beq	.L607
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5905              		.loc 1 1047 7 view .LVU1825
 5906 0118 1E4A     		ldr	r2, .L615+28
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5907              		.loc 1 1047 89 view .LVU1826
 5908 011a 9342     		cmp	r3, r2
 5909 011c 15D0     		beq	.L607
 5910              	.LVL412:
 5911              	.LBB628:
 5912              	.LBI628:
6756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5913              		.loc 2 6756 26 is_stmt 1 view .LVU1827
 5914              	.LBB629:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5915              		.loc 2 6758 3 view .LVU1828
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5916              		.loc 2 6758 12 is_stmt 0 view .LVU1829
 5917 011e 1E4B     		ldr	r3, .L615+32
 5918 0120 9B68     		ldr	r3, [r3, #8]
 5919              	.LVL413:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5920              		.loc 2 6758 12 view .LVU1830
 5921              	.LBE629:
 5922              	.LBE628:
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5923              		.loc 1 1047 6 view .LVU1831
 5924 0122 DB07     		lsls	r3, r3, #31
 5925 0124 24D5     		bpl	.L613
 5926              	.L604:
1083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 362


 5927              		.loc 1 1083 3 is_stmt 1 view .LVU1832
 5928 0126 0023     		movs	r3, #0
1097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5929              		.loc 1 1097 1 is_stmt 0 view .LVU1833
 5930 0128 2846     		mov	r0, r5
1083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5931              		.loc 1 1083 3 view .LVU1834
 5932 012a A365     		str	r3, [r4, #88]
1086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 5933              		.loc 1 1086 3 is_stmt 1 view .LVU1835
1093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5934              		.loc 1 1093 3 is_stmt 0 view .LVU1836
 5935 012c 84F85030 		strb	r3, [r4, #80]
1090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5936              		.loc 1 1090 15 view .LVU1837
 5937 0130 6365     		str	r3, [r4, #84]
1087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5938              		.loc 1 1087 38 view .LVU1838
 5939 0132 C4E91733 		strd	r3, r3, [r4, #92]
1090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5940              		.loc 1 1090 3 is_stmt 1 view .LVU1839
1093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5941              		.loc 1 1093 3 view .LVU1840
1093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5942              		.loc 1 1093 3 view .LVU1841
1093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5943              		.loc 1 1093 3 view .LVU1842
1096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 5944              		.loc 1 1096 3 view .LVU1843
1097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5945              		.loc 1 1097 1 is_stmt 0 view .LVU1844
 5946 0136 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5947              	.LVL414:
 5948              	.L612:
 882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5949              		.loc 1 882 5 is_stmt 1 view .LVU1845
 882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5950              		.loc 1 882 22 is_stmt 0 view .LVU1846
 5951 0138 2046     		mov	r0, r4
 5952              	.LVL415:
 882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5953              		.loc 1 882 22 view .LVU1847
 5954 013a FFF7FEFF 		bl	ADC_Disable
 5955              	.LVL416:
 885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5956              		.loc 1 885 5 is_stmt 1 view .LVU1848
 885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5957              		.loc 1 885 8 is_stmt 0 view .LVU1849
 5958 013e 0546     		mov	r5, r0
 5959 0140 C0B9     		cbnz	r0, .L614
 888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5960              		.loc 1 888 7 is_stmt 1 view .LVU1850
 888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5961              		.loc 1 888 19 is_stmt 0 view .LVU1851
 5962 0142 0122     		movs	r2, #1
 5963 0144 2368     		ldr	r3, [r4]
 5964 0146 6265     		str	r2, [r4, #84]
ARM GAS  /tmp/cc6JDs4t.s 			page 363


 5965 0148 6FE7     		b	.L599
 5966              	.LVL417:
 5967              	.L607:
 5968              	.LBB630:
 5969              	.LBI630:
6756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5970              		.loc 2 6756 26 is_stmt 1 view .LVU1852
 5971              	.LBB631:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5972              		.loc 2 6758 3 view .LVU1853
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5973              		.loc 2 6758 12 is_stmt 0 view .LVU1854
 5974 014a 114A     		ldr	r2, .L615+24
 5975              	.LBE631:
 5976              	.LBE630:
 5977              	.LBB633:
 5978              	.LBB634:
 5979 014c 114B     		ldr	r3, .L615+28
 5980              	.LBE634:
 5981              	.LBE633:
 5982              	.LBB636:
 5983              	.LBB632:
 5984 014e 9268     		ldr	r2, [r2, #8]
 5985              	.LVL418:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5986              		.loc 2 6758 12 view .LVU1855
 5987              	.LBE632:
 5988              	.LBE636:
 5989              	.LBB637:
 5990              	.LBI633:
6756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5991              		.loc 2 6756 26 is_stmt 1 view .LVU1856
 5992              	.LBB635:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5993              		.loc 2 6758 3 view .LVU1857
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5994              		.loc 2 6758 12 is_stmt 0 view .LVU1858
 5995 0150 9B68     		ldr	r3, [r3, #8]
 5996              	.LVL419:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5997              		.loc 2 6758 12 view .LVU1859
 5998              	.LBE635:
 5999              	.LBE637:
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6000              		.loc 1 1047 89 view .LVU1860
 6001 0152 1343     		orrs	r3, r3, r2
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6002              		.loc 1 1047 6 view .LVU1861
 6003 0154 DA07     		lsls	r2, r3, #31
 6004 0156 E6D4     		bmi	.L604
1056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6005              		.loc 1 1056 5 view .LVU1862
 6006 0158 104A     		ldr	r2, .L615+36
 6007              	.L603:
1056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6008              		.loc 1 1056 5 discriminator 4 view .LVU1863
 6009 015a 9168     		ldr	r1, [r2, #8]
ARM GAS  /tmp/cc6JDs4t.s 			page 364


1077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 6010              		.loc 1 1077 5 discriminator 4 view .LVU1864
 6011 015c 2046     		mov	r0, r4
1056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6012              		.loc 1 1056 5 discriminator 4 view .LVU1865
 6013 015e 104B     		ldr	r3, .L615+40
 6014 0160 0B40     		ands	r3, r3, r1
 6015 0162 9360     		str	r3, [r2, #8]
1077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 6016              		.loc 1 1077 5 is_stmt 1 discriminator 4 view .LVU1866
 6017 0164 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 6018              	.LVL420:
 6019 0168 DDE7     		b	.L604
 6020              	.LVL421:
 6021              	.L605:
 858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 6022              		.loc 1 858 12 is_stmt 0 view .LVU1867
 6023 016a 0125     		movs	r5, #1
1097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6024              		.loc 1 1097 1 view .LVU1868
 6025 016c 2846     		mov	r0, r5
 6026              	.LVL422:
1097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6027              		.loc 1 1097 1 view .LVU1869
 6028 016e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6029              	.LVL423:
 6030              	.L613:
1056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6031              		.loc 1 1056 5 view .LVU1870
 6032 0170 0C4A     		ldr	r2, .L615+44
 6033 0172 F2E7     		b	.L603
 6034              	.LVL424:
 6035              	.L614:
1056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6036              		.loc 1 1056 5 view .LVU1871
 6037 0174 2368     		ldr	r3, [r4]
 6038 0176 58E7     		b	.L599
 6039              	.L616:
 6040              		.align	2
 6041              	.L615:
 6042 0178 00F8FFFF 		.word	-2048
 6043 017c 200882E0 		.word	-528349152
 6044 0180 1CF800FC 		.word	-67045348
 6045 0184 300882E0 		.word	-528349136
 6046 0188 20F8FFFF 		.word	-2016
 6047 018c 0000F0FF 		.word	-1048576
 6048 0190 00200240 		.word	1073881088
 6049 0194 00210240 		.word	1073881344
 6050 0198 00600258 		.word	1476550656
 6051 019c 00230240 		.word	1073881856
 6052 01a0 E03000FE 		.word	-33541920
 6053 01a4 00630258 		.word	1476551424
 6054              		.cfi_endproc
 6055              	.LFE332:
 6057              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 6058              		.align	1
 6059              		.p2align 2,,3
ARM GAS  /tmp/cc6JDs4t.s 			page 365


 6060              		.global	HAL_ADC_Stop
 6061              		.syntax unified
 6062              		.thumb
 6063              		.thumb_func
 6064              		.fpu fpv5-d16
 6066              	HAL_ADC_Stop:
 6067              	.LVL425:
 6068              	.LFB336:
1528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6069              		.loc 1 1528 1 is_stmt 1 view -0
 6070              		.cfi_startproc
 6071              		@ args = 0, pretend = 0, frame = 0
 6072              		@ frame_needed = 0, uses_anonymous_args = 0
1529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6073              		.loc 1 1529 3 view .LVU1873
1532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6074              		.loc 1 1532 3 view .LVU1874
1535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6075              		.loc 1 1535 3 view .LVU1875
1535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6076              		.loc 1 1535 3 view .LVU1876
 6077 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 6078 0004 012B     		cmp	r3, #1
 6079 0006 1BD0     		beq	.L620
1535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6080              		.loc 1 1535 3 discriminator 2 view .LVU1877
 6081 0008 0123     		movs	r3, #1
1538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6082              		.loc 1 1538 20 is_stmt 0 discriminator 2 view .LVU1878
 6083 000a 0321     		movs	r1, #3
1528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6084              		.loc 1 1528 1 discriminator 2 view .LVU1879
 6085 000c 10B5     		push	{r4, lr}
 6086              	.LCFI32:
 6087              		.cfi_def_cfa_offset 8
 6088              		.cfi_offset 4, -8
 6089              		.cfi_offset 14, -4
1535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6090              		.loc 1 1535 3 discriminator 2 view .LVU1880
 6091 000e 80F85030 		strb	r3, [r0, #80]
1535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6092              		.loc 1 1535 3 is_stmt 1 discriminator 2 view .LVU1881
1538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6093              		.loc 1 1538 3 discriminator 2 view .LVU1882
 6094 0012 0446     		mov	r4, r0
1538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6095              		.loc 1 1538 20 is_stmt 0 discriminator 2 view .LVU1883
 6096 0014 FFF7FEFF 		bl	ADC_ConversionStop
 6097              	.LVL426:
1541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6098              		.loc 1 1541 3 is_stmt 1 discriminator 2 view .LVU1884
1541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6099              		.loc 1 1541 6 is_stmt 0 discriminator 2 view .LVU1885
 6100 0018 18B1     		cbz	r0, .L625
 6101              	.L619:
1557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6102              		.loc 1 1557 3 is_stmt 1 view .LVU1886
ARM GAS  /tmp/cc6JDs4t.s 			page 366


1557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6103              		.loc 1 1557 3 view .LVU1887
 6104 001a 0023     		movs	r3, #0
 6105 001c 84F85030 		strb	r3, [r4, #80]
1557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6106              		.loc 1 1557 3 view .LVU1888
1560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 6107              		.loc 1 1560 3 view .LVU1889
1561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6108              		.loc 1 1561 1 is_stmt 0 view .LVU1890
 6109 0020 10BD     		pop	{r4, pc}
 6110              	.LVL427:
 6111              	.L625:
1544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6112              		.loc 1 1544 5 is_stmt 1 view .LVU1891
1544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6113              		.loc 1 1544 22 is_stmt 0 view .LVU1892
 6114 0022 2046     		mov	r0, r4
 6115              	.LVL428:
1544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6116              		.loc 1 1544 22 view .LVU1893
 6117 0024 FFF7FEFF 		bl	ADC_Disable
 6118              	.LVL429:
1547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6119              		.loc 1 1547 5 is_stmt 1 view .LVU1894
1547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6120              		.loc 1 1547 8 is_stmt 0 view .LVU1895
 6121 0028 0028     		cmp	r0, #0
 6122 002a F6D1     		bne	.L619
1550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 6123              		.loc 1 1550 7 is_stmt 1 view .LVU1896
 6124 002c 626D     		ldr	r2, [r4, #84]
 6125 002e 054B     		ldr	r3, .L626
 6126 0030 1340     		ands	r3, r3, r2
 6127 0032 43F00103 		orr	r3, r3, #1
 6128 0036 6365     		str	r3, [r4, #84]
1557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6129              		.loc 1 1557 3 view .LVU1897
1557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6130              		.loc 1 1557 3 view .LVU1898
 6131 0038 0023     		movs	r3, #0
 6132 003a 84F85030 		strb	r3, [r4, #80]
1557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6133              		.loc 1 1557 3 view .LVU1899
1560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 6134              		.loc 1 1560 3 view .LVU1900
1561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6135              		.loc 1 1561 1 is_stmt 0 view .LVU1901
 6136 003e 10BD     		pop	{r4, pc}
 6137              	.LVL430:
 6138              	.L620:
 6139              	.LCFI33:
 6140              		.cfi_def_cfa_offset 0
 6141              		.cfi_restore 4
 6142              		.cfi_restore 14
1535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6143              		.loc 1 1535 3 view .LVU1902
ARM GAS  /tmp/cc6JDs4t.s 			page 367


 6144 0040 0220     		movs	r0, #2
 6145              	.LVL431:
1561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6146              		.loc 1 1561 1 view .LVU1903
 6147 0042 7047     		bx	lr
 6148              	.L627:
 6149              		.align	2
 6150              	.L626:
 6151 0044 FEEEFFFF 		.word	-4354
 6152              		.cfi_endproc
 6153              	.LFE336:
 6155              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 6156              		.align	1
 6157              		.p2align 2,,3
 6158              		.global	HAL_ADC_Stop_IT
 6159              		.syntax unified
 6160              		.thumb
 6161              		.thumb_func
 6162              		.fpu fpv5-d16
 6164              	HAL_ADC_Stop_IT:
 6165              	.LVL432:
 6166              	.LFB340:
2069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6167              		.loc 1 2069 1 is_stmt 1 view -0
 6168              		.cfi_startproc
 6169              		@ args = 0, pretend = 0, frame = 0
 6170              		@ frame_needed = 0, uses_anonymous_args = 0
2070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6171              		.loc 1 2070 3 view .LVU1905
2073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6172              		.loc 1 2073 3 view .LVU1906
2076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6173              		.loc 1 2076 3 view .LVU1907
2076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6174              		.loc 1 2076 3 view .LVU1908
 6175 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 6176 0004 012B     		cmp	r3, #1
 6177 0006 20D0     		beq	.L631
2076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6178              		.loc 1 2076 3 discriminator 2 view .LVU1909
 6179 0008 0123     		movs	r3, #1
2079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6180              		.loc 1 2079 20 is_stmt 0 discriminator 2 view .LVU1910
 6181 000a 0321     		movs	r1, #3
2069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6182              		.loc 1 2069 1 discriminator 2 view .LVU1911
 6183 000c 10B5     		push	{r4, lr}
 6184              	.LCFI34:
 6185              		.cfi_def_cfa_offset 8
 6186              		.cfi_offset 4, -8
 6187              		.cfi_offset 14, -4
2076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6188              		.loc 1 2076 3 discriminator 2 view .LVU1912
 6189 000e 80F85030 		strb	r3, [r0, #80]
2076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6190              		.loc 1 2076 3 is_stmt 1 discriminator 2 view .LVU1913
2079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  /tmp/cc6JDs4t.s 			page 368


 6191              		.loc 1 2079 3 discriminator 2 view .LVU1914
 6192 0012 0446     		mov	r4, r0
2079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6193              		.loc 1 2079 20 is_stmt 0 discriminator 2 view .LVU1915
 6194 0014 FFF7FEFF 		bl	ADC_ConversionStop
 6195              	.LVL433:
2082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6196              		.loc 1 2082 3 is_stmt 1 discriminator 2 view .LVU1916
2082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6197              		.loc 1 2082 6 is_stmt 0 discriminator 2 view .LVU1917
 6198 0018 18B1     		cbz	r0, .L636
 6199              	.L630:
2102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6200              		.loc 1 2102 3 is_stmt 1 view .LVU1918
2102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6201              		.loc 1 2102 3 view .LVU1919
 6202 001a 0023     		movs	r3, #0
 6203 001c 84F85030 		strb	r3, [r4, #80]
2102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6204              		.loc 1 2102 3 view .LVU1920
2105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 6205              		.loc 1 2105 3 view .LVU1921
2106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6206              		.loc 1 2106 1 is_stmt 0 view .LVU1922
 6207 0020 10BD     		pop	{r4, pc}
 6208              	.LVL434:
 6209              	.L636:
2086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6210              		.loc 1 2086 5 is_stmt 1 view .LVU1923
 6211 0022 2268     		ldr	r2, [r4]
2089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6212              		.loc 1 2089 22 is_stmt 0 view .LVU1924
 6213 0024 2046     		mov	r0, r4
 6214              	.LVL435:
2086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6215              		.loc 1 2086 5 view .LVU1925
 6216 0026 5368     		ldr	r3, [r2, #4]
 6217 0028 23F01C03 		bic	r3, r3, #28
 6218 002c 5360     		str	r3, [r2, #4]
2089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6219              		.loc 1 2089 5 is_stmt 1 view .LVU1926
2089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6220              		.loc 1 2089 22 is_stmt 0 view .LVU1927
 6221 002e FFF7FEFF 		bl	ADC_Disable
 6222              	.LVL436:
2092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6223              		.loc 1 2092 5 is_stmt 1 view .LVU1928
2092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6224              		.loc 1 2092 8 is_stmt 0 view .LVU1929
 6225 0032 0028     		cmp	r0, #0
 6226 0034 F1D1     		bne	.L630
2095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 6227              		.loc 1 2095 7 is_stmt 1 view .LVU1930
 6228 0036 626D     		ldr	r2, [r4, #84]
 6229 0038 054B     		ldr	r3, .L637
 6230 003a 1340     		ands	r3, r3, r2
 6231 003c 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/cc6JDs4t.s 			page 369


 6232 0040 6365     		str	r3, [r4, #84]
2102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6233              		.loc 1 2102 3 view .LVU1931
2102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6234              		.loc 1 2102 3 view .LVU1932
 6235 0042 0023     		movs	r3, #0
 6236 0044 84F85030 		strb	r3, [r4, #80]
2102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6237              		.loc 1 2102 3 view .LVU1933
2105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 6238              		.loc 1 2105 3 view .LVU1934
2106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6239              		.loc 1 2106 1 is_stmt 0 view .LVU1935
 6240 0048 10BD     		pop	{r4, pc}
 6241              	.LVL437:
 6242              	.L631:
 6243              	.LCFI35:
 6244              		.cfi_def_cfa_offset 0
 6245              		.cfi_restore 4
 6246              		.cfi_restore 14
2076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6247              		.loc 1 2076 3 view .LVU1936
 6248 004a 0220     		movs	r0, #2
 6249              	.LVL438:
2106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6250              		.loc 1 2106 1 view .LVU1937
 6251 004c 7047     		bx	lr
 6252              	.L638:
 6253 004e 00BF     		.align	2
 6254              	.L637:
 6255 0050 FEEEFFFF 		.word	-4354
 6256              		.cfi_endproc
 6257              	.LFE340:
 6259              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 6260              		.align	1
 6261              		.p2align 2,,3
 6262              		.global	HAL_ADC_Stop_DMA
 6263              		.syntax unified
 6264              		.thumb
 6265              		.thumb_func
 6266              		.fpu fpv5-d16
 6268              	HAL_ADC_Stop_DMA:
 6269              	.LVL439:
 6270              	.LFB342:
2269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6271              		.loc 1 2269 1 is_stmt 1 view -0
 6272              		.cfi_startproc
 6273              		@ args = 0, pretend = 0, frame = 0
 6274              		@ frame_needed = 0, uses_anonymous_args = 0
2270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6275              		.loc 1 2270 3 view .LVU1939
2273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6276              		.loc 1 2273 3 view .LVU1940
2276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6277              		.loc 1 2276 3 view .LVU1941
2276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6278              		.loc 1 2276 3 view .LVU1942
ARM GAS  /tmp/cc6JDs4t.s 			page 370


2269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6279              		.loc 1 2269 1 is_stmt 0 view .LVU1943
 6280 0000 38B5     		push	{r3, r4, r5, lr}
 6281              	.LCFI36:
 6282              		.cfi_def_cfa_offset 16
 6283              		.cfi_offset 3, -16
 6284              		.cfi_offset 4, -12
 6285              		.cfi_offset 5, -8
 6286              		.cfi_offset 14, -4
2276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6287              		.loc 1 2276 3 view .LVU1944
 6288 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 6289 0006 012B     		cmp	r3, #1
 6290 0008 26D0     		beq	.L645
2276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6291              		.loc 1 2276 3 is_stmt 1 discriminator 2 view .LVU1945
 6292 000a 0123     		movs	r3, #1
2279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6293              		.loc 1 2279 20 is_stmt 0 discriminator 2 view .LVU1946
 6294 000c 0321     		movs	r1, #3
 6295 000e 0446     		mov	r4, r0
2276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6296              		.loc 1 2276 3 discriminator 2 view .LVU1947
 6297 0010 80F85030 		strb	r3, [r0, #80]
2276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6298              		.loc 1 2276 3 is_stmt 1 discriminator 2 view .LVU1948
2279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6299              		.loc 1 2279 3 discriminator 2 view .LVU1949
2279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6300              		.loc 1 2279 20 is_stmt 0 discriminator 2 view .LVU1950
 6301 0014 FFF7FEFF 		bl	ADC_ConversionStop
 6302              	.LVL440:
2282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6303              		.loc 1 2282 3 is_stmt 1 discriminator 2 view .LVU1951
2282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6304              		.loc 1 2282 6 is_stmt 0 discriminator 2 view .LVU1952
 6305 0018 0546     		mov	r5, r0
 6306 001a C0B9     		cbnz	r0, .L641
2285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6307              		.loc 1 2285 5 is_stmt 1 view .LVU1953
 6308 001c 2368     		ldr	r3, [r4]
2289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6309              		.loc 1 2289 13 is_stmt 0 view .LVU1954
 6310 001e E06C     		ldr	r0, [r4, #76]
 6311              	.LVL441:
2285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6312              		.loc 1 2285 5 view .LVU1955
 6313 0020 DA68     		ldr	r2, [r3, #12]
 6314 0022 22F00302 		bic	r2, r2, #3
 6315 0026 DA60     		str	r2, [r3, #12]
2289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6316              		.loc 1 2289 5 is_stmt 1 view .LVU1956
2289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6317              		.loc 1 2289 25 is_stmt 0 view .LVU1957
 6318 0028 90F83520 		ldrb	r2, [r0, #53]	@ zero_extendqisi2
2289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6319              		.loc 1 2289 8 view .LVU1958
ARM GAS  /tmp/cc6JDs4t.s 			page 371


 6320 002c 022A     		cmp	r2, #2
 6321 002e 16D0     		beq	.L642
 6322              	.LVL442:
2302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6323              		.loc 1 2302 5 is_stmt 1 view .LVU1959
 6324 0030 5A68     		ldr	r2, [r3, #4]
 6325 0032 22F01002 		bic	r2, r2, #16
 6326 0036 5A60     		str	r2, [r3, #4]
2307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6327              		.loc 1 2307 5 view .LVU1960
 6328              	.L643:
 6329              	.LVL443:
2309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6330              		.loc 1 2309 7 view .LVU1961
2309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6331              		.loc 1 2309 24 is_stmt 0 view .LVU1962
 6332 0038 2046     		mov	r0, r4
 6333 003a FFF7FEFF 		bl	ADC_Disable
 6334              	.LVL444:
2317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6335              		.loc 1 2317 5 is_stmt 1 view .LVU1963
2317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6336              		.loc 1 2317 8 is_stmt 0 view .LVU1964
 6337 003e 0546     		mov	r5, r0
 6338 0040 28B9     		cbnz	r0, .L641
2320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 6339              		.loc 1 2320 7 is_stmt 1 view .LVU1965
 6340 0042 626D     		ldr	r2, [r4, #84]
 6341 0044 114B     		ldr	r3, .L648
 6342 0046 1340     		ands	r3, r3, r2
 6343 0048 43F00103 		orr	r3, r3, #1
 6344 004c 6365     		str	r3, [r4, #84]
 6345              	.LVL445:
 6346              	.L641:
2328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6347              		.loc 1 2328 3 view .LVU1966
2328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6348              		.loc 1 2328 3 view .LVU1967
 6349 004e 0023     		movs	r3, #0
2332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6350              		.loc 1 2332 1 is_stmt 0 view .LVU1968
 6351 0050 2846     		mov	r0, r5
2328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6352              		.loc 1 2328 3 view .LVU1969
 6353 0052 84F85030 		strb	r3, [r4, #80]
2328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6354              		.loc 1 2328 3 is_stmt 1 view .LVU1970
2331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 6355              		.loc 1 2331 3 view .LVU1971
2332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6356              		.loc 1 2332 1 is_stmt 0 view .LVU1972
 6357 0056 38BD     		pop	{r3, r4, r5, pc}
 6358              	.LVL446:
 6359              	.L645:
2276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6360              		.loc 1 2276 3 view .LVU1973
 6361 0058 0225     		movs	r5, #2
ARM GAS  /tmp/cc6JDs4t.s 			page 372


2332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6362              		.loc 1 2332 1 view .LVU1974
 6363 005a 2846     		mov	r0, r5
 6364              	.LVL447:
2332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6365              		.loc 1 2332 1 view .LVU1975
 6366 005c 38BD     		pop	{r3, r4, r5, pc}
 6367              	.LVL448:
 6368              	.L642:
2291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6369              		.loc 1 2291 7 is_stmt 1 view .LVU1976
2291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6370              		.loc 1 2291 24 is_stmt 0 view .LVU1977
 6371 005e FFF7FEFF 		bl	HAL_DMA_Abort
 6372              	.LVL449:
2294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 6373              		.loc 1 2294 7 is_stmt 1 view .LVU1978
2294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 6374              		.loc 1 2294 10 is_stmt 0 view .LVU1979
 6375 0062 0546     		mov	r5, r0
 6376 0064 60B1     		cbz	r0, .L644
2297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 6377              		.loc 1 2297 9 is_stmt 1 view .LVU1980
 6378 0066 636D     		ldr	r3, [r4, #84]
2313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6379              		.loc 1 2313 13 is_stmt 0 view .LVU1981
 6380 0068 2046     		mov	r0, r4
 6381              	.LVL450:
2302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6382              		.loc 1 2302 5 view .LVU1982
 6383 006a 2268     		ldr	r2, [r4]
2297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 6384              		.loc 1 2297 9 view .LVU1983
 6385 006c 43F04003 		orr	r3, r3, #64
 6386 0070 6365     		str	r3, [r4, #84]
 6387              	.LVL451:
2302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6388              		.loc 1 2302 5 is_stmt 1 view .LVU1984
 6389 0072 5368     		ldr	r3, [r2, #4]
 6390 0074 23F01003 		bic	r3, r3, #16
 6391 0078 5360     		str	r3, [r2, #4]
2307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6392              		.loc 1 2307 5 view .LVU1985
2313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6393              		.loc 1 2313 7 view .LVU1986
2313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6394              		.loc 1 2313 13 is_stmt 0 view .LVU1987
 6395 007a FFF7FEFF 		bl	ADC_Disable
 6396              	.LVL452:
2317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6397              		.loc 1 2317 5 is_stmt 1 view .LVU1988
 6398 007e E6E7     		b	.L641
 6399              	.LVL453:
 6400              	.L644:
2302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6401              		.loc 1 2302 5 view .LVU1989
 6402 0080 2268     		ldr	r2, [r4]
ARM GAS  /tmp/cc6JDs4t.s 			page 373


 6403 0082 5368     		ldr	r3, [r2, #4]
 6404 0084 23F01003 		bic	r3, r3, #16
 6405 0088 5360     		str	r3, [r2, #4]
2307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6406              		.loc 1 2307 5 view .LVU1990
 6407 008a D5E7     		b	.L643
 6408              	.L649:
 6409              		.align	2
 6410              	.L648:
 6411 008c FEEEFFFF 		.word	-4354
 6412              		.cfi_endproc
 6413              	.LFE342:
 6415              		.section	.text.ADC_ConfigureBoostMode,"ax",%progbits
 6416              		.align	1
 6417              		.p2align 2,,3
 6418              		.global	ADC_ConfigureBoostMode
 6419              		.syntax unified
 6420              		.thumb
 6421              		.thumb_func
 6422              		.fpu fpv5-d16
 6424              	ADC_ConfigureBoostMode:
 6425              	.LVL454:
 6426              	.LFB359:
3935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Configure boost mode of selected ADC.
3938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
3939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         stopped.
3940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc ADC handle
3941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None.
3942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** void ADC_ConfigureBoostMode(ADC_HandleTypeDef *hadc)
3944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 6427              		.loc 1 3944 1 view -0
 6428              		.cfi_startproc
 6429              		@ args = 0, pretend = 0, frame = 0
 6430              		@ frame_needed = 0, uses_anonymous_args = 0
3945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t freq;
 6431              		.loc 1 3945 3 view .LVU1992
3946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (ADC_IS_SYNCHRONOUS_CLOCK_MODE(hadc))
 6432              		.loc 1 3946 3 view .LVU1993
3944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t freq;
 6433              		.loc 1 3944 1 is_stmt 0 view .LVU1994
 6434 0000 38B5     		push	{r3, r4, r5, lr}
 6435              	.LCFI37:
 6436              		.cfi_def_cfa_offset 16
 6437              		.cfi_offset 3, -16
 6438              		.cfi_offset 4, -12
 6439              		.cfi_offset 5, -8
 6440              		.cfi_offset 14, -4
 6441              		.loc 1 3946 7 view .LVU1995
 6442 0002 5A4A     		ldr	r2, .L702
3944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t freq;
 6443              		.loc 1 3944 1 view .LVU1996
 6444 0004 0446     		mov	r4, r0
 6445              		.loc 1 3946 7 view .LVU1997
 6446 0006 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cc6JDs4t.s 			page 374


 6447 0008 9342     		cmp	r3, r2
 6448 000a 29D0     		beq	.L676
 6449 000c 02F58072 		add	r2, r2, #256
 6450 0010 9342     		cmp	r3, r2
 6451 0012 25D0     		beq	.L676
 6452              		.loc 1 3946 7 discriminator 2 view .LVU1998
 6453 0014 564B     		ldr	r3, .L702+4
 6454 0016 9B68     		ldr	r3, [r3, #8]
 6455 0018 13F4403F 		tst	r3, #196608
 6456 001c 14BF     		ite	ne
 6457 001e 0123     		movne	r3, #1
 6458 0020 0023     		moveq	r3, #0
 6459              		.loc 1 3946 6 discriminator 2 view .LVU1999
 6460 0022 33B3     		cbz	r3, .L654
 6461              	.L697:
3947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     freq = HAL_RCC_GetHCLKFreq();
 6462              		.loc 1 3948 5 is_stmt 1 view .LVU2000
 6463              		.loc 1 3948 12 is_stmt 0 view .LVU2001
 6464 0024 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 6465              	.LVL455:
3949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (hadc->Init.ClockPrescaler)
 6466              		.loc 1 3949 23 view .LVU2002
 6467 0028 6368     		ldr	r3, [r4, #4]
3948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (hadc->Init.ClockPrescaler)
 6468              		.loc 1 3948 12 view .LVU2003
 6469 002a 0546     		mov	r5, r0
 6470              	.LVL456:
 6471              		.loc 1 3949 5 is_stmt 1 view .LVU2004
 6472 002c B3F5003F 		cmp	r3, #131072
 6473 0030 00F08B80 		beq	.L655
 6474 0034 B3F5403F 		cmp	r3, #196608
 6475 0038 6FD0     		beq	.L656
 6476 003a B3F5803F 		cmp	r3, #65536
 6477 003e 00F08480 		beq	.L655
 6478              	.LVL457:
 6479              	.L657:
3950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_SYNC_PCLK_DIV1:
3952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_SYNC_PCLK_DIV2:
3953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         freq /= (hadc->Init.ClockPrescaler >> ADC_CCR_CKMODE_Pos);
3954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_SYNC_PCLK_DIV4:
3956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         freq /= 4UL;
3957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default:
3959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
3963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     freq = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC);
3965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (hadc->Init.ClockPrescaler)
3966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV2:
3968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV4:
3969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV6:
ARM GAS  /tmp/cc6JDs4t.s 			page 375


3970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV8:
3971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV10:
3972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV12:
3973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         freq /= ((hadc->Init.ClockPrescaler >> ADC_CCR_PRESC_Pos) << 1UL);
3974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV16:
3976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         freq /= 16UL;
3977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV32:
3979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         freq /= 32UL;
3980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV64:
3982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         freq /= 64UL;
3983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV128:
3985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         freq /= 128UL;
3986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV256:
3988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         freq /= 256UL;
3989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default:
3991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_3) || defined(ADC_VER_V5_V90)
3996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   freq /= 2U;
3997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (freq <= 6250000UL)
3998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, 0UL);
4000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
4001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else if (freq <= 12500000UL)
4002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
4003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_0);
4004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
4005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else if (freq <= 25000000UL)
4006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
4007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1);
4008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
4009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else /* if(freq > 25000000UL) */
4010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
4011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
4012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
4013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
4014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (HAL_GetREVID() <= REV_ID_Y) /* STM32H7 silicon Rev.Y */
 6480              		.loc 1 4014 3 view .LVU2005
 6481              		.loc 1 4014 7 is_stmt 0 view .LVU2006
 6482 0042 FFF7FEFF 		bl	HAL_GetREVID
 6483              	.LVL458:
 6484              		.loc 1 4014 6 view .LVU2007
 6485 0046 41F20303 		movw	r3, #4099
 6486 004a 9842     		cmp	r0, r3
 6487 004c 4ED8     		bhi	.L669
 6488              	.L701:
4015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
4016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (freq > 20000000UL)
 6489              		.loc 1 4016 5 is_stmt 1 view .LVU2008
ARM GAS  /tmp/cc6JDs4t.s 			page 376


 6490              		.loc 1 4016 8 is_stmt 0 view .LVU2009
 6491 004e 494B     		ldr	r3, .L702+8
 6492 0050 9D42     		cmp	r5, r3
 6493 0052 2DD9     		bls	.L667
4017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
4018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR, ADC_CR_BOOST_0);
 6494              		.loc 1 4018 7 is_stmt 1 view .LVU2010
 6495 0054 2268     		ldr	r2, [r4]
 6496 0056 9368     		ldr	r3, [r2, #8]
 6497 0058 43F48073 		orr	r3, r3, #256
 6498 005c 9360     		str	r3, [r2, #8]
4019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
4020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
4021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
4022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->CR, ADC_CR_BOOST_0);
4023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
4024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
4025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else /* STM32H7 silicon Rev.V */
4026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
4027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     freq /= 2U; /* divider by 2 for Rev.V */
4028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
4029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (freq <= 6250000UL)
4030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
4031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, 0UL);
4032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
4033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else if (freq <= 12500000UL)
4034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
4035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_0);
4036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
4037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else if (freq <= 25000000UL)
4038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
4039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1);
4040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
4041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else /* if(freq > 25000000UL) */
4042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
4043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
4044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
4045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
4046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_3 */
4047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 6499              		.loc 1 4047 1 is_stmt 0 view .LVU2011
 6500 005e 38BD     		pop	{r3, r4, r5, pc}
 6501              	.LVL459:
 6502              	.L676:
3946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6503              		.loc 1 3946 7 discriminator 1 view .LVU2012
 6504 0060 454B     		ldr	r3, .L702+12
 6505 0062 9B68     		ldr	r3, [r3, #8]
 6506 0064 13F4403F 		tst	r3, #196608
 6507 0068 14BF     		ite	ne
 6508 006a 0123     		movne	r3, #1
 6509 006c 0023     		moveq	r3, #0
3946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6510              		.loc 1 3946 6 discriminator 1 view .LVU2013
 6511 006e 002B     		cmp	r3, #0
 6512 0070 D8D1     		bne	.L697
 6513              	.L654:
ARM GAS  /tmp/cc6JDs4t.s 			page 377


3964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (hadc->Init.ClockPrescaler)
 6514              		.loc 1 3964 5 is_stmt 1 view .LVU2014
3964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (hadc->Init.ClockPrescaler)
 6515              		.loc 1 3964 12 is_stmt 0 view .LVU2015
 6516 0072 4FF40020 		mov	r0, #524288
 6517              	.LVL460:
3964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (hadc->Init.ClockPrescaler)
 6518              		.loc 1 3964 12 view .LVU2016
 6519 0076 FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 6520              	.LVL461:
3965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6521              		.loc 1 3965 23 view .LVU2017
 6522 007a 6368     		ldr	r3, [r4, #4]
3964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (hadc->Init.ClockPrescaler)
 6523              		.loc 1 3964 12 view .LVU2018
 6524 007c 0546     		mov	r5, r0
 6525              	.LVL462:
3965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6526              		.loc 1 3965 5 is_stmt 1 view .LVU2019
 6527 007e B3F5101F 		cmp	r3, #2359296
 6528 0082 6CD0     		beq	.L658
 6529 0084 08D8     		bhi	.L659
 6530 0086 B3F5E01F 		cmp	r3, #1835008
 6531 008a 50D0     		beq	.L660
 6532 008c 16D9     		bls	.L698
 6533 008e B3F5001F 		cmp	r3, #2097152
 6534 0092 D6D1     		bne	.L657
3979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6535              		.loc 1 3979 9 view .LVU2020
3979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6536              		.loc 1 3979 14 is_stmt 0 view .LVU2021
 6537 0094 4509     		lsrs	r5, r0, #5
 6538              	.LVL463:
3980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV64:
 6539              		.loc 1 3980 9 is_stmt 1 view .LVU2022
 6540 0096 D4E7     		b	.L657
 6541              	.LVL464:
 6542              	.L659:
3965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6543              		.loc 1 3965 5 is_stmt 0 view .LVU2023
 6544 0098 B3F5201F 		cmp	r3, #2621440
 6545 009c 45D0     		beq	.L665
 6546 009e B3F5301F 		cmp	r3, #2883584
 6547 00a2 CED1     		bne	.L657
3988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6548              		.loc 1 3988 9 is_stmt 1 view .LVU2024
 6549              	.LVL465:
3989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default:
 6550              		.loc 1 3989 9 view .LVU2025
4014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6551              		.loc 1 4014 3 view .LVU2026
4014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6552              		.loc 1 4014 7 is_stmt 0 view .LVU2027
 6553 00a4 FFF7FEFF 		bl	HAL_GetREVID
 6554              	.LVL466:
4014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6555              		.loc 1 4014 6 view .LVU2028
ARM GAS  /tmp/cc6JDs4t.s 			page 378


 6556 00a8 41F20303 		movw	r3, #4099
 6557 00ac 9842     		cmp	r0, r3
 6558 00ae 40D8     		bhi	.L699
 6559              	.LVL467:
 6560              	.L667:
4022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6561              		.loc 1 4022 7 is_stmt 1 view .LVU2029
 6562 00b0 2268     		ldr	r2, [r4]
 6563 00b2 9368     		ldr	r3, [r2, #8]
 6564 00b4 23F48073 		bic	r3, r3, #256
 6565 00b8 9360     		str	r3, [r2, #8]
 6566              		.loc 1 4047 1 is_stmt 0 view .LVU2030
 6567 00ba 38BD     		pop	{r3, r4, r5, pc}
 6568              	.LVL468:
 6569              	.L698:
3965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6570              		.loc 1 3965 5 view .LVU2031
 6571 00bc B3F5801F 		cmp	r3, #1048576
 6572 00c0 06D0     		beq	.L662
 6573 00c2 0AD9     		bls	.L700
 6574 00c4 B3F5A01F 		cmp	r3, #1310720
 6575 00c8 02D0     		beq	.L662
 6576 00ca B3F5C01F 		cmp	r3, #1572864
 6577 00ce B8D1     		bne	.L657
 6578              	.L662:
3973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6579              		.loc 1 3973 9 is_stmt 1 view .LVU2032
3973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6580              		.loc 1 3973 45 is_stmt 0 view .LVU2033
 6581 00d0 9B0C     		lsrs	r3, r3, #18
3973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6582              		.loc 1 3973 67 view .LVU2034
 6583 00d2 5B00     		lsls	r3, r3, #1
3973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6584              		.loc 1 3973 14 view .LVU2035
 6585 00d4 B5FBF3F5 		udiv	r5, r5, r3
 6586              	.LVL469:
3974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV16:
 6587              		.loc 1 3974 9 is_stmt 1 view .LVU2036
 6588 00d8 B3E7     		b	.L657
 6589              	.LVL470:
 6590              	.L700:
3965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6591              		.loc 1 3965 5 is_stmt 0 view .LVU2037
 6592 00da B3F5002F 		cmp	r3, #524288
 6593 00de F7D0     		beq	.L662
 6594 00e0 23F40022 		bic	r2, r3, #524288
 6595 00e4 B2F5802F 		cmp	r2, #262144
 6596 00e8 F2D0     		beq	.L662
 6597 00ea AAE7     		b	.L657
 6598              	.LVL471:
 6599              	.L669:
4027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6600              		.loc 1 4027 5 is_stmt 1 view .LVU2038
4029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6601              		.loc 1 4029 5 view .LVU2039
4029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
ARM GAS  /tmp/cc6JDs4t.s 			page 379


 6602              		.loc 1 4029 8 is_stmt 0 view .LVU2040
 6603 00ec 234B     		ldr	r3, .L702+16
 6604 00ee 9D42     		cmp	r5, r3
 6605 00f0 05D8     		bhi	.L671
 6606              	.LVL472:
 6607              	.L674:
4031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6608              		.loc 1 4031 7 is_stmt 1 view .LVU2041
 6609 00f2 2268     		ldr	r2, [r4]
 6610 00f4 9368     		ldr	r3, [r2, #8]
 6611 00f6 23F44073 		bic	r3, r3, #768
 6612 00fa 9360     		str	r3, [r2, #8]
 6613              		.loc 1 4047 1 is_stmt 0 view .LVU2042
 6614 00fc 38BD     		pop	{r3, r4, r5, pc}
 6615              	.LVL473:
 6616              	.L671:
4033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6617              		.loc 1 4033 10 is_stmt 1 view .LVU2043
4033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6618              		.loc 1 4033 13 is_stmt 0 view .LVU2044
 6619 00fe 204B     		ldr	r3, .L702+20
 6620 0100 9D42     		cmp	r5, r3
 6621 0102 1AD9     		bls	.L675
4037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6622              		.loc 1 4037 10 is_stmt 1 view .LVU2045
4037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6623              		.loc 1 4037 13 is_stmt 0 view .LVU2046
 6624 0104 1F4B     		ldr	r3, .L702+24
4039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6625              		.loc 1 4039 7 view .LVU2047
 6626 0106 2268     		ldr	r2, [r4]
4037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6627              		.loc 1 4037 13 view .LVU2048
 6628 0108 9D42     		cmp	r5, r3
4039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6629              		.loc 1 4039 7 view .LVU2049
 6630 010a 9368     		ldr	r3, [r2, #8]
4037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6631              		.loc 1 4037 13 view .LVU2050
 6632 010c 29D8     		bhi	.L673
4039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6633              		.loc 1 4039 7 is_stmt 1 view .LVU2051
 6634 010e 23F44073 		bic	r3, r3, #768
 6635 0112 43F40073 		orr	r3, r3, #512
 6636 0116 9360     		str	r3, [r2, #8]
 6637              		.loc 1 4047 1 is_stmt 0 view .LVU2052
 6638 0118 38BD     		pop	{r3, r4, r5, pc}
 6639              	.LVL474:
 6640              	.L656:
3956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6641              		.loc 1 3956 9 is_stmt 1 view .LVU2053
3956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6642              		.loc 1 3956 14 is_stmt 0 view .LVU2054
 6643 011a 8508     		lsrs	r5, r0, #2
 6644              	.LVL475:
3957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default:
 6645              		.loc 1 3957 9 is_stmt 1 view .LVU2055
ARM GAS  /tmp/cc6JDs4t.s 			page 380


4014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6646              		.loc 1 4014 3 view .LVU2056
4014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6647              		.loc 1 4014 7 is_stmt 0 view .LVU2057
 6648 011c FFF7FEFF 		bl	HAL_GetREVID
 6649              	.LVL476:
4014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6650              		.loc 1 4014 6 view .LVU2058
 6651 0120 41F20303 		movw	r3, #4099
 6652 0124 9842     		cmp	r0, r3
 6653 0126 E1D8     		bhi	.L669
 6654 0128 91E7     		b	.L701
 6655              	.LVL477:
 6656              	.L665:
3985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6657              		.loc 1 3985 9 is_stmt 1 view .LVU2059
3985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6658              		.loc 1 3985 14 is_stmt 0 view .LVU2060
 6659 012a C509     		lsrs	r5, r0, #7
 6660              	.LVL478:
3986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV256:
 6661              		.loc 1 3986 9 is_stmt 1 view .LVU2061
 6662 012c 89E7     		b	.L657
 6663              	.LVL479:
 6664              	.L660:
3976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6665              		.loc 1 3976 9 view .LVU2062
3976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6666              		.loc 1 3976 14 is_stmt 0 view .LVU2063
 6667 012e 0509     		lsrs	r5, r0, #4
 6668              	.LVL480:
3977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV32:
 6669              		.loc 1 3977 9 is_stmt 1 view .LVU2064
 6670 0130 87E7     		b	.L657
 6671              	.LVL481:
 6672              	.L699:
4027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6673              		.loc 1 4027 5 view .LVU2065
4029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6674              		.loc 1 4029 5 view .LVU2066
4029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6675              		.loc 1 4029 8 is_stmt 0 view .LVU2067
 6676 0132 124B     		ldr	r3, .L702+16
 6677 0134 B3EB152F 		cmp	r3, r5, lsr #8
 6678 0138 DBD2     		bcs	.L674
 6679              	.LVL482:
 6680              	.L675:
4035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6681              		.loc 1 4035 7 is_stmt 1 view .LVU2068
 6682 013a 2268     		ldr	r2, [r4]
 6683 013c 9368     		ldr	r3, [r2, #8]
 6684 013e 23F44073 		bic	r3, r3, #768
 6685 0142 43F48073 		orr	r3, r3, #256
 6686 0146 9360     		str	r3, [r2, #8]
 6687              		.loc 1 4047 1 is_stmt 0 view .LVU2069
 6688 0148 38BD     		pop	{r3, r4, r5, pc}
 6689              	.LVL483:
ARM GAS  /tmp/cc6JDs4t.s 			page 381


 6690              	.L655:
3953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6691              		.loc 1 3953 9 is_stmt 1 view .LVU2070
3953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6692              		.loc 1 3953 44 is_stmt 0 view .LVU2071
 6693 014a 1B0C     		lsrs	r3, r3, #16
3953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6694              		.loc 1 3953 14 view .LVU2072
 6695 014c B5FBF3F5 		udiv	r5, r5, r3
 6696              	.LVL484:
3954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_SYNC_PCLK_DIV4:
 6697              		.loc 1 3954 9 is_stmt 1 view .LVU2073
4014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6698              		.loc 1 4014 3 view .LVU2074
4014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6699              		.loc 1 4014 7 is_stmt 0 view .LVU2075
 6700 0150 FFF7FEFF 		bl	HAL_GetREVID
 6701              	.LVL485:
4014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6702              		.loc 1 4014 6 view .LVU2076
 6703 0154 41F20303 		movw	r3, #4099
 6704 0158 9842     		cmp	r0, r3
 6705 015a C7D8     		bhi	.L669
 6706 015c 77E7     		b	.L701
 6707              	.LVL486:
 6708              	.L658:
3982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6709              		.loc 1 3982 9 is_stmt 1 view .LVU2077
3982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6710              		.loc 1 3982 14 is_stmt 0 view .LVU2078
 6711 015e 8509     		lsrs	r5, r0, #6
 6712              	.LVL487:
3983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV128:
 6713              		.loc 1 3983 9 is_stmt 1 view .LVU2079
 6714 0160 6FE7     		b	.L657
 6715              	.LVL488:
 6716              	.L673:
4043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6717              		.loc 1 4043 7 view .LVU2080
 6718 0162 43F44073 		orr	r3, r3, #768
 6719 0166 9360     		str	r3, [r2, #8]
 6720              		.loc 1 4047 1 is_stmt 0 view .LVU2081
 6721 0168 38BD     		pop	{r3, r4, r5, pc}
 6722              	.LVL489:
 6723              	.L703:
 6724              		.loc 1 4047 1 view .LVU2082
 6725 016a 00BF     		.align	2
 6726              	.L702:
 6727 016c 00200240 		.word	1073881088
 6728 0170 00630258 		.word	1476551424
 6729 0174 002D3101 		.word	20000000
 6730 0178 00230240 		.word	1073881856
 6731 017c 21BCBE00 		.word	12500001
 6732 0180 41787D01 		.word	25000001
 6733 0184 81F0FA02 		.word	50000001
 6734              		.cfi_endproc
 6735              	.LFE359:
ARM GAS  /tmp/cc6JDs4t.s 			page 382


 6737              		.section	.text.HAL_ADC_Init,"ax",%progbits
 6738              		.align	1
 6739              		.p2align 2,,3
 6740              		.global	HAL_ADC_Init
 6741              		.syntax unified
 6742              		.thumb
 6743              		.thumb_func
 6744              		.fpu fpv5-d16
 6746              	HAL_ADC_Init:
 6747              	.LVL490:
 6748              	.LFB331:
 417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 6749              		.loc 1 417 1 is_stmt 1 view -0
 6750              		.cfi_startproc
 6751              		@ args = 0, pretend = 0, frame = 8
 6752              		@ frame_needed = 0, uses_anonymous_args = 0
 418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpCFGR;
 6753              		.loc 1 418 3 view .LVU2084
 419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 6754              		.loc 1 419 3 view .LVU2085
 420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 6755              		.loc 1 420 3 view .LVU2086
 421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 6756              		.loc 1 421 3 view .LVU2087
 417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 6757              		.loc 1 417 1 is_stmt 0 view .LVU2088
 6758 0000 70B5     		push	{r4, r5, r6, lr}
 6759              	.LCFI38:
 6760              		.cfi_def_cfa_offset 16
 6761              		.cfi_offset 4, -16
 6762              		.cfi_offset 5, -12
 6763              		.cfi_offset 6, -8
 6764              		.cfi_offset 14, -4
 421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 6765              		.loc 1 421 17 view .LVU2089
 6766 0002 0023     		movs	r3, #0
 417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 6767              		.loc 1 417 1 view .LVU2090
 6768 0004 82B0     		sub	sp, sp, #8
 6769              	.LCFI39:
 6770              		.cfi_def_cfa_offset 24
 421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 6771              		.loc 1 421 17 view .LVU2091
 6772 0006 0193     		str	r3, [sp, #4]
 422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 6773              		.loc 1 422 3 is_stmt 1 view .LVU2092
 423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6774              		.loc 1 423 3 view .LVU2093
 426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6775              		.loc 1 426 3 view .LVU2094
 426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6776              		.loc 1 426 6 is_stmt 0 view .LVU2095
 6777 0008 0028     		cmp	r0, #0
 6778 000a 00F0D080 		beq	.L730
 432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 6779              		.loc 1 432 3 is_stmt 1 view .LVU2096
 433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
ARM GAS  /tmp/cc6JDs4t.s 			page 383


 6780              		.loc 1 433 3 view .LVU2097
 434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 6781              		.loc 1 434 3 view .LVU2098
 435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 6782              		.loc 1 435 3 view .LVU2099
 436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 6783              		.loc 1 436 3 view .LVU2100
 437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 6784              		.loc 1 437 3 view .LVU2101
 438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSIONDATAMGT(hadc->Init.ConversionDataManagement));
 6785              		.loc 1 438 3 view .LVU2102
 439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 6786              		.loc 1 439 3 view .LVU2103
 440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 6787              		.loc 1 440 3 view .LVU2104
 441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 6788              		.loc 1 441 3 view .LVU2105
 442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 6789              		.loc 1 442 3 view .LVU2106
 443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6790              		.loc 1 443 3 view .LVU2107
 445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6791              		.loc 1 445 3 view .LVU2108
 452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6792              		.loc 1 452 7 view .LVU2109
 457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6793              		.loc 1 457 3 view .LVU2110
 461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6794              		.loc 1 461 3 view .LVU2111
 461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6795              		.loc 1 461 11 is_stmt 0 view .LVU2112
 6796 000e 456D     		ldr	r5, [r0, #84]
 6797 0010 0446     		mov	r4, r0
 461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6798              		.loc 1 461 6 view .LVU2113
 6799 0012 002D     		cmp	r5, #0
 6800 0014 00F0BA80 		beq	.L750
 6801              	.LVL491:
 6802              	.L706:
 495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6803              		.loc 1 495 3 is_stmt 1 view .LVU2114
 495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6804              		.loc 1 495 7 is_stmt 0 view .LVU2115
 6805 0018 2268     		ldr	r2, [r4]
 6806              	.LVL492:
 6807              	.LBB638:
 6808              	.LBI638:
6647:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6809              		.loc 2 6647 26 is_stmt 1 view .LVU2116
 6810              	.LBB639:
6649:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6811              		.loc 2 6649 3 view .LVU2117
6649:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6812              		.loc 2 6649 12 is_stmt 0 view .LVU2118
 6813 001a 9368     		ldr	r3, [r2, #8]
6649:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6814              		.loc 2 6649 74 view .LVU2119
ARM GAS  /tmp/cc6JDs4t.s 			page 384


 6815 001c 9D00     		lsls	r5, r3, #2
 6816 001e 03D5     		bpl	.L707
 6817              	.LVL493:
6649:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6818              		.loc 2 6649 74 view .LVU2120
 6819              	.LBE639:
 6820              	.LBE638:
 498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6821              		.loc 1 498 5 is_stmt 1 view .LVU2121
 6822              	.LBB640:
 6823              	.LBI640:
6633:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6824              		.loc 2 6633 22 view .LVU2122
 6825              	.LBB641:
6638:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6826              		.loc 2 6638 3 view .LVU2123
 6827 0020 9168     		ldr	r1, [r2, #8]
 6828 0022 714B     		ldr	r3, .L754
 6829 0024 0B40     		ands	r3, r3, r1
 6830 0026 9360     		str	r3, [r2, #8]
 6831              	.LVL494:
 6832              	.L707:
6638:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6833              		.loc 2 6638 3 is_stmt 0 view .LVU2124
 6834              	.LBE641:
 6835              	.LBE640:
 505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6836              		.loc 1 505 3 is_stmt 1 view .LVU2125
 6837              	.LBB642:
 6838              	.LBI642:
6696:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6839              		.loc 2 6696 26 view .LVU2126
 6840              	.LBB643:
6698:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6841              		.loc 2 6698 3 view .LVU2127
6698:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6842              		.loc 2 6698 12 is_stmt 0 view .LVU2128
 6843 0028 9368     		ldr	r3, [r2, #8]
6698:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6844              		.loc 2 6698 76 view .LVU2129
 6845 002a D800     		lsls	r0, r3, #3
 6846 002c 16D4     		bmi	.L711
 6847              	.LVL495:
6698:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6848              		.loc 2 6698 76 view .LVU2130
 6849              	.LBE643:
 6850              	.LBE642:
 508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6851              		.loc 1 508 5 is_stmt 1 view .LVU2131
 6852              	.LBB644:
 6853              	.LBI644:
6666:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6854              		.loc 2 6666 22 view .LVU2132
 6855              	.LBB645:
6671:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 6856              		.loc 2 6671 3 view .LVU2133
 6857              	.LBE645:
ARM GAS  /tmp/cc6JDs4t.s 			page 385


 6858              	.LBE644:
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 6859              		.loc 1 513 89 is_stmt 0 view .LVU2134
 6860 002e 6F4B     		ldr	r3, .L754+4
 6861 0030 6F4D     		ldr	r5, .L754+8
 6862 0032 1B68     		ldr	r3, [r3]
 6863              	.LBB651:
 6864              	.LBB646:
6671:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 6865              		.loc 2 6671 3 view .LVU2135
 6866 0034 9068     		ldr	r0, [r2, #8]
 6867              	.LBE646:
 6868              	.LBE651:
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 6869              		.loc 1 513 89 view .LVU2136
 6870 0036 9B09     		lsrs	r3, r3, #6
 6871              	.LBB652:
 6872              	.LBB647:
6671:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 6873              		.loc 2 6671 3 view .LVU2137
 6874 0038 6E49     		ldr	r1, .L754+12
 6875              	.LBE647:
 6876              	.LBE652:
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 6877              		.loc 1 513 89 view .LVU2138
 6878 003a A5FB0353 		umull	r5, r3, r5, r3
 6879              	.LBB653:
 6880              	.LBB648:
6671:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 6881              		.loc 2 6671 3 view .LVU2139
 6882 003e 0140     		ands	r1, r1, r0
 6883              	.LBE648:
 6884              	.LBE653:
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 6885              		.loc 1 513 89 view .LVU2140
 6886 0040 9B09     		lsrs	r3, r3, #6
 6887              	.LBB654:
 6888              	.LBB649:
6671:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 6889              		.loc 2 6671 3 view .LVU2141
 6890 0042 41F08051 		orr	r1, r1, #268435456
 6891              	.LBE649:
 6892              	.LBE654:
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 6893              		.loc 1 513 69 view .LVU2142
 6894 0046 0133     		adds	r3, r3, #1
 6895              	.LBB655:
 6896              	.LBB650:
6671:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 6897              		.loc 2 6671 3 view .LVU2143
 6898 0048 9160     		str	r1, [r2, #8]
 6899              	.LVL496:
6671:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 6900              		.loc 2 6671 3 view .LVU2144
 6901              	.LBE650:
 6902              	.LBE655:
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while (wait_loop_index != 0UL)
ARM GAS  /tmp/cc6JDs4t.s 			page 386


 6903              		.loc 1 513 5 is_stmt 1 view .LVU2145
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 6904              		.loc 1 513 21 is_stmt 0 view .LVU2146
 6905 004a 0193     		str	r3, [sp, #4]
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6906              		.loc 1 514 5 is_stmt 1 view .LVU2147
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6907              		.loc 1 514 11 view .LVU2148
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6908              		.loc 1 514 28 is_stmt 0 view .LVU2149
 6909 004c 019B     		ldr	r3, [sp, #4]
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6910              		.loc 1 514 11 view .LVU2150
 6911 004e 2BB1     		cbz	r3, .L711
 6912              	.L712:
 516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6913              		.loc 1 516 7 is_stmt 1 view .LVU2151
 516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6914              		.loc 1 516 22 is_stmt 0 view .LVU2152
 6915 0050 019B     		ldr	r3, [sp, #4]
 6916 0052 013B     		subs	r3, r3, #1
 6917 0054 0193     		str	r3, [sp, #4]
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6918              		.loc 1 514 11 is_stmt 1 view .LVU2153
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6919              		.loc 1 514 28 is_stmt 0 view .LVU2154
 6920 0056 019B     		ldr	r3, [sp, #4]
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6921              		.loc 1 514 11 view .LVU2155
 6922 0058 002B     		cmp	r3, #0
 6923 005a F9D1     		bne	.L712
 6924              	.L711:
 523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6925              		.loc 1 523 3 is_stmt 1 view .LVU2156
 6926              	.LVL497:
 6927              	.LBB656:
 6928              	.LBI656:
6696:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6929              		.loc 2 6696 26 view .LVU2157
 6930              	.LBB657:
6698:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6931              		.loc 2 6698 3 view .LVU2158
6698:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6932              		.loc 2 6698 12 is_stmt 0 view .LVU2159
 6933 005c 9368     		ldr	r3, [r2, #8]
6698:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6934              		.loc 2 6698 76 view .LVU2160
 6935 005e D900     		lsls	r1, r3, #3
 6936 0060 24D4     		bmi	.L731
 6937              	.LVL498:
6698:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6938              		.loc 2 6698 76 view .LVU2161
 6939              	.LBE657:
 6940              	.LBE656:
 526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6941              		.loc 1 526 5 is_stmt 1 view .LVU2162
 6942 0062 636D     		ldr	r3, [r4, #84]
ARM GAS  /tmp/cc6JDs4t.s 			page 387


 531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 6943              		.loc 1 531 20 is_stmt 0 view .LVU2163
 6944 0064 0125     		movs	r5, #1
 526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6945              		.loc 1 526 5 view .LVU2164
 6946 0066 43F01003 		orr	r3, r3, #16
 6947 006a 6365     		str	r3, [r4, #84]
 529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6948              		.loc 1 529 5 is_stmt 1 view .LVU2165
 6949 006c A36D     		ldr	r3, [r4, #88]
 6950 006e 2B43     		orrs	r3, r3, r5
 6951 0070 A365     		str	r3, [r4, #88]
 531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 6952              		.loc 1 531 5 view .LVU2166
 6953              	.LVL499:
 538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6954              		.loc 1 538 3 view .LVU2167
 6955              	.LBB658:
 6956              	.LBI658:
6888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6957              		.loc 2 6888 26 view .LVU2168
 6958              	.LBB659:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6959              		.loc 2 6890 3 view .LVU2169
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6960              		.loc 2 6890 12 is_stmt 0 view .LVU2170
 6961 0072 9368     		ldr	r3, [r2, #8]
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6962              		.loc 2 6890 74 view .LVU2171
 6963 0074 13F0040F 		tst	r3, #4
 6964              	.LBE659:
 6965              	.LBE658:
 540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 6966              		.loc 1 540 13 view .LVU2172
 6967 0078 636D     		ldr	r3, [r4, #84]
 6968              	.LBB664:
 6969              	.LBB660:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6970              		.loc 2 6890 74 view .LVU2173
 6971 007a 1DD1     		bne	.L714
 6972              	.L713:
 6973              	.LVL500:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6974              		.loc 2 6890 74 view .LVU2174
 6975              	.LBE660:
 6976              	.LBE664:
 540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 6977              		.loc 1 540 3 is_stmt 1 view .LVU2175
 540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 6978              		.loc 1 540 6 is_stmt 0 view .LVU2176
 6979 007c DB06     		lsls	r3, r3, #27
 6980 007e 1BD4     		bmi	.L714
 545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 6981              		.loc 1 545 5 is_stmt 1 view .LVU2177
 6982 0080 636D     		ldr	r3, [r4, #84]
 6983 0082 23F48173 		bic	r3, r3, #258
 6984 0086 43F00203 		orr	r3, r3, #2
ARM GAS  /tmp/cc6JDs4t.s 			page 388


 6985 008a 6365     		str	r3, [r4, #84]
 554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6986              		.loc 1 554 5 view .LVU2178
 6987              	.LVL501:
 6988              	.LBB665:
 6989              	.LBI665:
6756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6990              		.loc 2 6756 26 view .LVU2179
 6991              	.LBB666:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6992              		.loc 2 6758 3 view .LVU2180
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6993              		.loc 2 6758 12 is_stmt 0 view .LVU2181
 6994 008c 9368     		ldr	r3, [r2, #8]
 6995              	.LVL502:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6996              		.loc 2 6758 12 view .LVU2182
 6997              	.LBE666:
 6998              	.LBE665:
 554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6999              		.loc 1 554 8 view .LVU2183
 7000 008e DE07     		lsls	r6, r3, #31
 7001 0090 28D4     		bmi	.L715
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 7002              		.loc 1 556 7 is_stmt 1 view .LVU2184
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 7003              		.loc 1 556 11 is_stmt 0 view .LVU2185
 7004 0092 594B     		ldr	r3, .L754+16
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 7005              		.loc 1 556 93 view .LVU2186
 7006 0094 9A42     		cmp	r2, r3
 7007 0096 17D0     		beq	.L733
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 7008              		.loc 1 556 11 view .LVU2187
 7009 0098 03F58073 		add	r3, r3, #256
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 7010              		.loc 1 556 93 view .LVU2188
 7011 009c 9A42     		cmp	r2, r3
 7012 009e 13D0     		beq	.L733
 7013              	.LVL503:
 7014              	.LBB667:
 7015              	.LBI667:
6756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7016              		.loc 2 6756 26 is_stmt 1 view .LVU2189
 7017              	.LBB668:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7018              		.loc 2 6758 3 view .LVU2190
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7019              		.loc 2 6758 12 is_stmt 0 view .LVU2191
 7020 00a0 564B     		ldr	r3, .L754+20
 7021 00a2 9B68     		ldr	r3, [r3, #8]
 7022              	.LVL504:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7023              		.loc 2 6758 12 view .LVU2192
 7024              	.LBE668:
 7025              	.LBE667:
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
ARM GAS  /tmp/cc6JDs4t.s 			page 389


 7026              		.loc 1 556 10 view .LVU2193
 7027 00a4 D907     		lsls	r1, r3, #31
 7028 00a6 1DD4     		bmi	.L715
 575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 7029              		.loc 1 575 9 view .LVU2194
 7030 00a8 554A     		ldr	r2, .L754+24
 7031 00aa 15E0     		b	.L718
 7032              	.LVL505:
 7033              	.L731:
 7034              	.LBB669:
 7035              	.LBB661:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7036              		.loc 2 6890 12 view .LVU2195
 7037 00ac 9368     		ldr	r3, [r2, #8]
 7038              	.LBE661:
 7039              	.LBE669:
 418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpCFGR;
 7040              		.loc 1 418 21 view .LVU2196
 7041 00ae 0025     		movs	r5, #0
 7042              	.LVL506:
 538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7043              		.loc 1 538 3 is_stmt 1 view .LVU2197
 7044              	.LBB670:
6888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7045              		.loc 2 6888 26 view .LVU2198
 7046              	.LBB662:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7047              		.loc 2 6890 3 view .LVU2199
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7048              		.loc 2 6890 74 is_stmt 0 view .LVU2200
 7049 00b0 13F0040F 		tst	r3, #4
 7050              	.LBE662:
 7051              	.LBE670:
 540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 7052              		.loc 1 540 13 view .LVU2201
 7053 00b4 636D     		ldr	r3, [r4, #84]
 7054              	.LBB671:
 7055              	.LBB663:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7056              		.loc 2 6890 74 view .LVU2202
 7057 00b6 E1D0     		beq	.L713
 7058              	.LVL507:
 7059              	.L714:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7060              		.loc 2 6890 74 view .LVU2203
 7061              	.LBE663:
 7062              	.LBE671:
 824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7063              		.loc 1 824 5 is_stmt 1 view .LVU2204
 7064 00b8 636D     		ldr	r3, [r4, #84]
 826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 7065              		.loc 1 826 20 is_stmt 0 view .LVU2205
 7066 00ba 0125     		movs	r5, #1
 7067              	.LVL508:
 824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7068              		.loc 1 824 5 view .LVU2206
 7069 00bc 43F01003 		orr	r3, r3, #16
ARM GAS  /tmp/cc6JDs4t.s 			page 390


 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7070              		.loc 1 831 1 view .LVU2207
 7071 00c0 2846     		mov	r0, r5
 824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7072              		.loc 1 824 5 view .LVU2208
 7073 00c2 6365     		str	r3, [r4, #84]
 826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 7074              		.loc 1 826 5 is_stmt 1 view .LVU2209
 7075              	.LVL509:
 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7076              		.loc 1 831 1 is_stmt 0 view .LVU2210
 7077 00c4 02B0     		add	sp, sp, #8
 7078              	.LCFI40:
 7079              		.cfi_remember_state
 7080              		.cfi_def_cfa_offset 16
 7081              		@ sp needed
 7082 00c6 70BD     		pop	{r4, r5, r6, pc}
 7083              	.LVL510:
 7084              	.L733:
 7085              	.LCFI41:
 7086              		.cfi_restore_state
 7087              	.LBB672:
 7088              	.LBI672:
6756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7089              		.loc 2 6756 26 is_stmt 1 view .LVU2211
 7090              	.LBB673:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7091              		.loc 2 6758 3 view .LVU2212
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7092              		.loc 2 6758 12 is_stmt 0 view .LVU2213
 7093 00c8 4B4A     		ldr	r2, .L754+16
 7094              	.LBE673:
 7095              	.LBE672:
 7096              	.LBB675:
 7097              	.LBB676:
 7098 00ca 4E4B     		ldr	r3, .L754+28
 7099              	.LBE676:
 7100              	.LBE675:
 7101              	.LBB678:
 7102              	.LBB674:
 7103 00cc 9268     		ldr	r2, [r2, #8]
 7104              	.LVL511:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7105              		.loc 2 6758 12 view .LVU2214
 7106              	.LBE674:
 7107              	.LBE678:
 7108              	.LBB679:
 7109              	.LBI675:
6756:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7110              		.loc 2 6756 26 is_stmt 1 view .LVU2215
 7111              	.LBB677:
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7112              		.loc 2 6758 3 view .LVU2216
6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7113              		.loc 2 6758 12 is_stmt 0 view .LVU2217
 7114 00ce 9B68     		ldr	r3, [r3, #8]
 7115              	.LVL512:
ARM GAS  /tmp/cc6JDs4t.s 			page 391


6758:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7116              		.loc 2 6758 12 view .LVU2218
 7117              	.LBE677:
 7118              	.LBE679:
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 7119              		.loc 1 556 93 view .LVU2219
 7120 00d0 1343     		orrs	r3, r3, r2
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 7121              		.loc 1 556 10 view .LVU2220
 7122 00d2 D807     		lsls	r0, r3, #31
 7123 00d4 06D4     		bmi	.L715
 575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 7124              		.loc 1 575 9 view .LVU2221
 7125 00d6 4C4A     		ldr	r2, .L754+32
 7126              	.L718:
 7127              	.LVL513:
 7128              	.LBB680:
 7129              	.LBI680:
2646:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7130              		.loc 2 2646 22 is_stmt 1 discriminator 4 view .LVU2222
 7131              	.LBB681:
2648:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7132              		.loc 2 2648 3 discriminator 4 view .LVU2223
 7133 00d8 9368     		ldr	r3, [r2, #8]
 7134 00da 6168     		ldr	r1, [r4, #4]
 7135 00dc 23F47C13 		bic	r3, r3, #4128768
 7136 00e0 0B43     		orrs	r3, r3, r1
 7137 00e2 9360     		str	r3, [r2, #8]
 7138              	.LVL514:
 7139              	.L715:
2648:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7140              		.loc 2 2648 3 is_stmt 0 discriminator 4 view .LVU2224
 7141              	.LBE681:
 7142              	.LBE680:
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7143              		.loc 1 613 5 is_stmt 1 view .LVU2225
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7144              		.loc 1 613 10 is_stmt 0 view .LVU2226
 7145 00e4 FFF7FEFF 		bl	HAL_GetREVID
 7146              	.LVL515:
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7147              		.loc 1 613 8 view .LVU2227
 7148 00e8 41F20303 		movw	r3, #4099
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7149              		.loc 1 613 72 view .LVU2228
 7150 00ec A168     		ldr	r1, [r4, #8]
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7151              		.loc 1 613 8 view .LVU2229
 7152 00ee 9842     		cmp	r0, r3
 619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 7153              		.loc 1 619 19 view .LVU2230
 7154 00f0 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7155              		.loc 1 613 8 view .LVU2231
 7156 00f2 51D8     		bhi	.L751
 7157              	.L720:
 624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
ARM GAS  /tmp/cc6JDs4t.s 			page 392


 7158              		.loc 1 624 7 is_stmt 1 view .LVU2232
 624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 7159              		.loc 1 624 19 is_stmt 0 view .LVU2233
 7160 00f4 667D     		ldrb	r6, [r4, #21]	@ zero_extendqisi2
 627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 7161              		.loc 1 627 19 view .LVU2234
 7162 00f6 1A04     		lsls	r2, r3, #16
 624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 7163              		.loc 1 624 16 view .LVU2235
 7164 00f8 206B     		ldr	r0, [r4, #48]
 7165 00fa 42EA4632 		orr	r2, r2, r6, lsl #13
 7166 00fe 0243     		orrs	r2, r2, r0
 7167 0100 0A43     		orrs	r2, r2, r1
 7168              	.LVL516:
 7169              	.L721:
 632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7170              		.loc 1 632 5 is_stmt 1 view .LVU2236
 632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7171              		.loc 1 632 8 is_stmt 0 view .LVU2237
 7172 0102 012B     		cmp	r3, #1
 7173 0104 03D1     		bne	.L722
 634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 7174              		.loc 1 634 7 is_stmt 1 view .LVU2238
 634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 7175              		.loc 1 634 18 is_stmt 0 view .LVU2239
 7176 0106 236A     		ldr	r3, [r4, #32]
 7177 0108 013B     		subs	r3, r3, #1
 634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 7178              		.loc 1 634 15 view .LVU2240
 7179 010a 42EA4342 		orr	r2, r2, r3, lsl #17
 7180              	.LVL517:
 7181              	.L722:
 642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7182              		.loc 1 642 5 is_stmt 1 view .LVU2241
 642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7183              		.loc 1 642 19 is_stmt 0 view .LVU2242
 7184 010e 636A     		ldr	r3, [r4, #36]
 642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7185              		.loc 1 642 8 view .LVU2243
 7186 0110 23B1     		cbz	r3, .L723
 644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 7187              		.loc 1 644 7 is_stmt 1 view .LVU2244
 644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 7188              		.loc 1 644 48 is_stmt 0 view .LVU2245
 7189 0112 03F47873 		and	r3, r3, #992
 645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                  );
 7190              		.loc 1 645 19 view .LVU2246
 7191 0116 A16A     		ldr	r1, [r4, #40]
 7192 0118 0B43     		orrs	r3, r3, r1
 644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 7193              		.loc 1 644 15 view .LVU2247
 7194 011a 1A43     		orrs	r2, r2, r3
 7195              	.LVL518:
 7196              	.L723:
 665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 7197              		.loc 1 665 5 is_stmt 1 view .LVU2248
 7198 011c 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc6JDs4t.s 			page 393


 7199 011e 3B49     		ldr	r1, .L754+36
 7200 0120 D868     		ldr	r0, [r3, #12]
 7201 0122 0140     		ands	r1, r1, r0
 7202 0124 0A43     		orrs	r2, r2, r1
 7203              	.LVL519:
 665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 7204              		.loc 1 665 5 is_stmt 0 view .LVU2249
 7205 0126 DA60     		str	r2, [r3, #12]
 674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 7206              		.loc 1 674 5 is_stmt 1 view .LVU2250
 7207              	.LVL520:
 7208              	.LBB682:
 7209              	.LBI682:
6888:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7210              		.loc 2 6888 26 view .LVU2251
 7211              	.LBB683:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7212              		.loc 2 6890 3 view .LVU2252
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7213              		.loc 2 6890 12 is_stmt 0 view .LVU2253
 7214 0128 9A68     		ldr	r2, [r3, #8]
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7215              		.loc 2 6890 74 view .LVU2254
 7216 012a 12F0040F 		tst	r2, #4
 7217              	.LBE683:
 7218              	.LBE682:
 7219              	.LBB685:
 7220              	.LBB686:
7085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7221              		.loc 2 7085 12 view .LVU2255
 7222 012e 9A68     		ldr	r2, [r3, #8]
 7223              	.LBE686:
 7224              	.LBE685:
 7225              	.LBB688:
 7226              	.LBB684:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7227              		.loc 2 6890 74 view .LVU2256
 7228 0130 1CD1     		bne	.L725
 7229              	.LVL521:
6890:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7230              		.loc 2 6890 74 view .LVU2257
 7231              	.LBE684:
 7232              	.LBE688:
 675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 7233              		.loc 1 675 5 is_stmt 1 view .LVU2258
 7234              	.LBB689:
 7235              	.LBI685:
7083:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7236              		.loc 2 7083 26 view .LVU2259
 7237              	.LBB687:
7085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7238              		.loc 2 7085 3 view .LVU2260
7085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7239              		.loc 2 7085 76 is_stmt 0 view .LVU2261
 7240 0132 1207     		lsls	r2, r2, #28
 7241 0134 1AD4     		bmi	.L725
 7242              	.LVL522:
ARM GAS  /tmp/cc6JDs4t.s 			page 394


7085:./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7243              		.loc 2 7085 76 view .LVU2262
 7244              	.LBE687:
 7245              	.LBE689:
 676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 7246              		.loc 1 676 5 is_stmt 1 view .LVU2263
 694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 7247              		.loc 1 694 7 view .LVU2264
 699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7248              		.loc 1 699 7 view .LVU2265
 7249 0136 D968     		ldr	r1, [r3, #12]
 7250 0138 354A     		ldr	r2, .L754+40
 695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.ConversionDataManagement));
 7251              		.loc 1 695 19 is_stmt 0 view .LVU2266
 7252 013a 207D     		ldrb	r0, [r4, #20]	@ zero_extendqisi2
 699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7253              		.loc 1 699 7 view .LVU2267
 7254 013c 0A40     		ands	r2, r2, r1
 7255 013e E16A     		ldr	r1, [r4, #44]
 7256 0140 42EA8032 		orr	r2, r2, r0, lsl #14
 7257 0144 0A43     		orrs	r2, r2, r1
 7258 0146 DA60     		str	r2, [r3, #12]
 7259              	.LVL523:
 701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 7260              		.loc 1 701 7 is_stmt 1 view .LVU2268
 701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 7261              		.loc 1 701 10 is_stmt 0 view .LVU2269
 7262 0148 94F83820 		ldrb	r2, [r4, #56]	@ zero_extendqisi2
 7263 014c 012A     		cmp	r2, #1
 7264 014e 3AD0     		beq	.L752
 781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 7265              		.loc 1 781 9 is_stmt 1 view .LVU2270
 7266 0150 1A69     		ldr	r2, [r3, #16]
 7267 0152 22F00102 		bic	r2, r2, #1
 7268 0156 1A61     		str	r2, [r3, #16]
 7269              	.L727:
 785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 7270              		.loc 1 785 7 view .LVU2271
 7271 0158 1A69     		ldr	r2, [r3, #16]
 794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 7272              		.loc 1 794 7 is_stmt 0 view .LVU2272
 7273 015a 2046     		mov	r0, r4
 785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 7274              		.loc 1 785 7 view .LVU2273
 7275 015c 616B     		ldr	r1, [r4, #52]
 7276 015e 22F07042 		bic	r2, r2, #-268435456
 7277 0162 0A43     		orrs	r2, r2, r1
 7278 0164 1A61     		str	r2, [r3, #16]
 794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 7279              		.loc 1 794 7 is_stmt 1 view .LVU2274
 7280 0166 FFF7FEFF 		bl	ADC_ConfigureBoostMode
 7281              	.LVL524:
 7282 016a 2368     		ldr	r3, [r4]
 7283              	.LVL525:
 7284              	.L725:
 807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7285              		.loc 1 807 5 view .LVU2275
ARM GAS  /tmp/cc6JDs4t.s 			page 395


 807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7286              		.loc 1 807 8 is_stmt 0 view .LVU2276
 7287 016c E268     		ldr	r2, [r4, #12]
 7288 016e 012A     		cmp	r2, #1
 7289 0170 21D0     		beq	.L753
 814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 7290              		.loc 1 814 7 is_stmt 1 view .LVU2277
 7291 0172 1A6B     		ldr	r2, [r3, #48]
 7292 0174 22F00F02 		bic	r2, r2, #15
 7293 0178 1A63     		str	r2, [r3, #48]
 7294              	.L729:
 819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 7295              		.loc 1 819 5 view .LVU2278
 7296 017a 636D     		ldr	r3, [r4, #84]
 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7297              		.loc 1 831 1 is_stmt 0 view .LVU2279
 7298 017c 2846     		mov	r0, r5
 819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 7299              		.loc 1 819 5 view .LVU2280
 7300 017e 23F00303 		bic	r3, r3, #3
 7301 0182 43F00103 		orr	r3, r3, #1
 7302 0186 6365     		str	r3, [r4, #84]
 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7303              		.loc 1 831 1 view .LVU2281
 7304 0188 02B0     		add	sp, sp, #8
 7305              	.LCFI42:
 7306              		.cfi_remember_state
 7307              		.cfi_def_cfa_offset 16
 7308              		@ sp needed
 7309 018a 70BD     		pop	{r4, r5, r6, pc}
 7310              	.LVL526:
 7311              	.L750:
 7312              	.LCFI43:
 7313              		.cfi_restore_state
 484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 7314              		.loc 1 484 5 is_stmt 1 view .LVU2282
 7315 018c FFF7FEFF 		bl	HAL_ADC_MspInit
 7316              	.LVL527:
 488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7317              		.loc 1 488 5 view .LVU2283
 7318 0190 A565     		str	r5, [r4, #88]
 491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 7319              		.loc 1 491 5 view .LVU2284
 491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 7320              		.loc 1 491 16 is_stmt 0 view .LVU2285
 7321 0192 84F85050 		strb	r5, [r4, #80]
 7322 0196 3FE7     		b	.L706
 7323              	.LVL528:
 7324              	.L751:
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7325              		.loc 1 613 37 discriminator 1 view .LVU2286
 7326 0198 1029     		cmp	r1, #16
 7327 019a ABD1     		bne	.L720
 616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 7328              		.loc 1 616 7 is_stmt 1 view .LVU2287
 616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 7329              		.loc 1 616 19 is_stmt 0 view .LVU2288
ARM GAS  /tmp/cc6JDs4t.s 			page 396


 7330 019c 607D     		ldrb	r0, [r4, #21]	@ zero_extendqisi2
 619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 7331              		.loc 1 619 19 view .LVU2289
 7332 019e 1A04     		lsls	r2, r3, #16
 616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 7333              		.loc 1 616 16 view .LVU2290
 7334 01a0 216B     		ldr	r1, [r4, #48]
 7335 01a2 42EA4032 		orr	r2, r2, r0, lsl #13
 7336 01a6 0A43     		orrs	r2, r2, r1
 7337 01a8 42F01C02 		orr	r2, r2, #28
 7338              	.LVL529:
 616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 7339              		.loc 1 616 16 view .LVU2291
 7340 01ac A9E7     		b	.L721
 7341              	.LVL530:
 7342              	.L730:
 428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 7343              		.loc 1 428 12 view .LVU2292
 7344 01ae 0125     		movs	r5, #1
 7345              	.LVL531:
 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7346              		.loc 1 831 1 view .LVU2293
 7347 01b0 2846     		mov	r0, r5
 7348              	.LVL532:
 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7349              		.loc 1 831 1 view .LVU2294
 7350 01b2 02B0     		add	sp, sp, #8
 7351              	.LCFI44:
 7352              		.cfi_remember_state
 7353              		.cfi_def_cfa_offset 16
 7354              		@ sp needed
 7355 01b4 70BD     		pop	{r4, r5, r6, pc}
 7356              	.LVL533:
 7357              	.L753:
 7358              	.LCFI45:
 7359              		.cfi_restore_state
 810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 7360              		.loc 1 810 7 is_stmt 1 view .LVU2295
 7361 01b6 196B     		ldr	r1, [r3, #48]
 7362 01b8 A269     		ldr	r2, [r4, #24]
 7363 01ba 21F00F01 		bic	r1, r1, #15
 7364 01be 013A     		subs	r2, r2, #1
 7365 01c0 0A43     		orrs	r2, r2, r1
 7366 01c2 1A63     		str	r2, [r3, #48]
 7367 01c4 D9E7     		b	.L729
 7368              	.LVL534:
 7369              	.L752:
 713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 7370              		.loc 1 713 9 view .LVU2296
 715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 7371              		.loc 1 715 9 view .LVU2297
 716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 7372              		.loc 1 716 9 view .LVU2298
 717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7373              		.loc 1 717 9 view .LVU2299
 719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             || (hadc->Init.ExternalTrigConvEdge == ADC_EXTERNALTRIGCONVEDGE_NONE))
 7374              		.loc 1 719 9 view .LVU2300
ARM GAS  /tmp/cc6JDs4t.s 			page 397


 723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 7375              		.loc 1 723 11 view .LVU2301
 769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_CFGR2_ROVSE                       |
 7376              		.loc 1 769 9 view .LVU2302
 7377 01c6 D4E90F12 		ldrd	r1, r2, [r4, #60]
 7378 01ca 666C     		ldr	r6, [r4, #68]
 7379 01cc 0139     		subs	r1, r1, #1
 7380 01ce A06C     		ldr	r0, [r4, #72]
 7381 01d0 3243     		orrs	r2, r2, r6
 7382 01d2 1E69     		ldr	r6, [r3, #16]
 7383 01d4 42EA0142 		orr	r2, r2, r1, lsl #16
 7384 01d8 0E49     		ldr	r1, .L754+44
 7385 01da 0243     		orrs	r2, r2, r0
 7386 01dc 3140     		ands	r1, r1, r6
 7387 01de 0A43     		orrs	r2, r2, r1
 7388 01e0 42F00102 		orr	r2, r2, #1
 7389 01e4 1A61     		str	r2, [r3, #16]
 7390 01e6 B7E7     		b	.L727
 7391              	.L755:
 7392              		.align	2
 7393              	.L754:
 7394 01e8 C0FFFF5F 		.word	1610612672
 7395 01ec 00000000 		.word	SystemCoreClock
 7396 01f0 632D3E05 		.word	87960931
 7397 01f4 C0FFFF6F 		.word	1879048128
 7398 01f8 00200240 		.word	1073881088
 7399 01fc 00600258 		.word	1476550656
 7400 0200 00630258 		.word	1476551424
 7401 0204 00210240 		.word	1073881344
 7402 0208 00230240 		.word	1073881856
 7403 020c 03C0F0FF 		.word	-999421
 7404 0210 FCBFFFFF 		.word	-16388
 7405 0214 1EF800FC 		.word	-67045346
 7406              		.cfi_endproc
 7407              	.LFE331:
 7409              		.text
 7410              	.Letext0:
 7411              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 7412              		.file 5 "./Libraries/CMSIS/Core/Include/core_cm7.h"
 7413              		.file 6 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 7414              		.file 7 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 7415              		.file 8 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 7416              		.file 9 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 7417              		.file 10 "/usr/include/newlib/sys/_types.h"
 7418              		.file 11 "/usr/include/newlib/sys/reent.h"
 7419              		.file 12 "/usr/include/newlib/sys/lock.h"
 7420              		.file 13 "/usr/include/newlib/math.h"
 7421              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 7422              		.file 15 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 7423              		.file 16 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 7424              		.file 17 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 7425              		.file 18 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 7426              		.file 19 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 7427              		.file 20 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 7428              		.file 21 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 7429              		.file 22 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc_ex.h"
ARM GAS  /tmp/cc6JDs4t.s 			page 398


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_adc.c
     /tmp/cc6JDs4t.s:17     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/cc6JDs4t.s:26     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/cc6JDs4t.s:42     .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/cc6JDs4t.s:50     .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/cc6JDs4t.s:61     .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/cc6JDs4t.s:69     .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/cc6JDs4t.s:371    .text.HAL_ADC_PollForConversion:0000000000000104 $d
     /tmp/cc6JDs4t.s:379    .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/cc6JDs4t.s:387    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/cc6JDs4t.s:590    .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/cc6JDs4t.s:598    .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/cc6JDs4t.s:619    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/cc6JDs4t.s:627    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/cc6JDs4t.s:638    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/cc6JDs4t.s:646    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/cc6JDs4t.s:657    .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/cc6JDs4t.s:665    .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/cc6JDs4t.s:691    .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/cc6JDs4t.s:699    .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/cc6JDs4t.s:710    .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/cc6JDs4t.s:718    .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/cc6JDs4t.s:729    .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/cc6JDs4t.s:737    .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/cc6JDs4t.s:1380   .text.HAL_ADC_IRQHandler:0000000000000268 $d
     /tmp/cc6JDs4t.s:1389   .text.ADC_DMAConvCplt:0000000000000000 $t
     /tmp/cc6JDs4t.s:1397   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/cc6JDs4t.s:1536   .text.ADC_DMAError:0000000000000000 $t
     /tmp/cc6JDs4t.s:1544   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/cc6JDs4t.s:1579   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/cc6JDs4t.s:1587   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/cc6JDs4t.s:2672   .text.HAL_ADC_ConfigChannel:000000000000039c $d
     /tmp/cc6JDs4t.s:2689   .text.HAL_ADC_ConfigChannel:00000000000003c8 $t
     /tmp/cc6JDs4t.s:2864   .text.HAL_ADC_ConfigChannel:000000000000044c $d
     /tmp/cc6JDs4t.s:2874   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/cc6JDs4t.s:2882   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/cc6JDs4t.s:3723   .text.HAL_ADC_AnalogWDGConfig:000000000000033c $d
     /tmp/cc6JDs4t.s:3740   .text.HAL_ADC_AnalogWDGConfig:0000000000000350 $t
     /tmp/cc6JDs4t.s:3825   .text.HAL_ADC_AnalogWDGConfig:0000000000000398 $d
     /tmp/cc6JDs4t.s:3832   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/cc6JDs4t.s:3840   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/cc6JDs4t.s:3859   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/cc6JDs4t.s:3867   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/cc6JDs4t.s:3886   .text.ADC_ConversionStop:0000000000000000 $t
     /tmp/cc6JDs4t.s:3894   .text.ADC_ConversionStop:0000000000000000 ADC_ConversionStop
     /tmp/cc6JDs4t.s:4303   .text.ADC_ConversionStop:00000000000000f0 $d
     /tmp/cc6JDs4t.s:4309   .text.ADC_Enable:0000000000000000 $t
     /tmp/cc6JDs4t.s:4317   .text.ADC_Enable:0000000000000000 ADC_Enable
     /tmp/cc6JDs4t.s:4554   .text.ADC_Enable:0000000000000094 $d
     /tmp/cc6JDs4t.s:4565   .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/cc6JDs4t.s:4573   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/cc6JDs4t.s:4833   .text.HAL_ADC_Start:00000000000000e8 $d
     /tmp/cc6JDs4t.s:4843   .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/cc6JDs4t.s:4851   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/cc6JDs4t.s:5196   .text.HAL_ADC_Start_IT:0000000000000154 $d
     /tmp/cc6JDs4t.s:5206   .text.HAL_ADC_Start_DMA:0000000000000000 $t
ARM GAS  /tmp/cc6JDs4t.s 			page 399


     /tmp/cc6JDs4t.s:5214   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/cc6JDs4t.s:5519   .text.HAL_ADC_Start_DMA:0000000000000104 $d
     /tmp/cc6JDs4t.s:5532   .text.ADC_Disable:0000000000000000 $t
     /tmp/cc6JDs4t.s:5540   .text.ADC_Disable:0000000000000000 ADC_Disable
     /tmp/cc6JDs4t.s:5711   .text.ADC_Disable:0000000000000070 $d
     /tmp/cc6JDs4t.s:5716   .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/cc6JDs4t.s:5724   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/cc6JDs4t.s:6042   .text.HAL_ADC_DeInit:0000000000000178 $d
     /tmp/cc6JDs4t.s:6058   .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/cc6JDs4t.s:6066   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/cc6JDs4t.s:6151   .text.HAL_ADC_Stop:0000000000000044 $d
     /tmp/cc6JDs4t.s:6156   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/cc6JDs4t.s:6164   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/cc6JDs4t.s:6255   .text.HAL_ADC_Stop_IT:0000000000000050 $d
     /tmp/cc6JDs4t.s:6260   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/cc6JDs4t.s:6268   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
     /tmp/cc6JDs4t.s:6411   .text.HAL_ADC_Stop_DMA:000000000000008c $d
     /tmp/cc6JDs4t.s:6416   .text.ADC_ConfigureBoostMode:0000000000000000 $t
     /tmp/cc6JDs4t.s:6424   .text.ADC_ConfigureBoostMode:0000000000000000 ADC_ConfigureBoostMode
     /tmp/cc6JDs4t.s:6727   .text.ADC_ConfigureBoostMode:000000000000016c $d
     /tmp/cc6JDs4t.s:6738   .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/cc6JDs4t.s:6746   .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/cc6JDs4t.s:7394   .text.HAL_ADC_Init:00000000000001e8 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_ADCEx_InjectedConvCpltCallback
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_InjectedQueueOverflowCallback
SystemCoreClock
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_RCC_GetHCLKFreq
HAL_GetREVID
HAL_RCCEx_GetPeriphCLKFreq
