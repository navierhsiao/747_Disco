ARM GAS  /tmp/ccUKMyjJ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_rtc_ex.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_RTCEx_SetTimeStamp,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_RTCEx_SetTimeStamp
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_RTCEx_SetTimeStamp:
  26              	.LFB331:
  27              		.file 1 "./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c"
   1:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
   2:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ******************************************************************************
   3:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @file    stm32h7xx_hal_rtc_ex.c
   4:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @author  MCD Application Team
   5:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief   Extended RTC HAL module driver.
   6:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This file provides firmware functions to manage the following
   7:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          functionalities of the Real Time Clock (RTC) Extended peripheral:
   8:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + RTC Time Stamp functions
   9:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + RTC Tamper functions
  10:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + RTC Wake-up functions
  11:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + Extended Control functions
  12:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + Extended RTC features functions
  13:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
  14:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   @verbatim
  15:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ==============================================================================
  16:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                   ##### How to use this driver #####
  17:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ==============================================================================
  18:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  19:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Enable the RTC domain access.
  20:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour
  21:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         format using the HAL_RTC_Init() function.
  22:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  23:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** RTC Wakeup configuration ***
  24:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ================================
  25:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  26:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To configure the RTC Wakeup Clock source and Counter use the HAL_RTCEx_SetWakeUpTimer()
  27:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function. You can also configure the RTC Wakeup timer with interrupt mode
  28:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         using the HAL_RTCEx_SetWakeUpTimer_IT() function.
  29:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To read the RTC WakeUp Counter register, use the HAL_RTCEx_GetWakeUpTimer()
  30:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  31:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUKMyjJ.s 			page 2


  32:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Outputs configuration ***
  33:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   =============================
  34:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]  The RTC has 2 different outputs:
  35:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) RTC_ALARM: this output is used to manage the RTC Alarm A, Alarm B
  36:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         and WaKeUp signals.
  37:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         To output the selected RTC signal, use the HAL_RTC_Init() function.
  38:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) RTC_CALIB: this output is 512Hz signal or 1Hz.
  39:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         To enable the RTC_CALIB, use the HAL_RTCEx_SetCalibrationOutPut() function.
  40:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Two pins can be used as RTC_ALARM or RTC_CALIB (PC13, PB2) managed on
  41:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         the RTC_OR register.
  42:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) When the RTC_CALIB or RTC_ALARM output is selected, the RTC_OUT pin is
  43:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         automatically configured in output alternate function.
  44:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  45:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Smooth digital Calibration configuration ***
  46:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ================================================
  47:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  48:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Configure the RTC Original Digital Calibration Value and the corresponding
  49:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         calibration cycle period (32s,16s and 8s) using the HAL_RTCEx_SetSmoothCalib()
  50:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  51:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  52:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** TimeStamp configuration ***
  53:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ===============================
  54:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  55:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Enable the RTC TimeStamp using the HAL_RTCEx_SetTimeStamp() function.
  56:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         You can also configure the RTC TimeStamp with interrupt mode using the
  57:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         HAL_RTCEx_SetTimeStamp_IT() function.
  58:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTCEx_GetTimeStamp()
  59:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  60:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  61:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Internal TimeStamp configuration ***
  62:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ===============================
  63:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  64:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Enable the RTC internal TimeStamp using the HAL_RTCEx_SetInternalTimeStamp() function.
  65:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         User has to check internal timestamp occurrence using __HAL_RTC_INTERNAL_TIMESTAMP_GET_FLAG
  66:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTCEx_GetTimeStamp()
  67:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  68:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  69:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Tamper configuration ***
  70:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ============================
  71:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  72:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Enable the RTC Tamper and configure the Tamper filter count, trigger Edge
  73:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         or Level according to the Tamper filter (if equal to 0 Edge else Level)
  74:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         value, sampling frequency, NoErase, MaskFlag,  precharge or discharge and
  75:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         Pull-UP using the HAL_RTCEx_SetTamper() function. You can configure RTC Tamper
  76:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         with interrupt mode using HAL_RTCEx_SetTamper_IT() function.
  77:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) The default configuration of the Tamper erases the backup registers. To avoid
  78:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         erase, enable the NoErase field on the RTC_TAMPCR register.
  79:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  80:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Backup Data Registers configuration ***
  81:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ===========================================
  82:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  83:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To write to the RTC Backup Data registers, use the HAL_RTCEx_BKUPWrite()
  84:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  85:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To read the RTC Backup Data registers, use the HAL_RTCEx_BKUPRead()
  86:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  87:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  88:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    @endverbatim
ARM GAS  /tmp/ccUKMyjJ.s 			page 3


  89:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ******************************************************************************
  90:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @attention
  91:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
  92:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  93:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * All rights reserved.</center></h2>
  94:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
  95:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  96:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * the "License"; You may not use this file except in compliance with the
  97:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * License. You may obtain a copy of the License at:
  98:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  99:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
 100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ******************************************************************************
 101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Includes ------------------------------------------------------------------*/
 104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #include "stm32h7xx_hal.h"
 105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup STM32H7xx_HAL_Driver
 107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
 108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx
 111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief RTC Extended HAL module driver
 112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
 113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #ifdef HAL_RTC_MODULE_ENABLED
 116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private typedef -----------------------------------------------------------*/
 118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private define ------------------------------------------------------------*/
 119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #define TAMP_ALL (TAMP_CR1_TAMP1E | TAMP_CR1_TAMP2E | TAMP_CR1_TAMP3E)
 120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private macro -------------------------------------------------------------*/
 122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private variables ---------------------------------------------------------*/
 123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Exported functions --------------------------------------------------------*/
 125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions
 127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
 128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group1
 132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  *  @brief   RTC TimeStamp and Tamper functions
 133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
 134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
 135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
 136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                  ##### RTC TimeStamp and Tamper functions #####
 137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
 138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure TimeStamp feature
 140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
 142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
 143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
ARM GAS  /tmp/ccUKMyjJ.s 			page 4


 146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set TimeStamp.
 147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is
 150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         activated.
 151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the
 153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the
 155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin specifies the RTC TimeStamp Pin.
 157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_DEFAULT: PC13 is selected as RTC TimeStamp Pin.
 159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *               The RTC TimeStamp Pin is per default PC13, but for reasons of
 160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *               compatibility, this parameter is required.
 161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32_t 
 164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
  28              		.loc 1 164 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
 165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
 172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(RTC_TimeStampPin);
 173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
  46              		.loc 1 175 3
  47 000c FB68     		ldr	r3, [r7, #12]
  48 000e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
  49 0012 012B     		cmp	r3, #1
  50 0014 01D1     		bne	.L2
  51              		.loc 1 175 3 is_stmt 0 discriminator 1
  52 0016 0223     		movs	r3, #2
  53 0018 32E0     		b	.L3
  54              	.L2:
ARM GAS  /tmp/ccUKMyjJ.s 			page 5


  55              		.loc 1 175 3 discriminator 2
  56 001a FB68     		ldr	r3, [r7, #12]
  57 001c 0122     		movs	r2, #1
  58 001e 83F82020 		strb	r2, [r3, #32]
 176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
  59              		.loc 1 177 15 is_stmt 1 discriminator 2
  60 0022 FB68     		ldr	r3, [r7, #12]
  61 0024 0222     		movs	r2, #2
  62 0026 83F82120 		strb	r2, [r3, #33]
 178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
  63              		.loc 1 180 27 discriminator 2
  64 002a FB68     		ldr	r3, [r7, #12]
  65 002c 1B68     		ldr	r3, [r3]
  66              		.loc 1 180 37 discriminator 2
  67 002e 9A68     		ldr	r2, [r3, #8]
  68              		.loc 1 180 10 discriminator 2
  69 0030 164B     		ldr	r3, .L4
  70 0032 1340     		ands	r3, r3, r2
  71 0034 7B61     		str	r3, [r7, #20]
 181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= TimeStampEdge;
  72              		.loc 1 182 10 discriminator 2
  73 0036 7A69     		ldr	r2, [r7, #20]
  74 0038 BB68     		ldr	r3, [r7, #8]
  75 003a 1343     		orrs	r3, r3, r2
  76 003c 7B61     		str	r3, [r7, #20]
 183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  77              		.loc 1 185 3 discriminator 2
  78 003e FB68     		ldr	r3, [r7, #12]
  79 0040 1B68     		ldr	r3, [r3]
  80 0042 CA22     		movs	r2, #202
  81 0044 5A62     		str	r2, [r3, #36]
  82 0046 FB68     		ldr	r3, [r7, #12]
  83 0048 1B68     		ldr	r3, [r3]
  84 004a 5322     		movs	r2, #83
  85 004c 5A62     		str	r2, [r3, #36]
 186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
  86              		.loc 1 188 7 discriminator 2
  87 004e FB68     		ldr	r3, [r7, #12]
  88 0050 1B68     		ldr	r3, [r3]
  89              		.loc 1 188 22 discriminator 2
  90 0052 7A69     		ldr	r2, [r7, #20]
  91 0054 9A60     		str	r2, [r3, #8]
 189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
  92              		.loc 1 190 3 discriminator 2
  93 0056 FB68     		ldr	r3, [r7, #12]
  94 0058 1B68     		ldr	r3, [r3]
  95 005a 9A68     		ldr	r2, [r3, #8]
  96 005c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccUKMyjJ.s 			page 6


  97 005e 1B68     		ldr	r3, [r3]
  98 0060 42F40062 		orr	r2, r2, #2048
  99 0064 9A60     		str	r2, [r3, #8]
 191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 100              		.loc 1 193 3 discriminator 2
 101 0066 FB68     		ldr	r3, [r7, #12]
 102 0068 1B68     		ldr	r3, [r3]
 103 006a FF22     		movs	r2, #255
 104 006c 5A62     		str	r2, [r3, #36]
 194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
 196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 105              		.loc 1 196 15 discriminator 2
 106 006e FB68     		ldr	r3, [r7, #12]
 107 0070 0122     		movs	r2, #1
 108 0072 83F82120 		strb	r2, [r3, #33]
 197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 109              		.loc 1 199 3 discriminator 2
 110 0076 FB68     		ldr	r3, [r7, #12]
 111 0078 0022     		movs	r2, #0
 112 007a 83F82020 		strb	r2, [r3, #32]
 200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 113              		.loc 1 201 10 discriminator 2
 114 007e 0023     		movs	r3, #0
 115              	.L3:
 202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 116              		.loc 1 202 1
 117 0080 1846     		mov	r0, r3
 118 0082 1C37     		adds	r7, r7, #28
 119              	.LCFI3:
 120              		.cfi_def_cfa_offset 4
 121 0084 BD46     		mov	sp, r7
 122              	.LCFI4:
 123              		.cfi_def_cfa_register 13
 124              		@ sp needed
 125 0086 5DF8047B 		ldr	r7, [sp], #4
 126              	.LCFI5:
 127              		.cfi_restore 7
 128              		.cfi_def_cfa_offset 0
 129 008a 7047     		bx	lr
 130              	.L5:
 131              		.align	2
 132              	.L4:
 133 008c F7F7FFFF 		.word	-2057
 134              		.cfi_endproc
 135              	.LFE331:
 137              		.section	.text.HAL_RTCEx_SetTimeStamp_IT,"ax",%progbits
 138              		.align	1
 139              		.global	HAL_RTCEx_SetTimeStamp_IT
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
ARM GAS  /tmp/ccUKMyjJ.s 			page 7


 143              		.fpu fpv5-d16
 145              	HAL_RTCEx_SetTimeStamp_IT:
 146              	.LFB332:
 203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set TimeStamp with Interrupt.
 206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is
 209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         activated.
 210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the
 212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the
 214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin Specifies the RTC TimeStamp Pin.
 216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_DEFAULT: PC13 is selected as RTC TimeStamp Pin.
 218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *               The RTC TimeStamp Pin is per default PC13, but for reasons of
 219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *               compatibility, this parameter is required.
 220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp_IT(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32
 223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 147              		.loc 1 223 1
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 24
 150              		@ frame_needed = 1, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152 0000 80B4     		push	{r7}
 153              	.LCFI6:
 154              		.cfi_def_cfa_offset 4
 155              		.cfi_offset 7, -4
 156 0002 87B0     		sub	sp, sp, #28
 157              	.LCFI7:
 158              		.cfi_def_cfa_offset 32
 159 0004 00AF     		add	r7, sp, #0
 160              	.LCFI8:
 161              		.cfi_def_cfa_register 7
 162 0006 F860     		str	r0, [r7, #12]
 163 0008 B960     		str	r1, [r7, #8]
 164 000a 7A60     		str	r2, [r7, #4]
 224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
 231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(RTC_TimeStampPin);
 232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 165              		.loc 1 234 3
 166 000c FB68     		ldr	r3, [r7, #12]
 167 000e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 168 0012 012B     		cmp	r3, #1
ARM GAS  /tmp/ccUKMyjJ.s 			page 8


 169 0014 01D1     		bne	.L7
 170              		.loc 1 234 3 is_stmt 0 discriminator 1
 171 0016 0223     		movs	r3, #2
 172 0018 42E0     		b	.L8
 173              	.L7:
 174              		.loc 1 234 3 discriminator 2
 175 001a FB68     		ldr	r3, [r7, #12]
 176 001c 0122     		movs	r2, #1
 177 001e 83F82020 		strb	r2, [r3, #32]
 235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 178              		.loc 1 236 15 is_stmt 1 discriminator 2
 179 0022 FB68     		ldr	r3, [r7, #12]
 180 0024 0222     		movs	r2, #2
 181 0026 83F82120 		strb	r2, [r3, #33]
 237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 182              		.loc 1 239 27 discriminator 2
 183 002a FB68     		ldr	r3, [r7, #12]
 184 002c 1B68     		ldr	r3, [r3]
 185              		.loc 1 239 37 discriminator 2
 186 002e 9A68     		ldr	r2, [r3, #8]
 187              		.loc 1 239 10 discriminator 2
 188 0030 1E4B     		ldr	r3, .L9
 189 0032 1340     		ands	r3, r3, r2
 190 0034 7B61     		str	r3, [r7, #20]
 240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= TimeStampEdge;
 191              		.loc 1 241 10 discriminator 2
 192 0036 7A69     		ldr	r2, [r7, #20]
 193 0038 BB68     		ldr	r3, [r7, #8]
 194 003a 1343     		orrs	r3, r3, r2
 195 003c 7B61     		str	r3, [r7, #20]
 242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 196              		.loc 1 244 3 discriminator 2
 197 003e FB68     		ldr	r3, [r7, #12]
 198 0040 1B68     		ldr	r3, [r3]
 199 0042 CA22     		movs	r2, #202
 200 0044 5A62     		str	r2, [r3, #36]
 201 0046 FB68     		ldr	r3, [r7, #12]
 202 0048 1B68     		ldr	r3, [r3]
 203 004a 5322     		movs	r2, #83
 204 004c 5A62     		str	r2, [r3, #36]
 245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 205              		.loc 1 247 7 discriminator 2
 206 004e FB68     		ldr	r3, [r7, #12]
 207 0050 1B68     		ldr	r3, [r3]
 208              		.loc 1 247 22 discriminator 2
 209 0052 7A69     		ldr	r2, [r7, #20]
 210 0054 9A60     		str	r2, [r3, #8]
 248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
ARM GAS  /tmp/ccUKMyjJ.s 			page 9


 211              		.loc 1 249 3 discriminator 2
 212 0056 FB68     		ldr	r3, [r7, #12]
 213 0058 1B68     		ldr	r3, [r3]
 214 005a 9A68     		ldr	r2, [r3, #8]
 215 005c FB68     		ldr	r3, [r7, #12]
 216 005e 1B68     		ldr	r3, [r3]
 217 0060 42F40062 		orr	r2, r2, #2048
 218 0064 9A60     		str	r2, [r3, #8]
 250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable IT timestamp */
 252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE_IT(hrtc, RTC_IT_TS);
 219              		.loc 1 252 3 discriminator 2
 220 0066 FB68     		ldr	r3, [r7, #12]
 221 0068 1B68     		ldr	r3, [r3]
 222 006a 9A68     		ldr	r2, [r3, #8]
 223 006c FB68     		ldr	r3, [r7, #12]
 224 006e 1B68     		ldr	r3, [r3]
 225 0070 42F40042 		orr	r2, r2, #32768
 226 0074 9A60     		str	r2, [r3, #8]
 253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if !defined(DUAL_CORE)
 255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* RTC timestamp Interrupt Configuration: EXTI configuration */
 256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
 258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
 227              		.loc 1 259 3 discriminator 2
 228 0076 4FF0B043 		mov	r3, #1476395008
 229 007a 1B68     		ldr	r3, [r3]
 230 007c 4FF0B042 		mov	r2, #1476395008
 231 0080 43F48023 		orr	r3, r3, #262144
 232 0084 1360     		str	r3, [r2]
 260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 233              		.loc 1 262 3 discriminator 2
 234 0086 FB68     		ldr	r3, [r7, #12]
 235 0088 1B68     		ldr	r3, [r3]
 236 008a FF22     		movs	r2, #255
 237 008c 5A62     		str	r2, [r3, #36]
 263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 238              		.loc 1 264 15 discriminator 2
 239 008e FB68     		ldr	r3, [r7, #12]
 240 0090 0122     		movs	r2, #1
 241 0092 83F82120 		strb	r2, [r3, #33]
 265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 242              		.loc 1 267 3 discriminator 2
 243 0096 FB68     		ldr	r3, [r7, #12]
 244 0098 0022     		movs	r2, #0
 245 009a 83F82020 		strb	r2, [r3, #32]
 268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 246              		.loc 1 269 10 discriminator 2
 247 009e 0023     		movs	r3, #0
ARM GAS  /tmp/ccUKMyjJ.s 			page 10


 248              	.L8:
 270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 249              		.loc 1 270 1
 250 00a0 1846     		mov	r0, r3
 251 00a2 1C37     		adds	r7, r7, #28
 252              	.LCFI9:
 253              		.cfi_def_cfa_offset 4
 254 00a4 BD46     		mov	sp, r7
 255              	.LCFI10:
 256              		.cfi_def_cfa_register 13
 257              		@ sp needed
 258 00a6 5DF8047B 		ldr	r7, [sp], #4
 259              	.LCFI11:
 260              		.cfi_restore 7
 261              		.cfi_def_cfa_offset 0
 262 00aa 7047     		bx	lr
 263              	.L10:
 264              		.align	2
 265              	.L9:
 266 00ac F7F7FFFF 		.word	-2057
 267              		.cfi_endproc
 268              	.LFE332:
 270              		.section	.text.HAL_RTCEx_DeactivateTimeStamp,"ax",%progbits
 271              		.align	1
 272              		.global	HAL_RTCEx_DeactivateTimeStamp
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv5-d16
 278              	HAL_RTCEx_DeactivateTimeStamp:
 279              	.LFB333:
 271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate TimeStamp.
 274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTimeStamp(RTC_HandleTypeDef *hrtc)
 278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 280              		.loc 1 278 1
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 16
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285 0000 80B4     		push	{r7}
 286              	.LCFI12:
 287              		.cfi_def_cfa_offset 4
 288              		.cfi_offset 7, -4
 289 0002 85B0     		sub	sp, sp, #20
 290              	.LCFI13:
 291              		.cfi_def_cfa_offset 24
 292 0004 00AF     		add	r7, sp, #0
 293              	.LCFI14:
 294              		.cfi_def_cfa_register 7
 295 0006 7860     		str	r0, [r7, #4]
 279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUKMyjJ.s 			page 11


 281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 296              		.loc 1 282 3
 297 0008 7B68     		ldr	r3, [r7, #4]
 298 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 299 000e 012B     		cmp	r3, #1
 300 0010 01D1     		bne	.L12
 301              		.loc 1 282 3 is_stmt 0 discriminator 1
 302 0012 0223     		movs	r3, #2
 303 0014 2EE0     		b	.L13
 304              	.L12:
 305              		.loc 1 282 3 discriminator 2
 306 0016 7B68     		ldr	r3, [r7, #4]
 307 0018 0122     		movs	r2, #1
 308 001a 83F82020 		strb	r2, [r3, #32]
 283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 309              		.loc 1 284 15 is_stmt 1 discriminator 2
 310 001e 7B68     		ldr	r3, [r7, #4]
 311 0020 0222     		movs	r2, #2
 312 0022 83F82120 		strb	r2, [r3, #33]
 285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 313              		.loc 1 287 3 discriminator 2
 314 0026 7B68     		ldr	r3, [r7, #4]
 315 0028 1B68     		ldr	r3, [r3]
 316 002a CA22     		movs	r2, #202
 317 002c 5A62     		str	r2, [r3, #36]
 318 002e 7B68     		ldr	r3, [r7, #4]
 319 0030 1B68     		ldr	r3, [r3]
 320 0032 5322     		movs	r2, #83
 321 0034 5A62     		str	r2, [r3, #36]
 288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
 290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_DISABLE_IT(hrtc, RTC_IT_TS);
 322              		.loc 1 290 3 discriminator 2
 323 0036 7B68     		ldr	r3, [r7, #4]
 324 0038 1B68     		ldr	r3, [r3]
 325 003a 9A68     		ldr	r2, [r3, #8]
 326 003c 7B68     		ldr	r3, [r7, #4]
 327 003e 1B68     		ldr	r3, [r3]
 328 0040 22F40042 		bic	r2, r2, #32768
 329 0044 9A60     		str	r2, [r3, #8]
 291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 330              		.loc 1 293 27 discriminator 2
 331 0046 7B68     		ldr	r3, [r7, #4]
 332 0048 1B68     		ldr	r3, [r3]
 333              		.loc 1 293 37 discriminator 2
 334 004a 9A68     		ldr	r2, [r3, #8]
 335              		.loc 1 293 10 discriminator 2
 336 004c 0C4B     		ldr	r3, .L14
 337 004e 1340     		ands	r3, r3, r2
 338 0050 FB60     		str	r3, [r7, #12]
 294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUKMyjJ.s 			page 12


 295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 339              		.loc 1 296 7 discriminator 2
 340 0052 7B68     		ldr	r3, [r7, #4]
 341 0054 1B68     		ldr	r3, [r3]
 342              		.loc 1 296 22 discriminator 2
 343 0056 FA68     		ldr	r2, [r7, #12]
 344 0058 9A60     		str	r2, [r3, #8]
 297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 345              		.loc 1 299 3 discriminator 2
 346 005a 7B68     		ldr	r3, [r7, #4]
 347 005c 1B68     		ldr	r3, [r3]
 348 005e FF22     		movs	r2, #255
 349 0060 5A62     		str	r2, [r3, #36]
 300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 350              		.loc 1 301 15 discriminator 2
 351 0062 7B68     		ldr	r3, [r7, #4]
 352 0064 0122     		movs	r2, #1
 353 0066 83F82120 		strb	r2, [r3, #33]
 302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 354              		.loc 1 304 3 discriminator 2
 355 006a 7B68     		ldr	r3, [r7, #4]
 356 006c 0022     		movs	r2, #0
 357 006e 83F82020 		strb	r2, [r3, #32]
 305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 358              		.loc 1 306 10 discriminator 2
 359 0072 0023     		movs	r3, #0
 360              	.L13:
 307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 361              		.loc 1 307 1
 362 0074 1846     		mov	r0, r3
 363 0076 1437     		adds	r7, r7, #20
 364              	.LCFI15:
 365              		.cfi_def_cfa_offset 4
 366 0078 BD46     		mov	sp, r7
 367              	.LCFI16:
 368              		.cfi_def_cfa_register 13
 369              		@ sp needed
 370 007a 5DF8047B 		ldr	r7, [sp], #4
 371              	.LCFI17:
 372              		.cfi_restore 7
 373              		.cfi_def_cfa_offset 0
 374 007e 7047     		bx	lr
 375              	.L15:
 376              		.align	2
 377              	.L14:
 378 0080 F7F7FFFF 		.word	-2057
 379              		.cfi_endproc
 380              	.LFE333:
 382              		.section	.text.HAL_RTCEx_SetInternalTimeStamp,"ax",%progbits
 383              		.align	1
ARM GAS  /tmp/ccUKMyjJ.s 			page 13


 384              		.global	HAL_RTCEx_SetInternalTimeStamp
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 388              		.fpu fpv5-d16
 390              	HAL_RTCEx_SetInternalTimeStamp:
 391              	.LFB334:
 308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Internal TimeStamp.
 311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the internal TimeStamp feature.
 312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetInternalTimeStamp(RTC_HandleTypeDef *hrtc)
 316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 392              		.loc 1 316 1
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 8
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397 0000 80B4     		push	{r7}
 398              	.LCFI18:
 399              		.cfi_def_cfa_offset 4
 400              		.cfi_offset 7, -4
 401 0002 83B0     		sub	sp, sp, #12
 402              	.LCFI19:
 403              		.cfi_def_cfa_offset 16
 404 0004 00AF     		add	r7, sp, #0
 405              	.LCFI20:
 406              		.cfi_def_cfa_register 7
 407 0006 7860     		str	r0, [r7, #4]
 317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 408              		.loc 1 318 3
 409 0008 7B68     		ldr	r3, [r7, #4]
 410 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 411 000e 012B     		cmp	r3, #1
 412 0010 01D1     		bne	.L17
 413              		.loc 1 318 3 is_stmt 0 discriminator 1
 414 0012 0223     		movs	r3, #2
 415 0014 24E0     		b	.L18
 416              	.L17:
 417              		.loc 1 318 3 discriminator 2
 418 0016 7B68     		ldr	r3, [r7, #4]
 419 0018 0122     		movs	r2, #1
 420 001a 83F82020 		strb	r2, [r3, #32]
 319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 421              		.loc 1 320 15 is_stmt 1 discriminator 2
 422 001e 7B68     		ldr	r3, [r7, #4]
 423 0020 0222     		movs	r2, #2
 424 0022 83F82120 		strb	r2, [r3, #33]
 321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 425              		.loc 1 323 3 discriminator 2
ARM GAS  /tmp/ccUKMyjJ.s 			page 14


 426 0026 7B68     		ldr	r3, [r7, #4]
 427 0028 1B68     		ldr	r3, [r3]
 428 002a CA22     		movs	r2, #202
 429 002c 5A62     		str	r2, [r3, #36]
 430 002e 7B68     		ldr	r3, [r7, #4]
 431 0030 1B68     		ldr	r3, [r3]
 432 0032 5322     		movs	r2, #83
 433 0034 5A62     		str	r2, [r3, #36]
 324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the internal Time Stamp Enable bits */
 326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_ENABLE(hrtc);
 434              		.loc 1 326 3 discriminator 2
 435 0036 7B68     		ldr	r3, [r7, #4]
 436 0038 1B68     		ldr	r3, [r3]
 437 003a 9A68     		ldr	r2, [r3, #8]
 438 003c 7B68     		ldr	r3, [r7, #4]
 439 003e 1B68     		ldr	r3, [r3]
 440 0040 42F08072 		orr	r2, r2, #16777216
 441 0044 9A60     		str	r2, [r3, #8]
 327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 442              		.loc 1 329 3 discriminator 2
 443 0046 7B68     		ldr	r3, [r7, #4]
 444 0048 1B68     		ldr	r3, [r3]
 445 004a FF22     		movs	r2, #255
 446 004c 5A62     		str	r2, [r3, #36]
 330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
 332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 447              		.loc 1 332 15 discriminator 2
 448 004e 7B68     		ldr	r3, [r7, #4]
 449 0050 0122     		movs	r2, #1
 450 0052 83F82120 		strb	r2, [r3, #33]
 333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 451              		.loc 1 335 3 discriminator 2
 452 0056 7B68     		ldr	r3, [r7, #4]
 453 0058 0022     		movs	r2, #0
 454 005a 83F82020 		strb	r2, [r3, #32]
 336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 455              		.loc 1 337 10 discriminator 2
 456 005e 0023     		movs	r3, #0
 457              	.L18:
 338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 458              		.loc 1 338 1
 459 0060 1846     		mov	r0, r3
 460 0062 0C37     		adds	r7, r7, #12
 461              	.LCFI21:
 462              		.cfi_def_cfa_offset 4
 463 0064 BD46     		mov	sp, r7
 464              	.LCFI22:
 465              		.cfi_def_cfa_register 13
 466              		@ sp needed
 467 0066 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccUKMyjJ.s 			page 15


 468              	.LCFI23:
 469              		.cfi_restore 7
 470              		.cfi_def_cfa_offset 0
 471 006a 7047     		bx	lr
 472              		.cfi_endproc
 473              	.LFE334:
 475              		.section	.text.HAL_RTCEx_DeactivateInternalTimeStamp,"ax",%progbits
 476              		.align	1
 477              		.global	HAL_RTCEx_DeactivateInternalTimeStamp
 478              		.syntax unified
 479              		.thumb
 480              		.thumb_func
 481              		.fpu fpv5-d16
 483              	HAL_RTCEx_DeactivateInternalTimeStamp:
 484              	.LFB335:
 339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate Internal TimeStamp.
 342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateInternalTimeStamp(RTC_HandleTypeDef *hrtc)
 346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 485              		.loc 1 346 1
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 8
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 490 0000 80B4     		push	{r7}
 491              	.LCFI24:
 492              		.cfi_def_cfa_offset 4
 493              		.cfi_offset 7, -4
 494 0002 83B0     		sub	sp, sp, #12
 495              	.LCFI25:
 496              		.cfi_def_cfa_offset 16
 497 0004 00AF     		add	r7, sp, #0
 498              	.LCFI26:
 499              		.cfi_def_cfa_register 7
 500 0006 7860     		str	r0, [r7, #4]
 347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 501              		.loc 1 348 3
 502 0008 7B68     		ldr	r3, [r7, #4]
 503 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 504 000e 012B     		cmp	r3, #1
 505 0010 01D1     		bne	.L20
 506              		.loc 1 348 3 is_stmt 0 discriminator 1
 507 0012 0223     		movs	r3, #2
 508 0014 24E0     		b	.L21
 509              	.L20:
 510              		.loc 1 348 3 discriminator 2
 511 0016 7B68     		ldr	r3, [r7, #4]
 512 0018 0122     		movs	r2, #1
 513 001a 83F82020 		strb	r2, [r3, #32]
 349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 514              		.loc 1 350 15 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccUKMyjJ.s 			page 16


 515 001e 7B68     		ldr	r3, [r7, #4]
 516 0020 0222     		movs	r2, #2
 517 0022 83F82120 		strb	r2, [r3, #33]
 351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 518              		.loc 1 353 3 discriminator 2
 519 0026 7B68     		ldr	r3, [r7, #4]
 520 0028 1B68     		ldr	r3, [r3]
 521 002a CA22     		movs	r2, #202
 522 002c 5A62     		str	r2, [r3, #36]
 523 002e 7B68     		ldr	r3, [r7, #4]
 524 0030 1B68     		ldr	r3, [r3]
 525 0032 5322     		movs	r2, #83
 526 0034 5A62     		str	r2, [r3, #36]
 354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the internal Time Stamp Enable bits */
 356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_DISABLE(hrtc);
 527              		.loc 1 356 3 discriminator 2
 528 0036 7B68     		ldr	r3, [r7, #4]
 529 0038 1B68     		ldr	r3, [r3]
 530 003a 9A68     		ldr	r2, [r3, #8]
 531 003c 7B68     		ldr	r3, [r7, #4]
 532 003e 1B68     		ldr	r3, [r3]
 533 0040 22F08072 		bic	r2, r2, #16777216
 534 0044 9A60     		str	r2, [r3, #8]
 357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 535              		.loc 1 359 3 discriminator 2
 536 0046 7B68     		ldr	r3, [r7, #4]
 537 0048 1B68     		ldr	r3, [r3]
 538 004a FF22     		movs	r2, #255
 539 004c 5A62     		str	r2, [r3, #36]
 360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 540              		.loc 1 361 15 discriminator 2
 541 004e 7B68     		ldr	r3, [r7, #4]
 542 0050 0122     		movs	r2, #1
 543 0052 83F82120 		strb	r2, [r3, #33]
 362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 544              		.loc 1 364 3 discriminator 2
 545 0056 7B68     		ldr	r3, [r7, #4]
 546 0058 0022     		movs	r2, #0
 547 005a 83F82020 		strb	r2, [r3, #32]
 365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 548              		.loc 1 366 10 discriminator 2
 549 005e 0023     		movs	r3, #0
 550              	.L21:
 367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 551              		.loc 1 367 1
 552 0060 1846     		mov	r0, r3
 553 0062 0C37     		adds	r7, r7, #12
 554              	.LCFI27:
ARM GAS  /tmp/ccUKMyjJ.s 			page 17


 555              		.cfi_def_cfa_offset 4
 556 0064 BD46     		mov	sp, r7
 557              	.LCFI28:
 558              		.cfi_def_cfa_register 13
 559              		@ sp needed
 560 0066 5DF8047B 		ldr	r7, [sp], #4
 561              	.LCFI29:
 562              		.cfi_restore 7
 563              		.cfi_def_cfa_offset 0
 564 006a 7047     		bx	lr
 565              		.cfi_endproc
 566              	.LFE335:
 568              		.section	.text.HAL_RTCEx_GetTimeStamp,"ax",%progbits
 569              		.align	1
 570              		.global	HAL_RTCEx_GetTimeStamp
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 574              		.fpu fpv5-d16
 576              	HAL_RTCEx_GetTimeStamp:
 577              	.LFB336:
 368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Get the RTC TimeStamp value.
 371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTimeStamp Pointer to Time structure
 373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTimeStampDate Pointer to Date structure
 374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Format specifies the format of the entered parameters.
 375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
 377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_GetTimeStamp(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTimeStamp, RTC_
 381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 578              		.loc 1 381 1
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 24
 581              		@ frame_needed = 1, uses_anonymous_args = 0
 582 0000 80B5     		push	{r7, lr}
 583              	.LCFI30:
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 7, -8
 586              		.cfi_offset 14, -4
 587 0002 86B0     		sub	sp, sp, #24
 588              	.LCFI31:
 589              		.cfi_def_cfa_offset 32
 590 0004 00AF     		add	r7, sp, #0
 591              	.LCFI32:
 592              		.cfi_def_cfa_register 7
 593 0006 F860     		str	r0, [r7, #12]
 594 0008 B960     		str	r1, [r7, #8]
 595 000a 7A60     		str	r2, [r7, #4]
 596 000c 3B60     		str	r3, [r7]
 382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmptime;
 383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpdate;
 384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUKMyjJ.s 			page 18


 385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_FORMAT(Format));
 387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the TimeStamp time and date registers values */
 389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmptime = (uint32_t)(hrtc->Instance->TSTR & RTC_TR_RESERVED_MASK);
 597              		.loc 1 389 28
 598 000e FB68     		ldr	r3, [r7, #12]
 599 0010 1B68     		ldr	r3, [r3]
 600              		.loc 1 389 38
 601 0012 1A6B     		ldr	r2, [r3, #48]
 602              		.loc 1 389 11
 603 0014 4B4B     		ldr	r3, .L25
 604 0016 1340     		ands	r3, r3, r2
 605 0018 7B61     		str	r3, [r7, #20]
 390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpdate = (uint32_t)(hrtc->Instance->TSDR & RTC_DR_RESERVED_MASK);
 606              		.loc 1 390 28
 607 001a FB68     		ldr	r3, [r7, #12]
 608 001c 1B68     		ldr	r3, [r3]
 609              		.loc 1 390 38
 610 001e 5A6B     		ldr	r2, [r3, #52]
 611              		.loc 1 390 11
 612 0020 494B     		ldr	r3, .L25+4
 613 0022 1340     		ands	r3, r3, r2
 614 0024 3B61     		str	r3, [r7, #16]
 391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Fill the Time structure fields with the read parameters */
 393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->Hours      = (uint8_t)((tmptime & (RTC_TSTR_HT  | RTC_TSTR_HU))  >> RTC_TSTR_HU_Pos);
 615              		.loc 1 393 80
 616 0026 7B69     		ldr	r3, [r7, #20]
 617 0028 1B0C     		lsrs	r3, r3, #16
 618              		.loc 1 393 28
 619 002a DBB2     		uxtb	r3, r3
 620 002c 03F03F03 		and	r3, r3, #63
 621 0030 DAB2     		uxtb	r2, r3
 622              		.loc 1 393 26
 623 0032 BB68     		ldr	r3, [r7, #8]
 624 0034 1A70     		strb	r2, [r3]
 394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->Minutes    = (uint8_t)((tmptime & (RTC_TSTR_MNT | RTC_TSTR_MNU)) >> RTC_TSTR_MNU_Pos)
 625              		.loc 1 394 80
 626 0036 7B69     		ldr	r3, [r7, #20]
 627 0038 1B0A     		lsrs	r3, r3, #8
 628              		.loc 1 394 28
 629 003a DBB2     		uxtb	r3, r3
 630 003c 03F07F03 		and	r3, r3, #127
 631 0040 DAB2     		uxtb	r2, r3
 632              		.loc 1 394 26
 633 0042 BB68     		ldr	r3, [r7, #8]
 634 0044 5A70     		strb	r2, [r3, #1]
 395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->Seconds    = (uint8_t)((tmptime & (RTC_TSTR_ST  | RTC_TSTR_SU))  >> RTC_TSTR_SU_Pos);
 635              		.loc 1 395 28
 636 0046 7B69     		ldr	r3, [r7, #20]
 637 0048 DBB2     		uxtb	r3, r3
 638 004a 03F07F03 		and	r3, r3, #127
 639 004e DAB2     		uxtb	r2, r3
 640              		.loc 1 395 26
 641 0050 BB68     		ldr	r3, [r7, #8]
 642 0052 9A70     		strb	r2, [r3, #2]
ARM GAS  /tmp/ccUKMyjJ.s 			page 19


 396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->TimeFormat = (uint8_t)((tmptime & (RTC_TSTR_PM))                 >> RTC_TSTR_PM_Pos);
 643              		.loc 1 396 80
 644 0054 7B69     		ldr	r3, [r7, #20]
 645 0056 9B0D     		lsrs	r3, r3, #22
 646              		.loc 1 396 28
 647 0058 DBB2     		uxtb	r3, r3
 648 005a 03F00103 		and	r3, r3, #1
 649 005e DAB2     		uxtb	r2, r3
 650              		.loc 1 396 26
 651 0060 BB68     		ldr	r3, [r7, #8]
 652 0062 DA70     		strb	r2, [r3, #3]
 397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->SubSeconds = (uint32_t) hrtc->Instance->TSSSR;
 653              		.loc 1 397 43
 654 0064 FB68     		ldr	r3, [r7, #12]
 655 0066 1B68     		ldr	r3, [r3]
 656              		.loc 1 397 53
 657 0068 9A6B     		ldr	r2, [r3, #56]
 658              		.loc 1 397 26
 659 006a BB68     		ldr	r3, [r7, #8]
 660 006c 5A60     		str	r2, [r3, #4]
 398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Fill the Date structure fields with the read parameters */
 400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStampDate->Year    = 0U;
 661              		.loc 1 400 27
 662 006e 7B68     		ldr	r3, [r7, #4]
 663 0070 0022     		movs	r2, #0
 664 0072 DA70     		strb	r2, [r3, #3]
 401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStampDate->Month   = (uint8_t)((tmpdate & (RTC_TSDR_MT | RTC_TSDR_MU)) >> RTC_TSDR_MU_Pos);
 665              		.loc 1 401 79
 666 0074 3B69     		ldr	r3, [r7, #16]
 667 0076 1B0A     		lsrs	r3, r3, #8
 668              		.loc 1 401 29
 669 0078 DBB2     		uxtb	r3, r3
 670 007a 03F01F03 		and	r3, r3, #31
 671 007e DAB2     		uxtb	r2, r3
 672              		.loc 1 401 27
 673 0080 7B68     		ldr	r3, [r7, #4]
 674 0082 5A70     		strb	r2, [r3, #1]
 402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStampDate->Date    = (uint8_t)((tmpdate & (RTC_TSDR_DT | RTC_TSDR_DU)) >> RTC_TSDR_DU_Pos);
 675              		.loc 1 402 29
 676 0084 3B69     		ldr	r3, [r7, #16]
 677 0086 DBB2     		uxtb	r3, r3
 678 0088 03F03F03 		and	r3, r3, #63
 679 008c DAB2     		uxtb	r2, r3
 680              		.loc 1 402 27
 681 008e 7B68     		ldr	r3, [r7, #4]
 682 0090 9A70     		strb	r2, [r3, #2]
 403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStampDate->WeekDay = (uint8_t)((tmpdate & (RTC_TSDR_WDU))              >> RTC_TSDR_WDU_Pos);
 683              		.loc 1 403 79
 684 0092 3B69     		ldr	r3, [r7, #16]
 685 0094 5B0B     		lsrs	r3, r3, #13
 686              		.loc 1 403 29
 687 0096 DBB2     		uxtb	r3, r3
 688 0098 03F00703 		and	r3, r3, #7
 689 009c DAB2     		uxtb	r2, r3
 690              		.loc 1 403 27
 691 009e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUKMyjJ.s 			page 20


 692 00a0 1A70     		strb	r2, [r3]
 404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the input parameters format */
 406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (Format == RTC_FORMAT_BIN)
 693              		.loc 1 406 6
 694 00a2 3B68     		ldr	r3, [r7]
 695 00a4 002B     		cmp	r3, #0
 696 00a6 35D1     		bne	.L23
 407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Convert the TimeStamp structure parameters to Binary format */
 409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStamp->Hours   = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Hours);
 697              		.loc 1 409 36
 698 00a8 BB68     		ldr	r3, [r7, #8]
 699 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 700 00ac 1846     		mov	r0, r3
 701 00ae FFF7FEFF 		bl	RTC_Bcd2ToByte
 702 00b2 0346     		mov	r3, r0
 703 00b4 1A46     		mov	r2, r3
 704              		.loc 1 409 25
 705 00b6 BB68     		ldr	r3, [r7, #8]
 706 00b8 1A70     		strb	r2, [r3]
 410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
 707              		.loc 1 410 36
 708 00ba BB68     		ldr	r3, [r7, #8]
 709 00bc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 710 00be 1846     		mov	r0, r3
 711 00c0 FFF7FEFF 		bl	RTC_Bcd2ToByte
 712 00c4 0346     		mov	r3, r0
 713 00c6 1A46     		mov	r2, r3
 714              		.loc 1 410 25
 715 00c8 BB68     		ldr	r3, [r7, #8]
 716 00ca 5A70     		strb	r2, [r3, #1]
 411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 717              		.loc 1 411 36
 718 00cc BB68     		ldr	r3, [r7, #8]
 719 00ce 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 720 00d0 1846     		mov	r0, r3
 721 00d2 FFF7FEFF 		bl	RTC_Bcd2ToByte
 722 00d6 0346     		mov	r3, r0
 723 00d8 1A46     		mov	r2, r3
 724              		.loc 1 411 25
 725 00da BB68     		ldr	r3, [r7, #8]
 726 00dc 9A70     		strb	r2, [r3, #2]
 412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Convert the DateTimeStamp structure parameters to Binary format */
 414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStampDate->Month   = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Month);
 727              		.loc 1 414 40
 728 00de 7B68     		ldr	r3, [r7, #4]
 729 00e0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 730 00e2 1846     		mov	r0, r3
 731 00e4 FFF7FEFF 		bl	RTC_Bcd2ToByte
 732 00e8 0346     		mov	r3, r0
 733 00ea 1A46     		mov	r2, r3
 734              		.loc 1 414 29
 735 00ec 7B68     		ldr	r3, [r7, #4]
 736 00ee 5A70     		strb	r2, [r3, #1]
 415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStampDate->Date    = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
ARM GAS  /tmp/ccUKMyjJ.s 			page 21


 737              		.loc 1 415 40
 738 00f0 7B68     		ldr	r3, [r7, #4]
 739 00f2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 740 00f4 1846     		mov	r0, r3
 741 00f6 FFF7FEFF 		bl	RTC_Bcd2ToByte
 742 00fa 0346     		mov	r3, r0
 743 00fc 1A46     		mov	r2, r3
 744              		.loc 1 415 29
 745 00fe 7B68     		ldr	r3, [r7, #4]
 746 0100 9A70     		strb	r2, [r3, #2]
 416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 747              		.loc 1 416 40
 748 0102 7B68     		ldr	r3, [r7, #4]
 749 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 750 0106 1846     		mov	r0, r3
 751 0108 FFF7FEFF 		bl	RTC_Bcd2ToByte
 752 010c 0346     		mov	r3, r0
 753 010e 1A46     		mov	r2, r3
 754              		.loc 1 416 29
 755 0110 7B68     		ldr	r3, [r7, #4]
 756 0112 1A70     		strb	r2, [r3]
 757              	.L23:
 417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the TIMESTAMP Flags */
 420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_ITSF);
 758              		.loc 1 420 3
 759 0114 FB68     		ldr	r3, [r7, #12]
 760 0116 1B68     		ldr	r3, [r3]
 761 0118 DB68     		ldr	r3, [r3, #12]
 762 011a D9B2     		uxtb	r1, r3
 763 011c FB68     		ldr	r3, [r7, #12]
 764 011e 1A68     		ldr	r2, [r3]
 765 0120 0A4B     		ldr	r3, .L25+8
 766 0122 0B43     		orrs	r3, r3, r1
 767 0124 D360     		str	r3, [r2, #12]
 421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 768              		.loc 1 421 3
 769 0126 FB68     		ldr	r3, [r7, #12]
 770 0128 1B68     		ldr	r3, [r3]
 771 012a DB68     		ldr	r3, [r3, #12]
 772 012c DAB2     		uxtb	r2, r3
 773 012e FB68     		ldr	r3, [r7, #12]
 774 0130 1B68     		ldr	r3, [r3]
 775 0132 62F40862 		orn	r2, r2, #2176
 776 0136 DA60     		str	r2, [r3, #12]
 422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 777              		.loc 1 423 10
 778 0138 0023     		movs	r3, #0
 424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 779              		.loc 1 424 1
 780 013a 1846     		mov	r0, r3
 781 013c 1837     		adds	r7, r7, #24
 782              	.LCFI33:
 783              		.cfi_def_cfa_offset 8
 784 013e BD46     		mov	sp, r7
ARM GAS  /tmp/ccUKMyjJ.s 			page 22


 785              	.LCFI34:
 786              		.cfi_def_cfa_register 13
 787              		@ sp needed
 788 0140 80BD     		pop	{r7, pc}
 789              	.L26:
 790 0142 00BF     		.align	2
 791              	.L25:
 792 0144 7F7F7F00 		.word	8355711
 793 0148 3FFFFF00 		.word	16777023
 794 014c 7FFFFDFF 		.word	-131201
 795              		.cfi_endproc
 796              	.LFE336:
 798              		.section	.text.HAL_RTCEx_SetTamper,"ax",%progbits
 799              		.align	1
 800              		.global	HAL_RTCEx_SetTamper
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 804              		.fpu fpv5-d16
 806              	HAL_RTCEx_SetTamper:
 807              	.LFB337:
 425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
 428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group5
 431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief      Extended RTC Tamper functions
 432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
 433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
 434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ==============================================================================
 435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                         ##### Tamper functions #####
 436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ==============================================================================
 437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..]
 438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   (+) Before calling any tamper or internal tamper function, you have to call first
 439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTC_Init() function.
 440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   (+) In that ine you can select to output tamper event on RTC pin.
 441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..]
 442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   (+) Enable the Tamper and configure the Tamper filter count, trigger Edge
 443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       or Level according to the Tamper filter (if equal to 0 Edge else Level)
 444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       value, sampling frequency, NoErase, MaskFlag, precharge or discharge and
 445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       Pull-UP, timestamp using the HAL_RTCEx_SetTamper() function.
 446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       You can configure Tamper with interrupt mode using HAL_RTCEx_SetTamper_IT() function.
 447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   (+) The default configuration of the Tamper erases the backup registers. To avoid
 448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       erase, enable the NoErase field on the TAMP_TAMPCR register.
 449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..]
 450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   (+) Enable Internal Tamper and configure it with interrupt, timestamp using
 451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       the HAL_RTCEx_SetInternalTamper() function.
 452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
 454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** * @{
 455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** */
 456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_TAMP1E)
 458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Tamper
 460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
ARM GAS  /tmp/ccUKMyjJ.s 			page 23


 461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper(RTC_HandleTypeDef * hrtc, RTC_TamperTypeDef * sTamper)
 465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on TAMPER registers base address */
 469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET);
 470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER_CONFIG_CORRECT(sTamper->Filter, sTamper->Trigger));
 482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configuration register 2 */
 484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = tamp->CR2;
 485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg &= ~((sTamper->Tamper << TAMP_CR2_TAMP1TRG_Pos) | (sTamper->Tamper << TAMP_CR2_TAMP1MSK_Po
 486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper trigger bit */
 488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((sTamper->Trigger == RTC_TAMPERTRIGGER_HIGHLEVEL) || (sTamper->Trigger == RTC_TAMPERTRIGGER_F
 489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1TRG_Pos);
 491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper flags masking bit */
 494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1MSK_Pos);
 497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper backup registers erasure bit */
 500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1NOERASE_Pos);
 503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR2 = tmpreg;
 505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure filtering parameters */
 507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->FLTCR = (sTamper->Filter)            | (sTamper->SamplingFrequency) | \
 508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                 (sTamper->PrechargeDuration) | (sTamper->TamperPullUp);
 509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure Timestamp saving on tamper detection */
 511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->CR & RTC_CR_TAMPTS) != (sTamper->TimeStampOnTamperDetection))
 512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg = (hrtc->Instance->CR & ~RTC_CR_TAMPTS);
 515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->CR = (tmpreg | (sTamper->TimeStampOnTamperDetection));
 516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
ARM GAS  /tmp/ccUKMyjJ.s 			page 24


 518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable selected tamper */
 520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR1 |= (sTamper->Tamper);
 521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_TAMP1E */
 525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined (RTC_TAMPCR_TAMP1E)
 526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Tamper.
 528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   By calling this API we disable the tamper interrupt for all tampers.
 529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper(RTC_HandleTypeDef * hrtc, RTC_TamperTypeDef * sTamper)
 534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 808              		.loc 1 534 1
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 16
 811              		@ frame_needed = 1, uses_anonymous_args = 0
 812              		@ link register save eliminated.
 813 0000 80B4     		push	{r7}
 814              	.LCFI35:
 815              		.cfi_def_cfa_offset 4
 816              		.cfi_offset 7, -4
 817 0002 85B0     		sub	sp, sp, #20
 818              	.LCFI36:
 819              		.cfi_def_cfa_offset 24
 820 0004 00AF     		add	r7, sp, #0
 821              	.LCFI37:
 822              		.cfi_def_cfa_register 7
 823 0006 7860     		str	r0, [r7, #4]
 824 0008 3960     		str	r1, [r7]
 535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER_CONFIG_CORRECT(sTamper->Filter, sTamper->Trigger));
 548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 825              		.loc 1 550 3
 826 000a 7B68     		ldr	r3, [r7, #4]
 827 000c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 828 0010 012B     		cmp	r3, #1
 829 0012 01D1     		bne	.L28
 830              		.loc 1 550 3 is_stmt 0 discriminator 1
 831 0014 0223     		movs	r3, #2
ARM GAS  /tmp/ccUKMyjJ.s 			page 25


 832 0016 CAE0     		b	.L29
 833              	.L28:
 834              		.loc 1 550 3 discriminator 2
 835 0018 7B68     		ldr	r3, [r7, #4]
 836 001a 0122     		movs	r2, #1
 837 001c 83F82020 		strb	r2, [r3, #32]
 551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 838              		.loc 1 552 15 is_stmt 1 discriminator 2
 839 0020 7B68     		ldr	r3, [r7, #4]
 840 0022 0222     		movs	r2, #2
 841 0024 83F82120 		strb	r2, [r3, #33]
 553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy control register into temporary variable */
 555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = hrtc->Instance->TAMPCR;
 842              		.loc 1 555 16 discriminator 2
 843 0028 7B68     		ldr	r3, [r7, #4]
 844 002a 1B68     		ldr	r3, [r3]
 845              		.loc 1 555 10 discriminator 2
 846 002c 1B6C     		ldr	r3, [r3, #64]
 847 002e FB60     		str	r3, [r7, #12]
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable selected tamper */
 558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= (sTamper->Tamper);
 848              		.loc 1 558 21 discriminator 2
 849 0030 3B68     		ldr	r3, [r7]
 850 0032 1B68     		ldr	r3, [r3]
 851              		.loc 1 558 10 discriminator 2
 852 0034 FA68     		ldr	r2, [r7, #12]
 853 0036 1343     		orrs	r3, r3, r2
 854 0038 FB60     		str	r3, [r7, #12]
 559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the bit (located just next to the tamper enable bit) */
 561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((sTamper->Trigger == RTC_TAMPERTRIGGER_HIGHLEVEL) || (sTamper->Trigger == RTC_TAMPERTRIGGER_F
 855              		.loc 1 561 15 discriminator 2
 856 003a 3B68     		ldr	r3, [r7]
 857 003c 9B68     		ldr	r3, [r3, #8]
 858              		.loc 1 561 6 discriminator 2
 859 003e 082B     		cmp	r3, #8
 860 0040 03D0     		beq	.L30
 861              		.loc 1 561 68 discriminator 1
 862 0042 3B68     		ldr	r3, [r7]
 863 0044 9B68     		ldr	r3, [r3, #8]
 864              		.loc 1 561 57 discriminator 1
 865 0046 022B     		cmp	r3, #2
 866 0048 06D1     		bne	.L31
 867              	.L30:
 562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Set the tamper trigger bit */
 564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (uint32_t)(sTamper->Tamper << 1U);
 868              		.loc 1 564 33
 869 004a 3B68     		ldr	r3, [r7]
 870 004c 1B68     		ldr	r3, [r3]
 871              		.loc 1 564 42
 872 004e 5B00     		lsls	r3, r3, #1
 873              		.loc 1 564 12
 874 0050 FA68     		ldr	r2, [r7, #12]
ARM GAS  /tmp/ccUKMyjJ.s 			page 26


 875 0052 1343     		orrs	r3, r3, r2
 876 0054 FB60     		str	r3, [r7, #12]
 877 0056 06E0     		b	.L32
 878              	.L31:
 565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Clear the tamper trigger bit */
 569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg &= (uint32_t)~(sTamper->Tamper << 1U);
 879              		.loc 1 569 34
 880 0058 3B68     		ldr	r3, [r7]
 881 005a 1B68     		ldr	r3, [r3]
 882              		.loc 1 569 43
 883 005c 5B00     		lsls	r3, r3, #1
 884              		.loc 1 569 25
 885 005e DB43     		mvns	r3, r3
 886              		.loc 1 569 12
 887 0060 FA68     		ldr	r2, [r7, #12]
 888 0062 1340     		ands	r3, r3, r2
 889 0064 FB60     		str	r3, [r7, #12]
 890              	.L32:
 570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper backup registers erasure bit */
 573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 891              		.loc 1 573 14
 892 0066 3B68     		ldr	r3, [r7]
 893 0068 DB68     		ldr	r3, [r3, #12]
 894              		.loc 1 573 6
 895 006a 002B     		cmp	r3, #0
 896 006c 1ED0     		beq	.L33
 574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 897              		.loc 1 576 17
 898 006e 3B68     		ldr	r3, [r7]
 899 0070 1B68     		ldr	r3, [r3]
 900              		.loc 1 576 26
 901 0072 03F00103 		and	r3, r3, #1
 902              		.loc 1 576 8
 903 0076 002B     		cmp	r3, #0
 904 0078 03D0     		beq	.L34
 577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP1NOERASE);
 905              		.loc 1 578 14
 906 007a FB68     		ldr	r3, [r7, #12]
 907 007c 43F40033 		orr	r3, r3, #131072
 908 0080 FB60     		str	r3, [r7, #12]
 909              	.L34:
 579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 910              		.loc 1 582 17
 911 0082 3B68     		ldr	r3, [r7]
 912 0084 1B68     		ldr	r3, [r3]
 913              		.loc 1 582 26
ARM GAS  /tmp/ccUKMyjJ.s 			page 27


 914 0086 03F00803 		and	r3, r3, #8
 915              		.loc 1 582 8
 916 008a 002B     		cmp	r3, #0
 917 008c 03D0     		beq	.L35
 583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP2NOERASE);
 918              		.loc 1 584 14
 919 008e FB68     		ldr	r3, [r7, #12]
 920 0090 43F48013 		orr	r3, r3, #1048576
 921 0094 FB60     		str	r3, [r7, #12]
 922              	.L35:
 585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
 588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 923              		.loc 1 588 17
 924 0096 3B68     		ldr	r3, [r7]
 925 0098 1B68     		ldr	r3, [r3]
 926              		.loc 1 588 26
 927 009a 03F02003 		and	r3, r3, #32
 928              		.loc 1 588 8
 929 009e 002B     		cmp	r3, #0
 930 00a0 22D0     		beq	.L36
 589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP3NOERASE);
 931              		.loc 1 590 14
 932 00a2 FB68     		ldr	r3, [r7, #12]
 933 00a4 43F40003 		orr	r3, r3, #8388608
 934 00a8 FB60     		str	r3, [r7, #12]
 935 00aa 1DE0     		b	.L36
 936              	.L33:
 591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
 593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 937              		.loc 1 597 17
 938 00ac 3B68     		ldr	r3, [r7]
 939 00ae 1B68     		ldr	r3, [r3]
 940              		.loc 1 597 26
 941 00b0 03F00103 		and	r3, r3, #1
 942              		.loc 1 597 8
 943 00b4 002B     		cmp	r3, #0
 944 00b6 03D0     		beq	.L37
 598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP1NOERASE);
 945              		.loc 1 599 14
 946 00b8 FB68     		ldr	r3, [r7, #12]
 947 00ba 23F40033 		bic	r3, r3, #131072
 948 00be FB60     		str	r3, [r7, #12]
 949              	.L37:
 600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
ARM GAS  /tmp/ccUKMyjJ.s 			page 28


 950              		.loc 1 603 17
 951 00c0 3B68     		ldr	r3, [r7]
 952 00c2 1B68     		ldr	r3, [r3]
 953              		.loc 1 603 26
 954 00c4 03F00803 		and	r3, r3, #8
 955              		.loc 1 603 8
 956 00c8 002B     		cmp	r3, #0
 957 00ca 03D0     		beq	.L38
 604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP2NOERASE);
 958              		.loc 1 605 14
 959 00cc FB68     		ldr	r3, [r7, #12]
 960 00ce 23F48013 		bic	r3, r3, #1048576
 961 00d2 FB60     		str	r3, [r7, #12]
 962              	.L38:
 606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
 609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 963              		.loc 1 609 17
 964 00d4 3B68     		ldr	r3, [r7]
 965 00d6 1B68     		ldr	r3, [r3]
 966              		.loc 1 609 26
 967 00d8 03F02003 		and	r3, r3, #32
 968              		.loc 1 609 8
 969 00dc 002B     		cmp	r3, #0
 970 00de 03D0     		beq	.L36
 610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP3NOERASE);
 971              		.loc 1 611 14
 972 00e0 FB68     		ldr	r3, [r7, #12]
 973 00e2 23F40003 		bic	r3, r3, #8388608
 974 00e6 FB60     		str	r3, [r7, #12]
 975              	.L36:
 612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
 614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper flags masking bit */
 617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 976              		.loc 1 617 14
 977 00e8 3B68     		ldr	r3, [r7]
 978 00ea 1B69     		ldr	r3, [r3, #16]
 979              		.loc 1 617 6
 980 00ec 002B     		cmp	r3, #0
 981 00ee 1ED0     		beq	.L39
 618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 982              		.loc 1 620 17
 983 00f0 3B68     		ldr	r3, [r7]
 984 00f2 1B68     		ldr	r3, [r3]
 985              		.loc 1 620 26
 986 00f4 03F00103 		and	r3, r3, #1
 987              		.loc 1 620 8
 988 00f8 002B     		cmp	r3, #0
 989 00fa 03D0     		beq	.L40
ARM GAS  /tmp/ccUKMyjJ.s 			page 29


 621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP1MF);
 990              		.loc 1 622 14
 991 00fc FB68     		ldr	r3, [r7, #12]
 992 00fe 43F48023 		orr	r3, r3, #262144
 993 0102 FB60     		str	r3, [r7, #12]
 994              	.L40:
 623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 995              		.loc 1 626 17
 996 0104 3B68     		ldr	r3, [r7]
 997 0106 1B68     		ldr	r3, [r3]
 998              		.loc 1 626 26
 999 0108 03F00803 		and	r3, r3, #8
 1000              		.loc 1 626 8
 1001 010c 002B     		cmp	r3, #0
 1002 010e 03D0     		beq	.L41
 627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP2MF);
 1003              		.loc 1 628 14
 1004 0110 FB68     		ldr	r3, [r7, #12]
 1005 0112 43F40013 		orr	r3, r3, #2097152
 1006 0116 FB60     		str	r3, [r7, #12]
 1007              	.L41:
 629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
 632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 1008              		.loc 1 632 17
 1009 0118 3B68     		ldr	r3, [r7]
 1010 011a 1B68     		ldr	r3, [r3]
 1011              		.loc 1 632 26
 1012 011c 03F02003 		and	r3, r3, #32
 1013              		.loc 1 632 8
 1014 0120 002B     		cmp	r3, #0
 1015 0122 22D0     		beq	.L42
 633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP3MF);
 1016              		.loc 1 634 14
 1017 0124 FB68     		ldr	r3, [r7, #12]
 1018 0126 43F08073 		orr	r3, r3, #16777216
 1019 012a FB60     		str	r3, [r7, #12]
 1020 012c 1DE0     		b	.L42
 1021              	.L39:
 635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
 637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 1022              		.loc 1 641 17
 1023 012e 3B68     		ldr	r3, [r7]
 1024 0130 1B68     		ldr	r3, [r3]
 1025              		.loc 1 641 26
ARM GAS  /tmp/ccUKMyjJ.s 			page 30


 1026 0132 03F00103 		and	r3, r3, #1
 1027              		.loc 1 641 8
 1028 0136 002B     		cmp	r3, #0
 1029 0138 03D0     		beq	.L43
 642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP1MF);
 1030              		.loc 1 643 14
 1031 013a FB68     		ldr	r3, [r7, #12]
 1032 013c 23F48023 		bic	r3, r3, #262144
 1033 0140 FB60     		str	r3, [r7, #12]
 1034              	.L43:
 644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 1035              		.loc 1 647 17
 1036 0142 3B68     		ldr	r3, [r7]
 1037 0144 1B68     		ldr	r3, [r3]
 1038              		.loc 1 647 26
 1039 0146 03F00803 		and	r3, r3, #8
 1040              		.loc 1 647 8
 1041 014a 002B     		cmp	r3, #0
 1042 014c 03D0     		beq	.L44
 648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP2MF);
 1043              		.loc 1 649 14
 1044 014e FB68     		ldr	r3, [r7, #12]
 1045 0150 23F40013 		bic	r3, r3, #2097152
 1046 0154 FB60     		str	r3, [r7, #12]
 1047              	.L44:
 650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
 653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 1048              		.loc 1 653 17
 1049 0156 3B68     		ldr	r3, [r7]
 1050 0158 1B68     		ldr	r3, [r3]
 1051              		.loc 1 653 26
 1052 015a 03F02003 		and	r3, r3, #32
 1053              		.loc 1 653 8
 1054 015e 002B     		cmp	r3, #0
 1055 0160 03D0     		beq	.L42
 654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP3MF);
 1056              		.loc 1 655 14
 1057 0162 FB68     		ldr	r3, [r7, #12]
 1058 0164 23F08073 		bic	r3, r3, #16777216
 1059 0168 FB60     		str	r3, [r7, #12]
 1060              	.L42:
 656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
 658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clearing remaining fields before setting them */
 661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg &= ~(RTC_TAMPERFILTER_MASK            | RTC_TAMPERSAMPLINGFREQ_RTCCLK_MASK | \
 1061              		.loc 1 661 10
 1062 016a FA68     		ldr	r2, [r7, #12]
ARM GAS  /tmp/ccUKMyjJ.s 			page 31


 1063 016c 134B     		ldr	r3, .L45
 1064 016e 1340     		ands	r3, r3, r2
 1065 0170 FB60     		str	r3, [r7, #12]
 662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               RTC_TAMPERPRECHARGEDURATION_MASK | RTC_TAMPER_PULLUP_MASK             | \
 663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               RTC_TIMESTAMPONTAMPERDETECTION_MASK);
 664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set remaining parameters of desired configuration into temporary variable */
 666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= ((uint32_t)sTamper->Filter            | \
 1066              		.loc 1 666 31
 1067 0172 3B68     		ldr	r3, [r7]
 1068 0174 5A69     		ldr	r2, [r3, #20]
 667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 1069              		.loc 1 667 31
 1070 0176 3B68     		ldr	r3, [r7]
 1071 0178 9B69     		ldr	r3, [r3, #24]
 666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 1072              		.loc 1 666 51
 1073 017a 1A43     		orrs	r2, r2, r3
 668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->PrechargeDuration | \
 1074              		.loc 1 668 31
 1075 017c 3B68     		ldr	r3, [r7]
 1076 017e DB69     		ldr	r3, [r3, #28]
 667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 1077              		.loc 1 667 51
 1078 0180 1A43     		orrs	r2, r2, r3
 669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TamperPullUp      | \
 1079              		.loc 1 669 31
 1080 0182 3B68     		ldr	r3, [r7]
 1081 0184 1B6A     		ldr	r3, [r3, #32]
 668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->PrechargeDuration | \
 1082              		.loc 1 668 51
 1083 0186 1A43     		orrs	r2, r2, r3
 670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TimeStampOnTamperDetection);
 1084              		.loc 1 670 31
 1085 0188 3B68     		ldr	r3, [r7]
 1086 018a 5B6A     		ldr	r3, [r3, #36]
 669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TamperPullUp      | \
 1087              		.loc 1 669 51
 1088 018c 1343     		orrs	r3, r3, r2
 666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 1089              		.loc 1 666 10
 1090 018e FA68     		ldr	r2, [r7, #12]
 1091 0190 1343     		orrs	r3, r3, r2
 1092 0192 FB60     		str	r3, [r7, #12]
 671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy desired configuration into configuration register */
 673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR = tmpreg;
 1093              		.loc 1 673 7
 1094 0194 7B68     		ldr	r3, [r7, #4]
 1095 0196 1B68     		ldr	r3, [r3]
 1096              		.loc 1 673 26
 1097 0198 FA68     		ldr	r2, [r7, #12]
 1098 019a 1A64     		str	r2, [r3, #64]
 674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1099              		.loc 1 675 15
 1100 019c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUKMyjJ.s 			page 32


 1101 019e 0122     		movs	r2, #1
 1102 01a0 83F82120 		strb	r2, [r3, #33]
 676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1103              		.loc 1 678 3
 1104 01a4 7B68     		ldr	r3, [r7, #4]
 1105 01a6 0022     		movs	r2, #0
 1106 01a8 83F82020 		strb	r2, [r3, #32]
 679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1107              		.loc 1 680 10
 1108 01ac 0023     		movs	r3, #0
 1109              	.L29:
 681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1110              		.loc 1 681 1
 1111 01ae 1846     		mov	r0, r3
 1112 01b0 1437     		adds	r7, r7, #20
 1113              	.LCFI38:
 1114              		.cfi_def_cfa_offset 4
 1115 01b2 BD46     		mov	sp, r7
 1116              	.LCFI39:
 1117              		.cfi_def_cfa_register 13
 1118              		@ sp needed
 1119 01b4 5DF8047B 		ldr	r7, [sp], #4
 1120              	.LCFI40:
 1121              		.cfi_restore 7
 1122              		.cfi_def_cfa_offset 0
 1123 01b8 7047     		bx	lr
 1124              	.L46:
 1125 01ba 00BF     		.align	2
 1126              	.L45:
 1127 01bc 7F00FFFF 		.word	-65409
 1128              		.cfi_endproc
 1129              	.LFE337:
 1131              		.section	.text.HAL_RTCEx_SetTamper_IT,"ax",%progbits
 1132              		.align	1
 1133              		.global	HAL_RTCEx_SetTamper_IT
 1134              		.syntax unified
 1135              		.thumb
 1136              		.thumb_func
 1137              		.fpu fpv5-d16
 1139              	HAL_RTCEx_SetTamper_IT:
 1140              	.LFB338:
 682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_TAMP1E)
 685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Tamper with interrupt.
 687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper_IT(RTC_HandleTypeDef * hrtc, RTC_TamperTypeDef * sTamper)
 692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUKMyjJ.s 			page 33


 695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on TAMPER registers base address */
 696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET);
 697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER_CONFIG_CORRECT(sTamper->Filter, sTamper->Trigger));
 709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy configuration register into temporary variable */
 711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = tamp->CR2;
 712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the bits that are going to be configured and leave the others unchanged */
 714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg &= ~((sTamper->Tamper << TAMP_CR2_TAMP1TRG_Pos) | (sTamper->Tamper << TAMP_CR2_TAMP1MSK_Po
 715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper trigger bit */
 717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((sTamper->Trigger == RTC_TAMPERTRIGGER_HIGHLEVEL) || (sTamper->Trigger == RTC_TAMPERTRIGGER_F
 718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1TRG_Pos);
 720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper flags masking bit */
 723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1MSK_Pos);
 726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper backup registers erasure bit */
 729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1NOERASE_Pos);
 732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR2 = tmpreg;
 734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure filtering parameters */
 736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->FLTCR = (sTamper->Filter)            | (sTamper->SamplingFrequency) | \
 737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                 (sTamper->PrechargeDuration) | (sTamper->TamperPullUp);
 738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure Timestamp saving on tamper detection */
 740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->CR & RTC_CR_TAMPTS) != (sTamper->TimeStampOnTamperDetection))
 741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg = (hrtc->Instance->CR & ~RTC_CR_TAMPTS);
 744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->CR = (tmpreg | (sTamper->TimeStampOnTamperDetection));
 745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure RTC Tamper Interrupt: EXTI configuration */
 749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_FALLING_EDGE();
 751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUKMyjJ.s 			page 34


 752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable interrupt on selected tamper */
 753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->IER |= sTamper->Tamper;
 754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable selected tamper */
 756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR1 |= sTamper->Tamper;
 757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_TAMP1E */
 761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Tamper with interrupt.
 764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   By calling this API we force the tamper interrupt for all tampers.
 765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper_IT(RTC_HandleTypeDef * hrtc, RTC_TamperTypeDef * sTamper)
 770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1141              		.loc 1 770 1
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 16
 1144              		@ frame_needed = 1, uses_anonymous_args = 0
 1145              		@ link register save eliminated.
 1146 0000 80B4     		push	{r7}
 1147              	.LCFI41:
 1148              		.cfi_def_cfa_offset 4
 1149              		.cfi_offset 7, -4
 1150 0002 85B0     		sub	sp, sp, #20
 1151              	.LCFI42:
 1152              		.cfi_def_cfa_offset 24
 1153 0004 00AF     		add	r7, sp, #0
 1154              	.LCFI43:
 1155              		.cfi_def_cfa_register 7
 1156 0006 7860     		str	r0, [r7, #4]
 1157 0008 3960     		str	r1, [r7]
 771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_INTERRUPT(sTamper->Interrupt));
 776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER_CONFIG_CORRECT(sTamper->Filter, sTamper->Trigger));
 785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1158              		.loc 1 787 3
 1159 000a 7B68     		ldr	r3, [r7, #4]
 1160 000c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1161 0010 012B     		cmp	r3, #1
ARM GAS  /tmp/ccUKMyjJ.s 			page 35


 1162 0012 01D1     		bne	.L48
 1163              		.loc 1 787 3 is_stmt 0 discriminator 1
 1164 0014 0223     		movs	r3, #2
 1165 0016 D7E0     		b	.L49
 1166              	.L48:
 1167              		.loc 1 787 3 discriminator 2
 1168 0018 7B68     		ldr	r3, [r7, #4]
 1169 001a 0122     		movs	r2, #1
 1170 001c 83F82020 		strb	r2, [r3, #32]
 788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1171              		.loc 1 789 15 is_stmt 1 discriminator 2
 1172 0020 7B68     		ldr	r3, [r7, #4]
 1173 0022 0222     		movs	r2, #2
 1174 0024 83F82120 		strb	r2, [r3, #33]
 790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy control register into temporary variable */
 792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = hrtc->Instance->TAMPCR;
 1175              		.loc 1 792 16 discriminator 2
 1176 0028 7B68     		ldr	r3, [r7, #4]
 1177 002a 1B68     		ldr	r3, [r3]
 1178              		.loc 1 792 10 discriminator 2
 1179 002c 1B6C     		ldr	r3, [r3, #64]
 1180 002e FB60     		str	r3, [r7, #12]
 793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable selected tamper */
 795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= (sTamper->Tamper);
 1181              		.loc 1 795 21 discriminator 2
 1182 0030 3B68     		ldr	r3, [r7]
 1183 0032 1B68     		ldr	r3, [r3]
 1184              		.loc 1 795 10 discriminator 2
 1185 0034 FA68     		ldr	r2, [r7, #12]
 1186 0036 1343     		orrs	r3, r3, r2
 1187 0038 FB60     		str	r3, [r7, #12]
 796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper trigger bit (located just next to the tamper enable bit) */
 798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((sTamper->Trigger == RTC_TAMPERTRIGGER_HIGHLEVEL) || (sTamper->Trigger == RTC_TAMPERTRIGGER_F
 1188              		.loc 1 798 15 discriminator 2
 1189 003a 3B68     		ldr	r3, [r7]
 1190 003c 9B68     		ldr	r3, [r3, #8]
 1191              		.loc 1 798 6 discriminator 2
 1192 003e 082B     		cmp	r3, #8
 1193 0040 03D0     		beq	.L50
 1194              		.loc 1 798 68 discriminator 1
 1195 0042 3B68     		ldr	r3, [r7]
 1196 0044 9B68     		ldr	r3, [r3, #8]
 1197              		.loc 1 798 57 discriminator 1
 1198 0046 022B     		cmp	r3, #2
 1199 0048 06D1     		bne	.L51
 1200              	.L50:
 799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Set the tamper trigger bit */
 801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (uint32_t)(sTamper->Tamper << 1U);
 1201              		.loc 1 801 33
 1202 004a 3B68     		ldr	r3, [r7]
 1203 004c 1B68     		ldr	r3, [r3]
 1204              		.loc 1 801 42
ARM GAS  /tmp/ccUKMyjJ.s 			page 36


 1205 004e 5B00     		lsls	r3, r3, #1
 1206              		.loc 1 801 12
 1207 0050 FA68     		ldr	r2, [r7, #12]
 1208 0052 1343     		orrs	r3, r3, r2
 1209 0054 FB60     		str	r3, [r7, #12]
 1210 0056 06E0     		b	.L52
 1211              	.L51:
 802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Clear the tamper trigger bit */
 806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg &= (uint32_t)~(sTamper->Tamper << 1U);
 1212              		.loc 1 806 34
 1213 0058 3B68     		ldr	r3, [r7]
 1214 005a 1B68     		ldr	r3, [r3]
 1215              		.loc 1 806 43
 1216 005c 5B00     		lsls	r3, r3, #1
 1217              		.loc 1 806 25
 1218 005e DB43     		mvns	r3, r3
 1219              		.loc 1 806 12
 1220 0060 FA68     		ldr	r2, [r7, #12]
 1221 0062 1340     		ands	r3, r3, r2
 1222 0064 FB60     		str	r3, [r7, #12]
 1223              	.L52:
 807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper backup registers erasure bit */
 810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 1224              		.loc 1 810 14
 1225 0066 3B68     		ldr	r3, [r7]
 1226 0068 DB68     		ldr	r3, [r3, #12]
 1227              		.loc 1 810 6
 1228 006a 002B     		cmp	r3, #0
 1229 006c 1ED0     		beq	.L53
 811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 1230              		.loc 1 813 17
 1231 006e 3B68     		ldr	r3, [r7]
 1232 0070 1B68     		ldr	r3, [r3]
 1233              		.loc 1 813 26
 1234 0072 03F00103 		and	r3, r3, #1
 1235              		.loc 1 813 8
 1236 0076 002B     		cmp	r3, #0
 1237 0078 03D0     		beq	.L54
 814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP1NOERASE);
 1238              		.loc 1 815 14
 1239 007a FB68     		ldr	r3, [r7, #12]
 1240 007c 43F40033 		orr	r3, r3, #131072
 1241 0080 FB60     		str	r3, [r7, #12]
 1242              	.L54:
 816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 1243              		.loc 1 819 17
ARM GAS  /tmp/ccUKMyjJ.s 			page 37


 1244 0082 3B68     		ldr	r3, [r7]
 1245 0084 1B68     		ldr	r3, [r3]
 1246              		.loc 1 819 26
 1247 0086 03F00803 		and	r3, r3, #8
 1248              		.loc 1 819 8
 1249 008a 002B     		cmp	r3, #0
 1250 008c 03D0     		beq	.L55
 820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP2NOERASE);
 1251              		.loc 1 821 14
 1252 008e FB68     		ldr	r3, [r7, #12]
 1253 0090 43F48013 		orr	r3, r3, #1048576
 1254 0094 FB60     		str	r3, [r7, #12]
 1255              	.L55:
 822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
 825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 1256              		.loc 1 825 17
 1257 0096 3B68     		ldr	r3, [r7]
 1258 0098 1B68     		ldr	r3, [r3]
 1259              		.loc 1 825 26
 1260 009a 03F02003 		and	r3, r3, #32
 1261              		.loc 1 825 8
 1262 009e 002B     		cmp	r3, #0
 1263 00a0 22D0     		beq	.L56
 826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP3NOERASE);
 1264              		.loc 1 827 14
 1265 00a2 FB68     		ldr	r3, [r7, #12]
 1266 00a4 43F40003 		orr	r3, r3, #8388608
 1267 00a8 FB60     		str	r3, [r7, #12]
 1268 00aa 1DE0     		b	.L56
 1269              	.L53:
 828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
 830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 1270              		.loc 1 834 17
 1271 00ac 3B68     		ldr	r3, [r7]
 1272 00ae 1B68     		ldr	r3, [r3]
 1273              		.loc 1 834 26
 1274 00b0 03F00103 		and	r3, r3, #1
 1275              		.loc 1 834 8
 1276 00b4 002B     		cmp	r3, #0
 1277 00b6 03D0     		beq	.L57
 835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP1NOERASE);
 1278              		.loc 1 836 14
 1279 00b8 FB68     		ldr	r3, [r7, #12]
 1280 00ba 23F40033 		bic	r3, r3, #131072
 1281 00be FB60     		str	r3, [r7, #12]
 1282              	.L57:
 837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
ARM GAS  /tmp/ccUKMyjJ.s 			page 38


 838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 1283              		.loc 1 840 17
 1284 00c0 3B68     		ldr	r3, [r7]
 1285 00c2 1B68     		ldr	r3, [r3]
 1286              		.loc 1 840 26
 1287 00c4 03F00803 		and	r3, r3, #8
 1288              		.loc 1 840 8
 1289 00c8 002B     		cmp	r3, #0
 1290 00ca 03D0     		beq	.L58
 841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP2NOERASE);
 1291              		.loc 1 842 14
 1292 00cc FB68     		ldr	r3, [r7, #12]
 1293 00ce 23F48013 		bic	r3, r3, #1048576
 1294 00d2 FB60     		str	r3, [r7, #12]
 1295              	.L58:
 843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
 846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 1296              		.loc 1 846 17
 1297 00d4 3B68     		ldr	r3, [r7]
 1298 00d6 1B68     		ldr	r3, [r3]
 1299              		.loc 1 846 26
 1300 00d8 03F02003 		and	r3, r3, #32
 1301              		.loc 1 846 8
 1302 00dc 002B     		cmp	r3, #0
 1303 00de 03D0     		beq	.L56
 847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP3NOERASE);
 1304              		.loc 1 848 14
 1305 00e0 FB68     		ldr	r3, [r7, #12]
 1306 00e2 23F40003 		bic	r3, r3, #8388608
 1307 00e6 FB60     		str	r3, [r7, #12]
 1308              	.L56:
 849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
 851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper flags masking bit */
 854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 1309              		.loc 1 854 14
 1310 00e8 3B68     		ldr	r3, [r7]
 1311 00ea 1B69     		ldr	r3, [r3, #16]
 1312              		.loc 1 854 6
 1313 00ec 002B     		cmp	r3, #0
 1314 00ee 1ED0     		beq	.L59
 855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 1315              		.loc 1 857 17
 1316 00f0 3B68     		ldr	r3, [r7]
 1317 00f2 1B68     		ldr	r3, [r3]
 1318              		.loc 1 857 26
 1319 00f4 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/ccUKMyjJ.s 			page 39


 1320              		.loc 1 857 8
 1321 00f8 002B     		cmp	r3, #0
 1322 00fa 03D0     		beq	.L60
 858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP1MF);
 1323              		.loc 1 859 14
 1324 00fc FB68     		ldr	r3, [r7, #12]
 1325 00fe 43F48023 		orr	r3, r3, #262144
 1326 0102 FB60     		str	r3, [r7, #12]
 1327              	.L60:
 860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 1328              		.loc 1 863 17
 1329 0104 3B68     		ldr	r3, [r7]
 1330 0106 1B68     		ldr	r3, [r3]
 1331              		.loc 1 863 26
 1332 0108 03F00803 		and	r3, r3, #8
 1333              		.loc 1 863 8
 1334 010c 002B     		cmp	r3, #0
 1335 010e 03D0     		beq	.L61
 864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP2MF);
 1336              		.loc 1 865 14
 1337 0110 FB68     		ldr	r3, [r7, #12]
 1338 0112 43F40013 		orr	r3, r3, #2097152
 1339 0116 FB60     		str	r3, [r7, #12]
 1340              	.L61:
 866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
 869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 1341              		.loc 1 869 17
 1342 0118 3B68     		ldr	r3, [r7]
 1343 011a 1B68     		ldr	r3, [r3]
 1344              		.loc 1 869 26
 1345 011c 03F02003 		and	r3, r3, #32
 1346              		.loc 1 869 8
 1347 0120 002B     		cmp	r3, #0
 1348 0122 22D0     		beq	.L62
 870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP3MF);
 1349              		.loc 1 871 14
 1350 0124 FB68     		ldr	r3, [r7, #12]
 1351 0126 43F08073 		orr	r3, r3, #16777216
 1352 012a FB60     		str	r3, [r7, #12]
 1353 012c 1DE0     		b	.L62
 1354              	.L59:
 872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
 874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 1355              		.loc 1 878 17
ARM GAS  /tmp/ccUKMyjJ.s 			page 40


 1356 012e 3B68     		ldr	r3, [r7]
 1357 0130 1B68     		ldr	r3, [r3]
 1358              		.loc 1 878 26
 1359 0132 03F00103 		and	r3, r3, #1
 1360              		.loc 1 878 8
 1361 0136 002B     		cmp	r3, #0
 1362 0138 03D0     		beq	.L63
 879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP1MF);
 1363              		.loc 1 880 14
 1364 013a FB68     		ldr	r3, [r7, #12]
 1365 013c 23F48023 		bic	r3, r3, #262144
 1366 0140 FB60     		str	r3, [r7, #12]
 1367              	.L63:
 881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 1368              		.loc 1 884 17
 1369 0142 3B68     		ldr	r3, [r7]
 1370 0144 1B68     		ldr	r3, [r3]
 1371              		.loc 1 884 26
 1372 0146 03F00803 		and	r3, r3, #8
 1373              		.loc 1 884 8
 1374 014a 002B     		cmp	r3, #0
 1375 014c 03D0     		beq	.L64
 885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP2MF);
 1376              		.loc 1 886 14
 1377 014e FB68     		ldr	r3, [r7, #12]
 1378 0150 23F40013 		bic	r3, r3, #2097152
 1379 0154 FB60     		str	r3, [r7, #12]
 1380              	.L64:
 887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
 890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 1381              		.loc 1 890 17
 1382 0156 3B68     		ldr	r3, [r7]
 1383 0158 1B68     		ldr	r3, [r3]
 1384              		.loc 1 890 26
 1385 015a 03F02003 		and	r3, r3, #32
 1386              		.loc 1 890 8
 1387 015e 002B     		cmp	r3, #0
 1388 0160 03D0     		beq	.L62
 891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP3MF);
 1389              		.loc 1 892 14
 1390 0162 FB68     		ldr	r3, [r7, #12]
 1391 0164 23F08073 		bic	r3, r3, #16777216
 1392 0168 FB60     		str	r3, [r7, #12]
 1393              	.L62:
 893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
 895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clearing remaining fields before setting them */
ARM GAS  /tmp/ccUKMyjJ.s 			page 41


 898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg &= ~(RTC_TAMPERFILTER_MASK            | RTC_TAMPERSAMPLINGFREQ_RTCCLK_MASK | \
 1394              		.loc 1 898 10
 1395 016a FA68     		ldr	r2, [r7, #12]
 1396 016c 194B     		ldr	r3, .L65
 1397 016e 1340     		ands	r3, r3, r2
 1398 0170 FB60     		str	r3, [r7, #12]
 899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               RTC_TAMPERPRECHARGEDURATION_MASK | RTC_TAMPER_PULLUP_MASK             | \
 900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               RTC_TIMESTAMPONTAMPERDETECTION_MASK);
 901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set remaining parameters of desired configuration into temporary variable */
 903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= ((uint32_t)sTamper->Filter            | \
 1399              		.loc 1 903 31
 1400 0172 3B68     		ldr	r3, [r7]
 1401 0174 5A69     		ldr	r2, [r3, #20]
 904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 1402              		.loc 1 904 31
 1403 0176 3B68     		ldr	r3, [r7]
 1404 0178 9B69     		ldr	r3, [r3, #24]
 903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 1405              		.loc 1 903 51
 1406 017a 1A43     		orrs	r2, r2, r3
 905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->PrechargeDuration | \
 1407              		.loc 1 905 31
 1408 017c 3B68     		ldr	r3, [r7]
 1409 017e DB69     		ldr	r3, [r3, #28]
 904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 1410              		.loc 1 904 51
 1411 0180 1A43     		orrs	r2, r2, r3
 906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TamperPullUp      | \
 1412              		.loc 1 906 31
 1413 0182 3B68     		ldr	r3, [r7]
 1414 0184 1B6A     		ldr	r3, [r3, #32]
 905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->PrechargeDuration | \
 1415              		.loc 1 905 51
 1416 0186 1A43     		orrs	r2, r2, r3
 907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TimeStampOnTamperDetection);
 1417              		.loc 1 907 31
 1418 0188 3B68     		ldr	r3, [r7]
 1419 018a 5B6A     		ldr	r3, [r3, #36]
 906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TamperPullUp      | \
 1420              		.loc 1 906 51
 1421 018c 1343     		orrs	r3, r3, r2
 903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 1422              		.loc 1 903 10
 1423 018e FA68     		ldr	r2, [r7, #12]
 1424 0190 1343     		orrs	r3, r3, r2
 1425 0192 FB60     		str	r3, [r7, #12]
 908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable interrupt on selected tamper */
 910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= (uint32_t)sTamper->Interrupt;
 1426              		.loc 1 910 30
 1427 0194 3B68     		ldr	r3, [r7]
 1428 0196 5B68     		ldr	r3, [r3, #4]
 1429              		.loc 1 910 10
 1430 0198 FA68     		ldr	r2, [r7, #12]
 1431 019a 1343     		orrs	r3, r3, r2
 1432 019c FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccUKMyjJ.s 			page 42


 911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy desired configuration into configuration register */
 913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR = tmpreg;
 1433              		.loc 1 913 7
 1434 019e 7B68     		ldr	r3, [r7, #4]
 1435 01a0 1B68     		ldr	r3, [r3]
 1436              		.loc 1 913 26
 1437 01a2 FA68     		ldr	r2, [r7, #12]
 1438 01a4 1A64     		str	r2, [r3, #64]
 914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if !defined(DUAL_CORE)
 916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* RTC Tamper Interrupt Configuration: EXTI configuration */
 917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
 919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
 1439              		.loc 1 920 3
 1440 01a6 4FF0B043 		mov	r3, #1476395008
 1441 01aa 1B68     		ldr	r3, [r3]
 1442 01ac 4FF0B042 		mov	r2, #1476395008
 1443 01b0 43F48023 		orr	r3, r3, #262144
 1444 01b4 1360     		str	r3, [r2]
 921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1445              		.loc 1 922 15
 1446 01b6 7B68     		ldr	r3, [r7, #4]
 1447 01b8 0122     		movs	r2, #1
 1448 01ba 83F82120 		strb	r2, [r3, #33]
 923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1449              		.loc 1 925 3
 1450 01be 7B68     		ldr	r3, [r7, #4]
 1451 01c0 0022     		movs	r2, #0
 1452 01c2 83F82020 		strb	r2, [r3, #32]
 926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1453              		.loc 1 927 10
 1454 01c6 0023     		movs	r3, #0
 1455              	.L49:
 928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1456              		.loc 1 928 1
 1457 01c8 1846     		mov	r0, r3
 1458 01ca 1437     		adds	r7, r7, #20
 1459              	.LCFI44:
 1460              		.cfi_def_cfa_offset 4
 1461 01cc BD46     		mov	sp, r7
 1462              	.LCFI45:
 1463              		.cfi_def_cfa_register 13
 1464              		@ sp needed
 1465 01ce 5DF8047B 		ldr	r7, [sp], #4
 1466              	.LCFI46:
 1467              		.cfi_restore 7
 1468              		.cfi_def_cfa_offset 0
 1469 01d2 7047     		bx	lr
 1470              	.L66:
 1471              		.align	2
ARM GAS  /tmp/ccUKMyjJ.s 			page 43


 1472              	.L65:
 1473 01d4 7F00FFFF 		.word	-65409
 1474              		.cfi_endproc
 1475              	.LFE338:
 1477              		.section	.text.HAL_RTCEx_DeactivateTamper,"ax",%progbits
 1478              		.align	1
 1479              		.global	HAL_RTCEx_DeactivateTamper
 1480              		.syntax unified
 1481              		.thumb
 1482              		.thumb_func
 1483              		.fpu fpv5-d16
 1485              	HAL_RTCEx_DeactivateTamper:
 1486              	.LFB339:
 929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_TAMP1E)
 932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate Tamper.
 934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Tamper Selected tamper pin.
 936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         This parameter can be a combination of the following values:
 937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_1
 938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_2
 939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTamper(RTC_HandleTypeDef * hrtc, uint32_t Tamper)
 942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on TAMPER registers base address */
 944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET);
 945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
 947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper pin */
 949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR1 &= ~Tamper;
 950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper interrupt */
 952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->IER &= ~Tamper;
 953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the selected tamper flags in SR register by setting corresponding bits in SCR register *
 955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->SCR = Tamper;
 956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the selected tamper configuration (trigger, mask flag, and no-erase) */
 958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR2 &= ~((Tamper << TAMP_CR2_TAMP1TRG_Pos) | (Tamper << TAMP_CR2_TAMP1MSK_Pos) | (Tamper <<
 959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_TAMP1E */
 963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate Tamper.
 966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Tamper Selected tamper pin.
 968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         This parameter can be any combination of the following values:
 969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_1
 970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_2
 971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_3
 972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
ARM GAS  /tmp/ccUKMyjJ.s 			page 44


 973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTamper(RTC_HandleTypeDef * hrtc, uint32_t Tamper)
 975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1487              		.loc 1 975 1
 1488              		.cfi_startproc
 1489              		@ args = 0, pretend = 0, frame = 8
 1490              		@ frame_needed = 1, uses_anonymous_args = 0
 1491              		@ link register save eliminated.
 1492 0000 80B4     		push	{r7}
 1493              	.LCFI47:
 1494              		.cfi_def_cfa_offset 4
 1495              		.cfi_offset 7, -4
 1496 0002 83B0     		sub	sp, sp, #12
 1497              	.LCFI48:
 1498              		.cfi_def_cfa_offset 16
 1499 0004 00AF     		add	r7, sp, #0
 1500              	.LCFI49:
 1501              		.cfi_def_cfa_register 7
 1502 0006 7860     		str	r0, [r7, #4]
 1503 0008 3960     		str	r1, [r7]
 976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
 977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1504              		.loc 1 979 3
 1505 000a 7B68     		ldr	r3, [r7, #4]
 1506 000c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1507 0010 012B     		cmp	r3, #1
 1508 0012 01D1     		bne	.L68
 1509              		.loc 1 979 3 is_stmt 0 discriminator 1
 1510 0014 0223     		movs	r3, #2
 1511 0016 40E0     		b	.L69
 1512              	.L68:
 1513              		.loc 1 979 3 discriminator 2
 1514 0018 7B68     		ldr	r3, [r7, #4]
 1515 001a 0122     		movs	r2, #1
 1516 001c 83F82020 		strb	r2, [r3, #32]
 980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1517              		.loc 1 981 15 is_stmt 1 discriminator 2
 1518 0020 7B68     		ldr	r3, [r7, #4]
 1519 0022 0222     		movs	r2, #2
 1520 0024 83F82120 		strb	r2, [r3, #33]
 982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper pin */
 984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR &= ((uint32_t)~Tamper);
 1521              		.loc 1 984 7 discriminator 2
 1522 0028 7B68     		ldr	r3, [r7, #4]
 1523 002a 1B68     		ldr	r3, [r3]
 1524              		.loc 1 984 26 discriminator 2
 1525 002c 196C     		ldr	r1, [r3, #64]
 1526              		.loc 1 984 40 discriminator 2
 1527 002e 3B68     		ldr	r3, [r7]
 1528 0030 DA43     		mvns	r2, r3
 1529              		.loc 1 984 7 discriminator 2
 1530 0032 7B68     		ldr	r3, [r7, #4]
 1531 0034 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccUKMyjJ.s 			page 45


 1532              		.loc 1 984 26 discriminator 2
 1533 0036 0A40     		ands	r2, r2, r1
 1534 0038 1A64     		str	r2, [r3, #64]
 985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper interrupt */
 987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_1) != 0U)
 1535              		.loc 1 988 15 discriminator 2
 1536 003a 3B68     		ldr	r3, [r7]
 1537 003c 03F00103 		and	r3, r3, #1
 1538              		.loc 1 988 6 discriminator 2
 1539 0040 002B     		cmp	r3, #0
 1540 0042 07D0     		beq	.L70
 989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= ((uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP1));
 1541              		.loc 1 990 9
 1542 0044 7B68     		ldr	r3, [r7, #4]
 1543 0046 1B68     		ldr	r3, [r3]
 1544              		.loc 1 990 28
 1545 0048 196C     		ldr	r1, [r3, #64]
 1546              		.loc 1 990 9
 1547 004a 7B68     		ldr	r3, [r7, #4]
 1548 004c 1A68     		ldr	r2, [r3]
 1549              		.loc 1 990 28
 1550 004e 164B     		ldr	r3, .L73
 1551 0050 0B40     		ands	r3, r3, r1
 1552 0052 1364     		str	r3, [r2, #64]
 1553              	.L70:
 991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_2) != 0U)
 1554              		.loc 1 994 15
 1555 0054 3B68     		ldr	r3, [r7]
 1556 0056 03F00803 		and	r3, r3, #8
 1557              		.loc 1 994 6
 1558 005a 002B     		cmp	r3, #0
 1559 005c 07D0     		beq	.L71
 995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= ((uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP2));
 1560              		.loc 1 996 9
 1561 005e 7B68     		ldr	r3, [r7, #4]
 1562 0060 1B68     		ldr	r3, [r3]
 1563              		.loc 1 996 28
 1564 0062 196C     		ldr	r1, [r3, #64]
 1565              		.loc 1 996 9
 1566 0064 7B68     		ldr	r3, [r7, #4]
 1567 0066 1A68     		ldr	r2, [r3]
 1568              		.loc 1 996 28
 1569 0068 104B     		ldr	r3, .L73+4
 1570 006a 0B40     		ands	r3, r3, r1
 1571 006c 1364     		str	r3, [r2, #64]
 1572              	.L71:
 997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
1000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_3) != 0U)
ARM GAS  /tmp/ccUKMyjJ.s 			page 46


 1573              		.loc 1 1000 15
 1574 006e 3B68     		ldr	r3, [r7]
 1575 0070 03F02003 		and	r3, r3, #32
 1576              		.loc 1 1000 6
 1577 0074 002B     		cmp	r3, #0
 1578 0076 07D0     		beq	.L72
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= ((uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP3));
 1579              		.loc 1 1002 9
 1580 0078 7B68     		ldr	r3, [r7, #4]
 1581 007a 1B68     		ldr	r3, [r3]
 1582              		.loc 1 1002 28
 1583 007c 196C     		ldr	r1, [r3, #64]
 1584              		.loc 1 1002 9
 1585 007e 7B68     		ldr	r3, [r7, #4]
 1586 0080 1A68     		ldr	r2, [r3]
 1587              		.loc 1 1002 28
 1588 0082 0B4B     		ldr	r3, .L73+8
 1589 0084 0B40     		ands	r3, r3, r1
 1590 0086 1364     		str	r3, [r2, #64]
 1591              	.L72:
1003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
1005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1592              		.loc 1 1006 15
 1593 0088 7B68     		ldr	r3, [r7, #4]
 1594 008a 0122     		movs	r2, #1
 1595 008c 83F82120 		strb	r2, [r3, #33]
1007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1596              		.loc 1 1009 3
 1597 0090 7B68     		ldr	r3, [r7, #4]
 1598 0092 0022     		movs	r2, #0
 1599 0094 83F82020 		strb	r2, [r3, #32]
1010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1600              		.loc 1 1011 10
 1601 0098 0023     		movs	r3, #0
 1602              	.L69:
1012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1603              		.loc 1 1012 1
 1604 009a 1846     		mov	r0, r3
 1605 009c 0C37     		adds	r7, r7, #12
 1606              	.LCFI50:
 1607              		.cfi_def_cfa_offset 4
 1608 009e BD46     		mov	sp, r7
 1609              	.LCFI51:
 1610              		.cfi_def_cfa_register 13
 1611              		@ sp needed
 1612 00a0 5DF8047B 		ldr	r7, [sp], #4
 1613              	.LCFI52:
 1614              		.cfi_restore 7
 1615              		.cfi_def_cfa_offset 0
 1616 00a4 7047     		bx	lr
 1617              	.L74:
ARM GAS  /tmp/ccUKMyjJ.s 			page 47


 1618 00a6 00BF     		.align	2
 1619              	.L73:
 1620 00a8 FBFFFEFF 		.word	-65541
 1621 00ac FBFFF7FF 		.word	-524293
 1622 00b0 FBFFBFFF 		.word	-4194309
 1623              		.cfi_endproc
 1624              	.LFE339:
 1626              		.section	.text.HAL_RTCEx_TamperTimeStampIRQHandler,"ax",%progbits
 1627              		.align	1
 1628              		.global	HAL_RTCEx_TamperTimeStampIRQHandler
 1629              		.syntax unified
 1630              		.thumb
 1631              		.thumb_func
 1632              		.fpu fpv5-d16
 1634              	HAL_RTCEx_TamperTimeStampIRQHandler:
 1635              	.LFB340:
1013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
1014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP1E)
1016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Internal Tamper
1018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sIntTamper Pointer to Internal Tamper Structure.
1020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetInternalTamper(RTC_HandleTypeDef *hrtc, RTC_InternalTamperTypeDef *s
1023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
1025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_INTERNAL_TAMPER(sIntTamper->IntTamper));
1026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sIntTamper->TimeStampOnTamperDetection));
1027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Time-Stamp on internal tamper */
1029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(RTC->CR, RTC_CR_TAMPTS) != sIntTamper->TimeStampOnTamperDetection)
1030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     MODIFY_REG(RTC->CR, RTC_CR_TAMPTS, sIntTamper->TimeStampOnTamperDetection);
1033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Control register 1 */
1037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   SET_BIT(TAMP->CR1, sIntTamper->IntTamper);
1038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Internal Tamper in interrupt mode
1044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sIntTamper Pointer to Internal Tamper Structure.
1046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetInternalTamper_IT(RTC_HandleTypeDef *hrtc, RTC_InternalTamperTypeDef
1049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
1051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_INTERNAL_TAMPER(sIntTamper->IntTamper));
1052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sIntTamper->TimeStampOnTamperDetection));
1053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUKMyjJ.s 			page 48


1054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Time-stamp on internal tamper */
1055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(RTC->CR, RTC_CR_TAMPTS) != sIntTamper->TimeStampOnTamperDetection)
1056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     MODIFY_REG(RTC->CR, RTC_CR_TAMPTS, sIntTamper->TimeStampOnTamperDetection);
1059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* RTC Tamper Interrupt Configuration: EXTI configuration */
1063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
1064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_FALLING_EDGE();
1065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Interrupt enable register */
1066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   SET_BIT(TAMP->IER, sIntTamper->IntTamper);
1067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Control register 1 */
1069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   SET_BIT(TAMP->CR1, sIntTamper->IntTamper);
1070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate Internal Tamper.
1076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  IntTamper Selected internal tamper event.
1078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be any combination of existing internal tampers.
1079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateInternalTamper(RTC_HandleTypeDef *hrtc, uint32_t IntTamper)
1082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_INTERNAL_TAMPER(IntTamper));
1085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper pin */
1087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->CR1, IntTamper);
1088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear internal tamper interrupt mode configuration */
1090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->IER, IntTamper);
1091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear internal tamper interrupt */
1093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->SCR, IntTamper);
1094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP1E */
1098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_ATCR1_TAMP1AM)
1100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set all active Tampers at the same time.
1102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sAllTamper Pointer to active Tamper Structure.
1104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetActiveTampers(RTC_HandleTypeDef *hrtc, RTC_ActiveTampersTypeDef *sAl
1107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t IER, CR1, CR2, ATCR1, CR, i, tickstart;
1109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #ifdef  USE_FULL_ASSERT
ARM GAS  /tmp/ccUKMyjJ.s 			page 49


1111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   for (i = 0; i < RTC_TAMP_NB; i++)
1112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     assert_param(IS_RTC_TAMPER_ERASE_MODE(sAllTamper->TampInput[i].NoErase));
1114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sAllTamper->TampInput[i].MaskFlag));
1115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Mask flag only supported by TAMPER 1, 2 and 3 */
1116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     assert_param(!((sAllTamper->TampInput[i].MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE) && (i > RTC_T
1117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sAllTamper->TimeStampOnTamperDetection));
1119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* #ifdef  USE_FULL_ASSERT */
1120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Active Tampers must not be already enabled */
1122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(TAMP->ATOR, TAMP_ATOR_INITS) != 0U)
1123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Disable all active tampers with HAL_RTCEx_DeactivateActiveTampers */
1125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (HAL_RTCEx_DeactivateActiveTampers(hrtc) != HAL_OK)
1126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_ERROR;
1128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set TimeStamp on tamper detection */
1132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CR = READ_REG(RTC->CR);
1133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((CR & RTC_CR_TAMPTS) != (sAllTamper->TimeStampOnTamperDetection))
1134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     MODIFY_REG(RTC->CR, RTC_CR_TAMPTS, sAllTamper->TimeStampOnTamperDetection);
1137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CR1 = READ_REG(TAMP->CR1);
1141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CR2 = READ_REG(TAMP->CR2);
1142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   IER = READ_REG(TAMP->IER);
1143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set common parameters */
1145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ATCR1 = (sAllTamper->ActiveFilter | (sAllTamper->ActiveOutputChangePeriod << TAMP_ATCR1_ATPER_Pos
1146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set specific parameters for each active tamper inputs if enable */
1148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   for (i = 0; i < RTC_TAMP_NB; i++)
1149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (sAllTamper->TampInput[i].Enable != RTC_ATAMP_DISABLE)
1151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       CR1 |= (TAMP_CR1_TAMP1E << i);
1153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       ATCR1 |= (TAMP_ATCR1_TAMP1AM << i);
1154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (sAllTamper->TampInput[i].Interrupt != RTC_ATAMP_INTERRUPT_DISABLE)
1156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* RTC Tamper Interrupt Configuration: EXTI configuration */
1158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
1159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
1160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Interrupt enable register */
1162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         IER |= (TAMP_IER_TAMP1IE << i);
1163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (sAllTamper->TampInput[i].MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
1166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         CR2 |= (TAMP_CR2_TAMP1MSK << i);
ARM GAS  /tmp/ccUKMyjJ.s 			page 50


1168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (sAllTamper->TampInput[i].NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
1171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         CR2 |= (TAMP_CR2_TAMP1NOERASE << i);
1173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Set ATOSHARE and configure ATOSELx[] in case of output sharing */
1176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (sAllTamper->TampInput[i].Output != i)
1177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         ATCR1 |= TAMP_ATCR1_ATOSHARE;
1179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         ATCR1 |= sAllTamper->TampInput[i].Output << ((2u * i) + TAMP_ATCR1_ATOSEL1_Pos);
1180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->IER, IER);
1185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->IER, IER);
1186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->ATCR1, ATCR1);
1187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_ATCR2_ATOSEL1)
1188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->ATCR2, ATCR2);
1189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_ATCR2_ATOSEL1 */
1190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->CR2, CR2);
1191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->CR1, CR1);
1192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Write seed */
1194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   for (i = 0; i < RTC_ATAMP_SEED_NB_UINT32; i++)
1195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     WRITE_REG(TAMP->ATSEEDR, sAllTamper->Seed[i]);
1197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Wait till RTC SEEDF flag is set and if Time out is reached exit */
1200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
1201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (READ_BIT(TAMP->ATOR,  TAMP_ATOR_SEEDF) != 0u)
1202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
1204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
1206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
1207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_ATCR1_TAMP1AM */
1213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_ATSEEDR_SEED)
1215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Write a new seed. Active tamper must be enabled.
1217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  pSeed Pointer to active tamper seed values.
1219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetActiveSeed(RTC_HandleTypeDef *hrtc, uint32_t *pSeed)
1222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t i, tickstart;
1224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUKMyjJ.s 			page 51


1225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Active Tampers must be enabled */
1226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(TAMP->ATOR,  TAMP_ATOR_INITS) == 0U)
1227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     return HAL_ERROR;
1229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   for (i = 0; i < RTC_ATAMP_SEED_NB_UINT32; i++)
1232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     WRITE_REG(TAMP->ATSEEDR, pSeed[i]);
1234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Wait till RTC SEEDF flag is set and if Time out is reached exit */
1237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
1238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (READ_BIT(TAMP->ATOR,  TAMP_ATOR_SEEDF) != 0U)
1239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
1241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
1243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
1244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_ATSEEDR_SEED */
1250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_ATCR1_TAMP1AM)
1252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate all Active Tampers at the same time.
1254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateActiveTampers(RTC_HandleTypeDef *hrtc)
1258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get Active tampers */
1260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t ATamp_mask = READ_BIT(TAMP->ATCR1, TAMP_ALL);
1261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable all actives tampers but not passives tampers */
1264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->CR1, ATamp_mask);
1265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable no erase and mask */
1266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->CR2, (ATamp_mask | ((ATamp_mask & (TAMP_ATCR1_TAMP1AM | TAMP_ATCR1_TAMP2AM | TAMP
1267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear tamper interrupt and event flags (WO register) of all actives tampers but not passives t
1269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->SCR, ATamp_mask);
1270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear all active tampers interrupt mode configuration but not passives tampers */
1272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->IER, ATamp_mask);
1273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->ATCR1, TAMP_ALL | TAMP_ATCR1_ATCKSEL | TAMP_ATCR1_ATPER | \
1275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             TAMP_ATCR1_ATOSHARE | TAMP_ATCR1_FLTEN);
1276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_ATCR2_ATOSEL1)
1278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->ATCR2, TAMP_ATCR2_ATOSEL1 | TAMP_ATCR2_ATOSEL2 | TAMP_ATCR2_ATOSEL3 | TAMP_ATCR2_
1279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             TAMP_ATCR2_ATOSEL5 | TAMP_ATCR2_ATOSEL6 | TAMP_ATCR2_ATOSEL7 | TAMP_ATCR2_ATOSEL8);
1280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_ATCR2_ATOSEL1 */
1281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUKMyjJ.s 			page 52


1282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_ATCR1_TAMP1AM */
1285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group1
1291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  *  @brief   RTC TimeStamp and Tamper functions
1292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  *
1293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** * @{
1294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** */
1295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle TimeStamp interrupt request.
1298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_MISR_TSMF)
1302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** void HAL_RTCEx_TamperTimeStampIRQHandler(RTC_HandleTypeDef *hrtc)
1303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on TAMPER registers base address */
1306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET);
1307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
1309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
1310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->MISR & RTC_MISR_TSMF) != 0u)
1312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call TimeStampEvent registered Callback */
1315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->TimeStampEventCallback(hrtc);
1316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_TimeStampEventCallback(hrtc);
1318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Not immediately clear flags because the content of RTC_TSTR and RTC_TSDR are cleared when TS
1320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->SCR = RTC_SCR_CTSF;
1321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get interrupt status */
1324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmp = tamp->MISR;
1325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Immediately clear flags */
1327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->SCR = tmp;
1328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_TAMP1E)
1330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Tamper1 status */
1331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_TAMPER_1) == RTC_TAMPER_1)
1332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Tamper 1 Event registered Callback */
1335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Tamper1EventCallback(hrtc);
1336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Tamper1 callback */
1338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_Tamper1EventCallback(hrtc);
ARM GAS  /tmp/ccUKMyjJ.s 			page 53


1339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_TAMP1E */
1342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_TAMP2E)
1344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Tamper2 status */
1345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_TAMPER_2) == RTC_TAMPER_2)
1346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Tamper 2 Event registered Callback */
1349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Tamper2EventCallback(hrtc);
1350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Tamper2 callback */
1352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_Tamper2EventCallback(hrtc);
1353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_TAMP2E */
1356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_TAMP3E)
1358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Tamper3 status */
1359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_TAMPER_3) == RTC_TAMPER_3)
1360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Tamper 3 Event registered Callback */
1363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Tamper3EventCallback(hrtc);
1364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Tamper3 callback */
1366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_Tamper3EventCallback(hrtc);
1367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_TAMP3E */
1370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP1E)
1372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper status */
1373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_1) == RTC_INT_TAMPER_1)
1374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event registered callback */
1377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper1EventCallback(hrtc);
1378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event by-default callback */
1380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper1EventCallback(hrtc);
1381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP1E */
1384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP2E)
1386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper status */
1387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_2) == RTC_INT_TAMPER_2)
1388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event registered callback */
1391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper2EventCallback(hrtc);
1392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event by-default callback */
1394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper2EventCallback(hrtc);
1395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
ARM GAS  /tmp/ccUKMyjJ.s 			page 54


1396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP2E */
1398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP3E)
1400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper status */
1401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_3) == RTC_INT_TAMPER_3)
1402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event registered callback */
1405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper3EventCallback(hrtc);
1406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event by-default callback */
1408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper3EventCallback(hrtc);
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP3E */
1412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP4E)
1414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper status */
1415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_4) == RTC_INT_TAMPER_4)
1416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event registered callback */
1419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper4EventCallback(hrtc);
1420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event by-default callback */
1422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper4EventCallback(hrtc);
1423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP4E */
1426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP5E)
1428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper status */
1429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_5) == RTC_INT_TAMPER_5)
1430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event registered callback */
1433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper5EventCallback(hrtc);
1434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event by-default callback */
1436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper5EventCallback(hrtc);
1437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP5E */
1440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP6E)
1442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper status */
1443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_6) == RTC_INT_TAMPER_6)
1444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event registered callback */
1447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper6EventCallback(hrtc);
1448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event by-default callback */
1450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper6EventCallback(hrtc);
1451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
ARM GAS  /tmp/ccUKMyjJ.s 			page 55


1453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP6E */
1454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP8E)
1456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper status */
1457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_8) == RTC_INT_TAMPER_8)
1458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event registered callback */
1461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper8EventCallback(hrtc);
1462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event by-default callback */
1464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper8EventCallback(hrtc);
1465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP8E */
1468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_MISR_TSMF */
1473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_TSF)
1474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** void HAL_RTCEx_TamperTimeStampIRQHandler(RTC_HandleTypeDef *hrtc)
1475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1636              		.loc 1 1475 1
 1637              		.cfi_startproc
 1638              		@ args = 0, pretend = 0, frame = 8
 1639              		@ frame_needed = 1, uses_anonymous_args = 0
 1640 0000 80B5     		push	{r7, lr}
 1641              	.LCFI53:
 1642              		.cfi_def_cfa_offset 8
 1643              		.cfi_offset 7, -8
 1644              		.cfi_offset 14, -4
 1645 0002 82B0     		sub	sp, sp, #8
 1646              	.LCFI54:
 1647              		.cfi_def_cfa_offset 16
 1648 0004 00AF     		add	r7, sp, #0
 1649              	.LCFI55:
 1650              		.cfi_def_cfa_register 7
 1651 0006 7860     		str	r0, [r7, #4]
1476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
1477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(DUAL_CORE)
1478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (HAL_GetCurrentCPUID() == CM7_CPUID)
 1652              		.loc 1 1478 7
 1653 0008 FFF7FEFF 		bl	HAL_GetCurrentCPUID
 1654 000c 0346     		mov	r3, r0
 1655              		.loc 1 1478 6
 1656 000e 032B     		cmp	r3, #3
 1657 0010 04D1     		bne	.L76
1479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
 1658              		.loc 1 1480 5
 1659 0012 3C4B     		ldr	r3, .L82
 1660 0014 4FF48022 		mov	r2, #262144
 1661 0018 9A60     		str	r2, [r3, #8]
 1662 001a 03E0     		b	.L77
 1663              	.L76:
1481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
ARM GAS  /tmp/ccUKMyjJ.s 			page 56


1482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
1483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_TIMESTAMP_EXTID2_CLEAR_FLAG();
 1664              		.loc 1 1484 5
 1665 001c 3A4B     		ldr	r3, .L82+4
 1666 001e 4FF48022 		mov	r2, #262144
 1667 0022 9A60     		str	r2, [r3, #8]
 1668              	.L77:
1485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else  /* SINGLE_CORE */
1487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
1488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* DUAL_CORE */
1489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the TimeStamp interrupt source enable status */
1491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_TIMESTAMP_GET_IT_SOURCE(hrtc, RTC_IT_TS) != 0U)
 1669              		.loc 1 1491 7
 1670 0024 7B68     		ldr	r3, [r7, #4]
 1671 0026 1B68     		ldr	r3, [r3]
 1672 0028 9B68     		ldr	r3, [r3, #8]
 1673 002a 03F40043 		and	r3, r3, #32768
 1674              		.loc 1 1491 6
 1675 002e 002B     		cmp	r3, #0
 1676 0030 12D0     		beq	.L78
1492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the TIMESTAMP Interrupt */
1494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) != 0U)
 1677              		.loc 1 1494 9
 1678 0032 7B68     		ldr	r3, [r7, #4]
 1679 0034 1B68     		ldr	r3, [r3]
 1680 0036 DB68     		ldr	r3, [r3, #12]
 1681 0038 03F40063 		and	r3, r3, #2048
 1682              		.loc 1 1494 8
 1683 003c 002B     		cmp	r3, #0
 1684 003e 0BD0     		beq	.L78
1495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* TIMESTAMP callback */
1497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->TimeStampEventCallback(hrtc);
1499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTCEx_TimeStampEventCallback(hrtc);
 1685              		.loc 1 1500 7
 1686 0040 7868     		ldr	r0, [r7, #4]
 1687 0042 FFF7FEFF 		bl	HAL_RTCEx_TimeStampEventCallback
1501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP interrupt pending bit (this will clear timestamp time and date registe
1504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 1688              		.loc 1 1504 7
 1689 0046 7B68     		ldr	r3, [r7, #4]
 1690 0048 1B68     		ldr	r3, [r3]
 1691 004a DB68     		ldr	r3, [r3, #12]
 1692 004c DAB2     		uxtb	r2, r3
 1693 004e 7B68     		ldr	r3, [r7, #4]
 1694 0050 1B68     		ldr	r3, [r3]
 1695 0052 62F40862 		orn	r2, r2, #2176
 1696 0056 DA60     		str	r2, [r3, #12]
 1697              	.L78:
ARM GAS  /tmp/ccUKMyjJ.s 			page 57


1505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
1509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the Tamper1 interrupt source enable status */
1510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP1) != 0U)
 1698              		.loc 1 1510 7
 1699 0058 7B68     		ldr	r3, [r7, #4]
 1700 005a 1B68     		ldr	r3, [r3]
 1701 005c 1A6C     		ldr	r2, [r3, #64]
 1702 005e 2B4B     		ldr	r3, .L82+8
 1703 0060 1340     		ands	r3, r3, r2
 1704              		.loc 1 1510 6
 1705 0062 002B     		cmp	r3, #0
 1706 0064 12D0     		beq	.L79
1511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the Tamper1 Interrupt */
1513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F) != 0U)
 1707              		.loc 1 1513 9
 1708 0066 7B68     		ldr	r3, [r7, #4]
 1709 0068 1B68     		ldr	r3, [r3]
 1710 006a DB68     		ldr	r3, [r3, #12]
 1711 006c 03F40053 		and	r3, r3, #8192
 1712              		.loc 1 1513 8
 1713 0070 002B     		cmp	r3, #0
 1714 0072 0BD0     		beq	.L79
1514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the Tamper1 interrupt pending bit */
1516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP1F);
 1715              		.loc 1 1516 7
 1716 0074 7B68     		ldr	r3, [r7, #4]
 1717 0076 1B68     		ldr	r3, [r3]
 1718 0078 DB68     		ldr	r3, [r3, #12]
 1719 007a DAB2     		uxtb	r2, r3
 1720 007c 7B68     		ldr	r3, [r7, #4]
 1721 007e 1B68     		ldr	r3, [r3]
 1722 0080 62F40252 		orn	r2, r2, #8320
 1723 0084 DA60     		str	r2, [r3, #12]
1517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Tamper1 callback */
1519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->Tamper1EventCallback(hrtc);
1521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper1EventCallback(hrtc);
 1724              		.loc 1 1522 7
 1725 0086 7868     		ldr	r0, [r7, #4]
 1726 0088 FFF7FEFF 		bl	HAL_RTCEx_Tamper1EventCallback
 1727              	.L79:
1523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
1527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
1529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the Tamper2 interrupt source enable status */
1530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP2) != 0U)
 1728              		.loc 1 1530 7
ARM GAS  /tmp/ccUKMyjJ.s 			page 58


 1729 008c 7B68     		ldr	r3, [r7, #4]
 1730 008e 1B68     		ldr	r3, [r3]
 1731 0090 1A6C     		ldr	r2, [r3, #64]
 1732 0092 1F4B     		ldr	r3, .L82+12
 1733 0094 1340     		ands	r3, r3, r2
 1734              		.loc 1 1530 6
 1735 0096 002B     		cmp	r3, #0
 1736 0098 12D0     		beq	.L80
1531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the Tamper2 Interrupt */
1533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) != 0U)
 1737              		.loc 1 1533 9
 1738 009a 7B68     		ldr	r3, [r7, #4]
 1739 009c 1B68     		ldr	r3, [r3]
 1740 009e DB68     		ldr	r3, [r3, #12]
 1741 00a0 03F48043 		and	r3, r3, #16384
 1742              		.loc 1 1533 8
 1743 00a4 002B     		cmp	r3, #0
 1744 00a6 0BD0     		beq	.L80
1534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the Tamper2 interrupt pending bit */
1536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
 1745              		.loc 1 1536 7
 1746 00a8 7B68     		ldr	r3, [r7, #4]
 1747 00aa 1B68     		ldr	r3, [r3]
 1748 00ac DB68     		ldr	r3, [r3, #12]
 1749 00ae DAB2     		uxtb	r2, r3
 1750 00b0 7B68     		ldr	r3, [r7, #4]
 1751 00b2 1B68     		ldr	r3, [r3]
 1752 00b4 62F48142 		orn	r2, r2, #16512
 1753 00b8 DA60     		str	r2, [r3, #12]
1537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Tamper2 callback */
1539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->Tamper2EventCallback(hrtc);
1541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper2EventCallback(hrtc);
 1754              		.loc 1 1542 7
 1755 00ba 7868     		ldr	r0, [r7, #4]
 1756 00bc FFF7FEFF 		bl	HAL_RTCEx_Tamper2EventCallback
 1757              	.L80:
1543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
1547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
1549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the Tamper3 interrupts source enable status */
1550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP3) != 0U)
 1758              		.loc 1 1550 7
 1759 00c0 7B68     		ldr	r3, [r7, #4]
 1760 00c2 1B68     		ldr	r3, [r3]
 1761 00c4 1A6C     		ldr	r2, [r3, #64]
 1762 00c6 134B     		ldr	r3, .L82+16
 1763 00c8 1340     		ands	r3, r3, r2
 1764              		.loc 1 1550 6
 1765 00ca 002B     		cmp	r3, #0
ARM GAS  /tmp/ccUKMyjJ.s 			page 59


 1766 00cc 12D0     		beq	.L81
1551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the Tamper3 Interrupt */
1553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) != 0U)
 1767              		.loc 1 1553 9
 1768 00ce 7B68     		ldr	r3, [r7, #4]
 1769 00d0 1B68     		ldr	r3, [r3]
 1770 00d2 DB68     		ldr	r3, [r3, #12]
 1771 00d4 03F40043 		and	r3, r3, #32768
 1772              		.loc 1 1553 8
 1773 00d8 002B     		cmp	r3, #0
 1774 00da 0BD0     		beq	.L81
1554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the Tamper3 interrupt pending bit */
1556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
 1775              		.loc 1 1556 7
 1776 00dc 7B68     		ldr	r3, [r7, #4]
 1777 00de 1B68     		ldr	r3, [r3]
 1778 00e0 DB68     		ldr	r3, [r3, #12]
 1779 00e2 D9B2     		uxtb	r1, r3
 1780 00e4 7B68     		ldr	r3, [r7, #4]
 1781 00e6 1A68     		ldr	r2, [r3]
 1782 00e8 0B4B     		ldr	r3, .L82+20
 1783 00ea 0B43     		orrs	r3, r3, r1
 1784 00ec D360     		str	r3, [r2, #12]
1557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Tamper3 callback */
1559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->Tamper3EventCallback(hrtc);
1561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper3EventCallback(hrtc);
 1785              		.loc 1 1562 7
 1786 00ee 7868     		ldr	r0, [r7, #4]
 1787 00f0 FFF7FEFF 		bl	HAL_RTCEx_Tamper3EventCallback
 1788              	.L81:
1563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
1567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1789              		.loc 1 1569 15
 1790 00f4 7B68     		ldr	r3, [r7, #4]
 1791 00f6 0122     		movs	r2, #1
 1792 00f8 83F82120 		strb	r2, [r3, #33]
1570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1793              		.loc 1 1570 1
 1794 00fc 00BF     		nop
 1795 00fe 0837     		adds	r7, r7, #8
 1796              	.LCFI56:
 1797              		.cfi_def_cfa_offset 8
 1798 0100 BD46     		mov	sp, r7
 1799              	.LCFI57:
 1800              		.cfi_def_cfa_register 13
 1801              		@ sp needed
 1802 0102 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccUKMyjJ.s 			page 60


 1803              	.L83:
 1804              		.align	2
 1805              	.L82:
 1806 0104 80000058 		.word	1476395136
 1807 0108 C0000058 		.word	1476395200
 1808 010c 04000100 		.word	65540
 1809 0110 04000800 		.word	524292
 1810 0114 04004000 		.word	4194308
 1811 0118 7F7FFFFF 		.word	-32897
 1812              		.cfi_endproc
 1813              	.LFE340:
 1815              		.section	.text.HAL_RTCEx_TimeStampEventCallback,"ax",%progbits
 1816              		.align	1
 1817              		.weak	HAL_RTCEx_TimeStampEventCallback
 1818              		.syntax unified
 1819              		.thumb
 1820              		.thumb_func
 1821              		.fpu fpv5-d16
 1823              	HAL_RTCEx_TimeStampEventCallback:
 1824              	.LFB341:
1571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_TSF */
1572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  TimeStamp callback.
1575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_TimeStampEventCallback(RTC_HandleTypeDef *hrtc)
1579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1825              		.loc 1 1579 1
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 8
 1828              		@ frame_needed = 1, uses_anonymous_args = 0
 1829              		@ link register save eliminated.
 1830 0000 80B4     		push	{r7}
 1831              	.LCFI58:
 1832              		.cfi_def_cfa_offset 4
 1833              		.cfi_offset 7, -4
 1834 0002 83B0     		sub	sp, sp, #12
 1835              	.LCFI59:
 1836              		.cfi_def_cfa_offset 16
 1837 0004 00AF     		add	r7, sp, #0
 1838              	.LCFI60:
 1839              		.cfi_def_cfa_register 7
 1840 0006 7860     		str	r0, [r7, #4]
1580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_TimeStampEventCallback could be implemented in the user file
1585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1841              		.loc 1 1586 1
 1842 0008 00BF     		nop
 1843 000a 0C37     		adds	r7, r7, #12
 1844              	.LCFI61:
 1845              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccUKMyjJ.s 			page 61


 1846 000c BD46     		mov	sp, r7
 1847              	.LCFI62:
 1848              		.cfi_def_cfa_register 13
 1849              		@ sp needed
 1850 000e 5DF8047B 		ldr	r7, [sp], #4
 1851              	.LCFI63:
 1852              		.cfi_restore 7
 1853              		.cfi_def_cfa_offset 0
 1854 0012 7047     		bx	lr
 1855              		.cfi_endproc
 1856              	.LFE341:
 1858              		.section	.text.HAL_RTCEx_Tamper1EventCallback,"ax",%progbits
 1859              		.align	1
 1860              		.weak	HAL_RTCEx_Tamper1EventCallback
 1861              		.syntax unified
 1862              		.thumb
 1863              		.thumb_func
 1864              		.fpu fpv5-d16
 1866              	HAL_RTCEx_Tamper1EventCallback:
 1867              	.LFB342:
1587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group5
1593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief      Extended RTC Tamper functions
1594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
1595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** * @{
1596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** */
1597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER_1)
1599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Tamper 1 callback.
1601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper1EventCallback(RTC_HandleTypeDef * hrtc)
1605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1868              		.loc 1 1605 1
 1869              		.cfi_startproc
 1870              		@ args = 0, pretend = 0, frame = 8
 1871              		@ frame_needed = 1, uses_anonymous_args = 0
 1872              		@ link register save eliminated.
 1873 0000 80B4     		push	{r7}
 1874              	.LCFI64:
 1875              		.cfi_def_cfa_offset 4
 1876              		.cfi_offset 7, -4
 1877 0002 83B0     		sub	sp, sp, #12
 1878              	.LCFI65:
 1879              		.cfi_def_cfa_offset 16
 1880 0004 00AF     		add	r7, sp, #0
 1881              	.LCFI66:
 1882              		.cfi_def_cfa_register 7
 1883 0006 7860     		str	r0, [r7, #4]
1606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
ARM GAS  /tmp/ccUKMyjJ.s 			page 62


1608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper1EventCallback could be implemented in the user file
1611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1884              		.loc 1 1612 1
 1885 0008 00BF     		nop
 1886 000a 0C37     		adds	r7, r7, #12
 1887              	.LCFI67:
 1888              		.cfi_def_cfa_offset 4
 1889 000c BD46     		mov	sp, r7
 1890              	.LCFI68:
 1891              		.cfi_def_cfa_register 13
 1892              		@ sp needed
 1893 000e 5DF8047B 		ldr	r7, [sp], #4
 1894              	.LCFI69:
 1895              		.cfi_restore 7
 1896              		.cfi_def_cfa_offset 0
 1897 0012 7047     		bx	lr
 1898              		.cfi_endproc
 1899              	.LFE342:
 1901              		.section	.text.HAL_RTCEx_Tamper2EventCallback,"ax",%progbits
 1902              		.align	1
 1903              		.weak	HAL_RTCEx_Tamper2EventCallback
 1904              		.syntax unified
 1905              		.thumb
 1906              		.thumb_func
 1907              		.fpu fpv5-d16
 1909              	HAL_RTCEx_Tamper2EventCallback:
 1910              	.LFB343:
1613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER_1 */
1614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER_2)
1616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Tamper 2 callback.
1618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper2EventCallback(RTC_HandleTypeDef * hrtc)
1622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1911              		.loc 1 1622 1
 1912              		.cfi_startproc
 1913              		@ args = 0, pretend = 0, frame = 8
 1914              		@ frame_needed = 1, uses_anonymous_args = 0
 1915              		@ link register save eliminated.
 1916 0000 80B4     		push	{r7}
 1917              	.LCFI70:
 1918              		.cfi_def_cfa_offset 4
 1919              		.cfi_offset 7, -4
 1920 0002 83B0     		sub	sp, sp, #12
 1921              	.LCFI71:
 1922              		.cfi_def_cfa_offset 16
 1923 0004 00AF     		add	r7, sp, #0
 1924              	.LCFI72:
 1925              		.cfi_def_cfa_register 7
 1926 0006 7860     		str	r0, [r7, #4]
1623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccUKMyjJ.s 			page 63


1624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper2EventCallback could be implemented in the user file
1628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1927              		.loc 1 1629 1
 1928 0008 00BF     		nop
 1929 000a 0C37     		adds	r7, r7, #12
 1930              	.LCFI73:
 1931              		.cfi_def_cfa_offset 4
 1932 000c BD46     		mov	sp, r7
 1933              	.LCFI74:
 1934              		.cfi_def_cfa_register 13
 1935              		@ sp needed
 1936 000e 5DF8047B 		ldr	r7, [sp], #4
 1937              	.LCFI75:
 1938              		.cfi_restore 7
 1939              		.cfi_def_cfa_offset 0
 1940 0012 7047     		bx	lr
 1941              		.cfi_endproc
 1942              	.LFE343:
 1944              		.section	.text.HAL_RTCEx_Tamper3EventCallback,"ax",%progbits
 1945              		.align	1
 1946              		.weak	HAL_RTCEx_Tamper3EventCallback
 1947              		.syntax unified
 1948              		.thumb
 1949              		.thumb_func
 1950              		.fpu fpv5-d16
 1952              	HAL_RTCEx_Tamper3EventCallback:
 1953              	.LFB344:
1630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER_2 */
1631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER_3)
1633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Tamper 3 callback.
1635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper3EventCallback(RTC_HandleTypeDef * hrtc)
1639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1954              		.loc 1 1639 1
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 8
 1957              		@ frame_needed = 1, uses_anonymous_args = 0
 1958              		@ link register save eliminated.
 1959 0000 80B4     		push	{r7}
 1960              	.LCFI76:
 1961              		.cfi_def_cfa_offset 4
 1962              		.cfi_offset 7, -4
 1963 0002 83B0     		sub	sp, sp, #12
 1964              	.LCFI77:
 1965              		.cfi_def_cfa_offset 16
 1966 0004 00AF     		add	r7, sp, #0
 1967              	.LCFI78:
 1968              		.cfi_def_cfa_register 7
 1969 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccUKMyjJ.s 			page 64


1640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper3EventCallback could be implemented in the user file
1645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1970              		.loc 1 1646 1
 1971 0008 00BF     		nop
 1972 000a 0C37     		adds	r7, r7, #12
 1973              	.LCFI79:
 1974              		.cfi_def_cfa_offset 4
 1975 000c BD46     		mov	sp, r7
 1976              	.LCFI80:
 1977              		.cfi_def_cfa_register 13
 1978              		@ sp needed
 1979 000e 5DF8047B 		ldr	r7, [sp], #4
 1980              	.LCFI81:
 1981              		.cfi_restore 7
 1982              		.cfi_def_cfa_offset 0
 1983 0012 7047     		bx	lr
 1984              		.cfi_endproc
 1985              	.LFE344:
 1987              		.section	.text.HAL_RTCEx_InternalTamper1EventCallback,"ax",%progbits
 1988              		.align	1
 1989              		.weak	HAL_RTCEx_InternalTamper1EventCallback
 1990              		.syntax unified
 1991              		.thumb
 1992              		.thumb_func
 1993              		.fpu fpv5-d16
 1995              	HAL_RTCEx_InternalTamper1EventCallback:
 1996              	.LFB345:
1647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER_3 */
1648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 1 callback.
1651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper1EventCallback(RTC_HandleTypeDef *hrtc)
1655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1997              		.loc 1 1655 1
 1998              		.cfi_startproc
 1999              		@ args = 0, pretend = 0, frame = 8
 2000              		@ frame_needed = 1, uses_anonymous_args = 0
 2001              		@ link register save eliminated.
 2002 0000 80B4     		push	{r7}
 2003              	.LCFI82:
 2004              		.cfi_def_cfa_offset 4
 2005              		.cfi_offset 7, -4
 2006 0002 83B0     		sub	sp, sp, #12
 2007              	.LCFI83:
 2008              		.cfi_def_cfa_offset 16
 2009 0004 00AF     		add	r7, sp, #0
 2010              	.LCFI84:
 2011              		.cfi_def_cfa_register 7
 2012 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccUKMyjJ.s 			page 65


1656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper1EventCallback could be implemented in the user file
1661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2013              		.loc 1 1662 1
 2014 0008 00BF     		nop
 2015 000a 0C37     		adds	r7, r7, #12
 2016              	.LCFI85:
 2017              		.cfi_def_cfa_offset 4
 2018 000c BD46     		mov	sp, r7
 2019              	.LCFI86:
 2020              		.cfi_def_cfa_register 13
 2021              		@ sp needed
 2022 000e 5DF8047B 		ldr	r7, [sp], #4
 2023              	.LCFI87:
 2024              		.cfi_restore 7
 2025              		.cfi_def_cfa_offset 0
 2026 0012 7047     		bx	lr
 2027              		.cfi_endproc
 2028              	.LFE345:
 2030              		.section	.text.HAL_RTCEx_InternalTamper2EventCallback,"ax",%progbits
 2031              		.align	1
 2032              		.weak	HAL_RTCEx_InternalTamper2EventCallback
 2033              		.syntax unified
 2034              		.thumb
 2035              		.thumb_func
 2036              		.fpu fpv5-d16
 2038              	HAL_RTCEx_InternalTamper2EventCallback:
 2039              	.LFB346:
1663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 2 callback.
1666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper2EventCallback(RTC_HandleTypeDef *hrtc)
1670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2040              		.loc 1 1670 1
 2041              		.cfi_startproc
 2042              		@ args = 0, pretend = 0, frame = 8
 2043              		@ frame_needed = 1, uses_anonymous_args = 0
 2044              		@ link register save eliminated.
 2045 0000 80B4     		push	{r7}
 2046              	.LCFI88:
 2047              		.cfi_def_cfa_offset 4
 2048              		.cfi_offset 7, -4
 2049 0002 83B0     		sub	sp, sp, #12
 2050              	.LCFI89:
 2051              		.cfi_def_cfa_offset 16
 2052 0004 00AF     		add	r7, sp, #0
 2053              	.LCFI90:
 2054              		.cfi_def_cfa_register 7
 2055 0006 7860     		str	r0, [r7, #4]
1671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccUKMyjJ.s 			page 66


1672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper2EventCallback could be implemented in the user file
1676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2056              		.loc 1 1677 1
 2057 0008 00BF     		nop
 2058 000a 0C37     		adds	r7, r7, #12
 2059              	.LCFI91:
 2060              		.cfi_def_cfa_offset 4
 2061 000c BD46     		mov	sp, r7
 2062              	.LCFI92:
 2063              		.cfi_def_cfa_register 13
 2064              		@ sp needed
 2065 000e 5DF8047B 		ldr	r7, [sp], #4
 2066              	.LCFI93:
 2067              		.cfi_restore 7
 2068              		.cfi_def_cfa_offset 0
 2069 0012 7047     		bx	lr
 2070              		.cfi_endproc
 2071              	.LFE346:
 2073              		.section	.text.HAL_RTCEx_InternalTamper3EventCallback,"ax",%progbits
 2074              		.align	1
 2075              		.weak	HAL_RTCEx_InternalTamper3EventCallback
 2076              		.syntax unified
 2077              		.thumb
 2078              		.thumb_func
 2079              		.fpu fpv5-d16
 2081              	HAL_RTCEx_InternalTamper3EventCallback:
 2082              	.LFB347:
1678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 3 callback.
1681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper3EventCallback(RTC_HandleTypeDef *hrtc)
1685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2083              		.loc 1 1685 1
 2084              		.cfi_startproc
 2085              		@ args = 0, pretend = 0, frame = 8
 2086              		@ frame_needed = 1, uses_anonymous_args = 0
 2087              		@ link register save eliminated.
 2088 0000 80B4     		push	{r7}
 2089              	.LCFI94:
 2090              		.cfi_def_cfa_offset 4
 2091              		.cfi_offset 7, -4
 2092 0002 83B0     		sub	sp, sp, #12
 2093              	.LCFI95:
 2094              		.cfi_def_cfa_offset 16
 2095 0004 00AF     		add	r7, sp, #0
 2096              	.LCFI96:
 2097              		.cfi_def_cfa_register 7
 2098 0006 7860     		str	r0, [r7, #4]
1686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
ARM GAS  /tmp/ccUKMyjJ.s 			page 67


1688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper3EventCallback could be implemented in the user file
1691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2099              		.loc 1 1692 1
 2100 0008 00BF     		nop
 2101 000a 0C37     		adds	r7, r7, #12
 2102              	.LCFI97:
 2103              		.cfi_def_cfa_offset 4
 2104 000c BD46     		mov	sp, r7
 2105              	.LCFI98:
 2106              		.cfi_def_cfa_register 13
 2107              		@ sp needed
 2108 000e 5DF8047B 		ldr	r7, [sp], #4
 2109              	.LCFI99:
 2110              		.cfi_restore 7
 2111              		.cfi_def_cfa_offset 0
 2112 0012 7047     		bx	lr
 2113              		.cfi_endproc
 2114              	.LFE347:
 2116              		.section	.text.HAL_RTCEx_InternalTamper4EventCallback,"ax",%progbits
 2117              		.align	1
 2118              		.weak	HAL_RTCEx_InternalTamper4EventCallback
 2119              		.syntax unified
 2120              		.thumb
 2121              		.thumb_func
 2122              		.fpu fpv5-d16
 2124              	HAL_RTCEx_InternalTamper4EventCallback:
 2125              	.LFB348:
1693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 4 callback.
1696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper4EventCallback(RTC_HandleTypeDef *hrtc)
1700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2126              		.loc 1 1700 1
 2127              		.cfi_startproc
 2128              		@ args = 0, pretend = 0, frame = 8
 2129              		@ frame_needed = 1, uses_anonymous_args = 0
 2130              		@ link register save eliminated.
 2131 0000 80B4     		push	{r7}
 2132              	.LCFI100:
 2133              		.cfi_def_cfa_offset 4
 2134              		.cfi_offset 7, -4
 2135 0002 83B0     		sub	sp, sp, #12
 2136              	.LCFI101:
 2137              		.cfi_def_cfa_offset 16
 2138 0004 00AF     		add	r7, sp, #0
 2139              	.LCFI102:
 2140              		.cfi_def_cfa_register 7
 2141 0006 7860     		str	r0, [r7, #4]
1701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUKMyjJ.s 			page 68


1704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper4EventCallback could be implemented in the user file
1706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2142              		.loc 1 1707 1
 2143 0008 00BF     		nop
 2144 000a 0C37     		adds	r7, r7, #12
 2145              	.LCFI103:
 2146              		.cfi_def_cfa_offset 4
 2147 000c BD46     		mov	sp, r7
 2148              	.LCFI104:
 2149              		.cfi_def_cfa_register 13
 2150              		@ sp needed
 2151 000e 5DF8047B 		ldr	r7, [sp], #4
 2152              	.LCFI105:
 2153              		.cfi_restore 7
 2154              		.cfi_def_cfa_offset 0
 2155 0012 7047     		bx	lr
 2156              		.cfi_endproc
 2157              	.LFE348:
 2159              		.section	.text.HAL_RTCEx_InternalTamper5EventCallback,"ax",%progbits
 2160              		.align	1
 2161              		.weak	HAL_RTCEx_InternalTamper5EventCallback
 2162              		.syntax unified
 2163              		.thumb
 2164              		.thumb_func
 2165              		.fpu fpv5-d16
 2167              	HAL_RTCEx_InternalTamper5EventCallback:
 2168              	.LFB349:
1708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 5 callback.
1711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper5EventCallback(RTC_HandleTypeDef *hrtc)
1715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2169              		.loc 1 1715 1
 2170              		.cfi_startproc
 2171              		@ args = 0, pretend = 0, frame = 8
 2172              		@ frame_needed = 1, uses_anonymous_args = 0
 2173              		@ link register save eliminated.
 2174 0000 80B4     		push	{r7}
 2175              	.LCFI106:
 2176              		.cfi_def_cfa_offset 4
 2177              		.cfi_offset 7, -4
 2178 0002 83B0     		sub	sp, sp, #12
 2179              	.LCFI107:
 2180              		.cfi_def_cfa_offset 16
 2181 0004 00AF     		add	r7, sp, #0
 2182              	.LCFI108:
 2183              		.cfi_def_cfa_register 7
 2184 0006 7860     		str	r0, [r7, #4]
1716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  /tmp/ccUKMyjJ.s 			page 69


1720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper5EventCallback could be implemented in the user file
1721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2185              		.loc 1 1722 1
 2186 0008 00BF     		nop
 2187 000a 0C37     		adds	r7, r7, #12
 2188              	.LCFI109:
 2189              		.cfi_def_cfa_offset 4
 2190 000c BD46     		mov	sp, r7
 2191              	.LCFI110:
 2192              		.cfi_def_cfa_register 13
 2193              		@ sp needed
 2194 000e 5DF8047B 		ldr	r7, [sp], #4
 2195              	.LCFI111:
 2196              		.cfi_restore 7
 2197              		.cfi_def_cfa_offset 0
 2198 0012 7047     		bx	lr
 2199              		.cfi_endproc
 2200              	.LFE349:
 2202              		.section	.text.HAL_RTCEx_InternalTamper6EventCallback,"ax",%progbits
 2203              		.align	1
 2204              		.weak	HAL_RTCEx_InternalTamper6EventCallback
 2205              		.syntax unified
 2206              		.thumb
 2207              		.thumb_func
 2208              		.fpu fpv5-d16
 2210              	HAL_RTCEx_InternalTamper6EventCallback:
 2211              	.LFB350:
1723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 6 callback.
1726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper6EventCallback(RTC_HandleTypeDef *hrtc)
1730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2212              		.loc 1 1730 1
 2213              		.cfi_startproc
 2214              		@ args = 0, pretend = 0, frame = 8
 2215              		@ frame_needed = 1, uses_anonymous_args = 0
 2216              		@ link register save eliminated.
 2217 0000 80B4     		push	{r7}
 2218              	.LCFI112:
 2219              		.cfi_def_cfa_offset 4
 2220              		.cfi_offset 7, -4
 2221 0002 83B0     		sub	sp, sp, #12
 2222              	.LCFI113:
 2223              		.cfi_def_cfa_offset 16
 2224 0004 00AF     		add	r7, sp, #0
 2225              	.LCFI114:
 2226              		.cfi_def_cfa_register 7
 2227 0006 7860     		str	r0, [r7, #4]
1731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper6EventCallback could be implemented in the user file
ARM GAS  /tmp/ccUKMyjJ.s 			page 70


1736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2228              		.loc 1 1737 1
 2229 0008 00BF     		nop
 2230 000a 0C37     		adds	r7, r7, #12
 2231              	.LCFI115:
 2232              		.cfi_def_cfa_offset 4
 2233 000c BD46     		mov	sp, r7
 2234              	.LCFI116:
 2235              		.cfi_def_cfa_register 13
 2236              		@ sp needed
 2237 000e 5DF8047B 		ldr	r7, [sp], #4
 2238              	.LCFI117:
 2239              		.cfi_restore 7
 2240              		.cfi_def_cfa_offset 0
 2241 0012 7047     		bx	lr
 2242              		.cfi_endproc
 2243              	.LFE350:
 2245              		.section	.text.HAL_RTCEx_InternalTamper8EventCallback,"ax",%progbits
 2246              		.align	1
 2247              		.weak	HAL_RTCEx_InternalTamper8EventCallback
 2248              		.syntax unified
 2249              		.thumb
 2250              		.thumb_func
 2251              		.fpu fpv5-d16
 2253              	HAL_RTCEx_InternalTamper8EventCallback:
 2254              	.LFB351:
1738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 8 callback.
1741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper8EventCallback(RTC_HandleTypeDef *hrtc)
1745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2255              		.loc 1 1745 1
 2256              		.cfi_startproc
 2257              		@ args = 0, pretend = 0, frame = 8
 2258              		@ frame_needed = 1, uses_anonymous_args = 0
 2259              		@ link register save eliminated.
 2260 0000 80B4     		push	{r7}
 2261              	.LCFI118:
 2262              		.cfi_def_cfa_offset 4
 2263              		.cfi_offset 7, -4
 2264 0002 83B0     		sub	sp, sp, #12
 2265              	.LCFI119:
 2266              		.cfi_def_cfa_offset 16
 2267 0004 00AF     		add	r7, sp, #0
 2268              	.LCFI120:
 2269              		.cfi_def_cfa_register 7
 2270 0006 7860     		str	r0, [r7, #4]
1746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper8EventCallback could be implemented in the user file
1751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
ARM GAS  /tmp/ccUKMyjJ.s 			page 71


1752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2271              		.loc 1 1752 1
 2272 0008 00BF     		nop
 2273 000a 0C37     		adds	r7, r7, #12
 2274              	.LCFI121:
 2275              		.cfi_def_cfa_offset 4
 2276 000c BD46     		mov	sp, r7
 2277              	.LCFI122:
 2278              		.cfi_def_cfa_register 13
 2279              		@ sp needed
 2280 000e 5DF8047B 		ldr	r7, [sp], #4
 2281              	.LCFI123:
 2282              		.cfi_restore 7
 2283              		.cfi_def_cfa_offset 0
 2284 0012 7047     		bx	lr
 2285              		.cfi_endproc
 2286              	.LFE351:
 2288              		.section	.text.HAL_RTCEx_PollForTimeStampEvent,"ax",%progbits
 2289              		.align	1
 2290              		.global	HAL_RTCEx_PollForTimeStampEvent
 2291              		.syntax unified
 2292              		.thumb
 2293              		.thumb_func
 2294              		.fpu fpv5-d16
 2296              	HAL_RTCEx_PollForTimeStampEvent:
 2297              	.LFB352:
1753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group1
1758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  *  @brief   RTC TimeStamp and Tamper functions
1759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  *
1760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** * @{
1761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** */
1762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle TimeStamp polling request.
1765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTimeStampEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2298              		.loc 1 1770 1
 2299              		.cfi_startproc
 2300              		@ args = 0, pretend = 0, frame = 16
 2301              		@ frame_needed = 1, uses_anonymous_args = 0
 2302 0000 80B5     		push	{r7, lr}
 2303              	.LCFI124:
 2304              		.cfi_def_cfa_offset 8
 2305              		.cfi_offset 7, -8
 2306              		.cfi_offset 14, -4
 2307 0002 84B0     		sub	sp, sp, #16
 2308              	.LCFI125:
 2309              		.cfi_def_cfa_offset 24
 2310 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccUKMyjJ.s 			page 72


 2311              	.LCFI126:
 2312              		.cfi_def_cfa_register 7
 2313 0006 7860     		str	r0, [r7, #4]
 2314 0008 3960     		str	r1, [r7]
1771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2315              		.loc 1 1771 24
 2316 000a FFF7FEFF 		bl	HAL_GetTick
 2317 000e F860     		str	r0, [r7, #12]
1772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) == 0U)
 2318              		.loc 1 1773 9
 2319 0010 2AE0     		b	.L96
 2320              	.L100:
1774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSOVF) != 0U)
 2321              		.loc 1 1775 9
 2322 0012 7B68     		ldr	r3, [r7, #4]
 2323 0014 1B68     		ldr	r3, [r3]
 2324 0016 DB68     		ldr	r3, [r3, #12]
 2325 0018 03F48053 		and	r3, r3, #4096
 2326              		.loc 1 1775 8
 2327 001c 002B     		cmp	r3, #0
 2328 001e 0ED0     		beq	.L97
1776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP OverRun Flag */
1778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSOVF);
 2329              		.loc 1 1778 7
 2330 0020 7B68     		ldr	r3, [r7, #4]
 2331 0022 1B68     		ldr	r3, [r3]
 2332 0024 DB68     		ldr	r3, [r3, #12]
 2333 0026 DAB2     		uxtb	r2, r3
 2334 0028 7B68     		ldr	r3, [r7, #4]
 2335 002a 1B68     		ldr	r3, [r3]
 2336 002c 62F48452 		orn	r2, r2, #4224
 2337 0030 DA60     		str	r2, [r3, #12]
1779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Change TIMESTAMP state */
1781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 2338              		.loc 1 1781 19
 2339 0032 7B68     		ldr	r3, [r7, #4]
 2340 0034 0422     		movs	r2, #4
 2341 0036 83F82120 		strb	r2, [r3, #33]
1782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_ERROR;
 2342              		.loc 1 1783 14
 2343 003a 0123     		movs	r3, #1
 2344 003c 20E0     		b	.L98
 2345              	.L97:
1784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 2346              		.loc 1 1786 8
 2347 003e 3B68     		ldr	r3, [r7]
 2348 0040 B3F1FF3F 		cmp	r3, #-1
 2349 0044 10D0     		beq	.L96
1787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
ARM GAS  /tmp/ccUKMyjJ.s 			page 73


 2350              		.loc 1 1788 13
 2351 0046 FFF7FEFF 		bl	HAL_GetTick
 2352 004a 0246     		mov	r2, r0
 2353              		.loc 1 1788 27
 2354 004c FB68     		ldr	r3, [r7, #12]
 2355 004e D31A     		subs	r3, r2, r3
 2356              		.loc 1 1788 10
 2357 0050 3A68     		ldr	r2, [r7]
 2358 0052 9A42     		cmp	r2, r3
 2359 0054 02D3     		bcc	.L99
 2360              		.loc 1 1788 51 discriminator 1
 2361 0056 3B68     		ldr	r3, [r7]
 2362 0058 002B     		cmp	r3, #0
 2363 005a 05D1     		bne	.L96
 2364              	.L99:
1789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2365              		.loc 1 1790 21
 2366 005c 7B68     		ldr	r3, [r7, #4]
 2367 005e 0322     		movs	r2, #3
 2368 0060 83F82120 		strb	r2, [r3, #33]
1791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2369              		.loc 1 1791 16
 2370 0064 0323     		movs	r3, #3
 2371 0066 0BE0     		b	.L98
 2372              	.L96:
1773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2373              		.loc 1 1773 10
 2374 0068 7B68     		ldr	r3, [r7, #4]
 2375 006a 1B68     		ldr	r3, [r3]
 2376 006c DB68     		ldr	r3, [r3, #12]
 2377 006e 03F40063 		and	r3, r3, #2048
1773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2378              		.loc 1 1773 9
 2379 0072 002B     		cmp	r3, #0
 2380 0074 CDD0     		beq	.L100
1792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2381              		.loc 1 1797 15
 2382 0076 7B68     		ldr	r3, [r7, #4]
 2383 0078 0122     		movs	r2, #1
 2384 007a 83F82120 		strb	r2, [r3, #33]
1798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2385              		.loc 1 1799 10
 2386 007e 0023     		movs	r3, #0
 2387              	.L98:
1800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2388              		.loc 1 1800 1
 2389 0080 1846     		mov	r0, r3
 2390 0082 1037     		adds	r7, r7, #16
 2391              	.LCFI127:
 2392              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccUKMyjJ.s 			page 74


 2393 0084 BD46     		mov	sp, r7
 2394              	.LCFI128:
 2395              		.cfi_def_cfa_register 13
 2396              		@ sp needed
 2397 0086 80BD     		pop	{r7, pc}
 2398              		.cfi_endproc
 2399              	.LFE352:
 2401              		.section	.text.HAL_RTCEx_PollForTamper1Event,"ax",%progbits
 2402              		.align	1
 2403              		.global	HAL_RTCEx_PollForTamper1Event
 2404              		.syntax unified
 2405              		.thumb
 2406              		.thumb_func
 2407              		.fpu fpv5-d16
 2409              	HAL_RTCEx_PollForTamper1Event:
 2410              	.LFB353:
1801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group5
1807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief      Extended RTC Tamper functions
1808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
1809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** * @{
1810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** */
1811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER_1)
1813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Tamper1 Polling.
1815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper1Event(RTC_HandleTypeDef * hrtc, uint32_t Timeout)
1820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2411              		.loc 1 1820 1
 2412              		.cfi_startproc
 2413              		@ args = 0, pretend = 0, frame = 16
 2414              		@ frame_needed = 1, uses_anonymous_args = 0
 2415 0000 80B5     		push	{r7, lr}
 2416              	.LCFI129:
 2417              		.cfi_def_cfa_offset 8
 2418              		.cfi_offset 7, -8
 2419              		.cfi_offset 14, -4
 2420 0002 84B0     		sub	sp, sp, #16
 2421              	.LCFI130:
 2422              		.cfi_def_cfa_offset 24
 2423 0004 00AF     		add	r7, sp, #0
 2424              	.LCFI131:
 2425              		.cfi_def_cfa_register 7
 2426 0006 7860     		str	r0, [r7, #4]
 2427 0008 3960     		str	r1, [r7]
1821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2428              		.loc 1 1821 24
 2429 000a FFF7FEFF 		bl	HAL_GetTick
 2430 000e F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccUKMyjJ.s 			page 75


1822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
1824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F) == 0U)
 2431              		.loc 1 1824 9
 2432 0010 14E0     		b	.L102
 2433              	.L105:
1825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 2434              		.loc 1 1826 8
 2435 0012 3B68     		ldr	r3, [r7]
 2436 0014 B3F1FF3F 		cmp	r3, #-1
 2437 0018 10D0     		beq	.L102
1827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2438              		.loc 1 1828 13
 2439 001a FFF7FEFF 		bl	HAL_GetTick
 2440 001e 0246     		mov	r2, r0
 2441              		.loc 1 1828 27
 2442 0020 FB68     		ldr	r3, [r7, #12]
 2443 0022 D31A     		subs	r3, r2, r3
 2444              		.loc 1 1828 10
 2445 0024 3A68     		ldr	r2, [r7]
 2446 0026 9A42     		cmp	r2, r3
 2447 0028 02D3     		bcc	.L103
 2448              		.loc 1 1828 51 discriminator 1
 2449 002a 3B68     		ldr	r3, [r7]
 2450 002c 002B     		cmp	r3, #0
 2451 002e 05D1     		bne	.L102
 2452              	.L103:
1829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2453              		.loc 1 1830 21
 2454 0030 7B68     		ldr	r3, [r7, #4]
 2455 0032 0322     		movs	r2, #3
 2456 0034 83F82120 		strb	r2, [r3, #33]
1831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2457              		.loc 1 1831 16
 2458 0038 0323     		movs	r3, #3
 2459 003a 14E0     		b	.L104
 2460              	.L102:
1824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2461              		.loc 1 1824 10
 2462 003c 7B68     		ldr	r3, [r7, #4]
 2463 003e 1B68     		ldr	r3, [r3]
 2464 0040 DB68     		ldr	r3, [r3, #12]
 2465 0042 03F40053 		and	r3, r3, #8192
1824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2466              		.loc 1 1824 9
 2467 0046 002B     		cmp	r3, #0
 2468 0048 E3D0     		beq	.L105
1832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
1837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP1F);
 2469              		.loc 1 1837 3
ARM GAS  /tmp/ccUKMyjJ.s 			page 76


 2470 004a 7B68     		ldr	r3, [r7, #4]
 2471 004c 1B68     		ldr	r3, [r3]
 2472 004e DB68     		ldr	r3, [r3, #12]
 2473 0050 DAB2     		uxtb	r2, r3
 2474 0052 7B68     		ldr	r3, [r7, #4]
 2475 0054 1B68     		ldr	r3, [r3]
 2476 0056 62F40252 		orn	r2, r2, #8320
 2477 005a DA60     		str	r2, [r3, #12]
1838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2478              		.loc 1 1840 15
 2479 005c 7B68     		ldr	r3, [r7, #4]
 2480 005e 0122     		movs	r2, #1
 2481 0060 83F82120 		strb	r2, [r3, #33]
1841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2482              		.loc 1 1842 10
 2483 0064 0023     		movs	r3, #0
 2484              	.L104:
1843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2485              		.loc 1 1843 1
 2486 0066 1846     		mov	r0, r3
 2487 0068 1037     		adds	r7, r7, #16
 2488              	.LCFI132:
 2489              		.cfi_def_cfa_offset 8
 2490 006a BD46     		mov	sp, r7
 2491              	.LCFI133:
 2492              		.cfi_def_cfa_register 13
 2493              		@ sp needed
 2494 006c 80BD     		pop	{r7, pc}
 2495              		.cfi_endproc
 2496              	.LFE353:
 2498              		.section	.text.HAL_RTCEx_PollForTamper2Event,"ax",%progbits
 2499              		.align	1
 2500              		.global	HAL_RTCEx_PollForTamper2Event
 2501              		.syntax unified
 2502              		.thumb
 2503              		.thumb_func
 2504              		.fpu fpv5-d16
 2506              	HAL_RTCEx_PollForTamper2Event:
 2507              	.LFB354:
1844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER_1 */
1845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER_2)
1847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Tamper2 Polling.
1849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper2Event(RTC_HandleTypeDef * hrtc, uint32_t Timeout)
1854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2508              		.loc 1 1854 1
 2509              		.cfi_startproc
 2510              		@ args = 0, pretend = 0, frame = 16
 2511              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccUKMyjJ.s 			page 77


 2512 0000 80B5     		push	{r7, lr}
 2513              	.LCFI134:
 2514              		.cfi_def_cfa_offset 8
 2515              		.cfi_offset 7, -8
 2516              		.cfi_offset 14, -4
 2517 0002 84B0     		sub	sp, sp, #16
 2518              	.LCFI135:
 2519              		.cfi_def_cfa_offset 24
 2520 0004 00AF     		add	r7, sp, #0
 2521              	.LCFI136:
 2522              		.cfi_def_cfa_register 7
 2523 0006 7860     		str	r0, [r7, #4]
 2524 0008 3960     		str	r1, [r7]
1855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2525              		.loc 1 1855 24
 2526 000a FFF7FEFF 		bl	HAL_GetTick
 2527 000e F860     		str	r0, [r7, #12]
1856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
1858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) == 0U)
 2528              		.loc 1 1858 9
 2529 0010 14E0     		b	.L107
 2530              	.L110:
1859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 2531              		.loc 1 1860 8
 2532 0012 3B68     		ldr	r3, [r7]
 2533 0014 B3F1FF3F 		cmp	r3, #-1
 2534 0018 10D0     		beq	.L107
1861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2535              		.loc 1 1862 13
 2536 001a FFF7FEFF 		bl	HAL_GetTick
 2537 001e 0246     		mov	r2, r0
 2538              		.loc 1 1862 27
 2539 0020 FB68     		ldr	r3, [r7, #12]
 2540 0022 D31A     		subs	r3, r2, r3
 2541              		.loc 1 1862 10
 2542 0024 3A68     		ldr	r2, [r7]
 2543 0026 9A42     		cmp	r2, r3
 2544 0028 02D3     		bcc	.L108
 2545              		.loc 1 1862 51 discriminator 1
 2546 002a 3B68     		ldr	r3, [r7]
 2547 002c 002B     		cmp	r3, #0
 2548 002e 05D1     		bne	.L107
 2549              	.L108:
1863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2550              		.loc 1 1864 21
 2551 0030 7B68     		ldr	r3, [r7, #4]
 2552 0032 0322     		movs	r2, #3
 2553 0034 83F82120 		strb	r2, [r3, #33]
1865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2554              		.loc 1 1865 16
 2555 0038 0323     		movs	r3, #3
 2556 003a 14E0     		b	.L109
 2557              	.L107:
ARM GAS  /tmp/ccUKMyjJ.s 			page 78


1858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2558              		.loc 1 1858 10
 2559 003c 7B68     		ldr	r3, [r7, #4]
 2560 003e 1B68     		ldr	r3, [r3]
 2561 0040 DB68     		ldr	r3, [r3, #12]
 2562 0042 03F48043 		and	r3, r3, #16384
1858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2563              		.loc 1 1858 9
 2564 0046 002B     		cmp	r3, #0
 2565 0048 E3D0     		beq	.L110
1866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
1871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
 2566              		.loc 1 1871 3
 2567 004a 7B68     		ldr	r3, [r7, #4]
 2568 004c 1B68     		ldr	r3, [r3]
 2569 004e DB68     		ldr	r3, [r3, #12]
 2570 0050 DAB2     		uxtb	r2, r3
 2571 0052 7B68     		ldr	r3, [r7, #4]
 2572 0054 1B68     		ldr	r3, [r3]
 2573 0056 62F48142 		orn	r2, r2, #16512
 2574 005a DA60     		str	r2, [r3, #12]
1872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2575              		.loc 1 1874 15
 2576 005c 7B68     		ldr	r3, [r7, #4]
 2577 005e 0122     		movs	r2, #1
 2578 0060 83F82120 		strb	r2, [r3, #33]
1875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2579              		.loc 1 1876 10
 2580 0064 0023     		movs	r3, #0
 2581              	.L109:
1877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2582              		.loc 1 1877 1
 2583 0066 1846     		mov	r0, r3
 2584 0068 1037     		adds	r7, r7, #16
 2585              	.LCFI137:
 2586              		.cfi_def_cfa_offset 8
 2587 006a BD46     		mov	sp, r7
 2588              	.LCFI138:
 2589              		.cfi_def_cfa_register 13
 2590              		@ sp needed
 2591 006c 80BD     		pop	{r7, pc}
 2592              		.cfi_endproc
 2593              	.LFE354:
 2595              		.section	.text.HAL_RTCEx_PollForTamper3Event,"ax",%progbits
 2596              		.align	1
 2597              		.global	HAL_RTCEx_PollForTamper3Event
 2598              		.syntax unified
 2599              		.thumb
 2600              		.thumb_func
 2601              		.fpu fpv5-d16
ARM GAS  /tmp/ccUKMyjJ.s 			page 79


 2603              	HAL_RTCEx_PollForTamper3Event:
 2604              	.LFB355:
1878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER_2 */
1879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER_3)
1881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Tamper3 Polling.
1883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper3Event(RTC_HandleTypeDef * hrtc, uint32_t Timeout)
1888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2605              		.loc 1 1888 1
 2606              		.cfi_startproc
 2607              		@ args = 0, pretend = 0, frame = 16
 2608              		@ frame_needed = 1, uses_anonymous_args = 0
 2609 0000 80B5     		push	{r7, lr}
 2610              	.LCFI139:
 2611              		.cfi_def_cfa_offset 8
 2612              		.cfi_offset 7, -8
 2613              		.cfi_offset 14, -4
 2614 0002 84B0     		sub	sp, sp, #16
 2615              	.LCFI140:
 2616              		.cfi_def_cfa_offset 24
 2617 0004 00AF     		add	r7, sp, #0
 2618              	.LCFI141:
 2619              		.cfi_def_cfa_register 7
 2620 0006 7860     		str	r0, [r7, #4]
 2621 0008 3960     		str	r1, [r7]
1889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2622              		.loc 1 1889 24
 2623 000a FFF7FEFF 		bl	HAL_GetTick
 2624 000e F860     		str	r0, [r7, #12]
1890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
1892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) == 0U)
 2625              		.loc 1 1892 9
 2626 0010 14E0     		b	.L112
 2627              	.L115:
1893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 2628              		.loc 1 1894 8
 2629 0012 3B68     		ldr	r3, [r7]
 2630 0014 B3F1FF3F 		cmp	r3, #-1
 2631 0018 10D0     		beq	.L112
1895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2632              		.loc 1 1896 13
 2633 001a FFF7FEFF 		bl	HAL_GetTick
 2634 001e 0246     		mov	r2, r0
 2635              		.loc 1 1896 27
 2636 0020 FB68     		ldr	r3, [r7, #12]
 2637 0022 D31A     		subs	r3, r2, r3
 2638              		.loc 1 1896 10
 2639 0024 3A68     		ldr	r2, [r7]
 2640 0026 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccUKMyjJ.s 			page 80


 2641 0028 02D3     		bcc	.L113
 2642              		.loc 1 1896 51 discriminator 1
 2643 002a 3B68     		ldr	r3, [r7]
 2644 002c 002B     		cmp	r3, #0
 2645 002e 05D1     		bne	.L112
 2646              	.L113:
1897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2647              		.loc 1 1898 21
 2648 0030 7B68     		ldr	r3, [r7, #4]
 2649 0032 0322     		movs	r2, #3
 2650 0034 83F82120 		strb	r2, [r3, #33]
1899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2651              		.loc 1 1899 16
 2652 0038 0323     		movs	r3, #3
 2653 003a 14E0     		b	.L114
 2654              	.L112:
1892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2655              		.loc 1 1892 10
 2656 003c 7B68     		ldr	r3, [r7, #4]
 2657 003e 1B68     		ldr	r3, [r3]
 2658 0040 DB68     		ldr	r3, [r3, #12]
 2659 0042 03F40043 		and	r3, r3, #32768
1892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2660              		.loc 1 1892 9
 2661 0046 002B     		cmp	r3, #0
 2662 0048 E3D0     		beq	.L115
1900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
1905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
 2663              		.loc 1 1905 3
 2664 004a 7B68     		ldr	r3, [r7, #4]
 2665 004c 1B68     		ldr	r3, [r3]
 2666 004e DB68     		ldr	r3, [r3, #12]
 2667 0050 D9B2     		uxtb	r1, r3
 2668 0052 7B68     		ldr	r3, [r7, #4]
 2669 0054 1A68     		ldr	r2, [r3]
 2670 0056 064B     		ldr	r3, .L116
 2671 0058 0B43     		orrs	r3, r3, r1
 2672 005a D360     		str	r3, [r2, #12]
1906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2673              		.loc 1 1908 15
 2674 005c 7B68     		ldr	r3, [r7, #4]
 2675 005e 0122     		movs	r2, #1
 2676 0060 83F82120 		strb	r2, [r3, #33]
1909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2677              		.loc 1 1910 10
 2678 0064 0023     		movs	r3, #0
 2679              	.L114:
1911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2680              		.loc 1 1911 1
ARM GAS  /tmp/ccUKMyjJ.s 			page 81


 2681 0066 1846     		mov	r0, r3
 2682 0068 1037     		adds	r7, r7, #16
 2683              	.LCFI142:
 2684              		.cfi_def_cfa_offset 8
 2685 006a BD46     		mov	sp, r7
 2686              	.LCFI143:
 2687              		.cfi_def_cfa_register 13
 2688              		@ sp needed
 2689 006c 80BD     		pop	{r7, pc}
 2690              	.L117:
 2691 006e 00BF     		.align	2
 2692              	.L116:
 2693 0070 7F7FFFFF 		.word	-32897
 2694              		.cfi_endproc
 2695              	.LFE355:
 2697              		.section	.text.HAL_RTCEx_SetWakeUpTimer,"ax",%progbits
 2698              		.align	1
 2699              		.global	HAL_RTCEx_SetWakeUpTimer
 2700              		.syntax unified
 2701              		.thumb
 2702              		.thumb_func
 2703              		.fpu fpv5-d16
 2705              	HAL_RTCEx_SetWakeUpTimer:
 2706              	.LFB356:
1912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER_3 */
1913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP1E)
1915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper event polling.
1917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  IntTamper selected tamper.
1919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be any combination of existing internal tampers.
1920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForInternalTamperEvent(RTC_HandleTypeDef *hrtc, uint32_t IntTamper,
1924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_INTERNAL_TAMPER(IntTamper));
1927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
1929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
1931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (READ_BIT(TAMP->SR, IntTamper) != IntTamper)
1932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
1934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
1936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
1938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
1943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->SCR, IntTamper);
1944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUKMyjJ.s 			page 82


1945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP1E */
1948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group2
1954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief    RTC Wake-up functions
1955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
1956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
1957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
1958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                         ##### RTC Wake-up functions #####
1959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
1960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure Wake-up feature
1962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
1964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
1965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set wake up timer.
1969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
1971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock
1972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint32_
1975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2707              		.loc 1 1975 1
 2708              		.cfi_startproc
 2709              		@ args = 0, pretend = 0, frame = 24
 2710              		@ frame_needed = 1, uses_anonymous_args = 0
 2711 0000 80B5     		push	{r7, lr}
 2712              	.LCFI144:
 2713              		.cfi_def_cfa_offset 8
 2714              		.cfi_offset 7, -8
 2715              		.cfi_offset 14, -4
 2716 0002 86B0     		sub	sp, sp, #24
 2717              	.LCFI145:
 2718              		.cfi_def_cfa_offset 32
 2719 0004 00AF     		add	r7, sp, #0
 2720              	.LCFI146:
 2721              		.cfi_def_cfa_register 7
 2722 0006 F860     		str	r0, [r7, #12]
 2723 0008 B960     		str	r1, [r7, #8]
 2724 000a 7A60     		str	r2, [r7, #4]
1976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
1977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
1979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
1980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
1981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
1983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
ARM GAS  /tmp/ccUKMyjJ.s 			page 83


 2725              		.loc 1 1983 3
 2726 000c FB68     		ldr	r3, [r7, #12]
 2727 000e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2728 0012 012B     		cmp	r3, #1
 2729 0014 01D1     		bne	.L119
 2730              		.loc 1 1983 3 is_stmt 0 discriminator 1
 2731 0016 0223     		movs	r3, #2
 2732 0018 65E0     		b	.L120
 2733              	.L119:
 2734              		.loc 1 1983 3 discriminator 2
 2735 001a FB68     		ldr	r3, [r7, #12]
 2736 001c 0122     		movs	r2, #1
 2737 001e 83F82020 		strb	r2, [r3, #32]
1984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2738              		.loc 1 1985 15 is_stmt 1 discriminator 2
 2739 0022 FB68     		ldr	r3, [r7, #12]
 2740 0024 0222     		movs	r2, #2
 2741 0026 83F82120 		strb	r2, [r3, #33]
1986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2742              		.loc 1 1988 3 discriminator 2
 2743 002a FB68     		ldr	r3, [r7, #12]
 2744 002c 1B68     		ldr	r3, [r3]
 2745 002e CA22     		movs	r2, #202
 2746 0030 5A62     		str	r2, [r3, #36]
 2747 0032 FB68     		ldr	r3, [r7, #12]
 2748 0034 1B68     		ldr	r3, [r3]
 2749 0036 5322     		movs	r2, #83
 2750 0038 5A62     		str	r2, [r3, #36]
1989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear WUTE in RTC_CR to disable the wakeup timer */
1991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(RTC->CR, RTC_CR_WUTE);
 2751              		.loc 1 1991 3 discriminator 2
 2752 003a 2D4B     		ldr	r3, .L124
 2753 003c 9B68     		ldr	r3, [r3, #8]
 2754 003e 2C4A     		ldr	r2, .L124
 2755 0040 23F48063 		bic	r3, r3, #1024
 2756 0044 9360     		str	r3, [r2, #8]
1992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Poll WUTWF until it is set in RTC_ICSR / RTC_ISR to make sure the access to wakeup autoreload
1994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   counter and to WUCKSEL[2:0] bits is allowed. This step must be skipped in
1995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   calendar initialization mode. */
1996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_INITF)
1997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(RTC->ISR, RTC_ISR_INITF) == 0U)
 2757              		.loc 1 1997 7 discriminator 2
 2758 0046 2A4B     		ldr	r3, .L124
 2759 0048 DB68     		ldr	r3, [r3, #12]
 2760 004a 03F04003 		and	r3, r3, #64
 2761              		.loc 1 1997 6 discriminator 2
 2762 004e 002B     		cmp	r3, #0
 2763 0050 20D1     		bne	.L121
1998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_INITF */
1999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ICSR_INITF)
2000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (READ_BIT(RTC->ICSR, RTC_ICSR_INITF) == 0U)
2001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ICSR_INITF */
ARM GAS  /tmp/ccUKMyjJ.s 			page 84


2002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tickstart = HAL_GetTick();
 2764              		.loc 1 2003 19
 2765 0052 FFF7FEFF 		bl	HAL_GetTick
 2766 0056 7861     		str	r0, [r7, #20]
2004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ICSR_WUTWF)
2006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       while (READ_BIT(hrtc->Instance->ICSR, RTC_FLAG_WUTWF) == 0U)
2007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ICSR_WUTWF */
2008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_WUTWF)
2009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == 0U)
 2767              		.loc 1 2009 14
 2768 0058 15E0     		b	.L122
 2769              	.L123:
2010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_WUTWF */
2011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         {
2012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 2770              		.loc 1 2012 16
 2771 005a FFF7FEFF 		bl	HAL_GetTick
 2772 005e 0246     		mov	r2, r0
 2773              		.loc 1 2012 30
 2774 0060 7B69     		ldr	r3, [r7, #20]
 2775 0062 D31A     		subs	r3, r2, r3
 2776              		.loc 1 2012 14
 2777 0064 B3F57A7F 		cmp	r3, #1000
 2778 0068 0DD9     		bls	.L122
2013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           {
2014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             /* Enable the write protection for RTC registers */
2015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2779              		.loc 1 2015 13
 2780 006a FB68     		ldr	r3, [r7, #12]
 2781 006c 1B68     		ldr	r3, [r3]
 2782 006e FF22     		movs	r2, #255
 2783 0070 5A62     		str	r2, [r3, #36]
2016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2784              		.loc 1 2017 25
 2785 0072 FB68     		ldr	r3, [r7, #12]
 2786 0074 0322     		movs	r2, #3
 2787 0076 83F82120 		strb	r2, [r3, #33]
2018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             /* Process Unlocked */
2020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             __HAL_UNLOCK(hrtc);
 2788              		.loc 1 2020 13
 2789 007a FB68     		ldr	r3, [r7, #12]
 2790 007c 0022     		movs	r2, #0
 2791 007e 83F82020 		strb	r2, [r3, #32]
2021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             return HAL_TIMEOUT;
 2792              		.loc 1 2022 20
 2793 0082 0323     		movs	r3, #3
 2794 0084 2FE0     		b	.L120
 2795              	.L122:
2009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_WUTWF */
 2796              		.loc 1 2009 15
 2797 0086 FB68     		ldr	r3, [r7, #12]
 2798 0088 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccUKMyjJ.s 			page 85


 2799 008a DB68     		ldr	r3, [r3, #12]
 2800 008c 03F00403 		and	r3, r3, #4
2009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_WUTWF */
 2801              		.loc 1 2009 14
 2802 0090 002B     		cmp	r3, #0
 2803 0092 E2D0     		beq	.L123
 2804              	.L121:
2023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           }
2024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         }
2025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits and configure the clock source in CR register */
2028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t CR_tmp = hrtc->Instance->CR;
 2805              		.loc 1 2028 25
 2806 0094 FB68     		ldr	r3, [r7, #12]
 2807 0096 1B68     		ldr	r3, [r3]
 2808              		.loc 1 2028 12
 2809 0098 9B68     		ldr	r3, [r3, #8]
 2810 009a 3B61     		str	r3, [r7, #16]
2029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CR_tmp &= (uint32_t)~RTC_CR_WUCKSEL;
 2811              		.loc 1 2029 10
 2812 009c 3B69     		ldr	r3, [r7, #16]
 2813 009e 23F00703 		bic	r3, r3, #7
 2814 00a2 3B61     		str	r3, [r7, #16]
2030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CR_tmp |= (uint32_t)WakeUpClock;
 2815              		.loc 1 2030 10
 2816 00a4 3A69     		ldr	r2, [r7, #16]
 2817 00a6 7B68     		ldr	r3, [r7, #4]
 2818 00a8 1343     		orrs	r3, r3, r2
 2819 00aa 3B61     		str	r3, [r7, #16]
2031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = CR_tmp;
 2820              		.loc 1 2031 7
 2821 00ac FB68     		ldr	r3, [r7, #12]
 2822 00ae 1B68     		ldr	r3, [r3]
 2823              		.loc 1 2031 22
 2824 00b0 3A69     		ldr	r2, [r7, #16]
 2825 00b2 9A60     		str	r2, [r3, #8]
2032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
2034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 2826              		.loc 1 2034 7
 2827 00b4 FB68     		ldr	r3, [r7, #12]
 2828 00b6 1B68     		ldr	r3, [r3]
 2829              		.loc 1 2034 24
 2830 00b8 BA68     		ldr	r2, [r7, #8]
 2831 00ba 5A61     		str	r2, [r3, #20]
2035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the Wakeup Timer */
2037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 2832              		.loc 1 2037 3
 2833 00bc FB68     		ldr	r3, [r7, #12]
 2834 00be 1B68     		ldr	r3, [r3]
 2835 00c0 9A68     		ldr	r2, [r3, #8]
 2836 00c2 FB68     		ldr	r3, [r7, #12]
 2837 00c4 1B68     		ldr	r3, [r3]
 2838 00c6 42F48062 		orr	r2, r2, #1024
 2839 00ca 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccUKMyjJ.s 			page 86


2038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2840              		.loc 1 2040 3
 2841 00cc FB68     		ldr	r3, [r7, #12]
 2842 00ce 1B68     		ldr	r3, [r3]
 2843 00d0 FF22     		movs	r2, #255
 2844 00d2 5A62     		str	r2, [r3, #36]
2041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2845              		.loc 1 2042 15
 2846 00d4 FB68     		ldr	r3, [r7, #12]
 2847 00d6 0122     		movs	r2, #1
 2848 00d8 83F82120 		strb	r2, [r3, #33]
2043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2849              		.loc 1 2045 3
 2850 00dc FB68     		ldr	r3, [r7, #12]
 2851 00de 0022     		movs	r2, #0
 2852 00e0 83F82020 		strb	r2, [r3, #32]
2046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2853              		.loc 1 2047 10
 2854 00e4 0023     		movs	r3, #0
 2855              	.L120:
2048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2856              		.loc 1 2048 1
 2857 00e6 1846     		mov	r0, r3
 2858 00e8 1837     		adds	r7, r7, #24
 2859              	.LCFI147:
 2860              		.cfi_def_cfa_offset 8
 2861 00ea BD46     		mov	sp, r7
 2862              	.LCFI148:
 2863              		.cfi_def_cfa_register 13
 2864              		@ sp needed
 2865 00ec 80BD     		pop	{r7, pc}
 2866              	.L125:
 2867 00ee 00BF     		.align	2
 2868              	.L124:
 2869 00f0 00400058 		.word	1476411392
 2870              		.cfi_endproc
 2871              	.LFE356:
 2873              		.section	.text.HAL_RTCEx_SetWakeUpTimer_IT,"ax",%progbits
 2874              		.align	1
 2875              		.global	HAL_RTCEx_SetWakeUpTimer_IT
 2876              		.syntax unified
 2877              		.thumb
 2878              		.thumb_func
 2879              		.fpu fpv5-d16
 2881              	HAL_RTCEx_SetWakeUpTimer_IT:
 2882              	.LFB357:
2049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set wake up timer with interrupt.
2052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
ARM GAS  /tmp/ccUKMyjJ.s 			page 87


2054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock
2055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer_IT(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint
2058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2883              		.loc 1 2058 1
 2884              		.cfi_startproc
 2885              		@ args = 0, pretend = 0, frame = 24
 2886              		@ frame_needed = 1, uses_anonymous_args = 0
 2887 0000 80B5     		push	{r7, lr}
 2888              	.LCFI149:
 2889              		.cfi_def_cfa_offset 8
 2890              		.cfi_offset 7, -8
 2891              		.cfi_offset 14, -4
 2892 0002 86B0     		sub	sp, sp, #24
 2893              	.LCFI150:
 2894              		.cfi_def_cfa_offset 32
 2895 0004 00AF     		add	r7, sp, #0
 2896              	.LCFI151:
 2897              		.cfi_def_cfa_register 7
 2898 0006 F860     		str	r0, [r7, #12]
 2899 0008 B960     		str	r1, [r7, #8]
 2900 000a 7A60     		str	r2, [r7, #4]
2059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
2060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
2063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
2064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2901              		.loc 1 2066 3
 2902 000c FB68     		ldr	r3, [r7, #12]
 2903 000e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2904 0012 012B     		cmp	r3, #1
 2905 0014 01D1     		bne	.L127
 2906              		.loc 1 2066 3 is_stmt 0 discriminator 1
 2907 0016 0223     		movs	r3, #2
 2908 0018 75E0     		b	.L128
 2909              	.L127:
 2910              		.loc 1 2066 3 discriminator 2
 2911 001a FB68     		ldr	r3, [r7, #12]
 2912 001c 0122     		movs	r2, #1
 2913 001e 83F82020 		strb	r2, [r3, #32]
2067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2914              		.loc 1 2068 15 is_stmt 1 discriminator 2
 2915 0022 FB68     		ldr	r3, [r7, #12]
 2916 0024 0222     		movs	r2, #2
 2917 0026 83F82120 		strb	r2, [r3, #33]
2069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2918              		.loc 1 2071 3 discriminator 2
 2919 002a FB68     		ldr	r3, [r7, #12]
 2920 002c 1B68     		ldr	r3, [r3]
 2921 002e CA22     		movs	r2, #202
ARM GAS  /tmp/ccUKMyjJ.s 			page 88


 2922 0030 5A62     		str	r2, [r3, #36]
 2923 0032 FB68     		ldr	r3, [r7, #12]
 2924 0034 1B68     		ldr	r3, [r3]
 2925 0036 5322     		movs	r2, #83
 2926 0038 5A62     		str	r2, [r3, #36]
2072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear WUTE in RTC_CR to disable the wakeup timer */
2074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(RTC->CR, RTC_CR_WUTE);
 2927              		.loc 1 2074 3 discriminator 2
 2928 003a 354B     		ldr	r3, .L132
 2929 003c 9B68     		ldr	r3, [r3, #8]
 2930 003e 344A     		ldr	r2, .L132
 2931 0040 23F48063 		bic	r3, r3, #1024
 2932 0044 9360     		str	r3, [r2, #8]
2075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Poll WUTWF until it is set in RTC_ICSR to make sure the access to wakeup autoreload
2077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   counter and to WUCKSEL[2:0] bits is allowed. This step must be skipped in
2078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   calendar initialization mode. */
2079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_INITF)
2080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(RTC->ISR, RTC_ISR_INITF) == 0U)
 2933              		.loc 1 2080 7 discriminator 2
 2934 0046 324B     		ldr	r3, .L132
 2935 0048 DB68     		ldr	r3, [r3, #12]
 2936 004a 03F04003 		and	r3, r3, #64
 2937              		.loc 1 2080 6 discriminator 2
 2938 004e 002B     		cmp	r3, #0
 2939 0050 20D1     		bne	.L129
2081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_INITF */
2082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ICSR_INITF)
2083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (READ_BIT(RTC->ICSR, RTC_ICSR_INITF) == 0U)
2084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ICSR_INITF */
2085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tickstart = HAL_GetTick();
 2940              		.loc 1 2086 19
 2941 0052 FFF7FEFF 		bl	HAL_GetTick
 2942 0056 7861     		str	r0, [r7, #20]
2087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ICSR_WUTWF)
2089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       while (READ_BIT(hrtc->Instance->ICSR, RTC_FLAG_WUTWF) == 0U)
2090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ICSR_WUTWF */
2091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_WUTWF)
2092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == 0U)
 2943              		.loc 1 2092 14
 2944 0058 15E0     		b	.L130
 2945              	.L131:
2093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_WUTWF */
2094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         {
2095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 2946              		.loc 1 2095 16
 2947 005a FFF7FEFF 		bl	HAL_GetTick
 2948 005e 0246     		mov	r2, r0
 2949              		.loc 1 2095 30
 2950 0060 7B69     		ldr	r3, [r7, #20]
 2951 0062 D31A     		subs	r3, r2, r3
 2952              		.loc 1 2095 14
 2953 0064 B3F57A7F 		cmp	r3, #1000
 2954 0068 0DD9     		bls	.L130
ARM GAS  /tmp/ccUKMyjJ.s 			page 89


2096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           {
2097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             /* Enable the write protection for RTC registers */
2098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2955              		.loc 1 2098 13
 2956 006a FB68     		ldr	r3, [r7, #12]
 2957 006c 1B68     		ldr	r3, [r3]
 2958 006e FF22     		movs	r2, #255
 2959 0070 5A62     		str	r2, [r3, #36]
2099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2960              		.loc 1 2100 25
 2961 0072 FB68     		ldr	r3, [r7, #12]
 2962 0074 0322     		movs	r2, #3
 2963 0076 83F82120 		strb	r2, [r3, #33]
2101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             /* Process Unlocked */
2103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             __HAL_UNLOCK(hrtc);
 2964              		.loc 1 2103 13
 2965 007a FB68     		ldr	r3, [r7, #12]
 2966 007c 0022     		movs	r2, #0
 2967 007e 83F82020 		strb	r2, [r3, #32]
2104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             return HAL_TIMEOUT;
 2968              		.loc 1 2105 20
 2969 0082 0323     		movs	r3, #3
 2970 0084 3FE0     		b	.L128
 2971              	.L130:
2092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_WUTWF */
 2972              		.loc 1 2092 15
 2973 0086 FB68     		ldr	r3, [r7, #12]
 2974 0088 1B68     		ldr	r3, [r3]
 2975 008a DB68     		ldr	r3, [r3, #12]
 2976 008c 03F00403 		and	r3, r3, #4
2092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_WUTWF */
 2977              		.loc 1 2092 14
 2978 0090 002B     		cmp	r3, #0
 2979 0092 E2D0     		beq	.L131
 2980              	.L129:
2106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           }
2107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         }
2108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
2111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 2981              		.loc 1 2111 7
 2982 0094 FB68     		ldr	r3, [r7, #12]
 2983 0096 1B68     		ldr	r3, [r3]
 2984              		.loc 1 2111 24
 2985 0098 BA68     		ldr	r2, [r7, #8]
 2986 009a 5A61     		str	r2, [r3, #20]
 2987              	.LBB2:
2112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits and configure the clock source in CR register */
2114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     uint32_t CR_tmp = hrtc->Instance->CR;
 2988              		.loc 1 2115 27
 2989 009c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccUKMyjJ.s 			page 90


 2990 009e 1B68     		ldr	r3, [r3]
 2991              		.loc 1 2115 14
 2992 00a0 9B68     		ldr	r3, [r3, #8]
 2993 00a2 3B61     		str	r3, [r7, #16]
2116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     CR_tmp &= (uint32_t)~RTC_CR_WUCKSEL;
 2994              		.loc 1 2116 12
 2995 00a4 3B69     		ldr	r3, [r7, #16]
 2996 00a6 23F00703 		bic	r3, r3, #7
 2997 00aa 3B61     		str	r3, [r7, #16]
2117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     CR_tmp |= (uint32_t)WakeUpClock;
 2998              		.loc 1 2117 12
 2999 00ac 3A69     		ldr	r2, [r7, #16]
 3000 00ae 7B68     		ldr	r3, [r7, #4]
 3001 00b0 1343     		orrs	r3, r3, r2
 3002 00b2 3B61     		str	r3, [r7, #16]
2118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->CR = CR_tmp;
 3003              		.loc 1 2118 9
 3004 00b4 FB68     		ldr	r3, [r7, #12]
 3005 00b6 1B68     		ldr	r3, [r3]
 3006              		.loc 1 2118 24
 3007 00b8 3A69     		ldr	r2, [r7, #16]
 3008 00ba 9A60     		str	r2, [r3, #8]
 3009              	.LBE2:
2119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if !defined(DUAL_CORE)
2122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* RTC WakeUpTimer Interrupt Configuration: EXTI configuration */
2123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT();
2124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
2125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_RISING_EDGE();
 3010              		.loc 1 2126 3
 3011 00bc 4FF0B043 		mov	r3, #1476395008
 3012 00c0 1B68     		ldr	r3, [r3]
 3013 00c2 4FF0B042 		mov	r2, #1476395008
 3014 00c6 43F40023 		orr	r3, r3, #524288
 3015 00ca 1360     		str	r3, [r2]
2127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Interrupt in the RTC_CR register */
2129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE_IT(hrtc, RTC_IT_WUT);
 3016              		.loc 1 2129 3
 3017 00cc FB68     		ldr	r3, [r7, #12]
 3018 00ce 1B68     		ldr	r3, [r3]
 3019 00d0 9A68     		ldr	r2, [r3, #8]
 3020 00d2 FB68     		ldr	r3, [r7, #12]
 3021 00d4 1B68     		ldr	r3, [r3]
 3022 00d6 42F48042 		orr	r2, r2, #16384
 3023 00da 9A60     		str	r2, [r3, #8]
2130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the Wakeup Timer */
2132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 3024              		.loc 1 2132 3
 3025 00dc FB68     		ldr	r3, [r7, #12]
 3026 00de 1B68     		ldr	r3, [r3]
 3027 00e0 9A68     		ldr	r2, [r3, #8]
 3028 00e2 FB68     		ldr	r3, [r7, #12]
 3029 00e4 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccUKMyjJ.s 			page 91


 3030 00e6 42F48062 		orr	r2, r2, #1024
 3031 00ea 9A60     		str	r2, [r3, #8]
2133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3032              		.loc 1 2135 3
 3033 00ec FB68     		ldr	r3, [r7, #12]
 3034 00ee 1B68     		ldr	r3, [r3]
 3035 00f0 FF22     		movs	r2, #255
 3036 00f2 5A62     		str	r2, [r3, #36]
2136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3037              		.loc 1 2137 15
 3038 00f4 FB68     		ldr	r3, [r7, #12]
 3039 00f6 0122     		movs	r2, #1
 3040 00f8 83F82120 		strb	r2, [r3, #33]
2138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3041              		.loc 1 2140 3
 3042 00fc FB68     		ldr	r3, [r7, #12]
 3043 00fe 0022     		movs	r2, #0
 3044 0100 83F82020 		strb	r2, [r3, #32]
2141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 3045              		.loc 1 2142 10
 3046 0104 0023     		movs	r3, #0
 3047              	.L128:
2143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3048              		.loc 1 2143 1
 3049 0106 1846     		mov	r0, r3
 3050 0108 1837     		adds	r7, r7, #24
 3051              	.LCFI152:
 3052              		.cfi_def_cfa_offset 8
 3053 010a BD46     		mov	sp, r7
 3054              	.LCFI153:
 3055              		.cfi_def_cfa_register 13
 3056              		@ sp needed
 3057 010c 80BD     		pop	{r7, pc}
 3058              	.L133:
 3059 010e 00BF     		.align	2
 3060              	.L132:
 3061 0110 00400058 		.word	1476411392
 3062              		.cfi_endproc
 3063              	.LFE357:
 3065              		.section	.text.HAL_RTCEx_DeactivateWakeUpTimer,"ax",%progbits
 3066              		.align	1
 3067              		.global	HAL_RTCEx_DeactivateWakeUpTimer
 3068              		.syntax unified
 3069              		.thumb
 3070              		.thumb_func
 3071              		.fpu fpv5-d16
 3073              	HAL_RTCEx_DeactivateWakeUpTimer:
 3074              	.LFB358:
2144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate wake up timer counter.
ARM GAS  /tmp/ccUKMyjJ.s 			page 92


2147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateWakeUpTimer(RTC_HandleTypeDef *hrtc)
2151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3075              		.loc 1 2151 1
 3076              		.cfi_startproc
 3077              		@ args = 0, pretend = 0, frame = 16
 3078              		@ frame_needed = 1, uses_anonymous_args = 0
 3079 0000 80B5     		push	{r7, lr}
 3080              	.LCFI154:
 3081              		.cfi_def_cfa_offset 8
 3082              		.cfi_offset 7, -8
 3083              		.cfi_offset 14, -4
 3084 0002 84B0     		sub	sp, sp, #16
 3085              	.LCFI155:
 3086              		.cfi_def_cfa_offset 24
 3087 0004 00AF     		add	r7, sp, #0
 3088              	.LCFI156:
 3089              		.cfi_def_cfa_register 7
 3090 0006 7860     		str	r0, [r7, #4]
2152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
2153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3091              		.loc 1 2155 3
 3092 0008 7B68     		ldr	r3, [r7, #4]
 3093 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3094 000e 012B     		cmp	r3, #1
 3095 0010 01D1     		bne	.L135
 3096              		.loc 1 2155 3 is_stmt 0 discriminator 1
 3097 0012 0223     		movs	r3, #2
 3098 0014 4DE0     		b	.L136
 3099              	.L135:
 3100              		.loc 1 2155 3 discriminator 2
 3101 0016 7B68     		ldr	r3, [r7, #4]
 3102 0018 0122     		movs	r2, #1
 3103 001a 83F82020 		strb	r2, [r3, #32]
2156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3104              		.loc 1 2157 15 is_stmt 1 discriminator 2
 3105 001e 7B68     		ldr	r3, [r7, #4]
 3106 0020 0222     		movs	r2, #2
 3107 0022 83F82120 		strb	r2, [r3, #33]
2158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3108              		.loc 1 2160 3 discriminator 2
 3109 0026 7B68     		ldr	r3, [r7, #4]
 3110 0028 1B68     		ldr	r3, [r3]
 3111 002a CA22     		movs	r2, #202
 3112 002c 5A62     		str	r2, [r3, #36]
 3113 002e 7B68     		ldr	r3, [r7, #4]
 3114 0030 1B68     		ldr	r3, [r3]
 3115 0032 5322     		movs	r2, #83
 3116 0034 5A62     		str	r2, [r3, #36]
2161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUKMyjJ.s 			page 93


2162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the Wakeup Timer */
2163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 3117              		.loc 1 2163 3 discriminator 2
 3118 0036 7B68     		ldr	r3, [r7, #4]
 3119 0038 1B68     		ldr	r3, [r3]
 3120 003a 9A68     		ldr	r2, [r3, #8]
 3121 003c 7B68     		ldr	r3, [r7, #4]
 3122 003e 1B68     		ldr	r3, [r3]
 3123 0040 22F48062 		bic	r2, r2, #1024
 3124 0044 9A60     		str	r2, [r3, #8]
2164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
2166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE_IT(hrtc, RTC_IT_WUT);
 3125              		.loc 1 2166 3 discriminator 2
 3126 0046 7B68     		ldr	r3, [r7, #4]
 3127 0048 1B68     		ldr	r3, [r3]
 3128 004a 9A68     		ldr	r2, [r3, #8]
 3129 004c 7B68     		ldr	r3, [r7, #4]
 3130 004e 1B68     		ldr	r3, [r3]
 3131 0050 22F48042 		bic	r2, r2, #16384
 3132 0054 9A60     		str	r2, [r3, #8]
2167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 3133              		.loc 1 2168 15 discriminator 2
 3134 0056 FFF7FEFF 		bl	HAL_GetTick
 3135 005a F860     		str	r0, [r7, #12]
2169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
2170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #if defined(RTC_ICSR_WUTWF)
2171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while (READ_BIT(hrtc->Instance->ICSR, RTC_FLAG_WUTWF) == 0U)
2172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #endif /* RTC_ICSR_WUTWF */
2173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #if defined(RTC_ISR_WUTWF)
2174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == 0U)
 3136              		.loc 1 2174 10 discriminator 2
 3137 005c 15E0     		b	.L137
 3138              	.L138:
2175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #endif /* RTC_ISR_WUTWF */
2176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 3139              		.loc 1 2177 10
 3140 005e FFF7FEFF 		bl	HAL_GetTick
 3141 0062 0246     		mov	r2, r0
 3142              		.loc 1 2177 24
 3143 0064 FB68     		ldr	r3, [r7, #12]
 3144 0066 D31A     		subs	r3, r2, r3
 3145              		.loc 1 2177 8
 3146 0068 B3F57A7F 		cmp	r3, #1000
 3147 006c 0DD9     		bls	.L137
2178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
2180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3148              		.loc 1 2180 7
 3149 006e 7B68     		ldr	r3, [r7, #4]
 3150 0070 1B68     		ldr	r3, [r3]
 3151 0072 FF22     		movs	r2, #255
 3152 0074 5A62     		str	r2, [r3, #36]
2181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
ARM GAS  /tmp/ccUKMyjJ.s 			page 94


 3153              		.loc 1 2182 19
 3154 0076 7B68     		ldr	r3, [r7, #4]
 3155 0078 0322     		movs	r2, #3
 3156 007a 83F82120 		strb	r2, [r3, #33]
2183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Process Unlocked */
2185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 3157              		.loc 1 2185 7
 3158 007e 7B68     		ldr	r3, [r7, #4]
 3159 0080 0022     		movs	r2, #0
 3160 0082 83F82020 		strb	r2, [r3, #32]
2186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 3161              		.loc 1 2187 14
 3162 0086 0323     		movs	r3, #3
 3163 0088 13E0     		b	.L136
 3164              	.L137:
2174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #endif /* RTC_ISR_WUTWF */
 3165              		.loc 1 2174 11
 3166 008a 7B68     		ldr	r3, [r7, #4]
 3167 008c 1B68     		ldr	r3, [r3]
 3168 008e DB68     		ldr	r3, [r3, #12]
 3169 0090 03F00403 		and	r3, r3, #4
2174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #endif /* RTC_ISR_WUTWF */
 3170              		.loc 1 2174 10
 3171 0094 002B     		cmp	r3, #0
 3172 0096 E2D0     		beq	.L138
2188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3173              		.loc 1 2192 3
 3174 0098 7B68     		ldr	r3, [r7, #4]
 3175 009a 1B68     		ldr	r3, [r3]
 3176 009c FF22     		movs	r2, #255
 3177 009e 5A62     		str	r2, [r3, #36]
2193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3178              		.loc 1 2194 15
 3179 00a0 7B68     		ldr	r3, [r7, #4]
 3180 00a2 0122     		movs	r2, #1
 3181 00a4 83F82120 		strb	r2, [r3, #33]
2195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3182              		.loc 1 2197 3
 3183 00a8 7B68     		ldr	r3, [r7, #4]
 3184 00aa 0022     		movs	r2, #0
 3185 00ac 83F82020 		strb	r2, [r3, #32]
2198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 3186              		.loc 1 2199 10
 3187 00b0 0023     		movs	r3, #0
 3188              	.L136:
2200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3189              		.loc 1 2200 1
ARM GAS  /tmp/ccUKMyjJ.s 			page 95


 3190 00b2 1846     		mov	r0, r3
 3191 00b4 1037     		adds	r7, r7, #16
 3192              	.LCFI157:
 3193              		.cfi_def_cfa_offset 8
 3194 00b6 BD46     		mov	sp, r7
 3195              	.LCFI158:
 3196              		.cfi_def_cfa_register 13
 3197              		@ sp needed
 3198 00b8 80BD     		pop	{r7, pc}
 3199              		.cfi_endproc
 3200              	.LFE358:
 3202              		.section	.text.HAL_RTCEx_GetWakeUpTimer,"ax",%progbits
 3203              		.align	1
 3204              		.global	HAL_RTCEx_GetWakeUpTimer
 3205              		.syntax unified
 3206              		.thumb
 3207              		.thumb_func
 3208              		.fpu fpv5-d16
 3210              	HAL_RTCEx_GetWakeUpTimer:
 3211              	.LFB359:
2201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Get wake up timer counter.
2204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval Counter value
2206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_GetWakeUpTimer(RTC_HandleTypeDef *hrtc)
2208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3212              		.loc 1 2208 1
 3213              		.cfi_startproc
 3214              		@ args = 0, pretend = 0, frame = 8
 3215              		@ frame_needed = 1, uses_anonymous_args = 0
 3216              		@ link register save eliminated.
 3217 0000 80B4     		push	{r7}
 3218              	.LCFI159:
 3219              		.cfi_def_cfa_offset 4
 3220              		.cfi_offset 7, -4
 3221 0002 83B0     		sub	sp, sp, #12
 3222              	.LCFI160:
 3223              		.cfi_def_cfa_offset 16
 3224 0004 00AF     		add	r7, sp, #0
 3225              	.LCFI161:
 3226              		.cfi_def_cfa_register 7
 3227 0006 7860     		str	r0, [r7, #4]
2209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the counter value */
2210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return ((uint32_t)(hrtc->Instance->WUTR & RTC_WUTR_WUT));
 3228              		.loc 1 2210 26
 3229 0008 7B68     		ldr	r3, [r7, #4]
 3230 000a 1B68     		ldr	r3, [r3]
 3231              		.loc 1 2210 36
 3232 000c 5B69     		ldr	r3, [r3, #20]
 3233              		.loc 1 2210 11
 3234 000e 9BB2     		uxth	r3, r3
2211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3235              		.loc 1 2211 1
 3236 0010 1846     		mov	r0, r3
 3237 0012 0C37     		adds	r7, r7, #12
ARM GAS  /tmp/ccUKMyjJ.s 			page 96


 3238              	.LCFI162:
 3239              		.cfi_def_cfa_offset 4
 3240 0014 BD46     		mov	sp, r7
 3241              	.LCFI163:
 3242              		.cfi_def_cfa_register 13
 3243              		@ sp needed
 3244 0016 5DF8047B 		ldr	r7, [sp], #4
 3245              	.LCFI164:
 3246              		.cfi_restore 7
 3247              		.cfi_def_cfa_offset 0
 3248 001a 7047     		bx	lr
 3249              		.cfi_endproc
 3250              	.LFE359:
 3252              		.section	.text.HAL_RTCEx_WakeUpTimerIRQHandler,"ax",%progbits
 3253              		.align	1
 3254              		.global	HAL_RTCEx_WakeUpTimerIRQHandler
 3255              		.syntax unified
 3256              		.thumb
 3257              		.thumb_func
 3258              		.fpu fpv5-d16
 3260              	HAL_RTCEx_WakeUpTimerIRQHandler:
 3261              	.LFB360:
2212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Wake Up Timer interrupt request.
2215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
2217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** void HAL_RTCEx_WakeUpTimerIRQHandler(RTC_HandleTypeDef *hrtc)
2219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3262              		.loc 1 2219 1
 3263              		.cfi_startproc
 3264              		@ args = 0, pretend = 0, frame = 8
 3265              		@ frame_needed = 1, uses_anonymous_args = 0
 3266 0000 80B5     		push	{r7, lr}
 3267              	.LCFI165:
 3268              		.cfi_def_cfa_offset 8
 3269              		.cfi_offset 7, -8
 3270              		.cfi_offset 14, -4
 3271 0002 82B0     		sub	sp, sp, #8
 3272              	.LCFI166:
 3273              		.cfi_def_cfa_offset 16
 3274 0004 00AF     		add	r7, sp, #0
 3275              	.LCFI167:
 3276              		.cfi_def_cfa_register 7
 3277 0006 7860     		str	r0, [r7, #4]
2220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the EXTI's line Flag for RTC WakeUpTimer */
2221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(DUAL_CORE)
2222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (HAL_GetCurrentCPUID() == CM7_CPUID)
 3278              		.loc 1 2222 7
 3279 0008 FFF7FEFF 		bl	HAL_GetCurrentCPUID
 3280 000c 0346     		mov	r3, r0
 3281              		.loc 1 2222 6
 3282 000e 032B     		cmp	r3, #3
 3283 0010 04D1     		bne	.L142
2223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG();
ARM GAS  /tmp/ccUKMyjJ.s 			page 97


 3284              		.loc 1 2224 5
 3285 0012 124B     		ldr	r3, .L145
 3286 0014 4FF40022 		mov	r2, #524288
 3287 0018 9A60     		str	r2, [r3, #8]
 3288 001a 03E0     		b	.L143
 3289              	.L142:
2225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
2227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_EXTID2_CLEAR_FLAG();
 3290              		.loc 1 2228 5
 3291 001c 104B     		ldr	r3, .L145+4
 3292 001e 4FF40022 		mov	r2, #524288
 3293 0022 9A60     		str	r2, [r3, #8]
 3294              	.L143:
2229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else  /* SINGLE_CORE */
2231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG();
2232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* DUAL_CORE */
2233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_MISR_WUTMF)
2235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the pending status of the WAKEUPTIMER Interrupt */
2236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->MISR & RTC_MISR_WUTMF) != 0u)
2237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Immediately clear flags */
2239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->SCR = RTC_SCR_CWUTF;
2240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* WAKEUPTIMER callback */
2242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
2243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call WakeUpTimerEvent registered Callback */
2244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->WakeUpTimerEventCallback(hrtc);
2245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #else
2246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_WakeUpTimerEventCallback(hrtc);
2247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
2248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_MISR_WUTMF */
2250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_WUTF)
2251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the pending status of the WAKEUPTIMER Interrupt */
2252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) != 0U)
 3295              		.loc 1 2252 7
 3296 0024 7B68     		ldr	r3, [r7, #4]
 3297 0026 1B68     		ldr	r3, [r3]
 3298 0028 DB68     		ldr	r3, [r3, #12]
 3299 002a 03F48063 		and	r3, r3, #1024
 3300              		.loc 1 2252 6
 3301 002e 002B     		cmp	r3, #0
 3302 0030 0BD0     		beq	.L144
2253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Clear the WAKEUPTIMER interrupt pending bit */
2255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 3303              		.loc 1 2255 5
 3304 0032 7B68     		ldr	r3, [r7, #4]
 3305 0034 1B68     		ldr	r3, [r3]
 3306 0036 DB68     		ldr	r3, [r3, #12]
 3307 0038 DAB2     		uxtb	r2, r3
 3308 003a 7B68     		ldr	r3, [r7, #4]
 3309 003c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccUKMyjJ.s 			page 98


 3310 003e 62F49062 		orn	r2, r2, #1152
 3311 0042 DA60     		str	r2, [r3, #12]
2256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* WAKEUPTIMER callback */
2258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
2259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call WakeUpTimerEvent registered Callback */
2260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->WakeUpTimerEventCallback(hrtc);
2261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #else
2262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_WakeUpTimerEventCallback(hrtc);
 3312              		.loc 1 2262 5
 3313 0044 7868     		ldr	r0, [r7, #4]
 3314 0046 FFF7FEFF 		bl	HAL_RTCEx_WakeUpTimerEventCallback
 3315              	.L144:
2263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
2264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_WUTF */
2266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3316              		.loc 1 2268 15
 3317 004a 7B68     		ldr	r3, [r7, #4]
 3318 004c 0122     		movs	r2, #1
 3319 004e 83F82120 		strb	r2, [r3, #33]
2269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3320              		.loc 1 2269 1
 3321 0052 00BF     		nop
 3322 0054 0837     		adds	r7, r7, #8
 3323              	.LCFI168:
 3324              		.cfi_def_cfa_offset 8
 3325 0056 BD46     		mov	sp, r7
 3326              	.LCFI169:
 3327              		.cfi_def_cfa_register 13
 3328              		@ sp needed
 3329 0058 80BD     		pop	{r7, pc}
 3330              	.L146:
 3331 005a 00BF     		.align	2
 3332              	.L145:
 3333 005c 80000058 		.word	1476395136
 3334 0060 C0000058 		.word	1476395200
 3335              		.cfi_endproc
 3336              	.LFE360:
 3338              		.section	.text.HAL_RTCEx_WakeUpTimerEventCallback,"ax",%progbits
 3339              		.align	1
 3340              		.weak	HAL_RTCEx_WakeUpTimerEventCallback
 3341              		.syntax unified
 3342              		.thumb
 3343              		.thumb_func
 3344              		.fpu fpv5-d16
 3346              	HAL_RTCEx_WakeUpTimerEventCallback:
 3347              	.LFB361:
2270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Wake Up Timer callback.
2273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
2275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef * hrtc)
ARM GAS  /tmp/ccUKMyjJ.s 			page 99


2277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3348              		.loc 1 2277 1
 3349              		.cfi_startproc
 3350              		@ args = 0, pretend = 0, frame = 8
 3351              		@ frame_needed = 1, uses_anonymous_args = 0
 3352              		@ link register save eliminated.
 3353 0000 80B4     		push	{r7}
 3354              	.LCFI170:
 3355              		.cfi_def_cfa_offset 4
 3356              		.cfi_offset 7, -4
 3357 0002 83B0     		sub	sp, sp, #12
 3358              	.LCFI171:
 3359              		.cfi_def_cfa_offset 16
 3360 0004 00AF     		add	r7, sp, #0
 3361              	.LCFI172:
 3362              		.cfi_def_cfa_register 7
 3363 0006 7860     		str	r0, [r7, #4]
2278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
2279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
2280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_WakeUpTimerEventCallback could be implemented in the user file
2283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
2284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3364              		.loc 1 2284 1
 3365 0008 00BF     		nop
 3366 000a 0C37     		adds	r7, r7, #12
 3367              	.LCFI173:
 3368              		.cfi_def_cfa_offset 4
 3369 000c BD46     		mov	sp, r7
 3370              	.LCFI174:
 3371              		.cfi_def_cfa_register 13
 3372              		@ sp needed
 3373 000e 5DF8047B 		ldr	r7, [sp], #4
 3374              	.LCFI175:
 3375              		.cfi_restore 7
 3376              		.cfi_def_cfa_offset 0
 3377 0012 7047     		bx	lr
 3378              		.cfi_endproc
 3379              	.LFE361:
 3381              		.section	.text.HAL_RTCEx_PollForWakeUpTimerEvent,"ax",%progbits
 3382              		.align	1
 3383              		.global	HAL_RTCEx_PollForWakeUpTimerEvent
 3384              		.syntax unified
 3385              		.thumb
 3386              		.thumb_func
 3387              		.fpu fpv5-d16
 3389              	HAL_RTCEx_PollForWakeUpTimerEvent:
 3390              	.LFB362:
2285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Wake Up Timer Polling.
2289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
2291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
ARM GAS  /tmp/ccUKMyjJ.s 			page 100


2293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForWakeUpTimerEvent(RTC_HandleTypeDef * hrtc, uint32_t Timeout)
2294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3391              		.loc 1 2294 1
 3392              		.cfi_startproc
 3393              		@ args = 0, pretend = 0, frame = 16
 3394              		@ frame_needed = 1, uses_anonymous_args = 0
 3395 0000 80B5     		push	{r7, lr}
 3396              	.LCFI176:
 3397              		.cfi_def_cfa_offset 8
 3398              		.cfi_offset 7, -8
 3399              		.cfi_offset 14, -4
 3400 0002 84B0     		sub	sp, sp, #16
 3401              	.LCFI177:
 3402              		.cfi_def_cfa_offset 24
 3403 0004 00AF     		add	r7, sp, #0
 3404              	.LCFI178:
 3405              		.cfi_def_cfa_register 7
 3406 0006 7860     		str	r0, [r7, #4]
 3407 0008 3960     		str	r1, [r7]
2295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 3408              		.loc 1 2295 24
 3409 000a FFF7FEFF 		bl	HAL_GetTick
 3410 000e F860     		str	r0, [r7, #12]
2296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) == 0U)
 3411              		.loc 1 2297 8
 3412 0010 14E0     		b	.L149
 3413              	.L152:
2298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 3414              		.loc 1 2299 8
 3415 0012 3B68     		ldr	r3, [r7]
 3416 0014 B3F1FF3F 		cmp	r3, #-1
 3417 0018 10D0     		beq	.L149
2300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 3418              		.loc 1 2301 13
 3419 001a FFF7FEFF 		bl	HAL_GetTick
 3420 001e 0246     		mov	r2, r0
 3421              		.loc 1 2301 27
 3422 0020 FB68     		ldr	r3, [r7, #12]
 3423 0022 D31A     		subs	r3, r2, r3
 3424              		.loc 1 2301 10
 3425 0024 3A68     		ldr	r2, [r7]
 3426 0026 9A42     		cmp	r2, r3
 3427 0028 02D3     		bcc	.L150
 3428              		.loc 1 2301 51 discriminator 1
 3429 002a 3B68     		ldr	r3, [r7]
 3430 002c 002B     		cmp	r3, #0
 3431 002e 05D1     		bne	.L149
 3432              	.L150:
2302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
2303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 3433              		.loc 1 2303 21
 3434 0030 7B68     		ldr	r3, [r7, #4]
 3435 0032 0322     		movs	r2, #3
 3436 0034 83F82120 		strb	r2, [r3, #33]
ARM GAS  /tmp/ccUKMyjJ.s 			page 101


2304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 3437              		.loc 1 2304 16
 3438 0038 0323     		movs	r3, #3
 3439 003a 14E0     		b	.L151
 3440              	.L149:
2297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 3441              		.loc 1 2297 9
 3442 003c 7B68     		ldr	r3, [r7, #4]
 3443 003e 1B68     		ldr	r3, [r3]
 3444 0040 DB68     		ldr	r3, [r3, #12]
 3445 0042 03F48063 		and	r3, r3, #1024
2297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 3446              		.loc 1 2297 8
 3447 0046 002B     		cmp	r3, #0
 3448 0048 E3D0     		beq	.L152
2305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
2306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the WAKEUPTIMER Flag */
2310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 3449              		.loc 1 2310 3
 3450 004a 7B68     		ldr	r3, [r7, #4]
 3451 004c 1B68     		ldr	r3, [r3]
 3452 004e DB68     		ldr	r3, [r3, #12]
 3453 0050 DAB2     		uxtb	r2, r3
 3454 0052 7B68     		ldr	r3, [r7, #4]
 3455 0054 1B68     		ldr	r3, [r3]
 3456 0056 62F49062 		orn	r2, r2, #1152
 3457 005a DA60     		str	r2, [r3, #12]
2311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3458              		.loc 1 2313 15
 3459 005c 7B68     		ldr	r3, [r7, #4]
 3460 005e 0122     		movs	r2, #1
 3461 0060 83F82120 		strb	r2, [r3, #33]
2314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 3462              		.loc 1 2315 10
 3463 0064 0023     		movs	r3, #0
 3464              	.L151:
2316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3465              		.loc 1 2316 1
 3466 0066 1846     		mov	r0, r3
 3467 0068 1037     		adds	r7, r7, #16
 3468              	.LCFI179:
 3469              		.cfi_def_cfa_offset 8
 3470 006a BD46     		mov	sp, r7
 3471              	.LCFI180:
 3472              		.cfi_def_cfa_register 13
 3473              		@ sp needed
 3474 006c 80BD     		pop	{r7, pc}
 3475              		.cfi_endproc
 3476              	.LFE362:
 3478              		.section	.text.HAL_RTCEx_BKUPWrite,"ax",%progbits
 3479              		.align	1
ARM GAS  /tmp/ccUKMyjJ.s 			page 102


 3480              		.global	HAL_RTCEx_BKUPWrite
 3481              		.syntax unified
 3482              		.thumb
 3483              		.thumb_func
 3484              		.fpu fpv5-d16
 3486              	HAL_RTCEx_BKUPWrite:
 3487              	.LFB363:
2317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
2320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group6
2324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief      Extended RTC Backup register functions
2325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
2326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
2327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
2328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              ##### Extended RTC Backup register functions #####
2329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
2330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
2331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    (+) Before calling any tamper or internal tamper function, you have to call first
2332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****        HAL_RTC_Init() function.
2333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    (+) In that ine you can select to output tamper event on RTC pin.
2334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
2335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    This subsection provides functions allowing to
2336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    (+) Write a data in a specified RTC Backup data register
2337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    (+) Read a data in a specified RTC Backup data register
2338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
2339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
2340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Write a data in a specified RTC Backup data register.
2345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
2347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 31 to
2348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                 specify the register.
2349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Data Data to be written in the specified Backup data register.
2350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
2351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** void HAL_RTCEx_BKUPWrite(RTC_HandleTypeDef * hrtc, uint32_t BackupRegister, uint32_t Data)
2353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3488              		.loc 1 2353 1
 3489              		.cfi_startproc
 3490              		@ args = 0, pretend = 0, frame = 24
 3491              		@ frame_needed = 1, uses_anonymous_args = 0
 3492              		@ link register save eliminated.
 3493 0000 80B4     		push	{r7}
 3494              	.LCFI181:
 3495              		.cfi_def_cfa_offset 4
 3496              		.cfi_offset 7, -4
 3497 0002 87B0     		sub	sp, sp, #28
 3498              	.LCFI182:
 3499              		.cfi_def_cfa_offset 32
 3500 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccUKMyjJ.s 			page 103


 3501              	.LCFI183:
 3502              		.cfi_def_cfa_register 7
 3503 0006 F860     		str	r0, [r7, #12]
 3504 0008 B960     		str	r1, [r7, #8]
 3505 000a 7A60     		str	r2, [r7, #4]
2354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmp;
2355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
2358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on address of first backup register */
2360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_BKP0R)
2361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp = (uint32_t) & (((TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET))->BKP0R);
2362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_BKP0R */
2363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_BKP0R)
2364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp = (uint32_t) & (hrtc->Instance->BKP0R);
 3506              		.loc 1 2364 27
 3507 000c FB68     		ldr	r3, [r7, #12]
 3508 000e 1B68     		ldr	r3, [r3]
 3509              		.loc 1 2364 20
 3510 0010 5033     		adds	r3, r3, #80
 3511              		.loc 1 2364 7
 3512 0012 7B61     		str	r3, [r7, #20]
2365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_BKP0R */
2366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4U);
 3513              		.loc 1 2367 26
 3514 0014 BB68     		ldr	r3, [r7, #8]
 3515 0016 9B00     		lsls	r3, r3, #2
 3516              		.loc 1 2367 7
 3517 0018 7A69     		ldr	r2, [r7, #20]
 3518 001a 1344     		add	r3, r3, r2
 3519 001c 7B61     		str	r3, [r7, #20]
2368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Write the specified register */
2370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
 3520              		.loc 1 2370 4
 3521 001e 7B69     		ldr	r3, [r7, #20]
 3522              		.loc 1 2370 25
 3523 0020 7A68     		ldr	r2, [r7, #4]
 3524 0022 1A60     		str	r2, [r3]
2371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3525              		.loc 1 2371 1
 3526 0024 00BF     		nop
 3527 0026 1C37     		adds	r7, r7, #28
 3528              	.LCFI184:
 3529              		.cfi_def_cfa_offset 4
 3530 0028 BD46     		mov	sp, r7
 3531              	.LCFI185:
 3532              		.cfi_def_cfa_register 13
 3533              		@ sp needed
 3534 002a 5DF8047B 		ldr	r7, [sp], #4
 3535              	.LCFI186:
 3536              		.cfi_restore 7
 3537              		.cfi_def_cfa_offset 0
 3538 002e 7047     		bx	lr
 3539              		.cfi_endproc
ARM GAS  /tmp/ccUKMyjJ.s 			page 104


 3540              	.LFE363:
 3542              		.section	.text.HAL_RTCEx_BKUPRead,"ax",%progbits
 3543              		.align	1
 3544              		.global	HAL_RTCEx_BKUPRead
 3545              		.syntax unified
 3546              		.thumb
 3547              		.thumb_func
 3548              		.fpu fpv5-d16
 3550              	HAL_RTCEx_BKUPRead:
 3551              	.LFB364:
2372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Read data from the specified RTC Backup data Register.
2376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
2378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 31 to
2379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                 specify the register.
2380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval Read value
2381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_BKUPRead(RTC_HandleTypeDef * hrtc, uint32_t BackupRegister)
2383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3552              		.loc 1 2383 1
 3553              		.cfi_startproc
 3554              		@ args = 0, pretend = 0, frame = 16
 3555              		@ frame_needed = 1, uses_anonymous_args = 0
 3556              		@ link register save eliminated.
 3557 0000 80B4     		push	{r7}
 3558              	.LCFI187:
 3559              		.cfi_def_cfa_offset 4
 3560              		.cfi_offset 7, -4
 3561 0002 85B0     		sub	sp, sp, #20
 3562              	.LCFI188:
 3563              		.cfi_def_cfa_offset 24
 3564 0004 00AF     		add	r7, sp, #0
 3565              	.LCFI189:
 3566              		.cfi_def_cfa_register 7
 3567 0006 7860     		str	r0, [r7, #4]
 3568 0008 3960     		str	r1, [r7]
2384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmp;
2385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
2388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on address of first backup register */
2390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_BKP0R)
2391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp = (uint32_t) & (((TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET))->BKP0R);
2392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_BKP0R */
2393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_BKP0R)
2394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp = (uint32_t) & (hrtc->Instance->BKP0R);
 3569              		.loc 1 2394 27
 3570 000a 7B68     		ldr	r3, [r7, #4]
 3571 000c 1B68     		ldr	r3, [r3]
 3572              		.loc 1 2394 20
 3573 000e 5033     		adds	r3, r3, #80
 3574              		.loc 1 2394 7
 3575 0010 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccUKMyjJ.s 			page 105


2395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_BKP0R */
2396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4U);
 3576              		.loc 1 2397 26
 3577 0012 3B68     		ldr	r3, [r7]
 3578 0014 9B00     		lsls	r3, r3, #2
 3579              		.loc 1 2397 7
 3580 0016 FA68     		ldr	r2, [r7, #12]
 3581 0018 1344     		add	r3, r3, r2
 3582 001a FB60     		str	r3, [r7, #12]
2398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Read the specified register */
2400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return (*(__IO uint32_t *)tmp);
 3583              		.loc 1 2400 12
 3584 001c FB68     		ldr	r3, [r7, #12]
 3585              		.loc 1 2400 11
 3586 001e 1B68     		ldr	r3, [r3]
2401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3587              		.loc 1 2401 1
 3588 0020 1846     		mov	r0, r3
 3589 0022 1437     		adds	r7, r7, #20
 3590              	.LCFI190:
 3591              		.cfi_def_cfa_offset 4
 3592 0024 BD46     		mov	sp, r7
 3593              	.LCFI191:
 3594              		.cfi_def_cfa_register 13
 3595              		@ sp needed
 3596 0026 5DF8047B 		ldr	r7, [sp], #4
 3597              	.LCFI192:
 3598              		.cfi_restore 7
 3599              		.cfi_def_cfa_offset 0
 3600 002a 7047     		bx	lr
 3601              		.cfi_endproc
 3602              	.LFE364:
 3604              		.section	.text.HAL_RTCEx_SetSmoothCalib,"ax",%progbits
 3605              		.align	1
 3606              		.global	HAL_RTCEx_SetSmoothCalib
 3607              		.syntax unified
 3608              		.thumb
 3609              		.thumb_func
 3610              		.fpu fpv5-d16
 3612              	HAL_RTCEx_SetSmoothCalib:
 3613              	.LFB365:
2402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
2406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group3
2410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief    Extended Peripheral Control functions
2411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
2412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
2413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
2414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               ##### Extended Peripheral Control functions #####
2415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
ARM GAS  /tmp/ccUKMyjJ.s 			page 106


2416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     [..]
2417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     This subsection provides functions allowing to
2418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Write a data in a specified RTC Backup data register
2419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Read a data in a specified RTC Backup data register
2420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Set the Smooth calibration parameters.
2421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Set Low Power calibration parameter (if feature supported).
2422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Configure the Synchronization Shift Control Settings.
2423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
2424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
2425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Enable the RTC reference clock detection.
2426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Disable the RTC reference clock detection.
2427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Enable the Bypass Shadow feature.
2428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Disable the Bypass Shadow feature.
2429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
2431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
2432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set the Smooth calibration parameters.
2437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  SmoothCalibPeriod Select the Smooth Calibration Period.
2439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be can be one of the following values :
2440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_32SEC: The smooth calibration period is 32s.
2441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_16SEC: The smooth calibration period is 16s.
2442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_8SEC: The smooth calibration period is 8s.
2443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  SmoothCalibPlusPulses Select to Set or reset the CALP bit.
2444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
2445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_SET: Add one RTCCLK pulse every 2*11 pulses.
2446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_RESET: No RTCCLK pulses are added.
2447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  SmoothCalibMinusPulsesValue Select the value of CALM[8:0] bits.
2448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x000001FF.
2449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   To deactivate the smooth calibration, the field SmoothCalibPlusPulses
2450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         must be equal to SMOOTHCALIB_PLUSPULSES_RESET and the field
2451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         SmoothCalibMinusPulsesValue must be equal to 0.
2452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSmoothCalib(RTC_HandleTypeDef * hrtc, uint32_t SmoothCalibPeriod, ui
2455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3614              		.loc 1 2455 1
 3615              		.cfi_startproc
 3616              		@ args = 0, pretend = 0, frame = 24
 3617              		@ frame_needed = 1, uses_anonymous_args = 0
 3618 0000 80B5     		push	{r7, lr}
 3619              	.LCFI193:
 3620              		.cfi_def_cfa_offset 8
 3621              		.cfi_offset 7, -8
 3622              		.cfi_offset 14, -4
 3623 0002 86B0     		sub	sp, sp, #24
 3624              	.LCFI194:
 3625              		.cfi_def_cfa_offset 32
 3626 0004 00AF     		add	r7, sp, #0
 3627              	.LCFI195:
 3628              		.cfi_def_cfa_register 7
 3629 0006 F860     		str	r0, [r7, #12]
 3630 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/ccUKMyjJ.s 			page 107


 3631 000a 7A60     		str	r2, [r7, #4]
 3632 000c 3B60     		str	r3, [r7]
2456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
2457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PERIOD(SmoothCalibPeriod));
2460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PLUS(SmoothCalibPlusPulses));
2461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_MINUS(SmoothCalibMinusPulsesValue));
2462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3633              		.loc 1 2464 3
 3634 000e FB68     		ldr	r3, [r7, #12]
 3635 0010 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3636 0014 012B     		cmp	r3, #1
 3637 0016 01D1     		bne	.L157
 3638              		.loc 1 2464 3 is_stmt 0 discriminator 1
 3639 0018 0223     		movs	r3, #2
 3640 001a 52E0     		b	.L158
 3641              	.L157:
 3642              		.loc 1 2464 3 discriminator 2
 3643 001c FB68     		ldr	r3, [r7, #12]
 3644 001e 0122     		movs	r2, #1
 3645 0020 83F82020 		strb	r2, [r3, #32]
2465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3646              		.loc 1 2466 15 is_stmt 1 discriminator 2
 3647 0024 FB68     		ldr	r3, [r7, #12]
 3648 0026 0222     		movs	r2, #2
 3649 0028 83F82120 		strb	r2, [r3, #33]
2467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3650              		.loc 1 2469 3 discriminator 2
 3651 002c FB68     		ldr	r3, [r7, #12]
 3652 002e 1B68     		ldr	r3, [r3]
 3653 0030 CA22     		movs	r2, #202
 3654 0032 5A62     		str	r2, [r3, #36]
 3655 0034 FB68     		ldr	r3, [r7, #12]
 3656 0036 1B68     		ldr	r3, [r3]
 3657 0038 5322     		movs	r2, #83
 3658 003a 5A62     		str	r2, [r3, #36]
2470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* check if a calibration operation is pending */
2472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ICSR_RECALPF)
2473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->ICSR & RTC_ICSR_RECALPF) != 0U)
2474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ICSR_RECALPF */
2475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_RECALPF)
2476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((hrtc->Instance->ISR  & RTC_ISR_RECALPF)  != 0U)
 3659              		.loc 1 2476 14 discriminator 2
 3660 003c FB68     		ldr	r3, [r7, #12]
 3661 003e 1B68     		ldr	r3, [r3]
 3662              		.loc 1 2476 24 discriminator 2
 3663 0040 DB68     		ldr	r3, [r3, #12]
 3664              		.loc 1 2476 31 discriminator 2
 3665 0042 03F48033 		and	r3, r3, #65536
 3666              		.loc 1 2476 8 discriminator 2
ARM GAS  /tmp/ccUKMyjJ.s 			page 108


 3667 0046 002B     		cmp	r3, #0
 3668 0048 20D0     		beq	.L159
2477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_RECALPF */
2478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tickstart = HAL_GetTick();
 3669              		.loc 1 2479 19
 3670 004a FFF7FEFF 		bl	HAL_GetTick
 3671 004e 7861     		str	r0, [r7, #20]
2480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Wait for pending calibration operation to finish */
2482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ICSR_RECALPF)
2483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       while ((hrtc->Instance->ICSR & RTC_ICSR_RECALPF) != 0U)
2484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ICSR_RECALPF */
2485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_RECALPF)
2486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         while ((hrtc->Instance->ISR  & RTC_ISR_RECALPF)  != 0U)
 3672              		.loc 1 2486 15
 3673 0050 15E0     		b	.L160
 3674              	.L161:
2487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_RECALPF */
2488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         {
2489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 3675              		.loc 1 2489 16
 3676 0052 FFF7FEFF 		bl	HAL_GetTick
 3677 0056 0246     		mov	r2, r0
 3678              		.loc 1 2489 30
 3679 0058 7B69     		ldr	r3, [r7, #20]
 3680 005a D31A     		subs	r3, r2, r3
 3681              		.loc 1 2489 14
 3682 005c B3F57A7F 		cmp	r3, #1000
 3683 0060 0DD9     		bls	.L160
2490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           {
2491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             /* Enable the write protection for RTC registers */
2492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3684              		.loc 1 2492 13
 3685 0062 FB68     		ldr	r3, [r7, #12]
 3686 0064 1B68     		ldr	r3, [r3]
 3687 0066 FF22     		movs	r2, #255
 3688 0068 5A62     		str	r2, [r3, #36]
2493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             /* Change RTC state */
2495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             hrtc->State = HAL_RTC_STATE_TIMEOUT;
 3689              		.loc 1 2495 25
 3690 006a FB68     		ldr	r3, [r7, #12]
 3691 006c 0322     		movs	r2, #3
 3692 006e 83F82120 		strb	r2, [r3, #33]
2496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             /* Process Unlocked */
2498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             __HAL_UNLOCK(hrtc);
 3693              		.loc 1 2498 13
 3694 0072 FB68     		ldr	r3, [r7, #12]
 3695 0074 0022     		movs	r2, #0
 3696 0076 83F82020 		strb	r2, [r3, #32]
2499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             return HAL_TIMEOUT;
 3697              		.loc 1 2500 20
 3698 007a 0323     		movs	r3, #3
 3699 007c 21E0     		b	.L158
ARM GAS  /tmp/ccUKMyjJ.s 			page 109


 3700              	.L160:
2486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_RECALPF */
 3701              		.loc 1 2486 21
 3702 007e FB68     		ldr	r3, [r7, #12]
 3703 0080 1B68     		ldr	r3, [r3]
2486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_RECALPF */
 3704              		.loc 1 2486 31
 3705 0082 DB68     		ldr	r3, [r3, #12]
2486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_RECALPF */
 3706              		.loc 1 2486 38
 3707 0084 03F48033 		and	r3, r3, #65536
2486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_RECALPF */
 3708              		.loc 1 2486 15
 3709 0088 002B     		cmp	r3, #0
 3710 008a E2D1     		bne	.L161
 3711              	.L159:
2501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           }
2502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         }
2503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Smooth calibration settings */
2506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   MODIFY_REG(hrtc->Instance->CALR, (RTC_CALR_CALP | RTC_CALR_CALW8 | RTC_CALR_CALW16 | RTC_CALR_CAL
 3712              		.loc 1 2506 3
 3713 008c FB68     		ldr	r3, [r7, #12]
 3714 008e 1B68     		ldr	r3, [r3]
 3715 0090 DA6B     		ldr	r2, [r3, #60]
 3716 0092 0E4B     		ldr	r3, .L162
 3717 0094 1340     		ands	r3, r3, r2
 3718 0096 B968     		ldr	r1, [r7, #8]
 3719 0098 7A68     		ldr	r2, [r7, #4]
 3720 009a 1143     		orrs	r1, r1, r2
 3721 009c 3A68     		ldr	r2, [r7]
 3722 009e 1143     		orrs	r1, r1, r2
 3723 00a0 FA68     		ldr	r2, [r7, #12]
 3724 00a2 1268     		ldr	r2, [r2]
 3725 00a4 0B43     		orrs	r3, r3, r1
 3726 00a6 D363     		str	r3, [r2, #60]
2507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3727              		.loc 1 2509 3
 3728 00a8 FB68     		ldr	r3, [r7, #12]
 3729 00aa 1B68     		ldr	r3, [r3]
 3730 00ac FF22     		movs	r2, #255
 3731 00ae 5A62     		str	r2, [r3, #36]
2510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3732              		.loc 1 2512 15
 3733 00b0 FB68     		ldr	r3, [r7, #12]
 3734 00b2 0122     		movs	r2, #1
 3735 00b4 83F82120 		strb	r2, [r3, #33]
2513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3736              		.loc 1 2515 3
 3737 00b8 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccUKMyjJ.s 			page 110


 3738 00ba 0022     		movs	r2, #0
 3739 00bc 83F82020 		strb	r2, [r3, #32]
2516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 3740              		.loc 1 2517 10
 3741 00c0 0023     		movs	r3, #0
 3742              	.L158:
2518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3743              		.loc 1 2518 1
 3744 00c2 1846     		mov	r0, r3
 3745 00c4 1837     		adds	r7, r7, #24
 3746              	.LCFI196:
 3747              		.cfi_def_cfa_offset 8
 3748 00c6 BD46     		mov	sp, r7
 3749              	.LCFI197:
 3750              		.cfi_def_cfa_register 13
 3751              		@ sp needed
 3752 00c8 80BD     		pop	{r7, pc}
 3753              	.L163:
 3754 00ca 00BF     		.align	2
 3755              	.L162:
 3756 00cc 001EFFFF 		.word	-57856
 3757              		.cfi_endproc
 3758              	.LFE365:
 3760              		.section	.text.HAL_RTCEx_SetSynchroShift,"ax",%progbits
 3761              		.align	1
 3762              		.global	HAL_RTCEx_SetSynchroShift
 3763              		.syntax unified
 3764              		.thumb
 3765              		.thumb_func
 3766              		.fpu fpv5-d16
 3768              	HAL_RTCEx_SetSynchroShift:
 3769              	.LFB366:
2519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Configure the Synchronization Shift Control Settings.
2522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   When REFCKON is set, firmware must not write to Shift control register.
2523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  ShiftAdd1S Select to add or not 1 second to the time calendar.
2525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
2526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_SET: Add one second to the clock calendar.
2527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_RESET: No effect.
2528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  ShiftSubFS Select the number of Second Fractions to substitute.
2529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x7FFF.
2530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSynchroShift(RTC_HandleTypeDef * hrtc, uint32_t ShiftAdd1S, uint32_t
2533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3770              		.loc 1 2533 1
 3771              		.cfi_startproc
 3772              		@ args = 0, pretend = 0, frame = 24
 3773              		@ frame_needed = 1, uses_anonymous_args = 0
 3774 0000 80B5     		push	{r7, lr}
 3775              	.LCFI198:
 3776              		.cfi_def_cfa_offset 8
 3777              		.cfi_offset 7, -8
 3778              		.cfi_offset 14, -4
ARM GAS  /tmp/ccUKMyjJ.s 			page 111


 3779 0002 86B0     		sub	sp, sp, #24
 3780              	.LCFI199:
 3781              		.cfi_def_cfa_offset 32
 3782 0004 00AF     		add	r7, sp, #0
 3783              	.LCFI200:
 3784              		.cfi_def_cfa_register 7
 3785 0006 F860     		str	r0, [r7, #12]
 3786 0008 B960     		str	r1, [r7, #8]
 3787 000a 7A60     		str	r2, [r7, #4]
2534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
2535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_ADD1S(ShiftAdd1S));
2538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_SUBFS(ShiftSubFS));
2539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3788              		.loc 1 2541 3
 3789 000c FB68     		ldr	r3, [r7, #12]
 3790 000e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3791 0012 012B     		cmp	r3, #1
 3792 0014 01D1     		bne	.L165
 3793              		.loc 1 2541 3 is_stmt 0 discriminator 1
 3794 0016 0223     		movs	r3, #2
 3795 0018 73E0     		b	.L166
 3796              	.L165:
 3797              		.loc 1 2541 3 discriminator 2
 3798 001a FB68     		ldr	r3, [r7, #12]
 3799 001c 0122     		movs	r2, #1
 3800 001e 83F82020 		strb	r2, [r3, #32]
2542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3801              		.loc 1 2543 15 is_stmt 1 discriminator 2
 3802 0022 FB68     		ldr	r3, [r7, #12]
 3803 0024 0222     		movs	r2, #2
 3804 0026 83F82120 		strb	r2, [r3, #33]
2544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3805              		.loc 1 2546 3 discriminator 2
 3806 002a FB68     		ldr	r3, [r7, #12]
 3807 002c 1B68     		ldr	r3, [r3]
 3808 002e CA22     		movs	r2, #202
 3809 0030 5A62     		str	r2, [r3, #36]
 3810 0032 FB68     		ldr	r3, [r7, #12]
 3811 0034 1B68     		ldr	r3, [r3]
 3812 0036 5322     		movs	r2, #83
 3813 0038 5A62     		str	r2, [r3, #36]
2547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 3814              		.loc 1 2548 15 discriminator 2
 3815 003a FFF7FEFF 		bl	HAL_GetTick
 3816 003e 7861     		str	r0, [r7, #20]
2549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Wait until the shift is completed */
2551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ICSR_SHPF)
2552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while ((hrtc->Instance->ICSR & RTC_ICSR_SHPF) != 0U)
ARM GAS  /tmp/ccUKMyjJ.s 			page 112


2553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ICSR_SHPF */
2554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_SHPF)
2555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while ((hrtc->Instance->ISR  & RTC_ISR_SHPF)  != 0U)
 3817              		.loc 1 2555 11 discriminator 2
 3818 0040 15E0     		b	.L167
 3819              	.L168:
2556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_SHPF */
2557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 3820              		.loc 1 2558 12
 3821 0042 FFF7FEFF 		bl	HAL_GetTick
 3822 0046 0246     		mov	r2, r0
 3823              		.loc 1 2558 26
 3824 0048 7B69     		ldr	r3, [r7, #20]
 3825 004a D31A     		subs	r3, r2, r3
 3826              		.loc 1 2558 10
 3827 004c B3F57A7F 		cmp	r3, #1000
 3828 0050 0DD9     		bls	.L167
2559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
2560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
2561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3829              		.loc 1 2561 9
 3830 0052 FB68     		ldr	r3, [r7, #12]
 3831 0054 1B68     		ldr	r3, [r3]
 3832 0056 FF22     		movs	r2, #255
 3833 0058 5A62     		str	r2, [r3, #36]
2562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 3834              		.loc 1 2563 21
 3835 005a FB68     		ldr	r3, [r7, #12]
 3836 005c 0322     		movs	r2, #3
 3837 005e 83F82120 		strb	r2, [r3, #33]
2564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Process Unlocked */
2566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 3838              		.loc 1 2566 9
 3839 0062 FB68     		ldr	r3, [r7, #12]
 3840 0064 0022     		movs	r2, #0
 3841 0066 83F82020 		strb	r2, [r3, #32]
2567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 3842              		.loc 1 2568 16
 3843 006a 0323     		movs	r3, #3
 3844 006c 49E0     		b	.L166
 3845              	.L167:
2555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_SHPF */
 3846              		.loc 1 2555 17
 3847 006e FB68     		ldr	r3, [r7, #12]
 3848 0070 1B68     		ldr	r3, [r3]
2555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_SHPF */
 3849              		.loc 1 2555 27
 3850 0072 DB68     		ldr	r3, [r3, #12]
2555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_SHPF */
 3851              		.loc 1 2555 34
 3852 0074 03F00803 		and	r3, r3, #8
2555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_SHPF */
 3853              		.loc 1 2555 11
ARM GAS  /tmp/ccUKMyjJ.s 			page 113


 3854 0078 002B     		cmp	r3, #0
 3855 007a E2D1     		bne	.L168
2569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
2570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check if the reference clock detection is disabled */
2573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->CR & RTC_CR_REFCKON) == 0U)
 3856              		.loc 1 2573 12
 3857 007c FB68     		ldr	r3, [r7, #12]
 3858 007e 1B68     		ldr	r3, [r3]
 3859              		.loc 1 2573 22
 3860 0080 9B68     		ldr	r3, [r3, #8]
 3861              		.loc 1 2573 27
 3862 0082 03F01003 		and	r3, r3, #16
 3863              		.loc 1 2573 6
 3864 0086 002B     		cmp	r3, #0
 3865 0088 20D1     		bne	.L169
2574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Configure the Shift settings */
2576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->SHIFTR = (uint32_t)(uint32_t)(ShiftSubFS) | (uint32_t)(ShiftAdd1S);
 3866              		.loc 1 2576 9
 3867 008a FB68     		ldr	r3, [r7, #12]
 3868 008c 1B68     		ldr	r3, [r3]
 3869              		.loc 1 2576 63
 3870 008e 7968     		ldr	r1, [r7, #4]
 3871 0090 BA68     		ldr	r2, [r7, #8]
 3872 0092 0A43     		orrs	r2, r2, r1
 3873              		.loc 1 2576 28
 3874 0094 DA62     		str	r2, [r3, #44]
2577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
2579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((hrtc->Instance->CR & RTC_CR_BYPSHAD) == 0U)
 3875              		.loc 1 2579 14
 3876 0096 FB68     		ldr	r3, [r7, #12]
 3877 0098 1B68     		ldr	r3, [r3]
 3878              		.loc 1 2579 24
 3879 009a 9B68     		ldr	r3, [r3, #8]
 3880              		.loc 1 2579 29
 3881 009c 03F02003 		and	r3, r3, #32
 3882              		.loc 1 2579 8
 3883 00a0 002B     		cmp	r3, #0
 3884 00a2 21D1     		bne	.L170
2580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 3885              		.loc 1 2581 11
 3886 00a4 F868     		ldr	r0, [r7, #12]
 3887 00a6 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 3888 00aa 0346     		mov	r3, r0
 3889              		.loc 1 2581 10
 3890 00ac 002B     		cmp	r3, #0
 3891 00ae 1BD0     		beq	.L170
2582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
2583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
2584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3892              		.loc 1 2584 9
 3893 00b0 FB68     		ldr	r3, [r7, #12]
 3894 00b2 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccUKMyjJ.s 			page 114


 3895 00b4 FF22     		movs	r2, #255
 3896 00b6 5A62     		str	r2, [r3, #36]
2585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 3897              		.loc 1 2586 21
 3898 00b8 FB68     		ldr	r3, [r7, #12]
 3899 00ba 0422     		movs	r2, #4
 3900 00bc 83F82120 		strb	r2, [r3, #33]
2587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Process Unlocked */
2589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 3901              		.loc 1 2589 9
 3902 00c0 FB68     		ldr	r3, [r7, #12]
 3903 00c2 0022     		movs	r2, #0
 3904 00c4 83F82020 		strb	r2, [r3, #32]
2590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_ERROR;
 3905              		.loc 1 2591 16
 3906 00c8 0123     		movs	r3, #1
 3907 00ca 1AE0     		b	.L166
 3908              	.L169:
2592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
2593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
2596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
2598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3909              		.loc 1 2598 5
 3910 00cc FB68     		ldr	r3, [r7, #12]
 3911 00ce 1B68     		ldr	r3, [r3]
 3912 00d0 FF22     		movs	r2, #255
 3913 00d2 5A62     		str	r2, [r3, #36]
2599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Change RTC state */
2601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 3914              		.loc 1 2601 17
 3915 00d4 FB68     		ldr	r3, [r7, #12]
 3916 00d6 0422     		movs	r2, #4
 3917 00d8 83F82120 		strb	r2, [r3, #33]
2602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Process Unlocked */
2604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
 3918              		.loc 1 2604 5
 3919 00dc FB68     		ldr	r3, [r7, #12]
 3920 00de 0022     		movs	r2, #0
 3921 00e0 83F82020 		strb	r2, [r3, #32]
2605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     return HAL_ERROR;
 3922              		.loc 1 2606 12
 3923 00e4 0123     		movs	r3, #1
 3924 00e6 0CE0     		b	.L166
 3925              	.L170:
2607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
ARM GAS  /tmp/ccUKMyjJ.s 			page 115


 3926              		.loc 1 2610 3
 3927 00e8 FB68     		ldr	r3, [r7, #12]
 3928 00ea 1B68     		ldr	r3, [r3]
 3929 00ec FF22     		movs	r2, #255
 3930 00ee 5A62     		str	r2, [r3, #36]
2611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3931              		.loc 1 2613 15
 3932 00f0 FB68     		ldr	r3, [r7, #12]
 3933 00f2 0122     		movs	r2, #1
 3934 00f4 83F82120 		strb	r2, [r3, #33]
2614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3935              		.loc 1 2616 3
 3936 00f8 FB68     		ldr	r3, [r7, #12]
 3937 00fa 0022     		movs	r2, #0
 3938 00fc 83F82020 		strb	r2, [r3, #32]
2617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 3939              		.loc 1 2618 10
 3940 0100 0023     		movs	r3, #0
 3941              	.L166:
2619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3942              		.loc 1 2619 1
 3943 0102 1846     		mov	r0, r3
 3944 0104 1837     		adds	r7, r7, #24
 3945              	.LCFI201:
 3946              		.cfi_def_cfa_offset 8
 3947 0106 BD46     		mov	sp, r7
 3948              	.LCFI202:
 3949              		.cfi_def_cfa_register 13
 3950              		@ sp needed
 3951 0108 80BD     		pop	{r7, pc}
 3952              		.cfi_endproc
 3953              	.LFE366:
 3955              		.section	.text.HAL_RTCEx_SetCalibrationOutPut,"ax",%progbits
 3956              		.align	1
 3957              		.global	HAL_RTCEx_SetCalibrationOutPut
 3958              		.syntax unified
 3959              		.thumb
 3960              		.thumb_func
 3961              		.fpu fpv5-d16
 3963              	HAL_RTCEx_SetCalibrationOutPut:
 3964              	.LFB367:
2620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
2623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  CalibOutput Select the Calibration output Selection.
2625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
2626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_512HZ: A signal has a regular waveform at 512Hz.
2627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_1HZ: A signal has a regular waveform at 1Hz.
2628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetCalibrationOutPut(RTC_HandleTypeDef * hrtc, uint32_t CalibOutput)
ARM GAS  /tmp/ccUKMyjJ.s 			page 116


2631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3965              		.loc 1 2631 1
 3966              		.cfi_startproc
 3967              		@ args = 0, pretend = 0, frame = 8
 3968              		@ frame_needed = 1, uses_anonymous_args = 0
 3969              		@ link register save eliminated.
 3970 0000 80B4     		push	{r7}
 3971              	.LCFI203:
 3972              		.cfi_def_cfa_offset 4
 3973              		.cfi_offset 7, -4
 3974 0002 83B0     		sub	sp, sp, #12
 3975              	.LCFI204:
 3976              		.cfi_def_cfa_offset 16
 3977 0004 00AF     		add	r7, sp, #0
 3978              	.LCFI205:
 3979              		.cfi_def_cfa_register 7
 3980 0006 7860     		str	r0, [r7, #4]
 3981 0008 3960     		str	r1, [r7]
2632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_CALIB_OUTPUT(CalibOutput));
2634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3982              		.loc 1 2636 3
 3983 000a 7B68     		ldr	r3, [r7, #4]
 3984 000c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3985 0010 012B     		cmp	r3, #1
 3986 0012 01D1     		bne	.L172
 3987              		.loc 1 2636 3 is_stmt 0 discriminator 1
 3988 0014 0223     		movs	r3, #2
 3989 0016 34E0     		b	.L173
 3990              	.L172:
 3991              		.loc 1 2636 3 discriminator 2
 3992 0018 7B68     		ldr	r3, [r7, #4]
 3993 001a 0122     		movs	r2, #1
 3994 001c 83F82020 		strb	r2, [r3, #32]
2637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3995              		.loc 1 2638 15 is_stmt 1 discriminator 2
 3996 0020 7B68     		ldr	r3, [r7, #4]
 3997 0022 0222     		movs	r2, #2
 3998 0024 83F82120 		strb	r2, [r3, #33]
2639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3999              		.loc 1 2641 3 discriminator 2
 4000 0028 7B68     		ldr	r3, [r7, #4]
 4001 002a 1B68     		ldr	r3, [r3]
 4002 002c CA22     		movs	r2, #202
 4003 002e 5A62     		str	r2, [r3, #36]
 4004 0030 7B68     		ldr	r3, [r7, #4]
 4005 0032 1B68     		ldr	r3, [r3]
 4006 0034 5322     		movs	r2, #83
 4007 0036 5A62     		str	r2, [r3, #36]
2642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear flags before config */
2644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_COSEL;
ARM GAS  /tmp/ccUKMyjJ.s 			page 117


 4008              		.loc 1 2644 7 discriminator 2
 4009 0038 7B68     		ldr	r3, [r7, #4]
 4010 003a 1B68     		ldr	r3, [r3]
 4011              		.loc 1 2644 22 discriminator 2
 4012 003c 9A68     		ldr	r2, [r3, #8]
 4013              		.loc 1 2644 7 discriminator 2
 4014 003e 7B68     		ldr	r3, [r7, #4]
 4015 0040 1B68     		ldr	r3, [r3]
 4016              		.loc 1 2644 22 discriminator 2
 4017 0042 22F40022 		bic	r2, r2, #524288
 4018 0046 9A60     		str	r2, [r3, #8]
2645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the RTC_CR register */
2647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)CalibOutput;
 4019              		.loc 1 2647 7 discriminator 2
 4020 0048 7B68     		ldr	r3, [r7, #4]
 4021 004a 1B68     		ldr	r3, [r3]
 4022              		.loc 1 2647 22 discriminator 2
 4023 004c 9968     		ldr	r1, [r3, #8]
 4024              		.loc 1 2647 7 discriminator 2
 4025 004e 7B68     		ldr	r3, [r7, #4]
 4026 0050 1B68     		ldr	r3, [r3]
 4027              		.loc 1 2647 22 discriminator 2
 4028 0052 3A68     		ldr	r2, [r7]
 4029 0054 0A43     		orrs	r2, r2, r1
 4030 0056 9A60     		str	r2, [r3, #8]
2648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_ENABLE(hrtc);
 4031              		.loc 1 2649 3 discriminator 2
 4032 0058 7B68     		ldr	r3, [r7, #4]
 4033 005a 1B68     		ldr	r3, [r3]
 4034 005c 9A68     		ldr	r2, [r3, #8]
 4035 005e 7B68     		ldr	r3, [r7, #4]
 4036 0060 1B68     		ldr	r3, [r3]
 4037 0062 42F40002 		orr	r2, r2, #8388608
 4038 0066 9A60     		str	r2, [r3, #8]
2650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 4039              		.loc 1 2652 3 discriminator 2
 4040 0068 7B68     		ldr	r3, [r7, #4]
 4041 006a 1B68     		ldr	r3, [r3]
 4042 006c FF22     		movs	r2, #255
 4043 006e 5A62     		str	r2, [r3, #36]
2653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 4044              		.loc 1 2655 15 discriminator 2
 4045 0070 7B68     		ldr	r3, [r7, #4]
 4046 0072 0122     		movs	r2, #1
 4047 0074 83F82120 		strb	r2, [r3, #33]
2656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 4048              		.loc 1 2658 3 discriminator 2
 4049 0078 7B68     		ldr	r3, [r7, #4]
 4050 007a 0022     		movs	r2, #0
ARM GAS  /tmp/ccUKMyjJ.s 			page 118


 4051 007c 83F82020 		strb	r2, [r3, #32]
2659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 4052              		.loc 1 2660 10 discriminator 2
 4053 0080 0023     		movs	r3, #0
 4054              	.L173:
2661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 4055              		.loc 1 2661 1
 4056 0082 1846     		mov	r0, r3
 4057 0084 0C37     		adds	r7, r7, #12
 4058              	.LCFI206:
 4059              		.cfi_def_cfa_offset 4
 4060 0086 BD46     		mov	sp, r7
 4061              	.LCFI207:
 4062              		.cfi_def_cfa_register 13
 4063              		@ sp needed
 4064 0088 5DF8047B 		ldr	r7, [sp], #4
 4065              	.LCFI208:
 4066              		.cfi_restore 7
 4067              		.cfi_def_cfa_offset 0
 4068 008c 7047     		bx	lr
 4069              		.cfi_endproc
 4070              	.LFE367:
 4072              		.section	.text.HAL_RTCEx_DeactivateCalibrationOutPut,"ax",%progbits
 4073              		.align	1
 4074              		.global	HAL_RTCEx_DeactivateCalibrationOutPut
 4075              		.syntax unified
 4076              		.thumb
 4077              		.thumb_func
 4078              		.fpu fpv5-d16
 4080              	HAL_RTCEx_DeactivateCalibrationOutPut:
 4081              	.LFB368:
2662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
2665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateCalibrationOutPut(RTC_HandleTypeDef * hrtc)
2669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 4082              		.loc 1 2669 1
 4083              		.cfi_startproc
 4084              		@ args = 0, pretend = 0, frame = 8
 4085              		@ frame_needed = 1, uses_anonymous_args = 0
 4086              		@ link register save eliminated.
 4087 0000 80B4     		push	{r7}
 4088              	.LCFI209:
 4089              		.cfi_def_cfa_offset 4
 4090              		.cfi_offset 7, -4
 4091 0002 83B0     		sub	sp, sp, #12
 4092              	.LCFI210:
 4093              		.cfi_def_cfa_offset 16
 4094 0004 00AF     		add	r7, sp, #0
 4095              	.LCFI211:
 4096              		.cfi_def_cfa_register 7
 4097 0006 7860     		str	r0, [r7, #4]
2670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
ARM GAS  /tmp/ccUKMyjJ.s 			page 119


2671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 4098              		.loc 1 2671 3
 4099 0008 7B68     		ldr	r3, [r7, #4]
 4100 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 4101 000e 012B     		cmp	r3, #1
 4102 0010 01D1     		bne	.L175
 4103              		.loc 1 2671 3 is_stmt 0 discriminator 1
 4104 0012 0223     		movs	r3, #2
 4105 0014 24E0     		b	.L176
 4106              	.L175:
 4107              		.loc 1 2671 3 discriminator 2
 4108 0016 7B68     		ldr	r3, [r7, #4]
 4109 0018 0122     		movs	r2, #1
 4110 001a 83F82020 		strb	r2, [r3, #32]
2672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 4111              		.loc 1 2673 15 is_stmt 1 discriminator 2
 4112 001e 7B68     		ldr	r3, [r7, #4]
 4113 0020 0222     		movs	r2, #2
 4114 0022 83F82120 		strb	r2, [r3, #33]
2674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 4115              		.loc 1 2676 3 discriminator 2
 4116 0026 7B68     		ldr	r3, [r7, #4]
 4117 0028 1B68     		ldr	r3, [r3]
 4118 002a CA22     		movs	r2, #202
 4119 002c 5A62     		str	r2, [r3, #36]
 4120 002e 7B68     		ldr	r3, [r7, #4]
 4121 0030 1B68     		ldr	r3, [r3]
 4122 0032 5322     		movs	r2, #83
 4123 0034 5A62     		str	r2, [r3, #36]
2677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_DISABLE(hrtc);
 4124              		.loc 1 2678 3 discriminator 2
 4125 0036 7B68     		ldr	r3, [r7, #4]
 4126 0038 1B68     		ldr	r3, [r3]
 4127 003a 9A68     		ldr	r2, [r3, #8]
 4128 003c 7B68     		ldr	r3, [r7, #4]
 4129 003e 1B68     		ldr	r3, [r3]
 4130 0040 22F40002 		bic	r2, r2, #8388608
 4131 0044 9A60     		str	r2, [r3, #8]
2679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 4132              		.loc 1 2681 3 discriminator 2
 4133 0046 7B68     		ldr	r3, [r7, #4]
 4134 0048 1B68     		ldr	r3, [r3]
 4135 004a FF22     		movs	r2, #255
 4136 004c 5A62     		str	r2, [r3, #36]
2682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 4137              		.loc 1 2684 15 discriminator 2
 4138 004e 7B68     		ldr	r3, [r7, #4]
 4139 0050 0122     		movs	r2, #1
 4140 0052 83F82120 		strb	r2, [r3, #33]
ARM GAS  /tmp/ccUKMyjJ.s 			page 120


2685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 4141              		.loc 1 2687 3 discriminator 2
 4142 0056 7B68     		ldr	r3, [r7, #4]
 4143 0058 0022     		movs	r2, #0
 4144 005a 83F82020 		strb	r2, [r3, #32]
2688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 4145              		.loc 1 2689 10 discriminator 2
 4146 005e 0023     		movs	r3, #0
 4147              	.L176:
2690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 4148              		.loc 1 2690 1
 4149 0060 1846     		mov	r0, r3
 4150 0062 0C37     		adds	r7, r7, #12
 4151              	.LCFI212:
 4152              		.cfi_def_cfa_offset 4
 4153 0064 BD46     		mov	sp, r7
 4154              	.LCFI213:
 4155              		.cfi_def_cfa_register 13
 4156              		@ sp needed
 4157 0066 5DF8047B 		ldr	r7, [sp], #4
 4158              	.LCFI214:
 4159              		.cfi_restore 7
 4160              		.cfi_def_cfa_offset 0
 4161 006a 7047     		bx	lr
 4162              		.cfi_endproc
 4163              	.LFE368:
 4165              		.section	.text.HAL_RTCEx_SetRefClock,"ax",%progbits
 4166              		.align	1
 4167              		.global	HAL_RTCEx_SetRefClock
 4168              		.syntax unified
 4169              		.thumb
 4170              		.thumb_func
 4171              		.fpu fpv5-d16
 4173              	HAL_RTCEx_SetRefClock:
 4174              	.LFB369:
2691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Enable the RTC reference clock detection.
2694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetRefClock(RTC_HandleTypeDef * hrtc)
2698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 4175              		.loc 1 2698 1
 4176              		.cfi_startproc
 4177              		@ args = 0, pretend = 0, frame = 16
 4178              		@ frame_needed = 1, uses_anonymous_args = 0
 4179 0000 80B5     		push	{r7, lr}
 4180              	.LCFI215:
 4181              		.cfi_def_cfa_offset 8
 4182              		.cfi_offset 7, -8
 4183              		.cfi_offset 14, -4
 4184 0002 84B0     		sub	sp, sp, #16
 4185              	.LCFI216:
ARM GAS  /tmp/ccUKMyjJ.s 			page 121


 4186              		.cfi_def_cfa_offset 24
 4187 0004 00AF     		add	r7, sp, #0
 4188              	.LCFI217:
 4189              		.cfi_def_cfa_register 7
 4190 0006 7860     		str	r0, [r7, #4]
2699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   HAL_StatusTypeDef status;
2700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 4191              		.loc 1 2701 3
 4192 0008 7B68     		ldr	r3, [r7, #4]
 4193 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 4194 000e 012B     		cmp	r3, #1
 4195 0010 01D1     		bne	.L178
 4196              		.loc 1 2701 3 is_stmt 0 discriminator 1
 4197 0012 0223     		movs	r3, #2
 4198 0014 34E0     		b	.L179
 4199              	.L178:
 4200              		.loc 1 2701 3 discriminator 2
 4201 0016 7B68     		ldr	r3, [r7, #4]
 4202 0018 0122     		movs	r2, #1
 4203 001a 83F82020 		strb	r2, [r3, #32]
2702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 4204              		.loc 1 2703 15 is_stmt 1 discriminator 2
 4205 001e 7B68     		ldr	r3, [r7, #4]
 4206 0020 0222     		movs	r2, #2
 4207 0022 83F82120 		strb	r2, [r3, #33]
2704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 4208              		.loc 1 2706 3 discriminator 2
 4209 0026 7B68     		ldr	r3, [r7, #4]
 4210 0028 1B68     		ldr	r3, [r3]
 4211 002a CA22     		movs	r2, #202
 4212 002c 5A62     		str	r2, [r3, #36]
 4213 002e 7B68     		ldr	r3, [r7, #4]
 4214 0030 1B68     		ldr	r3, [r3]
 4215 0032 5322     		movs	r2, #83
 4216 0034 5A62     		str	r2, [r3, #36]
2707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enter Initialization mode */
2709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   status = RTC_EnterInitMode(hrtc);
 4217              		.loc 1 2709 12 discriminator 2
 4218 0036 7868     		ldr	r0, [r7, #4]
 4219 0038 FFF7FEFF 		bl	RTC_EnterInitMode
 4220 003c 0346     		mov	r3, r0
 4221 003e FB73     		strb	r3, [r7, #15]
2710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (status == HAL_OK)
 4222              		.loc 1 2710 6 discriminator 2
 4223 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4224 0042 002B     		cmp	r3, #0
 4225 0044 0CD1     		bne	.L180
2711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_ENABLE(hrtc);
 4226              		.loc 1 2712 5
 4227 0046 7B68     		ldr	r3, [r7, #4]
 4228 0048 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccUKMyjJ.s 			page 122


 4229 004a 9A68     		ldr	r2, [r3, #8]
 4230 004c 7B68     		ldr	r3, [r7, #4]
 4231 004e 1B68     		ldr	r3, [r3]
 4232 0050 42F01002 		orr	r2, r2, #16
 4233 0054 9A60     		str	r2, [r3, #8]
2713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
2715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     status = RTC_ExitInitMode(hrtc);
 4234              		.loc 1 2715 14
 4235 0056 7868     		ldr	r0, [r7, #4]
 4236 0058 FFF7FEFF 		bl	RTC_ExitInitMode
 4237 005c 0346     		mov	r3, r0
 4238 005e FB73     		strb	r3, [r7, #15]
 4239              	.L180:
2716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 4240              		.loc 1 2719 3
 4241 0060 7B68     		ldr	r3, [r7, #4]
 4242 0062 1B68     		ldr	r3, [r3]
 4243 0064 FF22     		movs	r2, #255
 4244 0066 5A62     		str	r2, [r3, #36]
2720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (status == HAL_OK)
 4245              		.loc 1 2720 6
 4246 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4247 006a 002B     		cmp	r3, #0
 4248 006c 03D1     		bne	.L181
2721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Change RTC state */
2723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_READY;
 4249              		.loc 1 2723 17
 4250 006e 7B68     		ldr	r3, [r7, #4]
 4251 0070 0122     		movs	r2, #1
 4252 0072 83F82120 		strb	r2, [r3, #33]
 4253              	.L181:
2724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 4254              		.loc 1 2726 3
 4255 0076 7B68     		ldr	r3, [r7, #4]
 4256 0078 0022     		movs	r2, #0
 4257 007a 83F82020 		strb	r2, [r3, #32]
2727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 4258              		.loc 1 2728 10
 4259 007e 0023     		movs	r3, #0
 4260              	.L179:
2729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 4261              		.loc 1 2729 1
 4262 0080 1846     		mov	r0, r3
 4263 0082 1037     		adds	r7, r7, #16
 4264              	.LCFI218:
 4265              		.cfi_def_cfa_offset 8
 4266 0084 BD46     		mov	sp, r7
 4267              	.LCFI219:
 4268              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccUKMyjJ.s 			page 123


 4269              		@ sp needed
 4270 0086 80BD     		pop	{r7, pc}
 4271              		.cfi_endproc
 4272              	.LFE369:
 4274              		.section	.text.HAL_RTCEx_DeactivateRefClock,"ax",%progbits
 4275              		.align	1
 4276              		.global	HAL_RTCEx_DeactivateRefClock
 4277              		.syntax unified
 4278              		.thumb
 4279              		.thumb_func
 4280              		.fpu fpv5-d16
 4282              	HAL_RTCEx_DeactivateRefClock:
 4283              	.LFB370:
2730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Disable the RTC reference clock detection.
2733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateRefClock(RTC_HandleTypeDef * hrtc)
2737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 4284              		.loc 1 2737 1
 4285              		.cfi_startproc
 4286              		@ args = 0, pretend = 0, frame = 16
 4287              		@ frame_needed = 1, uses_anonymous_args = 0
 4288 0000 80B5     		push	{r7, lr}
 4289              	.LCFI220:
 4290              		.cfi_def_cfa_offset 8
 4291              		.cfi_offset 7, -8
 4292              		.cfi_offset 14, -4
 4293 0002 84B0     		sub	sp, sp, #16
 4294              	.LCFI221:
 4295              		.cfi_def_cfa_offset 24
 4296 0004 00AF     		add	r7, sp, #0
 4297              	.LCFI222:
 4298              		.cfi_def_cfa_register 7
 4299 0006 7860     		str	r0, [r7, #4]
2738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   HAL_StatusTypeDef status;
2739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 4300              		.loc 1 2740 3
 4301 0008 7B68     		ldr	r3, [r7, #4]
 4302 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 4303 000e 012B     		cmp	r3, #1
 4304 0010 01D1     		bne	.L183
 4305              		.loc 1 2740 3 is_stmt 0 discriminator 1
 4306 0012 0223     		movs	r3, #2
 4307 0014 34E0     		b	.L184
 4308              	.L183:
 4309              		.loc 1 2740 3 discriminator 2
 4310 0016 7B68     		ldr	r3, [r7, #4]
 4311 0018 0122     		movs	r2, #1
 4312 001a 83F82020 		strb	r2, [r3, #32]
2741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 4313              		.loc 1 2742 15 is_stmt 1 discriminator 2
 4314 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUKMyjJ.s 			page 124


 4315 0020 0222     		movs	r2, #2
 4316 0022 83F82120 		strb	r2, [r3, #33]
2743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 4317              		.loc 1 2745 3 discriminator 2
 4318 0026 7B68     		ldr	r3, [r7, #4]
 4319 0028 1B68     		ldr	r3, [r3]
 4320 002a CA22     		movs	r2, #202
 4321 002c 5A62     		str	r2, [r3, #36]
 4322 002e 7B68     		ldr	r3, [r7, #4]
 4323 0030 1B68     		ldr	r3, [r3]
 4324 0032 5322     		movs	r2, #83
 4325 0034 5A62     		str	r2, [r3, #36]
2746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enter Initialization mode */
2748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   status = RTC_EnterInitMode(hrtc);
 4326              		.loc 1 2748 12 discriminator 2
 4327 0036 7868     		ldr	r0, [r7, #4]
 4328 0038 FFF7FEFF 		bl	RTC_EnterInitMode
 4329 003c 0346     		mov	r3, r0
 4330 003e FB73     		strb	r3, [r7, #15]
2749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (status == HAL_OK)
 4331              		.loc 1 2749 6 discriminator 2
 4332 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4333 0042 002B     		cmp	r3, #0
 4334 0044 0CD1     		bne	.L185
2750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_DISABLE(hrtc);
 4335              		.loc 1 2751 5
 4336 0046 7B68     		ldr	r3, [r7, #4]
 4337 0048 1B68     		ldr	r3, [r3]
 4338 004a 9A68     		ldr	r2, [r3, #8]
 4339 004c 7B68     		ldr	r3, [r7, #4]
 4340 004e 1B68     		ldr	r3, [r3]
 4341 0050 22F01002 		bic	r2, r2, #16
 4342 0054 9A60     		str	r2, [r3, #8]
2752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
2754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     status = RTC_ExitInitMode(hrtc);
 4343              		.loc 1 2754 14
 4344 0056 7868     		ldr	r0, [r7, #4]
 4345 0058 FFF7FEFF 		bl	RTC_ExitInitMode
 4346 005c 0346     		mov	r3, r0
 4347 005e FB73     		strb	r3, [r7, #15]
 4348              	.L185:
2755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 4349              		.loc 1 2758 3
 4350 0060 7B68     		ldr	r3, [r7, #4]
 4351 0062 1B68     		ldr	r3, [r3]
 4352 0064 FF22     		movs	r2, #255
 4353 0066 5A62     		str	r2, [r3, #36]
2759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (status == HAL_OK)
ARM GAS  /tmp/ccUKMyjJ.s 			page 125


 4354              		.loc 1 2760 6
 4355 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4356 006a 002B     		cmp	r3, #0
 4357 006c 03D1     		bne	.L186
2761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Change RTC state */
2763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_READY;
 4358              		.loc 1 2763 17
 4359 006e 7B68     		ldr	r3, [r7, #4]
 4360 0070 0122     		movs	r2, #1
 4361 0072 83F82120 		strb	r2, [r3, #33]
 4362              	.L186:
2764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 4363              		.loc 1 2768 3
 4364 0076 7B68     		ldr	r3, [r7, #4]
 4365 0078 0022     		movs	r2, #0
 4366 007a 83F82020 		strb	r2, [r3, #32]
2769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 4367              		.loc 1 2770 10
 4368 007e 0023     		movs	r3, #0
 4369              	.L184:
2771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 4370              		.loc 1 2771 1
 4371 0080 1846     		mov	r0, r3
 4372 0082 1037     		adds	r7, r7, #16
 4373              	.LCFI223:
 4374              		.cfi_def_cfa_offset 8
 4375 0084 BD46     		mov	sp, r7
 4376              	.LCFI224:
 4377              		.cfi_def_cfa_register 13
 4378              		@ sp needed
 4379 0086 80BD     		pop	{r7, pc}
 4380              		.cfi_endproc
 4381              	.LFE370:
 4383              		.section	.text.HAL_RTCEx_EnableBypassShadow,"ax",%progbits
 4384              		.align	1
 4385              		.global	HAL_RTCEx_EnableBypassShadow
 4386              		.syntax unified
 4387              		.thumb
 4388              		.thumb_func
 4389              		.fpu fpv5-d16
 4391              	HAL_RTCEx_EnableBypassShadow:
 4392              	.LFB371:
2772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Enable the Bypass Shadow feature.
2775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken
2776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
2777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_EnableBypassShadow(RTC_HandleTypeDef * hrtc)
ARM GAS  /tmp/ccUKMyjJ.s 			page 126


2781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 4393              		.loc 1 2781 1
 4394              		.cfi_startproc
 4395              		@ args = 0, pretend = 0, frame = 8
 4396              		@ frame_needed = 1, uses_anonymous_args = 0
 4397              		@ link register save eliminated.
 4398 0000 80B4     		push	{r7}
 4399              	.LCFI225:
 4400              		.cfi_def_cfa_offset 4
 4401              		.cfi_offset 7, -4
 4402 0002 83B0     		sub	sp, sp, #12
 4403              	.LCFI226:
 4404              		.cfi_def_cfa_offset 16
 4405 0004 00AF     		add	r7, sp, #0
 4406              	.LCFI227:
 4407              		.cfi_def_cfa_register 7
 4408 0006 7860     		str	r0, [r7, #4]
2782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 4409              		.loc 1 2783 3
 4410 0008 7B68     		ldr	r3, [r7, #4]
 4411 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 4412 000e 012B     		cmp	r3, #1
 4413 0010 01D1     		bne	.L188
 4414              		.loc 1 2783 3 is_stmt 0 discriminator 1
 4415 0012 0223     		movs	r3, #2
 4416 0014 24E0     		b	.L189
 4417              	.L188:
 4418              		.loc 1 2783 3 discriminator 2
 4419 0016 7B68     		ldr	r3, [r7, #4]
 4420 0018 0122     		movs	r2, #1
 4421 001a 83F82020 		strb	r2, [r3, #32]
2784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 4422              		.loc 1 2785 15 is_stmt 1 discriminator 2
 4423 001e 7B68     		ldr	r3, [r7, #4]
 4424 0020 0222     		movs	r2, #2
 4425 0022 83F82120 		strb	r2, [r3, #33]
2786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 4426              		.loc 1 2788 3 discriminator 2
 4427 0026 7B68     		ldr	r3, [r7, #4]
 4428 0028 1B68     		ldr	r3, [r3]
 4429 002a CA22     		movs	r2, #202
 4430 002c 5A62     		str	r2, [r3, #36]
 4431 002e 7B68     		ldr	r3, [r7, #4]
 4432 0030 1B68     		ldr	r3, [r3]
 4433 0032 5322     		movs	r2, #83
 4434 0034 5A62     		str	r2, [r3, #36]
2789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set the BYPSHAD bit */
2791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint8_t)RTC_CR_BYPSHAD;
 4435              		.loc 1 2791 7 discriminator 2
 4436 0036 7B68     		ldr	r3, [r7, #4]
 4437 0038 1B68     		ldr	r3, [r3]
 4438              		.loc 1 2791 22 discriminator 2
ARM GAS  /tmp/ccUKMyjJ.s 			page 127


 4439 003a 9A68     		ldr	r2, [r3, #8]
 4440              		.loc 1 2791 7 discriminator 2
 4441 003c 7B68     		ldr	r3, [r7, #4]
 4442 003e 1B68     		ldr	r3, [r3]
 4443              		.loc 1 2791 22 discriminator 2
 4444 0040 42F02002 		orr	r2, r2, #32
 4445 0044 9A60     		str	r2, [r3, #8]
2792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 4446              		.loc 1 2794 3 discriminator 2
 4447 0046 7B68     		ldr	r3, [r7, #4]
 4448 0048 1B68     		ldr	r3, [r3]
 4449 004a FF22     		movs	r2, #255
 4450 004c 5A62     		str	r2, [r3, #36]
2795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 4451              		.loc 1 2797 15 discriminator 2
 4452 004e 7B68     		ldr	r3, [r7, #4]
 4453 0050 0122     		movs	r2, #1
 4454 0052 83F82120 		strb	r2, [r3, #33]
2798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 4455              		.loc 1 2800 3 discriminator 2
 4456 0056 7B68     		ldr	r3, [r7, #4]
 4457 0058 0022     		movs	r2, #0
 4458 005a 83F82020 		strb	r2, [r3, #32]
2801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 4459              		.loc 1 2802 10 discriminator 2
 4460 005e 0023     		movs	r3, #0
 4461              	.L189:
2803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 4462              		.loc 1 2803 1
 4463 0060 1846     		mov	r0, r3
 4464 0062 0C37     		adds	r7, r7, #12
 4465              	.LCFI228:
 4466              		.cfi_def_cfa_offset 4
 4467 0064 BD46     		mov	sp, r7
 4468              	.LCFI229:
 4469              		.cfi_def_cfa_register 13
 4470              		@ sp needed
 4471 0066 5DF8047B 		ldr	r7, [sp], #4
 4472              	.LCFI230:
 4473              		.cfi_restore 7
 4474              		.cfi_def_cfa_offset 0
 4475 006a 7047     		bx	lr
 4476              		.cfi_endproc
 4477              	.LFE371:
 4479              		.section	.text.HAL_RTCEx_DisableBypassShadow,"ax",%progbits
 4480              		.align	1
 4481              		.global	HAL_RTCEx_DisableBypassShadow
 4482              		.syntax unified
 4483              		.thumb
 4484              		.thumb_func
ARM GAS  /tmp/ccUKMyjJ.s 			page 128


 4485              		.fpu fpv5-d16
 4487              	HAL_RTCEx_DisableBypassShadow:
 4488              	.LFB372:
2804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Disable the Bypass Shadow feature.
2807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken
2808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
2809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DisableBypassShadow(RTC_HandleTypeDef * hrtc)
2813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 4489              		.loc 1 2813 1
 4490              		.cfi_startproc
 4491              		@ args = 0, pretend = 0, frame = 8
 4492              		@ frame_needed = 1, uses_anonymous_args = 0
 4493              		@ link register save eliminated.
 4494 0000 80B4     		push	{r7}
 4495              	.LCFI231:
 4496              		.cfi_def_cfa_offset 4
 4497              		.cfi_offset 7, -4
 4498 0002 83B0     		sub	sp, sp, #12
 4499              	.LCFI232:
 4500              		.cfi_def_cfa_offset 16
 4501 0004 00AF     		add	r7, sp, #0
 4502              	.LCFI233:
 4503              		.cfi_def_cfa_register 7
 4504 0006 7860     		str	r0, [r7, #4]
2814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 4505              		.loc 1 2815 3
 4506 0008 7B68     		ldr	r3, [r7, #4]
 4507 000a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 4508 000e 012B     		cmp	r3, #1
 4509 0010 01D1     		bne	.L191
 4510              		.loc 1 2815 3 is_stmt 0 discriminator 1
 4511 0012 0223     		movs	r3, #2
 4512 0014 24E0     		b	.L192
 4513              	.L191:
 4514              		.loc 1 2815 3 discriminator 2
 4515 0016 7B68     		ldr	r3, [r7, #4]
 4516 0018 0122     		movs	r2, #1
 4517 001a 83F82020 		strb	r2, [r3, #32]
2816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 4518              		.loc 1 2817 15 is_stmt 1 discriminator 2
 4519 001e 7B68     		ldr	r3, [r7, #4]
 4520 0020 0222     		movs	r2, #2
 4521 0022 83F82120 		strb	r2, [r3, #33]
2818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 4522              		.loc 1 2820 3 discriminator 2
 4523 0026 7B68     		ldr	r3, [r7, #4]
 4524 0028 1B68     		ldr	r3, [r3]
 4525 002a CA22     		movs	r2, #202
ARM GAS  /tmp/ccUKMyjJ.s 			page 129


 4526 002c 5A62     		str	r2, [r3, #36]
 4527 002e 7B68     		ldr	r3, [r7, #4]
 4528 0030 1B68     		ldr	r3, [r3]
 4529 0032 5322     		movs	r2, #83
 4530 0034 5A62     		str	r2, [r3, #36]
2821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Reset the BYPSHAD bit */
2823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= ((uint8_t)~RTC_CR_BYPSHAD);
 4531              		.loc 1 2823 7 discriminator 2
 4532 0036 7B68     		ldr	r3, [r7, #4]
 4533 0038 1B68     		ldr	r3, [r3]
 4534              		.loc 1 2823 22 discriminator 2
 4535 003a 9A68     		ldr	r2, [r3, #8]
 4536              		.loc 1 2823 7 discriminator 2
 4537 003c 7B68     		ldr	r3, [r7, #4]
 4538 003e 1B68     		ldr	r3, [r3]
 4539              		.loc 1 2823 22 discriminator 2
 4540 0040 02F0DF02 		and	r2, r2, #223
 4541 0044 9A60     		str	r2, [r3, #8]
2824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 4542              		.loc 1 2826 3 discriminator 2
 4543 0046 7B68     		ldr	r3, [r7, #4]
 4544 0048 1B68     		ldr	r3, [r3]
 4545 004a FF22     		movs	r2, #255
 4546 004c 5A62     		str	r2, [r3, #36]
2827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 4547              		.loc 1 2829 15 discriminator 2
 4548 004e 7B68     		ldr	r3, [r7, #4]
 4549 0050 0122     		movs	r2, #1
 4550 0052 83F82120 		strb	r2, [r3, #33]
2830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 4551              		.loc 1 2832 3 discriminator 2
 4552 0056 7B68     		ldr	r3, [r7, #4]
 4553 0058 0022     		movs	r2, #0
 4554 005a 83F82020 		strb	r2, [r3, #32]
2833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 4555              		.loc 1 2834 10 discriminator 2
 4556 005e 0023     		movs	r3, #0
 4557              	.L192:
2835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 4558              		.loc 1 2835 1
 4559 0060 1846     		mov	r0, r3
 4560 0062 0C37     		adds	r7, r7, #12
 4561              	.LCFI234:
 4562              		.cfi_def_cfa_offset 4
 4563 0064 BD46     		mov	sp, r7
 4564              	.LCFI235:
 4565              		.cfi_def_cfa_register 13
 4566              		@ sp needed
 4567 0066 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccUKMyjJ.s 			page 130


 4568              	.LCFI236:
 4569              		.cfi_restore 7
 4570              		.cfi_def_cfa_offset 0
 4571 006a 7047     		bx	lr
 4572              		.cfi_endproc
 4573              	.LFE372:
 4575              		.section	.text.HAL_RTCEx_AlarmBEventCallback,"ax",%progbits
 4576              		.align	1
 4577              		.weak	HAL_RTCEx_AlarmBEventCallback
 4578              		.syntax unified
 4579              		.thumb
 4580              		.thumb_func
 4581              		.fpu fpv5-d16
 4583              	HAL_RTCEx_AlarmBEventCallback:
 4584              	.LFB373:
2836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_COUNTR)
2838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Increment Monotonic counter.
2840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Instance  Monotonic counter Instance
2842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         This parameter can be can be one of the following values :
2843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           @arg RTC_MONOTONIC_COUNTER_1
2844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_MonotonicCounterIncrement(RTC_HandleTypeDef *hrtc,  uint32_t Instance)
2847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
2848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
2849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(Instance);
2850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* This register is read-only only and is incremented by one when a write access is done to this
2851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****      register. This register cannot roll-over and is frozen when reaching the maximum value. */
2852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_REG(TAMP->COUNTR);
2853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
2855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
2856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Monotonic counter incrementation.
2859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Instance  Monotonic counter Instance
2861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         This parameter can be can be one of the following values :
2862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           @arg RTC_MONOTONIC_COUNTER_1
2863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Counter monotonic counter value
2864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_MonotonicCounterGet(RTC_HandleTypeDef *hrtc, uint32_t *Counter,  uint32
2867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
2868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
2869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(Instance);
2870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* This register is read-only only and is incremented by one when a write access is done to this
2871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****      register. This register cannot roll-over and is frozen when reaching the maximum value. */
2872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *Counter = READ_REG(TAMP->COUNTR);
2873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
2875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
2876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_COUNTR */
2877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccUKMyjJ.s 			page 131


2878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
2880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group4
2883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief    Extended features functions
2884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
2885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
2886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
2887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                  ##### Extended features functions #####
2888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
2889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     [..]  This section provides functions allowing to:
2890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) RTC Alarm B callback
2891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) RTC Poll for Alarm B request
2892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
2894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
2895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Alarm B callback.
2899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
2901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_AlarmBEventCallback(RTC_HandleTypeDef * hrtc)
2903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 4585              		.loc 1 2903 1
 4586              		.cfi_startproc
 4587              		@ args = 0, pretend = 0, frame = 8
 4588              		@ frame_needed = 1, uses_anonymous_args = 0
 4589              		@ link register save eliminated.
 4590 0000 80B4     		push	{r7}
 4591              	.LCFI237:
 4592              		.cfi_def_cfa_offset 4
 4593              		.cfi_offset 7, -4
 4594 0002 83B0     		sub	sp, sp, #12
 4595              	.LCFI238:
 4596              		.cfi_def_cfa_offset 16
 4597 0004 00AF     		add	r7, sp, #0
 4598              	.LCFI239:
 4599              		.cfi_def_cfa_register 7
 4600 0006 7860     		str	r0, [r7, #4]
2904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
2905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
2906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_AlarmBEventCallback could be implemented in the user file
2909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
2910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 4601              		.loc 1 2910 1
 4602 0008 00BF     		nop
 4603 000a 0C37     		adds	r7, r7, #12
 4604              	.LCFI240:
 4605              		.cfi_def_cfa_offset 4
 4606 000c BD46     		mov	sp, r7
 4607              	.LCFI241:
 4608              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccUKMyjJ.s 			page 132


 4609              		@ sp needed
 4610 000e 5DF8047B 		ldr	r7, [sp], #4
 4611              	.LCFI242:
 4612              		.cfi_restore 7
 4613              		.cfi_def_cfa_offset 0
 4614 0012 7047     		bx	lr
 4615              		.cfi_endproc
 4616              	.LFE373:
 4618              		.section	.text.HAL_RTCEx_PollForAlarmBEvent,"ax",%progbits
 4619              		.align	1
 4620              		.global	HAL_RTCEx_PollForAlarmBEvent
 4621              		.syntax unified
 4622              		.thumb
 4623              		.thumb_func
 4624              		.fpu fpv5-d16
 4626              	HAL_RTCEx_PollForAlarmBEvent:
 4627              	.LFB374:
2911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Alarm B Polling request.
2914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
2916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForAlarmBEvent(RTC_HandleTypeDef * hrtc, uint32_t Timeout)
2919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 4628              		.loc 1 2919 1
 4629              		.cfi_startproc
 4630              		@ args = 0, pretend = 0, frame = 16
 4631              		@ frame_needed = 1, uses_anonymous_args = 0
 4632 0000 80B5     		push	{r7, lr}
 4633              	.LCFI243:
 4634              		.cfi_def_cfa_offset 8
 4635              		.cfi_offset 7, -8
 4636              		.cfi_offset 14, -4
 4637 0002 84B0     		sub	sp, sp, #16
 4638              	.LCFI244:
 4639              		.cfi_def_cfa_offset 24
 4640 0004 00AF     		add	r7, sp, #0
 4641              	.LCFI245:
 4642              		.cfi_def_cfa_register 7
 4643 0006 7860     		str	r0, [r7, #4]
 4644 0008 3960     		str	r1, [r7]
2920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 4645              		.loc 1 2920 24
 4646 000a FFF7FEFF 		bl	HAL_GetTick
 4647 000e F860     		str	r0, [r7, #12]
2921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) == 0U)
 4648              		.loc 1 2922 9
 4649 0010 14E0     		b	.L195
 4650              	.L198:
2923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 4651              		.loc 1 2924 8
 4652 0012 3B68     		ldr	r3, [r7]
 4653 0014 B3F1FF3F 		cmp	r3, #-1
ARM GAS  /tmp/ccUKMyjJ.s 			page 133


 4654 0018 10D0     		beq	.L195
2925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 4655              		.loc 1 2926 13
 4656 001a FFF7FEFF 		bl	HAL_GetTick
 4657 001e 0246     		mov	r2, r0
 4658              		.loc 1 2926 27
 4659 0020 FB68     		ldr	r3, [r7, #12]
 4660 0022 D31A     		subs	r3, r2, r3
 4661              		.loc 1 2926 10
 4662 0024 3A68     		ldr	r2, [r7]
 4663 0026 9A42     		cmp	r2, r3
 4664 0028 02D3     		bcc	.L196
 4665              		.loc 1 2926 51 discriminator 1
 4666 002a 3B68     		ldr	r3, [r7]
 4667 002c 002B     		cmp	r3, #0
 4668 002e 05D1     		bne	.L195
 4669              	.L196:
2927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
2928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 4670              		.loc 1 2928 21
 4671 0030 7B68     		ldr	r3, [r7, #4]
 4672 0032 0322     		movs	r2, #3
 4673 0034 83F82120 		strb	r2, [r3, #33]
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 4674              		.loc 1 2929 16
 4675 0038 0323     		movs	r3, #3
 4676 003a 14E0     		b	.L197
 4677              	.L195:
2922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 4678              		.loc 1 2922 10
 4679 003c 7B68     		ldr	r3, [r7, #4]
 4680 003e 1B68     		ldr	r3, [r3]
 4681 0040 DB68     		ldr	r3, [r3, #12]
 4682 0042 03F40073 		and	r3, r3, #512
2922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 4683              		.loc 1 2922 9
 4684 0046 002B     		cmp	r3, #0
 4685 0048 E3D0     		beq	.L198
2930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
2931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Alarm Flag */
2935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
 4686              		.loc 1 2935 3
 4687 004a 7B68     		ldr	r3, [r7, #4]
 4688 004c 1B68     		ldr	r3, [r3]
 4689 004e DB68     		ldr	r3, [r3, #12]
 4690 0050 DAB2     		uxtb	r2, r3
 4691 0052 7B68     		ldr	r3, [r7, #4]
 4692 0054 1B68     		ldr	r3, [r3]
 4693 0056 62F42072 		orn	r2, r2, #640
 4694 005a DA60     		str	r2, [r3, #12]
2936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
ARM GAS  /tmp/ccUKMyjJ.s 			page 134


 4695              		.loc 1 2938 15
 4696 005c 7B68     		ldr	r3, [r7, #4]
 4697 005e 0122     		movs	r2, #1
 4698 0060 83F82120 		strb	r2, [r3, #33]
2939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 4699              		.loc 1 2940 10
 4700 0064 0023     		movs	r3, #0
 4701              	.L197:
2941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 4702              		.loc 1 2941 1
 4703 0066 1846     		mov	r0, r3
 4704 0068 1037     		adds	r7, r7, #16
 4705              	.LCFI246:
 4706              		.cfi_def_cfa_offset 8
 4707 006a BD46     		mov	sp, r7
 4708              	.LCFI247:
 4709              		.cfi_def_cfa_register 13
 4710              		@ sp needed
 4711 006c 80BD     		pop	{r7, pc}
 4712              		.cfi_endproc
 4713              	.LFE374:
 4715              		.text
 4716              	.Letext0:
 4717              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 4718              		.file 3 "./Libraries/CMSIS/Core/Include/core_cm7.h"
 4719              		.file 4 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 4720              		.file 5 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 4721              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 4722              		.file 7 "/usr/include/newlib/sys/_types.h"
 4723              		.file 8 "/usr/include/newlib/sys/reent.h"
 4724              		.file 9 "/usr/include/newlib/sys/lock.h"
 4725              		.file 10 "/usr/include/newlib/math.h"
 4726              		.file 11 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 4727              		.file 12 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 4728              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rtc.h"
 4729              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rtc_ex.h"
 4730              		.file 15 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 4731              		.file 16 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccUKMyjJ.s 			page 135


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_rtc_ex.c
     /tmp/ccUKMyjJ.s:17     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 $t
     /tmp/ccUKMyjJ.s:25     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 HAL_RTCEx_SetTimeStamp
     /tmp/ccUKMyjJ.s:133    .text.HAL_RTCEx_SetTimeStamp:000000000000008c $d
     /tmp/ccUKMyjJ.s:138    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 $t
     /tmp/ccUKMyjJ.s:145    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 HAL_RTCEx_SetTimeStamp_IT
     /tmp/ccUKMyjJ.s:266    .text.HAL_RTCEx_SetTimeStamp_IT:00000000000000ac $d
     /tmp/ccUKMyjJ.s:271    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 $t
     /tmp/ccUKMyjJ.s:278    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 HAL_RTCEx_DeactivateTimeStamp
     /tmp/ccUKMyjJ.s:378    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000080 $d
     /tmp/ccUKMyjJ.s:383    .text.HAL_RTCEx_SetInternalTimeStamp:0000000000000000 $t
     /tmp/ccUKMyjJ.s:390    .text.HAL_RTCEx_SetInternalTimeStamp:0000000000000000 HAL_RTCEx_SetInternalTimeStamp
     /tmp/ccUKMyjJ.s:476    .text.HAL_RTCEx_DeactivateInternalTimeStamp:0000000000000000 $t
     /tmp/ccUKMyjJ.s:483    .text.HAL_RTCEx_DeactivateInternalTimeStamp:0000000000000000 HAL_RTCEx_DeactivateInternalTimeStamp
     /tmp/ccUKMyjJ.s:569    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 $t
     /tmp/ccUKMyjJ.s:576    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 HAL_RTCEx_GetTimeStamp
     /tmp/ccUKMyjJ.s:792    .text.HAL_RTCEx_GetTimeStamp:0000000000000144 $d
     /tmp/ccUKMyjJ.s:799    .text.HAL_RTCEx_SetTamper:0000000000000000 $t
     /tmp/ccUKMyjJ.s:806    .text.HAL_RTCEx_SetTamper:0000000000000000 HAL_RTCEx_SetTamper
     /tmp/ccUKMyjJ.s:1127   .text.HAL_RTCEx_SetTamper:00000000000001bc $d
     /tmp/ccUKMyjJ.s:1132   .text.HAL_RTCEx_SetTamper_IT:0000000000000000 $t
     /tmp/ccUKMyjJ.s:1139   .text.HAL_RTCEx_SetTamper_IT:0000000000000000 HAL_RTCEx_SetTamper_IT
     /tmp/ccUKMyjJ.s:1473   .text.HAL_RTCEx_SetTamper_IT:00000000000001d4 $d
     /tmp/ccUKMyjJ.s:1478   .text.HAL_RTCEx_DeactivateTamper:0000000000000000 $t
     /tmp/ccUKMyjJ.s:1485   .text.HAL_RTCEx_DeactivateTamper:0000000000000000 HAL_RTCEx_DeactivateTamper
     /tmp/ccUKMyjJ.s:1620   .text.HAL_RTCEx_DeactivateTamper:00000000000000a8 $d
     /tmp/ccUKMyjJ.s:1627   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 $t
     /tmp/ccUKMyjJ.s:1634   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 HAL_RTCEx_TamperTimeStampIRQHandler
     /tmp/ccUKMyjJ.s:1823   .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 HAL_RTCEx_TimeStampEventCallback
     /tmp/ccUKMyjJ.s:1866   .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 HAL_RTCEx_Tamper1EventCallback
     /tmp/ccUKMyjJ.s:1909   .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 HAL_RTCEx_Tamper2EventCallback
     /tmp/ccUKMyjJ.s:1952   .text.HAL_RTCEx_Tamper3EventCallback:0000000000000000 HAL_RTCEx_Tamper3EventCallback
     /tmp/ccUKMyjJ.s:1806   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000104 $d
     /tmp/ccUKMyjJ.s:1816   .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 $t
     /tmp/ccUKMyjJ.s:1859   .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 $t
     /tmp/ccUKMyjJ.s:1902   .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 $t
     /tmp/ccUKMyjJ.s:1945   .text.HAL_RTCEx_Tamper3EventCallback:0000000000000000 $t
     /tmp/ccUKMyjJ.s:1988   .text.HAL_RTCEx_InternalTamper1EventCallback:0000000000000000 $t
     /tmp/ccUKMyjJ.s:1995   .text.HAL_RTCEx_InternalTamper1EventCallback:0000000000000000 HAL_RTCEx_InternalTamper1EventCallback
     /tmp/ccUKMyjJ.s:2031   .text.HAL_RTCEx_InternalTamper2EventCallback:0000000000000000 $t
     /tmp/ccUKMyjJ.s:2038   .text.HAL_RTCEx_InternalTamper2EventCallback:0000000000000000 HAL_RTCEx_InternalTamper2EventCallback
     /tmp/ccUKMyjJ.s:2074   .text.HAL_RTCEx_InternalTamper3EventCallback:0000000000000000 $t
     /tmp/ccUKMyjJ.s:2081   .text.HAL_RTCEx_InternalTamper3EventCallback:0000000000000000 HAL_RTCEx_InternalTamper3EventCallback
     /tmp/ccUKMyjJ.s:2117   .text.HAL_RTCEx_InternalTamper4EventCallback:0000000000000000 $t
     /tmp/ccUKMyjJ.s:2124   .text.HAL_RTCEx_InternalTamper4EventCallback:0000000000000000 HAL_RTCEx_InternalTamper4EventCallback
     /tmp/ccUKMyjJ.s:2160   .text.HAL_RTCEx_InternalTamper5EventCallback:0000000000000000 $t
     /tmp/ccUKMyjJ.s:2167   .text.HAL_RTCEx_InternalTamper5EventCallback:0000000000000000 HAL_RTCEx_InternalTamper5EventCallback
     /tmp/ccUKMyjJ.s:2203   .text.HAL_RTCEx_InternalTamper6EventCallback:0000000000000000 $t
     /tmp/ccUKMyjJ.s:2210   .text.HAL_RTCEx_InternalTamper6EventCallback:0000000000000000 HAL_RTCEx_InternalTamper6EventCallback
     /tmp/ccUKMyjJ.s:2246   .text.HAL_RTCEx_InternalTamper8EventCallback:0000000000000000 $t
     /tmp/ccUKMyjJ.s:2253   .text.HAL_RTCEx_InternalTamper8EventCallback:0000000000000000 HAL_RTCEx_InternalTamper8EventCallback
     /tmp/ccUKMyjJ.s:2289   .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 $t
     /tmp/ccUKMyjJ.s:2296   .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 HAL_RTCEx_PollForTimeStampEvent
     /tmp/ccUKMyjJ.s:2402   .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 $t
     /tmp/ccUKMyjJ.s:2409   .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 HAL_RTCEx_PollForTamper1Event
     /tmp/ccUKMyjJ.s:2499   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 $t
ARM GAS  /tmp/ccUKMyjJ.s 			page 136


     /tmp/ccUKMyjJ.s:2506   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 HAL_RTCEx_PollForTamper2Event
     /tmp/ccUKMyjJ.s:2596   .text.HAL_RTCEx_PollForTamper3Event:0000000000000000 $t
     /tmp/ccUKMyjJ.s:2603   .text.HAL_RTCEx_PollForTamper3Event:0000000000000000 HAL_RTCEx_PollForTamper3Event
     /tmp/ccUKMyjJ.s:2693   .text.HAL_RTCEx_PollForTamper3Event:0000000000000070 $d
     /tmp/ccUKMyjJ.s:2698   .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 $t
     /tmp/ccUKMyjJ.s:2705   .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 HAL_RTCEx_SetWakeUpTimer
     /tmp/ccUKMyjJ.s:2869   .text.HAL_RTCEx_SetWakeUpTimer:00000000000000f0 $d
     /tmp/ccUKMyjJ.s:2874   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 $t
     /tmp/ccUKMyjJ.s:2881   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 HAL_RTCEx_SetWakeUpTimer_IT
     /tmp/ccUKMyjJ.s:3061   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000110 $d
     /tmp/ccUKMyjJ.s:3066   .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 $t
     /tmp/ccUKMyjJ.s:3073   .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 HAL_RTCEx_DeactivateWakeUpTimer
     /tmp/ccUKMyjJ.s:3203   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 $t
     /tmp/ccUKMyjJ.s:3210   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 HAL_RTCEx_GetWakeUpTimer
     /tmp/ccUKMyjJ.s:3253   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 $t
     /tmp/ccUKMyjJ.s:3260   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 HAL_RTCEx_WakeUpTimerIRQHandler
     /tmp/ccUKMyjJ.s:3346   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 HAL_RTCEx_WakeUpTimerEventCallback
     /tmp/ccUKMyjJ.s:3333   .text.HAL_RTCEx_WakeUpTimerIRQHandler:000000000000005c $d
     /tmp/ccUKMyjJ.s:3339   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 $t
     /tmp/ccUKMyjJ.s:3382   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 $t
     /tmp/ccUKMyjJ.s:3389   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 HAL_RTCEx_PollForWakeUpTimerEvent
     /tmp/ccUKMyjJ.s:3479   .text.HAL_RTCEx_BKUPWrite:0000000000000000 $t
     /tmp/ccUKMyjJ.s:3486   .text.HAL_RTCEx_BKUPWrite:0000000000000000 HAL_RTCEx_BKUPWrite
     /tmp/ccUKMyjJ.s:3543   .text.HAL_RTCEx_BKUPRead:0000000000000000 $t
     /tmp/ccUKMyjJ.s:3550   .text.HAL_RTCEx_BKUPRead:0000000000000000 HAL_RTCEx_BKUPRead
     /tmp/ccUKMyjJ.s:3605   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 $t
     /tmp/ccUKMyjJ.s:3612   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 HAL_RTCEx_SetSmoothCalib
     /tmp/ccUKMyjJ.s:3756   .text.HAL_RTCEx_SetSmoothCalib:00000000000000cc $d
     /tmp/ccUKMyjJ.s:3761   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 $t
     /tmp/ccUKMyjJ.s:3768   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 HAL_RTCEx_SetSynchroShift
     /tmp/ccUKMyjJ.s:3956   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 $t
     /tmp/ccUKMyjJ.s:3963   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 HAL_RTCEx_SetCalibrationOutPut
     /tmp/ccUKMyjJ.s:4073   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 $t
     /tmp/ccUKMyjJ.s:4080   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 HAL_RTCEx_DeactivateCalibrationOutPut
     /tmp/ccUKMyjJ.s:4166   .text.HAL_RTCEx_SetRefClock:0000000000000000 $t
     /tmp/ccUKMyjJ.s:4173   .text.HAL_RTCEx_SetRefClock:0000000000000000 HAL_RTCEx_SetRefClock
     /tmp/ccUKMyjJ.s:4275   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 $t
     /tmp/ccUKMyjJ.s:4282   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 HAL_RTCEx_DeactivateRefClock
     /tmp/ccUKMyjJ.s:4384   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 $t
     /tmp/ccUKMyjJ.s:4391   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 HAL_RTCEx_EnableBypassShadow
     /tmp/ccUKMyjJ.s:4480   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 $t
     /tmp/ccUKMyjJ.s:4487   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 HAL_RTCEx_DisableBypassShadow
     /tmp/ccUKMyjJ.s:4576   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 $t
     /tmp/ccUKMyjJ.s:4583   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 HAL_RTCEx_AlarmBEventCallback
     /tmp/ccUKMyjJ.s:4619   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 $t
     /tmp/ccUKMyjJ.s:4626   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 HAL_RTCEx_PollForAlarmBEvent

UNDEFINED SYMBOLS
RTC_Bcd2ToByte
HAL_GetCurrentCPUID
HAL_GetTick
HAL_RTC_WaitForSynchro
RTC_EnterInitMode
RTC_ExitInitMode
