ARM GAS  /tmp/cc2ZRuSH.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_shift_q7.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_shift_q7,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	arm_shift_q7
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_shift_q7:
  27              	.LVL0:
  28              	.LFB145:
  29              		.file 1 "./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c"
   1:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * Title:        arm_shift_q7.c
   4:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * Description:  Processing function for the Q7 Shifting
   5:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  *
   6:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  *
   9:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** /*
  12:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  *
  14:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  *
  16:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  *
  20:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  *
  22:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  */
  28:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
  29:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** #include "arm_math.h"
ARM GAS  /tmp/cc2ZRuSH.s 			page 2


  30:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
  31:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** /**
  32:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   @ingroup groupMath
  33:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  */
  34:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
  35:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** /**
  36:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   @addtogroup BasicShift
  37:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  */
  39:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
  40:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** /**
  41:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   @brief         Shifts the elements of a Q7 vector a specified number of bits
  42:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   @param[in]     pSrc       points to the input vector
  43:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   @param[in]     shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
  44:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   @param[out]    pDst       points to the output vector
  45:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   @param[in]     blockSize  number of samples in each vector
  46:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   @return        none
  47:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
  48:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   @par           onditions for optimum performance
  49:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****                    Input and output buffers should be aligned by 32-bit
  50:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   @par           Scaling and Overflow Behavior
  51:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****                    The function uses saturating arithmetic.
  52:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****                    Results outside of the allowable Q7 range [0x80 0x7F] are saturated.
  53:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****  */
  54:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
  55:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** void arm_shift_q7(
  56:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   const q7_t * pSrc,
  57:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****         int8_t shiftBits,
  58:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****         q7_t * pDst,
  59:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****         uint32_t blockSize)
  60:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** {
  30              		.loc 1 60 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  61:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****         uint32_t blkCnt;                               /* Loop counter */
  35              		.loc 1 61 9 view .LVU1
  62:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****         uint8_t sign = (shiftBits & 0x80);             /* Sign of shiftBits */
  36              		.loc 1 62 9 view .LVU2
  63:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
  64:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** #if defined (ARM_MATH_LOOPUNROLL)
  65:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
  66:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** #if defined (ARM_MATH_DSP)
  67:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   q7_t in1,  in2,  in3,  in4;                    /* Temporary input variables */
  68:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** #endif
  69:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
  70:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   /* Loop unrolling: Compute 4 outputs at a time */
  71:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   blkCnt = blockSize >> 2U;
  72:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
  73:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   /* If the shift value is positive then do right shift else left shift */
  74:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   if (sign == 0U)
  75:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   {
  76:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     while (blkCnt > 0U)
  77:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     {
  78:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       /* C = A << shiftBits */
  79:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
ARM GAS  /tmp/cc2ZRuSH.s 			page 3


  80:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** #if defined (ARM_MATH_DSP)
  81:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       /* Read 4 inputs */
  82:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       in1 = *pSrc++;
  83:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       in2 = *pSrc++;
  84:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       in3 = *pSrc++;
  85:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       in4 = *pSrc++;
  86:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
  87:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     /* Pack and store result in destination buffer (in single write) */
  88:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       write_q7x4_ia (&pDst, __PACKq7(__SSAT((in1 << shiftBits), 8),
  89:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****                                      __SSAT((in2 << shiftBits), 8),
  90:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****                                      __SSAT((in3 << shiftBits), 8),
  91:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****                                      __SSAT((in4 << shiftBits), 8) ));
  92:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** #else
  93:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       *pDst++ = (q7_t) __SSAT(((q15_t) *pSrc++ << shiftBits), 8);
  94:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       *pDst++ = (q7_t) __SSAT(((q15_t) *pSrc++ << shiftBits), 8);
  95:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       *pDst++ = (q7_t) __SSAT(((q15_t) *pSrc++ << shiftBits), 8);
  96:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       *pDst++ = (q7_t) __SSAT(((q15_t) *pSrc++ << shiftBits), 8);
  97:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** #endif
  98:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
  99:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       /* Decrement loop counter */
 100:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       blkCnt--;
 101:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     }
 102:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   }
 103:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   else
 104:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   {
 105:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     while (blkCnt > 0U)
 106:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     {
 107:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       /* C = A >> shiftBits */
 108:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
 109:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** #if defined (ARM_MATH_DSP)
 110:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       /* Read 4 inputs */
 111:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       in1 = *pSrc++;
 112:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       in2 = *pSrc++;
 113:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       in3 = *pSrc++;
 114:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       in4 = *pSrc++;
 115:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
 116:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     /* Pack and store result in destination buffer (in single write) */
 117:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       write_q7x4_ia (&pDst, __PACKq7((in1 >> -shiftBits),
 118:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****                                      (in2 >> -shiftBits),
 119:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****                                      (in3 >> -shiftBits),
 120:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****                                      (in4 >> -shiftBits) ));
 121:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** #else
 122:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       *pDst++ = (*pSrc++ >> -shiftBits);
 123:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       *pDst++ = (*pSrc++ >> -shiftBits);
 124:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       *pDst++ = (*pSrc++ >> -shiftBits);
 125:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       *pDst++ = (*pSrc++ >> -shiftBits);
 126:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** #endif
 127:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
 128:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       /* Decrement loop counter */
 129:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       blkCnt--;
 130:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     }
 131:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   }
 132:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
 133:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   /* Loop unrolling: Compute remaining outputs */
 134:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   blkCnt = blockSize % 0x4U;
 135:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
 136:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** #else
ARM GAS  /tmp/cc2ZRuSH.s 			page 4


 137:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
 138:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   /* Initialize blkCnt with number of samples */
 139:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   blkCnt = blockSize;
  37              		.loc 1 139 3 view .LVU3
 140:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
 141:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 142:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
 143:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   /* If the shift value is positive then do right shift else left shift */
 144:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   if (sign == 0U)
  38              		.loc 1 144 3 view .LVU4
  39              		.loc 1 144 6 is_stmt 0 view .LVU5
  40 0000 0029     		cmp	r1, #0
  41              	.LVL1:
  60:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****         uint32_t blkCnt;                               /* Loop counter */
  42              		.loc 1 60 1 view .LVU6
  43 0002 10B4     		push	{r4}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 4
  46              		.cfi_offset 4, -4
  47              		.loc 1 144 6 view .LVU7
  48 0004 0EDB     		blt	.L14
 145:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   {
 146:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     while (blkCnt > 0U)
  49              		.loc 1 146 11 is_stmt 1 view .LVU8
  50 0006 53B1     		cbz	r3, .L1
  51 0008 C418     		adds	r4, r0, r3
  52              	.LVL2:
  53              	.L5:
 147:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     {
 148:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       /* C = A << shiftBits */
 149:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
 150:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       /* Shift input and store result in destination buffer. */
 151:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       *pDst++ = (q7_t) __SSAT(((q15_t) *pSrc++ << shiftBits), 8);
  54              		.loc 1 151 7 view .LVU9
  55              	.LBB2:
  56              		.loc 1 151 24 view .LVU10
  57              		.loc 1 151 24 view .LVU11
  58 000a 10F9013B 		ldrsb	r3, [r0], #1
  59              	.LVL3:
  60              		.loc 1 151 24 is_stmt 0 view .LVU12
  61              	.LBE2:
 146:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     {
  62              		.loc 1 146 11 view .LVU13
  63 000e 8442     		cmp	r4, r0
  64              	.LBB3:
  65              		.loc 1 151 24 view .LVU14
  66 0010 03FA01F3 		lsl	r3, r3, r1
  67              	.LVL4:
  68              		.loc 1 151 24 view .LVU15
  69              		.syntax unified
  70              	@ 151 "./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c" 1
  71 0014 03F30703 		ssat r3, #8, r3
  72              	@ 0 "" 2
  73              	.LVL5:
  74              		.loc 1 151 24 is_stmt 1 view .LVU16
  75              		.loc 1 151 24 is_stmt 0 view .LVU17
  76              		.thumb
ARM GAS  /tmp/cc2ZRuSH.s 			page 5


  77              		.syntax unified
  78              	.LBE3:
  79              		.loc 1 151 17 view .LVU18
  80 0018 02F8013B 		strb	r3, [r2], #1
  81              	.LVL6:
 152:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
 153:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       /* Decrement loop counter */
 154:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       blkCnt--;
  82              		.loc 1 154 7 is_stmt 1 view .LVU19
 146:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     {
  83              		.loc 1 146 11 view .LVU20
  84 001c F5D1     		bne	.L5
  85              	.LVL7:
  86              	.L1:
 155:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     }
 156:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   }
 157:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   else
 158:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   {
 159:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     while (blkCnt > 0U)
 160:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     {
 161:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       /* C = A >> shiftBits */
 162:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
 163:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       /* Shift input and store result in destination buffer. */
 164:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       *pDst++ = (*pSrc++ >> -shiftBits);
 165:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
 166:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       /* Decrement loop counter */
 167:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****       blkCnt--;
 168:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     }
 169:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****   }
 170:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
 171:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** }
  87              		.loc 1 171 1 is_stmt 0 view .LVU21
  88 001e 5DF8044B 		ldr	r4, [sp], #4
  89              	.LCFI1:
  90              		.cfi_remember_state
  91              		.cfi_restore 4
  92              		.cfi_def_cfa_offset 0
  93 0022 7047     		bx	lr
  94              	.LVL8:
  95              	.L14:
  96              	.LCFI2:
  97              		.cfi_restore_state
 159:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     {
  98              		.loc 1 159 11 is_stmt 1 view .LVU22
  99 0024 002B     		cmp	r3, #0
 100 0026 FAD0     		beq	.L1
 101 0028 4942     		rsbs	r1, r1, #0
 102 002a C418     		adds	r4, r0, r3
 103              	.LVL9:
 104              	.L6:
 164:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
 105              		.loc 1 164 7 view .LVU23
 164:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
 106              		.loc 1 164 18 is_stmt 0 view .LVU24
 107 002c 10F9013B 		ldrsb	r3, [r0], #1
 108              	.LVL10:
 164:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
ARM GAS  /tmp/cc2ZRuSH.s 			page 6


 109              		.loc 1 164 26 view .LVU25
 110 0030 0B41     		asrs	r3, r3, r1
 159:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     {
 111              		.loc 1 159 11 view .LVU26
 112 0032 A042     		cmp	r0, r4
 164:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c **** 
 113              		.loc 1 164 15 view .LVU27
 114 0034 02F8013B 		strb	r3, [r2], #1
 115              	.LVL11:
 167:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     }
 116              		.loc 1 167 7 is_stmt 1 view .LVU28
 159:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q7.c ****     {
 117              		.loc 1 159 11 view .LVU29
 118 0038 F8D1     		bne	.L6
 119              		.loc 1 171 1 is_stmt 0 view .LVU30
 120 003a 5DF8044B 		ldr	r4, [sp], #4
 121              	.LCFI3:
 122              		.cfi_restore 4
 123              		.cfi_def_cfa_offset 0
 124 003e 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE145:
 128              		.text
 129              	.Letext0:
 130              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 131              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 132              		.file 4 "/usr/include/newlib/sys/_types.h"
 133              		.file 5 "/usr/include/newlib/sys/reent.h"
 134              		.file 6 "/usr/include/newlib/sys/lock.h"
 135              		.file 7 "/usr/include/newlib/math.h"
 136              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/cc2ZRuSH.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_shift_q7.c
     /tmp/cc2ZRuSH.s:17     .text.arm_shift_q7:0000000000000000 $t
     /tmp/cc2ZRuSH.s:26     .text.arm_shift_q7:0000000000000000 arm_shift_q7

NO UNDEFINED SYMBOLS
