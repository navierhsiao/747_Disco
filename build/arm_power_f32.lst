ARM GAS  /tmp/ccRvOkC3.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_power_f32.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_power_f32,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	arm_power_f32
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_power_f32:
  27              	.LVL0:
  28              	.LFB145:
  29              		.file 1 "./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c"
   1:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * Title:        arm_power_f32.c
   4:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * Description:  Sum of the squares of the elements of a floating-point vector
   5:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  *
   6:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  *
   9:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** /*
  12:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  *
  14:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  *
  16:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  *
  20:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  *
  22:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  */
  28:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  29:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** #include "arm_math.h"
ARM GAS  /tmp/ccRvOkC3.s 			page 2


  30:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  31:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** /**
  32:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @ingroup groupStats
  33:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  */
  34:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  35:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** /**
  36:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @defgroup power Power
  37:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  38:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   Calculates the sum of the squares of the elements in the input vector.
  39:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   The underlying algorithm is used:
  40:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  41:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   <pre>
  42:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****       Result = pSrc[0] * pSrc[0] + pSrc[1] * pSrc[1] + pSrc[2] * pSrc[2] + ... + pSrc[blockSize-1] 
  43:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   </pre>
  44:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  45:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   There are separate functions for floating point, Q31, Q15, and Q7 data types.
  46:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  */
  47:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  48:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** /**
  49:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @addtogroup power
  50:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @{
  51:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  */
  52:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  53:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** /**
  54:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @brief         Sum of the squares of the elements of a floating-point vector.
  55:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @param[in]     pSrc       points to the input vector
  56:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @param[in]     blockSize  number of samples in input vector
  57:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @param[out]    pResult    sum of the squares value returned here
  58:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @return        none
  59:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****  */
  60:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** #if defined(ARM_MATH_NEON)
  61:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** void arm_power_f32(
  62:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   const float32_t * pSrc,
  63:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   uint32_t blockSize,
  64:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   float32_t * pResult)
  65:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** {
  66:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   float32_t sum = 0.0f;                          /* accumulator */
  67:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   float32_t in;                                  /* Temporary variable to store input value */
  68:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  69:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  70:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   float32x4_t sumV = vdupq_n_f32(0.0f);                          /* Temporary result storage */
  71:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   float32x2_t sumV2;
  72:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   float32x4_t inV;
  73:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  74:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize >> 2U;
  75:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  76:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   /* Compute 4 outputs at a time.
  77:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  78:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   while (blkCnt > 0U)
  79:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   {
  80:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* C = A[0] * A[0] + A[1] * A[1] + A[2] * A[2] + ... + A[blockSize-1] * A[blockSize-1] */
  81:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* Compute Power and then store the result in a temporary variable, sum. */
  82:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     inV = vld1q_f32(pSrc);
  83:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     sumV = vmlaq_f32(sumV, inV, inV);
  84:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     pSrc += 4;
  85:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  86:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* Decrement the loop counter */
ARM GAS  /tmp/ccRvOkC3.s 			page 3


  87:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     blkCnt--;
  88:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   }
  89:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   sumV2 = vpadd_f32(vget_low_f32(sumV),vget_high_f32(sumV));
  90:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   sum = sumV2[0] + sumV2[1];
  91:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  92:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
  93:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****    ** No loop unrolling is used. */
  94:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize % 0x4U;
  95:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  96:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   while (blkCnt > 0U)
  97:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   {
  98:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* C = A[0] * A[0] + A[1] * A[1] + A[2] * A[2] + ... + A[blockSize-1] * A[blockSize-1] */
  99:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* compute power and then store the result in a temporary variable, sum. */
 100:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
 101:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
 102:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 103:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* Decrement the loop counter */
 104:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     blkCnt--;
 105:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   }
 106:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 107:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   /* Store the result to the destination */
 108:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   *pResult = sum;
 109:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** }
 110:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** #else
 111:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** void arm_power_f32(
 112:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   const float32_t * pSrc,
 113:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****         uint32_t blockSize,
 114:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****         float32_t * pResult)
 115:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** {
  30              		.loc 1 115 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 116:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****         uint32_t blkCnt;                               /* Loop counter */
  35              		.loc 1 116 9 view .LVU1
 117:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****         float32_t sum = 0.0f;                          /* Temporary result storage */
  36              		.loc 1 117 9 view .LVU2
 118:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****         float32_t in;                                  /* Temporary variable to store input value *
  37              		.loc 1 118 9 view .LVU3
 119:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 120:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 121:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 122:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 123:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize >> 2U;
 124:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 125:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   while (blkCnt > 0U)
 126:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   {
 127:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* C = A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1] */
 128:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 129:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* Compute Power and store result in a temporary variable, sum. */
 130:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
 131:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
 132:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 133:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
 134:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
 135:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
ARM GAS  /tmp/ccRvOkC3.s 			page 4


 136:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
 137:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
 138:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 139:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
 140:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
 141:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 142:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* Decrement loop counter */
 143:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     blkCnt--;
 144:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   }
 145:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 146:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   /* Loop unrolling: Compute remaining outputs */
 147:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize % 0x4U;
 148:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 149:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** #else
 150:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 151:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   /* Initialize blkCnt with number of samples */
 152:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize;
  38              		.loc 1 152 3 view .LVU4
 153:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 154:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 155:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 156:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   while (blkCnt > 0U)
  39              		.loc 1 156 3 view .LVU5
  40              		.loc 1 156 9 view .LVU6
 117:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****         float32_t in;                                  /* Temporary variable to store input value *
  41              		.loc 1 117 19 is_stmt 0 view .LVU7
  42 0000 9FED057A 		vldr.32	s14, .L7
  43              		.loc 1 156 9 view .LVU8
  44 0004 29B1     		cbz	r1, .L2
  45              	.LVL1:
  46              	.L3:
 157:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   {
 158:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* C = A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1] */
 159:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 160:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* Compute Power and store result in a temporary variable, sum. */
 161:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  47              		.loc 1 161 5 is_stmt 1 view .LVU9
  48              		.loc 1 161 8 is_stmt 0 view .LVU10
  49 0006 F0EC017A 		vldmia.32	r0!, {s15}
  50              	.LVL2:
 162:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
  51              		.loc 1 162 5 is_stmt 1 view .LVU11
 156:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   {
  52              		.loc 1 156 9 is_stmt 0 view .LVU12
  53 000a 0139     		subs	r1, r1, #1
  54              	.LVL3:
  55              		.loc 1 162 9 view .LVU13
  56 000c A7EEA77A 		vfma.f32	s14, s15, s15
  57              	.LVL4:
 163:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 164:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* Decrement loop counter */
 165:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****     blkCnt--;
  58              		.loc 1 165 5 is_stmt 1 view .LVU14
 156:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   {
  59              		.loc 1 156 9 view .LVU15
  60 0010 F9D1     		bne	.L3
  61              	.LVL5:
ARM GAS  /tmp/ccRvOkC3.s 			page 5


  62              	.L2:
 166:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   }
 167:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 168:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   /* Store result to destination */
 169:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c ****   *pResult = sum;
  63              		.loc 1 169 3 view .LVU16
  64              		.loc 1 169 12 is_stmt 0 view .LVU17
  65 0012 82ED007A 		vstr.32	s14, [r2]
 170:./Libraries/CMSIS/DSP/Source/StatisticsFunctions/arm_power_f32.c **** }
  66              		.loc 1 170 1 view .LVU18
  67 0016 7047     		bx	lr
  68              	.L8:
  69              		.align	2
  70              	.L7:
  71 0018 00000000 		.word	0
  72              		.cfi_endproc
  73              	.LFE145:
  75              		.text
  76              	.Letext0:
  77              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
  78              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
  79              		.file 4 "/usr/include/newlib/sys/_types.h"
  80              		.file 5 "/usr/include/newlib/sys/reent.h"
  81              		.file 6 "/usr/include/newlib/sys/lock.h"
  82              		.file 7 "/usr/include/newlib/math.h"
  83              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/ccRvOkC3.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_power_f32.c
     /tmp/ccRvOkC3.s:17     .text.arm_power_f32:0000000000000000 $t
     /tmp/ccRvOkC3.s:26     .text.arm_power_f32:0000000000000000 arm_power_f32
     /tmp/ccRvOkC3.s:71     .text.arm_power_f32:0000000000000018 $d

NO UNDEFINED SYMBOLS
